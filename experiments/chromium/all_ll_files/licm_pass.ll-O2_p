; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/licm_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/licm_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::LICMPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.spvtools::opt::PostOrderTreeDFIterator" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack" }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.982" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"class.std::__1::__compressed_pair.977" }
%"struct.std::__1::pair.976" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.986" }
%"class.std::__1::__wrap_iter.986" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.976"** }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.939", %"class.std::__1::vector.963" }
%"class.std::__1::unordered_map.939" = type { %"class.std::__1::__hash_table.940" }
%"class.std::__1::__hash_table.940" = type <{ %"class.std::__1::unique_ptr.941", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.959", [4 x i8] }>
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943", %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.944"** }
%"struct.std::__1::__hash_node_base.944" = type { %"struct.std::__1::__hash_node_base.944"* }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.std::__1::__bucket_list_deallocator.946" }
%"class.std::__1::__bucket_list_deallocator.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.944" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.963" = type { %"class.std::__1::__vector_base.964" }
%"class.std::__1::__vector_base.964" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.971" }
%"struct.std::__1::pair" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.965" }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.989" }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.994" = type { %"class.std::__1::__function::__policy_func.998" }
%"class.std::__1::__function::__policy_func.998" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.999", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.999" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1000", %"class.std::__1::map.1007", i8, [7 x i8] }>
%"class.std::__1::vector.1000" = type { %"class.std::__1::__vector_base.1001" }
%"class.std::__1::__vector_base.1001" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1002" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1000", i32, i32 }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1007" = type { %"class.std::__1::__tree.1008" }
%"class.std::__1::__tree.1008" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1027" }
%"struct.std::__1::pair.1027" = type { i32, %"struct.spvtools::opt::DominatorTreeNode" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::tuple.1032" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.1017" = type { %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.978", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::allocator.980"* }
%"class.std::__1::allocator.980" = type { i8 }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::Loop"**, i8* }

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt8LICMPassD0Ev = comdat any

$_ZNK8spvtools3opt8LICMPass4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt8LICMPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::LICMPass"*)* @_ZN8spvtools3opt8LICMPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::LICMPass"*)* @_ZNK8spvtools3opt8LICMPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::LICMPass"*)* @_ZN8spvtools3opt8LICMPass7ProcessEv to i8*)] }, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"loop-invariant-code-motion\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt8LICMPass7ProcessEv(%"class.spvtools::opt::LICMPass"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %24, label %11

11:                                               ; preds = %1, %11
  %12 = phi i32 [ %18, %11 ], [ 17, %1 ]
  %13 = phi %"class.std::__1::unique_ptr.28"* [ %19, %11 ], [ %7, %1 ]
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %14, align 8
  %16 = tail call i32 @_ZN8spvtools3opt8LICMPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Function"* %15) #10
  %17 = icmp slt i32 %16, %12
  %18 = select i1 %17, i32 %16, i32 %12
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %13, i64 1
  %20 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %21 = icmp ne %"class.std::__1::unique_ptr.28"* %19, %20
  %22 = icmp ne i32 %18, 0
  %23 = and i1 %21, %22
  br i1 %23, label %11, label %24

24:                                               ; preds = %11, %1
  %25 = phi i32 [ 17, %1 ], [ %18, %11 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt8LICMPass16ProcessIRContextEv(%"class.spvtools::opt::LICMPass"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %5, i64 0, i32 15, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.28"* %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %13, %1
  %12 = phi i32 [ 17, %1 ], [ %20, %13 ]
  ret i32 %12

13:                                               ; preds = %1, %13
  %14 = phi i32 [ %20, %13 ], [ 17, %1 ]
  %15 = phi %"class.std::__1::unique_ptr.28"* [ %21, %13 ], [ %7, %1 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %18 = tail call i32 @_ZN8spvtools3opt8LICMPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Function"* %17)
  %19 = icmp slt i32 %18, %14
  %20 = select i1 %19, i32 %18, i32 %14
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %15, i64 1
  %22 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %8, align 8
  %23 = icmp ne %"class.std::__1::unique_ptr.28"* %21, %22
  %24 = icmp ne i32 %20, 0
  %25 = and i1 %24, %23
  br i1 %25, label %13, label %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt8LICMPass15ProcessFunctionEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %5, %"class.spvtools::opt::Function"* %1) #10
  %7 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %6, i64 0, i32 1
  %9 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %8, %"class.spvtools::opt::Loop"** %9, align 8, !alias.scope !2
  %10 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1
  %11 = bitcast %"class.std::__1::stack"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #10, !alias.scope !2
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %6, i64 0, i32 1, i32 7, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %12, align 8, !noalias !2
  %14 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %6, i64 0, i32 1, i32 7, i32 0, i32 1
  %15 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %14, align 8, !noalias !2
  %16 = icmp eq %"class.spvtools::opt::Loop"** %13, %15
  br i1 %16, label %86, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast %"struct.std::__1::pair.976"*** %18 to i64*
  %20 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair.976"*** %20 to i64*
  %22 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0
  %25 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %3 to i64*
  br label %26

26:                                               ; preds = %79, %17
  %27 = phi i64 [ 0, %17 ], [ %82, %79 ]
  %28 = phi i64 [ 0, %17 ], [ %81, %79 ]
  %29 = phi i64 [ 0, %17 ], [ %80, %79 ]
  %30 = phi i64 [ 0, %17 ], [ %67, %79 ]
  %31 = phi %"class.spvtools::opt::Loop"** [ %13, %17 ], [ %75, %79 ]
  %32 = phi %"class.spvtools::opt::Loop"* [ %8, %17 ], [ %73, %79 ]
  %33 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, i64 1
  %34 = sub i64 %29, %28
  %35 = icmp eq i64 %34, 0
  %36 = shl i64 %34, 5
  %37 = add i64 %36, -1
  %38 = select i1 %35, i64 0, i64 %37
  %39 = add i64 %30, %27
  %40 = icmp eq i64 %38, %39
  %41 = inttoptr i64 %28 to %"struct.std::__1::pair.976"**
  %42 = inttoptr i64 %29 to %"struct.std::__1::pair.976"**
  br i1 %40, label %43, label %49

43:                                               ; preds = %26
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %24) #10
  %44 = load i64, i64* %23, align 8, !alias.scope !2
  %45 = load i64, i64* %22, align 8, !alias.scope !2
  %46 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %20, align 8, !alias.scope !2
  %47 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %18, align 8, !alias.scope !2
  %48 = add i64 %45, %44
  br label %49

49:                                               ; preds = %43, %26
  %50 = phi i64 [ %48, %43 ], [ %39, %26 ]
  %51 = phi %"struct.std::__1::pair.976"** [ %47, %43 ], [ %42, %26 ]
  %52 = phi %"struct.std::__1::pair.976"** [ %46, %43 ], [ %41, %26 ]
  %53 = icmp eq %"struct.std::__1::pair.976"** %51, %52
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = lshr i64 %50, 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %52, i64 %55
  %57 = load %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %56, align 8
  %58 = and i64 %50, 255
  %59 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %57, i64 %58
  %60 = bitcast %"struct.std::__1::pair.976"* %59 to i8*
  br label %61

61:                                               ; preds = %54, %49
  %62 = phi i8* [ %60, %54 ], [ null, %49 ]
  %63 = bitcast i8* %62 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %32, %"class.spvtools::opt::Loop"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 8
  %65 = bitcast i8* %64 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %33, %"class.spvtools::opt::Loop"*** %65, align 8
  %66 = load i64, i64* %23, align 8, !alias.scope !2
  %67 = add i64 %66, 1
  store i64 %67, i64* %23, align 8, !alias.scope !2
  %68 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8, !alias.scope !2
  %69 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %68, i64 0, i32 7, i32 0, i32 0
  %70 = bitcast %"class.spvtools::opt::Loop"*** %69 to i64**
  %71 = load i64*, i64** %70, align 8
  %72 = load i64, i64* %71, align 8
  store i64 %72, i64* %25, align 8, !alias.scope !2
  %73 = inttoptr i64 %72 to %"class.spvtools::opt::Loop"*
  %74 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %73, i64 0, i32 7, i32 0, i32 0
  %75 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %74, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %73, i64 0, i32 7, i32 0, i32 1
  %77 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %76, align 8
  %78 = icmp eq %"class.spvtools::opt::Loop"** %75, %77
  br i1 %78, label %83, label %79

79:                                               ; preds = %61
  %80 = load i64, i64* %19, align 8, !alias.scope !2
  %81 = load i64, i64* %21, align 8, !alias.scope !2
  %82 = load i64, i64* %22, align 8, !alias.scope !2
  br label %26

83:                                               ; preds = %61
  %84 = inttoptr i64 %72 to %"class.spvtools::opt::Loop"*
  %85 = icmp eq %"class.spvtools::opt::Loop"* %8, %84
  br i1 %85, label %86, label %185

86:                                               ; preds = %195, %2, %83
  %87 = phi i32 [ 17, %83 ], [ 17, %2 ], [ %196, %195 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %89 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %88, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = lshr i64 %91, 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 %92
  %94 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %95 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %94, align 8
  %96 = icmp eq %"struct.std::__1::pair.976"** %95, %89
  %97 = ptrtoint %"struct.std::__1::pair.976"** %95 to i64
  %98 = ptrtoint %"struct.std::__1::pair.976"** %89 to i64
  br i1 %96, label %99, label %101

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %114

101:                                              ; preds = %86
  %102 = load %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %93, align 8
  %103 = and i64 %91, 255
  %104 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %102, i64 %103
  %105 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %91
  %108 = lshr i64 %107, 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 %108
  %110 = load %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %109, align 8
  %111 = and i64 %107, 255
  %112 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %110, i64 %111
  %113 = icmp eq %"struct.std::__1::pair.976"* %112, %104
  br i1 %113, label %114, label %120

114:                                              ; preds = %133, %101, %99
  %115 = phi i64* [ %100, %99 ], [ %105, %101 ], [ %105, %133 ]
  store i64 0, i64* %115, align 8
  %116 = bitcast %"struct.std::__1::pair.976"*** %94 to i64*
  %117 = sub i64 %97, %98
  %118 = ashr exact i64 %117, 3
  %119 = icmp ugt i64 %118, 2
  br i1 %119, label %138, label %151

120:                                              ; preds = %101, %133
  %121 = phi %"struct.std::__1::pair.976"* [ %136, %133 ], [ %104, %101 ]
  %122 = phi %"struct.std::__1::pair.976"** [ %135, %133 ], [ %93, %101 ]
  %123 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %121, i64 1
  %124 = ptrtoint %"struct.std::__1::pair.976"* %123 to i64
  %125 = bitcast %"struct.std::__1::pair.976"** %122 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = icmp eq i64 %127, 4096
  br i1 %128, label %129, label %133

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %122, i64 1
  %131 = bitcast %"struct.std::__1::pair.976"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  br label %133

133:                                              ; preds = %129, %120
  %134 = phi i64 [ %132, %129 ], [ %124, %120 ]
  %135 = phi %"struct.std::__1::pair.976"** [ %130, %129 ], [ %122, %120 ]
  %136 = inttoptr i64 %134 to %"struct.std::__1::pair.976"*
  %137 = icmp eq %"struct.std::__1::pair.976"* %112, %136
  br i1 %137, label %114, label %120

138:                                              ; preds = %114, %138
  %139 = phi %"struct.std::__1::pair.976"** [ %143, %138 ], [ %89, %114 ]
  %140 = bitcast %"struct.std::__1::pair.976"** %139 to i8**
  %141 = load i8*, i8** %140, align 8
  call void @_ZdlPv(i8* %141) #11
  %142 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %88, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %142, i64 1
  store %"struct.std::__1::pair.976"** %143, %"struct.std::__1::pair.976"*** %88, align 8
  %144 = load i64, i64* %116, align 8
  %145 = ptrtoint %"struct.std::__1::pair.976"** %143 to i64
  %146 = sub i64 %144, %145
  %147 = ashr exact i64 %146, 3
  %148 = icmp ugt i64 %147, 2
  br i1 %148, label %138, label %149

149:                                              ; preds = %138
  %150 = inttoptr i64 %144 to %"struct.std::__1::pair.976"**
  br label %151

151:                                              ; preds = %149, %114
  %152 = phi %"struct.std::__1::pair.976"** [ %95, %114 ], [ %150, %149 ]
  %153 = phi %"struct.std::__1::pair.976"** [ %89, %114 ], [ %143, %149 ]
  %154 = phi i64 [ %118, %114 ], [ %147, %149 ]
  switch i64 %154, label %158 [
    i64 1, label %156
    i64 2, label %155
  ]

155:                                              ; preds = %151
  br label %156

156:                                              ; preds = %151, %155
  %157 = phi i64 [ 256, %155 ], [ 128, %151 ]
  store i64 %157, i64* %90, align 8
  br label %158

158:                                              ; preds = %156, %151
  %159 = icmp eq %"struct.std::__1::pair.976"** %153, %152
  br i1 %159, label %178, label %160

160:                                              ; preds = %158, %160
  %161 = phi %"struct.std::__1::pair.976"** [ %164, %160 ], [ %153, %158 ]
  %162 = bitcast %"struct.std::__1::pair.976"** %161 to i8**
  %163 = load i8*, i8** %162, align 8
  call void @_ZdlPv(i8* %163) #11
  %164 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %161, i64 1
  %165 = icmp eq %"struct.std::__1::pair.976"** %164, %152
  br i1 %165, label %166, label %160

166:                                              ; preds = %160
  %167 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %88, align 8
  %168 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %94, align 8
  %169 = icmp eq %"struct.std::__1::pair.976"** %168, %167
  br i1 %169, label %178, label %170

170:                                              ; preds = %166
  %171 = ptrtoint %"struct.std::__1::pair.976"** %167 to i64
  %172 = getelementptr %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %168, i64 -1
  %173 = ptrtoint %"struct.std::__1::pair.976"** %172 to i64
  %174 = sub i64 %173, %171
  %175 = lshr i64 %174, 3
  %176 = xor i64 %175, -1
  %177 = getelementptr %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %168, i64 %176
  store %"struct.std::__1::pair.976"** %177, %"struct.std::__1::pair.976"*** %94, align 8
  br label %178

178:                                              ; preds = %170, %166, %158
  %179 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %180 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %179, align 8
  %181 = icmp eq %"struct.std::__1::pair.976"** %180, null
  br i1 %181, label %184, label %182

182:                                              ; preds = %178
  %183 = bitcast %"struct.std::__1::pair.976"** %180 to i8*
  call void @_ZdlPv(i8* %183) #11
  br label %184

184:                                              ; preds = %178, %182
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #10
  ret i32 %87

185:                                              ; preds = %83, %195
  %186 = phi %"class.spvtools::opt::Loop"* [ %197, %195 ], [ %84, %83 ]
  %187 = phi i32 [ %196, %195 ], [ 17, %83 ]
  %188 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %186, i64 0, i32 6
  %189 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %188, align 8
  %190 = icmp eq %"class.spvtools::opt::Loop"* %189, null
  br i1 %190, label %191, label %195

191:                                              ; preds = %185
  %192 = call i32 @_ZN8spvtools3opt8LICMPass11ProcessLoopEPNS0_4LoopEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Loop"* %186, %"class.spvtools::opt::Function"* %1)
  %193 = icmp slt i32 %192, %187
  %194 = select i1 %193, i32 %192, i32 %187
  br label %195

195:                                              ; preds = %185, %191
  %196 = phi i32 [ %194, %191 ], [ %187, %185 ]
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"* nonnull %3) #10
  %197 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %9, align 8
  %198 = icmp ne %"class.spvtools::opt::Loop"* %197, %8
  %199 = icmp ne i32 %196, 0
  %200 = and i1 %199, %198
  br i1 %200, label %185, label %86
}

declare %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt8LICMPass11ProcessLoopEPNS0_4LoopEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.987", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 1
  %8 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Loop"** %6, %8
  br i1 %9, label %10, label %26

10:                                               ; preds = %26, %3
  %11 = phi i32 [ 17, %3 ], [ %32, %26 ]
  %12 = bitcast %"class.std::__1::vector.987"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %13 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10
  %14 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 1
  %15 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %14, align 8
  %16 = call i32 @_ZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS0_4LoopEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__16vectorIS7_NS8_9allocatorIS7_EEEE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Function"* %2, %"class.spvtools::opt::BasicBlock"* %15, %"class.std::__1::vector.987"* nonnull %4)
  %17 = icmp slt i32 %16, %11
  %18 = select i1 %17, i32 %16, i32 %11
  %19 = bitcast %"class.spvtools::opt::BasicBlock"*** %13 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector.987"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp ne i64 %20, %22
  %24 = icmp ne i32 %18, 0
  %25 = and i1 %24, %23
  br i1 %25, label %45, label %38

26:                                               ; preds = %3, %26
  %27 = phi i32 [ %32, %26 ], [ 17, %3 ]
  %28 = phi %"class.spvtools::opt::Loop"** [ %33, %26 ], [ %6, %3 ]
  %29 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %28, align 8
  %30 = tail call i32 @_ZN8spvtools3opt8LICMPass11ProcessLoopEPNS0_4LoopEPNS0_8FunctionE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Loop"* %29, %"class.spvtools::opt::Function"* %2)
  %31 = icmp slt i32 %30, %27
  %32 = select i1 %31, i32 %30, i32 %27
  %33 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %28, i64 1
  %34 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %7, align 8
  %35 = icmp ne %"class.spvtools::opt::Loop"** %33, %34
  %36 = icmp ne i32 %32, 0
  %37 = and i1 %36, %35
  br i1 %37, label %26, label %10

38:                                               ; preds = %45, %10
  %39 = phi i32 [ %18, %10 ], [ %54, %45 ]
  %40 = phi i64 [ %22, %10 ], [ %57, %45 ]
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  store i64 %40, i64* %19, align 8
  %43 = inttoptr i64 %40 to i8*
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  ret i32 %39

45:                                               ; preds = %10, %45
  %46 = phi i64 [ %57, %45 ], [ %22, %10 ]
  %47 = phi i32 [ %54, %45 ], [ %18, %10 ]
  %48 = phi i64 [ %55, %45 ], [ 0, %10 ]
  %49 = inttoptr i64 %46 to %"class.spvtools::opt::BasicBlock"**
  %50 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %49, i64 %48
  %51 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %50, align 8
  %52 = call i32 @_ZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS0_4LoopEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__16vectorIS7_NS8_9allocatorIS7_EEEE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Function"* %2, %"class.spvtools::opt::BasicBlock"* %51, %"class.std::__1::vector.987"* nonnull %4)
  %53 = icmp slt i32 %52, %47
  %54 = select i1 %53, i32 %52, i32 %47
  %55 = add nuw i64 %48, 1
  %56 = load i64, i64* %19, align 8
  %57 = load i64, i64* %21, align 8
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 3
  %60 = icmp ult i64 %55, %59
  %61 = icmp ne i32 %54, 0
  %62 = and i1 %61, %60
  br i1 %62, label %45, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS0_4LoopEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__16vectorIS7_NS8_9allocatorIS7_EEEE(%"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"* nocapture readonly, %"class.std::__1::vector.987"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.spvtools::opt::Loop"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::function.994", align 8
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #10
  store i8 0, i8* %7, align 1
  %9 = bitcast %"class.std::__1::function.994"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %8, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %8, i64 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %8, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %8, i64 0, i32 0, i32 0, i32 1, i64 0
  %14 = bitcast i8* %13 to i64*
  store i64 -6148914691236517206, i64* %14, align 8
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8LICMPass21AnalyseAndHoistFromBBEPNS3_4LoopEPNS3_8FunctionEPNS3_10BasicBlockEPNS_6vectorISG_NS_9allocatorISG_EEEEE3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %11, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %12, align 8
  %15 = tail call i8* @_Znwm(i64 24) #11, !noalias !7
  %16 = bitcast i8* %15 to %"class.spvtools::opt::LICMPass"**
  store %"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::LICMPass"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %15, i64 8
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %6, %"class.spvtools::opt::Loop"*** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to i8**
  store i8* %7, i8** %20, align 8
  store i8* %15, i8** %10, align 8
  %21 = call zeroext i1 @_ZN8spvtools3opt8LICMPass28IsImmediatelyContainedInLoopEPNS0_4LoopEPNS0_8FunctionEPNS0_10BasicBlockE(%"class.spvtools::opt::LICMPass"* %0, %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Function"* %2, %"class.spvtools::opt::BasicBlock"* %3)
  br i1 %21, label %22, label %66

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"* %24, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %22
  %27 = bitcast i8* %15 to %"class.spvtools::opt::LICMPass"**
  %28 = load %"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::LICMPass"** %27, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 8
  %30 = bitcast i8* %29 to %"class.spvtools::opt::Loop"***
  %31 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %30, align 8
  %32 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %28, i64 0, i32 0, i32 2
  %34 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %33, align 8
  %35 = call zeroext i1 @_ZN8spvtools3opt4Loop22ShouldHoistInstructionEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %32, %"class.spvtools::opt::IRContext"* %34, %"class.spvtools::opt::Instruction"* nonnull %24) #10
  br i1 %35, label %36, label %44

36:                                               ; preds = %26
  %37 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %30, align 8
  %38 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %37, align 8
  %39 = call zeroext i1 @_ZN8spvtools3opt8LICMPass16HoistInstructionEPNS0_4LoopEPNS0_11InstructionE(%"class.spvtools::opt::LICMPass"* %28, %"class.spvtools::opt::Loop"* %38, %"class.spvtools::opt::Instruction"* nonnull %24) #10
  br i1 %39, label %40, label %267

40:                                               ; preds = %36
  %41 = getelementptr inbounds i8, i8* %15, i64 16
  %42 = bitcast i8* %41 to i8**
  %43 = load i8*, i8** %42, align 8
  store i8 1, i8* %43, align 1
  br label %44

44:                                               ; preds = %26, %40, %22
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !12
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %66, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::function.994", %"class.std::__1::function.994"* %8, i64 0, i32 0, i32 0
  br label %54

54:                                               ; preds = %57, %52
  %55 = phi %"class.spvtools::opt::Instruction"* [ %63, %57 ], [ %46, %52 ]
  %56 = icmp eq %"class.spvtools::opt::Instruction"* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 0, i32 1
  %59 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 0, i32 3
  %61 = load i8, i8* %60, align 8, !range !12
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, %"class.spvtools::opt::Instruction"* %59, %"class.spvtools::opt::Instruction"* null
  %64 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %11, align 8
  %65 = call zeroext i1 %64(%"union.std::__1::__function::__policy_storage"* nonnull %53, %"class.spvtools::opt::Instruction"* nonnull %55) #10
  br i1 %65, label %54, label %267

66:                                               ; preds = %54, %44, %5
  %67 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %69 = call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %68, %"class.spvtools::opt::Function"* %2) #10
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %71 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %70, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 4
  %73 = load i8, i8* %72, align 1, !range !12
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %80, label %75

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 3
  %77 = load i8, i8* %76, align 4, !range !12
  %78 = zext i8 %77 to i32
  %79 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %71, i32 %78) #10
  br label %80

80:                                               ; preds = %75, %66
  %81 = phi i32 [ %79, %75 ], [ 0, %66 ]
  %82 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %69, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node"**
  %84 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %83, align 8
  %85 = icmp eq %"class.std::__1::__tree_node"* %84, null
  br i1 %85, label %110, label %86

86:                                               ; preds = %80, %86
  %87 = phi %"class.std::__1::__tree_end_node"* [ %97, %86 ], [ %82, %80 ]
  %88 = phi %"class.std::__1::__tree_node"* [ %98, %86 ], [ %84, %80 ]
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %90, %81
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 1
  %93 = bitcast %"class.std::__1::__tree_node_base"** %92 to %"class.std::__1::__tree_node"**
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::__tree_node"* %88 to %"class.std::__1::__tree_node"**
  %96 = select i1 %91, %"class.std::__1::__tree_node"** %93, %"class.std::__1::__tree_node"** %95
  %97 = select i1 %91, %"class.std::__1::__tree_end_node"* %87, %"class.std::__1::__tree_end_node"* %94
  %98 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %96, align 8
  %99 = icmp eq %"class.std::__1::__tree_node"* %98, null
  br i1 %99, label %100, label %86

100:                                              ; preds = %86
  %101 = icmp eq %"class.std::__1::__tree_end_node"* %97, %82
  br i1 %101, label %110, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 4
  %104 = bitcast %"class.std::__1::__tree_end_node"* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = icmp ugt i32 %105, %81
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %97, i64 5
  %109 = bitcast %"class.std::__1::__tree_end_node"* %108 to %"struct.spvtools::opt::DominatorTreeNode"*
  br label %110

110:                                              ; preds = %80, %100, %102, %107
  %111 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %109, %107 ], [ null, %80 ], [ null, %100 ], [ null, %102 ]
  %112 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %111, i64 0, i32 2, i32 0, i32 0
  %113 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %112, align 8
  %114 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %111, i64 0, i32 2, i32 0, i32 1
  %115 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %114, align 8
  %116 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %113, %115
  br i1 %116, label %124, label %117

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 1
  %119 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %118 to i64*
  %121 = bitcast %"class.std::__1::vector.987"* %4 to i64*
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %119 to i64*
  %123 = getelementptr inbounds %"class.std::__1::vector.987", %"class.std::__1::vector.987"* %4, i64 0, i32 0, i32 0
  br label %128

124:                                              ; preds = %264, %110
  %125 = load i8, i8* %7, align 1, !range !12
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, i32 17, i32 16
  br label %267

128:                                              ; preds = %117, %264
  %129 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %113, %117 ], [ %265, %264 ]
  %130 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %129, align 8
  %131 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %6, align 8
  %132 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %130, i64 0, i32 0
  %133 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %134 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %133, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 4
  %137 = load i8, i8* %136, align 1, !range !12
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %128
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 3
  %141 = load i8, i8* %140, align 4, !range !12
  %142 = zext i8 %141 to i32
  %143 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %135, i32 %142) #10
  br label %144

144:                                              ; preds = %139, %128
  %145 = phi i32 [ %143, %139 ], [ 0, %128 ]
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %131, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %264, label %150

150:                                              ; preds = %144
  %151 = call i64 @llvm.ctpop.i64(i64 %148) #10, !range !13
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = add i64 %148, 4294967295
  %155 = and i64 %154, %146
  br label %160

156:                                              ; preds = %150
  %157 = icmp ugt i64 %148, %146
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %146, %148
  br label %160

160:                                              ; preds = %158, %156, %153
  %161 = phi i64 [ %155, %153 ], [ %159, %158 ], [ %146, %156 ]
  %162 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %131, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %162, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %163, i64 %161
  %165 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.922"* %165, null
  br i1 %166, label %264, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %165, i64 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.922"* %169, null
  br i1 %170, label %264, label %171

171:                                              ; preds = %167
  %172 = add i64 %148, -1
  br label %173

173:                                              ; preds = %194, %171
  %174 = phi %"struct.std::__1::__hash_node_base.922"* [ %169, %171 ], [ %196, %194 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %174, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.922"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, %146
  br i1 %178, label %189, label %179

179:                                              ; preds = %173
  br i1 %152, label %182, label %180

180:                                              ; preds = %179
  %181 = and i64 %177, %172
  br label %186

182:                                              ; preds = %179
  %183 = icmp ult i64 %177, %148
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = urem i64 %177, %148
  br label %186

186:                                              ; preds = %184, %182, %180
  %187 = phi i64 [ %181, %180 ], [ %185, %184 ], [ %177, %182 ]
  %188 = icmp eq i64 %187, %161
  br i1 %188, label %194, label %264

189:                                              ; preds = %173
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %174, i64 2
  %191 = bitcast %"struct.std::__1::__hash_node_base.922"* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, %145
  br i1 %193, label %198, label %194

194:                                              ; preds = %189, %186
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %174, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.922"* %196, null
  br i1 %197, label %264, label %173

198:                                              ; preds = %189
  %199 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %118, align 8
  %200 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %119, align 8
  %201 = icmp eq %"class.spvtools::opt::BasicBlock"** %199, %200
  %202 = ptrtoint %"class.spvtools::opt::BasicBlock"** %200 to i64
  br i1 %201, label %209, label %203

203:                                              ; preds = %198
  %204 = bitcast %"struct.spvtools::opt::DominatorTreeNode"* %130 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = bitcast %"class.spvtools::opt::BasicBlock"** %199 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %199, i64 1
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %207 to i64
  store i64 %208, i64* %120, align 8
  br label %264

209:                                              ; preds = %198
  %210 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %211 = load i64, i64* %121, align 8
  %212 = sub i64 %210, %211
  %213 = ashr exact i64 %212, 3
  %214 = add nsw i64 %213, 1
  %215 = icmp ugt i64 %214, 2305843009213693951
  br i1 %215, label %216, label %218

216:                                              ; preds = %209
  %217 = bitcast %"class.std::__1::vector.987"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %217) #12
  unreachable

218:                                              ; preds = %209
  %219 = sub i64 %202, %211
  %220 = ashr exact i64 %219, 3
  %221 = icmp ult i64 %220, 1152921504606846975
  br i1 %221, label %222, label %230

222:                                              ; preds = %218
  %223 = ashr exact i64 %219, 2
  %224 = icmp ult i64 %223, %214
  %225 = select i1 %224, i64 %214, i64 %223
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %235, label %227

227:                                              ; preds = %222
  %228 = icmp ugt i64 %225, 2305843009213693951
  br i1 %228, label %229, label %230

229:                                              ; preds = %227
  call void @abort() #12
  unreachable

230:                                              ; preds = %227, %218
  %231 = phi i64 [ %225, %227 ], [ 2305843009213693951, %218 ]
  %232 = shl i64 %231, 3
  %233 = call i8* @_Znwm(i64 %232) #11
  %234 = bitcast i8* %233 to %"class.spvtools::opt::BasicBlock"**
  br label %235

235:                                              ; preds = %230, %222
  %236 = phi i64 [ %231, %230 ], [ 0, %222 ]
  %237 = phi %"class.spvtools::opt::BasicBlock"** [ %234, %230 ], [ null, %222 ]
  %238 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %237, i64 %213
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %237, i64 %236
  %240 = ptrtoint %"class.spvtools::opt::BasicBlock"** %239 to i64
  %241 = bitcast %"struct.spvtools::opt::DominatorTreeNode"* %130 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = bitcast %"class.spvtools::opt::BasicBlock"** %238 to i64*
  store i64 %242, i64* %243, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %238, i64 1
  %245 = ptrtoint %"class.spvtools::opt::BasicBlock"** %244 to i64
  %246 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  %247 = load i64, i64* %120, align 8
  %248 = ptrtoint %"class.spvtools::opt::BasicBlock"** %246 to i64
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 3
  %251 = sub nsw i64 0, %250
  %252 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %238, i64 %251
  %253 = ptrtoint %"class.spvtools::opt::BasicBlock"** %252 to i64
  %254 = icmp sgt i64 %249, 0
  br i1 %254, label %255, label %259

255:                                              ; preds = %235
  %256 = bitcast %"class.spvtools::opt::BasicBlock"** %252 to i8*
  %257 = bitcast %"class.spvtools::opt::BasicBlock"** %246 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %256, i8* align 8 %257, i64 %249, i1 false) #10
  %258 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  br label %259

259:                                              ; preds = %255, %235
  %260 = phi %"class.spvtools::opt::BasicBlock"** [ %246, %235 ], [ %258, %255 ]
  store i64 %253, i64* %121, align 8
  store i64 %245, i64* %120, align 8
  store i64 %240, i64* %122, align 8
  %261 = icmp eq %"class.spvtools::opt::BasicBlock"** %260, null
  br i1 %261, label %264, label %262

262:                                              ; preds = %259
  %263 = bitcast %"class.spvtools::opt::BasicBlock"** %260 to i8*
  call void @_ZdlPv(i8* %263) #11
  br label %264

264:                                              ; preds = %186, %194, %167, %144, %160, %262, %259, %203
  %265 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %129, i64 1
  %266 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %265, %115
  br i1 %266, label %124, label %128

267:                                              ; preds = %57, %36, %124
  %268 = phi i32 [ %127, %124 ], [ 0, %36 ], [ 0, %57 ]
  %269 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %270 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %269, i64 0, i32 1
  %271 = load void (i8*)*, void (i8*)** %270, align 8
  %272 = icmp eq void (i8*)* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %267
  %274 = load i8*, i8** %10, align 8
  call void %271(i8* %274) #10
  br label %275

275:                                              ; preds = %267, %273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #10
  ret i32 %268
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8LICMPass28IsImmediatelyContainedInLoopEPNS0_4LoopEPNS0_8FunctionEPNS0_10BasicBlockE(%"class.spvtools::opt::LICMPass"* nocapture readonly, %"class.spvtools::opt::Loop"* readnone, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::LoopDescriptor"* @_ZN8spvtools3opt9IRContext17GetLoopDescriptorEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %6, %"class.spvtools::opt::Function"* %2) #10
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !12
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !12
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #10
  br label %18

18:                                               ; preds = %4, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %4 ]
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %76, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !13
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.944"* %39, null
  br i1 %40, label %76, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.944"* %43, null
  br i1 %44, label %76, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.944"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.944"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %76

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.944"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %19
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.944"* %70, null
  br i1 %71, label %76, label %47

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %48, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.944"* %73 to %"class.spvtools::opt::Loop"**
  %75 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %74, align 8
  br label %76

76:                                               ; preds = %60, %68, %18, %34, %41, %72
  %77 = phi %"class.spvtools::opt::Loop"* [ %75, %72 ], [ null, %34 ], [ null, %18 ], [ null, %41 ], [ null, %68 ], [ null, %60 ]
  %78 = icmp eq %"class.spvtools::opt::Loop"* %77, %1
  ret i1 %78
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt8LICMPass16HoistInstructionEPNS0_4LoopEPNS0_11InstructionE(%"class.spvtools::opt::LICMPass"* nocapture readonly, %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple.1032", align 1
  %6 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %1) #10
  %8 = icmp eq %"class.spvtools::opt::BasicBlock"* %7, null
  br i1 %8, label %69, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8, !noalias !14
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 0, i32 3
  %15 = load i8, i8* %14, align 8, !range !12
  %16 = icmp ne i8 %15, 0
  %17 = icmp eq %"class.spvtools::opt::Instruction"* %13, null
  %18 = or i1 %17, %16
  br i1 %18, label %25, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, -2
  %23 = icmp eq i32 %22, 246
  %24 = select i1 %23, %"class.spvtools::opt::Instruction"* %13, %"class.spvtools::opt::Instruction"* %11
  br label %25

25:                                               ; preds = %19, %9
  %26 = phi %"class.spvtools::opt::Instruction"* [ %11, %9 ], [ %24, %19 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 0, i32 1
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 0, i32 2
  %32 = bitcast %"class.spvtools::opt::Instruction"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 0, i32 2
  %35 = bitcast %"class.spvtools::opt::Instruction"** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.spvtools::opt::Instruction"** %31 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %39 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %39, i64 0, i32 1
  %41 = bitcast %"class.spvtools::opt::Instruction"** %40 to i64*
  store i64 %37, i64* %41, align 8
  %42 = bitcast %"class.spvtools::opt::Instruction"** %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #10
  br label %43

43:                                               ; preds = %25, %30
  store %"class.spvtools::opt::Instruction"* %26, %"class.spvtools::opt::Instruction"** %27, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %26, i64 0, i32 0, i32 2
  %45 = bitcast %"class.spvtools::opt::Instruction"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 0, i32 2
  %48 = bitcast %"class.spvtools::opt::Instruction"** %47 to i64*
  store i64 %46, i64* %48, align 8
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %44, align 8
  %49 = bitcast %"class.spvtools::opt::Instruction"** %47 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %50 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %50, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %51, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 2
  %53 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %52, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %6, align 8
  %55 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 11
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %53, i64 0, i32 9, i32 0
  %61 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %6, %"class.spvtools::opt::Instruction"*** %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::tuple.1032", %"class.std::__1::tuple.1032"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %63) #10
  %64 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %60, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %6, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1032"* nonnull dereferenceable(1) %5) #10
  %65 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %64, 0
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %65, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %63) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  store %"class.spvtools::opt::BasicBlock"* %7, %"class.spvtools::opt::BasicBlock"** %67, align 8
  br label %68

68:                                               ; preds = %43, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  br label %69

69:                                               ; preds = %3, %68
  %70 = phi i1 [ true, %68 ], [ false, %3 ]
  ret i1 %70
}

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8LICMPassD0Ev(%"class.spvtools::opt::LICMPass"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::LICMPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt8LICMPass4nameEv(%"class.spvtools::opt::LICMPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.976"*, align 8
  %3 = alloca %"struct.std::__1::pair.976"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1017", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.976"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %11, i64 1
  store %"struct.std::__1::pair.976"** %14, %"struct.std::__1::pair.976"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.976"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.976"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.976"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.976"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.976"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.976"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.976"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.976"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.976"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.976"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %33, i64 %36
  store %"struct.std::__1::pair.976"** %44, %"struct.std::__1::pair.976"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %43, i64 %32
  store %"struct.std::__1::pair.976"** %45, %"struct.std::__1::pair.976"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.976"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.976"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.976"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.976"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.976"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.976"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.976"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.976"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.976"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.976"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.976"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !17

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.976"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.976"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.976"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.976"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.976"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.976"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.976"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.976"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.976"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.976"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.976"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.976"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.976"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.976"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.976"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.976"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.976"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.976"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.976"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.976"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.976"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.976"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.976"** %70 to i64
  %146 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.976"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.976"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.976"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.976"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.976"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast %"struct.std::__1::pair.976"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %160, i64 1
  store %"struct.std::__1::pair.976"** %161, %"struct.std::__1::pair.976"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.976"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.976"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.976"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.976"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.976"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.976"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4096) #11
  %187 = bitcast %"struct.std::__1::pair.976"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.976"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.976"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4096) #11
  %191 = bitcast %"struct.std::__1::pair.976"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"* %163, %"struct.std::__1::pair.976"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.976"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %192, i64 1
  store %"struct.std::__1::pair.976"** %195, %"struct.std::__1::pair.976"*** %167, align 8
  %196 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %164, align 8
  %197 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.976"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.976"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.976"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.976"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.976"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.976"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.976"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.976"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.976"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.976"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %212, i64 %215
  store %"struct.std::__1::pair.976"** %223, %"struct.std::__1::pair.976"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %222, i64 %211
  store %"struct.std::__1::pair.976"** %224, %"struct.std::__1::pair.976"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.976"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.976"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.976"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.976"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.976"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.976"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.976"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.976"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.976"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.976"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !19

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.976"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.976"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.976"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.976"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.976"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.976"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.976"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.976"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.976"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.976"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.976"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.976"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.976"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.976"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.976"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.976"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.976"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.976"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.976"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.976"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.976"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.976"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.976"** %247 to i64
  %323 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.976"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.976"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.976"** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast %"struct.std::__1::pair.976"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %335, i64 1
  store %"struct.std::__1::pair.976"** %336, %"struct.std::__1::pair.976"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.976"** null, %"struct.std::__1::pair.976"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.980"** %342 to %"class.std::__1::__compressed_pair.977"**
  store %"class.std::__1::__compressed_pair.977"* %346, %"class.std::__1::__compressed_pair.977"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.976"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %354, i64 %171
  store %"struct.std::__1::pair.976"** %356, %"struct.std::__1::pair.976"*** %340, align 8
  store %"struct.std::__1::pair.976"** %356, %"struct.std::__1::pair.976"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %354, i64 %345
  store %"struct.std::__1::pair.976"** %357, %"struct.std::__1::pair.976"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.976"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.976"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.976"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %356, i64 %370
  store %"struct.std::__1::pair.976"** %371, %"struct.std::__1::pair.976"*** %340, align 8
  store %"struct.std::__1::pair.976"** %371, %"struct.std::__1::pair.976"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.976"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.976"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.976"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.976"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.976"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.976"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.976"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %164, align 8
  %395 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.976"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.976"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.976"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.976"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.976"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.976"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %406, i64 1
  store %"struct.std::__1::pair.976"** %408, %"struct.std::__1::pair.976"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.976"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.976"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.976"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.976"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.976"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.976"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1017"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.976"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.976"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.976"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.976"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.976"**
  %442 = icmp eq %"struct.std::__1::pair.976"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.976"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %441, i64 %448
  store %"struct.std::__1::pair.976"** %449, %"struct.std::__1::pair.976"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.976"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1017"* nonnull %4, %"struct.std::__1::pair.976"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.976"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.976"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.976"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.976"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.976"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.976"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.976"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.976"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.976"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.976"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.976"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %23, i64 %26
  store %"struct.std::__1::pair.976"** %34, %"struct.std::__1::pair.976"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %33, i64 %22
  store %"struct.std::__1::pair.976"** %35, %"struct.std::__1::pair.976"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.976"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.976"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.976"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.976"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.976"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.976"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.976"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.976"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.976"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.976"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !20

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.976"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.976"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.976"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.976"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.976"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.976"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.976"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.976"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.976"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.976"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.976"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.976"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.976"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.976"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.976"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.976"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.976"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.976"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.976"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.976"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.976"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.976"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.976"** %60 to i64
  %136 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.976"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.976"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.976"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.976"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.976"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast %"struct.std::__1::pair.976"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.976"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %152, i64 1
  store %"struct.std::__1::pair.976"** %153, %"struct.std::__1::pair.976"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer"*, %"struct.std::__1::pair.976"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.976"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.976"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.976"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.976"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.976"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.976"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.976"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.976"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.976"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.976"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.976"** %36, %"struct.std::__1::pair.976"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %35, i64 %22
  store %"struct.std::__1::pair.976"** %37, %"struct.std::__1::pair.976"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.976"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.976"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.976"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.976"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.976"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.976"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.976"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.976"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !21

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.976"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.976"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.976"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.976"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.976"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.976"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.976"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.976"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.976"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.976"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.976"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.976"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.976"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.976"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.976"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.976"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.976"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.976"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.976"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.976"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.976"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.976"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.976"** %61 to i64
  %137 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.976"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.976"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.976"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.976"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.976"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.976"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.976"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.976"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %153, i64 -1
  store %"struct.std::__1::pair.976"** %154, %"struct.std::__1::pair.976"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1017"*, %"struct.std::__1::pair.976"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.976"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.976"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1017", %"struct.std::__1::__split_buffer.1017"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.976"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.976"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.976"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.976"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.976"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.976"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.976"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.976"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.976"** %36, %"struct.std::__1::pair.976"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %35, i64 %22
  store %"struct.std::__1::pair.976"** %37, %"struct.std::__1::pair.976"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1017"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.976"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.976"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.976"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.976"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.976"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.976"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.976"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.976"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.976"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !22

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.976"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.976"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.976"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.976"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.976"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.976"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.976"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.976"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.976"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.976"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.976"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.976"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.976"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.976"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.976"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.976"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.976"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.976"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.976"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.976"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.976"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.976"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.976"** %61 to i64
  %137 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.976"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.976"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.976"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.976"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.976"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.976"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.976"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.976"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %153, i64 -1
  store %"struct.std::__1::pair.976"** %154, %"struct.std::__1::pair.976"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1032"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !13
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #11, !noalias !23
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !23
  %75 = load i64, i64* %74, align 8, !noalias !23
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !23
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !23
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !23
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !23
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #10, !range !13
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #10
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #10, !range !13
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #10, !range !13
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !13
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !13
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !13
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !26

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !13
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #11
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %19, i64 %20, i32 0
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 7, i32 0, i32 1
  %24 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %19, i64 %20, i32 1, i32 0
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %27 = icmp eq %"class.spvtools::opt::Loop"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.976"** %16 to i64
  %30 = ptrtoint %"class.spvtools::opt::Loop"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.976"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.976"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.976"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #11
  %49 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %49, i64 -1
  store %"struct.std::__1::pair.976"** %50, %"struct.std::__1::pair.976"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"class.spvtools::opt::Loop"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 1
  store %"class.spvtools::opt::Loop"** %56, %"class.spvtools::opt::Loop"*** %25, align 8
  %57 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::Loop"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.976"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.976"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"class.spvtools::opt::Loop"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"class.spvtools::opt::Loop"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.976"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.976"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %67) #10
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %15, align 8
  %90 = load %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.976"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.976"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.976"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.976", %"struct.std::__1::pair.976"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.976"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %72, %"class.spvtools::opt::Loop"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %73, %"class.spvtools::opt::Loop"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %111, i64 0, i32 7, i32 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Loop"*
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::Loop"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_8LICMPass21AnalyseAndHoistFromBBEPNS3_4LoopEPNS3_8FunctionEPNS3_10BasicBlockEPNS_6vectorISG_NS_9allocatorISG_EEEEE3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %4 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::LICMPass"*, %"class.spvtools::opt::LICMPass"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %7, align 8
  %9 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LICMPass", %"class.spvtools::opt::LICMPass"* %6, i64 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = tail call zeroext i1 @_ZN8spvtools3opt4Loop22ShouldHoistInstructionEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %9, %"class.spvtools::opt::IRContext"* %11, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %7, align 8
  %15 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %14, align 8
  %16 = tail call zeroext i1 @_ZN8spvtools3opt8LICMPass16HoistInstructionEPNS0_4LoopEPNS0_11InstructionE(%"class.spvtools::opt::LICMPass"* %6, %"class.spvtools::opt::Loop"* %15, %"class.spvtools::opt::Instruction"* %1) #10
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %4, i64 0, i32 0, i32 2
  %19 = load i8*, i8** %18, align 8
  store i8 1, i8* %19, align 1
  br label %20

20:                                               ; preds = %2, %13, %17
  %21 = phi i1 [ false, %13 ], [ true, %17 ], [ true, %2 ]
  ret i1 %21
}

declare zeroext i1 @_ZN8spvtools3opt4Loop22ShouldHoistInstructionEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #11, !noalias !27
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #10
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #11
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!4 = distinct !{!4, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!5 = distinct !{!5, !6, !"_ZN8spvtools3opt14LoopDescriptor5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZN8spvtools3opt14LoopDescriptor5beginEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!12 = !{i8 0, i8 2}
!13 = !{i64 0, i64 65}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!16 = distinct !{!16, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !18}
!21 = distinct !{!21, !18}
!22 = distinct !{!22, !18}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!25 = distinct !{!25, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!26 = distinct !{!26, !18}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!29 = distinct !{!29, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!30 = distinct !{!30, !31, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!31 = distinct !{!31, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt8LICMPass21AnalyseAndHoistFromBBEPNS5_4LoopEPNS5_8FunctionEPNS5_10BasicBlockEPNS_6vectorISC_NS_9allocatorISC_EEEEE3$_0FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
