; ModuleID = '../../third_party/webrtc/modules/audio_processing/typing_detection.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/typing_detection.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::TypingDetection" = type <{ i32 (...)**, i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, [4 x i8] }>

@_ZTVN6webrtc15TypingDetectionE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::TypingDetection"*)* @_ZN6webrtc15TypingDetectionD2Ev to i8*), i8* bitcast (void (%"class.webrtc::TypingDetection"*)* @_ZN6webrtc15TypingDetectionD0Ev to i8*)] }, align 8

@_ZN6webrtc15TypingDetectionC1Ev = hidden unnamed_addr alias void (%"class.webrtc::TypingDetection"*), void (%"class.webrtc::TypingDetection"*)* @_ZN6webrtc15TypingDetectionC2Ev
@_ZN6webrtc15TypingDetectionD1Ev = hidden unnamed_addr alias void (%"class.webrtc::TypingDetection"*), void (%"class.webrtc::TypingDetection"*)* @_ZN6webrtc15TypingDetectionD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc15TypingDetectionC2Ev(%"class.webrtc::TypingDetection"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN6webrtc15TypingDetectionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 18, i1 false)
  %6 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 10, i32 100, i32 300, i32 1>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 12
  store i32 2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 13
  store i32 1, i32* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc15TypingDetectionD2Ev(%"class.webrtc::TypingDetection"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc15TypingDetectionD0Ev(%"class.webrtc::TypingDetection"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.webrtc::TypingDetection"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc15TypingDetection7ProcessEbb(%"class.webrtc::TypingDetection"* nocapture, i1 zeroext, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 1
  br i1 %2, label %5, label %8

5:                                                ; preds = %3
  %6 = load i32, i32* %4, align 8
  %7 = add nsw i32 %6, 1
  br label %8

8:                                                ; preds = %3, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %3 ]
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 2
  br i1 %1, label %14, label %11

11:                                               ; preds = %8
  %12 = load i32, i32* %10, align 4
  %13 = add nsw i32 %12, 1
  br label %14

14:                                               ; preds = %8, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %8 ]
  store i32 %15, i32* %10, align 4
  %16 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 12
  %17 = load i32, i32* %16, align 4
  %18 = icmp sge i32 %15, %17
  %19 = xor i1 %2, true
  %20 = or i1 %18, %19
  br i1 %20, label %36, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %9, %23
  br i1 %24, label %25, label %36

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 9
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = add nsw i32 %29, %27
  store i32 %30, i32* %28, align 8
  %31 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 10
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 6
  store i8 1, i8* %35, align 1
  br label %36

36:                                               ; preds = %14, %25, %34, %21
  %37 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = sub nsw i32 %38, %42
  store i32 %43, i32* %37, align 8
  br label %44

44:                                               ; preds = %40, %36
  %45 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 4
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 13
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 5
  %53 = load i8, i8* %52, align 8, !range !2
  br label %58

54:                                               ; preds = %44
  %55 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 6
  %56 = load i8, i8* %55, align 1, !range !2
  %57 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 5
  store i8 %56, i8* %57, align 8
  store i8 0, i8* %55, align 1
  store i32 0, i32* %45, align 4
  br label %58

58:                                               ; preds = %51, %54
  %59 = phi i8 [ %53, %51 ], [ %56, %54 ]
  %60 = icmp ne i8 %59, 0
  ret i1 %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc15TypingDetection31TimeSinceLastDetectionInSecondsEv(%"class.webrtc::TypingDetection"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add nsw i32 %3, 50
  %5 = sdiv i32 %4, 100
  ret i32 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc15TypingDetection13SetParametersEiiiiii(%"class.webrtc::TypingDetection"* nocapture, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 8
  store i32 %1, i32* %10, align 4
  br label %11

11:                                               ; preds = %7, %9
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 9
  store i32 %2, i32* %14, align 8
  br label %15

15:                                               ; preds = %11, %13
  %16 = icmp eq i32 %3, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 10
  store i32 %3, i32* %18, align 4
  br label %19

19:                                               ; preds = %15, %17
  %20 = icmp eq i32 %4, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 11
  store i32 %4, i32* %22, align 8
  br label %23

23:                                               ; preds = %19, %21
  %24 = icmp eq i32 %5, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 12
  store i32 %5, i32* %26, align 4
  br label %27

27:                                               ; preds = %23, %25
  %28 = icmp eq i32 %6, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.webrtc::TypingDetection", %"class.webrtc::TypingDetection"* %0, i64 0, i32 13
  store i32 %6, i32* %30, align 8
  br label %31

31:                                               ; preds = %27, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
