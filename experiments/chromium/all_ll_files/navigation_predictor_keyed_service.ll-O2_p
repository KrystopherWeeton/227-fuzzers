; ModuleID = '../../chrome/browser/navigation_predictor/navigation_predictor_keyed_service.cc'
source_filename = "../../chrome/browser/navigation_predictor/navigation_predictor_keyed_service.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.NavigationPredictorKeyedService::Prediction" = type { %"class.content::WebContents"*, %"class.absl::optional", i32, %"class.std::__1::vector" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%class.NavigationPredictorKeyedService = type { %class.KeyedService, %"class.base::ObserverList", %"class.absl::optional.24", %class.SearchEnginePreconnector, %"class.std::__1::unordered_set", %"class.base::TimeTicks", %"class.base::TickClock"* }
%class.KeyedService = type { i32 (...)** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.17", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { %"class.NavigationPredictorKeyedService::Prediction" }
%class.SearchEnginePreconnector = type { %"class.content::BrowserContext"*, %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.37", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.38" }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.45", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.60", [4 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr.29" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.81" }
%"union.absl::variant_internal::DestructibleUnionImpl.81" = type { %"union.absl::variant_internal::DestructibleUnionImpl.82" }
%"union.absl::variant_internal::DestructibleUnionImpl.82" = type { %"union.absl::variant_internal::DestructibleUnionImpl.83" }
%"union.absl::variant_internal::DestructibleUnionImpl.83" = type { %"union.absl::variant_internal::DestructibleUnionImpl.84" }
%"union.absl::variant_internal::DestructibleUnionImpl.84" = type { %"class.std::__1::basic_string" }
%"class.base::ListValue" = type { %"class.base::Value" }
%"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.base::CommandLine" = type { %"class.std::__1::vector.64", %"class.std::__1::map.71", i64 }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map.71" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.NavigationPredictorKeyedService::Observer" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.content::WebContents"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.56"*, i8, [7 x i8] }>
%"class.std::__1::allocator.56" = type { i8 }

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE7reserveEm = comdat any

$_ZNSt3__113unordered_setIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_ = comdat any

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_ = comdat any

$_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE = comdat any

$_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm = comdat any

@_ZTV31NavigationPredictorKeyedService = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.NavigationPredictorKeyedService*)* @_ZN31NavigationPredictorKeyedServiceD2Ev to i8*), i8* bitcast (void (%class.NavigationPredictorKeyedService*)* @_ZN31NavigationPredictorKeyedServiceD0Ev to i8*), i8* bitcast (void (%class.KeyedService*)* @_ZN12KeyedService8ShutdownEv to i8*)] }, align 8
@.str = private unnamed_addr constant [52 x i8] c"console-log-json-navigation-predictions-for-testing\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"predictions\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"source_url\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"JSON Navigation Prediction: \00", align 1

@_ZN31NavigationPredictorKeyedService10PredictionC1EPN7content11WebContentsERKN4absl8optionalI4GURLEENS_16PredictionSourceERKNSt3__16vectorIS6_NSB_9allocatorIS6_EEEE = hidden unnamed_addr alias void (%"class.NavigationPredictorKeyedService::Prediction"*, %"class.content::WebContents"*, %"class.absl::optional"*, i32, %"class.std::__1::vector"*), void (%"class.NavigationPredictorKeyedService::Prediction"*, %"class.content::WebContents"*, %"class.absl::optional"*, i32, %"class.std::__1::vector"*)* @_ZN31NavigationPredictorKeyedService10PredictionC2EPN7content11WebContentsERKN4absl8optionalI4GURLEENS_16PredictionSourceERKNSt3__16vectorIS6_NSB_9allocatorIS6_EEEE
@_ZN31NavigationPredictorKeyedService10PredictionC1ERKS0_ = hidden unnamed_addr alias void (%"class.NavigationPredictorKeyedService::Prediction"*, %"class.NavigationPredictorKeyedService::Prediction"*), void (%"class.NavigationPredictorKeyedService::Prediction"*, %"class.NavigationPredictorKeyedService::Prediction"*)* @_ZN31NavigationPredictorKeyedService10PredictionC2ERKS0_
@_ZN31NavigationPredictorKeyedService10PredictionD1Ev = hidden unnamed_addr alias void (%"class.NavigationPredictorKeyedService::Prediction"*), void (%"class.NavigationPredictorKeyedService::Prediction"*)* @_ZN31NavigationPredictorKeyedService10PredictionD2Ev
@_ZN31NavigationPredictorKeyedServiceC1EPN7content14BrowserContextE = hidden unnamed_addr alias void (%class.NavigationPredictorKeyedService*, %"class.content::BrowserContext"*), void (%class.NavigationPredictorKeyedService*, %"class.content::BrowserContext"*)* @_ZN31NavigationPredictorKeyedServiceC2EPN7content14BrowserContextE
@_ZN31NavigationPredictorKeyedServiceD1Ev = hidden unnamed_addr alias void (%class.NavigationPredictorKeyedService*), void (%class.NavigationPredictorKeyedService*)* @_ZN31NavigationPredictorKeyedServiceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService10PredictionC2EPN7content11WebContentsERKN4absl8optionalI4GURLEENS_16PredictionSourceERKNSt3__16vectorIS6_NSB_9allocatorIS6_EEEE(%"class.NavigationPredictorKeyedService::Prediction"*, %"class.content::WebContents"*, %"class.absl::optional"* dereferenceable(128), i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 0
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %6, align 8
  %7 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 128, i1 false) #13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %13, %class.GURL* dereferenceable(120) %12) #13
  store i8 1, i8* %7, align 8
  br label %14

14:                                               ; preds = %5, %11
  %15 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 2
  store i32 %3, i32* %15, align 8
  %16 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3
  %17 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #13
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %19 = bitcast %class.GURL** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = sdiv exact i64 %23, 120
  %25 = icmp eq i64 %23, 0
  br i1 %25, label %54, label %26

26:                                               ; preds = %14
  %27 = icmp ugt i64 %24, 153722867280912930
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::vector"* %16 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %29) #14
  unreachable

30:                                               ; preds = %26
  %31 = tail call i8* @_Znwm(i64 %23) #15
  %32 = bitcast i8* %31 to %class.GURL*
  %33 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = bitcast %class.GURL** %33 to i8**
  store i8* %31, i8** %34, align 8
  %35 = bitcast %"class.std::__1::vector"* %16 to i8**
  store i8* %31, i8** %35, align 8
  %36 = getelementptr inbounds %class.GURL, %class.GURL* %32, i64 %24
  %37 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %36, %class.GURL** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %39 = load %class.GURL*, %class.GURL** %38, align 8
  %40 = load %class.GURL*, %class.GURL** %18, align 8
  %41 = bitcast %class.GURL** %33 to i64*
  %42 = ptrtoint i8* %31 to i64
  %43 = icmp eq %class.GURL* %39, %40
  br i1 %43, label %52, label %44

44:                                               ; preds = %30, %44
  %45 = phi %class.GURL* [ %48, %44 ], [ %32, %30 ]
  %46 = phi %class.GURL* [ %47, %44 ], [ %39, %30 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %45, %class.GURL* dereferenceable(120) %46) #13
  %47 = getelementptr inbounds %class.GURL, %class.GURL* %46, i64 1
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %45, i64 1
  %49 = icmp eq %class.GURL* %47, %40
  br i1 %49, label %50, label %44

50:                                               ; preds = %44
  %51 = ptrtoint %class.GURL* %48 to i64
  br label %52

52:                                               ; preds = %50, %30
  %53 = phi i64 [ %42, %30 ], [ %51, %50 ]
  store i64 %53, i64* %41, align 8
  br label %54

54:                                               ; preds = %14, %52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService10PredictionC2ERKS0_(%"class.NavigationPredictorKeyedService::Prediction"*, %"class.NavigationPredictorKeyedService::Prediction"* dereferenceable(168)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.NavigationPredictorKeyedService::Prediction"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.NavigationPredictorKeyedService::Prediction"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 120, i1 false) #13
  %9 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  %14 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %19, %class.GURL* dereferenceable(120) %18) #13
  store i8 1, i8* %6, align 8
  br label %20

20:                                               ; preds = %2, %17
  %21 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 3, i32 0, i32 1
  %23 = bitcast %class.GURL** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = sdiv exact i64 %27, 120
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector"* %12, i64 %28)
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %30 = load %class.GURL*, %class.GURL** %29, align 8
  %31 = load %class.GURL*, %class.GURL** %22, align 8
  %32 = icmp eq %class.GURL* %30, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 1
  %35 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %class.GURL** %34 to i64*
  br label %38

37:                                               ; preds = %47, %20
  ret void

38:                                               ; preds = %33, %47
  %39 = phi %class.GURL* [ %30, %33 ], [ %48, %47 ]
  %40 = load %class.GURL*, %class.GURL** %34, align 8
  %41 = load %class.GURL*, %class.GURL** %35, align 8
  %42 = icmp eq %class.GURL* %40, %41
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %40, %class.GURL* dereferenceable(120) %39) #13
  %44 = getelementptr inbounds %class.GURL, %class.GURL* %40, i64 1
  %45 = ptrtoint %class.GURL* %44 to i64
  store i64 %45, i64* %36, align 8
  br label %47

46:                                               ; preds = %38
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %12, %class.GURL* dereferenceable(120) %39) #13
  br label %47

47:                                               ; preds = %43, %46
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %39, i64 1
  %49 = icmp eq %class.GURL* %48, %31
  br i1 %49, label %37, label %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.GURL** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.GURL*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.GURL** %13 to i64*
  %15 = icmp ugt i64 %1, 153722867280912930
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 120
  %21 = mul i64 %1, 120
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %class.GURL*
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %23, i64 %20
  %25 = ptrtoint %class.GURL* %24 to i64
  %26 = getelementptr inbounds %class.GURL, %class.GURL* %23, i64 %1
  %27 = ptrtoint %class.GURL* %26 to i64
  %28 = inttoptr i64 %18 to %class.GURL*
  %29 = icmp eq %class.GURL* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %class.GURL* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %class.GURL* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %class.GURL, %class.GURL* %31, i64 -1
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %32, i64 -1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %33, %class.GURL* dereferenceable(120) %34) #13
  %35 = icmp eq %class.GURL* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %class.GURL* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %class.GURL*, %class.GURL** %13, align 8
  %40 = inttoptr i64 %38 to %class.GURL*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %class.GURL* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %class.GURL* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %class.GURL* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %class.GURL* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %48, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %49) #13
  %50 = icmp eq %class.GURL* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(168) %"class.NavigationPredictorKeyedService::Prediction"* @_ZN31NavigationPredictorKeyedService10PredictionaSERKS0_(%"class.NavigationPredictorKeyedService::Prediction"* returned, %"class.NavigationPredictorKeyedService::Prediction"* dereferenceable(168)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.NavigationPredictorKeyedService::Prediction"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.NavigationPredictorKeyedService::Prediction"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %10) #13
  store i8 0, i8* %6, align 8
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %16, %class.GURL* dereferenceable(120) %17) #13
  store i8 1, i8* %6, align 8
  br label %18

18:                                               ; preds = %11, %15
  %19 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %24 = load %class.GURL*, %class.GURL** %23, align 8
  %25 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = load %class.GURL*, %class.GURL** %25, align 8
  %27 = icmp eq %class.GURL* %26, %24
  br i1 %27, label %32, label %28

28:                                               ; preds = %18, %28
  %29 = phi %class.GURL* [ %30, %28 ], [ %26, %18 ]
  %30 = getelementptr inbounds %class.GURL, %class.GURL* %29, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %30) #13
  %31 = icmp eq %class.GURL* %30, %24
  br i1 %31, label %32, label %28

32:                                               ; preds = %28, %18
  store %class.GURL* %24, %class.GURL** %25, align 8
  %33 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 3
  %34 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %1, i64 0, i32 3, i32 0, i32 1
  %35 = bitcast %class.GURL** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %33 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = sub i64 %36, %38
  %40 = sdiv exact i64 %39, 120
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE7reserveEm(%"class.std::__1::vector"* %22, i64 %40)
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %33, i64 0, i32 0, i32 0
  %42 = load %class.GURL*, %class.GURL** %41, align 8
  %43 = load %class.GURL*, %class.GURL** %34, align 8
  %44 = icmp eq %class.GURL* %42, %43
  br i1 %44, label %48, label %45

45:                                               ; preds = %32
  %46 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %class.GURL** %25 to i64*
  br label %49

48:                                               ; preds = %58, %32
  ret %"class.NavigationPredictorKeyedService::Prediction"* %0

49:                                               ; preds = %45, %58
  %50 = phi %class.GURL* [ %42, %45 ], [ %59, %58 ]
  %51 = load %class.GURL*, %class.GURL** %25, align 8
  %52 = load %class.GURL*, %class.GURL** %46, align 8
  %53 = icmp eq %class.GURL* %51, %52
  br i1 %53, label %57, label %54

54:                                               ; preds = %49
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %51, %class.GURL* dereferenceable(120) %50) #13
  %55 = getelementptr inbounds %class.GURL, %class.GURL* %51, i64 1
  %56 = ptrtoint %class.GURL* %55 to i64
  store i64 %56, i64* %47, align 8
  br label %58

57:                                               ; preds = %49
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"* %22, %class.GURL* dereferenceable(120) %50) #13
  br label %58

58:                                               ; preds = %54, %57
  %59 = getelementptr inbounds %class.GURL, %class.GURL* %50, i64 1
  %60 = icmp eq %class.GURL* %59, %43
  br i1 %60, label %48, label %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService10PredictionD2Ev(%"class.NavigationPredictorKeyedService::Prediction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %class.GURL*, %class.GURL** %3, align 8
  %5 = icmp eq %class.GURL* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.GURL* %4 to i8*
  %8 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = icmp eq %class.GURL* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %class.GURL* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.GURL, %class.GURL* %12, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %13) #13
  %14 = icmp eq %class.GURL* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %class.GURL* %4, %class.GURL** %8, align 8
  tail call void @_ZdlPv(i8* %19) #15
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %25) #13
  store i8 0, i8* %21, align 8
  br label %26

26:                                               ; preds = %20, %24
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(128) %"class.absl::optional"* @_ZNK31NavigationPredictorKeyedService10Prediction19source_document_urlEv(%"class.NavigationPredictorKeyedService::Prediction"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 1
  ret %"class.absl::optional"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK31NavigationPredictorKeyedService10Prediction21sorted_predicted_urlsEv(%"class.NavigationPredictorKeyedService::Prediction"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 3
  ret %"class.std::__1::vector"* %2
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.content::WebContents"* @_ZNK31NavigationPredictorKeyedService10Prediction12web_contentsEv(%"class.NavigationPredictorKeyedService::Prediction"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %0, i64 0, i32 0
  %3 = load %"class.content::WebContents"*, %"class.content::WebContents"** %2, align 8
  ret %"class.content::WebContents"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedServiceC2EPN7content14BrowserContextE(%class.NavigationPredictorKeyedService*, %"class.content::BrowserContext"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceC2Ev(%class.KeyedService* %3) #13
  %4 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV31NavigationPredictorKeyedService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1
  %6 = bitcast %"class.base::ObserverList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #13
  %7 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7, %"class.base::internal::LinkNodeBase"* %7) #13
  %8 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %union.anon.28* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 168, i1 false) #13
  %13 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 3
  tail call void @_ZN24SearchEnginePreconnectorC1EPN7content14BrowserContextE(%class.SearchEnginePreconnector* %13, %"class.content::BrowserContext"* %1) #13
  %14 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4
  %15 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4, i32 0, i32 3
  %16 = bitcast %"class.std::__1::__compressed_pair.60"* %15 to i32*
  %17 = bitcast %"class.std::__1::unordered_set"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %18 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  %20 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #13
  %21 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %20, i64 0, i32 0
  store %"class.base::TickClock"* %21, %"class.base::TickClock"** %19, align 8
  tail call void @_ZN24SearchEnginePreconnector18StartPreconnectingEb(%class.SearchEnginePreconnector* %13, i1 zeroext true) #13
  ret void
}

declare void @_ZN12KeyedServiceC2Ev(%class.KeyedService*) unnamed_addr #4

declare void @_ZN24SearchEnginePreconnectorC1EPN7content14BrowserContextE(%class.SearchEnginePreconnector*, %"class.content::BrowserContext"*) unnamed_addr #4

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #4

declare void @_ZN24SearchEnginePreconnector18StartPreconnectingEb(%class.SearchEnginePreconnector*, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedServiceD2Ev(%class.NavigationPredictorKeyedService*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV31NavigationPredictorKeyedService, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %13, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #15
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 3
  tail call void @_ZN24SearchEnginePreconnectorD1Ev(%class.SearchEnginePreconnector* %19) #13
  %20 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %49, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %24, i64 0, i32 0, i32 0
  %26 = load %class.GURL*, %class.GURL** %25, align 8
  %27 = icmp eq %class.GURL* %26, null
  br i1 %27, label %42, label %28

28:                                               ; preds = %23
  %29 = bitcast %class.GURL* %26 to i8*
  %30 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %31 = load %class.GURL*, %class.GURL** %30, align 8
  %32 = icmp eq %class.GURL* %31, %26
  br i1 %32, label %40, label %33

33:                                               ; preds = %28, %33
  %34 = phi %class.GURL* [ %35, %33 ], [ %31, %28 ]
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %34, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %35) #13
  %36 = icmp eq %class.GURL* %35, %26
  br i1 %36, label %37, label %33

37:                                               ; preds = %33
  %38 = bitcast %"class.std::__1::vector"* %24 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %28
  %41 = phi i8* [ %39, %37 ], [ %29, %28 ]
  store %class.GURL* %26, %class.GURL** %30, align 8
  tail call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %40, %23
  %43 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %47) #13
  store i8 0, i8* %43, align 8
  br label %48

48:                                               ; preds = %46, %42
  store i8 0, i8* %20, align 8
  br label %49

49:                                               ; preds = %18, %48
  %50 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.base::internal::LinkNodeBase"** %50 to %"class.base::LinkNode"**
  %52 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0
  %53 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  %54 = icmp eq %"class.base::LinkNode"* %53, %52
  br i1 %54, label %67, label %55

55:                                               ; preds = %49, %64
  %56 = phi %"class.base::LinkNode"* [ %65, %64 ], [ %53, %49 ]
  %57 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %56, i64 1
  %58 = bitcast %"class.base::LinkNode"* %57 to %"class.base::ObserverList"**
  %59 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %58, align 8
  %60 = icmp eq %"class.base::ObserverList"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %55
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %58, align 8
  %62 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %56, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %62) #13
  %63 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %51, align 8
  br label %64

64:                                               ; preds = %61, %55
  %65 = phi %"class.base::LinkNode"* [ %56, %55 ], [ %63, %61 ]
  %66 = icmp eq %"class.base::LinkNode"* %65, %52
  br i1 %66, label %67, label %55

67:                                               ; preds = %64, %49
  %68 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %69 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %68, align 8
  %70 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %67
  %72 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %69 to i64
  %73 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %74 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %69 to i8*
  tail call void @_ZdlPv(i8* %75) #15
  br label %76

76:                                               ; preds = %67, %71
  %77 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 0
  tail call void @_ZN12KeyedServiceD2Ev(%class.KeyedService* %77) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN24SearchEnginePreconnectorD1Ev(%class.SearchEnginePreconnector*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN12KeyedServiceD2Ev(%class.KeyedService*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedServiceD0Ev(%class.NavigationPredictorKeyedService*) unnamed_addr #0 align 2 {
  tail call void @_ZN31NavigationPredictorKeyedServiceD2Ev(%class.NavigationPredictorKeyedService* %0) #13
  %2 = bitcast %class.NavigationPredictorKeyedService* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService19OnPredictionUpdatedEPN7content11WebContentsERK4GURLNS_16PredictionSourceERKNSt3__16vectorIS3_NS7_9allocatorIS3_EEEE(%class.NavigationPredictorKeyedService*, %"class.content::WebContents"*, %class.GURL* dereferenceable(120), i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::DictionaryValue", align 8
  %7 = alloca %"class.base::ListValue", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.NavigationPredictorKeyedService::Prediction", align 8
  %11 = alloca %"class.absl::optional", align 8
  %12 = alloca %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %13 = alloca %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %14 = alloca %"class.absl::optional.24", align 8
  %15 = bitcast %"class.NavigationPredictorKeyedService::Prediction"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 168, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %16) #13
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLC1ERKS_(%class.GURL* %17, %class.GURL* dereferenceable(120) %2) #13
  call void @_ZN31NavigationPredictorKeyedService10PredictionC2EPN7content11WebContentsERKN4absl8optionalI4GURLEENS_16PredictionSourceERKNSt3__16vectorIS6_NSB_9allocatorIS6_EEEE(%"class.NavigationPredictorKeyedService::Prediction"* nonnull %10, %"class.content::WebContents"* %1, %"class.absl::optional"* nonnull dereferenceable(128) %11, i32 %3, %"class.std::__1::vector"* dereferenceable(24) %4)
  %18 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %20, label %24, label %22

22:                                               ; preds = %5
  %23 = call dereferenceable(168) %"class.NavigationPredictorKeyedService::Prediction"* @_ZN31NavigationPredictorKeyedService10PredictionaSERKS0_(%"class.NavigationPredictorKeyedService::Prediction"* %21, %"class.NavigationPredictorKeyedService::Prediction"* nonnull dereferenceable(168) %10) #13
  br label %25

24:                                               ; preds = %5
  call void @_ZN31NavigationPredictorKeyedService10PredictionC2ERKS0_(%"class.NavigationPredictorKeyedService::Prediction"* %21, %"class.NavigationPredictorKeyedService::Prediction"* nonnull dereferenceable(168) %10) #13
  store i8 1, i8* %18, align 8
  br label %25

25:                                               ; preds = %22, %24
  %26 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %10, i64 0, i32 3
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 0
  %28 = load %class.GURL*, %class.GURL** %27, align 8
  %29 = icmp eq %class.GURL* %28, null
  br i1 %29, label %44, label %30

30:                                               ; preds = %25
  %31 = bitcast %class.GURL* %28 to i8*
  %32 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %10, i64 0, i32 3, i32 0, i32 1
  %33 = load %class.GURL*, %class.GURL** %32, align 8
  %34 = icmp eq %class.GURL* %33, %28
  br i1 %34, label %42, label %35

35:                                               ; preds = %30, %35
  %36 = phi %class.GURL* [ %37, %35 ], [ %33, %30 ]
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %36, i64 -1
  call void @_ZN4GURLD1Ev(%class.GURL* %37) #13
  %38 = icmp eq %class.GURL* %37, %28
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::vector"* %26 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %30
  %43 = phi i8* [ %41, %39 ], [ %31, %30 ]
  store %class.GURL* %28, %class.GURL** %32, align 8
  call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %42, %25
  %45 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %49) #13
  store i8 0, i8* %45, align 8
  br label %50

50:                                               ; preds = %44, %48
  %51 = load i8, i8* %16, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %50
  call void @_ZN4GURLD1Ev(%class.GURL* %17) #13
  store i8 0, i8* %16, align 8
  br label %54

54:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 168, i8* nonnull %15) #13
  %55 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1
  %56 = bitcast %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %56) #13
  %57 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12, i64 0, i32 1
  %59 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12, i64 0, i32 2
  %60 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %55, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 40, i1 false)
  %62 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %60, align 8, !noalias !3
  %63 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %64 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %63, align 8, !noalias !3
  %65 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %62, %64
  %66 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  br i1 %65, label %67, label %69

67:                                               ; preds = %54
  %68 = bitcast %"class.base::ObserverList"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #13, !alias.scope !3
  br label %109

69:                                               ; preds = %54
  store %"class.base::ObserverList"* %55, %"class.base::ObserverList"** %57, align 8
  %70 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %66, %"class.base::internal::LinkNodeBase"* %70) #13
  store i64 0, i64* %58, align 8
  %71 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %63 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::ObserverList"* %55 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = sub i64 %76, %78
  %80 = ashr exact i64 %79, 3
  br label %81

81:                                               ; preds = %74, %69
  %82 = phi i64 [ %80, %74 ], [ -1, %69 ]
  store i64 %82, i64* %59, align 8
  %83 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %57, align 8
  %84 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %83, i64 0, i32 0, i32 0, i32 1
  %85 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.base::ObserverList"* %83 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = ashr exact i64 %89, 3
  %91 = icmp ult i64 %90, %82
  %92 = select i1 %91, i64 %90, i64 %82
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %109, label %94

94:                                               ; preds = %81
  %95 = inttoptr i64 %88 to %"class.base::internal::UncheckedObserverAdapter"*
  %96 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %83, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %95, i64 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = icmp eq i8* %98, null
  br i1 %99, label %100, label %109

100:                                              ; preds = %94, %104
  %101 = phi i64 [ %102, %104 ], [ 0, %94 ]
  %102 = add nuw i64 %101, 1
  store i64 %102, i64* %58, align 8
  %103 = icmp ult i64 %102, %92
  br i1 %103, label %104, label %109

104:                                              ; preds = %100
  %105 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %96, align 8
  %106 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %105, i64 %102, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %100, label %109

109:                                              ; preds = %104, %100, %94, %81, %67
  %110 = bitcast %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #13
  %111 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13, i64 0, i32 1
  %113 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13, i64 0, i32 2
  %114 = getelementptr inbounds %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.base::ObserverList<NavigationPredictorKeyedService::Observer, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %114) #13
  %116 = bitcast %"class.base::ObserverList"** %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #13, !alias.scope !6
  %117 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %120 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %119, i64 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %122 = bitcast %"class.std::__1::vector"* %119 to i8**
  %123 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %57, align 8
  br label %126

126:                                              ; preds = %394, %109
  %127 = phi %"class.base::ObserverList"* [ %125, %109 ], [ %392, %394 ]
  %128 = icmp eq %"class.base::ObserverList"* %127, null
  br i1 %128, label %144, label %129

129:                                              ; preds = %126
  %130 = load i64, i64* %58, align 8
  %131 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %127, i64 0, i32 0, i32 0, i32 1
  %132 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.base::ObserverList"* %127 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = sub i64 %133, %135
  %137 = ashr exact i64 %136, 3
  %138 = load i64, i64* %59, align 8
  %139 = icmp ult i64 %137, %138
  %140 = select i1 %139, i64 %137, i64 %138
  %141 = icmp eq i64 %130, %140
  br i1 %141, label %144, label %142

142:                                              ; preds = %129
  %143 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %111, align 8
  br label %160

144:                                              ; preds = %129, %126
  %145 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %111, align 8
  %146 = icmp eq %"class.base::ObserverList"* %145, null
  br i1 %146, label %260, label %147

147:                                              ; preds = %144
  %148 = load i64, i64* %112, align 8
  %149 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %145, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.base::ObserverList"* %145 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = ashr exact i64 %154, 3
  %156 = load i64, i64* %113, align 8
  %157 = icmp ult i64 %155, %156
  %158 = select i1 %157, i64 %155, i64 %156
  %159 = icmp eq i64 %148, %158
  br i1 %159, label %169, label %160

160:                                              ; preds = %147, %142
  %161 = phi %"class.base::ObserverList"* [ %143, %142 ], [ %145, %147 ]
  %162 = icmp eq %"class.base::ObserverList"* %127, %161
  %163 = load i64, i64* %58, align 8
  %164 = load i64, i64* %112, align 8
  %165 = icmp eq i64 %163, %164
  %166 = and i1 %162, %165
  br i1 %166, label %167, label %356

167:                                              ; preds = %160
  %168 = icmp eq %"class.base::ObserverList"* %127, null
  br i1 %168, label %260, label %169

169:                                              ; preds = %147, %167
  %170 = phi %"class.base::ObserverList"* [ %127, %167 ], [ %145, %147 ]
  %171 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %170, i64 0, i32 1
  %172 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %170, i64 0, i32 1, i32 0, i32 0, i32 1
  %173 = bitcast %"class.base::internal::LinkNodeBase"** %172 to %"class.base::LinkNode"**
  %174 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %173, align 8
  %175 = bitcast %"class.base::LinkedList"* %171 to %"class.base::LinkNode"**
  %176 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %175, align 8
  %177 = icmp eq %"class.base::LinkNode"* %174, %176
  br i1 %177, label %178, label %256

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %170, i64 0, i32 0, i32 0, i32 0
  %180 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %179, align 8
  %181 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %170, i64 0, i32 0, i32 0, i32 1
  %182 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %181, align 8
  %183 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %180, %182
  br i1 %183, label %192, label %184

184:                                              ; preds = %178, %189
  %185 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %190, %189 ], [ %180, %178 ]
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 0, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = icmp eq i8* %187, null
  br i1 %188, label %192, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %185, i64 1
  %191 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %190, %182
  br i1 %191, label %256, label %184

192:                                              ; preds = %184, %178
  %193 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %180, %178 ], [ %185, %184 ]
  %194 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %193 to i64
  %195 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %193, %182
  br i1 %195, label %256, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %193, i64 1
  %198 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %197, %182
  br i1 %198, label %251, label %199

199:                                              ; preds = %196
  %200 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %182, i64 -2, i32 0
  %201 = ptrtoint i8** %200 to i64
  %202 = sub i64 %201, %194
  %203 = lshr i64 %202, 3
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 3
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %225, label %207

207:                                              ; preds = %199, %220
  %208 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %222, %220 ], [ %197, %199 ]
  %209 = phi i64 [ %221, %220 ], [ %194, %199 ]
  %210 = phi i64 [ %223, %220 ], [ %205, %199 ]
  %211 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %208, i64 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %220, label %214

214:                                              ; preds = %207
  %215 = ptrtoint i8* %212 to i64
  %216 = inttoptr i64 %209 to %"class.base::internal::UncheckedObserverAdapter"*
  %217 = inttoptr i64 %209 to i64*
  store i64 %215, i64* %217, align 8
  %218 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %216, i64 1
  %219 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %218 to i64
  br label %220

220:                                              ; preds = %214, %207
  %221 = phi i64 [ %209, %207 ], [ %219, %214 ]
  %222 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %208, i64 1
  %223 = add i64 %210, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %207, !llvm.loop !9

225:                                              ; preds = %220, %199
  %226 = phi i64 [ undef, %199 ], [ %221, %220 ]
  %227 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %197, %199 ], [ %222, %220 ]
  %228 = phi i64 [ %194, %199 ], [ %221, %220 ]
  %229 = icmp ult i64 %202, 24
  br i1 %229, label %247, label %230

230:                                              ; preds = %225, %575
  %231 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %577, %575 ], [ %227, %225 ]
  %232 = phi i64 [ %576, %575 ], [ %228, %225 ]
  %233 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 0, i32 0
  %234 = load i8*, i8** %233, align 8
  %235 = icmp eq i8* %234, null
  br i1 %235, label %242, label %236

236:                                              ; preds = %230
  %237 = ptrtoint i8* %234 to i64
  %238 = inttoptr i64 %232 to %"class.base::internal::UncheckedObserverAdapter"*
  %239 = inttoptr i64 %232 to i64*
  store i64 %237, i64* %239, align 8
  %240 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %238, i64 1
  %241 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %240 to i64
  br label %242

242:                                              ; preds = %236, %230
  %243 = phi i64 [ %232, %230 ], [ %241, %236 ]
  %244 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 1, i32 0
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %553, label %547

247:                                              ; preds = %575, %225
  %248 = phi i64 [ %226, %225 ], [ %576, %575 ]
  %249 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %250 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %181, align 8
  br label %251

251:                                              ; preds = %247, %196
  %252 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %182, %196 ], [ %250, %247 ]
  %253 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %193, %196 ], [ %249, %247 ]
  %254 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %253, %252
  br i1 %254, label %256, label %255

255:                                              ; preds = %251
  store %"class.base::internal::UncheckedObserverAdapter"* %253, %"class.base::internal::UncheckedObserverAdapter"** %181, align 8
  br label %256

256:                                              ; preds = %189, %255, %251, %192, %169
  %257 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %111, align 8
  %258 = icmp eq %"class.base::ObserverList"* %257, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %256
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %111, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %114) #13
  br label %260

260:                                              ; preds = %144, %167, %256, %259
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #13
  %261 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %57, align 8
  %262 = icmp eq %"class.base::ObserverList"* %261, null
  br i1 %262, label %353, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %261, i64 0, i32 1
  %265 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %261, i64 0, i32 1, i32 0, i32 0, i32 1
  %266 = bitcast %"class.base::internal::LinkNodeBase"** %265 to %"class.base::LinkNode"**
  %267 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %266, align 8
  %268 = bitcast %"class.base::LinkedList"* %264 to %"class.base::LinkNode"**
  %269 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %268, align 8
  %270 = icmp eq %"class.base::LinkNode"* %267, %269
  br i1 %270, label %271, label %349

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %261, i64 0, i32 0, i32 0, i32 0
  %273 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %272, align 8
  %274 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %261, i64 0, i32 0, i32 0, i32 1
  %275 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %274, align 8
  %276 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %273, %275
  br i1 %276, label %285, label %277

277:                                              ; preds = %271, %282
  %278 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %283, %282 ], [ %273, %271 ]
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 0, i32 0
  %280 = load i8*, i8** %279, align 8
  %281 = icmp eq i8* %280, null
  br i1 %281, label %285, label %282

282:                                              ; preds = %277
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %278, i64 1
  %284 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %283, %275
  br i1 %284, label %349, label %277

285:                                              ; preds = %277, %271
  %286 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %273, %271 ], [ %278, %277 ]
  %287 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %286 to i64
  %288 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %286, %275
  br i1 %288, label %349, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %286, i64 1
  %291 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %290, %275
  br i1 %291, label %344, label %292

292:                                              ; preds = %289
  %293 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %275, i64 -2, i32 0
  %294 = ptrtoint i8** %293 to i64
  %295 = sub i64 %294, %287
  %296 = lshr i64 %295, 3
  %297 = add nuw nsw i64 %296, 1
  %298 = and i64 %297, 3
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %318, label %300

300:                                              ; preds = %292, %313
  %301 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %315, %313 ], [ %290, %292 ]
  %302 = phi i64 [ %314, %313 ], [ %287, %292 ]
  %303 = phi i64 [ %316, %313 ], [ %298, %292 ]
  %304 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 0, i32 0
  %305 = load i8*, i8** %304, align 8
  %306 = icmp eq i8* %305, null
  br i1 %306, label %313, label %307

307:                                              ; preds = %300
  %308 = ptrtoint i8* %305 to i64
  %309 = inttoptr i64 %302 to %"class.base::internal::UncheckedObserverAdapter"*
  %310 = inttoptr i64 %302 to i64*
  store i64 %308, i64* %310, align 8
  %311 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %309, i64 1
  %312 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %311 to i64
  br label %313

313:                                              ; preds = %307, %300
  %314 = phi i64 [ %302, %300 ], [ %312, %307 ]
  %315 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %301, i64 1
  %316 = add i64 %303, -1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %318, label %300, !llvm.loop !11

318:                                              ; preds = %313, %292
  %319 = phi i64 [ undef, %292 ], [ %314, %313 ]
  %320 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %290, %292 ], [ %315, %313 ]
  %321 = phi i64 [ %287, %292 ], [ %314, %313 ]
  %322 = icmp ult i64 %295, 24
  br i1 %322, label %340, label %323

323:                                              ; preds = %318, %543
  %324 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %545, %543 ], [ %320, %318 ]
  %325 = phi i64 [ %544, %543 ], [ %321, %318 ]
  %326 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 0, i32 0
  %327 = load i8*, i8** %326, align 8
  %328 = icmp eq i8* %327, null
  br i1 %328, label %335, label %329

329:                                              ; preds = %323
  %330 = ptrtoint i8* %327 to i64
  %331 = inttoptr i64 %325 to %"class.base::internal::UncheckedObserverAdapter"*
  %332 = inttoptr i64 %325 to i64*
  store i64 %330, i64* %332, align 8
  %333 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %331, i64 1
  %334 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %333 to i64
  br label %335

335:                                              ; preds = %329, %323
  %336 = phi i64 [ %325, %323 ], [ %334, %329 ]
  %337 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 1, i32 0
  %338 = load i8*, i8** %337, align 8
  %339 = icmp eq i8* %338, null
  br i1 %339, label %521, label %515

340:                                              ; preds = %543, %318
  %341 = phi i64 [ %319, %318 ], [ %544, %543 ]
  %342 = inttoptr i64 %341 to %"class.base::internal::UncheckedObserverAdapter"*
  %343 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %274, align 8
  br label %344

344:                                              ; preds = %340, %289
  %345 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %275, %289 ], [ %343, %340 ]
  %346 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %286, %289 ], [ %342, %340 ]
  %347 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %346, %345
  br i1 %347, label %349, label %348

348:                                              ; preds = %344
  store %"class.base::internal::UncheckedObserverAdapter"* %346, %"class.base::internal::UncheckedObserverAdapter"** %274, align 8
  br label %349

349:                                              ; preds = %282, %348, %344, %285, %263
  %350 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %57, align 8
  %351 = icmp eq %"class.base::ObserverList"* %350, null
  br i1 %351, label %353, label %352

352:                                              ; preds = %349
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %57, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %66) #13
  br label %353

353:                                              ; preds = %260, %349, %352
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %56) #13
  %354 = call %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() #13
  %355 = call zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"* %354, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0)) #13
  br i1 %355, label %424, label %514

356:                                              ; preds = %160
  %357 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %127, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %357, align 8
  %359 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %358, i64 %163
  %360 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %359 to %"class.NavigationPredictorKeyedService::Observer"**
  %361 = load %"class.NavigationPredictorKeyedService::Observer"*, %"class.NavigationPredictorKeyedService::Observer"** %360, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 0, i64 176, i1 false) #13
  %362 = load i8, i8* %18, align 8, !range !2
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %365, label %364

364:                                              ; preds = %356
  call void @_ZN31NavigationPredictorKeyedService10PredictionC2ERKS0_(%"class.NavigationPredictorKeyedService::Prediction"* %118, %"class.NavigationPredictorKeyedService::Prediction"* dereferenceable(168) %21) #13
  store i8 1, i8* %117, align 8
  br label %365

365:                                              ; preds = %356, %364
  %366 = bitcast %"class.NavigationPredictorKeyedService::Observer"* %361 to void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)***
  %367 = load void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)**, void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)*** %366, align 8
  %368 = load void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)*, void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)** %367, align 8
  call void %368(%"class.NavigationPredictorKeyedService::Observer"* %361, %"class.absl::optional.24"* nonnull %14) #13
  %369 = load i8, i8* %117, align 8, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %391, label %371

371:                                              ; preds = %365
  %372 = load %class.GURL*, %class.GURL** %120, align 8
  %373 = icmp eq %class.GURL* %372, null
  br i1 %373, label %386, label %374

374:                                              ; preds = %371
  %375 = bitcast %class.GURL* %372 to i8*
  %376 = load %class.GURL*, %class.GURL** %121, align 8
  %377 = icmp eq %class.GURL* %376, %372
  br i1 %377, label %384, label %378

378:                                              ; preds = %374, %378
  %379 = phi %class.GURL* [ %380, %378 ], [ %376, %374 ]
  %380 = getelementptr inbounds %class.GURL, %class.GURL* %379, i64 -1
  call void @_ZN4GURLD1Ev(%class.GURL* %380) #13
  %381 = icmp eq %class.GURL* %380, %372
  br i1 %381, label %382, label %378

382:                                              ; preds = %378
  %383 = load i8*, i8** %122, align 8
  br label %384

384:                                              ; preds = %382, %374
  %385 = phi i8* [ %383, %382 ], [ %375, %374 ]
  store %class.GURL* %372, %class.GURL** %121, align 8
  call void @_ZdlPv(i8* %385) #15
  br label %386

386:                                              ; preds = %384, %371
  %387 = load i8, i8* %123, align 8, !range !2
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %390, label %389

389:                                              ; preds = %386
  call void @_ZN4GURLD1Ev(%class.GURL* %124) #13
  store i8 0, i8* %123, align 8
  br label %390

390:                                              ; preds = %389, %386
  store i8 0, i8* %117, align 8
  br label %391

391:                                              ; preds = %365, %390
  %392 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %57, align 8
  %393 = icmp eq %"class.base::ObserverList"* %392, null
  br i1 %393, label %394, label %395

394:                                              ; preds = %419, %415, %391, %395, %409
  br label %126

395:                                              ; preds = %391
  %396 = load i64, i64* %58, align 8
  %397 = add i64 %396, 1
  store i64 %397, i64* %58, align 8
  %398 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %392, i64 0, i32 0, i32 0, i32 1
  %399 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = bitcast %"class.base::ObserverList"* %392 to i64*
  %402 = load i64, i64* %401, align 8
  %403 = sub i64 %400, %402
  %404 = ashr exact i64 %403, 3
  %405 = load i64, i64* %59, align 8
  %406 = icmp ult i64 %404, %405
  %407 = select i1 %406, i64 %404, i64 %405
  %408 = icmp ult i64 %397, %407
  br i1 %408, label %409, label %394

409:                                              ; preds = %395
  %410 = inttoptr i64 %402 to %"class.base::internal::UncheckedObserverAdapter"*
  %411 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %392, i64 0, i32 0, i32 0, i32 0
  %412 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %410, i64 %397, i32 0
  %413 = load i8*, i8** %412, align 8
  %414 = icmp eq i8* %413, null
  br i1 %414, label %415, label %394

415:                                              ; preds = %409, %419
  %416 = phi i64 [ %417, %419 ], [ %397, %409 ]
  %417 = add nuw i64 %416, 1
  store i64 %417, i64* %58, align 8
  %418 = icmp ult i64 %417, %407
  br i1 %418, label %419, label %394

419:                                              ; preds = %415
  %420 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %411, align 8
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %420, i64 %417, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = icmp eq i8* %422, null
  br i1 %423, label %415, label %394

424:                                              ; preds = %353
  %425 = load i8, i8* %18, align 8, !range !2
  %426 = icmp eq i8 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #14
  unreachable

428:                                              ; preds = %424
  %429 = getelementptr inbounds %"class.NavigationPredictorKeyedService::Prediction", %"class.NavigationPredictorKeyedService::Prediction"* %21, i64 0, i32 0
  %430 = load %"class.content::WebContents"*, %"class.content::WebContents"** %429, align 8
  %431 = icmp eq %"class.content::WebContents"* %430, null
  br i1 %431, label %514, label %432

432:                                              ; preds = %428
  %433 = bitcast %"class.base::DictionaryValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %433) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %433, i8 -86, i64 32, i1 false) #13
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %6) #13
  %434 = bitcast %"class.base::ListValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %434) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %434, i8 -86, i64 32, i1 false) #13
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %7) #13
  %435 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 0
  %436 = load %class.GURL*, %class.GURL** %435, align 8
  %437 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %438 = load %class.GURL*, %class.GURL** %437, align 8
  %439 = icmp eq %class.GURL* %436, %438
  br i1 %439, label %442, label %440

440:                                              ; preds = %432
  %441 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %7, i64 0, i32 0
  br label %449

442:                                              ; preds = %449, %432
  %443 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %6, i64 0, i32 0
  %444 = getelementptr inbounds %"class.base::ListValue", %"class.base::ListValue"* %7, i64 0, i32 0
  %445 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %443, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %444) #13
  %446 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %447 = load i8, i8* %446, align 8, !range !2
  %448 = icmp eq i8 %447, 0
  br i1 %448, label %482, label %466

449:                                              ; preds = %449, %440
  %450 = phi %class.GURL* [ %436, %440 ], [ %464, %449 ]
  %451 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %450) #13
  %452 = bitcast %"class.std::__1::basic_string"* %451 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %453 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %452, i64 0, i32 1, i32 0
  %454 = load i8, i8* %453, align 1
  %455 = icmp slt i8 %454, 0
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %451, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %457 = load i8*, i8** %456, align 8
  %458 = bitcast %"class.std::__1::basic_string"* %451 to i8*
  %459 = select i1 %455, i8* %457, i8* %458
  %460 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %451, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %461 = load i64, i64* %460, align 8
  %462 = zext i8 %454 to i64
  %463 = select i1 %455, i64 %461, i64 %462
  call void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* nonnull %441, i8* %459, i64 %463) #13
  %464 = getelementptr inbounds %class.GURL, %class.GURL* %450, i64 1
  %465 = icmp eq %class.GURL* %464, %438
  br i1 %465, label %442, label %449

466:                                              ; preds = %442
  %467 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %468 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %467) #13
  %469 = bitcast %"class.std::__1::basic_string"* %468 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %470 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %469, i64 0, i32 1, i32 0
  %471 = load i8, i8* %470, align 1
  %472 = icmp slt i8 %471, 0
  %473 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %474 = load i8*, i8** %473, align 8
  %475 = bitcast %"class.std::__1::basic_string"* %468 to i8*
  %476 = select i1 %472, i8* %474, i8* %475
  %477 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %468, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %478 = load i64, i64* %477, align 8
  %479 = zext i8 %471 to i64
  %480 = select i1 %472, i64 %478, i64 %479
  %481 = call %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"* nonnull %443, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i64 10, i8* %476, i64 %480) #13
  br label %482

482:                                              ; preds = %466, %442
  %483 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %483) #13
  %484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %483, i8 0, i64 24, i1 false) #13
  %485 = call zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* nonnull dereferenceable(32) %443, %"class.std::__1::basic_string"* nonnull %8, i64 200) #13
  br i1 %485, label %486, label %506

486:                                              ; preds = %482
  %487 = load %"class.content::WebContents"*, %"class.content::WebContents"** %429, align 8
  %488 = bitcast %"class.content::WebContents"* %487 to %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)***
  %489 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %488, align 8
  %490 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %489, i64 10
  %491 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %490, align 8
  %492 = call %"class.content::RenderFrameHost"* %491(%"class.content::WebContents"* %487) #13
  %493 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %493) #13
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #13
  %494 = bitcast %"class.content::RenderFrameHost"* %492 to void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)***
  %495 = load void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)*** %494, align 8
  %496 = getelementptr inbounds void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)** %495, i64 41
  %497 = load void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.content::RenderFrameHost"*, i32, %"class.std::__1::basic_string"*)** %496, align 8
  call void %497(%"class.content::RenderFrameHost"* %492, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #13
  %498 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %499 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %498, i64 0, i32 1, i32 0
  %500 = load i8, i8* %499, align 1
  %501 = icmp slt i8 %500, 0
  br i1 %501, label %502, label %505

502:                                              ; preds = %486
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load i8*, i8** %503, align 8
  call void @_ZdlPv(i8* %504) #15
  br label %505

505:                                              ; preds = %502, %486
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %493) #13
  br label %506

506:                                              ; preds = %505, %482
  %507 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %508 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %507, i64 0, i32 1, i32 0
  %509 = load i8, i8* %508, align 1
  %510 = icmp slt i8 %509, 0
  br i1 %510, label %511, label %513

511:                                              ; preds = %506
  %512 = load i8*, i8** %484, align 8
  call void @_ZdlPv(i8* %512) #15
  br label %513

513:                                              ; preds = %511, %506
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %483) #13
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %444) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %434) #13
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %443) #13
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %433) #13
  br label %514

514:                                              ; preds = %513, %428, %353
  ret void

515:                                              ; preds = %335
  %516 = ptrtoint i8* %338 to i64
  %517 = inttoptr i64 %336 to %"class.base::internal::UncheckedObserverAdapter"*
  %518 = inttoptr i64 %336 to i64*
  store i64 %516, i64* %518, align 8
  %519 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %517, i64 1
  %520 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %519 to i64
  br label %521

521:                                              ; preds = %515, %335
  %522 = phi i64 [ %336, %335 ], [ %520, %515 ]
  %523 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 2, i32 0
  %524 = load i8*, i8** %523, align 8
  %525 = icmp eq i8* %524, null
  br i1 %525, label %532, label %526

526:                                              ; preds = %521
  %527 = ptrtoint i8* %524 to i64
  %528 = inttoptr i64 %522 to %"class.base::internal::UncheckedObserverAdapter"*
  %529 = inttoptr i64 %522 to i64*
  store i64 %527, i64* %529, align 8
  %530 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %528, i64 1
  %531 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %530 to i64
  br label %532

532:                                              ; preds = %526, %521
  %533 = phi i64 [ %522, %521 ], [ %531, %526 ]
  %534 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 3, i32 0
  %535 = load i8*, i8** %534, align 8
  %536 = icmp eq i8* %535, null
  br i1 %536, label %543, label %537

537:                                              ; preds = %532
  %538 = ptrtoint i8* %535 to i64
  %539 = inttoptr i64 %533 to %"class.base::internal::UncheckedObserverAdapter"*
  %540 = inttoptr i64 %533 to i64*
  store i64 %538, i64* %540, align 8
  %541 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %539, i64 1
  %542 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %541 to i64
  br label %543

543:                                              ; preds = %537, %532
  %544 = phi i64 [ %533, %532 ], [ %542, %537 ]
  %545 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %324, i64 4
  %546 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %545, %275
  br i1 %546, label %340, label %323

547:                                              ; preds = %242
  %548 = ptrtoint i8* %245 to i64
  %549 = inttoptr i64 %243 to %"class.base::internal::UncheckedObserverAdapter"*
  %550 = inttoptr i64 %243 to i64*
  store i64 %548, i64* %550, align 8
  %551 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %549, i64 1
  %552 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %551 to i64
  br label %553

553:                                              ; preds = %547, %242
  %554 = phi i64 [ %243, %242 ], [ %552, %547 ]
  %555 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 2, i32 0
  %556 = load i8*, i8** %555, align 8
  %557 = icmp eq i8* %556, null
  br i1 %557, label %564, label %558

558:                                              ; preds = %553
  %559 = ptrtoint i8* %556 to i64
  %560 = inttoptr i64 %554 to %"class.base::internal::UncheckedObserverAdapter"*
  %561 = inttoptr i64 %554 to i64*
  store i64 %559, i64* %561, align 8
  %562 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %560, i64 1
  %563 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %562 to i64
  br label %564

564:                                              ; preds = %558, %553
  %565 = phi i64 [ %554, %553 ], [ %563, %558 ]
  %566 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 3, i32 0
  %567 = load i8*, i8** %566, align 8
  %568 = icmp eq i8* %567, null
  br i1 %568, label %575, label %569

569:                                              ; preds = %564
  %570 = ptrtoint i8* %567 to i64
  %571 = inttoptr i64 %565 to %"class.base::internal::UncheckedObserverAdapter"*
  %572 = inttoptr i64 %565 to i64*
  store i64 %570, i64* %572, align 8
  %573 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %571, i64 1
  %574 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %573 to i64
  br label %575

575:                                              ; preds = %569, %564
  %576 = phi i64 [ %565, %564 ], [ %574, %569 ]
  %577 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %231, i64 4
  %578 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %577, %182
  br i1 %578, label %247, label %230
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.base::CommandLine"* @_ZN4base11CommandLine17ForCurrentProcessEv() local_unnamed_addr #4

declare zeroext i1 @_ZNK4base11CommandLine9HasSwitchEPKc(%"class.base::CommandLine"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService11AddObserverEPNS_8ObserverE(%class.NavigationPredictorKeyedService*, %"class.NavigationPredictorKeyedService::Observer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.24", align 8
  %4 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1
  %5 = icmp eq %"class.NavigationPredictorKeyedService::Observer"* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  br label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %12 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = bitcast %"class.NavigationPredictorKeyedService::Observer"* %1 to i8*
  br i1 %14, label %24, label %16

16:                                               ; preds = %9, %21
  %17 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %22, %21 ], [ %11, %9 ]
  %18 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, %15
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %17, i64 1
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %13
  br i1 %23, label %27, label %16

24:                                               ; preds = %16, %9
  %25 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %11, %9 ], [ %17, %16 ]
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %13
  br i1 %26, label %27, label %100

27:                                               ; preds = %21, %6, %24
  %28 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %8, %6 ], [ %13, %24 ], [ %13, %21 ]
  %29 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = ptrtoint %"class.NavigationPredictorKeyedService::Observer"* %1 to i64
  %33 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %34, align 8
  %36 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %28, %35
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %35 to i64
  br i1 %36, label %38, label %43

38:                                               ; preds = %27
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %28 to i64*
  store i64 %32, i64* %39, align 8
  %40 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 1
  %41 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  store i64 %41, i64* %42, align 8
  br label %100

43:                                               ; preds = %27
  %44 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %28 to i64
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %46 = bitcast %"class.base::ObserverList"* %4 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = bitcast %"class.base::ObserverList"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #14
  unreachable

54:                                               ; preds = %43
  %55 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %56 = sub i64 %37, %47
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, 1152921504606846975
  br i1 %58, label %59, label %67

59:                                               ; preds = %54
  %60 = ashr exact i64 %56, 2
  %61 = icmp ult i64 %60, %50
  %62 = select i1 %61, i64 %50, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %59
  %65 = icmp ugt i64 %62, 2305843009213693951
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @abort() #14
  unreachable

67:                                               ; preds = %64, %54
  %68 = phi i64 [ %62, %64 ], [ 2305843009213693951, %54 ]
  %69 = shl i64 %68, 3
  %70 = tail call i8* @_Znwm(i64 %69) #15
  %71 = bitcast i8* %70 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i64 [ %68, %67 ], [ 0, %59 ]
  %74 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %71, %67 ], [ null, %59 ]
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %49
  %76 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %73
  %77 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %76 to i64
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %75 to i64*
  store i64 %32, i64* %78, align 8
  %79 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 1
  %80 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %79 to i64
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8
  %83 = load i64, i64* %45, align 8
  %84 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 %87
  %89 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %72
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %88 to i8*
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %85, i1 false) #13
  %94 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8
  br label %95

95:                                               ; preds = %91, %72
  %96 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %82, %72 ], [ %94, %91 ]
  store i64 %89, i64* %46, align 8
  store i64 %80, i64* %45, align 8
  store i64 %77, i64* %55, align 8
  %97 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #15
  br label %100

100:                                              ; preds = %98, %95, %38, %24
  %101 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %102 = load i8, i8* %101, align 8, !range !2
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %139, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 176, i1 false) #13
  %106 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %107 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN31NavigationPredictorKeyedService10PredictionC2ERKS0_(%"class.NavigationPredictorKeyedService::Prediction"* %107, %"class.NavigationPredictorKeyedService::Prediction"* dereferenceable(168) %106) #13
  store i8 1, i8* %105, align 8
  %108 = bitcast %"class.NavigationPredictorKeyedService::Observer"* %1 to void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)***
  %109 = load void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)**, void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)*** %108, align 8
  %110 = load void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)*, void (%"class.NavigationPredictorKeyedService::Observer"*, %"class.absl::optional.24"*)** %109, align 8
  call void %110(%"class.NavigationPredictorKeyedService::Observer"* %1, %"class.absl::optional.24"* nonnull %3) #13
  %111 = load i8, i8* %105, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %139, label %113

113:                                              ; preds = %104
  %114 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %115 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %114, i64 0, i32 0, i32 0
  %116 = load %class.GURL*, %class.GURL** %115, align 8
  %117 = icmp eq %class.GURL* %116, null
  br i1 %117, label %132, label %118

118:                                              ; preds = %113
  %119 = bitcast %class.GURL* %116 to i8*
  %120 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 0, i32 1
  %121 = load %class.GURL*, %class.GURL** %120, align 8
  %122 = icmp eq %class.GURL* %121, %116
  br i1 %122, label %130, label %123

123:                                              ; preds = %118, %123
  %124 = phi %class.GURL* [ %125, %123 ], [ %121, %118 ]
  %125 = getelementptr inbounds %class.GURL, %class.GURL* %124, i64 -1
  call void @_ZN4GURLD1Ev(%class.GURL* %125) #13
  %126 = icmp eq %class.GURL* %125, %116
  br i1 %126, label %127, label %123

127:                                              ; preds = %123
  %128 = bitcast %"class.std::__1::vector"* %114 to i8**
  %129 = load i8*, i8** %128, align 8
  br label %130

130:                                              ; preds = %127, %118
  %131 = phi i8* [ %129, %127 ], [ %119, %118 ]
  store %class.GURL* %116, %class.GURL** %120, align 8
  call void @_ZdlPv(i8* %131) #15
  br label %132

132:                                              ; preds = %130, %113
  %133 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %134 = load i8, i8* %133, align 8, !range !2
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.absl::optional.24", %"class.absl::optional.24"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4GURLD1Ev(%class.GURL* %137) #13
  store i8 0, i8* %133, align 8
  br label %138

138:                                              ; preds = %136, %132
  store i8 0, i8* %105, align 8
  br label %139

139:                                              ; preds = %100, %138, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService14RemoveObserverEPNS_8ObserverE(%class.NavigationPredictorKeyedService*, %"class.NavigationPredictorKeyedService::Observer"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.NavigationPredictorKeyedService::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #13
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService30OnWebContentsVisibilityChangedEPN7content11WebContentsEb(%class.NavigationPredictorKeyedService*, %"class.content::WebContents"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.content::WebContents"*, align 8
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %4, align 8
  %5 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4
  %6 = call i64 @_ZNSt3__113unordered_setIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"* %5, %"class.content::WebContents"** nonnull dereferenceable(8) %4)
  %7 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = call i64 %12(%"class.base::TickClock"* %8) #13
  %14 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  br i1 %2, label %15, label %18

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %5, i64 0, i32 0
  %17 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %16, %"class.content::WebContents"** nonnull dereferenceable(8) %4, %"class.content::WebContents"** nonnull dereferenceable(8) %4) #13
  br label %18

18:                                               ; preds = %15, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__113unordered_setIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"*, %"class.content::WebContents"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.128", align 8
  %4 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0
  %5 = load %"class.content::WebContents"*, %"class.content::WebContents"** %1, align 8
  %6 = ptrtoint %"class.content::WebContents"* %5 to i64
  %7 = lshr i64 %6, 32
  %8 = shl i64 %6, 3
  %9 = and i64 %8, 4294967288
  %10 = add nuw nsw i64 %9, 8
  %11 = xor i64 %10, %7
  %12 = mul i64 %11, -7070675565921424023
  %13 = lshr i64 %12, 47
  %14 = xor i64 %12, %7
  %15 = xor i64 %14, %13
  %16 = mul i64 %15, -7070675565921424023
  %17 = lshr i64 %16, 47
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %79, label %23

23:                                               ; preds = %2
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !12
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %19, %27
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::unordered_set", %"class.std::__1::unordered_set"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %79, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %79, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %79

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.content::WebContents"**
  %65 = load %"class.content::WebContents"*, %"class.content::WebContents"** %64, align 8
  %66 = icmp eq %"class.content::WebContents"* %65, %5
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base"* %69, null
  br i1 %70, label %79, label %46

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::unique_ptr.128"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #13
  call void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.128"* nonnull sret %3, %"class.std::__1::__hash_table"* %4, %"struct.std::__1::__hash_node_base"* nonnull %47) #13
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %3, i64 0, i32 0, i32 0, i32 0
  %74 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %73, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = bitcast %"struct.std::__1::__hash_node"* %74 to i8*
  call void @_ZdlPv(i8* %77) #15
  br label %78

78:                                               ; preds = %76, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #13
  br label %79

79:                                               ; preds = %59, %67, %40, %2, %33, %78
  %80 = phi i64 [ 1, %78 ], [ 0, %33 ], [ 0, %2 ], [ 0, %40 ], [ 0, %67 ], [ 0, %59 ]
  ret i64 %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN31NavigationPredictorKeyedService22OnWebContentsDestroyedEPN7content11WebContentsE(%class.NavigationPredictorKeyedService*, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.content::WebContents"*, align 8
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %3, align 8
  %4 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4
  %5 = call i64 @_ZNSt3__113unordered_setIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE5eraseERKS3_(%"class.std::__1::unordered_set"* %4, %"class.content::WebContents"** nonnull dereferenceable(8) %3)
  %6 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  %7 = load %"class.base::TickClock"*, %"class.base::TickClock"** %6, align 8
  %8 = bitcast %"class.base::TickClock"* %7 to i64 (%"class.base::TickClock"*)***
  %9 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, i64 2
  %11 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, align 8
  %12 = call i64 %11(%"class.base::TickClock"* %7) #13
  %13 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK31NavigationPredictorKeyedService30IsBrowserAppLikelyInForegroundEv(%class.NavigationPredictorKeyedService* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  %7 = load %"class.base::TickClock"*, %"class.base::TickClock"** %6, align 8
  %8 = bitcast %"class.base::TickClock"* %7 to i64 (%"class.base::TickClock"*)***
  %9 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, i64 2
  %11 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, align 8
  %12 = tail call i64 %11(%"class.base::TickClock"* %7) #13
  %13 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  %16 = icmp sgt i64 %15, 1000000
  br i1 %16, label %29, label %17

17:                                               ; preds = %1, %5
  %18 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  %19 = load %"class.base::TickClock"*, %"class.base::TickClock"** %18, align 8
  %20 = bitcast %"class.base::TickClock"* %19 to i64 (%"class.base::TickClock"*)***
  %21 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %21, i64 2
  %23 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %22, align 8
  %24 = tail call i64 %23(%"class.base::TickClock"* %19) #13
  %25 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 5, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = sub nsw i64 %24, %26
  %28 = icmp slt i64 %27, 120000001
  br label %29

29:                                               ; preds = %5, %17
  %30 = phi i1 [ %28, %17 ], [ false, %5 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN31NavigationPredictorKeyedService22SetTickClockForTestingEPKN4base9TickClockE(%class.NavigationPredictorKeyedService* nocapture, %"class.base::TickClock"*) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 6
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.SearchEnginePreconnector* @_ZN31NavigationPredictorKeyedService26search_engine_preconnectorEv(%class.NavigationPredictorKeyedService* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.NavigationPredictorKeyedService, %class.NavigationPredictorKeyedService* %0, i64 0, i32 3
  ret %class.SearchEnginePreconnector* %2
}

declare void @_ZN12KeyedService8ShutdownEv(%class.KeyedService*) unnamed_addr #4

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #4

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #4

declare void @_ZN4base5Value6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value12SetStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::Value"*, i8*, i64, i8*, i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base10JSONWriter5WriteERKNS_5ValueEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEm(%"class.base::Value"* dereferenceable(32), %"class.std::__1::basic_string"*, i64) local_unnamed_addr #4

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN4GURLC1EOS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_(%"class.std::__1::vector"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.GURL** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 120
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 153722867280912930
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.GURL** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 120
  %20 = icmp ult i64 %19, 76861433640456465
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 153722867280912930, %14 ]
  %28 = mul i64 %27, 120
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %class.GURL*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %class.GURL* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %9
  %35 = getelementptr inbounds %class.GURL, %class.GURL* %33, i64 %32
  %36 = ptrtoint %class.GURL* %35 to i64
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %34, %class.GURL* dereferenceable(120) %1) #13
  %37 = getelementptr inbounds %class.GURL, %class.GURL* %34, i64 1
  %38 = ptrtoint %class.GURL* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %class.GURL*, %class.GURL** %39, align 8
  %41 = load %class.GURL*, %class.GURL** %3, align 8
  %42 = icmp eq %class.GURL* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %class.GURL* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %class.GURL* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %class.GURL* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %class.GURL, %class.GURL* %46, i64 -1
  %49 = getelementptr inbounds %class.GURL, %class.GURL* %47, i64 -1
  tail call void @_ZN4GURLC1EOS_(%class.GURL* %48, %class.GURL* dereferenceable(120) %49) #13
  %50 = icmp eq %class.GURL* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %class.GURL*, %class.GURL** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %class.GURL* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %class.GURL* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %class.GURL* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %class.GURL*
  %60 = icmp eq %class.GURL* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %class.GURL* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %class.GURL, %class.GURL* %62, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %63) #13
  %64 = icmp eq %class.GURL* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #15
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE(%"class.std::__1::unique_ptr.128"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !12
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.53"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.128"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.56"** %98 to %"class.std::__1::__compressed_pair.53"**
  store %"class.std::__1::__compressed_pair.53"* %30, %"class.std::__1::__compressed_pair.53"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE25__emplace_unique_key_argsIS3_JRKS3_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.content::WebContents"** dereferenceable(8), %"class.content::WebContents"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %1, align 8
  %5 = ptrtoint %"class.content::WebContents"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !12
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base"* %62 to %"class.content::WebContents"**
  %64 = load %"class.content::WebContents"*, %"class.content::WebContents"** %63, align 8
  %65 = icmp eq %"class.content::WebContents"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #15, !noalias !13
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.content::WebContents"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !13
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !13
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !13
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %75, align 8, !noalias !13
  %76 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #13, !range !12
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #13
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #13, !range !12
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base"* %118, %"struct.std::__1::__hash_node_base"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #13, !range !12
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !12
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !12
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !12
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !16

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !12
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to %"class.content::WebContents"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to %"class.content::WebContents"**
  %112 = load %"class.content::WebContents"*, %"class.content::WebContents"** %102, align 8
  %113 = load %"class.content::WebContents"*, %"class.content::WebContents"** %111, align 8
  %114 = icmp eq %"class.content::WebContents"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base12ObserverListIN31NavigationPredictorKeyedService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base12ObserverListIN31NavigationPredictorKeyedService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base12ObserverListIN31NavigationPredictorKeyedService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base12ObserverListIN31NavigationPredictorKeyedService8ObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = !{i64 0, i64 65}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__112__hash_tableIPN7content11WebContentsENS_4hashIS3_EENS_8equal_toIS3_EENS_9allocatorIS3_EEE21__construct_node_hashIRKS3_JEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINS8_ISH_EEEEEEmOT_DpOT0_"}
!16 = distinct !{!16, !10}
