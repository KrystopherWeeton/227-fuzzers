; ModuleID = '../../net/http/http_response_info.cc'
source_filename = "../../net/http/http_response_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional", %class.scoped_refptr, %"class.net::SSLInfo", %class.scoped_refptr.49, %"class.net::HttpVaryData", %"class.std::__1::vector" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector", %"class.std::__1::vector.13" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { i32*, i32*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i32* }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.20, %class.scoped_refptr.20, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.32", %"class.std::__1::basic_string", %"class.std::__1::vector.40", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.20 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.21", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.std::__1::vector.25" }
%"class.base::RefCountedThreadSafe.21" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.35" }
%"class.net::HashValue" = type { i32, %union.anon.34 }
%union.anon.34 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.44" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.42, i32, [4 x i8] }>
%class.scoped_refptr.42 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.43", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.43" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.49 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.50", %"class.std::__1::vector.51", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.53" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%struct.ssl_cipher_st = type opaque

$_ZN3net17AuthChallengeInfoaSERKS0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"spdy/3\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"http/2+quic\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"http/2+quic/32\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"http/2+quic/33\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"http/2+quic/34\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"http/2+quic/35\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"http/2+quic/36\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"http/2+quic/37\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"http/2+quic/38\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"http/2+quic/39\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"http/2+quic/40\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"http/2+quic/41\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"http/2+quic/42\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"http/2+quic/43\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"http/2+quic/44\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"http/2+quic/45\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"http/2+quic/46\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"http/2+quic/47\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"h3-Q048\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"h3-T048\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"h3-Q049\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"h3-T049\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"h3-Q050\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"h3-T050\00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"h3-Q099\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"h3-25\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"h3-27\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"h3-28\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"h3-29\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"h3-T099\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"http2+quic/999\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"h3-T051\00", align 1
@switch.table._ZN3net16HttpResponseInfo22ConnectionInfoToCoarseENS0_14ConnectionInfoE = private unnamed_addr constant [42 x i32] [i32 3, i32 0, i32 1, i32 1, i32 1, i32 2, i32 1, i32 1, i32 0, i32 0, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 3], align 4

@_ZN3net16HttpResponseInfoC1Ev = hidden unnamed_addr alias void (%"class.net::HttpResponseInfo"*), void (%"class.net::HttpResponseInfo"*)* @_ZN3net16HttpResponseInfoC2Ev
@_ZN3net16HttpResponseInfoC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"*), void (%"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"*)* @_ZN3net16HttpResponseInfoC2ERKS0_
@_ZN3net16HttpResponseInfoD1Ev = hidden unnamed_addr alias void (%"class.net::HttpResponseInfo"*), void (%"class.net::HttpResponseInfo"*)* @_ZN3net16HttpResponseInfoD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net16HttpResponseInfo22ConnectionInfoToCoarseENS0_14ConnectionInfoE(i32) local_unnamed_addr #0 align 2 {
  %2 = icmp ult i32 %0, 42
  br i1 %2, label %3, label %7

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [42 x i32], [42 x i32]* @switch.table._ZN3net16HttpResponseInfo22ConnectionInfoToCoarseENS0_14ConnectionInfoE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  ret i32 %6

7:                                                ; preds = %1
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpResponseInfoC2Ev(%"class.net::HttpResponseInfo"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 0
  %5 = bitcast i32* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 9, i1 false)
  store i32 1, i32* %4, align 8
  %6 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %6) #10
  %7 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13
  %10 = bitcast i8* %7 to i32*
  store i32 0, i32* %10, align 8
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %9) #10
  %11 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %12 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 16, i32 0, i32 0
  %13 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 18
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 28, i1 false)
  %15 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false)
  tail call void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"* %13) #10
  %16 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 192, i1 false)
  tail call void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"* %18) #10
  %19 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22, i32 0
  store %"class.net::HttpResponseHeaders"* null, %"class.net::HttpResponseHeaders"** %19, align 8
  %20 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23
  tail call void @_ZN3net12HttpVaryDataC1Ev(%"class.net::HttpVaryData"* %20) #10
  %21 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24
  %22 = bitcast %"class.std::__1::vector"* %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10
  ret void
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

declare void @_ZN3net16ResolveErrorInfoC1Ev(%"struct.net::ResolveErrorInfo"*) unnamed_addr #2

declare void @_ZN3net7SSLInfoC1Ev(%"class.net::SSLInfo"*) unnamed_addr #2

declare void @_ZN3net12HttpVaryDataC1Ev(%"class.net::HttpVaryData"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpResponseInfoC2ERKS0_(%"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"* dereferenceable(536)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 13, i1 false)
  %5 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 0
  %6 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 0
  %7 = load i32, i32* %6, align 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2
  %9 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2
  %10 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %16 = bitcast %"class.net::HostPortPair"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #10
  br label %23

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0
  %19 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %20, i64 %22) #10
  br label %23

23:                                               ; preds = %14, %17
  %24 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2, i32 1
  %25 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2, i32 1
  %26 = load i16, i16* %25, align 8
  store i16 %26, i16* %24, align 8
  %27 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false)
  %29 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13
  %30 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 13
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %29, %"class.net::IPEndPoint"* dereferenceable(20) %30) #10
  %31 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %32 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 14
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %23
  %38 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #10
  br label %45

40:                                               ; preds = %23
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %31, i8* %42, i64 %44) #10
  br label %45

45:                                               ; preds = %37, %40
  %46 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 15
  %47 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 15
  %48 = bitcast i32* %46 to i8*
  %49 = bitcast i32* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false)
  %50 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 18
  %51 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 18
  tail call void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"* %50, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %51) #10
  %52 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 192, i1 false) #10
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %58 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = bitcast i8* %57 to %"class.net::AuthChallengeInfo"*
  tail call void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"* %59, %"class.net::AuthChallengeInfo"* dereferenceable(184) %58) #10
  store i8 1, i8* %52, align 8
  br label %60

60:                                               ; preds = %45, %56
  %61 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 20, i32 0
  %62 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %61, align 8
  %63 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 20, i32 0
  store %"class.net::SSLCertRequestInfo"* %62, %"class.net::SSLCertRequestInfo"** %63, align 8
  %64 = icmp eq %"class.net::SSLCertRequestInfo"* %62, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic
  br label %68

68:                                               ; preds = %60, %65
  %69 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21
  %70 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 21
  tail call void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"* %69, %"class.net::SSLInfo"* dereferenceable(128) %70) #10
  %71 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 22, i32 0
  %72 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %71, align 8
  %73 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22, i32 0
  store %"class.net::HttpResponseHeaders"* %72, %"class.net::HttpResponseHeaders"** %73, align 8
  %74 = icmp eq %"class.net::HttpResponseHeaders"* %72, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 1 monotonic
  br label %78

78:                                               ; preds = %68, %75
  %79 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23, i32 0, i32 0, i64 0
  %80 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 23, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 17, i1 false)
  %81 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24
  %82 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 24
  %83 = bitcast %"class.std::__1::vector"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #10
  %84 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 24, i32 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string"** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::vector"* %82 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = sdiv exact i64 %89, 24
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %133, label %92

92:                                               ; preds = %78
  %93 = icmp ugt i64 %90, 768614336404564650
  br i1 %93, label %94, label %96

94:                                               ; preds = %92
  %95 = bitcast %"class.std::__1::vector"* %81 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #11
  unreachable

96:                                               ; preds = %92
  %97 = tail call i8* @_Znwm(i64 %89) #12
  %98 = bitcast i8* %97 to %"class.std::__1::basic_string"*
  %99 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"** %99 to i8**
  store i8* %97, i8** %100, align 8
  %101 = bitcast %"class.std::__1::vector"* %81 to i8**
  store i8* %97, i8** %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 %90
  %103 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %102, %"class.std::__1::basic_string"** %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %82, i64 0, i32 0, i32 0
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  %107 = bitcast %"class.std::__1::basic_string"** %99 to i64*
  %108 = ptrtoint i8* %97 to i64
  %109 = icmp eq %"class.std::__1::basic_string"* %105, %106
  br i1 %109, label %131, label %110

110:                                              ; preds = %96, %125
  %111 = phi %"class.std::__1::basic_string"* [ %127, %125 ], [ %98, %96 ]
  %112 = phi %"class.std::__1::basic_string"* [ %126, %125 ], [ %105, %96 ]
  %113 = bitcast %"class.std::__1::basic_string"* %112 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %110
  %118 = bitcast %"class.std::__1::basic_string"* %111 to i8*
  %119 = bitcast %"class.std::__1::basic_string"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %119, i64 24, i1 false) #10
  br label %125

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %111, i8* %122, i64 %124) #10
  br label %125

125:                                              ; preds = %120, %117
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %112, i64 1
  %127 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %111, i64 1
  %128 = icmp eq %"class.std::__1::basic_string"* %126, %106
  br i1 %128, label %129, label %110

129:                                              ; preds = %125
  %130 = ptrtoint %"class.std::__1::basic_string"* %127 to i64
  br label %131

131:                                              ; preds = %129, %96
  %132 = phi i64 [ %108, %96 ], [ %130, %129 ]
  store i64 %132, i64* %107, align 8
  br label %133

133:                                              ; preds = %78, %131
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

declare void @_ZN3net16ResolveErrorInfoC1ERKS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3net7SSLInfoC1ERKS0_(%"class.net::SSLInfo"*, %"class.net::SSLInfo"* dereferenceable(128)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpResponseInfoD2Ev(%"class.net::HttpResponseInfo"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22, i32 0
  %30 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %29, align 8
  %31 = icmp eq %"class.net::HttpResponseHeaders"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw sub i32* %33, i32 1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %30) #10
  %37 = bitcast %"class.net::HttpResponseHeaders"* %30 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %28, %32, %36
  %39 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21
  tail call void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"* %39) #10
  %40 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 20, i32 0
  %41 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %40, align 8
  %42 = icmp eq %"class.net::SSLCertRequestInfo"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  tail call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %41) #10
  %48 = bitcast %"class.net::SSLCertRequestInfo"* %41 to i8*
  tail call void @_ZdlPv(i8* %48) #12
  br label %49

49:                                               ; preds = %38, %43, %47
  %50 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"* %54) #10
  store i8 0, i8* %50, align 8
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %55, %61
  %65 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %65) #10
  %66 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2
  %67 = bitcast %"class.net::HostPortPair"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %64, %71
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net7SSLInfoD1Ev(%"class.net::SSLInfo"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(536) %"class.net::HttpResponseInfo"* @_ZN3net16HttpResponseInfoaSERKS0_(%"class.net::HttpResponseInfo"* returned, %"class.net::HttpResponseInfo"* dereferenceable(536)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 13, i1 false)
  %5 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2
  %9 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0
  %11 = icmp eq %"class.net::HttpResponseInfo"* %0, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.net::HostPortPair"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %24 = bitcast %"class.net::HostPortPair"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #10
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %27, i64 %29) #10
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.net::HostPortPair"* %9 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %10, i8* %38, i64 %39) #10
  br label %41

41:                                               ; preds = %2, %22, %25, %31
  %42 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 7, i32 2, i32 1
  %43 = load i16, i16* %42, align 8
  %44 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 7, i32 2, i32 1
  store i16 %43, i16* %44, align 8
  %45 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 8
  %46 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 36, i1 false)
  %47 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %48 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 14
  br i1 %11, label %78, label %49

49:                                               ; preds = %41
  %50 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %53, label %68, label %58

58:                                               ; preds = %49
  br i1 %57, label %62, label %59

59:                                               ; preds = %58
  %60 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #10
  br label %78

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %64, i64 %66) #10
  br label %78

68:                                               ; preds = %49
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %74 = zext i8 %56 to i64
  %75 = select i1 %57, i8* %70, i8* %73
  %76 = select i1 %57, i64 %72, i64 %74
  %77 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %47, i8* %75, i64 %76) #10
  br label %78

78:                                               ; preds = %41, %59, %62, %68
  %79 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 15
  %80 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 15
  %81 = bitcast i32* %79 to i8*
  %82 = bitcast i32* %80 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false)
  %83 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 18
  %84 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 18
  %85 = tail call dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSERKS0_(%"struct.net::ResolveErrorInfo"* %83, %"struct.net::ResolveErrorInfo"* dereferenceable(8) %84) #10
  %86 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19
  %87 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %101, label %90

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %97 = tail call dereferenceable(184) %"class.net::AuthChallengeInfo"* @_ZN3net17AuthChallengeInfoaSERKS0_(%"class.net::AuthChallengeInfo"* %96, %"class.net::AuthChallengeInfo"* dereferenceable(184) %91) #10
  br label %107

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %100 = bitcast i8* %99 to %"class.net::AuthChallengeInfo"*
  tail call void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"* %100, %"class.net::AuthChallengeInfo"* dereferenceable(184) %91) #10
  store i8 1, i8* %92, align 8
  br label %107

101:                                              ; preds = %78
  %102 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i8, i8* %102, align 8, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"* %106) #10
  store i8 0, i8* %102, align 8
  br label %107

107:                                              ; preds = %95, %98, %101, %105
  %108 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 20
  %109 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 20, i32 0
  %110 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %109, align 8
  %111 = icmp eq %"class.net::SSLCertRequestInfo"* %110, null
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 1 monotonic
  br label %115

115:                                              ; preds = %107, %112
  %116 = ptrtoint %"class.net::SSLCertRequestInfo"* %110 to i64
  %117 = bitcast %class.scoped_refptr* %108 to i64*
  %118 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %108, i64 0, i32 0
  %119 = load %"class.net::SSLCertRequestInfo"*, %"class.net::SSLCertRequestInfo"** %118, align 8
  store i64 %116, i64* %117, align 8
  %120 = icmp eq %"class.net::SSLCertRequestInfo"* %119, null
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.net::SSLCertRequestInfo", %"class.net::SSLCertRequestInfo"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw sub i32* %122, i32 1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  tail call void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"* nonnull %119) #10
  %126 = bitcast %"class.net::SSLCertRequestInfo"* %119 to i8*
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %115, %121, %125
  %128 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21
  %129 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 21
  %130 = tail call dereferenceable(128) %"class.net::SSLInfo"* @_ZN3net7SSLInfoaSERKS0_(%"class.net::SSLInfo"* %128, %"class.net::SSLInfo"* dereferenceable(128) %129) #10
  %131 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22
  %132 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 22, i32 0
  %133 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %132, align 8
  %134 = icmp eq %"class.net::HttpResponseHeaders"* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 1 monotonic
  br label %138

138:                                              ; preds = %127, %135
  %139 = ptrtoint %"class.net::HttpResponseHeaders"* %133 to i64
  %140 = bitcast %class.scoped_refptr.49* %131 to i64*
  %141 = getelementptr inbounds %class.scoped_refptr.49, %class.scoped_refptr.49* %131, i64 0, i32 0
  %142 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %141, align 8
  store i64 %139, i64* %140, align 8
  %143 = icmp eq %"class.net::HttpResponseHeaders"* %142, null
  br i1 %143, label %150, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = atomicrmw sub i32* %145, i32 1 acq_rel
  %147 = icmp eq i32 %146, 1
  br i1 %147, label %148, label %150

148:                                              ; preds = %144
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %142) #10
  %149 = bitcast %"class.net::HttpResponseHeaders"* %142 to i8*
  tail call void @_ZdlPv(i8* %149) #12
  br label %150

150:                                              ; preds = %138, %144, %148
  %151 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23, i32 0, i32 0, i64 0
  %152 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 23, i32 0, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 17, i1 false)
  br i1 %11, label %159, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24
  %155 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 24, i32 0, i32 0
  %156 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %155, align 8
  %157 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 24, i32 0, i32 1
  %158 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %157, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %154, %"class.std::__1::basic_string"* %156, %"class.std::__1::basic_string"* %158) #10
  br label %159

159:                                              ; preds = %150, %153
  ret %"class.net::HttpResponseInfo"* %0
}

declare dereferenceable(8) %"struct.net::ResolveErrorInfo"* @_ZN3net16ResolveErrorInfoaSERKS0_(%"struct.net::ResolveErrorInfo"*, %"struct.net::ResolveErrorInfo"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(128) %"class.net::SSLInfo"* @_ZN3net7SSLInfoaSERKS0_(%"class.net::SSLInfo"*, %"class.net::SSLInfo"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16HttpResponseInfo14InitFromPickleERKN4base6PickleEPb(%"class.net::HttpResponseInfo"*, %"class.base::Pickle"* dereferenceable(40), i8* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::PickleIterator", align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca i16, align 2
  %14 = alloca %"class.net::IPAddress", align 1
  %15 = alloca %"class.base::BasicStringPiece", align 8
  %16 = alloca %"class.net::IPEndPoint", align 2
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"class.net::IPEndPoint", align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = bitcast %"class.base::PickleIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = bitcast %"class.base::PickleIterator"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %4, %"class.base::Pickle"* dereferenceable(40) %1) #10
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #10
  store i32 -1431655766, i32* %5, align 4
  %27 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %5) #10
  br i1 %27, label %28, label %385

28:                                               ; preds = %3
  %29 = load i32, i32* %5, align 4
  %30 = and i32 %29, 255
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %385

32:                                               ; preds = %28
  %33 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  store i64 -6148914691236517206, i64* %6, align 8
  %34 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* nonnull %4, i64* nonnull %6) #10
  br i1 %34, label %35, label %383

35:                                               ; preds = %32
  %36 = load i64, i64* %6, align 8
  %37 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 16, i32 0, i32 0
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 0
  store i8 1, i8* %38, align 8
  %39 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* nonnull %4, i64* nonnull %6) #10
  br i1 %39, label %40, label %383

40:                                               ; preds = %35
  %41 = load i64, i64* %6, align 8
  %42 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 17, i32 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call i8* @_Znwm(i64 64) #12
  %44 = bitcast i8* %43 to %"class.net::HttpResponseHeaders"*
  call void @_ZN3net19HttpResponseHeadersC1EPN4base14PickleIteratorE(%"class.net::HttpResponseHeaders"* nonnull %44, %"class.base::PickleIterator"* nonnull %4) #10
  %45 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22
  %46 = bitcast i8* %43 to i32*
  %47 = atomicrmw add i32* %46, i32 1 monotonic
  %48 = ptrtoint i8* %43 to i64
  %49 = bitcast %class.scoped_refptr.49* %45 to i64*
  %50 = getelementptr inbounds %class.scoped_refptr.49, %class.scoped_refptr.49* %45, i64 0, i32 0
  %51 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.net::HttpResponseHeaders"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %40
  %54 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw sub i32* %54, i32 1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %51) #10
  %58 = bitcast %"class.net::HttpResponseHeaders"* %51 to i8*
  call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %40, %53, %57
  %60 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %50, align 8
  %61 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %60, i64 0, i32 3
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %383, label %64

64:                                               ; preds = %59
  %65 = load i32, i32* %5, align 4
  %66 = and i32 %65, 256
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %89, label %68

68:                                               ; preds = %64
  %69 = call %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromPickleEPN4base14PickleIteratorE(%"class.base::PickleIterator"* nonnull %4) #10
  %70 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 0
  %71 = ptrtoint %"class.net::X509Certificate"* %69 to i64
  %72 = bitcast %class.scoped_refptr.20* %70 to i64*
  %73 = getelementptr inbounds %class.scoped_refptr.20, %class.scoped_refptr.20* %70, i64 0, i32 0
  %74 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %73, align 8
  store i64 %71, i64* %72, align 8
  %75 = icmp eq %"class.net::X509Certificate"* %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.net::X509Certificate", %"class.net::X509Certificate"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw sub i32* %77, i32 1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  call void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"* nonnull %74) #10
  %81 = bitcast %"class.net::X509Certificate"* %74 to i8*
  call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %80, %76
  %83 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %73, align 8
  br label %84

84:                                               ; preds = %82, %68
  %85 = phi %"class.net::X509Certificate"* [ %83, %82 ], [ %69, %68 ]
  %86 = icmp eq %"class.net::X509Certificate"* %85, null
  br i1 %86, label %383, label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %5, align 4
  br label %89

89:                                               ; preds = %87, %64
  %90 = phi i32 [ %88, %87 ], [ %65, %64 ]
  %91 = and i32 %90, 1024
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %89
  %94 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %94) #10
  store i32 -1431655766, i32* %7, align 4
  %95 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %7) #10
  br i1 %95, label %96, label %100

96:                                               ; preds = %93
  %97 = load i32, i32* %7, align 4
  %98 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 2
  store i32 %97, i32* %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #10
  %99 = load i32, i32* %5, align 4
  br label %101

100:                                              ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %94) #10
  br label %383

101:                                              ; preds = %96, %89
  %102 = phi i32 [ %99, %96 ], [ %90, %89 ]
  %103 = and i32 %102, 512
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %101
  %106 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %106) #10
  store i32 -1431655766, i32* %8, align 4
  %107 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %106) #10
  br i1 %107, label %108, label %383

108:                                              ; preds = %105
  %109 = load i32, i32* %5, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %102, %101 ]
  %112 = and i32 %111, 65536
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %125, label %114

114:                                              ; preds = %110
  %115 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #10
  store i32 -1431655766, i32* %9, align 4
  %116 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %9) #10
  br i1 %116, label %117, label %124

117:                                              ; preds = %114
  %118 = load i32, i32* %9, align 4
  %119 = and i32 %118, 7340032
  %120 = icmp eq i32 %119, 2097152
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 5
  store i32 %118, i32* %122, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #10
  %123 = load i32, i32* %5, align 4
  br label %125

124:                                              ; preds = %117, %114
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #10
  br label %383

125:                                              ; preds = %121, %110
  %126 = phi i32 [ %123, %121 ], [ %111, %110 ]
  %127 = and i32 %126, 1048576
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %157, label %129

129:                                              ; preds = %125
  %130 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %130) #10
  store i32 -1431655766, i32* %10, align 4
  %131 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %10) #10
  br i1 %131, label %132, label %154

132:                                              ; preds = %129
  %133 = load i32, i32* %10, align 4
  %134 = icmp sgt i32 %133, 0
  br i1 %134, label %135, label %155

135:                                              ; preds = %132
  %136 = bitcast i16* %11 to i8*
  br label %140

137:                                              ; preds = %152
  %138 = load i32, i32* %10, align 4
  %139 = icmp slt i32 %153, %138
  br i1 %139, label %140, label %155

140:                                              ; preds = %135, %137
  %141 = phi i32 [ 0, %135 ], [ %153, %137 ]
  %142 = call %"struct.net::ct::SignedCertificateTimestamp"* @_ZN3net2ct26SignedCertificateTimestamp16CreateFromPickleEPN4base14PickleIteratorE(%"class.base::PickleIterator"* nonnull %4) #10
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %136) #10
  store i16 -21846, i16* %11, align 2
  %143 = icmp eq %"struct.net::ct::SignedCertificateTimestamp"* %142, null
  br i1 %143, label %144, label %145

144:                                              ; preds = %140
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %136) #10
  br label %154

145:                                              ; preds = %140
  %146 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"* nonnull %4, i16* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %136) #10
  %147 = getelementptr inbounds %"struct.net::ct::SignedCertificateTimestamp", %"struct.net::ct::SignedCertificateTimestamp"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = atomicrmw sub i32* %147, i32 1 acq_rel
  %149 = icmp eq i32 %148, 1
  br i1 %149, label %150, label %152

150:                                              ; preds = %145
  call void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"* nonnull %142) #10
  %151 = bitcast %"struct.net::ct::SignedCertificateTimestamp"* %142 to i8*
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %145, %150
  %153 = add nuw nsw i32 %141, 1
  br i1 %146, label %137, label %154

154:                                              ; preds = %152, %129, %144
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #10
  br label %383

155:                                              ; preds = %137, %132
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %130) #10
  %156 = load i32, i32* %5, align 4
  br label %157

157:                                              ; preds = %155, %125
  %158 = phi i32 [ %156, %155 ], [ %126, %125 ]
  %159 = and i32 %158, 2048
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23
  %163 = call zeroext i1 @_ZN3net12HttpVaryData14InitFromPickleEPN4base14PickleIteratorE(%"class.net::HttpVaryData"* %162, %"class.base::PickleIterator"* nonnull %4) #10
  br i1 %163, label %164, label %383

164:                                              ; preds = %157, %161
  %165 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #10
  %166 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 24, i1 false) #10
  %168 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* nonnull %12) #10
  br i1 %168, label %169, label %374

169:                                              ; preds = %164
  %170 = bitcast i16* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %170) #10
  store i16 -21846, i16* %13, align 2
  %171 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"* nonnull %4, i16* nonnull %13) #10
  br i1 %171, label %172, label %372

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %14, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %173) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %173, i8 -86, i64 17, i1 false)
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %14) #10
  %174 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #10
  %175 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 0
  %176 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = load i8*, i8** %166, align 8
  %181 = select i1 %179, i8* %180, i8* %165
  store i8* %181, i8** %175, align 8
  %182 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  %183 = load i64, i64* %167, align 8
  %184 = zext i8 %178 to i64
  %185 = select i1 %179, i64 %183, i64 %184
  store i64 %185, i64* %182, align 8
  %186 = call zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"* nonnull %14, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #10
  br i1 %186, label %187, label %190

187:                                              ; preds = %172
  %188 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %188) #10
  %189 = load i16, i16* %13, align 2
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %16, %"class.net::IPAddress"* nonnull dereferenceable(17) %14, i16 zeroext %189) #10
  br label %205

190:                                              ; preds = %172
  %191 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %191) #10
  %192 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  %193 = load i8, i8* %177, align 1
  %194 = icmp slt i8 %193, 0
  %195 = load i8*, i8** %166, align 8
  %196 = select i1 %194, i8* %195, i8* %165
  store i8* %196, i8** %192, align 8
  %197 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  %198 = load i64, i64* %167, align 8
  %199 = zext i8 %193 to i64
  %200 = select i1 %194, i64 %198, i64 %199
  store i64 %200, i64* %197, align 8
  %201 = call zeroext i1 @_ZN3net25ParseURLHostnameToAddressERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %17, %"class.net::IPAddress"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %191) #10
  br i1 %201, label %202, label %209

202:                                              ; preds = %190
  %203 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %203) #10
  %204 = load i16, i16* %13, align 2
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %18, %"class.net::IPAddress"* nonnull dereferenceable(17) %14, i16 zeroext %204) #10
  br label %205

205:                                              ; preds = %187, %202
  %206 = phi i8* [ %203, %202 ], [ %188, %187 ]
  %207 = phi %"class.net::IPEndPoint"* [ %18, %202 ], [ %16, %187 ]
  %208 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* nonnull align 2 %206, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %207) #10
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %206) #10
  br label %209

209:                                              ; preds = %205, %190
  %210 = load i32, i32* %5, align 4
  %211 = and i32 %210, 131072
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %218, label %213

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %215 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* %214) #10
  br i1 %215, label %216, label %370

216:                                              ; preds = %213
  %217 = load i32, i32* %5, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %210, %209 ]
  %220 = and i32 %219, 262144
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %233, label %222

222:                                              ; preds = %218
  %223 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #10
  store i32 -1431655766, i32* %19, align 4
  %224 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %19) #10
  br i1 %224, label %225, label %368

225:                                              ; preds = %222
  %226 = load i32, i32* %19, align 4
  %227 = add i32 %226, -1
  %228 = icmp ult i32 %227, 40
  br i1 %228, label %229, label %231

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 15
  store i32 %226, i32* %230, align 8
  br label %231

231:                                              ; preds = %225, %229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #10
  %232 = load i32, i32* %5, align 4
  br label %233

233:                                              ; preds = %231, %218
  %234 = phi i32 [ %232, %231 ], [ %219, %218 ]
  %235 = and i32 %234, 4194304
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %258, label %237

237:                                              ; preds = %233
  %238 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %238) #10
  store i32 -1431655766, i32* %20, align 4
  %239 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %20) #10
  br i1 %239, label %240, label %369

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 5
  %242 = load i32, i32* %241, align 8
  %243 = and i32 %242, 6291456
  %244 = icmp eq i32 %243, 6291456
  br i1 %244, label %252, label %245

245:                                              ; preds = %240
  %246 = trunc i32 %242 to i16
  %247 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %246) #10
  %248 = icmp eq %struct.ssl_cipher_st* %247, null
  br i1 %248, label %256, label %249

249:                                              ; preds = %245
  %250 = call i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st* nonnull %247) #10
  %251 = icmp eq i32 %250, 952
  br i1 %251, label %252, label %256

252:                                              ; preds = %240, %249
  %253 = load i32, i32* %20, align 4
  %254 = trunc i32 %253 to i16
  %255 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 3
  store i16 %254, i16* %255, align 4
  br label %256

256:                                              ; preds = %245, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #10
  %257 = load i32, i32* %5, align 4
  br label %258

258:                                              ; preds = %256, %233
  %259 = phi i32 [ %257, %256 ], [ %234, %233 ]
  %260 = and i32 %259, 16777216
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %268, label %262

262:                                              ; preds = %258
  %263 = call zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"* nonnull %4, i64* nonnull %6) #10
  br i1 %263, label %264, label %370

264:                                              ; preds = %262
  %265 = load i64, i64* %6, align 8
  %266 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %265, i64* %266, align 8
  %267 = load i32, i32* %5, align 4
  br label %268

268:                                              ; preds = %258, %264
  %269 = phi i32 [ %259, %258 ], [ %267, %264 ]
  %270 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 4
  %271 = lshr i32 %269, 13
  %272 = trunc i32 %271 to i8
  %273 = and i8 %272, 1
  store i8 %273, i8* %270, align 2
  %274 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 5
  %275 = lshr i32 %269, 14
  %276 = trunc i32 %275 to i8
  %277 = and i8 %276, 1
  store i8 %277, i8* %274, align 1
  %278 = trunc i32 %269 to i16
  %279 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 6
  %280 = lshr i16 %278, 15
  %281 = trunc i16 %280 to i8
  store i8 %281, i8* %279, align 4
  %282 = lshr i32 %269, 12
  %283 = trunc i32 %282 to i8
  %284 = and i8 %283, 1
  store i8 %284, i8* %2, align 1
  %285 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 8
  %286 = lshr i32 %269, 19
  %287 = trunc i32 %286 to i8
  %288 = and i8 %287, 1
  store i8 %288, i8* %285, align 8
  %289 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 9
  %290 = lshr i32 %269, 21
  %291 = trunc i32 %290 to i8
  %292 = and i8 %291, 1
  store i8 %292, i8* %289, align 1
  %293 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 10
  %294 = lshr i32 %269, 26
  %295 = trunc i32 %294 to i8
  %296 = and i8 %295, 1
  store i8 %296, i8* %293, align 2
  %297 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 7
  %298 = lshr i32 %269, 23
  %299 = trunc i32 %298 to i8
  %300 = and i8 %299, 1
  store i8 %300, i8* %297, align 1
  %301 = and i32 %269, 33554432
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %314, label %303

303:                                              ; preds = %268
  %304 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %304) #10
  store i32 -1431655766, i32* %21, align 4
  %305 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %21) #10
  br i1 %305, label %306, label %313

306:                                              ; preds = %303
  %307 = load i32, i32* %21, align 4
  %308 = icmp ult i32 %307, 65536
  br i1 %308, label %309, label %313

309:                                              ; preds = %306
  %310 = trunc i32 %307 to i16
  %311 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 4
  store i16 %310, i16* %311, align 2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %304) #10
  %312 = load i32, i32* %5, align 4
  br label %314

313:                                              ; preds = %303, %306
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %304) #10
  br label %370

314:                                              ; preds = %309, %268
  %315 = phi i32 [ %312, %309 ], [ %269, %268 ]
  %316 = and i32 %315, 134217728
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %367, label %318

318:                                              ; preds = %314
  %319 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %319) #10
  store i32 -1431655766, i32* %22, align 4
  %320 = call zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"* nonnull %4, i32* nonnull %22) #10
  br i1 %320, label %322, label %321

321:                                              ; preds = %318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319) #10
  br label %370

322:                                              ; preds = %318
  %323 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %323) #10
  %324 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %323, i8 0, i64 24, i1 false) #10
  %326 = load i32, i32* %22, align 4
  %327 = icmp sgt i32 %326, 0
  br i1 %327, label %329, label %328

328:                                              ; preds = %322
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319) #10
  br label %367

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 1
  %331 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 2, i32 0, i32 0
  %332 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %333 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %332, i64 0, i32 1, i32 0
  %334 = bitcast %"class.std::__1::basic_string"** %330 to i64*
  %335 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24
  br label %336

336:                                              ; preds = %329, %355
  %337 = phi i32 [ 0, %329 ], [ %356, %355 ]
  %338 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %4, %"class.std::__1::basic_string"* nonnull %23) #10
  br i1 %338, label %339, label %359

339:                                              ; preds = %336
  %340 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %330, align 8
  %341 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %331, align 8
  %342 = icmp eq %"class.std::__1::basic_string"* %340, %341
  br i1 %342, label %354, label %343

343:                                              ; preds = %339
  %344 = load i8, i8* %333, align 1
  %345 = icmp slt i8 %344, 0
  br i1 %345, label %348, label %346

346:                                              ; preds = %343
  %347 = bitcast %"class.std::__1::basic_string"* %340 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %347, i8* nonnull align 8 %323, i64 24, i1 false) #10
  br label %351

348:                                              ; preds = %343
  %349 = load i8*, i8** %324, align 8
  %350 = load i64, i64* %325, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %340, i8* %349, i64 %350) #10
  br label %351

351:                                              ; preds = %348, %346
  %352 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %340, i64 1
  %353 = ptrtoint %"class.std::__1::basic_string"* %352 to i64
  store i64 %353, i64* %334, align 8
  br label %355

354:                                              ; preds = %339
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"* %335, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #10
  br label %355

355:                                              ; preds = %351, %354
  %356 = add nuw nsw i32 %337, 1
  %357 = load i32, i32* %22, align 4
  %358 = icmp slt i32 %356, %357
  br i1 %358, label %336, label %359

359:                                              ; preds = %336, %355
  %360 = phi i32 [ 1, %336 ], [ 0, %355 ]
  %361 = load i8, i8* %333, align 1
  %362 = icmp slt i8 %361, 0
  br i1 %362, label %363, label %365

363:                                              ; preds = %359
  %364 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %364) #12
  br label %365

365:                                              ; preds = %363, %359
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %323) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %319) #10
  %366 = icmp eq i32 %360, 0
  br i1 %366, label %367, label %370

367:                                              ; preds = %328, %314, %365
  br label %370

368:                                              ; preds = %222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #10
  br label %370

369:                                              ; preds = %237
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #10
  br label %370

370:                                              ; preds = %321, %313, %262, %369, %368, %213, %365, %367
  %371 = phi i1 [ true, %367 ], [ false, %365 ], [ false, %313 ], [ false, %213 ], [ false, %368 ], [ false, %369 ], [ false, %262 ], [ false, %321 ]
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %173) #10
  br label %372

372:                                              ; preds = %169, %370
  %373 = phi i1 [ %371, %370 ], [ false, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %170) #10
  br label %374

374:                                              ; preds = %164, %372
  %375 = phi i1 [ %373, %372 ], [ false, %164 ]
  %376 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %377 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %376, i64 0, i32 1, i32 0
  %378 = load i8, i8* %377, align 1
  %379 = icmp slt i8 %378, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %374
  %381 = load i8*, i8** %166, align 8
  call void @_ZdlPv(i8* %381) #12
  br label %382

382:                                              ; preds = %374, %380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #10
  br label %383

383:                                              ; preds = %154, %161, %124, %100, %84, %59, %35, %32, %105, %382
  %384 = phi i1 [ %375, %382 ], [ false, %124 ], [ false, %105 ], [ false, %100 ], [ false, %32 ], [ false, %35 ], [ false, %59 ], [ false, %84 ], [ false, %161 ], [ false, %154 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  br label %385

385:                                              ; preds = %383, %28, %3
  %386 = phi i1 [ false, %3 ], [ %384, %383 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  ret i1 %386
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator7ReadIntEPi(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator9ReadInt64EPl(%"class.base::PickleIterator"*, i64*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN3net19HttpResponseHeadersC1EPN4base14PickleIteratorE(%"class.net::HttpResponseHeaders"*, %"class.base::PickleIterator"*) unnamed_addr #2

declare %"class.net::X509Certificate"* @_ZN3net15X509Certificate16CreateFromPickleEPN4base14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt32EPj(%"class.base::PickleIterator"*, i32*) local_unnamed_addr #2

declare %"struct.net::ct::SignedCertificateTimestamp"* @_ZN3net2ct26SignedCertificateTimestamp16CreateFromPickleEPN4base14PickleIteratorE(%"class.base::PickleIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt16EPt(%"class.base::PickleIterator"*, i16*) local_unnamed_addr #2

declare zeroext i1 @_ZN3net12HttpVaryData14InitFromPickleEPN4base14PickleIteratorE(%"class.net::HttpVaryData"*, %"class.base::PickleIterator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #2

declare zeroext i1 @_ZN3net9IPAddress19AssignFromIPLiteralERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::IPAddress"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #2

declare zeroext i1 @_ZN3net25ParseURLHostnameToAddressERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_9IPAddressE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.net::IPAddress"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net16HttpResponseInfo7PersistEPN4base6PickleEbb(%"class.net::HttpResponseInfo"*, %"class.base::Pickle"*, i1 zeroext, i1 zeroext) local_unnamed_addr #1 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i16, align 2
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.base::BasicStringPiece", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.base::BasicStringPiece", align 8
  %20 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 0, i32 0
  %21 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %22 = icmp eq %"class.net::X509Certificate"* %21, null
  br i1 %22, label %38, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 3
  %25 = load i16, i16* %24, align 4
  %26 = icmp eq i16 %25, 0
  %27 = select i1 %26, i32 1283, i32 4195587
  %28 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  %31 = or i32 %27, 65536
  %32 = select i1 %30, i32 %27, i32 %31
  %33 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 4
  %34 = load i16, i16* %33, align 2
  %35 = icmp eq i16 %34, 0
  %36 = or i32 %32, 33554432
  %37 = select i1 %35, i32 %32, i32 %36
  br label %38

38:                                               ; preds = %4, %23
  %39 = phi i32 [ 3, %4 ], [ %37, %23 ]
  %40 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23
  %41 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 23, i32 1
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  %44 = or i32 %39, 2048
  %45 = select i1 %43, i32 %39, i32 %44
  %46 = or i32 %45, 4096
  %47 = select i1 %3, i32 %46, i32 %45
  %48 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 4
  %49 = load i8, i8* %48, align 2, !range !2
  %50 = icmp eq i8 %49, 0
  %51 = or i32 %47, 8192
  %52 = select i1 %50, i32 %47, i32 %51
  %53 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 5
  %54 = load i8, i8* %53, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = or i32 %52, 147456
  %57 = select i1 %55, i32 %52, i32 %56
  %58 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 6
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = or i32 %57, 32768
  %62 = select i1 %60, i32 %57, i32 %61
  %63 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 15
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, 0
  %66 = or i32 %62, 262144
  %67 = select i1 %65, i32 %62, i32 %66
  %68 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 8
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = or i32 %67, 524288
  %72 = select i1 %70, i32 %67, i32 %71
  %73 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 9
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = or i32 %72, 2097152
  %77 = select i1 %75, i32 %72, i32 %76
  %78 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 10
  %79 = load i8, i8* %78, align 2, !range !2
  %80 = icmp eq i8 %79, 0
  %81 = or i32 %77, 67108864
  %82 = select i1 %80, i32 %77, i32 %81
  %83 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 7
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = or i32 %82, 8388608
  %87 = select i1 %85, i32 %82, i32 %86
  %88 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 12, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  %91 = or i32 %87, 16777216
  %92 = select i1 %90, i32 %87, i32 %91
  %93 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 0
  %94 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  %95 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 24, i32 0, i32 1
  %96 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %97 = icmp eq %"class.std::__1::basic_string"* %94, %96
  %98 = or i32 %92, 134217728
  %99 = select i1 %97, i32 %92, i32 %98
  %100 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 %99, i32* %11, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %100) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  %101 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 16, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)
  store i64 %102, i64* %9, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %103) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)
  %104 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 17, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)
  store i64 %105, i64* %7, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %106) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)
  %107 = select i1 %2, i32 63, i32 -1
  %108 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 22, i32 0
  %109 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %108, align 8
  call void @_ZN3net19HttpResponseHeaders7PersistEPN4base6PickleEi(%"class.net::HttpResponseHeaders"* %109, %"class.base::Pickle"* %1, i32 %107) #10
  %110 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %111 = icmp eq %"class.net::X509Certificate"* %110, null
  br i1 %111, label %121, label %112

112:                                              ; preds = %38
  call void @_ZNK3net15X509Certificate7PersistEPN4base6PickleE(%"class.net::X509Certificate"* nonnull %110, %"class.base::Pickle"* %1) #10
  %113 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115)
  store i32 %114, i32* %5, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115)
  %116 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 5
  %117 = load i32, i32* %116, align 8
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %112
  %120 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120)
  store i32 %117, i32* %6, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %120) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120)
  br label %121

121:                                              ; preds = %38, %112, %119
  %122 = load i8, i8* %41, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %125, label %124

124:                                              ; preds = %121
  call void @_ZNK3net12HttpVaryData7PersistEPN4base6PickleE(%"class.net::HttpVaryData"* %40, %"class.base::Pickle"* %1) #10
  br label %125

125:                                              ; preds = %121, %124
  %126 = bitcast %"class.base::BasicStringPiece"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #10
  %127 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #10
  %128 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13
  call void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* nonnull sret %17, %"class.net::IPEndPoint"* %128) #10
  %129 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 0
  %130 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, 0
  %134 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = select i1 %133, i8* %135, i8* %127
  store i8* %136, i8** %129, align 8
  %137 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %16, i64 0, i32 1
  %138 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %139 = load i64, i64* %138, align 8
  %140 = zext i8 %132 to i64
  %141 = select i1 %133, i64 %139, i64 %140
  store i64 %141, i64* %137, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %16) #10
  %142 = load i8, i8* %131, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %146

144:                                              ; preds = %125
  %145 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %145) #12
  br label %146

146:                                              ; preds = %125, %144
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #10
  %147 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 13, i32 1
  %148 = load i16, i16* %147, align 2
  %149 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %149)
  store i16 %148, i16* %8, align 2
  call void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %149) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %149)
  %150 = load i8, i8* %53, align 1, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %169, label %152

152:                                              ; preds = %146
  %153 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #10
  %154 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  %156 = bitcast %"class.std::__1::basic_string"* %154 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %154, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = bitcast %"class.std::__1::basic_string"* %154 to i8*
  %163 = select i1 %159, i8* %161, i8* %162
  store i8* %163, i8** %155, align 8
  %164 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  %165 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = zext i8 %158 to i64
  %168 = select i1 %159, i64 %166, i64 %167
  store i64 %168, i64* %164, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %18) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #10
  br label %169

169:                                              ; preds = %146, %152
  %170 = load i32, i32* %63, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %169
  %173 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %173)
  store i32 %170, i32* %10, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %173) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %173)
  br label %174

174:                                              ; preds = %169, %172
  %175 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %176 = icmp eq %"class.net::X509Certificate"* %175, null
  br i1 %176, label %184, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 3
  %179 = load i16, i16* %178, align 4
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %184, label %181

181:                                              ; preds = %177
  %182 = zext i16 %179 to i32
  %183 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183)
  store i32 %182, i32* %12, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %183) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183)
  br label %184

184:                                              ; preds = %174, %177, %181
  %185 = and i32 %99, 16777216
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = load i64, i64* %88, align 8
  %189 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189)
  store i64 %188, i64* %13, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %189) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189)
  br label %190

190:                                              ; preds = %184, %187
  %191 = load %"class.net::X509Certificate"*, %"class.net::X509Certificate"** %20, align 8
  %192 = icmp eq %"class.net::X509Certificate"* %191, null
  br i1 %192, label %200, label %193

193:                                              ; preds = %190
  %194 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 21, i32 4
  %195 = load i16, i16* %194, align 2
  %196 = icmp eq i16 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %193
  %198 = zext i16 %195 to i32
  %199 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199)
  store i32 %198, i32* %14, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %199) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199)
  br label %200

200:                                              ; preds = %190, %193, %197
  %201 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  %202 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %203 = icmp eq %"class.std::__1::basic_string"* %201, %202
  br i1 %203, label %234, label %204

204:                                              ; preds = %200
  %205 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  %206 = ptrtoint %"class.std::__1::basic_string"* %202 to i64
  %207 = sub i64 %206, %205
  %208 = sdiv exact i64 %207, 24
  %209 = trunc i64 %208 to i32
  %210 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210)
  store i32 %209, i32* %15, align 4
  call void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"* %1, i8* nonnull %210) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210)
  %211 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %93, align 8
  %212 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %95, align 8
  %213 = icmp eq %"class.std::__1::basic_string"* %211, %212
  br i1 %213, label %234, label %214

214:                                              ; preds = %204
  %215 = bitcast %"class.base::BasicStringPiece"* %19 to i8*
  %216 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 0
  %217 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %19, i64 0, i32 1
  br label %218

218:                                              ; preds = %214, %218
  %219 = phi %"class.std::__1::basic_string"* [ %211, %214 ], [ %232, %218 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #10
  %220 = bitcast %"class.std::__1::basic_string"* %219 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %220, i64 0, i32 1, i32 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %219 to i8*
  %227 = select i1 %223, i8* %225, i8* %226
  store i8* %227, i8** %216, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = load i64, i64* %228, align 8
  %230 = zext i8 %222 to i64
  %231 = select i1 %223, i64 %229, i64 %230
  store i64 %231, i64* %217, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %19) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #10
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %219, i64 1
  %233 = icmp eq %"class.std::__1::basic_string"* %232, %212
  br i1 %233, label %234, label %218

234:                                              ; preds = %218, %204, %200
  ret void
}

declare void @_ZN3net19HttpResponseHeaders7PersistEPN4base6PickleEi(%"class.net::HttpResponseHeaders"*, %"class.base::Pickle"*, i32) local_unnamed_addr #2

declare void @_ZNK3net15X509Certificate7PersistEPN4base6PickleE(%"class.net::X509Certificate"*, %"class.base::Pickle"*) local_unnamed_addr #2

declare void @_ZNK3net12HttpVaryData7PersistEPN4base6PickleE(%"class.net::HttpVaryData"*, %"class.base::Pickle"*) local_unnamed_addr #2

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK3net10IPEndPoint19ToStringWithoutPortEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpResponseInfo10DidUseQuicEv(%"class.net::HttpResponseInfo"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %0, i64 0, i32 15
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -5
  %5 = icmp ult i32 %4, 36
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = zext i32 %4 to i36
  %8 = lshr i36 -31, %7
  %9 = and i36 %8, 1
  %10 = icmp ne i36 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpResponseInfo22ConnectionInfoToStringENS0_14ConnectionInfoE(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #1 align 2 {
  switch i32 %1, label %202 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %14
    i32 3, label %18
    i32 6, label %23
    i32 7, label %23
    i32 4, label %23
    i32 5, label %29
    i32 10, label %34
    i32 11, label %39
    i32 12, label %44
    i32 13, label %49
    i32 14, label %54
    i32 15, label %59
    i32 16, label %64
    i32 17, label %69
    i32 18, label %74
    i32 19, label %79
    i32 20, label %84
    i32 21, label %89
    i32 23, label %94
    i32 24, label %99
    i32 25, label %104
    i32 26, label %109
    i32 28, label %114
    i32 31, label %119
    i32 29, label %124
    i32 32, label %129
    i32 30, label %134
    i32 33, label %139
    i32 22, label %144
    i32 35, label %149
    i32 36, label %154
    i32 37, label %159
    i32 38, label %164
    i32 34, label %169
    i32 8, label %174
    i32 9, label %180
    i32 27, label %186
    i32 39, label %191
    i32 40, label %196
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 7, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i64 7, i1 false) #10
  %7 = getelementptr inbounds i8, i8* %6, i64 7
  store i8 0, i8* %7, align 1
  br label %206

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 8, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 3543824036607063144, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i64* %12 to i8*
  store i8 0, i8* %13, align 8
  br label %206

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 0, i8* %16, align 1
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %17, align 8
  br label %206

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 6, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i64 6, i1 false) #10
  %22 = getelementptr inbounds i8, i8* %21, i64 6
  store i8 0, i8* %22, align 2
  br label %206

23:                                               ; preds = %2, %2, %2
  %24 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  store i8 2, i8* %25, align 1
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 12904, i16* %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 2
  store i8 0, i8* %28, align 2
  br label %206

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 11, i8* %31, align 1
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11, i1 false) #10
  %33 = getelementptr inbounds i8, i8* %32, i64 11
  store i8 0, i8* %33, align 1
  br label %206

34:                                               ; preds = %2
  %35 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  store i8 14, i8* %36, align 1
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14, i1 false) #10
  %38 = getelementptr inbounds i8, i8* %37, i64 14
  store i8 0, i8* %38, align 2
  br label %206

39:                                               ; preds = %2
  %40 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  store i8 14, i8* %41, align 1
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0), i64 14, i1 false) #10
  %43 = getelementptr inbounds i8, i8* %42, i64 14
  store i8 0, i8* %43, align 2
  br label %206

44:                                               ; preds = %2
  %45 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 14, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i64 14, i1 false) #10
  %48 = getelementptr inbounds i8, i8* %47, i64 14
  store i8 0, i8* %48, align 2
  br label %206

49:                                               ; preds = %2
  %50 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  store i8 14, i8* %51, align 1
  %52 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14, i1 false) #10
  %53 = getelementptr inbounds i8, i8* %52, i64 14
  store i8 0, i8* %53, align 2
  br label %206

54:                                               ; preds = %2
  %55 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  store i8 14, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14, i1 false) #10
  %58 = getelementptr inbounds i8, i8* %57, i64 14
  store i8 0, i8* %58, align 2
  br label %206

59:                                               ; preds = %2
  %60 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 14, i8* %61, align 1
  %62 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14, i1 false) #10
  %63 = getelementptr inbounds i8, i8* %62, i64 14
  store i8 0, i8* %63, align 2
  br label %206

64:                                               ; preds = %2
  %65 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  store i8 14, i8* %66, align 1
  %67 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i64 14, i1 false) #10
  %68 = getelementptr inbounds i8, i8* %67, i64 14
  store i8 0, i8* %68, align 2
  br label %206

69:                                               ; preds = %2
  %70 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 14, i8* %71, align 1
  %72 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14, i1 false) #10
  %73 = getelementptr inbounds i8, i8* %72, i64 14
  store i8 0, i8* %73, align 2
  br label %206

74:                                               ; preds = %2
  %75 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  store i8 14, i8* %76, align 1
  %77 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i64 14, i1 false) #10
  %78 = getelementptr inbounds i8, i8* %77, i64 14
  store i8 0, i8* %78, align 2
  br label %206

79:                                               ; preds = %2
  %80 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  store i8 14, i8* %81, align 1
  %82 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i64 14, i1 false) #10
  %83 = getelementptr inbounds i8, i8* %82, i64 14
  store i8 0, i8* %83, align 2
  br label %206

84:                                               ; preds = %2
  %85 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  store i8 14, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i64 14, i1 false) #10
  %88 = getelementptr inbounds i8, i8* %87, i64 14
  store i8 0, i8* %88, align 2
  br label %206

89:                                               ; preds = %2
  %90 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  store i8 14, i8* %91, align 1
  %92 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i64 14, i1 false) #10
  %93 = getelementptr inbounds i8, i8* %92, i64 14
  store i8 0, i8* %93, align 2
  br label %206

94:                                               ; preds = %2
  %95 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 14, i8* %96, align 1
  %97 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0), i64 14, i1 false) #10
  %98 = getelementptr inbounds i8, i8* %97, i64 14
  store i8 0, i8* %98, align 2
  br label %206

99:                                               ; preds = %2
  %100 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 14, i8* %101, align 1
  %102 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i64 14, i1 false) #10
  %103 = getelementptr inbounds i8, i8* %102, i64 14
  store i8 0, i8* %103, align 2
  br label %206

104:                                              ; preds = %2
  %105 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  store i8 14, i8* %106, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i64 14, i1 false) #10
  %108 = getelementptr inbounds i8, i8* %107, i64 14
  store i8 0, i8* %108, align 2
  br label %206

109:                                              ; preds = %2
  %110 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 14, i8* %111, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0), i64 14, i1 false) #10
  %113 = getelementptr inbounds i8, i8* %112, i64 14
  store i8 0, i8* %113, align 2
  br label %206

114:                                              ; preds = %2
  %115 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 7, i8* %116, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %117, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7, i1 false) #10
  %118 = getelementptr inbounds i8, i8* %117, i64 7
  store i8 0, i8* %118, align 1
  br label %206

119:                                              ; preds = %2
  %120 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  store i8 7, i8* %121, align 1
  %122 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i64 7, i1 false) #10
  %123 = getelementptr inbounds i8, i8* %122, i64 7
  store i8 0, i8* %123, align 1
  br label %206

124:                                              ; preds = %2
  %125 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 7, i8* %126, align 1
  %127 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i64 7, i1 false) #10
  %128 = getelementptr inbounds i8, i8* %127, i64 7
  store i8 0, i8* %128, align 1
  br label %206

129:                                              ; preds = %2
  %130 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %131 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %130, i64 0, i32 1, i32 0
  store i8 7, i8* %131, align 1
  %132 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i64 7, i1 false) #10
  %133 = getelementptr inbounds i8, i8* %132, i64 7
  store i8 0, i8* %133, align 1
  br label %206

134:                                              ; preds = %2
  %135 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  store i8 7, i8* %136, align 1
  %137 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %137, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i64 7, i1 false) #10
  %138 = getelementptr inbounds i8, i8* %137, i64 7
  store i8 0, i8* %138, align 1
  br label %206

139:                                              ; preds = %2
  %140 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  store i8 7, i8* %141, align 1
  %142 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %142, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), i64 7, i1 false) #10
  %143 = getelementptr inbounds i8, i8* %142, i64 7
  store i8 0, i8* %143, align 1
  br label %206

144:                                              ; preds = %2
  %145 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %146 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %145, i64 0, i32 1, i32 0
  store i8 7, i8* %146, align 1
  %147 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i64 7, i1 false) #10
  %148 = getelementptr inbounds i8, i8* %147, i64 7
  store i8 0, i8* %148, align 1
  br label %206

149:                                              ; preds = %2
  %150 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  store i8 5, i8* %151, align 1
  %152 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5, i1 false) #10
  %153 = getelementptr inbounds i8, i8* %152, i64 5
  store i8 0, i8* %153, align 1
  br label %206

154:                                              ; preds = %2
  %155 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %156 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %155, i64 0, i32 1, i32 0
  store i8 5, i8* %156, align 1
  %157 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %157, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5, i1 false) #10
  %158 = getelementptr inbounds i8, i8* %157, i64 5
  store i8 0, i8* %158, align 1
  br label %206

159:                                              ; preds = %2
  %160 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  store i8 5, i8* %161, align 1
  %162 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i64 5, i1 false) #10
  %163 = getelementptr inbounds i8, i8* %162, i64 5
  store i8 0, i8* %163, align 1
  br label %206

164:                                              ; preds = %2
  %165 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %166 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %165, i64 0, i32 1, i32 0
  store i8 5, i8* %166, align 1
  %167 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i64 5, i1 false) #10
  %168 = getelementptr inbounds i8, i8* %167, i64 5
  store i8 0, i8* %168, align 1
  br label %206

169:                                              ; preds = %2
  %170 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %171 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %170, i64 0, i32 1, i32 0
  store i8 7, i8* %171, align 1
  %172 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i64 7, i1 false) #10
  %173 = getelementptr inbounds i8, i8* %172, i64 7
  store i8 0, i8* %173, align 1
  br label %206

174:                                              ; preds = %2
  %175 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  store i8 8, i8* %176, align 1
  %177 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 4120283689398858856, i64* %177, align 8
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %179 = bitcast i64* %178 to i8*
  store i8 0, i8* %179, align 8
  br label %206

180:                                              ; preds = %2
  %181 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %182 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %181, i64 0, i32 1, i32 0
  store i8 8, i8* %182, align 1
  %183 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  store i64 3471766442569135208, i64* %183, align 8
  %184 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = bitcast i64* %184 to i8*
  store i8 0, i8* %185, align 8
  br label %206

186:                                              ; preds = %2
  %187 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %188 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %187, i64 0, i32 1, i32 0
  store i8 14, i8* %188, align 1
  %189 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i64 14, i1 false) #10
  %190 = getelementptr inbounds i8, i8* %189, i64 14
  store i8 0, i8* %190, align 2
  br label %206

191:                                              ; preds = %2
  %192 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %193 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %192, i64 0, i32 1, i32 0
  store i8 7, i8* %193, align 1
  %194 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i64 7, i1 false) #10
  %195 = getelementptr inbounds i8, i8* %194, i64 7
  store i8 0, i8* %195, align 1
  br label %206

196:                                              ; preds = %2
  %197 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  store i8 2, i8* %198, align 1
  %199 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %200 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  store i16 13160, i16* %200, align 8
  %201 = getelementptr inbounds i8, i8* %199, i64 2
  store i8 0, i8* %201, align 2
  br label %206

202:                                              ; preds = %2
  %203 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  store i8 0, i8* %204, align 1
  %205 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %205, align 8
  br label %206

206:                                              ; preds = %202, %196, %191, %186, %180, %174, %169, %164, %159, %154, %149, %144, %139, %134, %129, %124, %119, %114, %109, %104, %99, %94, %89, %84, %79, %74, %69, %64, %59, %54, %49, %44, %39, %34, %29, %23, %18, %14, %8, %3
  ret void
}

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.net::AuthChallengeInfo"* @_ZN3net17AuthChallengeInfoaSERKS0_(%"class.net::AuthChallengeInfo"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %7) #10
  %9 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2
  %11 = icmp eq %"class.net::AuthChallengeInfo"* %0, %1
  br i1 %11, label %134, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #10
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %27, i64 %29) #10
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %38, i64 %39) #10
  br label %41

41:                                               ; preds = %22, %25, %31
  %42 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3
  %44 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %47, label %62, label %52

52:                                               ; preds = %41
  br i1 %51, label %56, label %53

53:                                               ; preds = %52
  %54 = bitcast %"class.std::__1::basic_string"* %42 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #10
  br label %72

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %42, i8* %58, i64 %60) #10
  br label %72

62:                                               ; preds = %41
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %68 = zext i8 %50 to i64
  %69 = select i1 %51, i8* %64, i8* %67
  %70 = select i1 %51, i64 %66, i64 %68
  %71 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %42, i8* %69, i64 %70) #10
  br label %72

72:                                               ; preds = %53, %56, %62
  %73 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 4
  %74 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4
  %75 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %78, label %93, label %83

83:                                               ; preds = %72
  br i1 %82, label %87, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  %86 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #10
  br label %103

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %73, i8* %89, i64 %91) #10
  br label %103

93:                                               ; preds = %72
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::basic_string"* %74 to i8*
  %99 = zext i8 %81 to i64
  %100 = select i1 %82, i8* %95, i8* %98
  %101 = select i1 %82, i64 %97, i64 %99
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %73, i8* %100, i64 %101) #10
  br label %103

103:                                              ; preds = %84, %87, %93
  %104 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 5
  %105 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5
  %106 = bitcast %"class.std::__1::basic_string"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %109, label %124, label %114

114:                                              ; preds = %103
  br i1 %113, label %118, label %115

115:                                              ; preds = %114
  %116 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %117 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 24, i1 false) #10
  br label %134

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %104, i8* %120, i64 %122) #10
  br label %134

124:                                              ; preds = %103
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %130 = zext i8 %112 to i64
  %131 = select i1 %113, i8* %126, i8* %129
  %132 = select i1 %113, i64 %128, i64 %130
  %133 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %104, i8* %131, i64 %132) #10
  br label %134

134:                                              ; preds = %2, %115, %118, %124
  ret %"class.net::AuthChallengeInfo"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #2

declare i32 @SSL_CIPHER_get_kx_nid(%struct.ssl_cipher_st*) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm4EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

declare void @_ZN4base6Pickle16WriteBytesStaticILm2EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18SSLCertRequestInfoD1Ev(%"class.net::SSLCertRequestInfo"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #10
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #10
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #10
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #10
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #11
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #10
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #10
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net15X509CertificateD1Ev(%"class.net::X509Certificate"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net2ct26SignedCertificateTimestampD1Ev(%"struct.net::ct::SignedCertificateTimestamp"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #10
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #10
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
