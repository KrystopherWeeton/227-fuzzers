; ModuleID = '../../third_party/blink/renderer/core/clipboard/data_transfer.cc'
source_filename = "../../third_party/blink/renderer/core/clipboard/data_transfer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1744", i64 }
%"class.std::__1::vector.1744" = type { %"class.std::__1::__vector_base.1745" }
%"class.std::__1::__vector_base.1745" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1746" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1746" = type { %"struct.std::__1::__compressed_pair_elem.1747" }
%"struct.std::__1::__compressed_pair_elem.1747" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%class.scoped_refptr.2685 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2686", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2693" }
%"class.WTF::RefCounted.2686" = type { %"class.base::RefCounted.2687" }
%"class.base::RefCounted.2687" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2688", i32, [4 x i8] }>
%"class.WTF::Vector.2688" = type { %"class.WTF::VectorBuffer.2689" }
%"class.WTF::VectorBuffer.2689" = type { %"class.WTF::VectorBufferBase.2690" }
%"class.WTF::VectorBufferBase.2690" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2693" = type { %"class.WTF::VectorBuffer.2694" }
%"class.WTF::VectorBuffer.2694" = type { %"class.WTF::VectorBufferBase.2695" }
%"class.WTF::VectorBufferBase.2695" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2696", %"class.std::__1::unique_ptr.2707", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"class.blink::Color" = type { i32 }
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2696" = type { %"class.std::__1::__compressed_pair.2697" }
%"class.std::__1::__compressed_pair.2697" = type { %"struct.std::__1::__compressed_pair_elem.2698" }
%"struct.std::__1::__compressed_pair_elem.2698" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2699", %"class.WTF::Vector.1801", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2699" = type { %"class.WTF::VectorBuffer.2700" }
%"class.WTF::VectorBuffer.2700" = type { %"class.WTF::VectorBufferBase.2701" }
%"class.WTF::VectorBufferBase.2701" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1801" = type { %"class.WTF::VectorBuffer.1802" }
%"class.WTF::VectorBuffer.1802" = type { %"class.WTF::VectorBufferBase.1803" }
%"class.WTF::VectorBufferBase.1803" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2707" = type { %"class.std::__1::__compressed_pair.2708" }
%"class.std::__1::__compressed_pair.2708" = type { %"struct.std::__1::__compressed_pair_elem.2709" }
%"struct.std::__1::__compressed_pair_elem.2709" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2710", %"class.absl::optional.2710" }
%"class.absl::optional.2710" = type { %"class.absl::optional_internal::optional_data.2711" }
%"class.absl::optional_internal::optional_data.2711" = type { %"class.absl::optional_internal::optional_data_base.2712" }
%"class.absl::optional_internal::optional_data_base.2712" = type { %"class.absl::optional_internal::optional_data_dtor_base.2713" }
%"class.absl::optional_internal::optional_data_dtor_base.2713" = type { i8, [3 x i8], %union.anon.2714 }
%union.anon.2714 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%union.anon.2724 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2725", %"class.WTF::Vector.2730" }
%"class.WTF::Vector.2725" = type { %"class.WTF::VectorBuffer.2726" }
%"class.WTF::VectorBuffer.2726" = type { %"class.WTF::VectorBufferBase.2727", [128 x i8] }
%"class.WTF::VectorBufferBase.2727" = type { i32*, i32, i32 }
%"class.WTF::Vector.2730" = type { %"class.WTF::VectorBuffer.2731" }
%"class.WTF::VectorBuffer.2731" = type { %"class.WTF::VectorBufferBase.2732", [128 x i8] }
%"class.WTF::VectorBufferBase.2732" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2735" = type { %"class.WTF::VectorBuffer.2736" }
%"class.WTF::VectorBuffer.2736" = type { %"class.WTF::VectorBufferBase.2737" }
%"class.WTF::VectorBufferBase.2737" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2740" = type { %"class.WTF::HashTable.2741" }
%"class.WTF::HashTable.2741" = type <{ %"struct.WTF::KeyValuePair.2744"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2744" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2745", %"class.WTF::Vector.2750" }
%"class.WTF::HashMap.2745" = type { %"class.WTF::HashTable.2746" }
%"class.WTF::HashTable.2746" = type <{ %"struct.WTF::KeyValuePair.2749"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2749" = type opaque
%"class.WTF::Vector.2750" = type { %"class.WTF::VectorBuffer.2751" }
%"class.WTF::VectorBuffer.2751" = type { %"class.WTF::VectorBufferBase.2752" }
%"class.WTF::VectorBufferBase.2752" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2685, %class.scoped_refptr.2685, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2693"*, %"class.absl::optional.2720", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2720" = type { %"class.absl::optional_internal::optional_data.2721" }
%"class.absl::optional_internal::optional_data.2721" = type { %"class.absl::optional_internal::optional_data_base.2722" }
%"class.absl::optional_internal::optional_data_base.2722" = type { %"class.absl::optional_internal::optional_data_dtor_base.2723" }
%"class.absl::optional_internal::optional_data_dtor_base.2723" = type { i8, %union.anon.2724 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.WTF::Vector.2937" = type { %"class.WTF::VectorBuffer.2938" }
%"class.WTF::VectorBuffer.2938" = type { %"class.WTF::VectorBufferBase.2939" }
%"class.WTF::VectorBufferBase.2939" = type { %"class.std::__1::unique_ptr.2940"*, i32, i32 }
%"class.std::__1::unique_ptr.2940" = type { %"class.std::__1::__compressed_pair.2941" }
%"class.std::__1::__compressed_pair.2941" = type { %"struct.std::__1::__compressed_pair_elem.2942" }
%"struct.std::__1::__compressed_pair_elem.2942" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.2943, %class.sk_sp.2944, %class.sk_sp.2980, %class.sk_sp.2981, %class.sk_sp.2982, %class.sk_sp.817, i32, float, float, i32, %union.anon.2983, [4 x i8] }>
%class.sk_sp.2943 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.2944 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.2945", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.2951, i32, %"class.absl::optional.2967", %"class.std::__1::vector.842", %"class.std::__1::vector.2972", %class.sk_sp.2979, %class.sk_sp.2950, i32, [4 x i8] }>
%"class.absl::optional.2945" = type { %"class.absl::optional_internal::optional_data.2946" }
%"class.absl::optional_internal::optional_data.2946" = type { %"class.absl::optional_internal::optional_data_base.2947" }
%"class.absl::optional_internal::optional_data_base.2947" = type { %"class.absl::optional_internal::optional_data_dtor_base.2948" }
%"class.absl::optional_internal::optional_data_dtor_base.2948" = type { i8, %union.anon.2949 }
%union.anon.2949 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.2950, %class.sk_sp.2951, %"class.gfx::Rect", i32, %class.sk_sp.2956, %class.sk_sp.2964, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2950, %class.scoped_refptr.2965 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.2956 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2957" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2926, i32, i32 }
%class.sk_sp.2926 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2927, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2927 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.2957" = type { %"class.std::__1::__vector_base.2958" }
%"class.std::__1::__vector_base.2958" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2959" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.2959" = type { %"struct.std::__1::__compressed_pair_elem.2960" }
%"struct.std::__1::__compressed_pair_elem.2960" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.2964 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.2965 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2966", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2966" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%class.sk_sp.2951 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2952", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2952" = type { %"class.std::__1::__compressed_pair.2953" }
%"class.std::__1::__compressed_pair.2953" = type { %"struct.std::__1::__compressed_pair_elem.2954" }
%"struct.std::__1::__compressed_pair_elem.2954" = type { i8* }
%"class.absl::optional.2967" = type { %"class.absl::optional_internal::optional_data.2968" }
%"class.absl::optional_internal::optional_data.2968" = type { %"class.absl::optional_internal::optional_data_base.2969" }
%"class.absl::optional_internal::optional_data_base.2969" = type { %"class.absl::optional_internal::optional_data_dtor_base.2970" }
%"class.absl::optional_internal::optional_data_dtor_base.2970" = type { i8, %union.anon.2971 }
%union.anon.2971 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%"class.std::__1::vector.2972" = type { %"class.std::__1::__vector_base.2973" }
%"class.std::__1::__vector_base.2973" = type { float*, float*, %"class.std::__1::__compressed_pair.2974" }
%"class.std::__1::__compressed_pair.2974" = type { %"struct.std::__1::__compressed_pair_elem.2975" }
%"struct.std::__1::__compressed_pair_elem.2975" = type { float* }
%class.sk_sp.2979 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.2950 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.2980 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2981 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.2982 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%union.anon.2983 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.2943 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.2989, %"class.std::__1::unique_ptr.2990" }
%class.scoped_refptr.2989 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.2990" = type { %"class.std::__1::__compressed_pair.2991" }
%"class.std::__1::__compressed_pair.2991" = type { %"struct.std::__1::__compressed_pair_elem.2992" }
%"struct.std::__1::__compressed_pair_elem.2992" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.2993", %struct.SkRect }
%"class.absl::optional.2993" = type { %"class.absl::optional_internal::optional_data.2994" }
%"class.absl::optional_internal::optional_data.2994" = type { %"class.absl::optional_internal::optional_data_base.2995" }
%"class.absl::optional_internal::optional_data_base.2995" = type { %"class.absl::optional_internal::optional_data_dtor_base.2996" }
%"class.absl::optional_internal::optional_data_dtor_base.2996" = type { i8, %union.anon.2997 }
%union.anon.2997 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2998, [384 x i64], %class.sk_sp.2999, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.3000", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.3006" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2998 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.2999 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.3000" = type { %"class.std::__1::__compressed_pair.3001" }
%"class.std::__1::__compressed_pair.3001" = type { %"struct.std::__1::__compressed_pair_elem.3002" }
%"struct.std::__1::__compressed_pair_elem.3002" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.3006" = type { %"class.std::__1::__compressed_pair.3007" }
%"class.std::__1::__compressed_pair.3007" = type { %"struct.std::__1::__compressed_pair_elem.3008" }
%"struct.std::__1::__compressed_pair_elem.3008" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.3015" = type { %"class.std::__1::__compressed_pair.3016" }
%"class.std::__1::__compressed_pair.3016" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"struct.std::__1::__compressed_pair_elem.3017" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.3036", %"class.std::__1::unique_ptr.3041" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.3018", %"class.std::__1::unique_ptr.3018", %"class.std::__1::unique_ptr.3024", %"class.std::__1::unique_ptr.3030", %class.sk_sp.2981 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.3018" = type { %"class.std::__1::__compressed_pair.3019" }
%"class.std::__1::__compressed_pair.3019" = type { %"struct.std::__1::__compressed_pair_elem.3020" }
%"struct.std::__1::__compressed_pair_elem.3020" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.3024" = type { %"class.std::__1::__compressed_pair.3025" }
%"class.std::__1::__compressed_pair.3025" = type { %"struct.std::__1::__compressed_pair_elem.3026" }
%"struct.std::__1::__compressed_pair_elem.3026" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.3030" = type { %"class.std::__1::__compressed_pair.3031" }
%"class.std::__1::__compressed_pair.3031" = type { %"struct.std::__1::__compressed_pair_elem.3032" }
%"struct.std::__1::__compressed_pair_elem.3032" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.3036" = type { %"class.absl::optional_internal::optional_data.3037" }
%"class.absl::optional_internal::optional_data.3037" = type { %"class.absl::optional_internal::optional_data_base.3038" }
%"class.absl::optional_internal::optional_data_base.3038" = type { %"class.absl::optional_internal::optional_data_dtor_base.3039" }
%"class.absl::optional_internal::optional_data_dtor_base.3039" = type { i8, %union.anon.3040 }
%union.anon.3040 = type { i32 }
%"class.std::__1::unique_ptr.3041" = type { %"class.std::__1::__compressed_pair.3042" }
%"class.std::__1::__compressed_pair.3042" = type { %"struct.std::__1::__compressed_pair_elem.3043" }
%"struct.std::__1::__compressed_pair_elem.3043" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataTransfer" = type { %"class.blink::ScriptWrappable", %"struct.blink::DataObject::Observer", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", i32, %"class.blink::Member.1858", i8, %"class.blink::IntPoint", %"class.blink::Member.1922", %"class.blink::Member.318" }
%"struct.blink::DataObject::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.1858" = type { %"class.blink::MemberBase.1859" }
%"class.blink::MemberBase.1859" = type { %"class.blink::DataObject"* }
%"class.blink::DataObject" = type { %"class.blink::Supplementable.1862", %"class.blink::HeapVector.1870", %"class.blink::HeapHashSet.1915", i32, %"class.WTF::String" }
%"class.blink::Supplementable.1862" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1863" }
%"class.blink::HeapHashMap.1863" = type { %"class.WTF::HashMap.1866" }
%"class.WTF::HashMap.1866" = type { %"class.WTF::HashTable.1867" }
%"class.WTF::HashTable.1867" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.blink::HeapVector.1870" = type { %"class.WTF::Vector.1873" }
%"class.WTF::Vector.1873" = type { %"class.WTF::VectorBuffer.1874" }
%"class.WTF::VectorBuffer.1874" = type { %"class.WTF::VectorBufferBase.1875" }
%"class.WTF::VectorBufferBase.1875" = type { %"class.blink::Member.1876"*, i32, i32 }
%"class.blink::Member.1876" = type { %"class.blink::MemberBase.1877" }
%"class.blink::MemberBase.1877" = type { %"class.blink::DataObjectItem"* }
%"class.blink::DataObjectItem" = type { %class.scoped_refptr.1880, i32, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1882", %class.scoped_refptr.1898, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i64, %"class.WTF::String", %"class.blink::Member.1912" }
%class.scoped_refptr.1880 = type { %"class.base::RefCountedData.1881"* }
%"class.base::RefCountedData.1881" = type { %"class.base::RefCountedThreadSafe.3092", %"class.blink::CrossVariantMojoRemote" }
%"class.base::RefCountedThreadSafe.3092" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::CrossVariantMojoRemote" = type { i32, %"class.mojo::ScopedHandleBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::File"* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.1887", %"class.absl::optional.1892", %"class.WTF::String" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1884 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.1884 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.1885", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.1885" = type { %"class.base::RefCountedThreadSafe.1886" }
%"class.base::RefCountedThreadSafe.1886" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.absl::optional.1887" = type { %"class.absl::optional_internal::optional_data.1888" }
%"class.absl::optional_internal::optional_data.1888" = type { %"class.absl::optional_internal::optional_data_base.1889" }
%"class.absl::optional_internal::optional_data_base.1889" = type { %"class.absl::optional_internal::optional_data_dtor_base.1890" }
%"class.absl::optional_internal::optional_data_dtor_base.1890" = type { i8, %union.anon.1891 }
%union.anon.1891 = type { i64 }
%"class.absl::optional.1892" = type { %"class.absl::optional_internal::optional_data.1893" }
%"class.absl::optional_internal::optional_data.1893" = type { %"class.absl::optional_internal::optional_data_base.1894" }
%"class.absl::optional_internal::optional_data_base.1894" = type { %"class.absl::optional_internal::optional_data_dtor_base.1895" }
%"class.absl::optional_internal::optional_data_dtor_base.1895" = type { i8, %union.anon.1896 }
%union.anon.1896 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1897" }
%"class.base::time_internal::TimeBase.1897" = type { i64 }
%class.scoped_refptr.1898 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1899", i64, %"class.WTF::Vector.1901", %"class.WTF::Vector.1906" }
%"class.WTF::RefCounted.1899" = type { %"class.base::RefCounted.1900" }
%"class.base::RefCounted.1900" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903" }
%"class.WTF::VectorBufferBase.1903" = type { i8*, i32, i32 }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"class.std::__1::unique_ptr.1909"*, i32, i32 }
%"class.std::__1::unique_ptr.1909" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.1912" = type { %"class.blink::MemberBase.1913" }
%"class.blink::MemberBase.1913" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::HeapHashSet.1915" = type { %"class.WTF::HashSet.1918" }
%"class.WTF::HashSet.1918" = type { %"class.WTF::HashTable.1919" }
%"class.WTF::HashTable.1919" = type <{ %"class.blink::Member.1921"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1921" = type opaque
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.1926", float, i8, %class.scoped_refptr.1928, %"class.WTF::HashCountedSet", %"class.WTF::HashCountedSet" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1926" = type { %"class.blink::MemberBase.1927" }
%"class.blink::MemberBase.1927" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type { %"class.blink::GarbageCollectedMixin" }
%class.scoped_refptr.1928 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1929", i8, %class.scoped_refptr.1898, %"class.blink::WeakPersistent.1931", i32, i8, %"class.std::__1::unique_ptr.1933" }
%"class.WTF::ThreadSafeRefCounted.1929" = type { %"class.base::RefCountedThreadSafe.1930" }
%"class.base::RefCountedThreadSafe.1930" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent.1931" = type { %"class.blink::PersistentBase.1932" }
%"class.blink::PersistentBase.1932" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1939" }
%"class.WTF::HashMap.1939" = type { %"class.WTF::HashTable.1940" }
%"class.WTF::HashTable.1940" = type <{ %"struct.WTF::KeyValuePair.1943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1943" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1340", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1342", %"class.blink::HeapVector.1344", %"class.std::__1::unique_ptr.1352", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1358", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1371", %"class.WTF::Vector.1373", i8, i8, %"class.std::__1::unique_ptr.1378", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1384", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1392", i8, i32, %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::Member.1398", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1400", %"class.WTF::HashMap.1402", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.1413", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1415", i8, i32, %"class.blink::Member.1422", %"class.blink::Member.1424", i32, %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.blink::Member.1430", %"class.std::__1::unique_ptr.1432", i64, %"class.std::__1::unique_ptr.1438", i32, i32, %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1455", %"class.WTF::Vector.1461", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1466", %"class.blink::Member.1473", %"class.std::__1::unique_ptr.1475", %"class.blink::Member.1481", i8, i8, %"class.WTF::String", %"class.blink::Member.1483", i8, [7 x i8], %"class.blink::HeapHashMap.1485", %"class.blink::HeapObserverSet", %"class.blink::Member.1499", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1501", i32, i8, i8, %"class.blink::WeakMember.1503", %"class.blink::Member.1504" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1528", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1595", i32, i8, [3 x i8], %"class.blink::HeapVector.1597", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1605", %"class.blink::Member.1607", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1616", %"class.blink::Member.1739", %"class.blink::Member.1741", i8, [7 x i8] }>
%"class.blink::Supplementable.1528" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1529" }
%"class.blink::HeapHashMap.1529" = type { %"class.WTF::HashMap.1532" }
%"class.WTF::HashMap.1532" = type { %"class.WTF::HashTable.1533" }
%"class.WTF::HashTable.1533" = type <{ %"struct.WTF::KeyValuePair.1535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1535" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1544" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1536" }
%"class.blink::HeapObserverSet.1536" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1537" }
%"class.blink::HeapHashSet.1537" = type { %"class.WTF::HashSet.1540" }
%"class.WTF::HashSet.1540" = type { %"class.WTF::HashTable.1541" }
%"class.WTF::HashTable.1541" = type <{ %"class.blink::WeakMember.1543"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1543" = type opaque
%"class.blink::Supplementable.1544" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1545" }
%"class.blink::HeapHashMap.1545" = type { %"class.WTF::HashMap.1548" }
%"class.WTF::HashMap.1548" = type { %"class.WTF::HashTable.1549" }
%"class.WTF::HashTable.1549" = type <{ %"struct.WTF::KeyValuePair.1551"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1551" = type { i8*, %"class.blink::Member.3093" }
%"class.blink::Member.3093" = type { %"class.blink::MemberBase.3094" }
%"class.blink::MemberBase.3094" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3095" }
%"class.blink::Member.3095" = type { %"class.blink::MemberBase.3096" }
%"class.blink::MemberBase.3096" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1552, %"class.std::__1::unique_ptr.1561", %"class.std::__1::unique_ptr.1561", %"class.std::__1::unique_ptr.1585", %"class.std::__1::unique_ptr.1585", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1591", i32, i32 }
%class.scoped_refptr.1552 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1553", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1555", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1560 }
%"class.WTF::RefCounted.1553" = type { %"class.base::RefCounted.1554" }
%"class.base::RefCounted.1554" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1555" = type { %"class.absl::optional_internal::optional_data.1556" }
%"class.absl::optional_internal::optional_data.1556" = type { %"class.absl::optional_internal::optional_data_base.1557" }
%"class.absl::optional_internal::optional_data_base.1557" = type { %"class.absl::optional_internal::optional_data_dtor_base.1558" }
%"class.absl::optional_internal::optional_data_dtor_base.1558" = type { i8, %union.anon.1559 }
%union.anon.1559 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1560 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1561" = type { %"class.std::__1::__compressed_pair.1562" }
%"class.std::__1::__compressed_pair.1562" = type { %"struct.std::__1::__compressed_pair_elem.1563" }
%"struct.std::__1::__compressed_pair_elem.1563" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1572", %"class.std::__1::map.1581"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1555" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1564", %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1564" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"struct.std::__1::__compressed_pair_elem.1565" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1572" = type { %"class.std::__1::__tree.1573" }
%"class.std::__1::__tree.1573" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1574", %"class.std::__1::__compressed_pair.1578" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.1578" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1581" = type opaque
%"class.std::__1::unique_ptr.1585" = type { %"class.std::__1::__compressed_pair.1586" }
%"class.std::__1::__compressed_pair.1586" = type { %"struct.std::__1::__compressed_pair_elem.1587" }
%"struct.std::__1::__compressed_pair_elem.1587" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1591" = type { %"class.WTF::HashTable.1592" }
%"class.WTF::HashTable.1592" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1595" = type { %"class.blink::MemberBase.1596" }
%"class.blink::MemberBase.1596" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1597" = type { %"class.WTF::Vector.1600" }
%"class.WTF::Vector.1600" = type { %"class.WTF::VectorBuffer.1601" }
%"class.WTF::VectorBuffer.1601" = type { %"class.WTF::VectorBufferBase.1602" }
%"class.WTF::VectorBufferBase.1602" = type { %"class.blink::Member.1603"*, i32, i32 }
%"class.blink::Member.1603" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1609", i32, i32 }
%"class.blink::HeapHashMap.1609" = type { %"class.WTF::HashMap.1612" }
%"class.WTF::HashMap.1612" = type { %"class.WTF::HashTable.1613" }
%"class.WTF::HashTable.1613" = type <{ %"struct.WTF::KeyValuePair.1615"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1615" = type opaque
%"class.std::__1::unique_ptr.1616" = type { %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1619" }
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1622" }
%"class.WTF::Vector.1622" = type { %"class.WTF::VectorBuffer.1623" }
%"class.WTF::VectorBuffer.1623" = type { %"class.WTF::VectorBufferBase.1624" }
%"class.WTF::VectorBufferBase.1624" = type { %"class.mojo::StructPtr.1625"*, i32, i32 }
%"class.mojo::StructPtr.1625" = type { %"class.std::__1::unique_ptr.1626" }
%"class.std::__1::unique_ptr.1626" = type { %"class.std::__1::__compressed_pair.1627" }
%"class.std::__1::__compressed_pair.1627" = type { %"struct.std::__1::__compressed_pair_elem.1628" }
%"struct.std::__1::__compressed_pair_elem.1628" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1629", %"class.WTF::HashMap.1636", %"class.WTF::HashMap.1641", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1646", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1629" = type { %"class.std::__1::unique_ptr.1630" }
%"class.std::__1::unique_ptr.1630" = type { %"class.std::__1::__compressed_pair.1631" }
%"class.std::__1::__compressed_pair.1631" = type { %"struct.std::__1::__compressed_pair_elem.1632" }
%"struct.std::__1::__compressed_pair_elem.1632" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1636" = type { %"class.WTF::HashTable.1637" }
%"class.WTF::HashTable.1637" = type <{ %"struct.WTF::KeyValuePair.1640"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1640" = type opaque
%"class.WTF::HashMap.1641" = type { %"class.WTF::HashTable.1642" }
%"class.WTF::HashTable.1642" = type <{ %"struct.WTF::KeyValuePair.1645"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1645" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1646" = type { %"class.std::__1::unique_ptr.1647" }
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1730" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1661", i32 }>
%"class.std::__1::unique_ptr.1661" = type { %"class.std::__1::__compressed_pair.1662" }
%"class.std::__1::__compressed_pair.1662" = type { %"struct.std::__1::__compressed_pair_elem.1663" }
%"struct.std::__1::__compressed_pair_elem.1663" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1664", %"class.absl::optional.1665", %"class.absl::optional.1670", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1683", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1705", %"class.std::__1::map.1716", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1725", i8, %class.scoped_refptr.1675, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1726" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1664" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1665" = type { %"class.absl::optional_internal::optional_data.1666" }
%"class.absl::optional_internal::optional_data.1666" = type { %"class.absl::optional_internal::optional_data_base.1667" }
%"class.absl::optional_internal::optional_data_base.1667" = type { %"class.absl::optional_internal::optional_data_dtor_base.1668" }
%"class.absl::optional_internal::optional_data_dtor_base.1668" = type { i8, %union.anon.1669 }
%union.anon.1669 = type { %"class.base::TimeDelta" }
%"class.absl::optional.1670" = type { %"class.absl::optional_internal::optional_data.1671" }
%"class.absl::optional_internal::optional_data.1671" = type { %"class.absl::optional_internal::optional_data_base.1672" }
%"class.absl::optional_internal::optional_data_base.1672" = type { %"class.absl::optional_internal::optional_data_dtor_base.1673" }
%"class.absl::optional_internal::optional_data_dtor_base.1673" = type { i8, %union.anon.1674 }
%union.anon.1674 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1675, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1676" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1676" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1681 }
%class.scoped_refptr.1681 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1743", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1675, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1743" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1682 }
%class.scoped_refptr.1682 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1683" = type { %"class.std::__1::__compressed_pair.1684" }
%"class.std::__1::__compressed_pair.1684" = type { %"struct.std::__1::__compressed_pair_elem.1685" }
%"struct.std::__1::__compressed_pair_elem.1685" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1686", %class.scoped_refptr.1687 }
%"class.base::RepeatingCallback.1686" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1687 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1688", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1688" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1692", %"class.std::__1::unique_ptr.1698", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1704" }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1698" = type { %"class.std::__1::__compressed_pair.1699" }
%"class.std::__1::__compressed_pair.1699" = type { %"struct.std::__1::__compressed_pair_elem.1700" }
%"struct.std::__1::__compressed_pair_elem.1700" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1704" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1705" = type { %"class.std::__1::__tree.1706" }
%"class.std::__1::__tree.1706" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1707", %"class.std::__1::__compressed_pair.1711" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.1711" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1716" = type { %"class.std::__1::__tree.1717" }
%"class.std::__1::__tree.1717" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1718", %"class.std::__1::__compressed_pair.1722" }
%"class.std::__1::__compressed_pair.1718" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.1722" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1725" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1675 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1726" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1741" = type { %"class.blink::MemberBase.1742" }
%"class.blink::MemberBase.1742" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1519", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1519" = type { %"class.WTF::Vector.1522" }
%"class.WTF::Vector.1522" = type { %"class.WTF::VectorBuffer.1523" }
%"class.WTF::VectorBuffer.1523" = type { %"class.WTF::VectorBufferBase.1524" }
%"class.WTF::VectorBufferBase.1524" = type { %"class.blink::Member.1050"*, i32, i32 }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1751", [4 x i8] }>
%"class.WTF::RefCounted.1751" = type { %"class.base::RefCounted.1752" }
%"class.base::RefCounted.1752" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3160" }
%"class.WTF::Vector.3160" = type { %"class.WTF::VectorBuffer.3161" }
%"class.WTF::VectorBuffer.3161" = type { %"class.WTF::VectorBufferBase.3162" }
%"class.WTF::VectorBufferBase.3162" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3165", %"class.absl::optional.3165", %"class.absl::optional.3165" }
%"class.absl::optional.3165" = type { %"class.absl::optional_internal::optional_data.3166" }
%"class.absl::optional_internal::optional_data.3166" = type { %"class.absl::optional_internal::optional_data_base.3167" }
%"class.absl::optional_internal::optional_data_base.3167" = type { %"class.absl::optional_internal::optional_data_dtor_base.3168" }
%"class.absl::optional_internal::optional_data_dtor_base.3168" = type { i8, %union.anon.3169 }
%union.anon.3169 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3170 }
%class.scoped_refptr.3170 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3171", %"class.WTF::Vector.630", %"class.WTF::Vector.3173", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3171" = type { %"class.base::RefCounted.3172" }
%"class.base::RefCounted.3172" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3173" = type { %"class.WTF::VectorBuffer.3174" }
%"class.WTF::VectorBuffer.3174" = type { %"class.WTF::VectorBufferBase.3175" }
%"class.WTF::VectorBufferBase.3175" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3176 }
%union.anon.3176 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3180" }
%"class.WTF::VectorBuffer.3180" = type { %"class.WTF::VectorBufferBase.3181", [32 x i8] }
%"class.WTF::VectorBufferBase.3181" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3184 }
%class.scoped_refptr.3184 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3194" }
%"class.blink::Member.3194" = type { %"class.blink::MemberBase.3195" }
%"class.blink::MemberBase.3195" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3190" }
%"class.blink::MemberBase.3190" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3191" }
%"class.blink::MemberBase.3191" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3192" }
%"class.blink::MemberBase.3192" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3193" }
%"class.blink::MemberBase.3193" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3185", %"class.WTF::Vector.3185" }
%"class.WTF::Vector.3185" = type { %"class.WTF::VectorBuffer.3186" }
%"class.WTF::VectorBuffer.3186" = type { %"class.WTF::VectorBufferBase.3187" }
%"class.WTF::VectorBufferBase.3187" = type { %class.scoped_refptr.3184*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1342" = type { %"class.blink::MemberBase.1343" }
%"class.blink::MemberBase.1343" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1344" = type { %"class.WTF::Vector.1347" }
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"class.blink::Member.1350"*, i32, i32 }
%"class.blink::Member.1350" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1358" = type { %"class.WTF::HashSet.1361" }
%"class.WTF::HashSet.1361" = type { %"class.WTF::HashTable.1362" }
%"class.WTF::HashTable.1362" = type <{ %"class.blink::WeakMember.1364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1364" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1365", i32, [4 x i8] }>
%"class.WTF::Vector.1365" = type { %"class.WTF::VectorBuffer.1366" }
%"class.WTF::VectorBuffer.1366" = type { %"class.WTF::VectorBufferBase.1367" }
%"class.WTF::VectorBufferBase.1367" = type { %"struct.std::__1::pair.1368"*, i32, i32 }
%"struct.std::__1::pair.1368" = type opaque
%"class.blink::Member.1371" = type { %"class.blink::MemberBase.1372" }
%"class.blink::MemberBase.1372" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.WTF::VectorBufferBase.1375" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1378" = type { %"class.std::__1::__compressed_pair.1379" }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1384" = type { %"class.WTF::Vector.1387" }
%"class.WTF::Vector.1387" = type { %"class.WTF::VectorBuffer.1388" }
%"class.WTF::VectorBuffer.1388" = type { %"class.WTF::VectorBufferBase.1389" }
%"class.WTF::VectorBufferBase.1389" = type { %"class.blink::Member.1390"*, i32, i32 }
%"class.blink::Member.1390" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1415" = type { %"class.WTF::HashSet.1418" }
%"class.WTF::HashSet.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"class.blink::Member.1421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1421" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1432" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", %"class.WTF::HashMap.1441", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"struct.WTF::KeyValuePair.1445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1445" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type <{ %"class.blink::Member.1459", %"class.blink::Member.1459", i32, i8, [3 x i8] }>
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::IntersectionObserver"* }
%"class.blink::IntersectionObserver" = type opaque
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1466" = type { %"class.WTF::HashMap.1469" }
%"class.WTF::HashMap.1469" = type { %"class.WTF::HashTable.1470" }
%"class.WTF::HashTable.1470" = type <{ %"struct.WTF::KeyValuePair.1472"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1472" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1475" = type { %"class.std::__1::__compressed_pair.1476" }
%"class.std::__1::__compressed_pair.1476" = type { %"struct.std::__1::__compressed_pair_elem.1477" }
%"struct.std::__1::__compressed_pair_elem.1477" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1485" = type { %"class.WTF::HashMap.1488" }
%"class.WTF::HashMap.1488" = type { %"class.WTF::HashTable.1489" }
%"class.WTF::HashTable.1489" = type <{ %"struct.WTF::KeyValuePair.1491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1491" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1492" }
%"class.blink::HeapHashSet.1492" = type { %"class.WTF::HashSet.1495" }
%"class.WTF::HashSet.1495" = type { %"class.WTF::HashTable.1496" }
%"class.WTF::HashTable.1496" = type <{ %"class.blink::WeakMember.1498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1498" = type opaque
%"class.blink::Member.1499" = type { %"class.blink::MemberBase.1500" }
%"class.blink::MemberBase.1500" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1508", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1515", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1508" = type { %"class.WTF::HashSet.1511" }
%"class.WTF::HashSet.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"class.blink::Member.1514"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1514" = type opaque
%"class.blink::HeapTaskRunnerTimer.1515" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1516", { i64, i64 } }
%"class.blink::WeakMember.1516" = type { %"class.blink::MemberBase.1502" }
%"class.blink::WeakMember.1503" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::FileList" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector.1949" }
%"class.blink::HeapVector.1949" = type { %"class.WTF::Vector.1952" }
%"class.WTF::Vector.1952" = type { %"class.WTF::VectorBuffer.1953" }
%"class.WTF::VectorBuffer.1953" = type { %"class.WTF::VectorBufferBase.1954" }
%"class.WTF::VectorBufferBase.1954" = type { %"class.blink::Member.1882"*, i32, i32 }
%"class.blink::HTMLImageLoader" = type { %"class.blink::ImageLoader" }
%"class.blink::ImageLoader" = type { %"class.blink::ImageResourceObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1960", %"class.blink::Member.343", %"class.blink::Member.1922", %"class.blink::Member.1922", %"class.WTF::String", i32, %"class.WTF::AtomicString", %"class.base::WeakPtr.1961", %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.1962", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, i32, %"class.blink::HeapVector.1968" }
%"class.blink::ThreadState::PrefinalizerRegistration.1960" = type { i8 }
%"class.base::WeakPtr.1961" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.1962" = type { %"class.std::__1::__compressed_pair.1963" }
%"class.std::__1::__compressed_pair.1963" = type { %"struct.std::__1::__compressed_pair_elem.1964" }
%"struct.std::__1::__compressed_pair_elem.1964" = type { %"class.blink::IncrementLoadEventDelayCount"* }
%"class.blink::IncrementLoadEventDelayCount" = type opaque
%"class.blink::HeapVector.1968" = type { %"class.WTF::Vector.1971" }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"class.blink::Member.1974"*, i32, i32 }
%"class.blink::Member.1974" = type opaque
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2161", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2169", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2183", %"class.blink::FrameLoader", %"class.blink::Member.2204", %"class.blink::Member.343", %"class.blink::Member.2206", %"class.blink::Member.2208", %"class.blink::Member.2224", %"class.blink::Member.2226", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2228", %class.scoped_refptr.2452, %"class.blink::Member.2453", %"class.blink::Member.2455", %"class.blink::Member.2457", %"class.blink::Member.2459", %"class.blink::Member.2461", %"class.blink::Member.2465", %"class.blink::Member.2467", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2471", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2477", %"class.std::__1::unique_ptr.2478", %"class.absl::optional.2149", i32, [4 x i8], %"class.std::__1::unique_ptr.2484", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2492", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2497", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2502", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1912", %"class.blink::Member.2505", %"class.blink::Member.2507", %"class.blink::Member.2509", %"class.mojo::StructPtr.2512", %"class.blink::Member.2521", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2523", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1992", %"class.blink::Member.1994", %"class.blink::Member.1996", i8, i32, i8, i32, %"class.blink::Member.2129", %"class.blink::Member.2019", %"class.blink::FrameLifecycle", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.blink::Member.1990", %"class.blink::Member.2131", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2142", i8, %"class.base::UnguessableToken", %"class.absl::optional.2144", %"class.absl::optional.2149", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1990", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1992" = type { %"class.blink::MemberBase.1993" }
%"class.blink::MemberBase.1993" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2804", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1990", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2818", %"class.blink::Member.2822", %"class.blink::Member.2824", %"class.blink::Member.2828", %"class.blink::Member.2830", %"class.blink::Member.2832", %"class.blink::Member.2834", %"class.blink::Member.2836", %"class.blink::HeapObserverSet.2838", %"class.blink::Member.2846", %"class.blink::Member.2848", %"class.blink::Member.2850", %"class.blink::Member.2852", %"class.blink::Member.2854", %"class.blink::Member.2856", %"class.blink::Member.2862", %"class.blink::Member.2864", %"class.blink::Member.2866", %"class.blink::Member.2868", %"class.blink::Member.2870", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2895", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2902", %"class.blink::Member.1992", %"class.blink::Member.1992", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2910", %"class.std::__1::unique_ptr.2916", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2804" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2805" }
%"class.blink::HeapHashMap.2805" = type { %"class.WTF::HashMap.2808" }
%"class.WTF::HashMap.2808" = type { %"class.WTF::HashTable.2809" }
%"class.WTF::HashTable.2809" = type <{ %"struct.WTF::KeyValuePair.2811"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2811" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2812" }
%"class.std::__1::unique_ptr.2812" = type { %"class.std::__1::__compressed_pair.2813" }
%"class.std::__1::__compressed_pair.2813" = type { %"struct.std::__1::__compressed_pair_elem.2814" }
%"struct.std::__1::__compressed_pair_elem.2814" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2818" = type { %"class.blink::MemberBase.2819" }
%"class.blink::MemberBase.2819" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1992", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2822" = type { %"class.blink::MemberBase.2823" }
%"class.blink::MemberBase.2823" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2824" = type { %"class.blink::MemberBase.2825" }
%"class.blink::MemberBase.2825" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1503", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.2828" = type { %"class.blink::MemberBase.2829" }
%"class.blink::MemberBase.2829" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2830" = type { %"class.blink::MemberBase.2831" }
%"class.blink::MemberBase.2831" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2832" = type { %"class.blink::MemberBase.2833" }
%"class.blink::MemberBase.2833" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2834" = type { %"class.blink::MemberBase.2835" }
%"class.blink::MemberBase.2835" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2836" = type { %"class.blink::MemberBase.2837" }
%"class.blink::MemberBase.2837" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2838" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2839" }
%"class.blink::HeapHashSet.2839" = type { %"class.WTF::HashSet.2842" }
%"class.WTF::HashSet.2842" = type { %"class.WTF::HashTable.2843" }
%"class.WTF::HashTable.2843" = type <{ %"class.blink::WeakMember.2845"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2845" = type opaque
%"class.blink::Member.2846" = type { %"class.blink::MemberBase.2847" }
%"class.blink::MemberBase.2847" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2848" = type { %"class.blink::MemberBase.2849" }
%"class.blink::MemberBase.2849" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2850" = type { %"class.blink::MemberBase.2851" }
%"class.blink::MemberBase.2851" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2852" = type { %"class.blink::MemberBase.2853" }
%"class.blink::MemberBase.2853" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2854" = type { %"class.blink::MemberBase.2855" }
%"class.blink::MemberBase.2855" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2856" = type { %"class.blink::MemberBase.2857" }
%"class.blink::MemberBase.2857" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.1992", %class.scoped_refptr.2860, %class.scoped_refptr.2861, %class.scoped_refptr.2861, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.809, %class.scoped_refptr.809, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1779", %"class.blink::Member.1781", %"class.blink::Member.1783", %"class.blink::Member.1785", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1781" = type { %"class.blink::MemberBase.1782" }
%"class.blink::MemberBase.1782" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.2860 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.2861 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.blink::Member.2862" = type { %"class.blink::MemberBase.2863" }
%"class.blink::MemberBase.2863" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2864" = type { %"class.blink::MemberBase.2865" }
%"class.blink::MemberBase.2865" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2866" = type { %"class.blink::MemberBase.2867" }
%"class.blink::MemberBase.2867" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2868" = type { %"class.blink::MemberBase.2869" }
%"class.blink::MemberBase.2869" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2870" = type { %"class.blink::MemberBase.2871" }
%"class.blink::MemberBase.2871" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2872" }
%"class.WTF::Deque.2872" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2875" }
%"class.WTF::VectorBuffer.2875" = type { %"class.WTF::VectorBufferBase.2876" }
%"class.WTF::VectorBufferBase.2876" = type { %"class.std::__1::unique_ptr.2877"*, i32, i32 }
%"class.std::__1::unique_ptr.2877" = type { %"class.std::__1::__compressed_pair.2878" }
%"class.std::__1::__compressed_pair.2878" = type { %"struct.std::__1::__compressed_pair_elem.2879" }
%"struct.std::__1::__compressed_pair_elem.2879" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2883", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2883" = type { %"class.std::__1::__bitset.2884" }
%"class.std::__1::__bitset.2884" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2885" }
%"class.absl::optional.2885" = type { %"class.absl::optional_internal::optional_data.2886" }
%"class.absl::optional_internal::optional_data.2886" = type { %"class.absl::optional_internal::optional_data_base.2887" }
%"class.absl::optional_internal::optional_data_base.2887" = type { %"class.absl::optional_internal::optional_data_dtor_base.2888" }
%"class.absl::optional_internal::optional_data_dtor_base.2888" = type { i8, %union.anon.2889 }
%union.anon.2889 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2890", i64, %"class.absl::optional.1665", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2890" = type { %"class.absl::optional_internal::optional_data.2891" }
%"class.absl::optional_internal::optional_data.2891" = type { %"class.absl::optional_internal::optional_data_base.2892" }
%"class.absl::optional_internal::optional_data_base.2892" = type { %"class.absl::optional_internal::optional_data_dtor_base.2893" }
%"class.absl::optional_internal::optional_data_dtor_base.2893" = type { i8, %union.anon.2894 }
%union.anon.2894 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2895" = type { %"class.std::__1::unique_ptr.2896" }
%"class.std::__1::unique_ptr.2896" = type { %"class.std::__1::__compressed_pair.2897" }
%"class.std::__1::__compressed_pair.2897" = type { %"struct.std::__1::__compressed_pair_elem.2898" }
%"struct.std::__1::__compressed_pair_elem.2898" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2902" = type { %"class.WTF::HashSet.2905" }
%"class.WTF::HashSet.2905" = type { %"class.WTF::HashTable.2906" }
%"class.WTF::HashTable.2906" = type <{ %"class.blink::WeakMember.2908"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2908" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2909" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2909" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2916" = type { %"class.std::__1::__compressed_pair.2917" }
%"class.std::__1::__compressed_pair.2917" = type { %"struct.std::__1::__compressed_pair_elem.2918" }
%"struct.std::__1::__compressed_pair_elem.2918" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.1994" = type { %"class.blink::MemberBase.1995" }
%"class.blink::MemberBase.1995" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1996" = type { %"class.blink::MemberBase.1997" }
%"class.blink::MemberBase.1997" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1990", %"class.blink::Member.2019", %"class.blink::Member.2021", %"class.blink::Member.2023", i8, %"class.WTF::Vector.2025" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2012" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2000" }
%"class.blink::HeapVector.2000" = type { %"class.WTF::Vector.2003" }
%"class.WTF::Vector.2003" = type { %"class.WTF::VectorBuffer.2004" }
%"class.WTF::VectorBuffer.2004" = type { %"class.WTF::VectorBufferBase.2005", [32 x i8] }
%"class.WTF::VectorBufferBase.2005" = type { %"struct.std::__1::pair.2006"*, i32, i32 }
%"struct.std::__1::pair.2006" = type { %"class.WTF::AtomicString", %"class.blink::Member.2007" }
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::HeapVector.2009"* }
%"class.blink::HeapVector.2009" = type opaque
%"class.std::__1::unique_ptr.2012" = type { %"class.std::__1::__compressed_pair.2013" }
%"class.std::__1::__compressed_pair.2013" = type { %"struct.std::__1::__compressed_pair_elem.2014" }
%"struct.std::__1::__compressed_pair_elem.2014" = type { %"class.WTF::Vector.2015"* }
%"class.WTF::Vector.2015" = type opaque
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2025" = type { %"class.WTF::VectorBuffer.2026" }
%"class.WTF::VectorBuffer.2026" = type { %"class.WTF::VectorBufferBase.2027" }
%"class.WTF::VectorBufferBase.2027" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2121" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2028, %"class.std::__1::unique_ptr.1661", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1675, i32 }>
%class.scoped_refptr.2028 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1675, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2087", %"class.absl::optional.2092", %"class.absl::optional.2045", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2112", i8, [7 x i8], %class.scoped_refptr.1675, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1688" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1675, %"class.std::__1::unique_ptr.2029", %"class.absl::optional.2039", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2045", %"class.std::__1::unique_ptr.2050", i8, i64, %class.scoped_refptr.2084, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2085", %"class.base::WeakPtrFactory.2086" }
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1675, i8, %"class.mojo::ScopedHandleBase.2032", %class.scoped_refptr.2033, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2034", i8*, %"class.base::WeakPtrFactory.2035" }
%"class.mojo::ScopedHandleBase.2032" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2033 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2034" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2035" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2039" = type { %"class.absl::optional_internal::optional_data.2040" }
%"class.absl::optional_internal::optional_data.2040" = type { %"class.absl::optional_internal::optional_data_base.2041" }
%"class.absl::optional_internal::optional_data_base.2041" = type { %"class.absl::optional_internal::optional_data_dtor_base.2042" }
%"class.absl::optional_internal::optional_data_dtor_base.2042" = type { i8, %union.anon.2043 }
%union.anon.2043 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2044", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2044" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2050" = type { %"class.std::__1::__compressed_pair.2051" }
%"class.std::__1::__compressed_pair.2051" = type { %"struct.std::__1::__compressed_pair_elem.2052" }
%"struct.std::__1::__compressed_pair_elem.2052" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2053", i8, i64, %class.scoped_refptr.2054, %class.scoped_refptr.2079 }
%"class.base::RepeatingCallback.2053" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2054 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2055", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2057", %"class.std::__1::map.2068", i8, [7 x i8] }>
%"class.base::RefCounted.2055" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2056 }
%class.scoped_refptr.2056 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2057" = type { %"class.std::__1::__tree.2058" }
%"class.std::__1::__tree.2058" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2059", %"class.std::__1::__compressed_pair.2063" }
%"class.std::__1::__compressed_pair.2059" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2068" = type { %"class.std::__1::__tree.2069" }
%"class.std::__1::__tree.2069" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2070", %"class.std::__1::__compressed_pair.2074" }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.2074" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2079 = type { %"class.base::RefCountedData.2080"* }
%"class.base::RefCountedData.2080" = type opaque
%class.scoped_refptr.2084 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2085" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2086" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2087" = type { %"class.absl::optional_internal::optional_data.2088" }
%"class.absl::optional_internal::optional_data.2088" = type { %"class.absl::optional_internal::optional_data_base.2089" }
%"class.absl::optional_internal::optional_data_base.2089" = type { %"class.absl::optional_internal::optional_data_dtor_base.2090" }
%"class.absl::optional_internal::optional_data_dtor_base.2090" = type { i8, %union.anon.2091 }
%union.anon.2091 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2092" = type { %"class.absl::optional_internal::optional_data.2093" }
%"class.absl::optional_internal::optional_data.2093" = type { %"class.absl::optional_internal::optional_data_base.2094" }
%"class.absl::optional_internal::optional_data_base.2094" = type { %"class.absl::optional_internal::optional_data_dtor_base.2095" }
%"class.absl::optional_internal::optional_data_dtor_base.2095" = type { i8, [7 x i8], %union.anon.2096 }
%union.anon.2096 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2045" = type { %"class.absl::optional_internal::optional_data.2046" }
%"class.absl::optional_internal::optional_data.2046" = type { %"class.absl::optional_internal::optional_data_base.2047" }
%"class.absl::optional_internal::optional_data_base.2047" = type { %"class.absl::optional_internal::optional_data_dtor_base.2048" }
%"class.absl::optional_internal::optional_data_dtor_base.2048" = type { i8, %union.anon.2049 }
%union.anon.2049 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2097 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2097 = type { %"class.std::__1::map.2100" }
%"class.std::__1::map.2100" = type { %"class.std::__1::__tree.2101" }
%"class.std::__1::__tree.2101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2102", %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2102" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2111"*, i64 }
%"class.std::__1::unique_ptr.2111" = type opaque
%"class.std::__1::map.2112" = type { %"class.std::__1::__tree.2113" }
%"class.std::__1::__tree.2113" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2114", %"class.std::__1::__compressed_pair.2118" }
%"class.std::__1::__compressed_pair.2114" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.2118" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2121" = type { %"class.std::__1::__compressed_pair.2122" }
%"class.std::__1::__compressed_pair.2122" = type { %"struct.std::__1::__compressed_pair_elem.2123" }
%"struct.std::__1::__compressed_pair_elem.2123" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2019" = type { %"class.blink::MemberBase.2020" }
%"class.blink::MemberBase.2020" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::Frame"* }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1990", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2133" }
%"class.base::internal::flat_tree.2133" = type { %"class.std::__1::vector.2134" }
%"class.std::__1::vector.2134" = type { %"class.std::__1::__vector_base.2135" }
%"class.std::__1::__vector_base.2135" = type { %"struct.std::__1::pair.2136"*, %"struct.std::__1::pair.2136"*, %"class.std::__1::__compressed_pair.2137" }
%"struct.std::__1::pair.2136" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.2138" }
%"struct.std::__1::__compressed_pair_elem.2138" = type { %"struct.std::__1::pair.2136"* }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2144" = type { %"class.absl::optional_internal::optional_data.2145" }
%"class.absl::optional_internal::optional_data.2145" = type { %"class.absl::optional_internal::optional_data_base.2146" }
%"class.absl::optional_internal::optional_data_base.2146" = type { %"class.absl::optional_internal::optional_data_dtor_base.2147" }
%"class.absl::optional_internal::optional_data_dtor_base.2147" = type { i8, %union.anon.2148 }
%union.anon.2148 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2154" }
%"class.blink::HeapHashSet.2154" = type { %"class.WTF::HashSet.2157" }
%"class.WTF::HashSet.2157" = type { %"class.WTF::HashTable.2158" }
%"class.WTF::HashTable.2158" = type <{ %"class.blink::WeakMember.2160"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2160" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2161" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2162" }
%"class.blink::HeapHashMap.2162" = type { %"class.WTF::HashMap.2165" }
%"class.WTF::HashMap.2165" = type { %"class.WTF::HashTable.2166" }
%"class.WTF::HashTable.2166" = type <{ %"struct.WTF::KeyValuePair.2168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2168" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2169" = type { %"class.std::__1::__compressed_pair.2170" }
%"class.std::__1::__compressed_pair.2170" = type { %"struct.std::__1::__compressed_pair_elem.2171" }
%"struct.std::__1::__compressed_pair_elem.2171" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2172", %"class.base::WeakPtrFactory.2177" }
%"class.WTF::HashMap.2172" = type { %"class.WTF::HashTable.2173" }
%"class.WTF::HashTable.2173" = type <{ %"struct.WTF::KeyValuePair.2176"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2176" = type opaque
%"class.base::WeakPtrFactory.2177" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2181" }
%"class.blink::Member.2181" = type { %"class.blink::MemberBase.2182" }
%"class.blink::MemberBase.2182" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3099" }
%"class.blink::WeakMember.3099" = type { %"class.blink::MemberBase.3100" }
%"class.blink::MemberBase.3100" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3101", i64, %"class.std::__1::map.3102", i8*, i64, %"class.base::WeakPtrFactory.3111" }
%"class.base::RepeatingCallback.3101" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3102" = type { %"class.std::__1::__tree.3103" }
%"class.std::__1::__tree.3103" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3104", %"class.std::__1::__compressed_pair.3108" }
%"class.std::__1::__compressed_pair.3104" = type { %"struct.std::__1::__compressed_pair_elem.1565" }
%"class.std::__1::__compressed_pair.3108" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2183" = type { %"class.WTF::HashSet.2186" }
%"class.WTF::HashSet.2186" = type { %"class.WTF::HashTable.2187" }
%"class.WTF::HashTable.2187" = type <{ %"class.blink::WeakMember.2189"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2189" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2131", %"class.blink::Member.2190", %"class.blink::Member.2192", %"class.std::__1::unique_ptr.2194", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2200" }
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2194" = type { %"class.std::__1::__compressed_pair.2195" }
%"class.std::__1::__compressed_pair.2195" = type { %"struct.std::__1::__compressed_pair_elem.2196" }
%"struct.std::__1::__compressed_pair_elem.2196" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2200" = type { %"class.WTF::HashTable.2201" }
%"class.WTF::HashTable.2201" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2204" = type { %"class.blink::MemberBase.2205" }
%"class.blink::MemberBase.2205" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2602", %"class.blink::Member.2131", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2607", i8, i32, %"class.blink::Color", %"class.absl::optional.2609", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2614", %"class.blink::Member.2616", %"class.blink::Member.2616", %"class.std::__1::unique_ptr.2619", i32, [4 x i8], %"class.WTF::HashSet.2622", %"class.blink::Member.2629", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2631", %"class.blink::HeapHashSet.2638", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2644", i8, %"class.blink::Member.2650", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2662", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2676", i8, %"class.std::__1::unique_ptr.2682", %"class.std::__1::unique_ptr.2758", %"class.WTF::Vector.2764", i32, %class.scoped_refptr.2769, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2770", %"class.blink::Member.2772", %"class.blink::Member.2774", %"class.blink::HeapHashSet.2776", %"class.blink::HeapHashSet.2783", %"class.std::__1::unique_ptr.2790", %"class.std::__1::unique_ptr.2796", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2602" = type { %"class.WTF::HashTable.2603" }
%"class.WTF::HashTable.2603" = type <{ %class.scoped_refptr.2606*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2606 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2607" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2608", { i64, i64 } }
%"class.blink::WeakMember.2608" = type { %"class.blink::MemberBase.2205" }
%"class.absl::optional.2609" = type { %"class.absl::optional_internal::optional_data.2610" }
%"class.absl::optional_internal::optional_data.2610" = type { %"class.absl::optional_internal::optional_data_base.2611" }
%"class.absl::optional_internal::optional_data_base.2611" = type { %"class.absl::optional_internal::optional_data_dtor_base.2612" }
%"class.absl::optional_internal::optional_data_dtor_base.2612" = type { i8, %union.anon.2613 }
%union.anon.2613 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2616" = type { %"class.blink::MemberBase.2617" }
%"class.blink::MemberBase.2617" = type { %"class.blink::HeapHashSet.2618"* }
%"class.blink::HeapHashSet.2618" = type opaque
%"class.std::__1::unique_ptr.2619" = type { %"class.std::__1::__compressed_pair.2620" }
%"class.std::__1::__compressed_pair.2620" = type { %"struct.std::__1::__compressed_pair_elem.2621" }
%"struct.std::__1::__compressed_pair_elem.2621" = type { %"class.WTF::HashSet.2622"* }
%"class.WTF::HashSet.2622" = type { %"class.WTF::HashTable.2623" }
%"class.WTF::HashTable.2623" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1769", %"class.blink::Persistent.1775", %"class.std::__1::unique_ptr.1816", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1832" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.std::__1::unique_ptr.1769" = type { %"class.std::__1::__compressed_pair.1770" }
%"class.std::__1::__compressed_pair.1770" = type { %"struct.std::__1::__compressed_pair_elem.1771" }
%"struct.std::__1::__compressed_pair_elem.1771" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1775" = type { %"class.blink::PersistentBase.1776" }
%"class.blink::PersistentBase.1776" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1793", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1811" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1787", %"class.blink::Member.1789", %"class.blink::Member.1789", i8, [7 x i8] }>
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1789" = type { %"class.blink::MemberBase.1790" }
%"class.blink::MemberBase.1790" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1791", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1856", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1791" = type { %"class.blink::MemberBase.1792" }
%"class.blink::MemberBase.1792" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1856" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1857", { i64, i64 } }
%"class.blink::WeakMember.1857" = type { %"class.blink::MemberBase.1790" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1791", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1793" = type { %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.1795" }
%"struct.std::__1::__compressed_pair_elem.1795" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1796", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1801" }
%"class.WTF::HashMap.1796" = type { %"class.WTF::HashTable.1797" }
%"class.WTF::HashTable.1797" = type <{ %"struct.WTF::KeyValuePair.1800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1800" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1809" }
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1809" }
%"class.absl::optional.1811" = type { %"class.absl::optional_internal::optional_data.1812" }
%"class.absl::optional_internal::optional_data.1812" = type { %"class.absl::optional_internal::optional_data_base.1813" }
%"class.absl::optional_internal::optional_data_base.1813" = type { %"class.absl::optional_internal::optional_data_dtor_base.1814" }
%"class.absl::optional_internal::optional_data_dtor_base.1814" = type { i8, %union.anon.1815 }
%union.anon.1815 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.1816" = type { %"class.std::__1::__compressed_pair.1817" }
%"class.std::__1::__compressed_pair.1817" = type { %"struct.std::__1::__compressed_pair_elem.1818" }
%"struct.std::__1::__compressed_pair_elem.1818" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1819", %"class.WTF::Vector.1819", %"class.WTF::HashMap.1824", %"class.WTF::Vector.1819", i8, [7 x i8] }>
%"class.WTF::HashMap.1824" = type { %"class.WTF::HashTable.1825" }
%"class.WTF::HashTable.1825" = type <{ %"struct.WTF::KeyValuePair.1828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1828" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1819" }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1832" = type { %"class.std::__1::__compressed_pair.1833" }
%"class.std::__1::__compressed_pair.1833" = type { %"struct.std::__1::__compressed_pair_elem.1834" }
%"struct.std::__1::__compressed_pair_elem.1834" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1835", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1841", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1847", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1835" = type { %"class.std::__1::__compressed_pair.1836" }
%"class.std::__1::__compressed_pair.1836" = type { %"struct.std::__1::__compressed_pair_elem.1837" }
%"struct.std::__1::__compressed_pair_elem.1837" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.1841" = type { %"class.std::__1::__compressed_pair.1842" }
%"class.std::__1::__compressed_pair.1842" = type { %"struct.std::__1::__compressed_pair_elem.1843" }
%"struct.std::__1::__compressed_pair_elem.1843" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1847" = type { %"class.blink::PersistentBase.1848" }
%"class.blink::PersistentBase.1848" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2631" = type { %"class.WTF::HashSet.2634" }
%"class.WTF::HashSet.2634" = type { %"class.WTF::HashTable.2635" }
%"class.WTF::HashTable.2635" = type <{ %"class.blink::Member.2637"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2637" = type opaque
%"class.blink::HeapHashSet.2638" = type { %"class.WTF::HashSet.2641" }
%"class.WTF::HashSet.2641" = type { %"class.WTF::HashTable.2642" }
%"class.WTF::HashTable.2642" = type <{ %"class.blink::Member.1789"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2644" = type { %"class.std::__1::__compressed_pair.2645" }
%"class.std::__1::__compressed_pair.2645" = type { %"struct.std::__1::__compressed_pair_elem.2646" }
%"struct.std::__1::__compressed_pair_elem.2646" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2650" = type { %"class.blink::MemberBase.2651" }
%"class.blink::MemberBase.2651" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2654", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2654" = type { %"class.WTF::HashTable.2655" }
%"class.WTF::HashTable.2655" = type <{ %"struct.WTF::KeyValuePair.2657"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2657" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2658", i32, i32 }
%"class.WTF::Vector.2658" = type { %"class.WTF::VectorBuffer.2659" }
%"class.WTF::VectorBuffer.2659" = type { %"class.WTF::VectorBufferBase.2660" }
%"class.WTF::VectorBufferBase.2660" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2662" = type { %"class.WTF::LinkedHashSet.2665" }
%"class.WTF::LinkedHashSet.2665" = type { %"class.WTF::HashMap.2666", %"class.WTF::VectorBackedLinkedList.2670" }
%"class.WTF::HashMap.2666" = type { %"class.WTF::HashTable.2667" }
%"class.WTF::HashTable.2667" = type <{ %"struct.WTF::KeyValuePair.2669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2669" = type opaque
%"class.WTF::VectorBackedLinkedList.2670" = type { %"class.WTF::Vector.2671", i32, i32 }
%"class.WTF::Vector.2671" = type { %"class.WTF::VectorBuffer.2672" }
%"class.WTF::VectorBuffer.2672" = type { %"class.WTF::VectorBufferBase.2673" }
%"class.WTF::VectorBufferBase.2673" = type { %"class.WTF::VectorBackedLinkedListNode.2674"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2674" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2676" = type { %"class.std::__1::__compressed_pair.2677" }
%"class.std::__1::__compressed_pair.2677" = type { %"struct.std::__1::__compressed_pair_elem.2678" }
%"struct.std::__1::__compressed_pair_elem.2678" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2682" = type { %"class.std::__1::__compressed_pair.2683" }
%"class.std::__1::__compressed_pair.2683" = type { %"struct.std::__1::__compressed_pair_elem.2684" }
%"struct.std::__1::__compressed_pair_elem.2684" = type { %"class.blink::PaintController"* }
%"class.std::__1::unique_ptr.2758" = type { %"class.std::__1::__compressed_pair.2759" }
%"class.std::__1::__compressed_pair.2759" = type { %"struct.std::__1::__compressed_pair_elem.2760" }
%"struct.std::__1::__compressed_pair_elem.2760" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2764" = type { %"class.WTF::VectorBuffer.2765" }
%"class.WTF::VectorBuffer.2765" = type { %"class.WTF::VectorBufferBase.2766" }
%"class.WTF::VectorBufferBase.2766" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2769 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2770" = type { %"class.blink::MemberBase.2771" }
%"class.blink::MemberBase.2771" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2776" = type { %"class.WTF::HashSet.2779" }
%"class.WTF::HashSet.2779" = type { %"class.WTF::HashTable.2780" }
%"class.WTF::HashTable.2780" = type <{ %"class.blink::WeakMember.2782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2782" = type opaque
%"class.blink::HeapHashSet.2783" = type { %"class.WTF::HashSet.2786" }
%"class.WTF::HashSet.2786" = type { %"class.WTF::HashTable.2787" }
%"class.WTF::HashTable.2787" = type <{ %"class.blink::WeakMember.2789"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2789" = type opaque
%"class.std::__1::unique_ptr.2790" = type { %"class.std::__1::__compressed_pair.2791" }
%"class.std::__1::__compressed_pair.2791" = type { %"struct.std::__1::__compressed_pair_elem.2792" }
%"struct.std::__1::__compressed_pair_elem.2792" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2796" = type { %"class.std::__1::__compressed_pair.2797" }
%"class.std::__1::__compressed_pair.2797" = type { %"struct.std::__1::__compressed_pair_elem.2798" }
%"struct.std::__1::__compressed_pair_elem.2798" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1892", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.2131", %"class.blink::Member.2212", %"class.blink::Member.2214", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2216", %"class.blink::Member.2222" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2216" = type { %"class.std::__1::__compressed_pair.2217" }
%"class.std::__1::__compressed_pair.2217" = type { %"struct.std::__1::__compressed_pair_elem.2218" }
%"struct.std::__1::__compressed_pair_elem.2218" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2222" = type { %"class.blink::MemberBase.2223" }
%"class.blink::MemberBase.2223" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2232", %"class.blink::HeapListHashSet.2243", %"class.blink::HeapListHashSet.2254", %"class.blink::HeapListHashSet.2265", %"class.blink::HeapListHashSet.2276", %"class.blink::HeapListHashSet.2287", %"class.blink::HeapListHashSet.2298", %"class.blink::HeapListHashSet.2309", %"class.blink::HeapListHashSet.2320", %"class.blink::HeapListHashSet.2331", %"class.blink::HeapListHashSet.2342", %"class.blink::HeapListHashSet.2353", %"class.blink::HeapListHashSet.2364", %"class.blink::HeapListHashSet.2375", %"class.blink::HeapListHashSet.2386", %"class.blink::HeapListHashSet.2397", %"class.blink::HeapListHashSet.2408", %"class.blink::HeapListHashSet.2419", %"class.blink::HeapListHashSet.2430", %"class.blink::HeapListHashSet.2441" }
%"class.blink::HeapListHashSet.2232" = type { %"class.WTF::ListHashSet.base.2242", [7 x i8] }
%"class.WTF::ListHashSet.base.2242" = type <{ %"class.WTF::HashTable.2237", %"class.blink::Member.2239", %"class.blink::Member.2239", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2237" = type <{ %"class.blink::Member.2239"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::HeapListHashSetNode.2241"* }
%"class.blink::HeapListHashSetNode.2241" = type { %"class.blink::Member.2455", %"class.blink::Member.2239", %"class.blink::Member.2239" }
%"class.blink::HeapListHashSet.2243" = type { %"class.WTF::ListHashSet.base.2253", [7 x i8] }
%"class.WTF::ListHashSet.base.2253" = type <{ %"class.WTF::HashTable.2248", %"class.blink::Member.2250", %"class.blink::Member.2250", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2248" = type <{ %"class.blink::Member.2250"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::HeapListHashSetNode.2252"* }
%"class.blink::HeapListHashSetNode.2252" = type { %"class.blink::Member.2596", %"class.blink::Member.2250", %"class.blink::Member.2250" }
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2254" = type { %"class.WTF::ListHashSet.base.2264", [7 x i8] }
%"class.WTF::ListHashSet.base.2264" = type <{ %"class.WTF::HashTable.2259", %"class.blink::Member.2261", %"class.blink::Member.2261", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2259" = type <{ %"class.blink::Member.2261"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2261" = type { %"class.blink::MemberBase.2262" }
%"class.blink::MemberBase.2262" = type { %"class.blink::HeapListHashSetNode.2263"* }
%"class.blink::HeapListHashSetNode.2263" = type { %"class.blink::Member.2592", %"class.blink::Member.2261", %"class.blink::Member.2261" }
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2265" = type { %"class.WTF::ListHashSet.base.2275", [7 x i8] }
%"class.WTF::ListHashSet.base.2275" = type <{ %"class.WTF::HashTable.2270", %"class.blink::Member.2272", %"class.blink::Member.2272", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2270" = type <{ %"class.blink::Member.2272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::HeapListHashSetNode.2274"* }
%"class.blink::HeapListHashSetNode.2274" = type { %"class.blink::Member.2588", %"class.blink::Member.2272", %"class.blink::Member.2272" }
%"class.blink::Member.2588" = type { %"class.blink::MemberBase.2589" }
%"class.blink::MemberBase.2589" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2276" = type { %"class.WTF::ListHashSet.base.2286", [7 x i8] }
%"class.WTF::ListHashSet.base.2286" = type <{ %"class.WTF::HashTable.2281", %"class.blink::Member.2283", %"class.blink::Member.2283", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2281" = type <{ %"class.blink::Member.2283"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2283" = type { %"class.blink::MemberBase.2284" }
%"class.blink::MemberBase.2284" = type { %"class.blink::HeapListHashSetNode.2285"* }
%"class.blink::HeapListHashSetNode.2285" = type { %"class.blink::Member.2584", %"class.blink::Member.2283", %"class.blink::Member.2283" }
%"class.blink::Member.2584" = type { %"class.blink::MemberBase.2585" }
%"class.blink::MemberBase.2585" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2287" = type { %"class.WTF::ListHashSet.base.2297", [7 x i8] }
%"class.WTF::ListHashSet.base.2297" = type <{ %"class.WTF::HashTable.2292", %"class.blink::Member.2294", %"class.blink::Member.2294", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2292" = type <{ %"class.blink::Member.2294"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2294" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::HeapListHashSetNode.2296"* }
%"class.blink::HeapListHashSetNode.2296" = type { %"class.blink::Member.2580", %"class.blink::Member.2294", %"class.blink::Member.2294" }
%"class.blink::Member.2580" = type { %"class.blink::MemberBase.2581" }
%"class.blink::MemberBase.2581" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2298" = type { %"class.WTF::ListHashSet.base.2308", [7 x i8] }
%"class.WTF::ListHashSet.base.2308" = type <{ %"class.WTF::HashTable.2303", %"class.blink::Member.2305", %"class.blink::Member.2305", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2303" = type <{ %"class.blink::Member.2305"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2305" = type { %"class.blink::MemberBase.2306" }
%"class.blink::MemberBase.2306" = type { %"class.blink::HeapListHashSetNode.2307"* }
%"class.blink::HeapListHashSetNode.2307" = type { %"class.blink::Member.2576", %"class.blink::Member.2305", %"class.blink::Member.2305" }
%"class.blink::Member.2576" = type { %"class.blink::MemberBase.2577" }
%"class.blink::MemberBase.2577" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2309" = type { %"class.WTF::ListHashSet.base.2319", [7 x i8] }
%"class.WTF::ListHashSet.base.2319" = type <{ %"class.WTF::HashTable.2314", %"class.blink::Member.2316", %"class.blink::Member.2316", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2314" = type <{ %"class.blink::Member.2316"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2316" = type { %"class.blink::MemberBase.2317" }
%"class.blink::MemberBase.2317" = type { %"class.blink::HeapListHashSetNode.2318"* }
%"class.blink::HeapListHashSetNode.2318" = type { %"class.blink::Member.2572", %"class.blink::Member.2316", %"class.blink::Member.2316" }
%"class.blink::Member.2572" = type { %"class.blink::MemberBase.2573" }
%"class.blink::MemberBase.2573" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2320" = type { %"class.WTF::ListHashSet.base.2330", [7 x i8] }
%"class.WTF::ListHashSet.base.2330" = type <{ %"class.WTF::HashTable.2325", %"class.blink::Member.2327", %"class.blink::Member.2327", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2325" = type <{ %"class.blink::Member.2327"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::HeapListHashSetNode.2329"* }
%"class.blink::HeapListHashSetNode.2329" = type { %"class.blink::Member.2568", %"class.blink::Member.2327", %"class.blink::Member.2327" }
%"class.blink::Member.2568" = type { %"class.blink::MemberBase.2569" }
%"class.blink::MemberBase.2569" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2331" = type { %"class.WTF::ListHashSet.base.2341", [7 x i8] }
%"class.WTF::ListHashSet.base.2341" = type <{ %"class.WTF::HashTable.2336", %"class.blink::Member.2338", %"class.blink::Member.2338", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2336" = type <{ %"class.blink::Member.2338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::HeapListHashSetNode.2340"* }
%"class.blink::HeapListHashSetNode.2340" = type { %"class.blink::Member.2564", %"class.blink::Member.2338", %"class.blink::Member.2338" }
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2342" = type { %"class.WTF::ListHashSet.base.2352", [7 x i8] }
%"class.WTF::ListHashSet.base.2352" = type <{ %"class.WTF::HashTable.2347", %"class.blink::Member.2349", %"class.blink::Member.2349", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2347" = type <{ %"class.blink::Member.2349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2349" = type { %"class.blink::MemberBase.2350" }
%"class.blink::MemberBase.2350" = type { %"class.blink::HeapListHashSetNode.2351"* }
%"class.blink::HeapListHashSetNode.2351" = type { %"class.blink::Member.2459", %"class.blink::Member.2349", %"class.blink::Member.2349" }
%"class.blink::HeapListHashSet.2353" = type { %"class.WTF::ListHashSet.base.2363", [7 x i8] }
%"class.WTF::ListHashSet.base.2363" = type <{ %"class.WTF::HashTable.2358", %"class.blink::Member.2360", %"class.blink::Member.2360", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2358" = type <{ %"class.blink::Member.2360"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2360" = type { %"class.blink::MemberBase.2361" }
%"class.blink::MemberBase.2361" = type { %"class.blink::HeapListHashSetNode.2362"* }
%"class.blink::HeapListHashSetNode.2362" = type { %"class.blink::Member.2558", %"class.blink::Member.2360", %"class.blink::Member.2360" }
%"class.blink::Member.2558" = type { %"class.blink::MemberBase.2559" }
%"class.blink::MemberBase.2559" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2364" = type { %"class.WTF::ListHashSet.base.2374", [7 x i8] }
%"class.WTF::ListHashSet.base.2374" = type <{ %"class.WTF::HashTable.2369", %"class.blink::Member.2371", %"class.blink::Member.2371", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2369" = type <{ %"class.blink::Member.2371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::HeapListHashSetNode.2373"* }
%"class.blink::HeapListHashSetNode.2373" = type { %"class.blink::Member.2554", %"class.blink::Member.2371", %"class.blink::Member.2371" }
%"class.blink::Member.2554" = type { %"class.blink::MemberBase.2555" }
%"class.blink::MemberBase.2555" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2375" = type { %"class.WTF::ListHashSet.base.2385", [7 x i8] }
%"class.WTF::ListHashSet.base.2385" = type <{ %"class.WTF::HashTable.2380", %"class.blink::Member.2382", %"class.blink::Member.2382", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2380" = type <{ %"class.blink::Member.2382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2382" = type { %"class.blink::MemberBase.2383" }
%"class.blink::MemberBase.2383" = type { %"class.blink::HeapListHashSetNode.2384"* }
%"class.blink::HeapListHashSetNode.2384" = type { %"class.blink::Member.2550", %"class.blink::Member.2382", %"class.blink::Member.2382" }
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2386" = type { %"class.WTF::ListHashSet.base.2396", [7 x i8] }
%"class.WTF::ListHashSet.base.2396" = type <{ %"class.WTF::HashTable.2391", %"class.blink::Member.2393", %"class.blink::Member.2393", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2391" = type <{ %"class.blink::Member.2393"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::HeapListHashSetNode.2395"* }
%"class.blink::HeapListHashSetNode.2395" = type { %"class.blink::Member.2546", %"class.blink::Member.2393", %"class.blink::Member.2393" }
%"class.blink::Member.2546" = type { %"class.blink::MemberBase.2547" }
%"class.blink::MemberBase.2547" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2397" = type { %"class.WTF::ListHashSet.base.2407", [7 x i8] }
%"class.WTF::ListHashSet.base.2407" = type <{ %"class.WTF::HashTable.2402", %"class.blink::Member.2404", %"class.blink::Member.2404", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2402" = type <{ %"class.blink::Member.2404"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2404" = type { %"class.blink::MemberBase.2405" }
%"class.blink::MemberBase.2405" = type { %"class.blink::HeapListHashSetNode.2406"* }
%"class.blink::HeapListHashSetNode.2406" = type { %"class.blink::Member.2542", %"class.blink::Member.2404", %"class.blink::Member.2404" }
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2408" = type { %"class.WTF::ListHashSet.base.2418", [7 x i8] }
%"class.WTF::ListHashSet.base.2418" = type <{ %"class.WTF::HashTable.2413", %"class.blink::Member.2415", %"class.blink::Member.2415", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2413" = type <{ %"class.blink::Member.2415"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2415" = type { %"class.blink::MemberBase.2416" }
%"class.blink::MemberBase.2416" = type { %"class.blink::HeapListHashSetNode.2417"* }
%"class.blink::HeapListHashSetNode.2417" = type { %"class.blink::Member.2538", %"class.blink::Member.2415", %"class.blink::Member.2415" }
%"class.blink::Member.2538" = type { %"class.blink::MemberBase.2539" }
%"class.blink::MemberBase.2539" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2419" = type { %"class.WTF::ListHashSet.base.2429", [7 x i8] }
%"class.WTF::ListHashSet.base.2429" = type <{ %"class.WTF::HashTable.2424", %"class.blink::Member.2426", %"class.blink::Member.2426", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2424" = type <{ %"class.blink::Member.2426"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2426" = type { %"class.blink::MemberBase.2427" }
%"class.blink::MemberBase.2427" = type { %"class.blink::HeapListHashSetNode.2428"* }
%"class.blink::HeapListHashSetNode.2428" = type { %"class.blink::Member.2534", %"class.blink::Member.2426", %"class.blink::Member.2426" }
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2430" = type { %"class.WTF::ListHashSet.base.2440", [7 x i8] }
%"class.WTF::ListHashSet.base.2440" = type <{ %"class.WTF::HashTable.2435", %"class.blink::Member.2437", %"class.blink::Member.2437", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2435" = type <{ %"class.blink::Member.2437"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::HeapListHashSetNode.2439"* }
%"class.blink::HeapListHashSetNode.2439" = type { %"class.blink::Member.2461", %"class.blink::Member.2437", %"class.blink::Member.2437" }
%"class.blink::HeapListHashSet.2441" = type { %"class.WTF::ListHashSet.base.2451", [7 x i8] }
%"class.WTF::ListHashSet.base.2451" = type <{ %"class.WTF::HashTable.2446", %"class.blink::Member.2448", %"class.blink::Member.2448", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2446" = type <{ %"class.blink::Member.2448"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2448" = type { %"class.blink::MemberBase.2449" }
%"class.blink::MemberBase.2449" = type { %"class.blink::HeapListHashSetNode.2450"* }
%"class.blink::HeapListHashSetNode.2450" = type { %"class.blink::Member.2453", %"class.blink::Member.2448", %"class.blink::Member.2448" }
%class.scoped_refptr.2452 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2453" = type { %"class.blink::MemberBase.2454" }
%"class.blink::MemberBase.2454" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2455" = type { %"class.blink::MemberBase.2456" }
%"class.blink::MemberBase.2456" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2457" = type { %"class.blink::MemberBase.2458" }
%"class.blink::MemberBase.2458" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2469" }
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3114" }
%"class.mojo::Remote.3114" = type { %"class.mojo::internal::InterfacePtrState.3115" }
%"class.mojo::internal::InterfacePtrState.3115" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3116" }
%"class.std::__1::unique_ptr.3116" = type { %"class.std::__1::__compressed_pair.3117" }
%"class.std::__1::__compressed_pair.3117" = type { %"struct.std::__1::__compressed_pair_elem.3118" }
%"struct.std::__1::__compressed_pair_elem.3118" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2471" = type { %"class.std::__1::__compressed_pair.2472" }
%"class.std::__1::__compressed_pair.2472" = type { %"struct.std::__1::__compressed_pair_elem.2473" }
%"struct.std::__1::__compressed_pair_elem.2473" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2477" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.2480" }
%"struct.std::__1::__compressed_pair_elem.2480" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2149" = type { %"class.absl::optional_internal::optional_data.2150" }
%"class.absl::optional_internal::optional_data.2150" = type { %"class.absl::optional_internal::optional_data_base.2151" }
%"class.absl::optional_internal::optional_data_base.2151" = type { %"class.absl::optional_internal::optional_data_dtor_base.2152" }
%"class.absl::optional_internal::optional_data_dtor_base.2152" = type { i8, %union.anon.2153 }
%union.anon.2153 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2484" = type { %"class.std::__1::__compressed_pair.2485" }
%"class.std::__1::__compressed_pair.2485" = type { %"struct.std::__1::__compressed_pair_elem.2486" }
%"struct.std::__1::__compressed_pair_elem.2486" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2490" }
%"class.blink::Member.2490" = type { %"class.blink::MemberBase.2491" }
%"class.blink::MemberBase.2491" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3124" }
%"class.mojo::AssociatedRemote.3124" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3125" }
%"class.mojo::internal::AssociatedInterfacePtrState.3125" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3126" }
%"class.std::__1::unique_ptr.3126" = type { %"class.std::__1::__compressed_pair.3127" }
%"class.std::__1::__compressed_pair.3127" = type { %"struct.std::__1::__compressed_pair_elem.3128" }
%"struct.std::__1::__compressed_pair_elem.3128" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2492" = type { %"class.blink::Member.2493" }
%"class.blink::Member.2493" = type { %"class.blink::MemberBase.2494" }
%"class.blink::MemberBase.2494" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3134" }
%"class.mojo::AssociatedRemote.3134" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3135" }
%"class.mojo::internal::AssociatedInterfacePtrState.3135" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3136" }
%"class.std::__1::unique_ptr.3136" = type { %"class.std::__1::__compressed_pair.3137" }
%"class.std::__1::__compressed_pair.3137" = type { %"struct.std::__1::__compressed_pair_elem.3138" }
%"struct.std::__1::__compressed_pair_elem.3138" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2495" }
%"class.blink::Member.2495" = type { %"class.blink::MemberBase.2496" }
%"class.blink::MemberBase.2496" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3144", %"class.blink::Member.2131", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3144" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3145" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1661" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3145" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2497" = type { %"class.blink::Member.2498" }
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3148", %"class.blink::Member.2131", %"class.mojo::AssociatedReceiver.3149" }
%"class.blink::ThreadState::PrefinalizerRegistration.3148" = type { i8 }
%"class.mojo::AssociatedReceiver.3149" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3150" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3150" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2500" }
%"class.blink::Member.2500" = type { %"class.blink::MemberBase.2501" }
%"class.blink::MemberBase.2501" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3153", %"class.blink::Member.2131", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3153" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2028, %"class.std::__1::unique_ptr.1661", %"class.base::WeakPtrFactory.3154" }
%"class.base::WeakPtrFactory.3154" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2502" = type { %"class.blink::Member.2503" }
%"class.blink::Member.2503" = type { %"class.blink::MemberBase.2504" }
%"class.blink::MemberBase.2504" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3157", %"class.blink::Member.2131", %"class.mojo::AssociatedReceiver.3158" }
%"class.blink::ThreadState::PrefinalizerRegistration.3157" = type { i8 }
%"class.mojo::AssociatedReceiver.3158" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3159" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3159" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2505" = type { %"class.blink::MemberBase.2506" }
%"class.blink::MemberBase.2506" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2507" = type { %"class.blink::MemberBase.2508" }
%"class.blink::MemberBase.2508" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::HeapHashMap.2511"* }
%"class.blink::HeapHashMap.2511" = type opaque
%"class.mojo::StructPtr.2512" = type { %"class.std::__1::unique_ptr.2513" }
%"class.std::__1::unique_ptr.2513" = type { %"class.std::__1::__compressed_pair.2514" }
%"class.std::__1::__compressed_pair.2514" = type { %"struct.std::__1::__compressed_pair_elem.2515" }
%"struct.std::__1::__compressed_pair_elem.2515" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2516", %"class.mojo::InlinedStructPtr.2517" }
%"class.mojo::InlinedStructPtr.2516" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2517" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2521" = type { %"class.blink::MemberBase.2522" }
%"class.blink::MemberBase.2522" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2523" = type { %"class.absl::optional_internal::optional_data.2524" }
%"class.absl::optional_internal::optional_data.2524" = type { %"class.absl::optional_internal::optional_data_base.2525" }
%"class.absl::optional_internal::optional_data_base.2525" = type { %"class.absl::optional_internal::optional_data_dtor_base.2526" }
%"class.absl::optional_internal::optional_data_dtor_base.2526" = type { i8, %union.anon.2527 }
%union.anon.2527 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::DragImage" = type { %class.SkBitmap, float, i32 }
%class.SkBitmap = type { %class.sk_sp.2925, %class.SkPixmap, %class.sk_sp.2928 }
%class.sk_sp.2925 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.2928 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.blink::PaintRecordBuilder" = type { %"class.blink::DisplayItemClient.base", %"class.absl::optional.2932", %"class.blink::PaintController"*, %"class.blink::GraphicsContext" }
%"class.absl::optional.2932" = type { %"class.absl::optional_internal::optional_data.2933" }
%"class.absl::optional_internal::optional_data.2933" = type { %"class.absl::optional_internal::optional_data_base.2934" }
%"class.absl::optional_internal::optional_data_base.2934" = type { %"class.absl::optional_internal::optional_data_dtor_base.2935" }
%"class.absl::optional_internal::optional_data_dtor_base.2935" = type { i8, %union.anon.2936 }
%union.anon.2936 = type { %"class.blink::PaintController" }
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2937", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.3015", i8, i8, i8, i32 }
%"class.blink::PropertyTreeState" = type { %"class.blink::PropertyTreeStateOrAlias" }
%"class.blink::AffineTransform" = type { [6 x double] }
%class.sk_sp.3050 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.3051", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3051" = type { %"class.std::__1::__compressed_pair.3052" }
%"class.std::__1::__compressed_pair.3052" = type { %"struct.std::__1::__compressed_pair_elem.3053" }
%"struct.std::__1::__compressed_pair_elem.3053" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.blink::UnacceleratedStaticBitmapImage" = type { %"class.blink::StaticBitmapImage.base", %"class.cc::PaintImage", %class.sk_sp.2950, %class.scoped_refptr.963 }
%"class.blink::StaticBitmapImage.base" = type <{ %"class.blink::Image", %"class.blink::ImageOrientation", i8 }>
%"class.blink::ImageOrientation" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic.41", [4 x i8] }>
%"struct.blink::ScreenInfo" = type { float, %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32, %"class.gfx::Rect", %"class.gfx::Rect", i32, i16, i8, i8, i8, i64 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.3058" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.3058" = type { %"class.absl::optional_internal::optional_data.3059" }
%"class.absl::optional_internal::optional_data.3059" = type { %"class.absl::optional_internal::optional_data_base.3060" }
%"class.absl::optional_internal::optional_data_base.3060" = type { %"class.absl::optional_internal::optional_data_dtor_base.3061" }
%"class.absl::optional_internal::optional_data_dtor_base.3061" = type { i8, %union.anon.3062 }
%union.anon.3062 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"struct.blink::PaintLayerPaintingInfo" = type <{ %"class.blink::PaintLayer"*, %"class.blink::CullRect", %"struct.blink::PhysicalOffset", i32, [4 x i8] }>
%"class.blink::PaintLayerPainter" = type { %"class.blink::PaintLayer"* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3226", %"class.blink::Member.3228", %"class.blink::Member.3230", %"class.blink::Member.3249", %"class.blink::Member.3251" }
%"class.blink::Member.3226" = type { %"class.blink::MemberBase.3227" }
%"class.blink::MemberBase.3227" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3228" = type { %"class.blink::MemberBase.3229" }
%"class.blink::MemberBase.3229" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3230" = type { %"class.blink::MemberBase.3231" }
%"class.blink::MemberBase.3231" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3234", %"class.blink::HeapHashSet.3243" }
%"class.blink::HeapVector.3234" = type { %"class.WTF::Vector.3237" }
%"class.WTF::Vector.3237" = type { %"class.WTF::VectorBuffer.3238" }
%"class.WTF::VectorBuffer.3238" = type { %"class.WTF::VectorBufferBase.3239" }
%"class.WTF::VectorBufferBase.3239" = type { %"class.blink::Member.3240"*, i32, i32 }
%"class.blink::Member.3240" = type { %"class.blink::MemberBase.3241" }
%"class.blink::MemberBase.3241" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3243" = type { %"class.WTF::HashSet.3246" }
%"class.WTF::HashSet.3246" = type { %"class.WTF::HashTable.3247" }
%"class.WTF::HashTable.3247" = type <{ %"class.blink::Member.3240"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3249" = type { %"class.blink::MemberBase.3250" }
%"class.blink::MemberBase.3250" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3251" = type { %"class.blink::MemberBase.3252" }
%"class.blink::MemberBase.3252" = type { %"class.blink::HeapHashSet.3253"* }
%"class.blink::HeapHashSet.3253" = type opaque
%"class.blink::HeapHashSet.3063" = type { %"class.WTF::HashSet.3066" }
%"class.WTF::HashSet.3066" = type { %"class.WTF::HashTable.3067" }
%"class.WTF::HashTable.3067" = type <{ %"class.blink::Member.3069"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3069" = type { %"class.blink::MemberBase.3196" }
%"class.blink::MemberBase.3196" = type { %"class.blink::ShadowRoot"* }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1318", %"class.blink::Member.3197", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.3197" = type { %"class.blink::MemberBase.3198" }
%"class.blink::MemberBase.3198" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::LayoutImageResource" = type { i32 (...)**, %"class.blink::LayoutObject"*, %"class.blink::Member.1922" }
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.3260", %class.scoped_refptr.3270, %class.scoped_refptr.3271, %"struct.blink::CacheControlHeader", %"class.absl::optional.1665", %"class.absl::optional.1892", %"class.absl::optional.1892", %"class.absl::optional.1892", i64, %"class.blink::KURL", %"class.WTF::Vector.3272", %"class.WTF::String", %"class.WTF::Vector.630", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.2149", %"class.WTF::Vector.630", %"class.blink::KURL", %"class.absl::optional.3277" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.3254" }
%"class.WTF::HashMap.3254" = type { %"class.WTF::HashTable.3255" }
%"class.WTF::HashTable.3255" = type <{ %"struct.WTF::KeyValuePair.3258"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3258" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.3259", i8 }
%"struct.std::__1::array.3259" = type { [16 x i8] }
%"class.absl::optional.3260" = type { %"class.absl::optional_internal::optional_data.3261" }
%"class.absl::optional_internal::optional_data.3261" = type { %"class.absl::optional_internal::optional_data_base.3262" }
%"class.absl::optional_internal::optional_data_base.3262" = type { %"class.absl::optional_internal::optional_data_dtor_base.3263" }
%"class.absl::optional_internal::optional_data_dtor_base.3263" = type { i8, %union.anon.3264 }
%union.anon.3264 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.630", %"class.WTF::String", i64, i64, %"class.WTF::Vector.284", %"class.WTF::Vector.3265" }
%"class.WTF::Vector.3265" = type { %"class.WTF::VectorBuffer.3266" }
%"class.WTF::VectorBuffer.3266" = type { %"class.WTF::VectorBufferBase.3267" }
%"class.WTF::VectorBufferBase.3267" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.3270 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.3271 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1665", %"class.absl::optional.1665" }
%"class.WTF::Vector.3272" = type { %"class.WTF::VectorBuffer.3273" }
%"class.WTF::VectorBuffer.3273" = type { %"class.WTF::VectorBufferBase.3274" }
%"class.WTF::VectorBufferBase.3274" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.3277" = type { %"class.absl::optional_internal::optional_data.3278" }
%"class.absl::optional_internal::optional_data.3278" = type { %"class.absl::optional_internal::optional_data_base.3279" }
%"class.absl::optional_internal::optional_data_base.3279" = type { %"class.absl::optional_internal::optional_data_dtor_base.3280" }
%"class.absl::optional_internal::optional_data_dtor_base.3280" = type { i8, %union.anon.3281 }
%union.anon.3281 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.3074", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.3070", %"class.blink::Member.1978", %"class.blink::Member.3072", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.3070" = type { %"class.blink::MemberBase.3071" }
%"class.blink::MemberBase.3071" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1978" = type { %"class.blink::MemberBase.1979" }
%"class.blink::MemberBase.1979" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.3072" = type { %"class.blink::MemberBase.3073" }
%"class.blink::MemberBase.3073" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.3074" = type { %"class.blink::MemberBase.3075" }
%"class.blink::MemberBase.3075" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::DataTransferItemList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.3076", %"class.blink::Member.1858" }
%"class.blink::Member.3076" = type { %"class.blink::MemberBase.3077" }
%"class.blink::MemberBase.3077" = type { %"class.blink::DataTransfer"* }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.3085, %"class.blink::Member.3086", %"class.blink::SelfKeepAlive", %"class.util::TokenType.3090" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.3085 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.3086" = type { %"class.blink::MemberBase.3087" }
%"class.blink::MemberBase.3087" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.3088" }
%"class.blink::Persistent.3088" = type { %"class.blink::PersistentBase.3089" }
%"class.blink::PersistentBase.3089" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.3090" = type { %"class.base::StrongAlias.3091" }
%"class.base::StrongAlias.3091" = type { %"class.base::UnguessableToken" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringHasher" = type { i32, i8, i16 }

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink12DataTransfer18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4FileEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE = comdat any

$_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j = comdat any

$_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@_ZTVN5blink12DataTransferE = hidden unnamed_addr constant { [12 x i8*], [4 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DataTransfer"*)* @_ZN5blink12DataTransferD2Ev to i8*), i8* bitcast (void (%"class.blink::DataTransfer"*)* @_ZN5blink12DataTransferD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::DataTransfer"*, %"class.blink::Visitor"*)* @_ZNK5blink12DataTransfer5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::DataTransfer"*)* @_ZNK5blink12DataTransfer18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::DataTransfer"*)* @_ZN5blink12DataTransfer17OnItemListChangedEv to i8*)], [4 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::DataTransfer"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink12DataTransfer5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::DataTransfer"*)* @_ZThn16_N5blink12DataTransfer17OnItemListChangedEv to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@_ZN5blink17kMimeTypeTextHTMLE = external constant [0 x i8], align 1
@_ZN5blink18kMimeTypeTextPlainE = external constant [0 x i8], align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"uninitialized\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.5 = private unnamed_addr constant [9 x i8] c"copyLink\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"copyMove\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"linkMove\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@_ZN5blink13kMimeTypeTextE = external constant [0 x i8], align 1
@_ZN5blink21kMimeTypeTextPlainEtcE = external constant [0 x i8], align 1
@_ZN5blink12kMimeTypeURLE = external constant [0 x i8], align 1
@_ZN5blink20kMimeTypeTextURIListE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.14 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4FileEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::File>, WTF::VectorTraits<blink::Member<blink::File> > >]\00", align 1
@__const._ZN5blink12_GLOBAL__N_123DraggedNodeImageBuilder11CreateImageEv.builder = private unnamed_addr constant { %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2937", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.3015", i8, i8, i8, [1 x i8], i32 } } { %"class.blink::DisplayItemClient.base" <{ i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i8 -86 }>, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } } { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr.2685 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, %class.scoped_refptr.2685 { %"class.blink::PaintArtifact"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintArtifact"*) }, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }> <{ %"class.WTF::Vector.2693"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.2693"*), { { { { i8, [7 x i8], %union.anon.2724 } } } } { { { { i8, [7 x i8], %union.anon.2724 } } } { { { i8, [7 x i8], %union.anon.2724 } } { { i8, [7 x i8], %union.anon.2724 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.2724 { %"struct.blink::DisplayItem::Id" { %"class.blink::DisplayItemClient"* inttoptr (i64 -6148914691236517206 to %"class.blink::DisplayItemClient"*), i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PropertyTreeStateOrAlias" { %"class.blink::TransformPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::TransformPaintPropertyNodeOrAlias"*), %"class.blink::ClipPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::ClipPaintPropertyNodeOrAlias"*), %"class.blink::EffectPaintPropertyNodeOrAlias"* inttoptr (i64 -6148914691236517206 to %"class.blink::EffectPaintPropertyNodeOrAlias"*) }, %"class.blink::Region" { %"class.blink::IntRect" { %"class.blink::IntPoint" { i32 -1431655766, i32 -1431655766 }, %"class.blink::IntSize" { i32 -1431655766, i32 -1431655766 } }, %"class.blink::Region::Shape" { %"class.WTF::Vector.2725" { %"class.WTF::VectorBuffer.2726" { %"class.WTF::VectorBufferBase.2727" { i32* inttoptr (i64 -6148914691236517206 to i32*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, %"class.WTF::Vector.2730" { %"class.WTF::VectorBuffer.2731" { %"class.WTF::VectorBufferBase.2732" { %"struct.blink::Region::Span"* inttoptr (i64 -6148914691236517206 to %"struct.blink::Region::Span"*), i32 -1431655766, i32 -1431655766 }, [128 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } } } }, i8 -86, i8 -86, i8 -86, i8 -86, %"class.blink::Color" { i32 -1431655766 }, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA" }>, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::Vector.2735" { %"class.WTF::VectorBuffer.2736" { %"class.WTF::VectorBufferBase.2737" { %"struct.blink::FrameFirstPaint"* inttoptr (i64 -6148914691236517206 to %"struct.blink::FrameFirstPaint"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.WTF::HashMap.2740" { %"class.WTF::HashTable.2741" <{ %"struct.WTF::KeyValuePair.2744"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.2744"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.5 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.2745" { %"class.WTF::HashTable.2746" <{ %"struct.WTF::KeyValuePair.2749"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.2749"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.2750" { %"class.WTF::VectorBuffer.2751" { %"class.WTF::VectorBufferBase.2752" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, %"struct.blink::PaintController::SubsequencesData" { %"class.WTF::HashMap.2745" { %"class.WTF::HashTable.2746" <{ %"struct.WTF::KeyValuePair.2749"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.2749"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, %"class.WTF::Vector.2750" { %"class.WTF::VectorBuffer.2751" { %"class.WTF::VectorBufferBase.2752" { %"struct.blink::PaintController::SubsequenceMarkers"* inttoptr (i64 -6148914691236517206 to %"struct.blink::PaintController::SubsequenceMarkers"*), i32 -1431655766, i32 -1431655766 } } } }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } } } } } }, %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2937", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.3015", i8, i8, i8, [1 x i8], i32 } { %"class.cc::PaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintCanvas"*), %"class.blink::PaintController"* inttoptr (i64 -6148914691236517206 to %"class.blink::PaintController"*), %"class.WTF::Vector.2937" { %"class.WTF::VectorBuffer.2938" { %"class.WTF::VectorBufferBase.2939" { %"class.std::__1::unique_ptr.2940"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::unique_ptr.2940"*), i32 -1431655766, i32 -1431655766 } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %"class.blink::GraphicsContextState"* inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContextState"*), %"class.cc::PaintRecorder" { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.scoped_refptr.2989 { %"class.cc::DisplayItemList"* inttoptr (i64 -6148914691236517206 to %"class.cc::DisplayItemList"*) }, %"class.std::__1::unique_ptr.2990" { %"class.std::__1::__compressed_pair.2991" { %"struct.std::__1::__compressed_pair_elem.2992" { %"class.cc::RecordPaintCanvas"* inttoptr (i64 -6148914691236517206 to %"class.cc::RecordPaintCanvas"*) } } } }, %"class.printing::MetafileSkia"* inttoptr (i64 -6148914691236517206 to %"class.printing::MetafileSkia"*), %"class.paint_preview::PaintPreviewTracker"* inttoptr (i64 -6148914691236517206 to %"class.paint_preview::PaintPreviewTracker"*), float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::unique_ptr.3015" { %"class.std::__1::__compressed_pair.3016" { %"struct.std::__1::__compressed_pair_elem.3017" { %"class.blink::DarkModeFilter"* inttoptr (i64 -6148914691236517206 to %"class.blink::DarkModeFilter"*) } } }, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766 } }, align 8
@_ZN5blink10http_names19kContentDispositionE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN3WTF10StringImpl20kLatin1CaseFoldTableE = external local_unnamed_addr constant [256 x i16], align 16
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink12DataTransfer18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink12DataTransferD1Ev = hidden unnamed_addr alias void (%"class.blink::DataTransfer"*), void (%"class.blink::DataTransfer"*)* @_ZN5blink12DataTransferD2Ev
@_ZN5blink12DataTransferC1ENS0_16DataTransferTypeENS_24DataTransferAccessPolicyEPNS_10DataObjectE = hidden unnamed_addr alias void (%"class.blink::DataTransfer"*, i32, i32, %"class.blink::DataObject"*), void (%"class.blink::DataTransfer"*, i32, i32, %"class.blink::DataObject"*)* @_ZN5blink12DataTransferC2ENS0_16DataTransferTypeENS_24DataTransferAccessPolicyEPNS_10DataObjectE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataTransfer"* @_ZN5blink12DataTransfer6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.WTF::AtomicString", align 8
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = tail call %"class.blink::DataObject"* @_ZN5blink10DataObject6CreateEv() #12
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #12
  %5 = bitcast i8* %4 to %"class.blink::DataTransfer"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i64**
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"struct.blink::DataObject::Observer"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 2, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 32
  %15 = bitcast i8* %14 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = bitcast i8* %16 to %"class.WTF::AtomicString"*
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #12
  %18 = getelementptr inbounds i8, i8* %4, i64 48
  %19 = bitcast i8* %18 to i32*
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 56
  %21 = bitcast i8* %20 to %"class.blink::DataObject"**
  store %"class.blink::DataObject"* %3, %"class.blink::DataObject"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 68
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %4, i64 72
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %4, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  tail call void @_ZN5blink10DataObject11AddObserverEPNS0_8ObserverE(%"class.blink::DataObject"* %3, %"struct.blink::DataObject::Observer"* %10) #12
  %28 = getelementptr inbounds i8, i8* %4, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  %32 = bitcast %"class.WTF::AtomicString"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #12
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.WTF::AtomicString"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %36 = bitcast i8* %14 to i64*
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %35, i64* %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #12
  br label %52

52:                                               ; preds = %48, %51
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #12
  br label %68

68:                                               ; preds = %0, %52, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %69 = bitcast %"class.WTF::AtomicString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #12
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %71 = bitcast %"class.WTF::AtomicString"* %2 to i64*
  %72 = load i64, i64* %71, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %70, align 8
  %73 = bitcast i8* %16 to i64*
  %74 = bitcast i8* %16 to %"class.WTF::StringImpl"**
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  store i64 %72, i64* %73, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %68
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #12
  br label %90

90:                                               ; preds = %68, %86, %89
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #12
  br label %106

106:                                              ; preds = %90, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12
  ret %"class.blink::DataTransfer"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataTransfer"* @_ZN5blink12DataTransfer6CreateENS0_16DataTransferTypeENS_24DataTransferAccessPolicyEPNS_10DataObjectE(i32, i32, %"class.blink::DataObject"*) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #12
  %5 = bitcast i8* %4 to %"class.blink::DataTransfer"*
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = bitcast i8* %7 to i64**
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds i8, i8* %4, i64 16
  %10 = bitcast i8* %9 to %"struct.blink::DataObject::Observer"*
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 24
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 32
  %15 = bitcast i8* %14 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %4, i64 40
  %17 = bitcast i8* %16 to %"class.WTF::AtomicString"*
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %17, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #12
  %18 = getelementptr inbounds i8, i8* %4, i64 48
  %19 = bitcast i8* %18 to i32*
  store i32 %0, i32* %19, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 56
  %21 = bitcast i8* %20 to %"class.blink::DataObject"**
  store %"class.blink::DataObject"* %2, %"class.blink::DataObject"** %21, align 8
  %22 = getelementptr inbounds i8, i8* %4, i64 64
  store i8 1, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 68
  %24 = bitcast i8* %23 to i32*
  store i32 0, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %4, i64 72
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %4, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #12
  tail call void @_ZN5blink10DataObject11AddObserverEPNS0_8ObserverE(%"class.blink::DataObject"* %2, %"struct.blink::DataObject::Observer"* %10) #12
  %28 = getelementptr inbounds i8, i8* %4, i64 -4
  %29 = bitcast i8* %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = or i16 %30, 1
  store atomic i16 %31, i16* %29 release, align 2
  ret %"class.blink::DataTransfer"* %5
}

declare %"class.blink::DataObject"* @_ZN5blink10DataObject6CreateEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransferD2Ev(%"class.blink::DataTransfer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %37

37:                                               ; preds = %20, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransferD0Ev(%"class.blink::DataTransfer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %20

20:                                               ; preds = %19, %16, %1
  %21 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #12
  br label %37

37:                                               ; preds = %20, %33, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer13setDropEffectERKN3WTF12AtomicStringE(%"class.blink::DataTransfer"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %155

14:                                               ; preds = %2
  %15 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %20, align 8
  %21 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %22 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %21, i64* %22, align 8
  br label %31

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %24, align 8
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 1
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %29, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %31

31:                                               ; preds = %23, %19
  %32 = phi i64 [ %30, %23 ], [ %21, %19 ]
  %33 = phi i32 [ %26, %23 ], [ 0, %19 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #12
  %36 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %32, i64* %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 4, i32* %38, align 8
  %39 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %39, label %115, label %40

40:                                               ; preds = %31
  %41 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %46, i64* %47, align 8
  br label %56

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %56

56:                                               ; preds = %48, %44
  %57 = phi i64 [ %55, %48 ], [ %46, %44 ]
  %58 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %58, i32* %59, align 8
  %60 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #12
  %61 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %57, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 4, i32* %63, align 8
  %64 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  br i1 %64, label %115, label %65

65:                                               ; preds = %56
  %66 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #12
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %70, align 8
  %71 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %72 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %71, i64* %72, align 8
  br label %81

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 1
  %78 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %79 = bitcast i8** %78 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %81

81:                                               ; preds = %73, %69
  %82 = phi i64 [ %80, %73 ], [ %71, %69 ]
  %83 = phi i32 [ %76, %73 ], [ 0, %69 ]
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #12
  %86 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %82, i64* %86, align 8
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %88, align 8
  %89 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #12
  br i1 %89, label %115, label %90

90:                                               ; preds = %81
  %91 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #12
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %95, align 8
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %96, i64* %97, align 8
  br label %106

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %99, align 8
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %102, %"class.WTF::StringImpl"** %104, align 8
  %105 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %106

106:                                              ; preds = %98, %94
  %107 = phi i64 [ %105, %98 ], [ %96, %94 ]
  %108 = phi i32 [ %101, %98 ], [ 0, %94 ]
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %108, i32* %109, align 8
  %110 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #12
  %111 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %107, i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %113, align 8
  %114 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #12
  br i1 %114, label %115, label %155

115:                                              ; preds = %106, %81, %56, %31
  %116 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %136

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #12
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %124
  call void @llvm.trap() #12
  unreachable

134:                                              ; preds = %124
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %125, align 4
  br label %136

136:                                              ; preds = %134, %119, %115
  %137 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %138 = bitcast %"class.WTF::AtomicString"* %116 to i64*
  %139 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %116, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  store i64 %137, i64* %138, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #12
  br label %155

155:                                              ; preds = %106, %154, %151, %136, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer16setEffectAllowedERKN3WTF12AtomicStringE(%"class.blink::DataTransfer"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %55

6:                                                ; preds = %2
  %7 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_140ConvertEffectAllowedToDragOperationsMaskERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %1)
  %8 = trunc i64 %7 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %55, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 2
  br i1 %13, label %14, label %55

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #12
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #12
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %34, %19, %14
  %37 = ptrtoint %"class.WTF::StringImpl"* %17 to i64
  %38 = bitcast %"class.WTF::AtomicString"* %15 to i64*
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %37, i64* %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #12
  br label %55

55:                                               ; preds = %6, %54, %51, %36, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN5blink12_GLOBAL__N_140ConvertEffectAllowedToDragOperationsMaskERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* null, i8** %25, align 8
  %26 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %27 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %26, i64* %27, align 8
  br label %36

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 1
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %34 = bitcast i8** %33 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %36

36:                                               ; preds = %28, %24
  %37 = phi i64 [ %35, %28 ], [ %26, %24 ]
  %38 = phi i32 [ %31, %28 ], [ 0, %24 ]
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %38, i32* %39, align 8
  %40 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #12
  %41 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %37, i64* %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 13, i32* %43, align 8
  %44 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br i1 %44, label %246, label %45

45:                                               ; preds = %36
  %46 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %50, align 8
  %51 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %52 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %51, i64* %52, align 8
  br label %61

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %59 = bitcast i8** %58 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %57, %"class.WTF::StringImpl"** %59, align 8
  %60 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %61

61:                                               ; preds = %53, %49
  %62 = phi i64 [ %60, %53 ], [ %51, %49 ]
  %63 = phi i32 [ %56, %53 ], [ 0, %49 ]
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %63, i32* %64, align 8
  %65 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %62, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 4, i32* %68, align 8
  %69 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  br i1 %69, label %246, label %70

70:                                               ; preds = %61
  %71 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %75, align 8
  %76 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %77 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %76, i64* %77, align 8
  br label %86

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %79, align 8
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %84 = bitcast i8** %83 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %84, align 8
  %85 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %86

86:                                               ; preds = %78, %74
  %87 = phi i64 [ %85, %78 ], [ %76, %74 ]
  %88 = phi i32 [ %81, %78 ], [ 0, %74 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %88, i32* %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %87, i64* %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 4, i32* %93, align 8
  %94 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  br i1 %94, label %246, label %95

95:                                               ; preds = %86
  %96 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #12
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %99, label %103

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %100, align 8
  %101 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %102 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %101, i64* %102, align 8
  br label %111

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %104, align 8
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 1
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 1
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %107, %"class.WTF::StringImpl"** %109, align 8
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

111:                                              ; preds = %103, %99
  %112 = phi i64 [ %110, %103 ], [ %101, %99 ]
  %113 = phi i32 [ %106, %103 ], [ 0, %99 ]
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %113, i32* %114, align 8
  %115 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #12
  %116 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %112, i64* %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8** %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 4, i32* %118, align 8
  %119 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #12
  br i1 %119, label %246, label %120

120:                                              ; preds = %111
  %121 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %121) #12
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %124, label %128

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %125, align 8
  %126 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %127 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %126, i64* %127, align 8
  br label %136

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %129, align 8
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %134 = bitcast i8** %133 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %134, align 8
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %136

136:                                              ; preds = %128, %124
  %137 = phi i64 [ %135, %128 ], [ %126, %124 ]
  %138 = phi i32 [ %131, %128 ], [ 0, %124 ]
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %138, i32* %139, align 8
  %140 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #12
  %141 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %137, i64* %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 4, i32* %143, align 8
  %144 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %121) #12
  br i1 %144, label %246, label %145

145:                                              ; preds = %136
  %146 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %146) #12
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %149, label %153

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %150, align 8
  %151 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %152 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %151, i64* %152, align 8
  br label %161

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 1
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %159 = bitcast i8** %158 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %157, %"class.WTF::StringImpl"** %159, align 8
  %160 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %161

161:                                              ; preds = %153, %149
  %162 = phi i64 [ %160, %153 ], [ %151, %149 ]
  %163 = phi i32 [ %156, %153 ], [ 0, %149 ]
  %164 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %163, i32* %164, align 8
  %165 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %165) #12
  %166 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %162, i64* %166, align 8
  %167 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8** %167, align 8
  %168 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 8, i32* %168, align 8
  %169 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %165) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %146) #12
  br i1 %169, label %246, label %170

170:                                              ; preds = %161
  %171 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #12
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %175, align 8
  %176 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %177 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %176, i64* %177, align 8
  br label %186

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 1
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %184 = bitcast i8** %183 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %184, align 8
  %185 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %186

186:                                              ; preds = %178, %174
  %187 = phi i64 [ %185, %178 ], [ %176, %174 ]
  %188 = phi i32 [ %181, %178 ], [ 0, %174 ]
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %188, i32* %189, align 8
  %190 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #12
  %191 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %187, i64* %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 8, i32* %193, align 8
  %194 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #12
  br i1 %194, label %246, label %195

195:                                              ; preds = %186
  %196 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #12
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %199, label %203

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %200, align 8
  %201 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %202 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %201, i64* %202, align 8
  br label %211

203:                                              ; preds = %195
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %204, align 8
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 1
  %208 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %209 = bitcast i8** %208 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %207, %"class.WTF::StringImpl"** %209, align 8
  %210 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %211

211:                                              ; preds = %203, %199
  %212 = phi i64 [ %210, %203 ], [ %201, %199 ]
  %213 = phi i32 [ %206, %203 ], [ 0, %199 ]
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %213, i32* %214, align 8
  %215 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #12
  %216 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %212, i64* %216, align 8
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8** %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 8, i32* %218, align 8
  %219 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #12
  br i1 %219, label %246, label %220

220:                                              ; preds = %211
  %221 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %221) #12
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %224, label %228

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %225, align 8
  %226 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %227 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %226, i64* %227, align 8
  br label %236

228:                                              ; preds = %220
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 1
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %234 = bitcast i8** %233 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %234, align 8
  %235 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %236

236:                                              ; preds = %228, %224
  %237 = phi i64 [ %235, %228 ], [ %226, %224 ]
  %238 = phi i32 [ %231, %228 ], [ 0, %224 ]
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %238, i32* %239, align 8
  %240 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #12
  %241 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %237, i64* %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %242, align 8
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 3, i32* %243, align 8
  %244 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %221) #12
  %245 = zext i1 %244 to i64
  br label %246

246:                                              ; preds = %236, %211, %186, %161, %136, %111, %86, %61, %36
  %247 = phi i64 [ 1, %36 ], [ 1, %61 ], [ 1, %86 ], [ 1, %111 ], [ 1, %136 ], [ 1, %161 ], [ 1, %186 ], [ 1, %211 ], [ %245, %236 ]
  %248 = phi i64 [ -4294967296, %36 ], [ 0, %61 ], [ 4294967296, %86 ], [ 8589934592, %111 ], [ 68719476736, %136 ], [ 12884901888, %161 ], [ 73014444032, %186 ], [ 77309411328, %211 ], [ -4294967296, %236 ]
  %249 = or i64 %248, %247
  ret i64 %249
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer12CanWriteDataEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer9clearDataERKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %7, label %34

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %11, align 8
  br i1 %10, label %13, label %14

13:                                               ; preds = %7
  tail call void @_ZN5blink10DataObject8ClearAllEv(%"class.blink::DataObject"* %12) #12
  br label %34

14:                                               ; preds = %7
  %15 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #12
  %16 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113NormalizeTypeERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %1, i8* null)
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %3) #12
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #12
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #12
  br label %34

34:                                               ; preds = %2, %33, %13
  ret void
}

declare void @_ZN5blink10DataObject8ClearAllEv(%"class.blink::DataObject"*) local_unnamed_addr #2

declare void @_ZN5blink10DataObject9ClearDataERKN3WTF6StringE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113NormalizeTypeERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8), i8*) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %0) #12
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %8) #12
  %14 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #12
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %35, i64* %36, align 8
  br label %44

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  br label %44

44:                                               ; preds = %37, %33
  %45 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #12
  %48 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink13kMimeTypeTextE, i64 0, i64 0)) #13
  %49 = icmp ult i64 %48, 4294967296
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %44
  call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %44
  %52 = trunc i64 %48 to i32
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink13kMimeTypeTextE, i64 0, i64 0), i8** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %52, i32* %56, align 8
  %57 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %58 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  br i1 %57, label %73, label %59

59:                                               ; preds = %51
  %60 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink21kMimeTypeTextPlainEtcE, i64 0, i64 0)) #13
  %61 = icmp ult i64 %60, 4294967296
  br i1 %61, label %63, label %62, !prof !3

62:                                               ; preds = %59
  call void @llvm.trap() #12
  unreachable

63:                                               ; preds = %59
  %64 = trunc i64 %60 to i32
  %65 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %66 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink21kMimeTypeTextPlainEtcE, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %64, i32* %68, align 8
  br i1 %32, label %69, label %71

69:                                               ; preds = %63
  %70 = icmp eq i32 %64, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br i1 %70, label %106, label %74

71:                                               ; preds = %63
  %72 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br i1 %72, label %106, label %78

73:                                               ; preds = %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br label %106

74:                                               ; preds = %69
  %75 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %65, i64* %77, align 8
  br label %86

78:                                               ; preds = %71
  %79 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #12
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  br label %86

86:                                               ; preds = %78, %74
  %87 = phi i8* [ %79, %78 ], [ %75, %74 ]
  %88 = phi i32 [ %82, %78 ], [ 0, %74 ]
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %88, i32* %89, align 8
  %90 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #12
  %91 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink12kMimeTypeURLE, i64 0, i64 0)) #13
  %92 = icmp ult i64 %91, 4294967296
  br i1 %92, label %94, label %93, !prof !3

93:                                               ; preds = %86
  call void @llvm.trap() #12
  unreachable

94:                                               ; preds = %86
  %95 = trunc i64 %91 to i32
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %97 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink12kMimeTypeURLE, i64 0, i64 0), i8** %98, align 8
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %95, i32* %99, align 8
  %100 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #12
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = icmp eq i8* %1, null
  br i1 %102, label %106, label %103

103:                                              ; preds = %101
  store i8 1, i8* %1, align 1
  br label %106

104:                                              ; preds = %94
  %105 = bitcast %"class.WTF::String"* %7 to i64*
  store i64 %14, i64* %105, align 8
  br label %122

106:                                              ; preds = %103, %101, %71, %73, %69
  %107 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), %69 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), %73 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), %71 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), %101 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink20kMimeTypeTextURIListE, i64 0, i64 0), %103 ]
  %108 = call i64 @strlen(i8* nonnull %107) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %107, i64 %108) #12
  br i1 %32, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #12
  br label %122

122:                                              ; preds = %104, %106, %118, %121
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  ret %"class.WTF::StringImpl"* %124
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink12DataTransfer7getDataERKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %58 [
    i32 4, label %8
    i32 2, label %8
  ]

8:                                                ; preds = %2, %2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #12
  store i8 0, i8* %3, align 1
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %11, align 8
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113NormalizeTypeERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %1, i8* nonnull %3)
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = call %"class.WTF::StringImpl"* @_ZNK5blink10DataObject7GetDataERKN3WTF6StringE(%"class.blink::DataObject"* %12, %"class.WTF::String"* nonnull dereferenceable(8) %5) #12
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %10, align 8
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %8, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %33 = load i8, i8* %3, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = bitcast %"class.WTF::String"* %4 to i64*
  %37 = load i64, i64* %36, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  br label %56

38:                                               ; preds = %32
  %39 = call %"class.WTF::StringImpl"* @_ZN5blink19ConvertURIListToURLERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %4) #12
  %40 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #12
  br label %56

56:                                               ; preds = %35, %38, %52, %55
  %57 = phi i64 [ %37, %35 ], [ %40, %38 ], [ %40, %52 ], [ %40, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #12
  br label %58

58:                                               ; preds = %2, %56
  %59 = phi i64 [ %57, %56 ], [ 0, %2 ]
  %60 = inttoptr i64 %59 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %60
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer11CanReadDataEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 4
  %5 = icmp eq i32 %3, 2
  %6 = or i1 %4, %5
  ret i1 %6
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10DataObject7GetDataERKN3WTF6StringE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink19ConvertURIListToURLERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer7setDataERKN3WTF6StringES4_(%"class.blink::DataTransfer"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %30

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %9, align 8
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #12
  %12 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_113NormalizeTypeERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %1, i8* null)
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  call void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %2) #12
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #12
  br label %29

29:                                               ; preds = %8, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #12
  br label %30

30:                                               ; preds = %3, %29
  ret void
}

declare void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer27hasDataStoreItemListChangedEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -2
  %9 = icmp ugt i32 %8, 2
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ true, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer12CanReadTypesEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -2
  %5 = icmp ult i32 %4, 3
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12DataTransfer17OnItemListChangedEv(%"class.blink::DataTransfer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 7
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZThn16_N5blink12DataTransfer17OnItemListChangedEv(%"class.blink::DataTransfer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 -1, i32 9
  %3 = getelementptr inbounds %"class.blink::Member.1922", %"class.blink::Member.1922"* %2, i64 8
  %4 = bitcast %"class.blink::Member.1922"* %3 to i8*
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer5typesEv(%"class.WTF::Vector.630"* noalias sret, %"class.blink::DataTransfer"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, -2
  %6 = icmp ult i32 %5, 3
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::Vector.630"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #12
  br label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %1, i64 0, i32 7
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %1, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %11, align 8
  tail call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.630"* sret %0, %"class.blink::DataObject"* %12) #12
  br label %13

13:                                               ; preds = %9, %7
  ret void
}

declare void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.630"* sret, %"class.blink::DataObject"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FileList"* @_ZNK5blink12DataTransfer5filesEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::File"*, align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #12
  %4 = bitcast i8* %3 to %"class.blink::FileList"*
  tail call void @_ZN5blink8FileListC1Ev(%"class.blink::FileList"* %4) #12
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  %9 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %69 [
    i32 4, label %11
    i32 2, label %11
  ]

11:                                               ; preds = %1, %1
  %12 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  %14 = call i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"* %13) #12
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %69, label %16

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::File"** %2 to i8*
  %18 = getelementptr inbounds i8, i8* %3, i64 16
  %19 = getelementptr inbounds i8, i8* %3, i64 28
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds i8, i8* %3, i64 24
  %22 = bitcast i8* %21 to i32*
  %23 = bitcast i8* %18 to %"class.blink::Member.1882"**
  %24 = bitcast i8* %18 to %"class.WTF::Vector.1952"*
  br label %25

25:                                               ; preds = %16, %64
  %26 = phi i32 [ 0, %16 ], [ %65, %64 ]
  %27 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  %28 = call %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"* %27, i32 %26) #12
  %29 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %64

32:                                               ; preds = %25
  %33 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  %34 = call %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"* %33, i32 %26) #12
  %35 = call %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"* %34) #12
  %36 = icmp eq %"class.blink::File"* %35, null
  br i1 %36, label %64, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %35, i64 0, i32 0
  %39 = bitcast %"class.blink::File"* %35 to i1 (%"class.blink::Blob"*)***
  %40 = load i1 (%"class.blink::Blob"*)**, i1 (%"class.blink::Blob"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %40, i64 11
  %42 = load i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.blink::Blob"* nonnull %38) #12
  br i1 %43, label %44, label %64

44:                                               ; preds = %37
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  store %"class.blink::File"* %35, %"class.blink::File"** %2, align 8
  %45 = load i32, i32* %20, align 4
  %46 = load i32, i32* %22, align 8
  %47 = icmp eq i32 %45, %46
  br i1 %47, label %62, label %48, !prof !2

48:                                               ; preds = %44
  %49 = ptrtoint %"class.blink::File"* %35 to i64
  %50 = load %"class.blink::Member.1882"*, %"class.blink::Member.1882"** %23, align 8
  %51 = zext i32 %45 to i64
  %52 = getelementptr inbounds %"class.blink::Member.1882", %"class.blink::Member.1882"* %50, i64 %51
  %53 = bitcast %"class.blink::Member.1882"* %52 to i64*
  store atomic i64 %49, i64* %53 monotonic, align 8
  %54 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.blink::File"* %35 to i8*
  %58 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %57) #12
  br label %59

59:                                               ; preds = %56, %48
  %60 = load i32, i32* %20, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %20, align 4
  br label %63

62:                                               ; preds = %44
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1952"* %24, %"class.blink::File"** nonnull dereferenceable(8) %2) #12
  br label %63

63:                                               ; preds = %59, %62
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  br label %64

64:                                               ; preds = %37, %32, %63, %25
  %65 = add nuw i32 %26, 1
  %66 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %12, align 8
  %67 = call i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"* %66) #12
  %68 = icmp ult i32 %65, %67
  br i1 %68, label %25, label %69

69:                                               ; preds = %64, %11, %1
  ret %"class.blink::FileList"* %4
}

declare i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"*) local_unnamed_addr #2

declare %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"*, i32) local_unnamed_addr #2

declare %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer12setDragImageEPNS_7ElementEii(%"class.blink::DataTransfer"* nocapture, %"class.blink::Element"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %90

8:                                                ; preds = %4
  %9 = icmp eq %"class.blink::Element"* %1, null
  br i1 %9, label %63, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %63

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %18 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1, i32 2
  %21 = bitcast %"class.blink::Member.318"* %20 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %22 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %22, i64 0, i32 3, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %24, %26
  %28 = and i32 %12, 256
  %29 = icmp eq i32 %28, 0
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %63

31:                                               ; preds = %15
  %32 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 1, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::Member.318"* %32 to %"class.blink::HTMLImageLoader"**
  %34 = load %"class.blink::HTMLImageLoader"*, %"class.blink::HTMLImageLoader"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLImageLoader", %"class.blink::HTMLImageLoader"* %34, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %38, -1
  %40 = icmp ult i32 %39, 2
  br i1 %40, label %41, label %90

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %43 = ptrtoint %"class.blink::ImageResourceContent"* %36 to i64
  %44 = bitcast %"class.blink::Member.1922"* %42 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::ImageResourceContent"* %36 to i8*
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %41
  %51 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %52 = bitcast %"class.blink::IntPoint"* %51 to i64*
  %53 = zext i32 %3 to i64
  %54 = shl nuw i64 %53, 32
  %55 = zext i32 %2 to i64
  %56 = or i64 %54, %55
  store i64 %56, i64* %52, align 4
  %57 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %58 = bitcast %"class.blink::Member.318"* %57 to i64*
  store atomic i64 0, i64* %58 monotonic, align 8
  %59 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %90, label %61

61:                                               ; preds = %50
  %62 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %90

63:                                               ; preds = %15, %8, %10
  %64 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = add i32 %65, -1
  %67 = icmp ult i32 %66, 2
  br i1 %67, label %68, label %90

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %70 = bitcast %"class.blink::Member.1922"* %69 to i64*
  store atomic i64 0, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %68
  %74 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %75

75:                                               ; preds = %73, %68
  %76 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %77 = bitcast %"class.blink::IntPoint"* %76 to i64*
  %78 = zext i32 %3 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %2 to i64
  %81 = or i64 %79, %80
  store i64 %81, i64* %77, align 4
  %82 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %83 = ptrtoint %"class.blink::Element"* %1 to i64
  %84 = bitcast %"class.blink::Member.318"* %82 to i64*
  store atomic i64 %83, i64* %84 monotonic, align 8
  %85 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %75
  %88 = bitcast %"class.blink::Element"* %1 to i8*
  %89 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %88) #12
  br label %90

90:                                               ; preds = %31, %50, %61, %63, %75, %87, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer20SetDragImageResourceEPNS_20ImageResourceContentERKNS_8IntPointE(%"class.blink::DataTransfer"* nocapture, %"class.blink::ImageResourceContent"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %10 = ptrtoint %"class.blink::ImageResourceContent"* %1 to i64
  %11 = bitcast %"class.blink::Member.1922"* %9 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::ImageResourceContent"* %1 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #12
  br label %17

17:                                               ; preds = %14, %8
  %18 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %19 = bitcast %"class.blink::IntPoint"* %2 to i64*
  %20 = bitcast %"class.blink::IntPoint"* %18 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  %22 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %23 = bitcast %"class.blink::Member.318"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %17
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %28

28:                                               ; preds = %3, %17, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer19SetDragImageElementEPNS_4NodeERKNS_8IntPointE(%"class.blink::DataTransfer"* nocapture, %"class.blink::Node"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %10 = bitcast %"class.blink::Member.1922"* %9 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %15

15:                                               ; preds = %13, %8
  %16 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %17 = bitcast %"class.blink::IntPoint"* %2 to i64*
  %18 = bitcast %"class.blink::IntPoint"* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %21 = ptrtoint %"class.blink::Node"* %1 to i64
  %22 = bitcast %"class.blink::Member.318"* %20 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::Node"* %1 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %3, %15, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer14ClearDragImageEv(%"class.blink::DataTransfer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %22

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %8 = bitcast %"class.blink::Member.1922"* %7 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %13

13:                                               ; preds = %11, %6
  %14 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %15 = bitcast %"class.blink::IntPoint"* %14 to i64*
  store i64 0, i64* %15, align 4
  %16 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %17 = bitcast %"class.blink::Member.318"* %16 to i64*
  store atomic i64 0, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %13
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %22

22:                                               ; preds = %1, %13, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer12setDragImageEPNS_20ImageResourceContentEPNS_4NodeERKNS_8IntPointE(%"class.blink::DataTransfer"* nocapture, %"class.blink::ImageResourceContent"*, %"class.blink::Node"*, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %31

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %11 = ptrtoint %"class.blink::ImageResourceContent"* %1 to i64
  %12 = bitcast %"class.blink::Member.1922"* %10 to i64*
  store atomic i64 %11, i64* %12 monotonic, align 8
  %13 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::ImageResourceContent"* %1 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #12
  br label %18

18:                                               ; preds = %9, %15
  %19 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %20 = bitcast %"class.blink::IntPoint"* %3 to i64*
  %21 = bitcast %"class.blink::IntPoint"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 4
  %23 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %24 = ptrtoint %"class.blink::Node"* %2 to i64
  %25 = bitcast %"class.blink::Member.318"* %23 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.blink::Node"* %2 to i8*
  %30 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %29) #12
  br label %31

31:                                               ; preds = %28, %18, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN5blink12DataTransfer20ClipByVisualViewportERKNS_9FloatRectERKNS_10LocalFrameE(%"class.blink::FloatRect"* dereferenceable(16), %"class.blink::LocalFrame"* dereferenceable(1176)) local_unnamed_addr #5 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %9 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %8) #12
  %11 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %10) #12
  %12 = tail call { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"* %11, i32 0) #12
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %15 = extractelement <2 x float> %13, i32 0
  %16 = tail call float @llvm.floor.f32(float %15) #12
  %17 = fpext float %16 to double
  %18 = fcmp ult double %17, 0x41DFFFFFFFC00000
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = fcmp ugt float %16, 0xC1E0000000000000
  br i1 %20, label %21, label %24

21:                                               ; preds = %19
  %22 = fptosi float %16 to i32
  %23 = zext i32 %22 to i64
  br label %24

24:                                               ; preds = %21, %19, %2
  %25 = phi i64 [ %23, %21 ], [ 2147483647, %2 ], [ 2147483648, %19 ]
  %26 = extractelement <2 x float> %13, i32 1
  %27 = tail call float @llvm.floor.f32(float %26) #12
  %28 = fpext float %27 to double
  %29 = fcmp ult double %28, 0x41DFFFFFFFC00000
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = fcmp ugt float %27, 0xC1E0000000000000
  br i1 %31, label %32, label %36

32:                                               ; preds = %30
  %33 = fptosi float %27 to i32
  %34 = zext i32 %33 to i64
  %35 = shl nuw i64 %34, 32
  br label %36

36:                                               ; preds = %32, %30, %24
  %37 = phi i64 [ %35, %32 ], [ 9223372032559808512, %24 ], [ -9223372036854775808, %30 ]
  %38 = trunc i64 %25 to i32
  %39 = lshr exact i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = extractelement <2 x float> %14, i32 0
  %42 = fadd float %15, %41
  %43 = extractelement <2 x float> %14, i32 1
  %44 = fadd float %26, %43
  %45 = tail call float @llvm.ceil.f32(float %42) #12
  %46 = fpext float %45 to double
  %47 = fcmp ult double %46, 0x41DFFFFFFFC00000
  br i1 %47, label %48, label %52

48:                                               ; preds = %36
  %49 = fcmp ugt float %45, 0xC1E0000000000000
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = fptosi float %45 to i32
  br label %52

52:                                               ; preds = %50, %48, %36
  %53 = phi i32 [ %51, %50 ], [ 2147483647, %36 ], [ -2147483648, %48 ]
  %54 = tail call float @llvm.ceil.f32(float %44) #12
  %55 = fpext float %54 to double
  %56 = fcmp ult double %55, 0x41DFFFFFFFC00000
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  %58 = fcmp ugt float %54, 0xC1E0000000000000
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = fptosi float %54 to i32
  br label %61

61:                                               ; preds = %52, %57, %59
  %62 = phi i32 [ %60, %59 ], [ 2147483647, %52 ], [ -2147483648, %57 ]
  %63 = icmp sgt i32 %38, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %53, i32 %38) #12
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = icmp sgt i32 %40, -1
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %62, i32 %40) #12
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  %75 = or i64 %37, %25
  %76 = zext i32 %74 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %68 to i64
  %79 = or i64 %77, %78
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %75, i64* %80, align 8
  store i64 %79, i64* %7, align 8
  %81 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 11, i32 0, i32 0
  %82 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %81, align 8
  %83 = call { i64, i64 } @_ZNK5blink14LocalFrameView20ConvertFromRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"* %82, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #12
  %84 = extractvalue { i64, i64 } %83, 0
  %85 = trunc i64 %84 to i32
  %86 = lshr i64 %84, 32
  %87 = trunc i64 %86 to i32
  %88 = extractvalue { i64, i64 } %83, 1
  %89 = sitofp i32 %85 to float
  %90 = sitofp i32 %87 to float
  %91 = trunc i64 %88 to i32
  %92 = sitofp i32 %91 to float
  %93 = lshr i64 %88, 32
  %94 = trunc i64 %93 to i32
  %95 = sitofp i32 %94 to float
  %96 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96)
  %97 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %98 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0, i64 0
  store float %89, float* %98, align 8
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0, i64 1
  store float %90, float* %99, align 4
  %100 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1, i64 0
  store float %92, float* %100, align 8
  %101 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1, i64 1
  store float %95, float* %101, align 4
  call void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"* nonnull %97, %"class.blink::FloatRect"* dereferenceable(16) %0) #12
  %102 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %103 = load <2 x float>, <2 x float>* %102, align 8
  %104 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %103, 0
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %106 = load <2 x float>, <2 x float>* %105, align 8
  %107 = insertvalue { <2 x float>, <2 x float> } %104, <2 x float> %106, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret { <2 x float>, <2 x float> } %107
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink14VisualViewport11VisibleRectENS_23IncludeScrollbarsInRectE(%"class.blink::VisualViewport"*, i32) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink14LocalFrameView20ConvertFromRootFrameERKNS_7IntRectE(%"class.blink::LocalFrameView"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN5blink12DataTransfer15DeviceSpaceSizeERKNS_9FloatSizeERKNS_10LocalFrameE(%"class.blink::FloatSize"* nocapture readonly dereferenceable(8), %"class.blink::LocalFrame"* dereferenceable(1176)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1, i64 0, i32 0
  %4 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %3) #12
  %5 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %4, i64 0, i32 31
  %6 = load float, float* %5, align 4
  %7 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %3) #12
  %8 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %7) #12
  %9 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %8, i64 0, i32 14
  %10 = load float, float* %9, align 8
  %11 = bitcast %"class.blink::FloatSize"* %0 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = fmul float %6, %10
  %14 = insertelement <2 x float> undef, float %13, i32 0
  %15 = shufflevector <2 x float> %14, <2 x float> undef, <2 x i32> zeroinitializer
  %16 = fmul <2 x float> %15, %12
  ret <2 x float> %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DragImage"* @_ZN5blink12DataTransfer23CreateDragImageForFrameERNS_10LocalFrameEfRKNS_9FloatSizeERKNS_10FloatPointERNS_18PaintRecordBuilderERKNS_17PropertyTreeStateE(%"class.blink::LocalFrame"* dereferenceable(1176), float, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8), %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::PaintRecordBuilder"* dereferenceable(728), %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #5 align 2 {
  %7 = alloca %"class.blink::AffineTransform", align 8
  %8 = alloca %class.SkSurfaceProps, align 4
  %9 = alloca %class.sk_sp.3050, align 8
  %10 = alloca %"class.cc::SkiaPaintCanvas", align 8
  %11 = alloca i64, align 8
  %12 = alloca %class.SkMatrix, align 4
  %13 = alloca %class.sk_sp.2950, align 8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 0
  %15 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %16 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %15, i64 0, i32 31
  %17 = load float, float* %16, align 4
  %18 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %19 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %18) #12
  %20 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %19, i64 0, i32 14
  %21 = load float, float* %20, align 8
  %22 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %23 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %22, i64 0, i32 31
  %24 = load float, float* %23, align 4
  %25 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %26 = tail call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %25) #12
  %27 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %26, i64 0, i32 14
  %28 = load float, float* %27, align 8
  %29 = bitcast %"class.blink::FloatSize"* %2 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = fmul float %24, %28
  %32 = extractelement <2 x float> %30, i32 0
  %33 = fmul float %31, %32
  %34 = extractelement <2 x float> %30, i32 1
  %35 = fmul float %31, %34
  %36 = bitcast %"class.blink::AffineTransform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #12
  %37 = bitcast %"class.blink::AffineTransform"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %7) #12
  %38 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %3, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %43 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %42, i64 0, i32 31
  %44 = load float, float* %43, align 4
  %45 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %46 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %45) #12
  %47 = getelementptr inbounds %"class.blink::VisualViewport", %"class.blink::VisualViewport"* %46, i64 0, i32 14
  %48 = load float, float* %47, align 8
  %49 = fmul float %44, %48
  %50 = fmul float %39, %49
  %51 = fmul float %41, %49
  %52 = fsub float -0.000000e+00, %50
  %53 = fpext float %52 to double
  %54 = fsub float -0.000000e+00, %51
  %55 = fpext float %54 to double
  %56 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %7, double %53, double %55) #12
  %57 = fmul float %17, %21
  %58 = fpext float %57 to double
  %59 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"* nonnull %7, double %58) #12
  %60 = bitcast %class.SkSurfaceProps* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  %61 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %8, i64 0, i32 0
  store i32 -1431655766, i32* %61, align 4
  %62 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %8, i64 0, i32 1
  store i32 -1431655766, i32* %62, align 4
  call void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps* nonnull %8, i32 0, i32 0) #12
  %63 = bitcast %class.sk_sp.3050* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #12
  %64 = getelementptr inbounds %class.sk_sp.3050, %class.sk_sp.3050* %9, i64 0, i32 0
  store %class.SkSurface* inttoptr (i64 -6148914691236517206 to %class.SkSurface*), %class.SkSurface** %64, align 8
  %65 = fptosi float %33 to i32
  %66 = fptosi float %35 to i32
  call void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp.3050* nonnull sret %9, i32 %65, i32 %66, %class.SkSurfaceProps* nonnull %8) #12
  %67 = load %class.SkSurface*, %class.SkSurface** %64, align 8
  %68 = icmp eq %class.SkSurface* %67, null
  br i1 %68, label %131, label %69

69:                                               ; preds = %6
  %70 = bitcast i64* %11 to %"struct.cc::SkiaPaintCanvas::ContextFlushes"*
  %71 = bitcast %"class.cc::SkiaPaintCanvas"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %71) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 120, i1 false)
  %72 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %67) #12
  call void @_ZN2cc15SkiaPaintCanvas14ContextFlushesC1Ev(%"struct.cc::SkiaPaintCanvas::ContextFlushes"* nonnull %70) #12
  %73 = load i64, i64* %11, align 8
  call void @_ZN2cc15SkiaPaintCanvasC1EP8SkCanvasPNS_13ImageProviderENS0_14ContextFlushesE(%"class.cc::SkiaPaintCanvas"* nonnull %10, %class.SkCanvas* %72, %"class.cc::ImageProvider"* null, i64 %73) #12
  %74 = bitcast %class.SkMatrix* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #12
  call void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* nonnull sret %12, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %7) #12
  call void @_ZN2cc15SkiaPaintCanvas6concatERK8SkMatrix(%"class.cc::SkiaPaintCanvas"* nonnull %10, %class.SkMatrix* nonnull dereferenceable(40) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"class.cc::SkiaPaintCanvas", %"class.cc::SkiaPaintCanvas"* %10, i64 0, i32 0
  call void @_ZN5blink18PaintRecordBuilder12EndRecordingERN2cc11PaintCanvasERKNS_17PropertyTreeStateE(%"class.blink::PaintRecordBuilder"* %4, %"class.cc::PaintCanvas"* nonnull dereferenceable(24) %75, %"class.blink::PropertyTreeState"* dereferenceable(24) %5) #12
  %76 = load %class.SkSurface*, %class.SkSurface** %64, align 8
  call void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.2950* nonnull sret %13, %class.SkSurface* %76) #12
  %77 = call %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.2950* nonnull %13, i8 1) #12
  %78 = getelementptr inbounds %class.sk_sp.2950, %class.sk_sp.2950* %13, i64 0, i32 0
  %79 = load %class.SkImage*, %class.SkImage** %78, align 8
  %80 = icmp eq %class.SkImage* %79, null
  br i1 %80, label %91, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %class.SkImage, %class.SkImage* %79, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw add i32* %82, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = bitcast %class.SkImage* %79 to %class.SkRefCntBase*
  %87 = bitcast %class.SkImage* %79 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #12
  br label %91

91:                                               ; preds = %69, %81, %85
  %92 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %14) #12
  %93 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %92, i64 0, i32 7, i32 0, i32 0
  %94 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %93, align 8
  %95 = bitcast %"class.blink::ChromeClient"* %94 to %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)***
  %96 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)**, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*** %95, align 8
  %97 = getelementptr inbounds %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %96, i64 29
  %98 = load %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)*, %"struct.blink::ScreenInfo"* (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*)** %97, align 8
  %99 = call dereferenceable(552) %"struct.blink::ScreenInfo"* %98(%"class.blink::ChromeClient"* %94, %"class.blink::LocalFrame"* dereferenceable(1176) %0) #12
  %100 = getelementptr inbounds %"struct.blink::ScreenInfo", %"struct.blink::ScreenInfo"* %99, i64 0, i32 0
  %101 = load float, float* %100, align 8
  %102 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %77, i64 0, i32 0, i32 0
  %103 = call %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateEPNS_5ImageENS_27RespectImageOrientationEnumEfNS_20InterpolationQualityEfNS_9FloatSizeE(%"class.blink::Image"* %102, i32 0, float %101, i32 2, float %1, <2 x float> <float 1.000000e+00, float 1.000000e+00>) #12
  %104 = ptrtoint %"class.blink::DragImage"* %103 to i64
  %105 = icmp eq %"class.blink::UnacceleratedStaticBitmapImage"* %77, null
  br i1 %105, label %118, label %106

106:                                              ; preds = %91
  %107 = getelementptr inbounds %"class.blink::UnacceleratedStaticBitmapImage", %"class.blink::UnacceleratedStaticBitmapImage"* %77, i64 0, i32 0, i32 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1930", %"class.base::RefCountedThreadSafe.1930"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw sub i32* %108, i32 1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %118

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1930", %"class.base::RefCountedThreadSafe.1930"* %107, i64 -2
  %113 = bitcast %"class.base::RefCountedThreadSafe.1930"* %112 to %"class.blink::Image"*
  %114 = bitcast %"class.base::RefCountedThreadSafe.1930"* %112 to void (%"class.blink::Image"*)***
  %115 = load void (%"class.blink::Image"*)**, void (%"class.blink::Image"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %115, i64 1
  %117 = load void (%"class.blink::Image"*)*, void (%"class.blink::Image"*)** %116, align 8
  call void %117(%"class.blink::Image"* nonnull %113) #12
  br label %118

118:                                              ; preds = %111, %106, %91
  call void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %71) #12
  %119 = load %class.SkSurface*, %class.SkSurface** %64, align 8
  %120 = icmp eq %class.SkSurface* %119, null
  br i1 %120, label %131, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %119, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw add i32* %122, i32 -1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = bitcast %class.SkSurface* %119 to %class.SkRefCntBase*
  %127 = bitcast %class.SkSurface* %119 to void (%class.SkRefCntBase*)***
  %128 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %127, align 8
  %129 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, i64 2
  %130 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, align 8
  call void %130(%class.SkRefCntBase* nonnull %126) #12
  br label %131

131:                                              ; preds = %6, %118, %121, %125
  %132 = phi i64 [ %104, %118 ], [ %104, %121 ], [ %104, %125 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #12
  %133 = inttoptr i64 %132 to %"class.blink::DragImage"*
  ret %"class.blink::DragImage"* %133
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #2

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform5ScaleEd(%"class.blink::AffineTransform"*, double) local_unnamed_addr #2

declare void @_ZN14SkSurfacePropsC1Ej15SkPixelGeometry(%class.SkSurfaceProps*, i32, i32) unnamed_addr #2

declare void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp.3050* sret, i32, i32, %class.SkSurfaceProps*) local_unnamed_addr #2

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvas14ContextFlushesC1Ev(%"struct.cc::SkiaPaintCanvas::ContextFlushes"*) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvasC1EP8SkCanvasPNS_13ImageProviderENS0_14ContextFlushesE(%"class.cc::SkiaPaintCanvas"*, %class.SkCanvas*, %"class.cc::ImageProvider"*, i64) unnamed_addr #2

declare void @_ZN2cc15SkiaPaintCanvas6concatERK8SkMatrix(%"class.cc::SkiaPaintCanvas"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #2

declare void @_ZN5blink25AffineTransformToSkMatrixERKNS_15AffineTransformE(%class.SkMatrix* sret, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink18PaintRecordBuilder12EndRecordingERN2cc11PaintCanvasERKNS_17PropertyTreeStateE(%"class.blink::PaintRecordBuilder"*, %"class.cc::PaintCanvas"* dereferenceable(24), %"class.blink::PropertyTreeState"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.blink::UnacceleratedStaticBitmapImage"* @_ZN5blink30UnacceleratedStaticBitmapImage6CreateE5sk_spI7SkImageENS_16ImageOrientationE(%class.sk_sp.2950*, i8) local_unnamed_addr #2

declare void @_ZN9SkSurface17makeImageSnapshotEv(%class.sk_sp.2950* sret, %class.SkSurface*) local_unnamed_addr #2

declare %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateEPNS_5ImageENS_27RespectImageOrientationEnumEfNS_20InterpolationQualityEfNS_9FloatSizeE(%"class.blink::Image"*, i32, float, i32, float, <2 x float>) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc15SkiaPaintCanvasD1Ev(%"class.cc::SkiaPaintCanvas"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DragImage"* @_ZN5blink12DataTransfer9NodeImageERNS_10LocalFrameERNS_4NodeE(%"class.blink::LocalFrame"* dereferenceable(1176), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca %"class.blink::IntRect", align 8
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = alloca %"class.blink::FloatQuad", align 4
  %7 = alloca %"struct.blink::PaintLayerPaintingInfo", align 8
  %8 = alloca %"class.blink::PaintRecordBuilder", align 8
  %9 = alloca %"class.blink::PaintLayerPainter", align 8
  %10 = alloca <2 x float>, align 8
  %11 = alloca %"class.blink::PropertyTreeState", align 8
  %12 = alloca %"class.blink::PropertyTreeStateOrAlias", align 16
  %13 = alloca <2 x float>, align 8
  %14 = icmp eq %"class.blink::Node"* %1, null
  br i1 %14, label %41, label %15

15:                                               ; preds = %2, %38
  %16 = phi %"class.blink::Node"* [ %39, %38 ], [ %1, %2 ]
  %17 = bitcast %"class.blink::Node"* %16 to void (%"class.blink::Node"*, i1)***
  %18 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %18, i64 50
  %20 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %19, align 8
  tail call void %20(%"class.blink::Node"* nonnull %16, i1 zeroext true) #12
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 1
  %27 = bitcast %"class.blink::Node"* %26 to %"class.blink::Node"**
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %30, label %38

30:                                               ; preds = %25, %15
  %31 = icmp eq %"class.blink::Node"* %16, %1
  br i1 %31, label %41, label %32

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 5, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %32
  %37 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %16, %"class.blink::Node"* nonnull %1) #12
  br label %38

38:                                               ; preds = %36, %32, %25
  %39 = phi %"class.blink::Node"* [ %37, %36 ], [ %34, %32 ], [ %28, %25 ]
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %41, label %15

41:                                               ; preds = %30, %38, %2
  %42 = bitcast { i64, i64 }* %3 to %"class.blink::IntRect"*
  %43 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %44 = bitcast <2 x float>* %13 to %"class.blink::FloatSize"*
  %45 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %0, i64 0, i32 11, i32 0, i32 0
  %46 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %45, align 8
  %47 = tail call zeroext i1 @_ZN5blink14LocalFrameView35UpdateAllLifecyclePhasesExceptPaintENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"* %46, i32 6) #12
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 1
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 6, i32 0, i32 0
  %53 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRareData"**
  %54 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %54, i64 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.blink::NodeData"** %52 to %"class.blink::NodeRenderingData"**
  %57 = select i1 %51, %"class.blink::NodeRenderingData"** %56, %"class.blink::NodeRenderingData"** %55
  %58 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %58, i64 0, i32 1
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %373, label %62

62:                                               ; preds = %41
  %63 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"* nonnull %60) #12
  %64 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %63, i64 0, i32 2
  %65 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %65, i64 0, i32 0, i32 5, i32 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %70, i64 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %72, i64 0, i32 39
  %74 = load i32, i32* %73, align 4
  %75 = and i32 %74, 67108864
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %131

77:                                               ; preds = %62
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %70, i64 0, i32 2, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %81, i64 0, i32 45
  %83 = load i32, i32* %82, align 4
  %84 = and i32 %83, 5
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %129, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %65, i64 0, i32 0, i32 4
  %88 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %87 to i96*
  %89 = load i96, i96* %88, align 4
  %90 = and i96 %89, 1207959552
  %91 = icmp eq i96 %90, 134217728
  br i1 %91, label %129, label %92

92:                                               ; preds = %86
  %93 = bitcast %"class.blink::LayoutBoxModelObject"* %65 to i1 (%"class.blink::LayoutObject"*, i32)***
  %94 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, i64 92
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.blink::LayoutObject"* %66, i32 43) #12
  br i1 %97, label %129, label %98

98:                                               ; preds = %92
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %66, i32 46) #12
  br i1 %102, label %123, label %103

103:                                              ; preds = %98
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %105 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, i64 92
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.blink::LayoutObject"* %66, i32 48) #12
  br i1 %107, label %123, label %108

108:                                              ; preds = %103
  %109 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %110 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, i64 92
  %111 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.blink::LayoutObject"* %66, i32 45) #12
  br i1 %112, label %123, label %113

113:                                              ; preds = %108
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %115 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, i64 92
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, align 8
  %117 = tail call zeroext i1 %116(%"class.blink::LayoutObject"* %66, i32 49) #12
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %93, align 8
  %120 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %119, i64 92
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, align 8
  %122 = tail call zeroext i1 %121(%"class.blink::LayoutObject"* %66, i32 50) #12
  br i1 %122, label %123, label %131

123:                                              ; preds = %118, %113, %108, %103, %98
  %124 = bitcast %"class.blink::LayoutBoxModelObject"* %65 to i1 (%"class.blink::LayoutObject"*)***
  %125 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %125, i64 24
  %127 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %66) #12
  br i1 %128, label %131, label %129

129:                                              ; preds = %123, %92, %86, %77
  %130 = tail call %"class.blink::PaintLayer"* @_ZNK5blink10PaintLayer23AncestorStackingContextEv(%"class.blink::PaintLayer"* %63) #12
  br label %131

131:                                              ; preds = %129, %123, %118, %62
  %132 = phi %"class.blink::PaintLayer"* [ %63, %123 ], [ %130, %129 ], [ %63, %62 ], [ %63, %118 ]
  %133 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %133) #12
  %134 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %42, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %136 = bitcast i64* %135 to i32*
  %137 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %42, i64 0, i32 1, i32 1
  %138 = tail call { i64, i64 } @_ZNK5blink12LayoutObject43AbsoluteBoundingBoxRectIncludingDescendantsEv(%"class.blink::LayoutObject"* nonnull %60) #12
  %139 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %140 = extractvalue { i64, i64 } %138, 0
  store i64 %140, i64* %139, align 8
  %141 = extractvalue { i64, i64 } %138, 1
  store i64 %141, i64* %135, align 8
  %142 = bitcast %"class.blink::IntRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #12
  %143 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %132, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 16, i1 false) #12
  %144 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %144, i64 0, i32 0, i32 6, i32 0, i32 0
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %147 = icmp eq %"class.blink::Node"* %146, null
  %148 = trunc i64 %141 to i32
  %149 = lshr i64 %140, 32
  %150 = trunc i64 %149 to i32
  %151 = lshr i64 %141, 32
  %152 = trunc i64 %151 to i32
  br i1 %147, label %153, label %162

153:                                              ; preds = %131
  %154 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %144, i64 0, i32 0
  br label %155

155:                                              ; preds = %155, %153
  %156 = phi %"class.blink::LayoutObject"* [ %158, %155 ], [ %154, %153 ]
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 7
  %158 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 6, i32 0, i32 0
  %160 = load %"class.blink::Node"*, %"class.blink::Node"** %159, align 8
  %161 = icmp eq %"class.blink::Node"* %160, null
  br i1 %161, label %155, label %162

162:                                              ; preds = %155, %131
  %163 = phi %"class.blink::Node"* [ %146, %131 ], [ %160, %155 ]
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %163, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %167) #12
  %169 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %168, i64 0, i32 0, i32 0, i32 1, i32 1
  %170 = bitcast %"class.blink::IntSize"* %169 to i64*
  %171 = load i64, i64* %170, align 4
  %172 = bitcast %"class.blink::IntRect"* %4 to i64*
  store i64 0, i64* %172, align 8
  %173 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %4, i64 0, i32 1
  %174 = bitcast %"class.blink::IntSize"* %173 to i64*
  store i64 %171, i64* %174, align 8
  %175 = shl i64 %141, 32
  %176 = ashr exact i64 %175, 32
  %177 = ashr i64 %141, 32
  %178 = mul nsw i64 %176, %177
  %179 = shl i64 %171, 32
  %180 = ashr exact i64 %179, 32
  %181 = ashr i64 %171, 32
  %182 = mul nsw i64 %180, %181
  %183 = icmp ugt i64 %178, %182
  br i1 %183, label %184, label %191

184:                                              ; preds = %162
  call void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"* nonnull %42, %"class.blink::IntRect"* nonnull dereferenceable(16) %4) #12
  %185 = load i64, i64* %139, align 8
  %186 = load i32, i32* %136, align 8
  %187 = load i32, i32* %134, align 4
  %188 = load i32, i32* %137, align 4
  %189 = lshr i64 %185, 32
  %190 = trunc i64 %189 to i32
  br label %191

191:                                              ; preds = %184, %162
  %192 = phi i32 [ %190, %184 ], [ %150, %162 ]
  %193 = phi i64 [ %185, %184 ], [ %140, %162 ]
  %194 = phi i32 [ %188, %184 ], [ %152, %162 ]
  %195 = phi i32 [ %187, %184 ], [ %150, %162 ]
  %196 = phi i32 [ %186, %184 ], [ %148, %162 ]
  %197 = trunc i64 %193 to i32
  %198 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %198) #12
  %199 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %143, align 8
  %200 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %199, i64 0, i32 0
  %201 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #12
  %202 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 0, i32 0
  %203 = sitofp i32 %197 to float
  store float %203, float* %202, align 4
  %204 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 0, i32 1
  %205 = sitofp i32 %192 to float
  store float %205, float* %204, align 4
  %206 = add nsw i32 %196, %197
  %207 = sitofp i32 %206 to float
  %208 = sitofp i32 %195 to float
  %209 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 0
  store float %207, float* %209, align 4
  %210 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 1, i32 1
  store float %208, float* %210, align 4
  %211 = add nsw i32 %195, %194
  %212 = sitofp i32 %211 to float
  %213 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 0
  store float %207, float* %213, align 4
  %214 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 2, i32 1
  store float %212, float* %214, align 4
  %215 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 0
  store float %203, float* %215, align 4
  %216 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %6, i64 0, i32 3, i32 1
  store float %212, float* %216, align 4
  call void @_ZNK5blink12LayoutObject19AncestorToLocalQuadEPKNS_20LayoutBoxModelObjectERKNS_9FloatQuadEj(%"class.blink::FloatQuad"* nonnull sret %5, %"class.blink::LayoutObject"* %200, %"class.blink::LayoutBoxModelObject"* null, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %6, i32 0) #12
  %217 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %5) #12
  %218 = extractvalue { <2 x float>, <2 x float> } %217, 0
  %219 = extractvalue { <2 x float>, <2 x float> } %217, 1
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %198) #12
  %220 = bitcast %"struct.blink::PaintLayerPaintingInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %220) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %220, i8 -86, i64 40, i1 false) #12
  %221 = extractelement <2 x float> %218, i32 0
  %222 = call float @llvm.floor.f32(float %221) #12
  %223 = fpext float %222 to double
  %224 = fcmp ult double %223, 0x41DFFFFFFFC00000
  br i1 %224, label %225, label %230

225:                                              ; preds = %191
  %226 = fcmp ugt float %222, 0xC1E0000000000000
  br i1 %226, label %227, label %230

227:                                              ; preds = %225
  %228 = fptosi float %222 to i32
  %229 = zext i32 %228 to i64
  br label %230

230:                                              ; preds = %227, %225, %191
  %231 = phi i64 [ %229, %227 ], [ 2147483647, %191 ], [ 2147483648, %225 ]
  %232 = extractelement <2 x float> %218, i32 1
  %233 = call float @llvm.floor.f32(float %232) #12
  %234 = fpext float %233 to double
  %235 = fcmp ult double %234, 0x41DFFFFFFFC00000
  br i1 %235, label %236, label %242

236:                                              ; preds = %230
  %237 = fcmp ugt float %233, 0xC1E0000000000000
  br i1 %237, label %238, label %242

238:                                              ; preds = %236
  %239 = fptosi float %233 to i32
  %240 = zext i32 %239 to i64
  %241 = shl nuw i64 %240, 32
  br label %242

242:                                              ; preds = %238, %236, %230
  %243 = phi i64 [ %241, %238 ], [ 9223372032559808512, %230 ], [ -9223372036854775808, %236 ]
  %244 = trunc i64 %231 to i32
  %245 = lshr exact i64 %243, 32
  %246 = trunc i64 %245 to i32
  %247 = extractelement <2 x float> %219, i32 0
  %248 = fadd float %221, %247
  %249 = extractelement <2 x float> %219, i32 1
  %250 = fadd float %232, %249
  %251 = call float @llvm.ceil.f32(float %248) #12
  %252 = fpext float %251 to double
  %253 = fcmp ult double %252, 0x41DFFFFFFFC00000
  br i1 %253, label %254, label %258

254:                                              ; preds = %242
  %255 = fcmp ugt float %251, 0xC1E0000000000000
  br i1 %255, label %256, label %258

256:                                              ; preds = %254
  %257 = fptosi float %251 to i32
  br label %258

258:                                              ; preds = %256, %254, %242
  %259 = phi i32 [ %257, %256 ], [ 2147483647, %242 ], [ -2147483648, %254 ]
  %260 = call float @llvm.ceil.f32(float %250) #12
  %261 = fpext float %260 to double
  %262 = fcmp ult double %261, 0x41DFFFFFFFC00000
  br i1 %262, label %263, label %267

263:                                              ; preds = %258
  %264 = fcmp ugt float %260, 0xC1E0000000000000
  br i1 %264, label %265, label %267

265:                                              ; preds = %263
  %266 = fptosi float %260 to i32
  br label %267

267:                                              ; preds = %265, %263, %258
  %268 = phi i32 [ %266, %265 ], [ 2147483647, %258 ], [ -2147483648, %263 ]
  %269 = icmp sgt i32 %244, -1
  %270 = select i1 %269, i32 -2147483648, i32 2147483647
  %271 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %259, i32 %244) #12
  %272 = extractvalue { i32, i1 } %271, 1
  %273 = extractvalue { i32, i1 } %271, 0
  %274 = select i1 %272, i32 %270, i32 %273, !prof !2
  %275 = icmp sgt i32 %246, -1
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %268, i32 %246) #12
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  %281 = or i64 %243, %231
  %282 = zext i32 %280 to i64
  %283 = shl nuw i64 %282, 32
  %284 = zext i32 %274 to i64
  %285 = or i64 %283, %284
  %286 = getelementptr inbounds %"struct.blink::PaintLayerPaintingInfo", %"struct.blink::PaintLayerPaintingInfo"* %7, i64 0, i32 0
  store %"class.blink::PaintLayer"* %132, %"class.blink::PaintLayer"** %286, align 8
  %287 = getelementptr inbounds %"struct.blink::PaintLayerPaintingInfo", %"struct.blink::PaintLayerPaintingInfo"* %7, i64 0, i32 1
  %288 = bitcast %"class.blink::CullRect"* %287 to i64*
  store i64 %281, i64* %288, align 8
  %289 = getelementptr inbounds %"struct.blink::PaintLayerPaintingInfo", %"struct.blink::PaintLayerPaintingInfo"* %7, i64 0, i32 1, i32 0, i32 1
  %290 = bitcast %"class.blink::IntSize"* %289 to i64*
  store i64 %285, i64* %290, align 8
  %291 = getelementptr inbounds %"struct.blink::PaintLayerPaintingInfo", %"struct.blink::PaintLayerPaintingInfo"* %7, i64 0, i32 2
  %292 = bitcast %"struct.blink::PhysicalOffset"* %291 to i64*
  store i64 0, i64* %292, align 8
  %293 = getelementptr inbounds %"struct.blink::PaintLayerPaintingInfo", %"struct.blink::PaintLayerPaintingInfo"* %7, i64 0, i32 3
  store i32 2, i32* %293, align 8
  %294 = bitcast %"class.blink::PaintRecordBuilder"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 728, i8* nonnull %294) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %294, i8* align 8 bitcast ({ %"class.blink::DisplayItemClient.base", [7 x i8], { { { { i8, [7 x i8], { { i32, [4 x i8], %class.scoped_refptr.2685, %class.scoped_refptr.2685, <{ %"class.WTF::Vector.2693"*, { { { { i8, [7 x i8], %union.anon.2724 } } } }, %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>, i8, i8, [6 x i8], %"class.WTF::Vector.2735", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2740", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 } } } } } }, %"class.blink::PaintController"*, { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.2937", i32, [4 x i8], %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, [4 x i8], %"class.std::__1::unique_ptr.3015", i8, i8, i8, [1 x i8], i32 } }* @__const._ZN5blink12_GLOBAL__N_123DraggedNodeImageBuilder11CreateImageEv.builder to i8*), i64 728, i1 false) #12
  call void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"* nonnull %8) #12
  %295 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 6, i32 0, i32 0
  %296 = load %"class.blink::Node"*, %"class.blink::Node"** %295, align 8
  %297 = icmp eq %"class.blink::Node"* %296, null
  br i1 %297, label %298, label %305

298:                                              ; preds = %267, %298
  %299 = phi %"class.blink::LayoutObject"* [ %301, %298 ], [ %60, %267 ]
  %300 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %299, i64 0, i32 7
  %301 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %301, i64 0, i32 6, i32 0, i32 0
  %303 = load %"class.blink::Node"*, %"class.blink::Node"** %302, align 8
  %304 = icmp eq %"class.blink::Node"* %303, null
  br i1 %304, label %298, label %305

305:                                              ; preds = %298, %267
  %306 = phi %"class.blink::Node"* [ %296, %267 ], [ %303, %298 ]
  %307 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %306, i64 0, i32 3, i32 0, i32 0
  %308 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %307, align 8
  %309 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %308, i64 0, i32 2, i32 0, i32 0
  %310 = load %"class.blink::Document"*, %"class.blink::Document"** %309, align 8
  %311 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %310, i64 0, i32 5
  call void @_ZN5blink17DocumentLifecycle9AdvanceToENS0_14LifecycleStateE(%"class.blink::DocumentLifecycle"* %311, i32 18) #12
  %312 = bitcast %"class.blink::PaintLayerPainter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312) #12
  %313 = getelementptr inbounds %"class.blink::PaintLayerPainter", %"class.blink::PaintLayerPainter"* %9, i64 0, i32 0
  store %"class.blink::PaintLayer"* %132, %"class.blink::PaintLayer"** %313, align 8
  %314 = getelementptr inbounds %"class.blink::PaintRecordBuilder", %"class.blink::PaintRecordBuilder"* %8, i64 0, i32 3
  %315 = call i32 @_ZN5blink17PaintLayerPainter5PaintERNS_15GraphicsContextERKNS_22PaintLayerPaintingInfoEj(%"class.blink::PaintLayerPainter"* nonnull %9, %"class.blink::GraphicsContext"* dereferenceable(112) %314, %"struct.blink::PaintLayerPaintingInfo"* nonnull dereferenceable(40) %7, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #12
  %316 = load %"class.blink::Node"*, %"class.blink::Node"** %295, align 8
  %317 = icmp eq %"class.blink::Node"* %316, null
  br i1 %317, label %318, label %325

318:                                              ; preds = %305, %318
  %319 = phi %"class.blink::LayoutObject"* [ %321, %318 ], [ %60, %305 ]
  %320 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %319, i64 0, i32 7
  %321 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %321, i64 0, i32 6, i32 0, i32 0
  %323 = load %"class.blink::Node"*, %"class.blink::Node"** %322, align 8
  %324 = icmp eq %"class.blink::Node"* %323, null
  br i1 %324, label %318, label %325

325:                                              ; preds = %318, %305
  %326 = phi %"class.blink::Node"* [ %316, %305 ], [ %323, %318 ]
  %327 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %326, i64 0, i32 3, i32 0, i32 0
  %328 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %327, align 8
  %329 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %328, i64 0, i32 2, i32 0, i32 0
  %330 = load %"class.blink::Document"*, %"class.blink::Document"** %329, align 8
  %331 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %330, i64 0, i32 5
  call void @_ZN5blink17DocumentLifecycle9AdvanceToENS0_14LifecycleStateE(%"class.blink::DocumentLifecycle"* %331, i32 19) #12
  %332 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #12
  %333 = getelementptr inbounds <2 x float>, <2 x float>* %10, i64 0, i64 0
  %334 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %43, i64 0, i32 1
  store <2 x float> %218, <2 x float>* %10, align 8
  %335 = bitcast %"class.blink::PropertyTreeState"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #12
  %336 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 -86, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #12
  %337 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %143, align 8
  %338 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %337, i64 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %339 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %338, align 8, !noalias !5
  %340 = icmp eq %"struct.blink::FragmentData::RareData"* %339, null
  br i1 %340, label %345, label %341

341:                                              ; preds = %325
  %342 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %339, i64 0, i32 5, i32 0, i32 0, i32 0
  %343 = load %"class.blink::RefCountedPropertyTreeState"*, %"class.blink::RefCountedPropertyTreeState"** %342, align 8, !noalias !5
  %344 = icmp eq %"class.blink::RefCountedPropertyTreeState"* %343, null
  br i1 %344, label %345, label %348

345:                                              ; preds = %341, %325
  %346 = call dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() #12, !noalias !5
  %347 = bitcast %"class.blink::PropertyTreeState"* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %336, i8* align 8 %347, i64 24, i1 false) #12
  br label %357

348:                                              ; preds = %341
  %349 = bitcast %"class.blink::RefCountedPropertyTreeState"* %343 to <2 x i64>*
  %350 = load <2 x i64>, <2 x i64>* %349, align 8, !noalias !8
  %351 = getelementptr inbounds %"class.blink::RefCountedPropertyTreeState", %"class.blink::RefCountedPropertyTreeState"* %343, i64 0, i32 2, i32 0
  %352 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %351 to i64*
  %353 = load i64, i64* %352, align 8, !noalias !8
  %354 = bitcast %"class.blink::PropertyTreeStateOrAlias"* %12 to <2 x i64>*
  store <2 x i64> %350, <2 x i64>* %354, align 16, !alias.scope !8
  %355 = getelementptr inbounds %"class.blink::PropertyTreeStateOrAlias", %"class.blink::PropertyTreeStateOrAlias"* %12, i64 0, i32 2
  %356 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %355 to i64*
  store i64 %353, i64* %356, align 16, !alias.scope !8
  br label %357

357:                                              ; preds = %348, %345
  call void @_ZNK5blink24PropertyTreeStateOrAlias7UnaliasEv(%"class.blink::PropertyTreeState"* nonnull sret %11, %"class.blink::PropertyTreeStateOrAlias"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %336) #12
  %358 = load %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"** %143, align 8
  %359 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %358, i64 0, i32 0, i32 10
  %360 = bitcast %"class.blink::FragmentData"* %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = trunc i64 %361 to i32
  %363 = lshr i64 %361, 32
  %364 = trunc i64 %363 to i32
  %365 = sitofp i32 %362 to float
  %366 = fmul float %365, 1.562500e-02
  %367 = sitofp i32 %364 to float
  %368 = fmul float %367, 1.562500e-02
  %369 = fadd float %221, %366
  store float %369, float* %333, align 8
  %370 = fadd float %232, %368
  store float %370, float* %334, align 4
  %371 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %371) #12
  store <2 x float> %219, <2 x float>* %13, align 8
  %372 = call %"class.blink::DragImage"* @_ZN5blink12DataTransfer23CreateDragImageForFrameERNS_10LocalFrameEfRKNS_9FloatSizeERKNS_10FloatPointERNS_18PaintRecordBuilderERKNS_17PropertyTreeStateE(%"class.blink::LocalFrame"* dereferenceable(1176) %0, float 1.000000e+00, %"class.blink::FloatSize"* nonnull dereferenceable(8) %44, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %43, %"class.blink::PaintRecordBuilder"* nonnull dereferenceable(728) %8, %"class.blink::PropertyTreeState"* nonnull dereferenceable(24) %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %371) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #12
  call void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 728, i8* nonnull %294) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %220) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %133) #12
  br label %373

373:                                              ; preds = %41, %357
  %374 = phi %"class.blink::DragImage"* [ %372, %357 ], [ null, %41 ]
  br i1 %14, label %401, label %375

375:                                              ; preds = %373, %398
  %376 = phi %"class.blink::Node"* [ %399, %398 ], [ %1, %373 ]
  %377 = bitcast %"class.blink::Node"* %376 to void (%"class.blink::Node"*, i1)***
  %378 = load void (%"class.blink::Node"*, i1)**, void (%"class.blink::Node"*, i1)*** %377, align 8
  %379 = getelementptr inbounds void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %378, i64 50
  %380 = load void (%"class.blink::Node"*, i1)*, void (%"class.blink::Node"*, i1)** %379, align 8
  call void %380(%"class.blink::Node"* nonnull %376, i1 zeroext false) #12
  %381 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %376, i64 0, i32 1
  %382 = load i32, i32* %381, align 8
  %383 = and i32 %382, 2
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %390, label %385

385:                                              ; preds = %375
  %386 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %376, i64 1
  %387 = bitcast %"class.blink::Node"* %386 to %"class.blink::Node"**
  %388 = load %"class.blink::Node"*, %"class.blink::Node"** %387, align 8
  %389 = icmp eq %"class.blink::Node"* %388, null
  br i1 %389, label %390, label %398

390:                                              ; preds = %385, %375
  %391 = icmp eq %"class.blink::Node"* %376, %1
  br i1 %391, label %401, label %392

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %376, i64 0, i32 5, i32 0, i32 0
  %394 = load %"class.blink::Node"*, %"class.blink::Node"** %393, align 8
  %395 = icmp eq %"class.blink::Node"* %394, null
  br i1 %395, label %396, label %398

396:                                              ; preds = %392
  %397 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %376, %"class.blink::Node"* nonnull %1) #12
  br label %398

398:                                              ; preds = %396, %392, %385
  %399 = phi %"class.blink::Node"* [ %397, %396 ], [ %394, %392 ], [ %388, %385 ]
  %400 = icmp eq %"class.blink::Node"* %399, null
  br i1 %400, label %401, label %375

401:                                              ; preds = %390, %398, %373
  ret %"class.blink::DragImage"* %374
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DragImage"* @_ZNK5blink12DataTransfer15CreateDragImageERNS_8IntPointEPNS_10LocalFrameE(%"class.blink::DataTransfer"* nocapture readonly, %"class.blink::IntPoint"* nocapture dereferenceable(8), %"class.blink::LocalFrame"*) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %9 = bitcast %"class.blink::IntPoint"* %8 to i64*
  %10 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 4
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %13 = tail call %"class.blink::DragImage"* @_ZN5blink12DataTransfer9NodeImageERNS_10LocalFrameERNS_4NodeE(%"class.blink::LocalFrame"* dereferenceable(1176) %2, %"class.blink::Node"* dereferenceable(64) %12)
  %14 = ptrtoint %"class.blink::DragImage"* %13 to i64
  br label %28

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9, i32 0, i32 0
  %17 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %16, align 8
  %18 = icmp eq %"class.blink::ImageResourceContent"* %17, null
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8
  %21 = bitcast %"class.blink::IntPoint"* %20 to i64*
  %22 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %23 = load i64, i64* %21, align 4
  store i64 %23, i64* %22, align 4
  %24 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %16, align 8
  %25 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* %24) #12
  %26 = tail call %"class.blink::DragImage"* @_ZN5blink9DragImage6CreateEPNS_5ImageENS_27RespectImageOrientationEnumEfNS_20InterpolationQualityEfNS_9FloatSizeE(%"class.blink::Image"* %25, i32 1, float 1.000000e+00, i32 2, float 1.000000e+00, <2 x float> <float 1.000000e+00, float 1.000000e+00>) #12
  %27 = ptrtoint %"class.blink::DragImage"* %26 to i64
  br label %28

28:                                               ; preds = %15, %19, %7
  %29 = phi i64 [ %14, %7 ], [ %27, %19 ], [ 0, %15 ]
  %30 = inttoptr i64 %29 to %"class.blink::DragImage"*
  ret %"class.blink::DragImage"* %30
}

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer24DeclareAndWriteDragImageEPNS_7ElementERKNS_4KURLES5_RKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.blink::Element"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::HeapHashSet.3063", align 8
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %12 = icmp eq %"class.blink::DataObject"* %11, null
  br i1 %12, label %159, label %13

13:                                               ; preds = %5
  %14 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %2) #12
  %15 = select i1 %14, %"class.blink::KURL"* %2, %"class.blink::KURL"* %3
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %15, i64 0, i32 4
  tail call void @_ZN5blink10DataObject14SetURLAndTitleERKN3WTF6StringES4_(%"class.blink::DataObject"* nonnull %11, %"class.WTF::String"* dereferenceable(8) %16, %"class.WTF::String"* dereferenceable(8) %4) #12
  %17 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %21, label %27, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %13
  %28 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %117, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::LayoutObject"* %33 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %33, i32 12) #12
  br i1 %40, label %41, label %117

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 2, i32 7
  %43 = bitcast %"class.blink::LayoutObject"** %42 to %"class.blink::LayoutImageResource"**
  %44 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutImageResource"* %44, null
  br i1 %45, label %117, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %44, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %47, align 8
  %49 = icmp eq %"class.blink::ImageResourceContent"* %48, null
  br i1 %49, label %117, label %50

50:                                               ; preds = %46
  %51 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"* nonnull %48) #12
  br i1 %51, label %117, label %52

52:                                               ; preds = %50
  %53 = load %"class.blink::LayoutImageResource"*, %"class.blink::LayoutImageResource"** %43, align 8
  %54 = icmp eq %"class.blink::LayoutImageResource"* %53, null
  br i1 %54, label %117, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::LayoutImageResource", %"class.blink::LayoutImageResource"* %53, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::ImageResourceContent"*, %"class.blink::ImageResourceContent"** %56, align 8
  %58 = icmp eq %"class.blink::ImageResourceContent"* %57, null
  br i1 %58, label %117, label %59

59:                                               ; preds = %55
  %60 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %57) #12
  %61 = icmp eq %"class.blink::Image"* %60, null
  br i1 %61, label %117, label %62

62:                                               ; preds = %59
  %63 = tail call zeroext i1 @_ZNK5blink20ImageResourceContent8IsLoadedEv(%"class.blink::ImageResourceContent"* nonnull %57) #12
  br i1 %63, label %64, label %117

64:                                               ; preds = %62
  %65 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* nonnull %57) #12
  %66 = bitcast %"class.blink::Image"* %65 to %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)***
  %67 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)**, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %67, i64 22
  %69 = load %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)*, %"class.WTF::SharedBuffer"* (%"class.blink::Image"*)** %68, align 8
  %70 = tail call %"class.WTF::SharedBuffer"* %69(%"class.blink::Image"* %65) #12
  %71 = icmp eq %"class.WTF::SharedBuffer"* %70, null
  br i1 %71, label %117, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %70, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %110, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %70, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %77) #12
  %78 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #12
  %79 = bitcast %"class.blink::Image"* %65 to %"class.WTF::StringImpl"* (%"class.blink::Image"*)***
  %80 = load %"class.WTF::StringImpl"* (%"class.blink::Image"*)**, %"class.WTF::StringImpl"* (%"class.blink::Image"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Image"*)*, %"class.WTF::StringImpl"* (%"class.blink::Image"*)** %80, i64 20
  %82 = load %"class.WTF::StringImpl"* (%"class.blink::Image"*)*, %"class.WTF::StringImpl"* (%"class.blink::Image"*)** %81, align 8
  %83 = tail call %"class.WTF::StringImpl"* %82(%"class.blink::Image"* %65) #12
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %84, align 8
  %85 = tail call dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink20ImageResourceContent11GetResponseEv(%"class.blink::ImageResourceContent"* nonnull %57) #12
  %86 = tail call dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"* %85) #12
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names19kContentDispositionE, align 8
  %88 = getelementptr inbounds %"class.blink::HTTPHeaderMap", %"class.blink::HTTPHeaderMap"* %86, i64 0, i32 0, i32 0
  %89 = tail call %"struct.WTF::KeyValuePair.3258"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.3255"* %88, %"class.WTF::AtomicString"* dereferenceable(8) %87) #12
  %90 = icmp eq %"struct.WTF::KeyValuePair.3258"* %89, null
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3258", %"struct.WTF::KeyValuePair.3258"* %89, i64 0, i32 1
  %92 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %93 = select i1 %90, %"class.WTF::AtomicString"* %92, %"class.WTF::AtomicString"* %91
  call void @_ZN5blink10DataObject15AddSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.blink::DataObject"* %17, %"class.WTF::SharedBuffer"* nonnull %70, %"class.blink::KURL"* dereferenceable(112) %3, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::AtomicString"* dereferenceable(8) %93) #12
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #12
  br label %109

109:                                              ; preds = %108, %105, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #12
  br label %110

110:                                              ; preds = %109, %72
  %111 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %70, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %111) #12
  %112 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %110
  call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %70) #12
  %116 = bitcast %"class.WTF::SharedBuffer"* %70 to i8*
  call void @free(i8* %116) #12
  br label %117

117:                                              ; preds = %29, %35, %41, %46, %50, %52, %55, %59, %62, %64, %110, %115
  %118 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %119 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #12
  %120 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0)) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink17kMimeTypeTextHTMLE, i64 0, i64 0), i64 %120) #12
  %121 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #12
  %122 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %123 = bitcast %"class.blink::HeapHashSet.3063"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 0, i64 20, i1 false) #12
  %124 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %122, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.3063"* nonnull %9) #12
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %125, align 8
  call void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"* %118, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8) #12
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #12
  br label %141

141:                                              ; preds = %117, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #12
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #12
  br label %158

158:                                              ; preds = %141, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #12
  br label %159

159:                                              ; preds = %5, %158
  ret void
}

declare void @_ZN5blink10DataObject14SetURLAndTitleERKN3WTF6StringES4_(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"*, i32, i32, i32, %"class.blink::HeapHashSet.3063"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer8WriteURLEPNS_4NodeERKNS_4KURLERKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.blink::Node"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::HeapHashSet.3063", align 8
  %8 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %10 = icmp eq %"class.blink::DataObject"* %9, null
  br i1 %10, label %54, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4
  tail call void @_ZN5blink10DataObject14SetURLAndTitleERKN3WTF6StringES4_(%"class.blink::DataObject"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %12, %"class.WTF::String"* dereferenceable(8) %3) #12
  %13 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %14 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %15) #12
  call void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"* %13, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %12) #12
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #12
  br label %32

32:                                               ; preds = %11, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %33 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %34 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = bitcast %"class.blink::HeapHashSet.3063"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 20, i1 false) #12
  %36 = call %"class.WTF::StringImpl"* @_ZN5blink12CreateMarkupEPKNS_4NodeENS_12ChildrenOnlyENS_12AbsoluteURLsENS_18IncludeShadowRootsENS_11HeapHashSetINS_6MemberINS_10ShadowRootEEEN3WTF10MemberHashIS8_EENSA_10HashTraitsIS9_EEEE(%"class.blink::Node"* %1, i32 0, i32 1, i32 0, %"class.blink::HeapHashSet.3063"* nonnull %7) #12
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  call void @_ZN5blink10DataObject17SetHTMLAndBaseURLERKN3WTF6StringERKNS_4KURLE(%"class.blink::DataObject"* %33, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::KURL"* dereferenceable(112) %2) #12
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %32, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  br label %54

54:                                               ; preds = %4, %53
  ret void
}

declare void @_ZN5blink10DataObject17SetHTMLAndBaseURLERKN3WTF6StringERKNS_4KURLE(%"class.blink::DataObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer14WriteSelectionERKNS_14FrameSelectionE(%"class.blink::DataTransfer"* nocapture readonly, %"class.blink::FrameSelection"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %10 = icmp eq %"class.blink::DataObject"* %9, null
  br i1 %10, label %81, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = bitcast %"class.blink::VisibleSelectionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #12
  call void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %4, %"class.blink::FrameSelection"* %1) #12
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::VisibleSelectionTemplate"* nonnull %4) #12
  %14 = call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3) #12
  %15 = icmp eq %"class.blink::TextControlElement"* %14, null
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  br i1 %15, label %16, label %41

16:                                               ; preds = %11
  %17 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = call %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection24SelectedHTMLForClipboardEv(%"class.blink::FrameSelection"* %1) #12
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.blink::FrameSelection", %"class.blink::FrameSelection"* %1, i64 0, i32 1, i32 0, i32 0
  %22 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %21, align 8
  %23 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* %22) #12
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 19
  call void @_ZN5blink10DataObject17SetHTMLAndBaseURLERKN3WTF6StringERKNS_4KURLE(%"class.blink::DataObject"* %17, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::KURL"* dereferenceable(112) %24) #12
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #12
  br label %40

40:                                               ; preds = %16, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  br label %41

41:                                               ; preds = %40, %11
  %42 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %44 = call %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection24SelectedTextForClipboardEv(%"class.blink::FrameSelection"* %1) #12
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %43, align 8
  call void @_ZN5blink20ReplaceNBSPWithSpaceERN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %6) #12
  %45 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %8, align 8
  %46 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #12
  %47 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0)) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink18kMimeTypeTextPlainE, i64 0, i64 0), i64 %47) #12
  call void @_ZN5blink10DataObject7SetDataERKN3WTF6StringES4_(%"class.blink::DataObject"* %45, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %6) #12
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %41
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %41, %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #12
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #12
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  br label %81

81:                                               ; preds = %2, %80
  ret void
}

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK5blink14FrameSelection42ComputeVisibleSelectionInDOMTreeDeprecatedEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::FrameSelection"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection24SelectedHTMLForClipboardEv(%"class.blink::FrameSelection"*) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink14FrameSelection24SelectedTextForClipboardEv(%"class.blink::FrameSelection"*) local_unnamed_addr #2

declare void @_ZN5blink20ReplaceNBSPWithSpaceERN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12DataTransfer15SetAccessPolicyENS_24DataTransferAccessPolicyE(%"class.blink::DataTransfer"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer15CanSetDragImageEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DataTransfer15SourceOperationEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4
  %3 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_140ConvertEffectAllowedToDragOperationsMaskERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %2)
  %4 = trunc i64 %3 to i8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %1
  tail call void @llvm.trap() #12
  unreachable

7:                                                ; preds = %1
  %8 = lshr i64 %3, 32
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink12DataTransfer20DestinationOperationEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3
  %3 = tail call fastcc i64 @_ZN5blink12_GLOBAL__N_140ConvertEffectAllowedToDragOperationsMaskERKN3WTF12AtomicStringE(%"class.WTF::AtomicString"* dereferenceable(8) %2)
  %4 = trunc i64 %3 to i8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !2

6:                                                ; preds = %1
  tail call void @llvm.trap() #12
  unreachable

7:                                                ; preds = %1
  %8 = lshr i64 %3, 32
  %9 = trunc i64 %8 to i32
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer18SetSourceOperationENS_18DragOperationsMaskE(%"class.blink::DataTransfer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_140ConvertDragOperationsMaskToEffectAllowedENS_18DragOperationsMaskE(i32 %1)
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4
  %6 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %23

23:                                               ; preds = %22, %19, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_140ConvertDragOperationsMaskToEffectAllowedENS_18DragOperationsMaskE(i32) unnamed_addr #0 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = and i32 %0, 16
  %4 = icmp ne i32 %3, 0
  %5 = xor i1 %4, true
  %6 = and i32 %0, 1
  %7 = icmp eq i32 %6, 0
  %8 = or i1 %7, %5
  %9 = and i32 %0, 2
  %10 = icmp eq i32 %9, 0
  %11 = or i1 %10, %8
  %12 = xor i1 %11, true
  %13 = icmp eq i32 %0, -1
  %14 = or i1 %13, %12
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #12
  br label %33

16:                                               ; preds = %1
  br i1 %8, label %18, label %17

17:                                               ; preds = %16
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #12
  br label %33

18:                                               ; preds = %16
  %19 = or i1 %10, %5
  br i1 %19, label %21, label %20

20:                                               ; preds = %18
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i64 8) #12
  br label %33

21:                                               ; preds = %18
  %22 = icmp ne i32 %6, 0
  %23 = xor i1 %22, true
  %24 = or i1 %10, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #12
  br label %33

26:                                               ; preds = %21
  br i1 %4, label %27, label %28

27:                                               ; preds = %26
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #12
  br label %33

28:                                               ; preds = %26
  br i1 %22, label %29, label %30

29:                                               ; preds = %28
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #12
  br label %33

30:                                               ; preds = %28
  br i1 %10, label %32, label %31

31:                                               ; preds = %30
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i64 4) #12
  br label %33

32:                                               ; preds = %30
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #12
  br label %33

33:                                               ; preds = %32, %31, %29, %27, %25, %20, %17, %15
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  ret %"class.WTF::StringImpl"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransfer23SetDestinationOperationEN2ui5mojom13DragOperationE(%"class.blink::DataTransfer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_140ConvertDragOperationsMaskToEffectAllowedENS_18DragOperationsMaskE(i32 %1)
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3
  %6 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #12
  br label %23

23:                                               ; preds = %22, %19, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DataTransferItemList"* @_ZN5blink12DataTransfer5itemsEv(%"class.blink::DataTransfer"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #12
  %3 = bitcast i8* %2 to %"class.blink::DataTransferItemList"*
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %4, align 8
  tail call void @_ZN5blink20DataTransferItemListC1EPNS_12DataTransferEPNS_10DataObjectE(%"class.blink::DataTransferItemList"* %3, %"class.blink::DataTransfer"* %0, %"class.blink::DataObject"* %5) #12
  %6 = getelementptr inbounds i8, i8* %2, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  ret %"class.blink::DataTransferItemList"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::DataObject"* @_ZNK5blink12DataTransfer13GetDataObjectEv(%"class.blink::DataTransfer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %2, align 8
  ret %"class.blink::DataObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12DataTransferC2ENS0_16DataTransferTypeENS_24DataTransferAccessPolicyEPNS_10DataObjectE(%"class.blink::DataTransfer"*, i32, i32, %"class.blink::DataObject"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.blink::DataObject::Observer", %"struct.blink::DataObject::Observer"* %7, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [4 x i8*] }, { [12 x i8*], [4 x i8*] }* @_ZTVN5blink12DataTransferE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 4
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i64 13) #12
  %12 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 5
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::DataObject"* %3, %"class.blink::DataObject"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 7
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 8, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9, i32 0, i32 0
  %18 = bitcast %"class.blink::ImageResourceContent"** %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink10DataObject11AddObserverEPNS0_8ObserverE(%"class.blink::DataObject"* %3, %"struct.blink::DataObject::Observer"* %7) #12
  ret void
}

declare void @_ZN5blink10DataObject11AddObserverEPNS0_8ObserverE(%"class.blink::DataObject"*, %"struct.blink::DataObject::Observer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer13HasFileOfTypeERKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -2
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %9, label %92

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %12 = call i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"* %11) #12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %92, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  %16 = bitcast %"class.WTF::StringView"* %4 to i8*
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  %20 = bitcast %"class.WTF::StringView"* %3 to i64*
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  %26 = bitcast %"class.WTF::StringView"* %4 to i64*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %28

28:                                               ; preds = %14, %87
  %29 = phi i32 [ 0, %14 ], [ %88, %87 ]
  %30 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %31 = call %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"* %30, i32 %29) #12
  %32 = getelementptr inbounds %"class.blink::DataObjectItem", %"class.blink::DataObjectItem"* %31, i64 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %87

35:                                               ; preds = %28
  %36 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %37 = call %"class.blink::DataObjectItem"* @_ZN5blink10DataObject4ItemEj(%"class.blink::DataObject"* %36, i32 %29) #12
  %38 = call %"class.blink::File"* @_ZNK5blink14DataObjectItem9GetAsFileEv(%"class.blink::DataObjectItem"* %37) #12
  %39 = icmp eq %"class.blink::File"* %38, null
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  br i1 %39, label %69, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %38, i64 0, i32 0
  %42 = bitcast %"class.blink::File"* %38 to i1 (%"class.blink::Blob"*)***
  %43 = load i1 (%"class.blink::Blob"*)**, i1 (%"class.blink::Blob"*)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %43, i64 11
  %45 = load i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %44, align 8
  %46 = call zeroext i1 %45(%"class.blink::Blob"* %41) #12
  br i1 %46, label %47, label %69

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %38, i64 0, i32 0, i32 3, i32 0
  %49 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %49, i64 0, i32 2
  %51 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %50) #12
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  store i8* null, i8** %18, align 8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %54, i64* %20, align 8
  br label %59

55:                                               ; preds = %47
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %17, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %19, align 8
  br label %59

59:                                               ; preds = %53, %55
  %60 = phi i32 [ %57, %55 ], [ 0, %53 ]
  store i32 %60, i32* %21, align 8
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  store i8* null, i8** %24, align 8
  %64 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %64, i64* %26, align 8
  br label %70

65:                                               ; preds = %59
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %23, align 8
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  store %"class.WTF::StringImpl"* %68, %"class.WTF::StringImpl"** %25, align 8
  br label %70

69:                                               ; preds = %35, %40
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br label %87

70:                                               ; preds = %63, %65
  %71 = phi i32 [ %67, %65 ], [ 0, %63 ]
  store i32 %71, i32* %27, align 8
  %72 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br i1 %52, label %86, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %72, label %92, label %87

86:                                               ; preds = %82, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  br i1 %72, label %92, label %87

87:                                               ; preds = %85, %69, %86, %28
  %88 = add nuw i32 %29, 1
  %89 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  %90 = call i32 @_ZNK5blink10DataObject6lengthEv(%"class.blink::DataObject"* %89) #12
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %28, label %92

92:                                               ; preds = %87, %86, %85, %9, %2
  %93 = phi i1 [ false, %2 ], [ false, %9 ], [ false, %87 ], [ true, %86 ], [ true, %85 ]
  ret i1 %93
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12DataTransfer15HasStringOfTypeERKN3WTF6StringE(%"class.blink::DataTransfer"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.630", align 8
  %4 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -2
  %7 = icmp ult i32 %6, 3
  br i1 %7, label %8, label %75

8:                                                ; preds = %2
  %9 = bitcast %"class.WTF::Vector.630"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::DataObject"*, %"class.blink::DataObject"** %10, align 8
  call void @_ZNK5blink10DataObject5TypesEv(%"class.WTF::Vector.630"* nonnull sret %3, %"class.blink::DataObject"* %11) #12
  %12 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %3, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %27, %19
  %22 = phi %"class.WTF::String"* [ %13, %19 ], [ %28, %27 ]
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %24, %"class.WTF::StringImpl"* %25) #12
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 1
  %29 = icmp ult %"class.WTF::String"* %28, %17
  br i1 %29, label %21, label %37

30:                                               ; preds = %21
  %31 = ptrtoint %"class.WTF::String"* %22 to i64
  %32 = ptrtoint %"class.WTF::String"* %13 to i64
  %33 = sub i64 %31, %32
  %34 = lshr exact i64 %33, 3
  %35 = trunc i64 %34 to i32
  %36 = icmp ne i32 %35, -1
  br label %37

37:                                               ; preds = %27, %8, %30
  %38 = phi i1 [ %36, %30 ], [ false, %8 ], [ false, %27 ]
  %39 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %40 = icmp eq %"class.WTF::String"* %39, null
  br i1 %40, label %74, label %41, !prof !3

41:                                               ; preds = %37
  %42 = bitcast %"class.WTF::String"* %39 to i8*
  %43 = load i32, i32* %14, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %72, label %45, !prof !2

45:                                               ; preds = %41
  %46 = zext i32 %43 to i64
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %39, i64 %46
  br label %48

48:                                               ; preds = %66, %45
  %49 = phi %"class.WTF::String"* [ %67, %66 ], [ %39, %45 ]
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %66

66:                                               ; preds = %65, %62, %48
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 1
  %68 = icmp eq %"class.WTF::String"* %67, %47
  br i1 %68, label %69, label %48

69:                                               ; preds = %66
  store i32 0, i32* %14, align 4
  %70 = bitcast %"class.WTF::Vector.630"* %3 to i8**
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %69, %41
  %73 = phi i8* [ %71, %69 ], [ %42, %41 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %73) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %74

74:                                               ; preds = %37, %72
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  br label %75

75:                                               ; preds = %2, %74
  %76 = phi i1 [ %38, %74 ], [ false, %2 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12DataTransfer5TraceEPNS_7VisitorE(%"class.blink::DataTransfer"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member.1858"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 9
  %15 = bitcast %"class.blink::Member.1922"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 10
  %26 = bitcast %"class.blink::Member.318"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %36, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink12DataTransfer5TraceEPNS_7VisitorE(%"class.blink::DataTransfer"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataTransfer", %"class.blink::DataTransfer"* %0, i64 -1, i32 9
  %4 = getelementptr inbounds %"class.blink::Member.1922", %"class.blink::Member.1922"* %3, i64 7
  %5 = bitcast %"class.blink::Member.1922"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %8, %2
  %15 = getelementptr inbounds %"class.blink::Member.1922", %"class.blink::Member.1922"* %3, i64 10
  %16 = bitcast %"class.blink::Member.1922"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to i8*
  %21 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, i64 5
  %24 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, align 8
  tail call void %24(%"class.blink::Visitor"* %1, i8* nonnull %20, i8* nonnull %20, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv) #12
  br label %25

25:                                               ; preds = %19, %14
  %26 = getelementptr inbounds %"class.blink::Member.1922", %"class.blink::Member.1922"* %3, i64 11
  %27 = bitcast %"class.blink::Member.1922"* %26 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %1, i8* nonnull %31, i8* nonnull %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %36

36:                                               ; preds = %25, %30
  %37 = bitcast %"class.blink::Member.1922"* %3 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %37, %"class.blink::Visitor"* %1) #12
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12DataTransfer18GetWrapperTypeInfoEv(%"class.blink::DataTransfer"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12DataTransfer18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.1952"*, %"class.blink::File"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1952"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.1882"*, %"class.blink::Member.1882"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.1882", %"class.blink::Member.1882"* %16, i64 %18
  %20 = bitcast %"class.blink::File"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.1882"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1952"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.1882"*, %"class.blink::Member.1882"** %8, align 8
  %10 = icmp eq %"class.blink::Member.1882"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4FileEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1952"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.1882"*, %"class.blink::Member.1882"** %8, align 8
  %26 = icmp eq %"class.blink::Member.1882"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.1882"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1952"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4FileEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1952"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1952"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1952"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4FileEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.1882"*, %"class.blink::Member.1882"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.1882"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.1882"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1952"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.1952"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.1952"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1952", %"class.WTF::Vector.1952"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4FileEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.14, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4FileEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #11 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.1882"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.1882", %"class.blink::Member.1882"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.1882"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4FileEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4FileEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare void @_ZN5blink9FloatRect9IntersectERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14LocalFrameView35UpdateAllLifecyclePhasesExceptPaintENS_20DocumentUpdateReasonE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #2

declare %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare %"class.blink::PaintLayer"* @_ZNK5blink10PaintLayer23AncestorStackingContextEv(%"class.blink::PaintLayer"*) local_unnamed_addr #2

declare { i64, i64 } @_ZNK5blink12LayoutObject43AbsoluteBoundingBoxRectIncludingDescendantsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #2

declare void @_ZN5blink7IntRect9IntersectERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #2

declare void @_ZN5blink18PaintRecordBuilderC1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #2

declare void @_ZN5blink17DocumentLifecycle9AdvanceToENS0_14LifecycleStateE(%"class.blink::DocumentLifecycle"*, i32) local_unnamed_addr #2

declare i32 @_ZN5blink17PaintLayerPainter5PaintERNS_15GraphicsContextERKNS_22PaintLayerPaintingInfoEj(%"class.blink::PaintLayerPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PaintLayerPaintingInfo"* dereferenceable(40), i32) local_unnamed_addr #2

declare void @_ZNK5blink24PropertyTreeStateOrAlias7UnaliasEv(%"class.blink::PropertyTreeState"* sret, %"class.blink::PropertyTreeStateOrAlias"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink18PaintRecordBuilderD1Ev(%"class.blink::PaintRecordBuilder"*) unnamed_addr #6

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZNK5blink12LayoutObject19AncestorToLocalQuadEPKNS_20LayoutBoxModelObjectERKNS_9FloatQuadEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::FloatQuad"* dereferenceable(32), i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::PropertyTreeState"* @_ZN5blink17PropertyTreeState4RootEv() local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20ImageResourceContent8IsLoadedEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare void @_ZN5blink10DataObject15AddSharedBufferE13scoped_refptrIN3WTF12SharedBufferEERKNS_4KURLERKNS2_6StringERKNS2_12AtomicStringE(%"class.blink::DataObject"*, %"class.WTF::SharedBuffer"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(1072) %"class.blink::ResourceResponse"* @_ZNK5blink20ImageResourceContent11GetResponseEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.blink::HTTPHeaderMap"* @_ZNK5blink16ResourceResponse16HttpHeaderFieldsEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink20ImageResourceContent13ErrorOccurredEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3258"* @_ZNK3WTF9HashTableINS_12AtomicStringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_15CaseFoldingHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.3255"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3255", %"class.WTF::HashTable.3255"* %0, i64 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.3258"*, %"struct.WTF::KeyValuePair.3258"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.3258"* %6, null
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashTable.3255", %"class.WTF::HashTable.3255"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = tail call i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"* %14) #12
  %16 = and i32 %15, %11
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.3258", %"struct.WTF::KeyValuePair.3258"* %6, i64 %17
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.3258", %"struct.WTF::KeyValuePair.3258"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %74, label %22

22:                                               ; preds = %8
  %23 = bitcast %"class.WTF::StringView"* %3 to i8*
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %26 = bitcast %"class.WTF::StringView"* %4 to i8*
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %29 = bitcast i8** %28 to %"class.WTF::StringImpl"**
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %31 = xor i32 %15, -1
  %32 = lshr i32 %15, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.WTF::StringView"* %3 to i8**
  br label %45

45:                                               ; preds = %65, %22
  %46 = phi %"struct.WTF::KeyValuePair.3258"* [ %18, %22 ], [ %70, %65 ]
  %47 = phi i64 [ %17, %22 ], [ %69, %65 ]
  %48 = phi i64 [ 0, %22 ], [ %67, %65 ]
  %49 = bitcast %"struct.WTF::KeyValuePair.3258"* %46 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = icmp eq i8* %50, inttoptr (i64 -1 to i8*)
  br i1 %51, label %65, label %52

52:                                               ; preds = %45
  %53 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, %53
  br i1 %55, label %74, label %56

56:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  store i8* %50, i8** %44, align 8
  %57 = getelementptr inbounds i8, i8* %50, i64 12
  store i8* %57, i8** %24, align 8
  %58 = getelementptr inbounds i8, i8* %50, i64 4
  %59 = bitcast i8* %58 to i32*
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %25, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  store %"class.WTF::StringImpl"* %54, %"class.WTF::StringImpl"** %27, align 8
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 1
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %29, align 8
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %30, align 8
  %64 = call zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br i1 %64, label %74, label %65

65:                                               ; preds = %56, %45
  %66 = icmp eq i64 %48, 0
  %67 = select i1 %66, i64 %43, i64 %48
  %68 = add i64 %67, %47
  %69 = and i64 %68, %12
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.3258", %"struct.WTF::KeyValuePair.3258"* %6, i64 %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3258", %"struct.WTF::KeyValuePair.3258"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %74, label %45

74:                                               ; preds = %52, %56, %65, %2, %8
  %75 = phi %"struct.WTF::KeyValuePair.3258"* [ null, %2 ], [ null, %8 ], [ %46, %52 ], [ %46, %56 ], [ null, %65 ]
  ret %"struct.WTF::KeyValuePair.3258"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN3WTF15CaseFoldingHash7GetHashEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i32, i32* %3 monotonic, align 4
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 1
  br i1 %6, label %77, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.WTF::StringImpl"* %7 to i8*
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = lshr i32 %11, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %48, label %16

16:                                               ; preds = %8
  %17 = add nsw i32 %14, -1
  %18 = zext i32 %17 to i64
  br label %19

19:                                               ; preds = %19, %16
  %20 = phi i32 [ %41, %19 ], [ -1640531527, %16 ]
  %21 = phi i32 [ %23, %19 ], [ %14, %16 ]
  %22 = phi i8* [ %42, %19 ], [ %9, %16 ]
  %23 = add nsw i32 %21, -1
  %24 = load i8, i8* %22, align 1
  %25 = zext i8 %24 to i64
  %26 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = getelementptr inbounds i8, i8* %22, i64 1
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = zext i16 %27 to i32
  %34 = add i32 %20, %33
  %35 = shl i32 %34, 16
  %36 = zext i16 %32 to i32
  %37 = shl nuw nsw i32 %36, 11
  %38 = xor i32 %35, %34
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 11
  %41 = add i32 %40, %39
  %42 = getelementptr inbounds i8, i8* %22, i64 2
  %43 = icmp eq i32 %23, 0
  br i1 %43, label %44, label %19

44:                                               ; preds = %19
  %45 = shl nuw nsw i64 %18, 1
  %46 = add nuw nsw i64 %45, 2
  %47 = getelementptr i8, i8* %9, i64 %46
  br label %48

48:                                               ; preds = %44, %8
  %49 = phi i32 [ -1640531527, %8 ], [ %41, %44 ]
  %50 = phi i8* [ %9, %8 ], [ %47, %44 ]
  br i1 %13, label %62, label %51

51:                                               ; preds = %48
  %52 = load i8, i8* %50, align 1
  %53 = zext i8 %52 to i64
  %54 = getelementptr inbounds [256 x i16], [256 x i16]* @_ZN3WTF10StringImpl20kLatin1CaseFoldTableE, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i32
  %57 = add i32 %49, %56
  %58 = shl i32 %57, 11
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 17
  %61 = add i32 %60, %59
  br label %62

62:                                               ; preds = %48, %51
  %63 = phi i32 [ %61, %51 ], [ %49, %48 ]
  %64 = shl i32 %63, 3
  %65 = xor i32 %64, %63
  %66 = lshr i32 %65, 5
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 2
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 15
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 10
  %73 = xor i32 %72, %71
  %74 = and i32 %73, 16777215
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 8388608, i32 %74
  br label %112

77:                                               ; preds = %1
  %78 = bitcast %"class.WTF::StringImpl"* %7 to i16*
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %0, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = bitcast i64* %2 to %"class.WTF::StringHasher"*
  %82 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #12
  store i64 186919631157689, i64* %2, align 8
  %83 = bitcast i64* %2 to i32*
  %84 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 1
  call void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"* nonnull %81, i16* %78, i32 %80) #12
  %85 = load i32, i32* %83, align 8
  %86 = load i8, i8* %84, align 4, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %97, label %88

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %81, i64 0, i32 2
  %90 = load i16, i16* %89, align 2
  %91 = zext i16 %90 to i32
  %92 = add i32 %85, %91
  %93 = shl i32 %92, 11
  %94 = xor i32 %93, %92
  %95 = lshr i32 %94, 17
  %96 = add i32 %95, %94
  br label %97

97:                                               ; preds = %77, %88
  %98 = phi i32 [ %96, %88 ], [ %85, %77 ]
  %99 = shl i32 %98, 3
  %100 = xor i32 %99, %98
  %101 = lshr i32 %100, 5
  %102 = add i32 %101, %100
  %103 = shl i32 %102, 2
  %104 = xor i32 %103, %102
  %105 = lshr i32 %104, 15
  %106 = add i32 %105, %104
  %107 = shl i32 %106, 10
  %108 = xor i32 %107, %106
  %109 = and i32 %108, 16777215
  %110 = icmp eq i32 %109, 0
  %111 = select i1 %110, i32 8388608, i32 %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #12
  br label %112

112:                                              ; preds = %97, %62
  %113 = phi i32 [ %76, %62 ], [ %111, %97 ]
  ret i32 %113
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringHasher28AddCharactersAssumingAlignedIDsXadL_ZNS_15CaseFoldingHash8FoldCaseIDsEEDsT_EEEEvPKS4_j(%"class.WTF::StringHasher"*, i16*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = and i32 %2, 1
  %5 = icmp eq i32 %4, 0
  %6 = lshr i32 %2, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %33, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi i32 [ %6, %8 ], [ %13, %10 ]
  %12 = phi i16* [ %1, %8 ], [ %31, %10 ]
  %13 = add nsw i32 %11, -1
  %14 = load i16, i16* %12, align 2
  %15 = zext i16 %14 to i32
  %16 = tail call i32 @u_foldCase_69(i32 %15, i32 0) #12
  %17 = getelementptr inbounds i16, i16* %12, i64 1
  %18 = load i16, i16* %17, align 2
  %19 = zext i16 %18 to i32
  %20 = tail call i32 @u_foldCase_69(i32 %19, i32 0) #12
  %21 = and i32 %16, 65535
  %22 = load i32, i32* %9, align 4
  %23 = add i32 %22, %21
  %24 = shl i32 %23, 16
  %25 = shl i32 %20, 11
  %26 = and i32 %25, 134215680
  %27 = xor i32 %23, %26
  %28 = xor i32 %27, %24
  %29 = lshr i32 %28, 11
  %30 = add i32 %29, %28
  store i32 %30, i32* %9, align 4
  %31 = getelementptr inbounds i16, i16* %12, i64 2
  %32 = icmp eq i32 %13, 0
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %3
  %34 = phi i16* [ %1, %3 ], [ %31, %10 ]
  br i1 %5, label %59, label %35

35:                                               ; preds = %33
  %36 = load i16, i16* %34, align 2
  %37 = zext i16 %36 to i32
  %38 = tail call i32 @u_foldCase_69(i32 %37, i32 0) #12
  %39 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 1
  %40 = load i8, i8* %39, align 4, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %35
  store i8 0, i8* %39, align 4
  %43 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  %44 = load i16, i16* %43, align 2
  %45 = zext i16 %44 to i32
  %46 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  %49 = shl i32 %48, 16
  %50 = shl i32 %38, 11
  %51 = and i32 %50, 134215680
  %52 = xor i32 %48, %51
  %53 = xor i32 %52, %49
  %54 = lshr i32 %53, 11
  %55 = add i32 %54, %53
  store i32 %55, i32* %46, align 4
  br label %59

56:                                               ; preds = %35
  %57 = trunc i32 %38 to i16
  %58 = getelementptr inbounds %"class.WTF::StringHasher", %"class.WTF::StringHasher"* %0, i64 0, i32 2
  store i16 %57, i16* %58, align 2
  store i8 1, i8* %39, align 4
  br label %59

59:                                               ; preds = %56, %42, %33
  ret void
}

declare i32 @u_foldCase_69(i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF37DeprecatedEqualIgnoringCaseAndNullityERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20ImageResourceContentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ImageResourceContent"*
  tail call void @_ZNK5blink20ImageResourceContent5TraceEPNS_7VisitorE(%"class.blink::ImageResourceContent"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink20ImageResourceContent5TraceEPNS_7VisitorE(%"class.blink::ImageResourceContent"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink8FileListC1Ev(%"class.blink::FileList"*) unnamed_addr #2

declare void @_ZN5blink20DataTransferItemListC1EPNS_12DataTransferEPNS_10DataObjectE(%"class.blink::DataTransferItemList"*, %"class.blink::DataTransfer"*, %"class.blink::DataObject"*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10DataObjectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataObject"*
  %4 = bitcast i8* %1 to void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)**, void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)*, void (%"class.blink::DataObject"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::DataObject"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink12FragmentData24LocalBorderBoxPropertiesEv"}
!8 = !{!9, !6}
!9 = distinct !{!9, !10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink27RefCountedPropertyTreeState20GetPropertyTreeStateEv"}
