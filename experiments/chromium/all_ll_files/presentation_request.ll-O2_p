; ModuleID = '../../content/public/browser/presentation_request.cc'
source_filename = "../../content/public/browser/presentation_request.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.content::PresentationRequest" = type { %"struct.content::GlobalFrameRoutingId", %"class.std::__1::vector", %"class.url::Origin" }
%"struct.content::GlobalFrameRoutingId" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.4" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.8 }
%union.anon.8 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_ = comdat any

@_ZN7content19PresentationRequestC1ERKNS_20GlobalFrameRoutingIdERKNSt3__16vectorI4GURLNS4_9allocatorIS6_EEEERKN3url6OriginE = hidden unnamed_addr alias void (%"struct.content::PresentationRequest"*, %"struct.content::GlobalFrameRoutingId"*, %"class.std::__1::vector"*, %"class.url::Origin"*), void (%"struct.content::PresentationRequest"*, %"struct.content::GlobalFrameRoutingId"*, %"class.std::__1::vector"*, %"class.url::Origin"*)* @_ZN7content19PresentationRequestC2ERKNS_20GlobalFrameRoutingIdERKNSt3__16vectorI4GURLNS4_9allocatorIS6_EEEERKN3url6OriginE
@_ZN7content19PresentationRequestD1Ev = hidden unnamed_addr alias void (%"struct.content::PresentationRequest"*), void (%"struct.content::PresentationRequest"*)* @_ZN7content19PresentationRequestD2Ev
@_ZN7content19PresentationRequestC1ERKS0_ = hidden unnamed_addr alias void (%"struct.content::PresentationRequest"*, %"struct.content::PresentationRequest"*), void (%"struct.content::PresentationRequest"*, %"struct.content::PresentationRequest"*)* @_ZN7content19PresentationRequestC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19PresentationRequestC2ERKNS_20GlobalFrameRoutingIdERKNSt3__16vectorI4GURLNS4_9allocatorIS6_EEEERKN3url6OriginE(%"struct.content::PresentationRequest"*, %"struct.content::GlobalFrameRoutingId"* nocapture readonly dereferenceable(8), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.content::GlobalFrameRoutingId"* %1 to i64*
  %6 = bitcast %"struct.content::PresentationRequest"* %0 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #7
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %class.GURL** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 120
  %17 = icmp eq i64 %15, 0
  br i1 %17, label %46, label %18

18:                                               ; preds = %4
  %19 = icmp ugt i64 %16, 153722867280912930
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::vector"* %8 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %21) #8
  unreachable

22:                                               ; preds = %18
  %23 = tail call i8* @_Znwm(i64 %15) #9
  %24 = bitcast i8* %23 to %class.GURL*
  %25 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %26 = bitcast %class.GURL** %25 to i8**
  store i8* %23, i8** %26, align 8
  %27 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %23, i8** %27, align 8
  %28 = getelementptr inbounds %class.GURL, %class.GURL* %24, i64 %16
  %29 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %28, %class.GURL** %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %31 = load %class.GURL*, %class.GURL** %30, align 8
  %32 = load %class.GURL*, %class.GURL** %10, align 8
  %33 = bitcast %class.GURL** %25 to i64*
  %34 = ptrtoint i8* %23 to i64
  %35 = icmp eq %class.GURL* %31, %32
  br i1 %35, label %44, label %36

36:                                               ; preds = %22, %36
  %37 = phi %class.GURL* [ %40, %36 ], [ %24, %22 ]
  %38 = phi %class.GURL* [ %39, %36 ], [ %31, %22 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %37, %class.GURL* dereferenceable(120) %38) #7
  %39 = getelementptr inbounds %class.GURL, %class.GURL* %38, i64 1
  %40 = getelementptr inbounds %class.GURL, %class.GURL* %37, i64 1
  %41 = icmp eq %class.GURL* %39, %32
  br i1 %41, label %42, label %36

42:                                               ; preds = %36
  %43 = ptrtoint %class.GURL* %40 to i64
  br label %44

44:                                               ; preds = %42, %22
  %45 = phi i64 [ %34, %22 ], [ %43, %42 ]
  store i64 %45, i64* %33, align 8
  br label %46

46:                                               ; preds = %4, %44
  %47 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %47, %"class.url::Origin"* dereferenceable(80) %3) #7
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19PresentationRequestD2Ev(%"struct.content::PresentationRequest"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 2
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #7
  %3 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %class.GURL*, %class.GURL** %4, align 8
  %6 = icmp eq %class.GURL* %5, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.GURL* %5 to i8*
  %9 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = icmp eq %class.GURL* %10, %5
  br i1 %11, label %19, label %12

12:                                               ; preds = %7, %12
  %13 = phi %class.GURL* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %class.GURL, %class.GURL* %13, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %14) #7
  %15 = icmp eq %class.GURL* %14, %5
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::vector"* %3 to i8**
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %16, %7
  %20 = phi i8* [ %18, %16 ], [ %8, %7 ]
  store %class.GURL* %5, %class.GURL** %9, align 8
  tail call void @_ZdlPv(i8* %20) #9
  br label %21

21:                                               ; preds = %1, %19
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19PresentationRequestC2ERKS0_(%"struct.content::PresentationRequest"*, %"struct.content::PresentationRequest"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::PresentationRequest"* %1 to i64*
  %4 = bitcast %"struct.content::PresentationRequest"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #7
  %9 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1, i32 0, i32 1
  %10 = bitcast %class.GURL** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 120
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 153722867280912930
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #8
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #9
  %23 = bitcast i8* %22 to %class.GURL*
  %24 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %25 = bitcast %class.GURL** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %class.GURL, %class.GURL* %23, i64 %15
  %28 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %class.GURL* %27, %class.GURL** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %30 = load %class.GURL*, %class.GURL** %29, align 8
  %31 = load %class.GURL*, %class.GURL** %9, align 8
  %32 = bitcast %class.GURL** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = icmp eq %class.GURL* %30, %31
  br i1 %34, label %43, label %35

35:                                               ; preds = %21, %35
  %36 = phi %class.GURL* [ %39, %35 ], [ %23, %21 ]
  %37 = phi %class.GURL* [ %38, %35 ], [ %30, %21 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %36, %class.GURL* dereferenceable(120) %37) #7
  %38 = getelementptr inbounds %class.GURL, %class.GURL* %37, i64 1
  %39 = getelementptr inbounds %class.GURL, %class.GURL* %36, i64 1
  %40 = icmp eq %class.GURL* %38, %31
  br i1 %40, label %41, label %35

41:                                               ; preds = %35
  %42 = ptrtoint %class.GURL* %39 to i64
  br label %43

43:                                               ; preds = %41, %21
  %44 = phi i64 [ %33, %21 ], [ %42, %41 ]
  store i64 %44, i64* %32, align 8
  br label %45

45:                                               ; preds = %2, %43
  %46 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 2
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %46, %"class.url::Origin"* dereferenceable(80) %47) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(112) %"struct.content::PresentationRequest"* @_ZN7content19PresentationRequestaSERKS0_(%"struct.content::PresentationRequest"* returned, %"struct.content::PresentationRequest"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.content::PresentationRequest"* %1 to i64*
  %4 = bitcast %"struct.content::PresentationRequest"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = icmp eq %"struct.content::PresentationRequest"* %0, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %class.GURL*, %class.GURL** %9, align 8
  %11 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = load %class.GURL*, %class.GURL** %11, align 8
  tail call void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"* %8, %class.GURL* %10, %class.GURL* %12) #7
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 2
  %16 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %14, %"class.url::Origin"* dereferenceable(80) %15) #7
  ret %"struct.content::PresentationRequest"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7content19PresentationRequesteqERKS0_(%"struct.content::PresentationRequest"*, %"struct.content::PresentationRequest"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %48

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %48

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 1, i32 0, i32 1
  %18 = bitcast %class.GURL** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 1, i32 0, i32 1
  %24 = bitcast %class.GURL** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector"* %16 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = icmp eq i64 %22, %28
  %30 = inttoptr i64 %21 to %class.GURL*
  %31 = inttoptr i64 %19 to %class.GURL*
  br i1 %29, label %32, label %48

32:                                               ; preds = %14
  %33 = icmp eq %class.GURL* %30, %31
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = inttoptr i64 %27 to %class.GURL*
  br label %36

36:                                               ; preds = %34, %40
  %37 = phi %class.GURL* [ %42, %40 ], [ %35, %34 ]
  %38 = phi %class.GURL* [ %41, %40 ], [ %30, %34 ]
  %39 = tail call zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120) %38, %class.GURL* dereferenceable(120) %37) #7
  br i1 %39, label %40, label %48

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.GURL, %class.GURL* %38, i64 1
  %42 = getelementptr inbounds %class.GURL, %class.GURL* %37, i64 1
  %43 = icmp eq %class.GURL* %41, %31
  br i1 %43, label %44, label %36

44:                                               ; preds = %40, %32
  %45 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %0, i64 0, i32 2
  %46 = getelementptr inbounds %"struct.content::PresentationRequest", %"struct.content::PresentationRequest"* %1, i64 0, i32 2
  %47 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %45, %"class.url::Origin"* dereferenceable(80) %46) #7
  br label %48

48:                                               ; preds = %36, %2, %14, %44, %8
  %49 = phi i1 [ false, %8 ], [ %47, %44 ], [ false, %14 ], [ false, %2 ], [ false, %36 ]
  ret i1 %49
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI4GURLNS_9allocatorIS1_EEE6assignIPS1_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS1_NS_15iterator_traitsIS8_E9referenceEEE5valueEvE4typeES8_S8_(%"class.std::__1::vector"*, %class.GURL*, %class.GURL*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %class.GURL* %2 to i64
  %5 = ptrtoint %class.GURL* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 120
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %class.GURL** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 120
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %class.GURL*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %class.GURL** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 120
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 %22
  %25 = select i1 %23, %class.GURL* %24, %class.GURL* %2
  %26 = icmp eq %class.GURL* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %class.GURL* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %class.GURL* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %28, %class.GURL* dereferenceable(120) %29) #7
  %31 = getelementptr inbounds %class.GURL, %class.GURL* %29, i64 1
  %32 = getelementptr inbounds %class.GURL, %class.GURL* %28, i64 1
  %33 = icmp eq %class.GURL* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %class.GURL* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %class.GURL* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %class.GURL*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %class.GURL* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %class.GURL* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %42, %class.GURL* dereferenceable(120) %43) #7
  %44 = getelementptr inbounds %class.GURL, %class.GURL* %43, i64 1
  %45 = getelementptr inbounds %class.GURL, %class.GURL* %42, i64 1
  %46 = icmp eq %class.GURL* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %class.GURL* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %class.GURL*, %class.GURL** %18, align 8
  %53 = icmp eq %class.GURL* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %class.GURL* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %class.GURL, %class.GURL* %55, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %56) #7
  %57 = icmp eq %class.GURL* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %class.GURL* %35, %class.GURL** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %64 = load %class.GURL*, %class.GURL** %63, align 8
  %65 = icmp eq %class.GURL* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %class.GURL* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %class.GURL, %class.GURL* %67, i64 -1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %68) #7
  %69 = icmp eq %class.GURL* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %class.GURL* %16, %class.GURL** %63, align 8
  tail call void @_ZdlPv(i8* %74) #9
  %75 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #7
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 153722867280912930
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #8
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 120
  %83 = icmp ult i64 %82, 76861433640456465
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 153722867280912930, %81 ]
  %90 = mul i64 %89, 120
  %91 = tail call i8* @_Znwm(i64 %90) #9
  %92 = bitcast i8* %91 to %class.GURL*
  %93 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %class.GURL** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %class.GURL, %class.GURL* %92, i64 %89
  store %class.GURL* %96, %class.GURL** %8, align 8
  %97 = bitcast %class.GURL** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %class.GURL* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %class.GURL* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %class.GURL* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %101, %class.GURL* dereferenceable(120) %102) #7
  %103 = getelementptr inbounds %class.GURL, %class.GURL* %102, i64 1
  %104 = getelementptr inbounds %class.GURL, %class.GURL* %101, i64 1
  %105 = icmp eq %class.GURL* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %class.GURL* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZeqRK4GURLS1_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
