; ModuleID = '../../media/parsers/vp8_bool_decoder.cc'
source_filename = "../../media/parsers/vp8_bool_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::Vp8BoolDecoder" = type { i8*, i8*, i8*, i64, i32, i64 }

@_ZN5mediaL8kVp8NormE = internal unnamed_addr constant <{ [128 x i8], [128 x i8] }> <{ [128 x i8] c"\00\07\06\06\05\05\05\05\04\04\04\04\04\04\04\04\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01", [128 x i8] zeroinitializer }>, align 16

@_ZN5media14Vp8BoolDecoderC1Ev = hidden unnamed_addr alias void (%"class.media::Vp8BoolDecoder"*), void (%"class.media::Vp8BoolDecoder"*)* @_ZN5media14Vp8BoolDecoderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media14Vp8BoolDecoderC2Ev(%"class.media::Vp8BoolDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  store i8* null, i8** %2, align 8
  %3 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %5 = bitcast i8** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  store i32 -8, i32* %4, align 8
  %6 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  store i64 255, i64* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN5media14Vp8BoolDecoder10InitializeEPKhm(%"class.media::Vp8BoolDecoder"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8* %1, null
  %5 = icmp eq i64 %2, 0
  %6 = or i1 %4, %5
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 1
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  store i8* %1, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %1, i64 %2
  %11 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  store i32 -8, i32* %13, align 8
  %14 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  store i64 255, i64* %14, align 8
  br label %15

15:                                               ; preds = %3, %7
  %16 = phi i1 [ true, %7 ], [ false, %3 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media14Vp8BoolDecoder11FillDecoderEv(%"class.media::Vp8BoolDecoder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = sub i32 48, %3
  %5 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %9 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %7, %10
  %12 = shl i64 %11, 3
  %13 = sub i32 56, %3
  %14 = trunc i64 %12 to i32
  %15 = sub i32 %13, %14
  %16 = icmp sgt i32 %15, -1
  %17 = inttoptr i64 %10 to i8*
  br i1 %16, label %18, label %20

18:                                               ; preds = %1
  %19 = add nsw i32 %3, 1073741824
  store i32 %19, i32* %2, align 8
  br label %20

20:                                               ; preds = %18, %1
  %21 = phi i32 [ %19, %18 ], [ %3, %1 ]
  %22 = phi i32 [ %15, %18 ], [ 0, %1 ]
  %23 = icmp eq i64 %12, 0
  %24 = and i1 %16, %23
  %25 = icmp slt i32 %4, %22
  %26 = or i1 %24, %25
  br i1 %26, label %44, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %29 = load i64, i64* %28, align 8
  br label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %29, %27 ], [ %40, %30 ]
  %32 = phi i8* [ %17, %27 ], [ %41, %30 ]
  %33 = phi i32 [ %21, %27 ], [ %35, %30 ]
  %34 = phi i32 [ %4, %27 ], [ %42, %30 ]
  %35 = add nsw i32 %33, 8
  store i32 %35, i32* %2, align 8
  %36 = load i8, i8* %32, align 1
  %37 = zext i8 %36 to i64
  %38 = zext i32 %34 to i64
  %39 = shl i64 %37, %38
  %40 = or i64 %39, %31
  store i64 %40, i64* %28, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 1
  store i8* %41, i8** %8, align 8
  %42 = add nsw i32 %34, -8
  %43 = icmp slt i32 %42, %22
  br i1 %43, label %44, label %30

44:                                               ; preds = %30, %20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN5media14Vp8BoolDecoder7ReadBitEi(%"class.media::Vp8BoolDecoder"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  %6 = sext i32 %1 to i64
  %7 = mul i64 %5, %6
  %8 = lshr i64 %7, 8
  %9 = add nuw nsw i64 %8, 1
  %10 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %54

13:                                               ; preds = %2
  %14 = sub i32 48, %11
  %15 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %19 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = shl i64 %21, 3
  %23 = sub i32 56, %11
  %24 = trunc i64 %22 to i32
  %25 = sub i32 %23, %24
  %26 = icmp sgt i32 %25, -1
  %27 = inttoptr i64 %20 to i8*
  br i1 %26, label %28, label %30

28:                                               ; preds = %13
  %29 = add nsw i32 %11, 1073741824
  store i32 %29, i32* %10, align 8
  br label %30

30:                                               ; preds = %28, %13
  %31 = phi i32 [ %29, %28 ], [ %11, %13 ]
  %32 = phi i32 [ %25, %28 ], [ 0, %13 ]
  %33 = icmp eq i64 %22, 0
  %34 = and i1 %33, %26
  %35 = icmp slt i32 %14, %32
  %36 = or i1 %34, %35
  br i1 %36, label %54, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %39 = load i64, i64* %38, align 8
  br label %40

40:                                               ; preds = %40, %37
  %41 = phi i64 [ %39, %37 ], [ %50, %40 ]
  %42 = phi i8* [ %27, %37 ], [ %51, %40 ]
  %43 = phi i32 [ %31, %37 ], [ %45, %40 ]
  %44 = phi i32 [ %14, %37 ], [ %52, %40 ]
  %45 = add nsw i32 %43, 8
  store i32 %45, i32* %10, align 8
  %46 = load i8, i8* %42, align 1
  %47 = zext i8 %46 to i64
  %48 = zext i32 %44 to i64
  %49 = shl i64 %47, %48
  %50 = or i64 %49, %41
  store i64 %50, i64* %38, align 8
  %51 = getelementptr inbounds i8, i8* %42, i64 1
  store i8* %51, i8** %18, align 8
  %52 = add nsw i32 %44, -8
  %53 = icmp slt i32 %52, %32
  br i1 %53, label %54, label %40

54:                                               ; preds = %40, %30, %2
  %55 = phi i32 [ %31, %30 ], [ %11, %2 ], [ %45, %40 ]
  %56 = shl i64 %9, 56
  %57 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %58 = load i64, i64* %57, align 8
  %59 = icmp ult i64 %58, %56
  br i1 %59, label %63, label %60

60:                                               ; preds = %54
  %61 = sub i64 %4, %9
  store i64 %61, i64* %3, align 8
  %62 = sub i64 %58, %56
  store i64 %62, i64* %57, align 8
  br label %64

63:                                               ; preds = %54
  store i64 %9, i64* %3, align 8
  br label %64

64:                                               ; preds = %63, %60
  %65 = phi i64 [ %62, %60 ], [ %58, %63 ]
  %66 = phi i64 [ %61, %60 ], [ %9, %63 ]
  %67 = phi i32 [ 1, %60 ], [ 0, %63 ]
  %68 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZN5mediaL8kVp8NormE to [256 x i8]*), i64 0, i64 %66
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = shl i64 %66, %70
  store i64 %71, i64* %3, align 8
  %72 = shl i64 %65, %70
  store i64 %72, i64* %57, align 8
  %73 = zext i8 %69 to i32
  %74 = sub i32 %55, %73
  store i32 %74, i32* %10, align 8
  ret i32 %67
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14Vp8BoolDecoder11ReadLiteralEmPi(%"class.media::Vp8BoolDecoder"* nocapture, i64, i32* nocapture) local_unnamed_addr #1 align 2 {
  store i32 0, i32* %2, align 4
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %83, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  %7 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %9 = bitcast i8** %8 to i64*
  %10 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %11 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %12 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  br label %13

13:                                               ; preds = %5, %69
  %14 = phi i32 [ 0, %5 ], [ %80, %69 ]
  %15 = phi i64 [ %1, %5 ], [ %81, %69 ]
  %16 = shl i32 %14, 1
  %17 = load i64, i64* %6, align 8
  %18 = shl i64 %17, 7
  %19 = add i64 %18, -128
  %20 = lshr i64 %19, 8
  %21 = add nuw nsw i64 %20, 1
  %22 = load i32, i32* %7, align 8
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %60

24:                                               ; preds = %13
  %25 = sub i32 48, %22
  %26 = load i64, i64* %9, align 8
  %27 = load i64, i64* %11, align 8
  %28 = sub i64 %26, %27
  %29 = shl i64 %28, 3
  %30 = sub i32 56, %22
  %31 = trunc i64 %29 to i32
  %32 = sub i32 %30, %31
  %33 = icmp sgt i32 %32, -1
  %34 = inttoptr i64 %27 to i8*
  br i1 %33, label %35, label %37

35:                                               ; preds = %24
  %36 = add nsw i32 %22, 1073741824
  store i32 %36, i32* %7, align 8
  br label %37

37:                                               ; preds = %35, %24
  %38 = phi i32 [ %36, %35 ], [ %22, %24 ]
  %39 = phi i32 [ %32, %35 ], [ 0, %24 ]
  %40 = icmp eq i64 %29, 0
  %41 = and i1 %40, %33
  %42 = icmp slt i32 %25, %39
  %43 = or i1 %41, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %37
  %45 = load i64, i64* %12, align 8
  br label %46

46:                                               ; preds = %46, %44
  %47 = phi i64 [ %45, %44 ], [ %56, %46 ]
  %48 = phi i8* [ %34, %44 ], [ %57, %46 ]
  %49 = phi i32 [ %38, %44 ], [ %51, %46 ]
  %50 = phi i32 [ %25, %44 ], [ %58, %46 ]
  %51 = add nsw i32 %49, 8
  store i32 %51, i32* %7, align 8
  %52 = load i8, i8* %48, align 1
  %53 = zext i8 %52 to i64
  %54 = zext i32 %50 to i64
  %55 = shl i64 %53, %54
  %56 = or i64 %55, %47
  store i64 %56, i64* %12, align 8
  %57 = getelementptr inbounds i8, i8* %48, i64 1
  store i8* %57, i8** %10, align 8
  %58 = add nsw i32 %50, -8
  %59 = icmp slt i32 %58, %39
  br i1 %59, label %60, label %46

60:                                               ; preds = %46, %37, %13
  %61 = phi i32 [ %38, %37 ], [ %22, %13 ], [ %51, %46 ]
  %62 = shl i64 %21, 56
  %63 = load i64, i64* %12, align 8
  %64 = icmp ult i64 %63, %62
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = sub i64 %17, %21
  store i64 %66, i64* %6, align 8
  %67 = sub i64 %63, %62
  store i64 %67, i64* %12, align 8
  br label %69

68:                                               ; preds = %60
  store i64 %21, i64* %6, align 8
  br label %69

69:                                               ; preds = %65, %68
  %70 = phi i64 [ %67, %65 ], [ %63, %68 ]
  %71 = phi i64 [ %66, %65 ], [ %21, %68 ]
  %72 = phi i32 [ 1, %65 ], [ 0, %68 ]
  %73 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZN5mediaL8kVp8NormE to [256 x i8]*), i64 0, i64 %71
  %74 = load i8, i8* %73, align 1
  %75 = zext i8 %74 to i64
  %76 = shl i64 %71, %75
  store i64 %76, i64* %6, align 8
  %77 = shl i64 %70, %75
  store i64 %77, i64* %12, align 8
  %78 = zext i8 %74 to i32
  %79 = sub i32 %61, %78
  store i32 %79, i32* %7, align 8
  %80 = or i32 %72, %16
  store i32 %80, i32* %2, align 4
  %81 = add i64 %15, -1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %13

83:                                               ; preds = %69, %3
  %84 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, -65
  %87 = icmp ugt i32 %86, 1073741758
  ret i1 %87
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14Vp8BoolDecoder8ReadBoolEPbh(%"class.media::Vp8BoolDecoder"* nocapture, i8* nocapture, i8 zeroext) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = zext i8 %2 to i64
  %8 = mul i64 %6, %7
  %9 = lshr i64 %8, 8
  %10 = add nuw nsw i64 %9, 1
  %11 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %55

14:                                               ; preds = %3
  %15 = sub i32 48, %12
  %16 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %20 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = shl i64 %22, 3
  %24 = sub i32 56, %12
  %25 = trunc i64 %23 to i32
  %26 = sub i32 %24, %25
  %27 = icmp sgt i32 %26, -1
  %28 = inttoptr i64 %21 to i8*
  br i1 %27, label %29, label %31

29:                                               ; preds = %14
  %30 = add nsw i32 %12, 1073741824
  store i32 %30, i32* %11, align 8
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %12, %14 ]
  %33 = phi i32 [ %26, %29 ], [ 0, %14 ]
  %34 = icmp eq i64 %23, 0
  %35 = and i1 %34, %27
  %36 = icmp slt i32 %15, %33
  %37 = or i1 %35, %36
  br i1 %37, label %55, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  br label %41

41:                                               ; preds = %41, %38
  %42 = phi i64 [ %40, %38 ], [ %51, %41 ]
  %43 = phi i8* [ %28, %38 ], [ %52, %41 ]
  %44 = phi i32 [ %32, %38 ], [ %46, %41 ]
  %45 = phi i32 [ %15, %38 ], [ %53, %41 ]
  %46 = add nsw i32 %44, 8
  store i32 %46, i32* %11, align 8
  %47 = load i8, i8* %43, align 1
  %48 = zext i8 %47 to i64
  %49 = zext i32 %45 to i64
  %50 = shl i64 %48, %49
  %51 = or i64 %50, %42
  store i64 %51, i64* %39, align 8
  %52 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %52, i8** %19, align 8
  %53 = add nsw i32 %45, -8
  %54 = icmp slt i32 %53, %33
  br i1 %54, label %55, label %41

55:                                               ; preds = %41, %31, %3
  %56 = phi i32 [ %32, %31 ], [ %12, %3 ], [ %46, %41 ]
  %57 = shl i64 %10, 56
  %58 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, %57
  br i1 %60, label %64, label %61

61:                                               ; preds = %55
  %62 = sub i64 %5, %10
  store i64 %62, i64* %4, align 8
  %63 = sub i64 %59, %57
  store i64 %63, i64* %58, align 8
  br label %65

64:                                               ; preds = %55
  store i64 %10, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %64
  %66 = phi i64 [ %63, %61 ], [ %59, %64 ]
  %67 = phi i64 [ %62, %61 ], [ %10, %64 ]
  %68 = phi i8 [ 1, %61 ], [ 0, %64 ]
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZN5mediaL8kVp8NormE to [256 x i8]*), i64 0, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl i64 %67, %71
  store i64 %72, i64* %4, align 8
  %73 = shl i64 %66, %71
  store i64 %73, i64* %58, align 8
  %74 = zext i8 %70 to i32
  %75 = sub i32 %56, %74
  store i32 %75, i32* %11, align 8
  store i8 %68, i8* %1, align 1
  %76 = load i32, i32* %11, align 8
  %77 = add i32 %76, -65
  %78 = icmp ugt i32 %77, 1073741758
  ret i1 %78
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14Vp8BoolDecoder8ReadBoolEPb(%"class.media::Vp8BoolDecoder"* nocapture, i8* nocapture) local_unnamed_addr #1 align 2 {
  %3 = tail call zeroext i1 @_ZN5media14Vp8BoolDecoder8ReadBoolEPbh(%"class.media::Vp8BoolDecoder"* %0, i8* %1, i8 zeroext -128)
  ret i1 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5media14Vp8BoolDecoder19ReadLiteralWithSignEmPi(%"class.media::Vp8BoolDecoder"* nocapture, i64, i32* nocapture) local_unnamed_addr #1 align 2 {
  %4 = tail call zeroext i1 @_ZN5media14Vp8BoolDecoder11ReadLiteralEmPi(%"class.media::Vp8BoolDecoder"* %0, i64 %1, i32* %2)
  %5 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = shl i64 %6, 7
  %8 = add i64 %7, -128
  %9 = lshr i64 %8, 8
  %10 = add nuw nsw i64 %9, 1
  %11 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %55

14:                                               ; preds = %3
  %15 = sub i32 48, %12
  %16 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %20 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %18, %21
  %23 = shl i64 %22, 3
  %24 = sub i32 56, %12
  %25 = trunc i64 %23 to i32
  %26 = sub i32 %24, %25
  %27 = icmp sgt i32 %26, -1
  %28 = inttoptr i64 %21 to i8*
  br i1 %27, label %29, label %31

29:                                               ; preds = %14
  %30 = add nsw i32 %12, 1073741824
  store i32 %30, i32* %11, align 8
  br label %31

31:                                               ; preds = %29, %14
  %32 = phi i32 [ %30, %29 ], [ %12, %14 ]
  %33 = phi i32 [ %26, %29 ], [ 0, %14 ]
  %34 = icmp eq i64 %23, 0
  %35 = and i1 %34, %27
  %36 = icmp slt i32 %15, %33
  %37 = or i1 %35, %36
  br i1 %37, label %55, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %40 = load i64, i64* %39, align 8
  br label %41

41:                                               ; preds = %41, %38
  %42 = phi i64 [ %40, %38 ], [ %51, %41 ]
  %43 = phi i8* [ %28, %38 ], [ %52, %41 ]
  %44 = phi i32 [ %32, %38 ], [ %46, %41 ]
  %45 = phi i32 [ %15, %38 ], [ %53, %41 ]
  %46 = add nsw i32 %44, 8
  store i32 %46, i32* %11, align 8
  %47 = load i8, i8* %43, align 1
  %48 = zext i8 %47 to i64
  %49 = zext i32 %45 to i64
  %50 = shl i64 %48, %49
  %51 = or i64 %50, %42
  store i64 %51, i64* %39, align 8
  %52 = getelementptr inbounds i8, i8* %43, i64 1
  store i8* %52, i8** %19, align 8
  %53 = add nsw i32 %45, -8
  %54 = icmp slt i32 %53, %33
  br i1 %54, label %55, label %41

55:                                               ; preds = %41, %31, %3
  %56 = phi i32 [ %32, %31 ], [ %12, %3 ], [ %46, %41 ]
  %57 = shl i64 %10, 56
  %58 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, %57
  br i1 %60, label %64, label %61

61:                                               ; preds = %55
  %62 = sub i64 %6, %10
  store i64 %62, i64* %5, align 8
  %63 = sub i64 %59, %57
  store i64 %63, i64* %58, align 8
  br label %65

64:                                               ; preds = %55
  store i64 %10, i64* %5, align 8
  br label %65

65:                                               ; preds = %61, %64
  %66 = phi i64 [ %63, %61 ], [ %59, %64 ]
  %67 = phi i64 [ %62, %61 ], [ %10, %64 ]
  %68 = phi i1 [ false, %61 ], [ true, %64 ]
  %69 = getelementptr inbounds [256 x i8], [256 x i8]* bitcast (<{ [128 x i8], [128 x i8] }>* @_ZN5mediaL8kVp8NormE to [256 x i8]*), i64 0, i64 %67
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl i64 %67, %71
  store i64 %72, i64* %5, align 8
  %73 = shl i64 %66, %71
  store i64 %73, i64* %58, align 8
  %74 = zext i8 %70 to i32
  %75 = sub i32 %56, %74
  store i32 %75, i32* %11, align 8
  br i1 %68, label %80, label %76

76:                                               ; preds = %65
  %77 = load i32, i32* %2, align 4
  %78 = sub nsw i32 0, %77
  store i32 %78, i32* %2, align 4
  %79 = load i32, i32* %11, align 8
  br label %80

80:                                               ; preds = %65, %76
  %81 = phi i32 [ %75, %65 ], [ %79, %76 ]
  %82 = add i32 %81, -65
  %83 = icmp ugt i32 %82, 1073741758
  ret i1 %83
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5media14Vp8BoolDecoder9BitOffsetEv(%"class.media::Vp8BoolDecoder"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 8
  %5 = icmp sgt i32 %4, 64
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = icmp sgt i32 %3, 1073741816
  %8 = select i1 %7, i32 %3, i32 1073741816
  %9 = add nsw i32 %8, -1073741816
  br label %10

10:                                               ; preds = %6, %1
  %11 = phi i32 [ %9, %6 ], [ %4, %1 ]
  %12 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %13, %16
  %18 = shl nsw i64 %17, 3
  %19 = sext i32 %11 to i64
  %20 = sub nsw i64 %18, %19
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN5media14Vp8BoolDecoder8GetRangeEv(%"class.media::Vp8BoolDecoder"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  %4 = icmp ult i64 %3, 256
  br i1 %4, label %6, label %5, !prof !2

5:                                                ; preds = %1
  tail call void @llvm.trap() #6
  unreachable

6:                                                ; preds = %1
  %7 = trunc i64 %3 to i8
  ret i8 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN5media14Vp8BoolDecoder9GetBottomEv(%"class.media::Vp8BoolDecoder"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %5, label %46

5:                                                ; preds = %1
  %6 = sub i32 48, %3
  %7 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 2
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 0
  %11 = bitcast %"class.media::Vp8BoolDecoder"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %9, %12
  %14 = shl i64 %13, 3
  %15 = sub i32 56, %3
  %16 = trunc i64 %14 to i32
  %17 = sub i32 %15, %16
  %18 = icmp sgt i32 %17, -1
  %19 = inttoptr i64 %12 to i8*
  br i1 %18, label %20, label %22

20:                                               ; preds = %5
  %21 = add nsw i32 %3, 1073741824
  store i32 %21, i32* %2, align 8
  br label %22

22:                                               ; preds = %20, %5
  %23 = phi i32 [ %21, %20 ], [ %3, %5 ]
  %24 = phi i32 [ %17, %20 ], [ 0, %5 ]
  %25 = icmp eq i64 %14, 0
  %26 = and i1 %25, %18
  %27 = icmp slt i32 %6, %24
  %28 = or i1 %26, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %31 = load i64, i64* %30, align 8
  br label %32

32:                                               ; preds = %32, %29
  %33 = phi i64 [ %31, %29 ], [ %42, %32 ]
  %34 = phi i8* [ %19, %29 ], [ %43, %32 ]
  %35 = phi i32 [ %23, %29 ], [ %37, %32 ]
  %36 = phi i32 [ %6, %29 ], [ %44, %32 ]
  %37 = add nsw i32 %35, 8
  store i32 %37, i32* %2, align 8
  %38 = load i8, i8* %34, align 1
  %39 = zext i8 %38 to i64
  %40 = zext i32 %36 to i64
  %41 = shl i64 %39, %40
  %42 = or i64 %41, %33
  store i64 %42, i64* %30, align 8
  %43 = getelementptr inbounds i8, i8* %34, i64 1
  store i8* %43, i8** %10, align 8
  %44 = add nsw i32 %36, -8
  %45 = icmp slt i32 %44, %24
  br i1 %45, label %46, label %32

46:                                               ; preds = %32, %22, %1
  %47 = getelementptr inbounds %"class.media::Vp8BoolDecoder", %"class.media::Vp8BoolDecoder"* %0, i64 0, i32 3
  %48 = load i64, i64* %47, align 8
  %49 = lshr i64 %48, 56
  %50 = trunc i64 %49 to i8
  ret i8 %50
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
