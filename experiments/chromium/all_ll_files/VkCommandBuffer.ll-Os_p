; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkCommandBuffer.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkCommandBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.vk::CommandBuffer" = type { %"class.vk::Device"*, i32, i32, %"class.std::__1::vector.305" }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"*, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.vk::CommandBuffer::Command"* }
%"class.vk::CommandBuffer::Command" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::unique_ptr.307"* }
%"class.vk::Device" = type { %"class.vk::PhysicalDevice"*, %"class.vk::Queue"*, i32, %"class.std::__1::unique_ptr", i32, [256 x i8]*, %struct.VkPhysicalDeviceFeatures, %"class.std::__1::shared_ptr", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.264", %"class.marl::mutex", %"class.std::__1::unordered_set.279" }
%"class.vk::PhysicalDevice" = type opaque
%"class.vk::Queue" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sw::Blitter"* }
%"class.sw::Blitter" = type { i32 (...)**, %"class.marl::mutex", %"class.sw::LRUCache", %"class.marl::mutex", %"class.sw::LRUCache.57" }
%"class.sw::LRUCache" = type { %"class.std::__1::vector", %"class.std::__1::unordered_set", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.39", %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.53", %"class.std::__1::__compressed_pair.55", [4 x i8] }>
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { float }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::BlitData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%"class.sw::LRUCache.57" = type { %"class.std::__1::vector.58", %"class.std::__1::unordered_set.65", %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry"* }
%"class.std::__1::unordered_set.65" = type { %"class.std::__1::__hash_table.66" }
%"class.std::__1::__hash_table.66" = type <{ %"class.std::__1::unique_ptr.67", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.84", [4 x i8] }>
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69", %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base.70"** }
%"struct.std::__1::__hash_node_base.70" = type { %"struct.std::__1::__hash_node_base.70"* }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.std::__1::__bucket_list_deallocator.72" }
%"class.std::__1::__bucket_list_deallocator.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.std::__1::__hash_node_base.70" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.sw::LRUCache<sw::Blitter::State, rr::RoutineT<void (const sw::Blitter::CubeBorderData *)>, std::__1::hash<sw::Blitter::State> >::Entry" = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Scheduler" = type { %"struct.marl::Scheduler::Config", %"struct.std::__1::array", %"struct.std::__1::atomic.89", %"struct.std::__1::atomic.89", %"struct.std::__1::array.94", %"struct.marl::Scheduler::SingleThreadedWorkers" }
%"struct.marl::Scheduler::Config" = type { %"struct.marl::Scheduler::Config::WorkerThread", %"class.marl::Allocator"*, i64 }
%"struct.marl::Scheduler::Config::WorkerThread" = type { i32, %"class.std::__1::function", %"class.std::__1::shared_ptr.87" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.std::__1::shared_ptr.87" = type { %"class.marl::Thread::Affinity::Policy"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Thread::Affinity::Policy" = type { i32 (...)** }
%"class.marl::Allocator" = type { i32 (...)** }
%"struct.std::__1::array" = type { [8 x %"struct.std::__1::atomic"] }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.88" }
%"struct.std::__1::__atomic_base.88" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__atomic_base.91" }
%"struct.std::__1::__atomic_base.91" = type { %"struct.std::__1::__cxx_atomic_impl.92" }
%"struct.std::__1::__cxx_atomic_impl.92" = type { %"struct.std::__1::__cxx_atomic_base_impl.93" }
%"struct.std::__1::__cxx_atomic_base_impl.93" = type { i32 }
%"struct.std::__1::array.94" = type { [256 x %"class.marl::Scheduler::Worker"*] }
%"class.marl::Scheduler::Worker" = type <{ i32, i32, %"class.marl::Scheduler"*, %"class.std::__1::unique_ptr.95", %"class.marl::Scheduler::Fiber"*, %"class.marl::Thread", %"struct.marl::Scheduler::Worker::Work", %"class.std::__1::unordered_set.157", %"class.marl::containers::vector", %"class.marl::Scheduler::Worker::FastRnd", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.marl::Scheduler::Fiber"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.marl::Allocator::Deleter" }
%"struct.marl::Allocator::Deleter" = type { %"class.marl::Allocator"*, i64 }
%"class.marl::Scheduler::Fiber" = type <{ i32, [4 x i8], %"class.std::__1::unique_ptr.98", %"class.marl::Scheduler::Worker"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.marl::OSFiber"* }
%"class.marl::OSFiber" = type opaque
%"class.marl::Thread" = type { %"class.marl::Thread::Impl"* }
%"class.marl::Thread::Impl" = type opaque
%"struct.marl::Scheduler::Worker::Work" = type { %"struct.std::__1::atomic.102", i64, %"class.std::__1::deque", %"class.std::__1::deque.118", %"struct.marl::Scheduler::WaitingFibers", i8, %"class.std::__1::condition_variable", %"class.marl::mutex" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.115" }
%"struct.std::__1::__split_buffer" = type { %"class.marl::Task"**, %"class.marl::Task"**, %"class.marl::Task"**, %"class.std::__1::__compressed_pair.112" }
%"class.marl::Task" = type <{ %"class.std::__1::function.107", i32, [4 x i8] }>
%"class.std::__1::function.107" = type { %"class.std::__1::__function::__policy_func.110" }
%"class.std::__1::__function::__policy_func.110" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.111", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.111" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.marl::Task"** }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.marl::StlAllocator" }
%"struct.marl::StlAllocator" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.marl::StlAllocator.117" }
%"struct.marl::StlAllocator.117" = type { %"class.marl::Allocator"* }
%"class.std::__1::deque.118" = type { %"class.std::__1::__deque_base.119" }
%"class.std::__1::__deque_base.119" = type { %"struct.std::__1::__split_buffer.120", i64, %"class.std::__1::__compressed_pair.125" }
%"struct.std::__1::__split_buffer.120" = type { %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.marl::Scheduler::Fiber"***, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122", %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.marl::Scheduler::Fiber"*** }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.marl::StlAllocator.124" }
%"struct.marl::StlAllocator.124" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.marl::StlAllocator.127" }
%"struct.marl::StlAllocator.127" = type { %"class.marl::Allocator"* }
%"struct.marl::Scheduler::WaitingFibers" = type { %"class.std::__1::set", %"class.std::__1::unordered_map" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.marl::StlAllocator.131" }
%"struct.marl::StlAllocator.131" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.134" }
%"class.std::__1::__hash_table.134" = type <{ %"class.std::__1::unique_ptr.135", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.151", [4 x i8] }>
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137", %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"struct.std::__1::__hash_node_base.138"** }
%"struct.std::__1::__hash_node_base.138" = type { %"struct.std::__1::__hash_node_base.138"* }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::__bucket_list_deallocator.140" }
%"class.std::__1::__bucket_list_deallocator.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.marl::StlAllocator.143" }
%"struct.marl::StlAllocator.143" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145", %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.std::__1::__hash_node_base.138" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.marl::StlAllocator.147" }
%"struct.marl::StlAllocator.147" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.155, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.155 = type { i64 }
%"class.std::__1::unordered_set.157" = type { %"class.std::__1::__hash_table.158" }
%"class.std::__1::__hash_table.158" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.174", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base.162"** }
%"struct.std::__1::__hash_node_base.162" = type { %"struct.std::__1::__hash_node_base.162"* }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.std::__1::__bucket_list_deallocator.164" }
%"class.std::__1::__bucket_list_deallocator.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.marl::StlAllocator.167" }
%"struct.marl::StlAllocator.167" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169", %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base.162" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.marl::StlAllocator.171" }
%"struct.marl::StlAllocator.171" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.marl::containers::vector" = type { %"class.marl::Allocator"*, i64, i64, [16 x %"struct.marl::aligned_storage<24, 8>::type"], %"struct.marl::aligned_storage<24, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"struct.marl::Allocation" = type { i8*, %"struct.marl::Allocation::Request" }
%"struct.marl::Allocation::Request" = type <{ i64, i64, i8, i8, [6 x i8] }>
%"class.marl::Scheduler::Worker::FastRnd" = type { i64 }
%"struct.marl::Scheduler::SingleThreadedWorkers" = type { %"class.marl::mutex", %"class.std::__1::condition_variable", %"class.std::__1::unordered_map.177" }
%"class.std::__1::unordered_map.177" = type { %"class.std::__1::__hash_table.178" }
%"class.std::__1::__hash_table.178" = type <{ %"class.std::__1::unique_ptr.179", %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192", %"class.std::__1::__compressed_pair.197", [4 x i8] }>
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181", %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base.182"** }
%"struct.std::__1::__hash_node_base.182" = type { %"struct.std::__1::__hash_node_base.182"* }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.std::__1::__bucket_list_deallocator.184" }
%"class.std::__1::__bucket_list_deallocator.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.marl::StlAllocator.187" }
%"struct.marl::StlAllocator.187" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189", %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.std::__1::__hash_node_base.182" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.marl::StlAllocator.191" }
%"struct.marl::StlAllocator.191" = type { %"class.marl::Allocator"* }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.vk::Device::SamplingRoutineCache"* }
%"class.vk::Device::SamplingRoutineCache" = type { i8, [7 x i8], %"class.std::__1::unordered_map.206", %"class.marl::mutex", %"class.sw::LRUCache.232" }
%"class.std::__1::unordered_map.206" = type { %"class.std::__1::__hash_table.207" }
%"class.std::__1::__hash_table.207" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.226", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.211"** }
%"struct.std::__1::__hash_node_base.211" = type { %"struct.std::__1::__hash_node_base.211"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator.213" }
%"class.std::__1::__bucket_list_deallocator.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.211" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.sw::LRUCache.232" = type { %"class.std::__1::vector.233", %"class.std::__1::unordered_set.240", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::unordered_set.240" = type { %"class.std::__1::__hash_table.241" }
%"class.std::__1::__hash_table.241" = type <{ %"class.std::__1::unique_ptr.242", %"class.std::__1::__compressed_pair.252", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.259", [4 x i8] }>
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244", %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.245"** }
%"struct.std::__1::__hash_node_base.245" = type { %"struct.std::__1::__hash_node_base.245"* }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::__bucket_list_deallocator.247" }
%"class.std::__1::__bucket_list_deallocator.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.245" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed", %"class.std::__1::shared_ptr.418", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed" = type { %"struct.vk::Device::SamplingRoutineCache::Key" }
%"struct.vk::Device::SamplingRoutineCache::Key" = type { i32, i32, i32 }
%"class.std::__1::shared_ptr.418" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.vk::Device::SamplerIndexer"* }
%"class.vk::Device::SamplerIndexer" = type <{ %"class.marl::mutex", %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.267" }
%"class.std::__1::__tree.267" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set.279" = type { %"class.std::__1::__hash_table.280" }
%"class.std::__1::__hash_table.280" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.284"** }
%"struct.std::__1::__hash_node_base.284" = type { %"struct.std::__1::__hash_node_base.284"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator.286" }
%"class.std::__1::__bucket_list_deallocator.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.284" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%struct.VkCommandBufferInheritanceInfo = type { i32, i8*, %class.VkNonDispatchableHandle.12, i32, %class.VkNonDispatchableHandle.17, i32, i32, i32 }
%"class.vk::RenderPass" = type { i32, %struct.VkAttachmentDescription*, i32, %struct.VkSubpassDescription*, %struct.VkSubpassDescriptionDepthStencilResolve*, i32, %struct.VkSubpassDependency*, i32*, i32*, i32* }
%struct.VkAttachmentDescription = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkSubpassDescription = type { i32, i32, i32, %struct.VkAttachmentReference*, i32, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, %struct.VkAttachmentReference*, i32, i32* }
%struct.VkAttachmentReference = type { i32, i32 }
%struct.VkSubpassDescriptionDepthStencilResolve = type { i32, i8*, i32, i32, %struct.VkAttachmentReference2* }
%struct.VkAttachmentReference2 = type { i32, i8*, i32, i32, i32 }
%struct.VkSubpassDependency = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.vk::Framebuffer" = type <{ i32, [4 x i8], %"class.vk::ImageView"**, %struct.VkExtent3D, [4 x i8] }>
%"class.vk::ImageView" = type <{ %"class.vk::Image"*, i32, %"class.vk::Format", %struct.VkComponentMapping, %struct.VkImageSubresourceRange, [4 x i8], %"class.vk::SamplerYcbcrConversion"*, %"union.vk::Identifier", [4 x i8] }>
%"class.vk::Image" = type { %"class.vk::DeviceMemory"*, %"class.vk::Device"*, i64, i32, i32, %"class.vk::Format", %struct.VkExtent3D, i32, i32, i32, i32, i32, %"class.vk::Image"*, i32, %"class.marl::mutex", %"class.std::__1::unordered_set.324" }
%"class.vk::DeviceMemory" = type opaque
%"class.std::__1::unordered_set.324" = type { %"class.std::__1::__hash_table.325" }
%"class.std::__1::__hash_table.325" = type <{ %"class.std::__1::unique_ptr.326", %"class.std::__1::__compressed_pair.336", %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.343", [4 x i8] }>
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328", %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.std::__1::__hash_node_base.329"** }
%"struct.std::__1::__hash_node_base.329" = type { %"struct.std::__1::__hash_node_base.329"* }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.std::__1::__bucket_list_deallocator.331" }
%"class.std::__1::__bucket_list_deallocator.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.329" }
%"class.std::__1::__compressed_pair.341" = type <{ %"struct.std::__1::__compressed_pair_elem.44", %"struct.std::__1::__compressed_pair_elem.342", [4 x i8] }>
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.vk::Image::Subresource" }
%"class.vk::Image::Subresource" = type { %struct.VkImageSubresource }
%struct.VkImageSubresource = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.vk::Format" = type { i32 }
%struct.VkComponentMapping = type { i32, i32, i32, i32 }
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.vk::SamplerYcbcrConversion" = type { i32, i32, i32, %struct.VkComponentMapping, i32, i32, i32, i32 }
%"union.vk::Identifier" = type { %struct.anon.350 }
%struct.anon.350 = type { i24 }
%struct.VkExtent3D = type { i32, i32, i32 }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%struct.VkRenderPassAttachmentBeginInfo = type { i32, i8*, i32, %class.VkNonDispatchableHandle.7* }
%struct.VkCommandBuffer_T = type opaque
%"class.vk::DispatchableObject" = type { %union.VK_LOADER_DATA, %"class.vk::CommandBuffer" }
%union.VK_LOADER_DATA = type { i64 }
%struct.VkMemoryBarrier = type { i32, i8*, i32, i32 }
%struct.VkBufferMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, %class.VkNonDispatchableHandle, i64, i64 }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %class.VkNonDispatchableHandle.0, %struct.VkImageSubresourceRange }
%"class.vk::Pipeline" = type <{ i32 (...)**, %"class.vk::PipelineLayout"*, %"class.vk::Device"*, i8, [7 x i8] }>
%"class.vk::PipelineLayout" = type <{ i32, [4 x i8], [4 x %"struct.vk::PipelineLayout::DescriptorSet"], i32, i32, %struct.VkPushConstantRange*, %"struct.std::__1::atomic.89", [4 x i8] }>
%"struct.vk::PipelineLayout::DescriptorSet" = type { %"struct.vk::PipelineLayout::Binding"*, i32 }
%"struct.vk::PipelineLayout::Binding" = type { i32, i32, i32, i32 }
%struct.VkPushConstantRange = type { i32, i32, i32 }
%"class.vk::QueryPool" = type { %"class.vk::Query"*, i32, i32 }
%"class.vk::Query" = type { %"class.marl::WaitGroup", %"class.marl::Event", %"struct.std::__1::atomic.360", %"struct.std::__1::atomic.364", %"struct.std::__1::atomic.368" }
%"class.marl::WaitGroup" = type { %"class.std::__1::shared_ptr.357" }
%"class.std::__1::shared_ptr.357" = type { %"struct.marl::WaitGroup::Data"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::WaitGroup::Data" = type { %"struct.std::__1::atomic.89", %"class.marl::ConditionVariable", %"class.marl::mutex" }
%"class.marl::ConditionVariable" = type { %"class.marl::mutex", %"class.marl::containers::list", %"class.std::__1::condition_variable", %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.marl::containers::list" = type { %"class.marl::Allocator"*, i64, i64, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain" = type { %"struct.marl::Allocation", %"struct.marl::containers::list<marl::Scheduler::Fiber *>::AllocationChain"* }
%"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry" = type { %"class.marl::Scheduler::Fiber"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"*, %"struct.marl::containers::list<marl::Scheduler::Fiber *>::Entry"* }
%"class.marl::Event" = type { %"class.std::__1::shared_ptr.358" }
%"class.std::__1::shared_ptr.358" = type { %"struct.marl::Event::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Event::Shared" = type <{ %"class.marl::mutex", %"class.marl::ConditionVariable", %"class.marl::containers::vector.359", i8, i8, [6 x i8] }>
%"class.marl::containers::vector.359" = type { %"class.marl::Allocator"*, i64, i64, [1 x %"struct.marl::aligned_storage<16, 8>::type"], %"struct.marl::aligned_storage<16, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<16, 8>::type" = type { [16 x i8] }
%"struct.std::__1::atomic.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__cxx_atomic_impl.362" }
%"struct.std::__1::__cxx_atomic_impl.362" = type { %"struct.std::__1::__cxx_atomic_base_impl.363" }
%"struct.std::__1::__cxx_atomic_base_impl.363" = type { i32 }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i32 }
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i64 }
%"class.vk::Buffer" = type <{ i8*, i32, [4 x i8], i64, i32, i32, i32, [4 x i8], i32*, i32, [4 x i8] }>
%struct.VkViewport = type { float, float, float, float, float, float }
%struct.VkRect2D = type { %struct.VkOffset2D, %struct.VkExtent2D }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%"class.(anonymous namespace)::CmdBindDescriptorSets" = type { %"class.vk::CommandBuffer::Command", i32, i32, i32, i32, i32, %"struct.std::__1::array.427", %"struct.std::__1::array.422", %"struct.std::__1::array.423" }
%"struct.std::__1::array.427" = type { [4 x %"class.vk::DescriptorSet"*] }
%"class.vk::DescriptorSet" = type <{ %"struct.vk::DescriptorSetHeader", [1 x i8], [15 x i8] }>
%"struct.vk::DescriptorSetHeader" = type { %"class.vk::DescriptorSetLayout"*, %"class.marl::mutex" }
%"class.vk::DescriptorSetLayout" = type { i32, i32, %"struct.vk::DescriptorSetLayout::Binding"* }
%"struct.vk::DescriptorSetLayout::Binding" = type { i32, i32, %"class.vk::Sampler"**, i32 }
%"class.vk::Sampler" = type { %"struct.vk::SamplerState.base", i32 }
%"struct.vk::SamplerState.base" = type <{ i32, i32, i32, i32, i32, i32, float, i32, float, i32, i32, float, float, i32, i32, i32, i32, i8, i8 }>
%"struct.std::__1::array.422" = type { [4 x i8*] }
%"struct.std::__1::array.423" = type { [12 x i32] }
%struct.VkBufferCopy = type { i64, i64, i64 }
%struct.VkImageCopy = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%struct.VkImageSubresourceLayers = type { i32, i32, i32, i32 }
%struct.VkOffset3D = type { i32, i32, i32 }
%struct.VkImageBlit = type { %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D], %struct.VkImageSubresourceLayers, [2 x %struct.VkOffset3D] }
%struct.VkBufferImageCopy = type { i64, i32, i32, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.std::__1::vector.945" = type { %"class.std::__1::__vector_base.946" }
%"class.std::__1::__vector_base.946" = type { i8*, i8*, %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { i8* }
%struct.VkClearDepthStencilValue = type { float, i32 }
%struct.VkClearAttachment = type { i32, i32, %union.VkClearValue }
%struct.VkClearRect = type { %struct.VkRect2D, i32, i32 }
%struct.VkImageResolve = type { %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkImageSubresourceLayers, %struct.VkOffset3D, %struct.VkExtent3D }
%"class.vk::Event" = type { %"class.marl::mutex", i32, %"class.std::__1::condition_variable" }
%struct.VkDebugUtilsLabelEXT = type { i32, i8*, i8*, [4 x float] }
%"struct.vk::CommandBuffer::ExecutionState" = type { %"class.sw::Renderer"*, %"class.sw::CountedEvent"*, %"class.vk::RenderPass"*, %"class.vk::Framebuffer"*, %"struct.std::__1::array.426", %"struct.vk::DynamicState", %"struct.vk::Pipeline::PushConstantStorage", [16 x %"struct.vk::VertexInputBinding"], %"struct.vk::VertexInputBinding", i32, i32, [8 x i8] }
%"class.sw::Renderer" = type { i32 (...)**, %"class.marl::BoundedPool", %"class.marl::BoundedPool.376", %"struct.std::__1::atomic", %"class.vk::Query"*, %"class.marl::Ticket::Queue", [16 x %"class.marl::Ticket::Queue"], %"class.sw::VertexProcessor", [8 x i8], %"class.sw::PixelProcessor", %"class.sw::SetupProcessor", %"struct.sw::VertexProcessor::State", %"struct.sw::SetupProcessor::State", [4 x i8], %"struct.sw::PixelProcessor::State", %"class.rr::RoutineT", %"class.rr::RoutineT.424", %"class.rr::RoutineT.425", %"class.vk::Device"* }
%"class.marl::BoundedPool" = type { %"class.std::__1::shared_ptr.375" }
%"class.std::__1::shared_ptr.375" = type { %"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"class.marl::BoundedPool.376" = type { %"class.std::__1::shared_ptr.379" }
%"class.std::__1::shared_ptr.379" = type { %"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::BoundedPool<sw::DrawCall::BatchData, 16, marl::PoolPolicy::Preserve>::Storage" = type opaque
%"class.marl::Ticket::Queue" = type { %"class.std::__1::shared_ptr.380", %"class.marl::UnboundedPool" }
%"class.std::__1::shared_ptr.380" = type { %"struct.marl::Ticket::Shared"*, %"class.std::__1::__shared_weak_count"* }
%"struct.marl::Ticket::Shared" = type { %"class.marl::mutex", %"struct.marl::Ticket::Record" }
%"struct.marl::Ticket::Record" = type <{ %"class.marl::ConditionVariable", %"class.std::__1::shared_ptr.380", %"struct.marl::Ticket::Record"*, %"struct.marl::Ticket::Record"*, %"class.std::__1::function.107", i8, %"struct.std::__1::atomic.436", [6 x i8] }>
%"struct.std::__1::atomic.436" = type { %"struct.std::__1::__atomic_base.437" }
%"struct.std::__1::__atomic_base.437" = type { %"struct.std::__1::__cxx_atomic_impl.438" }
%"struct.std::__1::__cxx_atomic_impl.438" = type { %"struct.std::__1::__cxx_atomic_base_impl.439" }
%"struct.std::__1::__cxx_atomic_base_impl.439" = type { i8 }
%"class.marl::UnboundedPool" = type { %"class.marl::Allocator"*, %"class.std::__1::shared_ptr.383" }
%"class.std::__1::shared_ptr.383" = type { %"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::UnboundedPool<marl::Ticket::Record, marl::PoolPolicy::Reconstruct>::Storage" = type { %"class.marl::Pool<marl::Ticket::Record>::Storage", %"class.marl::Allocator"*, %"class.marl::mutex", %"class.marl::containers::vector.441", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"class.marl::Pool<marl::Ticket::Record>::Storage" = type { i32 (...)** }
%"class.marl::containers::vector.441" = type { %"class.marl::Allocator"*, i64, i64, [4 x %"struct.marl::aligned_storage<8, 8>::type"], %"struct.marl::aligned_storage<8, 8>::type"*, %"struct.marl::Allocation" }
%"struct.marl::aligned_storage<8, 8>::type" = type { [8 x i8] }
%"struct.marl::Pool<marl::Ticket::Record>::Item" = type { %"struct.marl::aligned_storage<216, 8>::type", %"struct.std::__1::atomic", %"struct.marl::Pool<marl::Ticket::Record>::Item"* }
%"struct.marl::aligned_storage<216, 8>::type" = type { [216 x i8] }
%"class.sw::VertexProcessor" = type { %"class.std::__1::unique_ptr.384" }
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.sw::LRUCache.387"* }
%"class.sw::LRUCache.387" = type opaque
%"class.sw::PixelProcessor" = type { %"struct.sw::PixelProcessor::Factor", %"class.std::__1::unique_ptr.396", [8 x i8] }
%"struct.sw::PixelProcessor::Factor" = type { %"struct.sw::vec", [4 x %"struct.sw::vec"], [8 x i8], [4 x %"struct.sw::vec.393"], [4 x %"struct.sw::vec"], [4 x %"struct.sw::vec.393"] }
%"struct.sw::vec" = type { %union.anon.391 }
%union.anon.391 = type { [4 x i16] }
%"struct.sw::vec.393" = type { %union.anon.394 }
%union.anon.394 = type { [4 x float] }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.sw::LRUCache.399"* }
%"class.sw::LRUCache.399" = type opaque
%"class.sw::SetupProcessor" = type { %"class.std::__1::unique_ptr.403" }
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"class.sw::LRUCache.406"* }
%"class.sw::LRUCache.406" = type opaque
%"struct.sw::VertexProcessor::State" = type { %"struct.sw::VertexProcessor::States.base", i32, [4 x i8] }
%"struct.sw::VertexProcessor::States.base" = type <{ i64, i32, [32 x %"struct.sw::VertexProcessor::States::Input"], i8 }>
%"struct.sw::VertexProcessor::States::Input" = type { i32, i8 }
%"struct.sw::SetupProcessor::State" = type { %"struct.sw::SetupProcessor::States.base", i32 }
%"struct.sw::SetupProcessor::States.base" = type <{ i16, [2 x i8], i32, i32, i16, [128 x %"struct.sw::SpirvShader::InterfaceComponent"] }>
%"struct.sw::SpirvShader::InterfaceComponent" = type { i8, %union.anon.412 }
%union.anon.412 = type { %struct.anon.413 }
%struct.anon.413 = type { i8 }
%"struct.sw::PixelProcessor::State" = type <{ %"struct.sw::PixelProcessor::States", i32, [4 x i8] }>
%"struct.sw::PixelProcessor::States" = type { i64, i32, i32, i32, i32, i8, i8, %"struct.sw::PixelProcessor::States::StencilOpState", %"struct.sw::PixelProcessor::States::StencilOpState", i8, i8, i8, i8, [8 x %"struct.vk::BlendState"], i32, [8 x %"class.vk::Format"], i32, i32, i8, i8, i8, i8, float, float, float, i32, %"class.vk::Format", i8, i8, float, float }
%"struct.sw::PixelProcessor::States::StencilOpState" = type { i32, i32, i32, i32, i32, i32 }
%"struct.vk::BlendState" = type { i8, i32, i32, i32, i32, i32, i32 }
%"class.rr::RoutineT" = type { %"class.std::__1::shared_ptr.418", void (%"struct.sw::Vertex"*, i32*, %"struct.sw::VertexTask"*, %"struct.sw::DrawData"*)* }
%"struct.sw::Vertex" = type { %union.anon.419, float, i32, i32, [8 x float], [8 x float], [4 x i8], %struct.anon.421, [128 x float] }
%union.anon.419 = type { %struct.anon.420 }
%struct.anon.420 = type { float, float, float, float }
%struct.anon.421 = type { i32, i32, float, float }
%"struct.sw::VertexTask" = type { i32, i32, [8 x i8], %"struct.sw::VertexCache" }
%"struct.sw::VertexCache" = type { [64 x %"struct.sw::Vertex"], [64 x i32], i32, [12 x i8] }
%"struct.sw::DrawData" = type { %"struct.sw::Constants"*, %"struct.std::__1::array.422", %"struct.std::__1::array.423", [32 x i8*], [32 x i32], [32 x i32], i8*, i32, i32, float, i32, [2 x %"struct.sw::PixelProcessor::Stencil"], %"struct.sw::PixelProcessor::Factor", [16 x i32], %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", float, float, float, float, float, float, float, i8, [8 x i32*], [8 x i32], [8 x i32], float*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.vk::Pipeline::PushConstantStorage" }
%"struct.sw::Constants" = type opaque
%"struct.sw::PixelProcessor::Stencil" = type { i64, i64, i64, i64, i64, i64 }
%"class.rr::RoutineT.424" = type { %"class.std::__1::shared_ptr.418", i32 (%"struct.sw::Primitive"*, %"struct.sw::Triangle"*, %"struct.sw::Polygon"*, %"struct.sw::DrawData"*)* }
%"struct.sw::Primitive" = type { i32, i32, [8 x i8], %"struct.sw::vec.393", %"struct.sw::vec.393", float, float, float, [4 x i8], %"struct.sw::PlaneEquation", %"struct.sw::vec.393", %"struct.sw::PlaneEquation", [128 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], [8 x %"struct.sw::PlaneEquation"], i64, i64, [2 x %"struct.sw::Primitive::Span"], [8192 x %"struct.sw::Primitive::Span"], [2 x %"struct.sw::Primitive::Span"] }
%"struct.sw::PlaneEquation" = type { %"struct.sw::vec.393", %"struct.sw::vec.393", %"struct.sw::vec.393" }
%"struct.sw::Primitive::Span" = type { i16, i16 }
%"struct.sw::Triangle" = type { %"struct.sw::Vertex", %"struct.sw::Vertex", %"struct.sw::Vertex" }
%"struct.sw::Polygon" = type opaque
%"class.rr::RoutineT.425" = type { %"class.std::__1::shared_ptr.418", void (%"struct.sw::Primitive"*, i32, i32, i32, %"struct.sw::DrawData"*)* }
%"class.sw::CountedEvent" = type { %"class.marl::WaitGroup", %"class.marl::Event" }
%"struct.std::__1::array.426" = type { [2 x %"struct.vk::CommandBuffer::ExecutionState::PipelineState"] }
%"struct.vk::CommandBuffer::ExecutionState::PipelineState" = type { %"class.vk::Pipeline"*, %"struct.std::__1::array.427", %"struct.std::__1::array.422", %"struct.std::__1::array.423" }
%"struct.vk::DynamicState" = type { %struct.VkViewport, %struct.VkRect2D, [8 x i8], %"struct.sw::vec.393", float, float, float, float, float, [2 x i32], [2 x i32], [2 x i32], [4 x i8] }
%"struct.vk::Pipeline::PushConstantStorage" = type { [128 x i8] }
%"struct.vk::VertexInputBinding" = type { %"class.vk::Buffer"*, i64 }
%"struct.vk::Attachments" = type { [8 x %"class.vk::ImageView"*], %"class.vk::ImageView"*, %"class.vk::ImageView"* }
%"struct.std::__1::__split_buffer.448" = type { %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"*, %"class.std::__1::__compressed_pair.449" }
%"class.std::__1::__compressed_pair.449" = type { %"struct.std::__1::__compressed_pair_elem.314", %"struct.std::__1::__compressed_pair_elem.450" }
%"struct.std::__1::__compressed_pair_elem.450" = type { %"class.std::__1::allocator.316"* }
%"class.std::__1::allocator.316" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.(anonymous namespace)::CmdBeginRenderPass" = type { %"class.vk::CommandBuffer::Command", %"class.vk::RenderPass"*, %"class.vk::Framebuffer"*, %struct.VkRect2D, i32, %union.VkClearValue* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.453 }
%union.anon.453 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.454 }
%struct.anon.454 = type { i8 }
%"class.(anonymous namespace)::CmdNextSubpass" = type { %"class.vk::CommandBuffer::Command" }
%"class.(anonymous namespace)::CmdEndRenderPass" = type { %"class.vk::CommandBuffer::Command" }
%"class.(anonymous namespace)::CmdExecuteCommands" = type { %"class.vk::CommandBuffer::Command", %"class.vk::CommandBuffer"* }
%"class.(anonymous namespace)::CmdDispatch" = type { %"class.vk::CommandBuffer::Command", i32, i32, i32, i32, i32, i32 }
%"class.vk::ComputePipeline" = type { %"class.vk::Pipeline.base", %"class.std::__1::shared_ptr.483", %"class.std::__1::shared_ptr.791" }
%"class.vk::Pipeline.base" = type <{ i32 (...)**, %"class.vk::PipelineLayout"*, %"class.vk::Device"*, i8 }>
%"class.std::__1::shared_ptr.483" = type { %"class.sw::SpirvShader"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::SpirvShader" = type { %"class.std::__1::vector.484", %"class.std::__1::unordered_map.491", %"class.std::__1::unordered_map.518", %"class.std::__1::unordered_map.545", %"class.std::__1::vector.572", %"class.std::__1::vector.579", %"class.std::__1::vector.579", %"class.std::__1::unordered_map.586", %"class.std::__1::unordered_map.586", %"struct.sw::SpirvShader::WorkgroupMemory", i32, %"struct.sw::SpirvShader::Modes", %"struct.sw::SpirvShader::Capabilities", %"class.std::__1::unordered_map.638", %"class.std::__1::unordered_map.662", %"class.std::__1::unordered_map.686", %"class.std::__1::unordered_map.713", %"class.std::__1::unordered_map.740", %"class.std::__1::unordered_set.767", %"class.sw::SpirvID", i8, i8, i32, %"struct.sw::SpirvShader::Impl" }
%"class.std::__1::vector.484" = type { %"class.std::__1::__vector_base.485" }
%"class.std::__1::__vector_base.485" = type { i32*, i32*, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { i32* }
%"class.std::__1::unordered_map.491" = type { %"class.std::__1::__hash_table.492" }
%"class.std::__1::__hash_table.492" = type <{ %"class.std::__1::unique_ptr.493", %"class.std::__1::__compressed_pair.503", %"class.std::__1::__compressed_pair.508", %"class.std::__1::__compressed_pair.512", [4 x i8] }>
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495", %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"struct.std::__1::__hash_node_base.496"** }
%"struct.std::__1::__hash_node_base.496" = type { %"struct.std::__1::__hash_node_base.496"* }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.std::__1::__bucket_list_deallocator.498" }
%"class.std::__1::__bucket_list_deallocator.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.std::__1::__hash_node_base.496" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.518" = type { %"class.std::__1::__hash_table.519" }
%"class.std::__1::__hash_table.519" = type <{ %"class.std::__1::unique_ptr.520", %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.535", %"class.std::__1::__compressed_pair.539", [4 x i8] }>
%"class.std::__1::unique_ptr.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522", %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::__hash_node_base.523"** }
%"struct.std::__1::__hash_node_base.523" = type { %"struct.std::__1::__hash_node_base.523"* }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.std::__1::__bucket_list_deallocator.525" }
%"class.std::__1::__bucket_list_deallocator.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base.523" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.545" = type { %"class.std::__1::__hash_table.546" }
%"class.std::__1::__hash_table.546" = type <{ %"class.std::__1::unique_ptr.547", %"class.std::__1::__compressed_pair.557", %"class.std::__1::__compressed_pair.562", %"class.std::__1::__compressed_pair.566", [4 x i8] }>
%"class.std::__1::unique_ptr.547" = type { %"class.std::__1::__compressed_pair.548" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.549", %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.549" = type { %"struct.std::__1::__hash_node_base.550"** }
%"struct.std::__1::__hash_node_base.550" = type { %"struct.std::__1::__hash_node_base.550"* }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.std::__1::__bucket_list_deallocator.552" }
%"class.std::__1::__bucket_list_deallocator.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.550" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::vector.572" = type { %"class.std::__1::__vector_base.573" }
%"class.std::__1::__vector_base.573" = type { i32*, i32*, %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.575" }
%"struct.std::__1::__compressed_pair_elem.575" = type { i32* }
%"class.std::__1::vector.579" = type { %"class.std::__1::__vector_base.580" }
%"class.std::__1::__vector_base.580" = type { %"struct.sw::SpirvShader::InterfaceComponent"*, %"struct.sw::SpirvShader::InterfaceComponent"*, %"class.std::__1::__compressed_pair.581" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.582" }
%"struct.std::__1::__compressed_pair_elem.582" = type { %"struct.sw::SpirvShader::InterfaceComponent"* }
%"class.std::__1::unordered_map.586" = type { %"class.std::__1::__hash_table.587" }
%"class.std::__1::__hash_table.587" = type <{ %"class.std::__1::unique_ptr.588", %"class.std::__1::__compressed_pair.598", %"class.std::__1::__compressed_pair.603", %"class.std::__1::__compressed_pair.608", [4 x i8] }>
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590", %"struct.std::__1::__compressed_pair_elem.592" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"struct.std::__1::__hash_node_base.591"** }
%"struct.std::__1::__hash_node_base.591" = type { %"struct.std::__1::__hash_node_base.591"* }
%"struct.std::__1::__compressed_pair_elem.592" = type { %"class.std::__1::__bucket_list_deallocator.593" }
%"class.std::__1::__bucket_list_deallocator.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::__hash_node_base.591" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.sw::SpirvShader::WorkgroupMemory" = type { i32, [4 x i8], %"class.std::__1::unordered_map.614" }
%"class.std::__1::unordered_map.614" = type { %"class.std::__1::__hash_table.615" }
%"class.std::__1::__hash_table.615" = type <{ %"class.std::__1::unique_ptr.616", %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.631", %"class.std::__1::__compressed_pair.634", [4 x i8] }>
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.619"** }
%"struct.std::__1::__hash_node_base.619" = type { %"struct.std::__1::__hash_node_base.619"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.std::__1::__bucket_list_deallocator.621" }
%"class.std::__1::__bucket_list_deallocator.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"struct.std::__1::__hash_node_base.619" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.sw::SpirvShader::Modes" = type { i16, i32, i32, i32 }
%"struct.sw::SpirvShader::Capabilities" = type { i32 }
%"class.std::__1::unordered_map.638" = type { %"class.std::__1::__hash_table.639" }
%"class.std::__1::__hash_table.639" = type <{ %"class.std::__1::unique_ptr.640", %"class.std::__1::__compressed_pair.650", %"class.std::__1::__compressed_pair.655", %"class.std::__1::__compressed_pair.658", [4 x i8] }>
%"class.std::__1::unique_ptr.640" = type { %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.642", %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"struct.std::__1::__hash_node_base.643"** }
%"struct.std::__1::__hash_node_base.643" = type { %"struct.std::__1::__hash_node_base.643"* }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.std::__1::__bucket_list_deallocator.645" }
%"class.std::__1::__bucket_list_deallocator.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"struct.std::__1::__hash_node_base.643" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.662" = type { %"class.std::__1::__hash_table.663" }
%"class.std::__1::__hash_table.663" = type <{ %"class.std::__1::unique_ptr.664", %"class.std::__1::__compressed_pair.674", %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.682", [4 x i8] }>
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666", %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"struct.std::__1::__hash_node_base.667"** }
%"struct.std::__1::__hash_node_base.667" = type { %"struct.std::__1::__hash_node_base.667"* }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.std::__1::__bucket_list_deallocator.669" }
%"class.std::__1::__bucket_list_deallocator.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"struct.std::__1::__hash_node_base.667" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.686" = type { %"class.std::__1::__hash_table.687" }
%"class.std::__1::__hash_table.687" = type <{ %"class.std::__1::unique_ptr.688", %"class.std::__1::__compressed_pair.698", %"class.std::__1::__compressed_pair.703", %"class.std::__1::__compressed_pair.707", [4 x i8] }>
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690", %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"struct.std::__1::__hash_node_base.691"** }
%"struct.std::__1::__hash_node_base.691" = type { %"struct.std::__1::__hash_node_base.691"* }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.std::__1::__bucket_list_deallocator.693" }
%"class.std::__1::__bucket_list_deallocator.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"struct.std::__1::__hash_node_base.691" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.713" = type { %"class.std::__1::__hash_table.714" }
%"class.std::__1::__hash_table.714" = type <{ %"class.std::__1::unique_ptr.715", %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734", [4 x i8] }>
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717", %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"struct.std::__1::__hash_node_base.718"** }
%"struct.std::__1::__hash_node_base.718" = type { %"struct.std::__1::__hash_node_base.718"* }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.std::__1::__bucket_list_deallocator.720" }
%"class.std::__1::__bucket_list_deallocator.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"struct.std::__1::__hash_node_base.718" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_map.740" = type { %"class.std::__1::__hash_table.741" }
%"class.std::__1::__hash_table.741" = type <{ %"class.std::__1::unique_ptr.742", %"class.std::__1::__compressed_pair.752", %"class.std::__1::__compressed_pair.757", %"class.std::__1::__compressed_pair.761", [4 x i8] }>
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744", %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::__hash_node_base.745"** }
%"struct.std::__1::__hash_node_base.745" = type { %"struct.std::__1::__hash_node_base.745"* }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.std::__1::__bucket_list_deallocator.747" }
%"class.std::__1::__bucket_list_deallocator.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"struct.std::__1::__hash_node_base.745" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.std::__1::unordered_set.767" = type { %"class.std::__1::__hash_table.768" }
%"class.std::__1::__hash_table.768" = type <{ %"class.std::__1::unique_ptr.769", %"class.std::__1::__compressed_pair.779", %"class.std::__1::__compressed_pair.784", %"class.std::__1::__compressed_pair.786", [4 x i8] }>
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771", %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"struct.std::__1::__hash_node_base.772"** }
%"struct.std::__1::__hash_node_base.772" = type { %"struct.std::__1::__hash_node_base.772"* }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.std::__1::__bucket_list_deallocator.774" }
%"class.std::__1::__bucket_list_deallocator.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"struct.std::__1::__hash_node_base.772" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"class.sw::SpirvID" = type { i32 }
%"struct.sw::SpirvShader::Impl" = type { %"struct.sw::SpirvShader::Impl::Debugger"* }
%"struct.sw::SpirvShader::Impl::Debugger" = type opaque
%"class.std::__1::shared_ptr.791" = type { %"class.sw::ComputeProgram"*, %"class.std::__1::__shared_weak_count"* }
%"class.sw::ComputeProgram" = type opaque
%"class.(anonymous namespace)::CmdPipelineBarrier" = type { %"class.vk::CommandBuffer::Command" }
%"class.(anonymous namespace)::CmdPipelineBind" = type { %"class.vk::CommandBuffer::Command", i32, %"class.vk::Pipeline"* }
%"class.(anonymous namespace)::CmdVertexBufferBind" = type { %"class.vk::CommandBuffer::Command", i32, %"class.vk::Buffer"*, i64 }
%"class.(anonymous namespace)::CmdBeginQuery" = type { %"class.vk::CommandBuffer::Command", %"class.vk::QueryPool"*, i32, i32 }
%"class.(anonymous namespace)::CmdEndQuery" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::QueryPool"*, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdResetQueryPool" = type { %"class.vk::CommandBuffer::Command", %"class.vk::QueryPool"*, i32, i32 }
%"class.(anonymous namespace)::CmdWriteTimeStamp" = type { %"class.vk::CommandBuffer::Command", %"class.vk::QueryPool"*, i32, i32 }
%"class.(anonymous namespace)::CmdCopyQueryPoolResults" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::QueryPool"*, i32, i32, %"class.vk::Buffer"*, i64, i64, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdSetPushConstants" = type { %"class.vk::CommandBuffer::Command", i32, i32, [128 x i8] }
%"class.(anonymous namespace)::CmdSetViewport" = type <{ %"class.vk::CommandBuffer::Command", %struct.VkViewport, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdSetScissor" = type <{ %"class.vk::CommandBuffer::Command", %struct.VkRect2D, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdSetDepthBias" = type <{ %"class.vk::CommandBuffer::Command", float, float, float, [4 x i8] }>
%"class.(anonymous namespace)::CmdSetBlendConstants" = type { %"class.vk::CommandBuffer::Command", [4 x float] }
%"class.(anonymous namespace)::CmdSetDepthBounds" = type { %"class.vk::CommandBuffer::Command", float, float }
%"class.(anonymous namespace)::CmdSetStencilCompareMask" = type { %"class.vk::CommandBuffer::Command", i32, i32 }
%"class.(anonymous namespace)::CmdSetStencilWriteMask" = type { %"class.vk::CommandBuffer::Command", i32, i32 }
%"class.(anonymous namespace)::CmdSetStencilReference" = type { %"class.vk::CommandBuffer::Command", i32, i32 }
%"class.(anonymous namespace)::CmdIndexBufferBind" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, i64, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdDispatchIndirect" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, i64 }
%"class.(anonymous namespace)::CmdCopyBuffer" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, %"class.vk::Buffer"*, %struct.VkBufferCopy }
%"class.(anonymous namespace)::CmdCopyImage" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageCopy, [4 x i8] }>
%"class.(anonymous namespace)::CmdBlitImage" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageBlit, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdCopyBufferToImage" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, %"class.vk::Image"*, %struct.VkBufferImageCopy }
%"class.(anonymous namespace)::CmdCopyImageToBuffer" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy }
%"class.(anonymous namespace)::CmdUpdateBuffer" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, i64, %"class.std::__1::vector.945" }
%"class.(anonymous namespace)::CmdFillBuffer" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Buffer"*, i64, i64, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdClearColorImage" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %union.VkClearColorValue, %struct.VkImageSubresourceRange, [4 x i8] }>
%"class.(anonymous namespace)::CmdClearDepthStencilImage" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %struct.VkClearDepthStencilValue, %struct.VkImageSubresourceRange, [4 x i8] }>
%"class.(anonymous namespace)::CmdClearAttachment" = type { %"class.vk::CommandBuffer::Command", %struct.VkClearAttachment, %struct.VkClearRect }
%"class.(anonymous namespace)::CmdResolveImage" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageResolve, [4 x i8] }>
%"class.(anonymous namespace)::CmdSignalEvent" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Event"*, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdResetEvent" = type <{ %"class.vk::CommandBuffer::Command", %"class.vk::Event"*, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdWaitEvent" = type { %"class.vk::CommandBuffer::Command", %"class.vk::Event"* }
%"class.marl::lock" = type { %"class.std::__1::unique_lock" }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.(anonymous namespace)::CmdDraw" = type { %"class.(anonymous namespace)::CmdDrawBase", i32, i32, i32, i32 }
%"class.(anonymous namespace)::CmdDrawBase" = type { %"class.vk::CommandBuffer::Command" }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1012" }
%"struct.std::__1::pair" = type { i32, i8* }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::pair"* }
%"class.vk::GraphicsPipeline" = type { %"class.vk::Pipeline.base", %"class.std::__1::shared_ptr.483", %"class.std::__1::shared_ptr.483", %"struct.vk::GraphicsState", %"struct.vk::IndexBuffer", %"struct.vk::Attachments", %"struct.vk::Inputs", [8 x i8] }
%"struct.vk::GraphicsState" = type { %"class.vk::PipelineLayout"*, i8, i32, i32, i32, i8, %struct.VkStencilOpState, %struct.VkStencilOpState, i32, i32, i32, i32, float, float, float, float, float, i8, i8, i8, i8, i32, i8, i8, i8, float, [8 x i32], i32, i32, i8, i8, float, i8, %struct.VkRect2D, %struct.VkViewport, [12 x i8], %"struct.sw::vec.393", [8 x %"struct.vk::BlendState"] }
%struct.VkStencilOpState = type { i32, i32, i32, i32, i32, i32, i32 }
%"struct.vk::IndexBuffer" = type <{ %"struct.vk::VertexInputBinding", i32, [4 x i8] }>
%"struct.vk::Inputs" = type { [16 x %"struct.vk::VertexInputBinding"], %"struct.std::__1::array.427", %"struct.std::__1::array.422", %"struct.std::__1::array.423", [32 x %"struct.sw::Stream"] }
%"struct.sw::Stream" = type { i8*, i32, i32, i32, i32, i32, i32 }
%"class.(anonymous namespace)::CmdDrawIndexed" = type <{ %"class.(anonymous namespace)::CmdDrawBase", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.(anonymous namespace)::CmdDrawIndirect" = type { %"class.(anonymous namespace)::CmdDrawBase", %"class.vk::Buffer"*, i64, i32, i32 }
%"class.(anonymous namespace)::CmdDrawIndexedIndirect" = type { %"class.(anonymous namespace)::CmdDrawBase", %"class.vk::Buffer"*, i64, i32, i32 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEED2Ev = comdat any

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

$_ZN2vk13CommandBuffer7CommandD2Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE11__vallocateEm = comdat any

$_ZN2vk5Event6signalEv = comdat any

$_ZN2vk5Event4waitEv = comdat any

@.str = private unnamed_addr constant [72 x i8] c"%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::inheritedQueries\0A\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../third_party/swiftshader/src/Vulkan/VkCommandBuffer.cpp\00", align 1
@.str.2 = private unnamed_addr constant [52 x i8] c"%s:%d WARNING: UNSUPPORTED: VkPipelineBindPoint %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"%s:%d WARNING: UNSUPPORTED: VkPhysicalDeviceFeatures::multiViewport\0A\00", align 1
@_ZTVN12_GLOBAL__N_118CmdBeginRenderPassE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdBeginRenderPass"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdBeginRenderPass4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdBeginRenderPass"*)* @_ZN12_GLOBAL__N_118CmdBeginRenderPass11descriptionEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdBeginRenderPass"*)* @_ZN12_GLOBAL__N_118CmdBeginRenderPassD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdBeginRenderPass"*)* @_ZN12_GLOBAL__N_118CmdBeginRenderPassD0Ev to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [23 x i8] c"vkCmdBeginRenderPass()\00", align 1
@_ZTVN12_GLOBAL__N_114CmdNextSubpassE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdNextSubpass"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_114CmdNextSubpass4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdNextSubpass"*)* @_ZN12_GLOBAL__N_114CmdNextSubpass11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdNextSubpass"*)* @_ZN12_GLOBAL__N_114CmdNextSubpassD0Ev to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [19 x i8] c"vkCmdNextSubpass()\00", align 1
@_ZTVN12_GLOBAL__N_116CmdEndRenderPassE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdEndRenderPass"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_116CmdEndRenderPass4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdEndRenderPass"*)* @_ZN12_GLOBAL__N_116CmdEndRenderPass11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdEndRenderPass"*)* @_ZN12_GLOBAL__N_116CmdEndRenderPassD0Ev to i8*)] }, align 8
@.str.7 = private unnamed_addr constant [21 x i8] c"vkCmdEndRenderPass()\00", align 1
@_ZTVN12_GLOBAL__N_118CmdExecuteCommandsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdExecuteCommands"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdExecuteCommands4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdExecuteCommands"*)* @_ZN12_GLOBAL__N_118CmdExecuteCommands11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdExecuteCommands"*)* @_ZN12_GLOBAL__N_118CmdExecuteCommandsD0Ev to i8*)] }, align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"vkCmdExecuteCommands()\00", align 1
@_ZTVN12_GLOBAL__N_111CmdDispatchE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDispatch"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_111CmdDispatch4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDispatch"*)* @_ZN12_GLOBAL__N_111CmdDispatch11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDispatch"*)* @_ZN12_GLOBAL__N_111CmdDispatchD0Ev to i8*)] }, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"vkCmdDispatch()\00", align 1
@_ZTVN12_GLOBAL__N_118CmdPipelineBarrierE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdPipelineBarrier"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdPipelineBarrier4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdPipelineBarrier"*)* @_ZN12_GLOBAL__N_118CmdPipelineBarrier11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdPipelineBarrier"*)* @_ZN12_GLOBAL__N_118CmdPipelineBarrierD0Ev to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [23 x i8] c"vkCmdPipelineBarrier()\00", align 1
@_ZTVN12_GLOBAL__N_115CmdPipelineBindE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdPipelineBind"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_115CmdPipelineBind4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdPipelineBind"*)* @_ZN12_GLOBAL__N_115CmdPipelineBind11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdPipelineBind"*)* @_ZN12_GLOBAL__N_115CmdPipelineBindD0Ev to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [20 x i8] c"vkCmdPipelineBind()\00", align 1
@_ZTVN12_GLOBAL__N_119CmdVertexBufferBindE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdVertexBufferBind"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_119CmdVertexBufferBind4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdVertexBufferBind"*)* @_ZN12_GLOBAL__N_119CmdVertexBufferBind11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdVertexBufferBind"*)* @_ZN12_GLOBAL__N_119CmdVertexBufferBindD0Ev to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [24 x i8] c"vkCmdVertexBufferBind()\00", align 1
@_ZTVN12_GLOBAL__N_113CmdBeginQueryE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdBeginQuery"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_113CmdBeginQuery4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdBeginQuery"*)* @_ZN12_GLOBAL__N_113CmdBeginQuery11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdBeginQuery"*)* @_ZN12_GLOBAL__N_113CmdBeginQueryD0Ev to i8*)] }, align 8
@.str.13 = private unnamed_addr constant [18 x i8] c"vkCmdBeginQuery()\00", align 1
@_ZTVN12_GLOBAL__N_111CmdEndQueryE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdEndQuery"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_111CmdEndQuery4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdEndQuery"*)* @_ZN12_GLOBAL__N_111CmdEndQuery11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdEndQuery"*)* @_ZN12_GLOBAL__N_111CmdEndQueryD0Ev to i8*)] }, align 8
@.str.14 = private unnamed_addr constant [16 x i8] c"vkCmdEndQuery()\00", align 1
@_ZTVN12_GLOBAL__N_117CmdResetQueryPoolE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdResetQueryPool"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_117CmdResetQueryPool4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdResetQueryPool"*)* @_ZN12_GLOBAL__N_117CmdResetQueryPool11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdResetQueryPool"*)* @_ZN12_GLOBAL__N_117CmdResetQueryPoolD0Ev to i8*)] }, align 8
@.str.15 = private unnamed_addr constant [22 x i8] c"vkCmdResetQueryPool()\00", align 1
@_ZTVN12_GLOBAL__N_117CmdWriteTimeStampE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdWriteTimeStamp"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_117CmdWriteTimeStamp4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdWriteTimeStamp"*)* @_ZN12_GLOBAL__N_117CmdWriteTimeStamp11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdWriteTimeStamp"*)* @_ZN12_GLOBAL__N_117CmdWriteTimeStampD0Ev to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [22 x i8] c"vkCmdWriteTimeStamp()\00", align 1
@_ZTVN12_GLOBAL__N_123CmdCopyQueryPoolResultsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyQueryPoolResults"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResults4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdCopyQueryPoolResults"*)* @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResults11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyQueryPoolResults"*)* @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResultsD0Ev to i8*)] }, align 8
@.str.17 = private unnamed_addr constant [28 x i8] c"vkCmdCopyQueryPoolResults()\00", align 1
@_ZTVN12_GLOBAL__N_119CmdSetPushConstantsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetPushConstants"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_119CmdSetPushConstants4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetPushConstants"*)* @_ZN12_GLOBAL__N_119CmdSetPushConstants11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetPushConstants"*)* @_ZN12_GLOBAL__N_119CmdSetPushConstantsD0Ev to i8*)] }, align 8
@.str.18 = private unnamed_addr constant [24 x i8] c"vkCmdSetPushConstants()\00", align 1
@_ZTVN12_GLOBAL__N_114CmdSetViewportE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetViewport"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_114CmdSetViewport4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetViewport"*)* @_ZN12_GLOBAL__N_114CmdSetViewport11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetViewport"*)* @_ZN12_GLOBAL__N_114CmdSetViewportD0Ev to i8*)] }, align 8
@.str.19 = private unnamed_addr constant [19 x i8] c"vkCmdSetViewport()\00", align 1
@_ZTVN12_GLOBAL__N_113CmdSetScissorE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetScissor"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_113CmdSetScissor4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetScissor"*)* @_ZN12_GLOBAL__N_113CmdSetScissor11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetScissor"*)* @_ZN12_GLOBAL__N_113CmdSetScissorD0Ev to i8*)] }, align 8
@.str.20 = private unnamed_addr constant [18 x i8] c"vkCmdSetScissor()\00", align 1
@_ZTVN12_GLOBAL__N_115CmdSetDepthBiasE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetDepthBias"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_115CmdSetDepthBias4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetDepthBias"*)* @_ZN12_GLOBAL__N_115CmdSetDepthBias11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetDepthBias"*)* @_ZN12_GLOBAL__N_115CmdSetDepthBiasD0Ev to i8*)] }, align 8
@.str.21 = private unnamed_addr constant [20 x i8] c"vkCmdSetDepthBias()\00", align 1
@_ZTVN12_GLOBAL__N_120CmdSetBlendConstantsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetBlendConstants"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_120CmdSetBlendConstants4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetBlendConstants"*)* @_ZN12_GLOBAL__N_120CmdSetBlendConstants11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetBlendConstants"*)* @_ZN12_GLOBAL__N_120CmdSetBlendConstantsD0Ev to i8*)] }, align 8
@.str.22 = private unnamed_addr constant [25 x i8] c"vkCmdSetBlendConstants()\00", align 1
@_ZTVN12_GLOBAL__N_117CmdSetDepthBoundsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetDepthBounds"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_117CmdSetDepthBounds4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetDepthBounds"*)* @_ZN12_GLOBAL__N_117CmdSetDepthBounds11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetDepthBounds"*)* @_ZN12_GLOBAL__N_117CmdSetDepthBoundsD0Ev to i8*)] }, align 8
@.str.23 = private unnamed_addr constant [22 x i8] c"vkCmdSetDepthBounds()\00", align 1
@_ZTVN12_GLOBAL__N_124CmdSetStencilCompareMaskE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilCompareMask"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_124CmdSetStencilCompareMask4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetStencilCompareMask"*)* @_ZN12_GLOBAL__N_124CmdSetStencilCompareMask11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilCompareMask"*)* @_ZN12_GLOBAL__N_124CmdSetStencilCompareMaskD0Ev to i8*)] }, align 8
@.str.24 = private unnamed_addr constant [29 x i8] c"vkCmdSetStencilCompareMask()\00", align 1
@_ZTVN12_GLOBAL__N_122CmdSetStencilWriteMaskE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilWriteMask"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_122CmdSetStencilWriteMask4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetStencilWriteMask"*)* @_ZN12_GLOBAL__N_122CmdSetStencilWriteMask11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilWriteMask"*)* @_ZN12_GLOBAL__N_122CmdSetStencilWriteMaskD0Ev to i8*)] }, align 8
@.str.25 = private unnamed_addr constant [27 x i8] c"vkCmdSetStencilWriteMask()\00", align 1
@_ZTVN12_GLOBAL__N_122CmdSetStencilReferenceE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilReference"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_122CmdSetStencilReference4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSetStencilReference"*)* @_ZN12_GLOBAL__N_122CmdSetStencilReference11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSetStencilReference"*)* @_ZN12_GLOBAL__N_122CmdSetStencilReferenceD0Ev to i8*)] }, align 8
@.str.26 = private unnamed_addr constant [27 x i8] c"vkCmdSetStencilReference()\00", align 1
@_ZTVN12_GLOBAL__N_121CmdBindDescriptorSetsE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdBindDescriptorSets"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_121CmdBindDescriptorSets4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdBindDescriptorSets"*)* @_ZN12_GLOBAL__N_121CmdBindDescriptorSets11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdBindDescriptorSets"*)* @_ZN12_GLOBAL__N_121CmdBindDescriptorSetsD0Ev to i8*)] }, align 8
@.str.27 = private unnamed_addr constant [26 x i8] c"vkCmdBindDescriptorSets()\00", align 1
@_ZTVN12_GLOBAL__N_118CmdIndexBufferBindE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdIndexBufferBind"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdIndexBufferBind4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdIndexBufferBind"*)* @_ZN12_GLOBAL__N_118CmdIndexBufferBind11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdIndexBufferBind"*)* @_ZN12_GLOBAL__N_118CmdIndexBufferBindD0Ev to i8*)] }, align 8
@.str.28 = private unnamed_addr constant [23 x i8] c"vkCmdIndexBufferBind()\00", align 1
@_ZTVN12_GLOBAL__N_119CmdDispatchIndirectE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDispatchIndirect"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_119CmdDispatchIndirect4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDispatchIndirect"*)* @_ZN12_GLOBAL__N_119CmdDispatchIndirect11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDispatchIndirect"*)* @_ZN12_GLOBAL__N_119CmdDispatchIndirectD0Ev to i8*)] }, align 8
@.str.29 = private unnamed_addr constant [24 x i8] c"vkCmdDispatchIndirect()\00", align 1
@_ZTVN12_GLOBAL__N_113CmdCopyBufferE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_113CmdCopyBuffer4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdCopyBuffer"*)* @_ZN12_GLOBAL__N_113CmdCopyBuffer11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyBuffer"*)* @_ZN12_GLOBAL__N_113CmdCopyBufferD0Ev to i8*)] }, align 8
@.str.30 = private unnamed_addr constant [18 x i8] c"vkCmdCopyBuffer()\00", align 1
@_ZTVN12_GLOBAL__N_112CmdCopyImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_112CmdCopyImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdCopyImage"*)* @_ZN12_GLOBAL__N_112CmdCopyImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyImage"*)* @_ZN12_GLOBAL__N_112CmdCopyImageD0Ev to i8*)] }, align 8
@.str.31 = private unnamed_addr constant [17 x i8] c"vkCmdCopyImage()\00", align 1
@_ZTVN12_GLOBAL__N_112CmdBlitImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdBlitImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_112CmdBlitImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdBlitImage"*)* @_ZN12_GLOBAL__N_112CmdBlitImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdBlitImage"*)* @_ZN12_GLOBAL__N_112CmdBlitImageD0Ev to i8*)] }, align 8
@.str.32 = private unnamed_addr constant [17 x i8] c"vkCmdBlitImage()\00", align 1
@_ZTVN12_GLOBAL__N_120CmdCopyBufferToImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyBufferToImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_120CmdCopyBufferToImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdCopyBufferToImage"*)* @_ZN12_GLOBAL__N_120CmdCopyBufferToImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyBufferToImage"*)* @_ZN12_GLOBAL__N_120CmdCopyBufferToImageD0Ev to i8*)] }, align 8
@.str.33 = private unnamed_addr constant [25 x i8] c"vkCmdCopyBufferToImage()\00", align 1
@_ZTVN12_GLOBAL__N_120CmdCopyImageToBufferE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyImageToBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_120CmdCopyImageToBuffer4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdCopyImageToBuffer"*)* @_ZN12_GLOBAL__N_120CmdCopyImageToBuffer11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdCopyImageToBuffer"*)* @_ZN12_GLOBAL__N_120CmdCopyImageToBufferD0Ev to i8*)] }, align 8
@.str.34 = private unnamed_addr constant [25 x i8] c"vkCmdCopyImageToBuffer()\00", align 1
@_ZTVN12_GLOBAL__N_115CmdUpdateBufferE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdUpdateBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_115CmdUpdateBuffer4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdUpdateBuffer"*)* @_ZN12_GLOBAL__N_115CmdUpdateBuffer11descriptionEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdUpdateBuffer"*)* @_ZN12_GLOBAL__N_115CmdUpdateBufferD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdUpdateBuffer"*)* @_ZN12_GLOBAL__N_115CmdUpdateBufferD0Ev to i8*)] }, align 8
@.str.35 = private unnamed_addr constant [20 x i8] c"vkCmdUpdateBuffer()\00", align 1
@_ZTVN12_GLOBAL__N_113CmdFillBufferE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdFillBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_113CmdFillBuffer4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdFillBuffer"*)* @_ZN12_GLOBAL__N_113CmdFillBuffer11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdFillBuffer"*)* @_ZN12_GLOBAL__N_113CmdFillBufferD0Ev to i8*)] }, align 8
@.str.36 = private unnamed_addr constant [18 x i8] c"vkCmdFillBuffer()\00", align 1
@_ZTVN12_GLOBAL__N_118CmdClearColorImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdClearColorImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdClearColorImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdClearColorImage"*)* @_ZN12_GLOBAL__N_118CmdClearColorImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdClearColorImage"*)* @_ZN12_GLOBAL__N_118CmdClearColorImageD0Ev to i8*)] }, align 8
@.str.37 = private unnamed_addr constant [23 x i8] c"vkCmdClearColorImage()\00", align 1
@_ZTVN12_GLOBAL__N_125CmdClearDepthStencilImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdClearDepthStencilImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_125CmdClearDepthStencilImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdClearDepthStencilImage"*)* @_ZN12_GLOBAL__N_125CmdClearDepthStencilImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdClearDepthStencilImage"*)* @_ZN12_GLOBAL__N_125CmdClearDepthStencilImageD0Ev to i8*)] }, align 8
@.str.38 = private unnamed_addr constant [30 x i8] c"vkCmdClearDepthStencilImage()\00", align 1
@_ZTVN12_GLOBAL__N_118CmdClearAttachmentE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdClearAttachment"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_118CmdClearAttachment4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdClearAttachment"*)* @_ZN12_GLOBAL__N_118CmdClearAttachment11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdClearAttachment"*)* @_ZN12_GLOBAL__N_118CmdClearAttachmentD0Ev to i8*)] }, align 8
@.str.39 = private unnamed_addr constant [23 x i8] c"vkCmdClearAttachment()\00", align 1
@_ZTVN12_GLOBAL__N_115CmdResolveImageE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdResolveImage"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_115CmdResolveImage4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdResolveImage"*)* @_ZN12_GLOBAL__N_115CmdResolveImage11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdResolveImage"*)* @_ZN12_GLOBAL__N_115CmdResolveImageD0Ev to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_114CmdSignalEventE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdSignalEvent"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_114CmdSignalEvent4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdSignalEvent"*)* @_ZN12_GLOBAL__N_114CmdSignalEvent11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdSignalEvent"*)* @_ZN12_GLOBAL__N_114CmdSignalEventD0Ev to i8*)] }, align 8
@.str.40 = private unnamed_addr constant [19 x i8] c"vkCmdSignalEvent()\00", align 1
@_ZTVN12_GLOBAL__N_113CmdResetEventE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdResetEvent"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_113CmdResetEvent4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdResetEvent"*)* @_ZN12_GLOBAL__N_113CmdResetEvent11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdResetEvent"*)* @_ZN12_GLOBAL__N_113CmdResetEventD0Ev to i8*)] }, align 8
@.str.41 = private unnamed_addr constant [18 x i8] c"vkCmdResetEvent()\00", align 1
@_ZTVN12_GLOBAL__N_112CmdWaitEventE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdWaitEvent"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_112CmdWaitEvent4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdWaitEvent"*)* @_ZN12_GLOBAL__N_112CmdWaitEvent11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdWaitEvent"*)* @_ZN12_GLOBAL__N_112CmdWaitEventD0Ev to i8*)] }, align 8
@.str.42 = private unnamed_addr constant [17 x i8] c"vkCmdWaitEvent()\00", align 1
@_ZTVN12_GLOBAL__N_17CmdDrawE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDraw"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_17CmdDraw4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDraw"*)* @_ZN12_GLOBAL__N_17CmdDraw11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDraw"*)* @_ZN12_GLOBAL__N_17CmdDrawD0Ev to i8*)] }, align 8
@.str.43 = private unnamed_addr constant [12 x i8] c"vkCmdDraw()\00", align 1
@_ZTVN12_GLOBAL__N_114CmdDrawIndexedE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndexed"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_114CmdDrawIndexed4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDrawIndexed"*)* @_ZN12_GLOBAL__N_114CmdDrawIndexed11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndexed"*)* @_ZN12_GLOBAL__N_114CmdDrawIndexedD0Ev to i8*)] }, align 8
@.str.44 = private unnamed_addr constant [19 x i8] c"vkCmdDrawIndexed()\00", align 1
@_ZTVN12_GLOBAL__N_115CmdDrawIndirectE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndirect"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_115CmdDrawIndirect4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDrawIndirect"*)* @_ZN12_GLOBAL__N_115CmdDrawIndirect11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndirect"*)* @_ZN12_GLOBAL__N_115CmdDrawIndirectD0Ev to i8*)] }, align 8
@.str.45 = private unnamed_addr constant [20 x i8] c"vkCmdDrawIndirect()\00", align 1
@_ZTVN12_GLOBAL__N_122CmdDrawIndexedIndirectE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndexedIndirect"*, %"struct.vk::CommandBuffer::ExecutionState"*)* @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirect4playERN2vk13CommandBuffer14ExecutionStateE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.(anonymous namespace)::CmdDrawIndexedIndirect"*)* @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirect11descriptionEv to i8*), i8* bitcast (void (%"class.vk::CommandBuffer::Command"*)* @_ZN2vk13CommandBuffer7CommandD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::CmdDrawIndexedIndirect"*)* @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirectD0Ev to i8*)] }, align 8
@.str.46 = private unnamed_addr constant [27 x i8] c"vkCmdDrawIndexedIndirect()\00", align 1

@_ZN2vk13CommandBufferC1EPNS_6DeviceE20VkCommandBufferLevel = hidden unnamed_addr alias void (%"class.vk::CommandBuffer"*, %"class.vk::Device"*, i32), void (%"class.vk::CommandBuffer"*, %"class.vk::Device"*, i32)* @_ZN2vk13CommandBufferC2EPNS_6DeviceE20VkCommandBufferLevel

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBufferC2EPNS_6DeviceE20VkCommandBufferLevel(%"class.vk::CommandBuffer"* nocapture, %"class.vk::Device"*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 0
  store %"class.vk::Device"* %1, %"class.vk::Device"** %4, align 8
  %5 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::vector.305"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #15
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer7destroyEPK21VkAllocationCallbacks(%"class.vk::CommandBuffer"* nocapture, %struct.VkAllocationCallbacks* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10resetStateEv(%"class.vk::CommandBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %2, align 8
  %4 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.307"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::unique_ptr.307"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %10, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %10, align 8
  %12 = icmp eq %"class.vk::CommandBuffer::Command"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.vk::CommandBuffer::Command"* %11 to void (%"class.vk::CommandBuffer::Command"*)***
  %15 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %15, i64 3
  %17 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %16, align 8
  tail call void %17(%"class.vk::CommandBuffer::Command"* nonnull %11) #16
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::unique_ptr.307"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::unique_ptr.307"* %3, %"class.std::__1::unique_ptr.307"** %4, align 8
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  store i32 0, i32* %21, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk13CommandBuffer5beginEjPK30VkCommandBufferInheritanceInfo(%"class.vk::CommandBuffer"* nocapture, i32, %struct.VkCommandBufferInheritanceInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.VkCommandBufferInheritanceInfo, %struct.VkCommandBufferInheritanceInfo* %2, i64 0, i32 6
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 1252) #16
  br label %12

12:                                               ; preds = %7, %11, %3
  %13 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %19, align 8
  %21 = icmp eq %"class.std::__1::unique_ptr.307"* %20, %18
  br i1 %21, label %35, label %22

22:                                               ; preds = %16, %33
  %23 = phi %"class.std::__1::unique_ptr.307"* [ %24, %33 ], [ %20, %16 ]
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %23, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %25, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %25, align 8
  %27 = icmp eq %"class.vk::CommandBuffer::Command"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.vk::CommandBuffer::Command"* %26 to void (%"class.vk::CommandBuffer::Command"*)***
  %30 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %30, i64 3
  %32 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %31, align 8
  tail call void %32(%"class.vk::CommandBuffer::Command"* nonnull %26) #16
  br label %33

33:                                               ; preds = %28, %22
  %34 = icmp eq %"class.std::__1::unique_ptr.307"* %24, %18
  br i1 %34, label %35, label %22

35:                                               ; preds = %33, %16
  store %"class.std::__1::unique_ptr.307"* %18, %"class.std::__1::unique_ptr.307"** %19, align 8
  store i32 0, i32* %13, align 8
  br label %36

36:                                               ; preds = %12, %35
  store i32 1, i32* %13, align 8
  ret i32 0
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden i32 @_ZN2vk13CommandBuffer3endEv(%"class.vk::CommandBuffer"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  store i32 2, i32* %2, align 8
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk13CommandBuffer5resetEj(%"class.vk::CommandBuffer"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.307"* %6, %4
  br i1 %7, label %21, label %8

8:                                                ; preds = %2, %19
  %9 = phi %"class.std::__1::unique_ptr.307"* [ %10, %19 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 -1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %11, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %11, align 8
  %13 = icmp eq %"class.vk::CommandBuffer::Command"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.vk::CommandBuffer::Command"* %12 to void (%"class.vk::CommandBuffer::Command"*)***
  %16 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %16, i64 3
  %18 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %17, align 8
  tail call void %18(%"class.vk::CommandBuffer::Command"* nonnull %12) #16
  br label %19

19:                                               ; preds = %14, %8
  %20 = icmp eq %"class.std::__1::unique_ptr.307"* %10, %4
  br i1 %20, label %21, label %8

21:                                               ; preds = %19, %2
  store %"class.std::__1::unique_ptr.307"* %4, %"class.std::__1::unique_ptr.307"** %5, align 8
  %22 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  store i32 0, i32* %22, align 8
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer15beginRenderPassEPNS_10RenderPassEPNS_11FramebufferE8VkRect2DjPK12VkClearValue17VkSubpassContentsPK31VkRenderPassAttachmentBeginInfo(%"class.vk::CommandBuffer"*, %"class.vk::RenderPass"*, %"class.vk::Framebuffer"*, i64, i64, i32, %union.VkClearValue*, i32, %struct.VkRenderPassAttachmentBeginInfo* readonly) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.std::__1::unique_ptr.307", align 8
  %11 = ptrtoint %"class.vk::RenderPass"* %1 to i64
  %12 = ptrtoint %"class.vk::Framebuffer"* %2 to i64
  %13 = icmp eq %struct.VkRenderPassAttachmentBeginInfo* %8, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.VkRenderPassAttachmentBeginInfo, %struct.VkRenderPassAttachmentBeginInfo* %8, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.VkRenderPassAttachmentBeginInfo, %struct.VkRenderPassAttachmentBeginInfo* %8, i64 0, i32 3
  br label %20

20:                                               ; preds = %18, %20
  %21 = phi i64 [ 0, %18 ], [ %27, %20 ]
  %22 = load %class.VkNonDispatchableHandle.7*, %class.VkNonDispatchableHandle.7** %19, align 8
  %23 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %22, i64 %21, i32 0
  %24 = bitcast i64* %23 to %"class.vk::ImageView"**
  %25 = load %"class.vk::ImageView"*, %"class.vk::ImageView"** %24, align 8
  %26 = trunc i64 %21 to i32
  tail call void @_ZN2vk11Framebuffer13setAttachmentEPNS_9ImageViewEj(%"class.vk::Framebuffer"* %2, %"class.vk::ImageView"* %25, i32 %26) #16
  %27 = add nuw nsw i64 %21, 1
  %28 = load i32, i32* %15, align 8
  %29 = zext i32 %28 to i64
  %30 = icmp ult i64 %27, %29
  br i1 %30, label %20, label %31

31:                                               ; preds = %20, %14, %9
  %32 = bitcast %"class.std::__1::unique_ptr.307"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #15
  %33 = tail call i8* @_Znwm(i64 56) #17
  %34 = bitcast %union.VkClearValue* %6 to i8*
  %35 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdBeginRenderPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %11, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %33, i64 16
  %39 = bitcast i8* %38 to i64*
  store i64 %12, i64* %39, align 8
  %40 = getelementptr inbounds i8, i8* %33, i64 24
  %41 = bitcast i8* %40 to i64*
  store i64 %3, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 32
  %43 = bitcast i8* %42 to i64*
  store i64 %4, i64* %43, align 8
  %44 = getelementptr inbounds i8, i8* %33, i64 40
  %45 = bitcast i8* %44 to i32*
  store i32 %5, i32* %45, align 8
  %46 = zext i32 %5 to i64
  %47 = shl nuw nsw i64 %46, 4
  %48 = tail call i8* @_Znam(i64 %47) #17
  %49 = getelementptr inbounds i8, i8* %33, i64 48
  %50 = bitcast i8* %49 to i8**
  store i8* %48, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* align 4 %34, i64 %47, i1 false) #15
  %51 = ptrtoint i8* %33 to i64
  %52 = bitcast %"class.std::__1::unique_ptr.307"* %10 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %54 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %53, align 8
  %55 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %56 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %55, align 8
  %57 = icmp ult %"class.std::__1::unique_ptr.307"* %54, %56
  br i1 %57, label %58, label %64

58:                                               ; preds = %31
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %59, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.307"* %54 to i64*
  store i64 %51, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %54, i64 1
  %62 = ptrtoint %"class.std::__1::unique_ptr.307"* %61 to i64
  %63 = bitcast %"class.std::__1::unique_ptr.307"** %53 to i64*
  store i64 %62, i64* %63, align 8
  br label %66

64:                                               ; preds = %31
  %65 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %65, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %10) #16
  br label %66

66:                                               ; preds = %64, %58
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %67, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %67, align 8
  %69 = icmp eq %"class.vk::CommandBuffer::Command"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = bitcast %"class.vk::CommandBuffer::Command"* %68 to void (%"class.vk::CommandBuffer::Command"*)***
  %72 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %72, i64 3
  %74 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %73, align 8
  call void %74(%"class.vk::CommandBuffer::Command"* nonnull %68) #16
  br label %75

75:                                               ; preds = %66, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: optsize
declare void @_ZN2vk11Framebuffer13setAttachmentEPNS_9ImageViewEj(%"class.vk::Framebuffer"*, %"class.vk::ImageView"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer11nextSubpassE17VkSubpassContents(%"class.vk::CommandBuffer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.307", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.307"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = tail call i8* @_Znwm(i64 8) #17
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_114CmdNextSubpassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %3 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %9, align 8
  %11 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %11, align 8
  %13 = icmp ult %"class.std::__1::unique_ptr.307"* %10, %12
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %15, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %10 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 1
  %18 = ptrtoint %"class.std::__1::unique_ptr.307"* %17 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.307"** %9 to i64*
  store i64 %18, i64* %19, align 8
  br label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %21, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %3) #16
  br label %22

22:                                               ; preds = %20, %14
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %23, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %23, align 8
  %25 = icmp eq %"class.vk::CommandBuffer::Command"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.vk::CommandBuffer::Command"* %24 to void (%"class.vk::CommandBuffer::Command"*)***
  %28 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %28, i64 3
  %30 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %29, align 8
  call void %30(%"class.vk::CommandBuffer::Command"* nonnull %24) #16
  br label %31

31:                                               ; preds = %22, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer13endRenderPassEv(%"class.vk::CommandBuffer"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.307", align 8
  %3 = bitcast %"class.std::__1::unique_ptr.307"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = tail call i8* @_Znwm(i64 8) #17
  %5 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_116CmdEndRenderPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = ptrtoint i8* %4 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %8, align 8
  %10 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %10, align 8
  %12 = icmp ult %"class.std::__1::unique_ptr.307"* %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %14, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 1
  %17 = ptrtoint %"class.std::__1::unique_ptr.307"* %16 to i64
  %18 = bitcast %"class.std::__1::unique_ptr.307"** %8 to i64*
  store i64 %17, i64* %18, align 8
  br label %21

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %20, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %2) #16
  br label %21

21:                                               ; preds = %19, %13
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %2, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %22, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %22, align 8
  %24 = icmp eq %"class.vk::CommandBuffer::Command"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.vk::CommandBuffer::Command"* %23 to void (%"class.vk::CommandBuffer::Command"*)***
  %27 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %27, i64 3
  %29 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %28, align 8
  call void %29(%"class.vk::CommandBuffer::Command"* nonnull %23) #16
  br label %30

30:                                               ; preds = %21, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer15executeCommandsEjPKP17VkCommandBuffer_T(%"class.vk::CommandBuffer"*, i32, %struct.VkCommandBuffer_T** nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %3
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  %9 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.307"** %9 to i64*
  %14 = zext i32 %1 to i64
  br label %16

15:                                               ; preds = %46, %3
  ret void

16:                                               ; preds = %46, %6
  %17 = phi i64 [ 0, %6 ], [ %47, %46 ]
  %18 = getelementptr inbounds %struct.VkCommandBuffer_T*, %struct.VkCommandBuffer_T** %2, i64 %17
  %19 = load %struct.VkCommandBuffer_T*, %struct.VkCommandBuffer_T** %18, align 8
  %20 = icmp eq %struct.VkCommandBuffer_T* %19, null
  %21 = bitcast %struct.VkCommandBuffer_T* %19 to %"class.vk::DispatchableObject"*
  %22 = getelementptr inbounds %"class.vk::DispatchableObject", %"class.vk::DispatchableObject"* %21, i64 0, i32 1
  %23 = ptrtoint %"class.vk::CommandBuffer"* %22 to i64
  %24 = select i1 %20, i64 0, i64 %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %25 = call i8* @_Znwm(i64 16) #17
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdExecuteCommandsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = ptrtoint i8* %25 to i64
  store i64 %29, i64* %8, align 8
  %30 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %9, align 8
  %31 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %10, align 8
  %32 = icmp ult %"class.std::__1::unique_ptr.307"* %30, %31
  br i1 %32, label %33, label %37

33:                                               ; preds = %16
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %12, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.307"* %30 to i64*
  store i64 %29, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %30, i64 1
  %36 = ptrtoint %"class.std::__1::unique_ptr.307"* %35 to i64
  store i64 %36, i64* %13, align 8
  br label %38

37:                                               ; preds = %16
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %11, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %38

38:                                               ; preds = %37, %33
  %39 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %12, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %12, align 8
  %40 = icmp eq %"class.vk::CommandBuffer::Command"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.vk::CommandBuffer::Command"* %39 to void (%"class.vk::CommandBuffer::Command"*)***
  %43 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %43, i64 3
  %45 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %44, align 8
  call void %45(%"class.vk::CommandBuffer::Command"* nonnull %39) #16
  br label %46

46:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %47 = add nuw nsw i64 %17, 1
  %48 = icmp eq i64 %47, %14
  br i1 %48, label %15, label %16
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer13setDeviceMaskEj(%"class.vk::CommandBuffer"* nocapture, i32) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12dispatchBaseEjjjjjj(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.307", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call i8* @_Znwm(i64 32) #17
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_111CmdDispatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %10, i64 16
  %17 = bitcast i8* %16 to i32*
  store i32 %3, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 20
  %19 = bitcast i8* %18 to i32*
  store i32 %4, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %10, i64 24
  %21 = bitcast i8* %20 to i32*
  store i32 %5, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %10, i64 28
  %23 = bitcast i8* %22 to i32*
  store i32 %6, i32* %23, align 4
  %24 = ptrtoint i8* %10 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %26, align 8
  %28 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %29 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %28, align 8
  %30 = icmp ult %"class.std::__1::unique_ptr.307"* %27, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %7
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %32, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.307"* %27 to i64*
  store i64 %24, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %27, i64 1
  %35 = ptrtoint %"class.std::__1::unique_ptr.307"* %34 to i64
  %36 = bitcast %"class.std::__1::unique_ptr.307"** %26 to i64*
  store i64 %35, i64* %36, align 8
  br label %39

37:                                               ; preds = %7
  %38 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %38, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %8) #16
  br label %39

39:                                               ; preds = %37, %31
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %40, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %40, align 8
  %42 = icmp eq %"class.vk::CommandBuffer::Command"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.vk::CommandBuffer::Command"* %41 to void (%"class.vk::CommandBuffer::Command"*)***
  %45 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %45, i64 3
  %47 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, align 8
  call void %47(%"class.vk::CommandBuffer::Command"* nonnull %41) #16
  br label %48

48:                                               ; preds = %39, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer15pipelineBarrierEjjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, %struct.VkMemoryBarrier* nocapture readnone, i32, %struct.VkBufferMemoryBarrier* nocapture readnone, i32, %struct.VkImageMemoryBarrier* nocapture readnone) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.std::__1::unique_ptr.307", align 8
  %12 = bitcast %"class.std::__1::unique_ptr.307"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = tail call i8* @_Znwm(i64 8) #17
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdPipelineBarrierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %11 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %19, align 8
  %21 = icmp ult %"class.std::__1::unique_ptr.307"* %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %23, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.307"* %18 to i64*
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %18, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.307"* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.307"** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %30

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %29, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %11) #16
  br label %30

30:                                               ; preds = %28, %22
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %31, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %31, align 8
  %33 = icmp eq %"class.vk::CommandBuffer::Command"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.vk::CommandBuffer::Command"* %32 to void (%"class.vk::CommandBuffer::Command"*)***
  %36 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %36, i64 3
  %38 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, align 8
  call void %38(%"class.vk::CommandBuffer::Command"* nonnull %32) #16
  br label %39

39:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12bindPipelineE19VkPipelineBindPointPNS_8PipelineE(%"class.vk::CommandBuffer"*, i32, %"class.vk::Pipeline"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = icmp ult i32 %1, 2
  br i1 %5, label %6, label %40

6:                                                ; preds = %3
  %7 = ptrtoint %"class.vk::Pipeline"* %2 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 24) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdPipelineBindE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %7, i64* %14, align 8
  %15 = ptrtoint i8* %9 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %19, align 8
  %21 = icmp ult %"class.std::__1::unique_ptr.307"* %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %6
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %23, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.307"* %18 to i64*
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %18, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.307"* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.307"** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %30

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %29, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %30

30:                                               ; preds = %28, %22
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %31, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %31, align 8
  %33 = icmp eq %"class.vk::CommandBuffer::Command"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.vk::CommandBuffer::Command"* %32 to void (%"class.vk::CommandBuffer::Command"*)***
  %36 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %36, i64 3
  %38 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, align 8
  call void %38(%"class.vk::CommandBuffer::Command"* nonnull %32) #16
  br label %39

39:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  br label %41

40:                                               ; preds = %3
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 1372, i32 %1) #16
  br label %41

41:                                               ; preds = %40, %39
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer17bindVertexBuffersEjjPK23VkNonDispatchableHandleIP10VkBuffer_TEPKm(%"class.vk::CommandBuffer"*, i32, i32, %class.VkNonDispatchableHandle* nocapture readonly, i64* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  %10 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  %11 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %13 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.std::__1::unique_ptr.307"** %11 to i64*
  %16 = zext i32 %2 to i64
  br label %18

17:                                               ; preds = %51, %5
  ret void

18:                                               ; preds = %51, %8
  %19 = phi i64 [ 0, %8 ], [ %52, %51 ]
  %20 = trunc i64 %19 to i32
  %21 = add i32 %20, %1
  %22 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %3, i64 %19, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds i64, i64* %4, i64 %19
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %25 = call i8* @_Znwm(i64 32) #17
  %26 = load i64, i64* %24, align 8
  %27 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_119CmdVertexBufferBindE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 8
  %29 = bitcast i8* %28 to i32*
  store i32 %21, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %23, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %25, i64 24
  %33 = bitcast i8* %32 to i64*
  store i64 %26, i64* %33, align 8
  %34 = ptrtoint i8* %25 to i64
  store i64 %34, i64* %10, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %11, align 8
  %36 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %12, align 8
  %37 = icmp ult %"class.std::__1::unique_ptr.307"* %35, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %18
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %14, align 8
  %39 = bitcast %"class.std::__1::unique_ptr.307"* %35 to i64*
  store i64 %34, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %35, i64 1
  %41 = ptrtoint %"class.std::__1::unique_ptr.307"* %40 to i64
  store i64 %41, i64* %15, align 8
  br label %43

42:                                               ; preds = %18
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %13, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %43

43:                                               ; preds = %42, %38
  %44 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %14, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %14, align 8
  %45 = icmp eq %"class.vk::CommandBuffer::Command"* %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %43
  %47 = bitcast %"class.vk::CommandBuffer::Command"* %44 to void (%"class.vk::CommandBuffer::Command"*)***
  %48 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, i64 3
  %50 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %49, align 8
  call void %50(%"class.vk::CommandBuffer::Command"* nonnull %44) #16
  br label %51

51:                                               ; preds = %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %52 = add nuw nsw i64 %19, 1
  %53 = icmp eq i64 %52, %16
  br i1 %53, label %17, label %18
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10beginQueryEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = ptrtoint %"class.vk::QueryPool"* %1 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i8* @_Znwm(i64 24) #17
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_113CmdBeginQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 4
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %18, align 8
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %20, align 8
  %22 = icmp ult %"class.std::__1::unique_ptr.307"* %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %24, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.307"* %19 to i64*
  store i64 %16, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %19, i64 1
  %27 = ptrtoint %"class.std::__1::unique_ptr.307"* %26 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.307"** %18 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %30, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %32, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %32, align 8
  %34 = icmp eq %"class.vk::CommandBuffer::Command"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.vk::CommandBuffer::Command"* %33 to void (%"class.vk::CommandBuffer::Command"*)***
  %37 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, i64 3
  %39 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %38, align 8
  call void %39(%"class.vk::CommandBuffer::Command"* nonnull %33) #16
  br label %40

40:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer8endQueryEPNS_9QueryPoolEj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = ptrtoint %"class.vk::QueryPool"* %1 to i64
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 24) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_111CmdEndQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 8
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.307"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %21, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %16 to i64*
  store i64 %13, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.307"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %27, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %28

28:                                               ; preds = %26, %20
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %29, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %31 = icmp eq %"class.vk::CommandBuffer::Command"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.vk::CommandBuffer::Command"* %30 to void (%"class.vk::CommandBuffer::Command"*)***
  %34 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, i64 3
  %36 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %35, align 8
  call void %36(%"class.vk::CommandBuffer::Command"* nonnull %30) #16
  br label %37

37:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer14resetQueryPoolEPNS_9QueryPoolEjj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = ptrtoint %"class.vk::QueryPool"* %1 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i8* @_Znwm(i64 24) #17
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117CmdResetQueryPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 4
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %18, align 8
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %20, align 8
  %22 = icmp ult %"class.std::__1::unique_ptr.307"* %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %24, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.307"* %19 to i64*
  store i64 %16, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %19, i64 1
  %27 = ptrtoint %"class.std::__1::unique_ptr.307"* %26 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.307"** %18 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %30, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %32, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %32, align 8
  %34 = icmp eq %"class.vk::CommandBuffer::Command"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.vk::CommandBuffer::Command"* %33 to void (%"class.vk::CommandBuffer::Command"*)***
  %37 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, i64 3
  %39 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %38, align 8
  call void %39(%"class.vk::CommandBuffer::Command"* nonnull %33) #16
  br label %40

40:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer14writeTimestampE23VkPipelineStageFlagBitsPNS_9QueryPoolEj(%"class.vk::CommandBuffer"*, i32, %"class.vk::QueryPool"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = ptrtoint %"class.vk::QueryPool"* %2 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i8* @_Znwm(i64 24) #17
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117CmdWriteTimeStampE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i32*
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 20
  %15 = bitcast i8* %14 to i32*
  store i32 %1, i32* %15, align 4
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %18, align 8
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %20, align 8
  %22 = icmp ult %"class.std::__1::unique_ptr.307"* %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %24, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.307"* %19 to i64*
  store i64 %16, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %19, i64 1
  %27 = ptrtoint %"class.std::__1::unique_ptr.307"* %26 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.307"** %18 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %30, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %32, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %32, align 8
  %34 = icmp eq %"class.vk::CommandBuffer::Command"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.vk::CommandBuffer::Command"* %33 to void (%"class.vk::CommandBuffer::Command"*)***
  %37 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, i64 3
  %39 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %38, align 8
  call void %39(%"class.vk::CommandBuffer::Command"* nonnull %33) #16
  br label %40

40:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer20copyQueryPoolResultsEPKNS_9QueryPoolEjjPNS_6BufferEmmj(%"class.vk::CommandBuffer"*, %"class.vk::QueryPool"*, i32, i32, %"class.vk::Buffer"*, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr.307", align 8
  %10 = ptrtoint %"class.vk::QueryPool"* %1 to i64
  %11 = ptrtoint %"class.vk::Buffer"* %4 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %13 = tail call i8* @_Znwm(i64 56) #17
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_123CmdCopyQueryPoolResultsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %10, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 20
  %20 = bitcast i8* %19 to i32*
  store i32 %3, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %13, i64 24
  %22 = bitcast i8* %21 to i64*
  store i64 %11, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 32
  %24 = bitcast i8* %23 to i64*
  store i64 %5, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %13, i64 40
  %26 = bitcast i8* %25 to i64*
  store i64 %6, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 48
  %28 = bitcast i8* %27 to i32*
  store i32 %7, i32* %28, align 8
  %29 = ptrtoint i8* %13 to i64
  %30 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %32 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %31, align 8
  %33 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %33, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr.307"* %32, %34
  br i1 %35, label %36, label %42

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %37, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %32 to i64*
  store i64 %29, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %32, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  %41 = bitcast %"class.std::__1::unique_ptr.307"** %31 to i64*
  store i64 %40, i64* %41, align 8
  br label %44

42:                                               ; preds = %8
  %43 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %43, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %9) #16
  br label %44

44:                                               ; preds = %42, %36
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %45, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %45, align 8
  %47 = icmp eq %"class.vk::CommandBuffer::Command"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = bitcast %"class.vk::CommandBuffer::Command"* %46 to void (%"class.vk::CommandBuffer::Command"*)***
  %50 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %50, i64 3
  %52 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %51, align 8
  call void %52(%"class.vk::CommandBuffer::Command"* nonnull %46) #16
  br label %53

53:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer13pushConstantsEPNS_14PipelineLayoutEjjjPKv(%"class.vk::CommandBuffer"*, %"class.vk::PipelineLayout"* nocapture readnone, i32, i32, i32, i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 144) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_119CmdSetPushConstantsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %3, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 %4, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = zext i32 %4 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 1 %5, i64 %16, i1 false) #15
  %17 = ptrtoint i8* %9 to i64
  %18 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %20 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %19, align 8
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %21, align 8
  %23 = icmp ult %"class.std::__1::unique_ptr.307"* %20, %22
  br i1 %23, label %24, label %30

24:                                               ; preds = %6
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %25, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.307"* %20 to i64*
  store i64 %17, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %20, i64 1
  %28 = ptrtoint %"class.std::__1::unique_ptr.307"* %27 to i64
  %29 = bitcast %"class.std::__1::unique_ptr.307"** %19 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %6
  %31 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %31, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %32

32:                                               ; preds = %30, %24
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %33, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %33, align 8
  %35 = icmp eq %"class.vk::CommandBuffer::Command"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.vk::CommandBuffer::Command"* %34 to void (%"class.vk::CommandBuffer::Command"*)***
  %38 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %38, i64 3
  %40 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %39, align 8
  call void %40(%"class.vk::CommandBuffer::Command"* nonnull %34) #16
  br label %41

41:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer11setViewportEjjPK10VkViewport(%"class.vk::CommandBuffer"*, i32, i32, %struct.VkViewport* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = icmp ne i32 %1, 0
  %7 = icmp ugt i32 %2, 1
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 1421) #16
  br label %10

10:                                               ; preds = %4, %9
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  %20 = zext i32 %2 to i64
  br label %22

21:                                               ; preds = %50, %10
  ret void

22:                                               ; preds = %50, %12
  %23 = phi i64 [ 0, %12 ], [ %51, %50 ]
  %24 = getelementptr inbounds %struct.VkViewport, %struct.VkViewport* %3, i64 %23
  %25 = trunc i64 %23 to i32
  %26 = add i32 %25, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %27 = call i8* @_Znwm(i64 40) #17
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_114CmdSetViewportE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  %30 = bitcast %struct.VkViewport* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 24, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %27, i64 32
  %32 = bitcast i8* %31 to i32*
  store i32 %26, i32* %32, align 8
  %33 = ptrtoint i8* %27 to i64
  store i64 %33, i64* %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %22
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  store i64 %40, i64* %19, align 8
  br label %42

41:                                               ; preds = %22
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %17, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %42

42:                                               ; preds = %41, %37
  %43 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %18, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %44 = icmp eq %"class.vk::CommandBuffer::Command"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.vk::CommandBuffer::Command"* %43 to void (%"class.vk::CommandBuffer::Command"*)***
  %47 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, i64 3
  %49 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, align 8
  call void %49(%"class.vk::CommandBuffer::Command"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %51 = add nuw nsw i64 %23, 1
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10setScissorEjjPK8VkRect2D(%"class.vk::CommandBuffer"*, i32, i32, %struct.VkRect2D* nocapture readonly) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = icmp ne i32 %1, 0
  %7 = icmp ugt i32 %2, 1
  %8 = or i1 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 1434) #16
  br label %10

10:                                               ; preds = %4, %9
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %10
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  %20 = zext i32 %2 to i64
  br label %22

21:                                               ; preds = %50, %10
  ret void

22:                                               ; preds = %50, %12
  %23 = phi i64 [ 0, %12 ], [ %51, %50 ]
  %24 = getelementptr inbounds %struct.VkRect2D, %struct.VkRect2D* %3, i64 %23
  %25 = trunc i64 %23 to i32
  %26 = add i32 %25, %1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %27 = call i8* @_Znwm(i64 32) #17
  %28 = bitcast i8* %27 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_113CmdSetScissorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 8
  %30 = bitcast %struct.VkRect2D* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 16, i1 false) #15
  %31 = getelementptr inbounds i8, i8* %27, i64 24
  %32 = bitcast i8* %31 to i32*
  store i32 %26, i32* %32, align 8
  %33 = ptrtoint i8* %27 to i64
  store i64 %33, i64* %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %22
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  store i64 %40, i64* %19, align 8
  br label %42

41:                                               ; preds = %22
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %17, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %42

42:                                               ; preds = %41, %37
  %43 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %18, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %44 = icmp eq %"class.vk::CommandBuffer::Command"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.vk::CommandBuffer::Command"* %43 to void (%"class.vk::CommandBuffer::Command"*)***
  %47 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, i64 3
  %49 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, align 8
  call void %49(%"class.vk::CommandBuffer::Command"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %51 = add nuw nsw i64 %23, 1
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %21, label %22
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12setLineWidthEf(%"class.vk::CommandBuffer"* nocapture, float) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12setDepthBiasEfff(%"class.vk::CommandBuffer"*, float, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 24) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdSetDepthBiasE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to float*
  store float %1, float* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to float*
  store float %2, float* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to float*
  store float %3, float* %14, align 8
  %15 = ptrtoint i8* %7 to i64
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %19, align 8
  %21 = icmp ult %"class.std::__1::unique_ptr.307"* %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %23, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.307"* %18 to i64*
  store i64 %15, i64* %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %18, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.307"* %25 to i64
  %27 = bitcast %"class.std::__1::unique_ptr.307"** %17 to i64*
  store i64 %26, i64* %27, align 8
  br label %30

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %29, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %30

30:                                               ; preds = %28, %22
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %31, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %31, align 8
  %33 = icmp eq %"class.vk::CommandBuffer::Command"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.vk::CommandBuffer::Command"* %32 to void (%"class.vk::CommandBuffer::Command"*)***
  %36 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %36, i64 3
  %38 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, align 8
  call void %38(%"class.vk::CommandBuffer::Command"* nonnull %32) #16
  br label %39

39:                                               ; preds = %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer17setBlendConstantsEPKf(%"class.vk::CommandBuffer"*, float*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.307", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.307"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = tail call i8* @_Znwm(i64 24) #17
  %6 = bitcast float* %1 to i8*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120CmdSetBlendConstantsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 4 %6, i64 16, i1 false) #15
  %9 = ptrtoint i8* %5 to i64
  %10 = bitcast %"class.std::__1::unique_ptr.307"* %3 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %11, align 8
  %13 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %13, align 8
  %15 = icmp ult %"class.std::__1::unique_ptr.307"* %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %18 = bitcast %"class.std::__1::unique_ptr.307"* %12 to i64*
  store i64 %9, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %12, i64 1
  %20 = ptrtoint %"class.std::__1::unique_ptr.307"* %19 to i64
  %21 = bitcast %"class.std::__1::unique_ptr.307"** %11 to i64*
  store i64 %20, i64* %21, align 8
  br label %24

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %23, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %3) #16
  br label %24

24:                                               ; preds = %22, %16
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %25, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %25, align 8
  %27 = icmp eq %"class.vk::CommandBuffer::Command"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.vk::CommandBuffer::Command"* %26 to void (%"class.vk::CommandBuffer::Command"*)***
  %30 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %30, i64 3
  %32 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %31, align 8
  call void %32(%"class.vk::CommandBuffer::Command"* nonnull %26) #16
  br label %33

33:                                               ; preds = %24, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer14setDepthBoundsEff(%"class.vk::CommandBuffer"*, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = tail call i8* @_Znwm(i64 16) #17
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_117CmdSetDepthBoundsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to float*
  store float %1, float* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to float*
  store float %2, float* %11, align 4
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %18 = icmp ult %"class.std::__1::unique_ptr.307"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.307"* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %15, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.307"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %26, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %28, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %28, align 8
  %30 = icmp eq %"class.vk::CommandBuffer::Command"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.vk::CommandBuffer::Command"* %29 to void (%"class.vk::CommandBuffer::Command"*)***
  %33 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %33, i64 3
  %35 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, align 8
  call void %35(%"class.vk::CommandBuffer::Command"* nonnull %29) #16
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer21setStencilCompareMaskEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = tail call i8* @_Znwm(i64 16) #17
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_124CmdSetStencilCompareMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 %2, i32* %11, align 4
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %18 = icmp ult %"class.std::__1::unique_ptr.307"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.307"* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %15, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.307"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %26, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %28, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %28, align 8
  %30 = icmp eq %"class.vk::CommandBuffer::Command"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.vk::CommandBuffer::Command"* %29 to void (%"class.vk::CommandBuffer::Command"*)***
  %33 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %33, i64 3
  %35 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, align 8
  call void %35(%"class.vk::CommandBuffer::Command"* nonnull %29) #16
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer19setStencilWriteMaskEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = tail call i8* @_Znwm(i64 16) #17
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122CmdSetStencilWriteMaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 %2, i32* %11, align 4
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %18 = icmp ult %"class.std::__1::unique_ptr.307"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.307"* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %15, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.307"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %26, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %28, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %28, align 8
  %30 = icmp eq %"class.vk::CommandBuffer::Command"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.vk::CommandBuffer::Command"* %29 to void (%"class.vk::CommandBuffer::Command"*)***
  %33 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %33, i64 3
  %35 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, align 8
  call void %35(%"class.vk::CommandBuffer::Command"* nonnull %29) #16
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer19setStencilReferenceEjj(%"class.vk::CommandBuffer"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = tail call i8* @_Znwm(i64 16) #17
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122CmdSetStencilReferenceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 %1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 %2, i32* %11, align 4
  %12 = ptrtoint i8* %6 to i64
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %18 = icmp ult %"class.std::__1::unique_ptr.307"* %15, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.307"* %15 to i64*
  store i64 %12, i64* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %15, i64 1
  %23 = ptrtoint %"class.std::__1::unique_ptr.307"* %22 to i64
  %24 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %27

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %26, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %27

27:                                               ; preds = %25, %19
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %28, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %28, align 8
  %30 = icmp eq %"class.vk::CommandBuffer::Command"* %29, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.vk::CommandBuffer::Command"* %29 to void (%"class.vk::CommandBuffer::Command"*)***
  %33 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %33, i64 3
  %35 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, align 8
  call void %35(%"class.vk::CommandBuffer::Command"* nonnull %29) #16
  br label %36

36:                                               ; preds = %27, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer18bindDescriptorSetsE19VkPipelineBindPointPKNS_14PipelineLayoutEjjPK23VkNonDispatchableHandleIP17VkDescriptorSet_TEjPKj(%"class.vk::CommandBuffer"*, i32, %"class.vk::PipelineLayout"*, i32, i32, %class.VkNonDispatchableHandle.15*, i32, i32*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr.307", align 8
  %10 = icmp eq i32 %6, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @_ZNK2vk14PipelineLayout21getDynamicOffsetIndexEjj(%"class.vk::PipelineLayout"* %2, i32 %3, i32 0) #16
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i32 [ %12, %11 ], [ 0, %8 ]
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = tail call i8* @_Znwm(i64 144) #17
  %18 = bitcast i8* %17 to %"class.(anonymous namespace)::CmdBindDescriptorSets"*
  %19 = bitcast i8* %17 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_121CmdBindDescriptorSetsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  %20 = getelementptr inbounds i8, i8* %17, i64 8
  %21 = bitcast i8* %20 to i32*
  store i32 %1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %17, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 %3, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %17, i64 16
  %25 = bitcast i8* %24 to i32*
  store i32 %4, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %17, i64 20
  %27 = bitcast i8* %26 to i32*
  store i32 %14, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %17, i64 24
  %29 = bitcast i8* %28 to i32*
  store i32 %6, i32* %29, align 8
  %30 = icmp eq i32 %4, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %13
  %32 = zext i32 %4 to i64
  br label %36

33:                                               ; preds = %36, %13
  br i1 %10, label %60, label %34

34:                                               ; preds = %33
  %35 = zext i32 %6 to i64
  br label %50

36:                                               ; preds = %36, %31
  %37 = phi i64 [ 0, %31 ], [ %48, %36 ]
  %38 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %5, i64 %37, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %37 to i32
  %41 = add i32 %40, %3
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %18, i64 0, i32 6, i32 0, i64 %42
  %44 = bitcast %"class.vk::DescriptorSet"** %43 to i64*
  store i64 %39, i64* %44, align 8
  %45 = inttoptr i64 %39 to %"class.vk::DescriptorSet"*
  %46 = getelementptr inbounds %"class.vk::DescriptorSet", %"class.vk::DescriptorSet"* %45, i64 0, i32 1, i64 0
  %47 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %18, i64 0, i32 7, i32 0, i64 %42
  store i8* %46, i8** %47, align 8
  %48 = add nuw nsw i64 %37, 1
  %49 = icmp eq i64 %48, %32
  br i1 %49, label %33, label %36

50:                                               ; preds = %50, %34
  %51 = phi i64 [ 0, %34 ], [ %58, %50 ]
  %52 = getelementptr inbounds i32, i32* %7, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = trunc i64 %51 to i32
  %55 = add i32 %14, %54
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %18, i64 0, i32 8, i32 0, i64 %56
  store i32 %53, i32* %57, align 4
  %58 = add nuw nsw i64 %51, 1
  %59 = icmp eq i64 %58, %35
  br i1 %59, label %60, label %50

60:                                               ; preds = %50, %33
  %61 = ptrtoint i8* %17 to i64
  %62 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %64 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %63, align 8
  %65 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %66 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %65, align 8
  %67 = icmp ult %"class.std::__1::unique_ptr.307"* %64, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %69, align 8
  %70 = bitcast %"class.std::__1::unique_ptr.307"* %64 to i64*
  store i64 %61, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %64, i64 1
  %72 = ptrtoint %"class.std::__1::unique_ptr.307"* %71 to i64
  %73 = bitcast %"class.std::__1::unique_ptr.307"** %63 to i64*
  store i64 %72, i64* %73, align 8
  br label %75

74:                                               ; preds = %60
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %15, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %9) #16
  br label %75

75:                                               ; preds = %74, %68
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %76, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %76, align 8
  %78 = icmp eq %"class.vk::CommandBuffer::Command"* %77, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.vk::CommandBuffer::Command"* %77 to void (%"class.vk::CommandBuffer::Command"*)***
  %81 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %81, i64 3
  %83 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %82, align 8
  call void %83(%"class.vk::CommandBuffer::Command"* nonnull %77) #16
  br label %84

84:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK2vk14PipelineLayout21getDynamicOffsetIndexEjj(%"class.vk::PipelineLayout"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer15bindIndexBufferEPNS_6BufferEm11VkIndexType(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i8* @_Znwm(i64 32) #17
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdIndexBufferBindE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64*
  store i64 %6, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %2, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 24
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 8
  %16 = ptrtoint i8* %8 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %18, align 8
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %20, align 8
  %22 = icmp ult %"class.std::__1::unique_ptr.307"* %19, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %24, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.307"* %19 to i64*
  store i64 %16, i64* %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %19, i64 1
  %27 = ptrtoint %"class.std::__1::unique_ptr.307"* %26 to i64
  %28 = bitcast %"class.std::__1::unique_ptr.307"** %18 to i64*
  store i64 %27, i64* %28, align 8
  br label %31

29:                                               ; preds = %4
  %30 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %30, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %31

31:                                               ; preds = %29, %23
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %32, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %32, align 8
  %34 = icmp eq %"class.vk::CommandBuffer::Command"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.vk::CommandBuffer::Command"* %33 to void (%"class.vk::CommandBuffer::Command"*)***
  %37 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %37, i64 3
  %39 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %38, align 8
  call void %39(%"class.vk::CommandBuffer::Command"* nonnull %33) #16
  br label %40

40:                                               ; preds = %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer8dispatchEjjj(%"class.vk::CommandBuffer"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.307", align 8
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 32) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_111CmdDispatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 12
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 20
  %16 = bitcast i8* %15 to i32*
  store i32 %1, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %7, i64 24
  %18 = bitcast i8* %17 to i32*
  store i32 %2, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 28
  %20 = bitcast i8* %19 to i32*
  store i32 %3, i32* %20, align 4
  %21 = ptrtoint i8* %7 to i64
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %5 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %23, align 8
  %25 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %25, align 8
  %27 = icmp ult %"class.std::__1::unique_ptr.307"* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.307"* %24 to i64*
  store i64 %21, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %24, i64 1
  %32 = ptrtoint %"class.std::__1::unique_ptr.307"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.307"** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %4
  %35 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %35, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %5) #16
  br label %36

36:                                               ; preds = %34, %28
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %5, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %37, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %37, align 8
  %39 = icmp eq %"class.vk::CommandBuffer::Command"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.vk::CommandBuffer::Command"* %38 to void (%"class.vk::CommandBuffer::Command"*)***
  %42 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %42, i64 3
  %44 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %43, align 8
  call void %44(%"class.vk::CommandBuffer::Command"* nonnull %38) #16
  br label %45

45:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer16dispatchIndirectEPNS_6BufferEm(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 24) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_119CmdDispatchIndirectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64 %2, i64* %12, align 8
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.307"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %21, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %16 to i64*
  store i64 %13, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.307"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %27, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %28

28:                                               ; preds = %26, %20
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %29, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %31 = icmp eq %"class.vk::CommandBuffer::Command"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.vk::CommandBuffer::Command"* %30 to void (%"class.vk::CommandBuffer::Command"*)***
  %34 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, i64 3
  %36 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %35, align 8
  call void %36(%"class.vk::CommandBuffer::Command"* nonnull %30) #16
  br label %37

37:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10copyBufferEPKNS_6BufferEPS1_jPK12VkBufferCopy(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, %"class.vk::Buffer"*, i32, %struct.VkBufferCopy* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %8 = ptrtoint %"class.vk::Buffer"* %2 to i64
  %9 = icmp eq i32 %3, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  %12 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  %13 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr.307"** %13 to i64*
  %18 = zext i32 %3 to i64
  br label %20

19:                                               ; preds = %48, %5
  ret void

20:                                               ; preds = %48, %10
  %21 = phi i64 [ 0, %10 ], [ %49, %48 ]
  %22 = getelementptr inbounds %struct.VkBufferCopy, %struct.VkBufferCopy* %4, i64 %21
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %23 = call i8* @_Znwm(i64 48) #17
  %24 = bitcast i8* %23 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_113CmdCopyBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 8
  %26 = bitcast i8* %25 to i64*
  store i64 %7, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %23, i64 16
  %28 = bitcast i8* %27 to i64*
  store i64 %8, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %23, i64 24
  %30 = bitcast %struct.VkBufferCopy* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 24, i1 false) #15
  %31 = ptrtoint i8* %23 to i64
  store i64 %31, i64* %12, align 8
  %32 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %13, align 8
  %33 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr.307"* %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %20
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %16, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.307"* %32 to i64*
  store i64 %31, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %32, i64 1
  %38 = ptrtoint %"class.std::__1::unique_ptr.307"* %37 to i64
  store i64 %38, i64* %17, align 8
  br label %40

39:                                               ; preds = %20
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %15, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %40

40:                                               ; preds = %39, %35
  %41 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %16, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %16, align 8
  %42 = icmp eq %"class.vk::CommandBuffer::Command"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.vk::CommandBuffer::Command"* %41 to void (%"class.vk::CommandBuffer::Command"*)***
  %45 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %45, i64 3
  %47 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, align 8
  call void %47(%"class.vk::CommandBuffer::Command"* nonnull %41) #16
  br label %48

48:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %49 = add nuw nsw i64 %21, 1
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %19, label %20
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer9copyImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageCopy* nocapture readonly) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.307", align 8
  %9 = ptrtoint %"class.vk::Image"* %1 to i64
  %10 = ptrtoint %"class.vk::Image"* %3 to i64
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i8*
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i64*
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  %20 = zext i32 %5 to i64
  br label %22

21:                                               ; preds = %50, %7
  ret void

22:                                               ; preds = %50, %12
  %23 = phi i64 [ 0, %12 ], [ %51, %50 ]
  %24 = getelementptr inbounds %struct.VkImageCopy, %struct.VkImageCopy* %6, i64 %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %25 = call i8* @_Znwm(i64 96) #17
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_112CmdCopyImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %9, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %10, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 24
  %32 = bitcast %struct.VkImageCopy* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 68, i1 false) #15
  %33 = ptrtoint i8* %25 to i64
  store i64 %33, i64* %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %22
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  store i64 %40, i64* %19, align 8
  br label %42

41:                                               ; preds = %22
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %17, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %8) #16
  br label %42

42:                                               ; preds = %41, %37
  %43 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %18, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %44 = icmp eq %"class.vk::CommandBuffer::Command"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.vk::CommandBuffer::Command"* %43 to void (%"class.vk::CommandBuffer::Command"*)***
  %47 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, i64 3
  %49 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, align 8
  call void %49(%"class.vk::CommandBuffer::Command"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %51 = add nuw nsw i64 %23, 1
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer9blitImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK11VkImageBlit8VkFilter(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageBlit* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr.307", align 8
  %10 = ptrtoint %"class.vk::Image"* %1 to i64
  %11 = ptrtoint %"class.vk::Image"* %3 to i64
  %12 = icmp eq i32 %5, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i8*
  %15 = bitcast %"class.std::__1::unique_ptr.307"* %9 to i64*
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.307"** %16 to i64*
  %21 = zext i32 %5 to i64
  br label %23

22:                                               ; preds = %53, %8
  ret void

23:                                               ; preds = %53, %13
  %24 = phi i64 [ 0, %13 ], [ %54, %53 ]
  %25 = getelementptr inbounds %struct.VkImageBlit, %struct.VkImageBlit* %6, i64 %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %26 = call i8* @_Znwm(i64 112) #17
  %27 = bitcast i8* %26 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_112CmdBlitImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds i8, i8* %26, i64 8
  %29 = bitcast i8* %28 to i64*
  store i64 %10, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %26, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %11, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %26, i64 24
  %33 = bitcast %struct.VkImageBlit* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %32, i8* align 4 %33, i64 80, i1 false) #15
  %34 = getelementptr inbounds i8, i8* %26, i64 104
  %35 = bitcast i8* %34 to i32*
  store i32 %7, i32* %35, align 8
  %36 = ptrtoint i8* %26 to i64
  store i64 %36, i64* %15, align 8
  %37 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %38 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr.307"* %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %23
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %19, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.307"* %37 to i64*
  store i64 %36, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %37, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr.307"* %42 to i64
  store i64 %43, i64* %20, align 8
  br label %45

44:                                               ; preds = %23
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %18, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %9) #16
  br label %45

45:                                               ; preds = %44, %40
  %46 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %19, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %19, align 8
  %47 = icmp eq %"class.vk::CommandBuffer::Command"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.vk::CommandBuffer::Command"* %46 to void (%"class.vk::CommandBuffer::Command"*)***
  %50 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %50, i64 3
  %52 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %51, align 8
  call void %52(%"class.vk::CommandBuffer::Command"* nonnull %46) #16
  br label %53

53:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  %54 = add nuw nsw i64 %24, 1
  %55 = icmp eq i64 %54, %21
  br i1 %55, label %22, label %23
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer17copyBufferToImageEPNS_6BufferEPNS_5ImageE13VkImageLayoutjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, %"class.vk::Image"*, i32, i32, %struct.VkBufferImageCopy* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %9 = ptrtoint %"class.vk::Image"* %2 to i64
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  %19 = zext i32 %4 to i64
  br label %21

20:                                               ; preds = %49, %6
  ret void

21:                                               ; preds = %49, %11
  %22 = phi i64 [ 0, %11 ], [ %50, %49 ]
  %23 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %5, i64 %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %24 = call i8* @_Znwm(i64 80) #17
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120CmdCopyBufferToImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 24
  %31 = bitcast %struct.VkBufferImageCopy* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 56, i1 false) #15
  %32 = ptrtoint i8* %24 to i64
  store i64 %32, i64* %13, align 8
  %33 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr.307"* %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %21
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.307"* %33 to i64*
  store i64 %32, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %33, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr.307"* %38 to i64
  store i64 %39, i64* %18, align 8
  br label %41

40:                                               ; preds = %21
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %16, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %41

41:                                               ; preds = %40, %36
  %42 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %17, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %43 = icmp eq %"class.vk::CommandBuffer::Command"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.vk::CommandBuffer::Command"* %42 to void (%"class.vk::CommandBuffer::Command"*)***
  %46 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, i64 3
  %48 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, align 8
  call void %48(%"class.vk::CommandBuffer::Command"* nonnull %42) #16
  br label %49

49:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %50 = add nuw nsw i64 %22, 1
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %20, label %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer17copyImageToBufferEPNS_5ImageE13VkImageLayoutPNS_6BufferEjPK17VkBufferImageCopy(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Buffer"*, i32, %struct.VkBufferImageCopy* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = ptrtoint %"class.vk::Image"* %1 to i64
  %9 = ptrtoint %"class.vk::Buffer"* %3 to i64
  %10 = icmp eq i32 %4, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  %19 = zext i32 %4 to i64
  br label %21

20:                                               ; preds = %49, %6
  ret void

21:                                               ; preds = %49, %11
  %22 = phi i64 [ 0, %11 ], [ %50, %49 ]
  %23 = getelementptr inbounds %struct.VkBufferImageCopy, %struct.VkBufferImageCopy* %5, i64 %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #15
  %24 = call i8* @_Znwm(i64 80) #17
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_120CmdCopyImageToBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  %29 = bitcast i8* %28 to i64*
  store i64 %9, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %24, i64 24
  %31 = bitcast %struct.VkBufferImageCopy* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 56, i1 false) #15
  %32 = ptrtoint i8* %24 to i64
  store i64 %32, i64* %13, align 8
  %33 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr.307"* %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %21
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.307"* %33 to i64*
  store i64 %32, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %33, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr.307"* %38 to i64
  store i64 %39, i64* %18, align 8
  br label %41

40:                                               ; preds = %21
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %16, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %41

41:                                               ; preds = %40, %36
  %42 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %17, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %43 = icmp eq %"class.vk::CommandBuffer::Command"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.vk::CommandBuffer::Command"* %42 to void (%"class.vk::CommandBuffer::Command"*)***
  %46 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, i64 3
  %48 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, align 8
  call void %48(%"class.vk::CommandBuffer::Command"* nonnull %42) #16
  br label %49

49:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #15
  %50 = add nuw nsw i64 %22, 1
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %20, label %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12updateBufferEPNS_6BufferEmmPKv(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i64, i8*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %8 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %9 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = tail call i8* @_Znwm(i64 48) #17
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdUpdateBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 16
  %15 = bitcast i8* %14 to i64*
  store i64 %2, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %10, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 24, i1 false) #15
  %17 = icmp eq i64 %3, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %5
  %19 = bitcast i8* %16 to %"class.std::__1::vector.945"*
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE11__vallocateEm(%"class.std::__1::vector.945"* %19, i64 %3) #16
  %20 = getelementptr inbounds i8, i8* %10, i64 32
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp sgt i64 %3, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %18
  %25 = inttoptr i64 %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %4, i64 %3, i1 false) #15
  %26 = getelementptr inbounds i8, i8* %25, i64 %3
  %27 = ptrtoint i8* %26 to i64
  br label %28

28:                                               ; preds = %24, %18
  %29 = phi i64 [ %27, %24 ], [ %22, %18 ]
  store i64 %29, i64* %21, align 8
  br label %30

30:                                               ; preds = %28, %5
  %31 = ptrtoint i8* %10 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %33, align 8
  %35 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %35, align 8
  %37 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %39, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %31, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %42 = ptrtoint %"class.std::__1::unique_ptr.307"* %41 to i64
  %43 = bitcast %"class.std::__1::unique_ptr.307"** %33 to i64*
  store i64 %42, i64* %43, align 8
  br label %45

44:                                               ; preds = %30
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %8, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %45

45:                                               ; preds = %44, %38
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %46, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %46, align 8
  %48 = icmp eq %"class.vk::CommandBuffer::Command"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.vk::CommandBuffer::Command"* %47 to void (%"class.vk::CommandBuffer::Command"*)***
  %51 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %51, i64 3
  %53 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %52, align 8
  call void %53(%"class.vk::CommandBuffer::Command"* nonnull %47) #16
  br label %54

54:                                               ; preds = %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10fillBufferEPNS_6BufferEmmj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 40) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_113CmdFillBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %7, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 32
  %18 = bitcast i8* %17 to i32*
  store i32 %4, i32* %18, align 8
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %21, align 8
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr.307"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %27, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.307"* %22 to i64*
  store i64 %19, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr.307"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.307"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %33, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %35, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %35, align 8
  %37 = icmp eq %"class.vk::CommandBuffer::Command"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.vk::CommandBuffer::Command"* %36 to void (%"class.vk::CommandBuffer::Command"*)***
  %40 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %40, i64 3
  %42 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %41, align 8
  call void %42(%"class.vk::CommandBuffer::Command"* nonnull %36) #16
  br label %43

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer15clearColorImageEPNS_5ImageE13VkImageLayoutPK17VkClearColorValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %union.VkClearColorValue* nocapture readonly, i32, %struct.VkImageSubresourceRange* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = ptrtoint %"class.vk::Image"* %1 to i64
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  %12 = bitcast %union.VkClearColorValue* %3 to i8*
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  %19 = zext i32 %4 to i64
  br label %21

20:                                               ; preds = %48, %6
  ret void

21:                                               ; preds = %48, %10
  %22 = phi i64 [ 0, %10 ], [ %49, %48 ]
  %23 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %24 = call i8* @_Znwm(i64 56) #17
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdClearColorImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 4 %12, i64 16, i1 false) #15
  %29 = getelementptr inbounds i8, i8* %24, i64 32
  %30 = bitcast %struct.VkImageSubresourceRange* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 20, i1 false) #15
  %31 = ptrtoint i8* %24 to i64
  store i64 %31, i64* %13, align 8
  %32 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %33 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %34 = icmp ult %"class.std::__1::unique_ptr.307"* %32, %33
  br i1 %34, label %35, label %39

35:                                               ; preds = %21
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.307"* %32 to i64*
  store i64 %31, i64* %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %32, i64 1
  %38 = ptrtoint %"class.std::__1::unique_ptr.307"* %37 to i64
  store i64 %38, i64* %18, align 8
  br label %40

39:                                               ; preds = %21
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %16, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %40

40:                                               ; preds = %39, %35
  %41 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %17, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %42 = icmp eq %"class.vk::CommandBuffer::Command"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %40
  %44 = bitcast %"class.vk::CommandBuffer::Command"* %41 to void (%"class.vk::CommandBuffer::Command"*)***
  %45 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %45, i64 3
  %47 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, align 8
  call void %47(%"class.vk::CommandBuffer::Command"* nonnull %41) #16
  br label %48

48:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %49 = add nuw nsw i64 %22, 1
  %50 = icmp eq i64 %49, %19
  br i1 %50, label %20, label %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer22clearDepthStencilImageEPNS_5ImageE13VkImageLayoutPK24VkClearDepthStencilValuejPK23VkImageSubresourceRange(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %struct.VkClearDepthStencilValue* nocapture readonly, i32, %struct.VkImageSubresourceRange* nocapture readonly) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = ptrtoint %"class.vk::Image"* %1 to i64
  %9 = icmp eq i32 %4, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  %12 = bitcast %struct.VkClearDepthStencilValue* %3 to i64*
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.307"** %14 to i64*
  %19 = zext i32 %4 to i64
  br label %21

20:                                               ; preds = %50, %6
  ret void

21:                                               ; preds = %50, %10
  %22 = phi i64 [ 0, %10 ], [ %51, %50 ]
  %23 = getelementptr inbounds %struct.VkImageSubresourceRange, %struct.VkImageSubresourceRange* %5, i64 %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #15
  %24 = call i8* @_Znwm(i64 48) #17
  %25 = bitcast i8* %24 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_125CmdClearDepthStencilImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = bitcast i8* %26 to i64*
  store i64 %8, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %24, i64 16
  %29 = bitcast i8* %28 to i64*
  %30 = load i64, i64* %12, align 4
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds i8, i8* %24, i64 24
  %32 = bitcast %struct.VkImageSubresourceRange* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 20, i1 false) #15
  %33 = ptrtoint i8* %24 to i64
  store i64 %33, i64* %13, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %14, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %21
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  store i64 %40, i64* %18, align 8
  br label %42

41:                                               ; preds = %21
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %16, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %42

42:                                               ; preds = %41, %37
  %43 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %17, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %17, align 8
  %44 = icmp eq %"class.vk::CommandBuffer::Command"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.vk::CommandBuffer::Command"* %43 to void (%"class.vk::CommandBuffer::Command"*)***
  %47 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, i64 3
  %49 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, align 8
  call void %49(%"class.vk::CommandBuffer::Command"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #15
  %51 = add nuw nsw i64 %22, 1
  %52 = icmp eq i64 %51, %19
  br i1 %52, label %20, label %21
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer16clearAttachmentsEjPK17VkClearAttachmentjPK11VkClearRect(%"class.vk::CommandBuffer"*, i32, %struct.VkClearAttachment* nocapture readonly, i32, %struct.VkClearRect* nocapture readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %24, label %8

8:                                                ; preds = %5
  %9 = icmp eq i32 %3, 0
  %10 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  %11 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  %12 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %13 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.307"** %12 to i64*
  %17 = zext i32 %1 to i64
  %18 = zext i32 %3 to i64
  br label %19

19:                                               ; preds = %25, %8
  %20 = phi i64 [ 0, %8 ], [ %26, %25 ]
  br i1 %9, label %25, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %struct.VkClearAttachment, %struct.VkClearAttachment* %2, i64 %20
  %23 = bitcast %struct.VkClearAttachment* %22 to i8*
  br label %28

24:                                               ; preds = %25, %5
  ret void

25:                                               ; preds = %53, %19
  %26 = add nuw nsw i64 %20, 1
  %27 = icmp eq i64 %26, %17
  br i1 %27, label %24, label %19

28:                                               ; preds = %53, %21
  %29 = phi i64 [ 0, %21 ], [ %54, %53 ]
  %30 = getelementptr inbounds %struct.VkClearRect, %struct.VkClearRect* %4, i64 %29
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %31 = call i8* @_Znwm(i64 56) #17
  %32 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdClearAttachmentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 4 %23, i64 24, i1 false) #15
  %34 = getelementptr inbounds i8, i8* %31, i64 32
  %35 = bitcast %struct.VkClearRect* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 4 %35, i64 24, i1 false) #15
  %36 = ptrtoint i8* %31 to i64
  store i64 %36, i64* %11, align 8
  %37 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %12, align 8
  %38 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %13, align 8
  %39 = icmp ult %"class.std::__1::unique_ptr.307"* %37, %38
  br i1 %39, label %40, label %44

40:                                               ; preds = %28
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %15, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.307"* %37 to i64*
  store i64 %36, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %37, i64 1
  %43 = ptrtoint %"class.std::__1::unique_ptr.307"* %42 to i64
  store i64 %43, i64* %16, align 8
  br label %45

44:                                               ; preds = %28
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %14, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %45

45:                                               ; preds = %44, %40
  %46 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %15, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %15, align 8
  %47 = icmp eq %"class.vk::CommandBuffer::Command"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.vk::CommandBuffer::Command"* %46 to void (%"class.vk::CommandBuffer::Command"*)***
  %50 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %50, i64 3
  %52 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %51, align 8
  call void %52(%"class.vk::CommandBuffer::Command"* nonnull %46) #16
  br label %53

53:                                               ; preds = %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %54 = add nuw nsw i64 %29, 1
  %55 = icmp eq i64 %54, %18
  br i1 %55, label %25, label %28
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12resolveImageEPKNS_5ImageE13VkImageLayoutPS1_S4_jPK14VkImageResolve(%"class.vk::CommandBuffer"*, %"class.vk::Image"*, i32, %"class.vk::Image"*, i32, i32, %struct.VkImageResolve* nocapture readonly) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::unique_ptr.307", align 8
  %9 = ptrtoint %"class.vk::Image"* %1 to i64
  %10 = ptrtoint %"class.vk::Image"* %3 to i64
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %21, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i8*
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %8 to i64*
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  %20 = zext i32 %5 to i64
  br label %22

21:                                               ; preds = %50, %7
  ret void

22:                                               ; preds = %50, %12
  %23 = phi i64 [ 0, %12 ], [ %51, %50 ]
  %24 = getelementptr inbounds %struct.VkImageResolve, %struct.VkImageResolve* %6, i64 %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %25 = call i8* @_Znwm(i64 96) #17
  %26 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdResolveImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %9, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %10, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 24
  %32 = bitcast %struct.VkImageResolve* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 68, i1 false) #15
  %33 = ptrtoint i8* %25 to i64
  store i64 %33, i64* %14, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %35 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %16, align 8
  %36 = icmp ult %"class.std::__1::unique_ptr.307"* %34, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %22
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %38 = bitcast %"class.std::__1::unique_ptr.307"* %34 to i64*
  store i64 %33, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::unique_ptr.307"* %39 to i64
  store i64 %40, i64* %19, align 8
  br label %42

41:                                               ; preds = %22
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %17, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %8) #16
  br label %42

42:                                               ; preds = %41, %37
  %43 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %18, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %18, align 8
  %44 = icmp eq %"class.vk::CommandBuffer::Command"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %42
  %46 = bitcast %"class.vk::CommandBuffer::Command"* %43 to void (%"class.vk::CommandBuffer::Command"*)***
  %47 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, i64 3
  %49 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %48, align 8
  call void %49(%"class.vk::CommandBuffer::Command"* nonnull %43) #16
  br label %50

50:                                               ; preds = %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %51 = add nuw nsw i64 %23, 1
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %21, label %22
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer8setEventEPNS_5EventEj(%"class.vk::CommandBuffer"*, %"class.vk::Event"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = ptrtoint %"class.vk::Event"* %1 to i64
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 24) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_114CmdSignalEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 8
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.307"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %21, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %16 to i64*
  store i64 %13, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.307"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %27, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %28

28:                                               ; preds = %26, %20
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %29, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %31 = icmp eq %"class.vk::CommandBuffer::Command"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.vk::CommandBuffer::Command"* %30 to void (%"class.vk::CommandBuffer::Command"*)***
  %34 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, i64 3
  %36 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %35, align 8
  call void %36(%"class.vk::CommandBuffer::Command"* nonnull %30) #16
  br label %37

37:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10resetEventEPNS_5EventEj(%"class.vk::CommandBuffer"*, %"class.vk::Event"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.307", align 8
  %5 = ptrtoint %"class.vk::Event"* %1 to i64
  %6 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = tail call i8* @_Znwm(i64 24) #17
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_113CmdResetEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  %12 = bitcast i8* %11 to i32*
  store i32 %2, i32* %12, align 8
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.std::__1::unique_ptr.307"* %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %16 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %15, align 8
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %18 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %19 = icmp ult %"class.std::__1::unique_ptr.307"* %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %21, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %16 to i64*
  store i64 %13, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %16, i64 1
  %24 = ptrtoint %"class.std::__1::unique_ptr.307"* %23 to i64
  %25 = bitcast %"class.std::__1::unique_ptr.307"** %15 to i64*
  store i64 %24, i64* %25, align 8
  br label %28

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %27, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %4) #16
  br label %28

28:                                               ; preds = %26, %20
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %29, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %31 = icmp eq %"class.vk::CommandBuffer::Command"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.vk::CommandBuffer::Command"* %30 to void (%"class.vk::CommandBuffer::Command"*)***
  %34 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %34, i64 3
  %36 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %35, align 8
  call void %36(%"class.vk::CommandBuffer::Command"* nonnull %30) #16
  br label %37

37:                                               ; preds = %28, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer10waitEventsEjPK23VkNonDispatchableHandleIP9VkEvent_TEjjjPK15VkMemoryBarrierjPK21VkBufferMemoryBarrierjPK20VkImageMemoryBarrier(%"class.vk::CommandBuffer"*, i32, %class.VkNonDispatchableHandle.4* nocapture readonly, i32, i32, i32, %struct.VkMemoryBarrier* nocapture readnone, i32, %struct.VkBufferMemoryBarrier* nocapture readnone, i32, %struct.VkImageMemoryBarrier* nocapture readnone) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.std::__1::unique_ptr.307", align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.std::__1::unique_ptr.307"* %12 to i8*
  %16 = bitcast %"class.std::__1::unique_ptr.307"* %12 to i64*
  %17 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %12, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr.307"** %17 to i64*
  %22 = zext i32 %1 to i64
  br label %24

23:                                               ; preds = %49, %11
  ret void

24:                                               ; preds = %49, %14
  %25 = phi i64 [ 0, %14 ], [ %50, %49 ]
  %26 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %2, i64 %25, i32 0
  %27 = load i64, i64* %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  %28 = call i8* @_Znwm(i64 16) #17
  %29 = bitcast i8* %28 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_112CmdWaitEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 8
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = ptrtoint i8* %28 to i64
  store i64 %32, i64* %16, align 8
  %33 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %17, align 8
  %34 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %18, align 8
  %35 = icmp ult %"class.std::__1::unique_ptr.307"* %33, %34
  br i1 %35, label %36, label %40

36:                                               ; preds = %24
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.307"* %33 to i64*
  store i64 %32, i64* %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %33, i64 1
  %39 = ptrtoint %"class.std::__1::unique_ptr.307"* %38 to i64
  store i64 %39, i64* %21, align 8
  br label %41

40:                                               ; preds = %24
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %19, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %12) #16
  br label %41

41:                                               ; preds = %40, %36
  %42 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %20, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %20, align 8
  %43 = icmp eq %"class.vk::CommandBuffer::Command"* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.vk::CommandBuffer::Command"* %42 to void (%"class.vk::CommandBuffer::Command"*)***
  %46 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %46, i64 3
  %48 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %47, align 8
  call void %48(%"class.vk::CommandBuffer::Command"* nonnull %42) #16
  br label %49

49:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  %50 = add nuw nsw i64 %25, 1
  %51 = icmp eq i64 %50, %22
  br i1 %51, label %23, label %24
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer4drawEjjjj(%"class.vk::CommandBuffer"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = tail call i8* @_Znwm(i64 24) #17
  %9 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_17CmdDrawE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 %1, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 %2, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %8, i64 20
  %17 = bitcast i8* %16 to i32*
  store i32 %4, i32* %17, align 4
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %21 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %20, align 8
  %22 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %22, align 8
  %24 = icmp ult %"class.std::__1::unique_ptr.307"* %21, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %26, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.307"* %21 to i64*
  store i64 %18, i64* %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %21, i64 1
  %29 = ptrtoint %"class.std::__1::unique_ptr.307"* %28 to i64
  %30 = bitcast %"class.std::__1::unique_ptr.307"** %20 to i64*
  store i64 %29, i64* %30, align 8
  br label %33

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %32, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %33

33:                                               ; preds = %31, %25
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %34, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %34, align 8
  %36 = icmp eq %"class.vk::CommandBuffer::Command"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.vk::CommandBuffer::Command"* %35 to void (%"class.vk::CommandBuffer::Command"*)***
  %39 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %39, i64 3
  %41 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %40, align 8
  call void %41(%"class.vk::CommandBuffer::Command"* nonnull %35) #16
  br label %42

42:                                               ; preds = %33, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer11drawIndexedEjjjij(%"class.vk::CommandBuffer"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.307", align 8
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 32) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_114CmdDrawIndexedE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 %2, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 20
  %18 = bitcast i8* %17 to i32*
  store i32 %4, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %9, i64 24
  %20 = bitcast i8* %19 to i32*
  store i32 %5, i32* %20, align 8
  %21 = ptrtoint i8* %9 to i64
  %22 = bitcast %"class.std::__1::unique_ptr.307"* %7 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %24 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %23, align 8
  %25 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %25, align 8
  %27 = icmp ult %"class.std::__1::unique_ptr.307"* %24, %26
  br i1 %27, label %28, label %34

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %29, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.307"* %24 to i64*
  store i64 %21, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %24, i64 1
  %32 = ptrtoint %"class.std::__1::unique_ptr.307"* %31 to i64
  %33 = bitcast %"class.std::__1::unique_ptr.307"** %23 to i64*
  store i64 %32, i64* %33, align 8
  br label %36

34:                                               ; preds = %6
  %35 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %35, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %7) #16
  br label %36

36:                                               ; preds = %34, %28
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %7, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %37, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %37, align 8
  %39 = icmp eq %"class.vk::CommandBuffer::Command"* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.vk::CommandBuffer::Command"* %38 to void (%"class.vk::CommandBuffer::Command"*)***
  %42 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %42, i64 3
  %44 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %43, align 8
  call void %44(%"class.vk::CommandBuffer::Command"* nonnull %38) #16
  br label %45

45:                                               ; preds = %36, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer12drawIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 32) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdDrawIndirectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %7, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 28
  %18 = bitcast i8* %17 to i32*
  store i32 %4, i32* %18, align 4
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %21, align 8
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr.307"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %27, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.307"* %22 to i64*
  store i64 %19, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr.307"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.307"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %33, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %35, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %35, align 8
  %37 = icmp eq %"class.vk::CommandBuffer::Command"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.vk::CommandBuffer::Command"* %36 to void (%"class.vk::CommandBuffer::Command"*)***
  %40 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %40, i64 3
  %42 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %41, align 8
  call void %42(%"class.vk::CommandBuffer::Command"* nonnull %36) #16
  br label %43

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer19drawIndexedIndirectEPNS_6BufferEmjj(%"class.vk::CommandBuffer"*, %"class.vk::Buffer"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.307", align 8
  %7 = ptrtoint %"class.vk::Buffer"* %1 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  %9 = tail call i8* @_Znwm(i64 32) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_122CmdDrawIndexedIndirectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 %7, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast i8* %13 to i64*
  store i64 %2, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %9, i64 28
  %18 = bitcast i8* %17 to i32*
  store i32 %4, i32* %18, align 4
  %19 = ptrtoint i8* %9 to i64
  %20 = bitcast %"class.std::__1::unique_ptr.307"* %6 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %21, align 8
  %23 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr.307"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %27, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.307"* %22 to i64*
  store i64 %19, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr.307"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.307"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %5
  %33 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"* %33, %"class.std::__1::unique_ptr.307"* nonnull dereferenceable(8) %6) #16
  br label %34

34:                                               ; preds = %32, %26
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %35, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %35, align 8
  %37 = icmp eq %"class.vk::CommandBuffer::Command"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.vk::CommandBuffer::Command"* %36 to void (%"class.vk::CommandBuffer::Command"*)***
  %40 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %40, i64 3
  %42 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %41, align 8
  call void %42(%"class.vk::CommandBuffer::Command"* nonnull %36) #16
  br label %43

43:                                               ; preds = %34, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer20beginDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"* nocapture, %struct.VkDebugUtilsLabelEXT* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer18endDebugUtilsLabelEv(%"class.vk::CommandBuffer"* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN2vk13CommandBuffer21insertDebugUtilsLabelEPK20VkDebugUtilsLabelEXT(%"class.vk::CommandBuffer"* nocapture, %struct.VkDebugUtilsLabelEXT* nocapture) local_unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer6submitERNS0_14ExecutionStateE(%"class.vk::CommandBuffer"* nocapture, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 1
  store i32 3, i32* %3, align 8
  %4 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %4, align 8
  %6 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.307"* %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %2
  store i32 2, i32* %3, align 8
  ret void

10:                                               ; preds = %2, %10
  %11 = phi %"class.std::__1::unique_ptr.307"* [ %17, %10 ], [ %5, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %12, align 8
  %14 = bitcast %"class.vk::CommandBuffer::Command"* %13 to void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)***
  %15 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)**, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*** %14, align 8
  %16 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)** %15, align 8
  tail call void %16(%"class.vk::CommandBuffer::Command"* %13, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1) #16
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 1
  %18 = icmp eq %"class.std::__1::unique_ptr.307"* %17, %7
  br i1 %18, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK2vk13CommandBuffer15submitSecondaryERNS0_14ExecutionStateE(%"class.vk::CommandBuffer"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.307"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::unique_ptr.307"* [ %16, %9 ], [ %4, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %11, align 8
  %13 = bitcast %"class.vk::CommandBuffer::Command"* %12 to void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)***
  %14 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)**, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*** %13, align 8
  %15 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)** %14, align 8
  tail call void %15(%"class.vk::CommandBuffer::Command"* %12, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1) #16
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %10, i64 1
  %17 = icmp eq %"class.std::__1::unique_ptr.307"* %16, %6
  br i1 %17, label %8, label %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk13CommandBuffer14ExecutionState15bindAttachmentsEPNS_11AttachmentsE(%"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly, %"struct.vk::Attachments"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 2
  %4 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %3, align 16
  %5 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %4, i64 0, i32 3
  %8 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %7, align 8
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %8, i64 %9, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %8, i64 %9, i32 5
  %15 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 3
  br label %20

16:                                               ; preds = %32, %2
  %17 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %8, i64 %9, i32 7
  %18 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %17, align 8
  %19 = icmp eq %struct.VkAttachmentReference* %18, null
  br i1 %19, label %58, label %37

20:                                               ; preds = %13, %32
  %21 = phi i32 [ %11, %13 ], [ %33, %32 ]
  %22 = phi i64 [ 0, %13 ], [ %34, %32 ]
  %23 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %14, align 8
  %24 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %23, i64 %22, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %15, align 8
  %29 = tail call %"class.vk::ImageView"* @_ZNK2vk11Framebuffer13getAttachmentEj(%"class.vk::Framebuffer"* %28, i32 %25) #16
  %30 = getelementptr inbounds %"struct.vk::Attachments", %"struct.vk::Attachments"* %1, i64 0, i32 0, i64 %22
  store %"class.vk::ImageView"* %29, %"class.vk::ImageView"** %30, align 8
  %31 = load i32, i32* %10, align 8
  br label %32

32:                                               ; preds = %20, %27
  %33 = phi i32 [ %21, %20 ], [ %31, %27 ]
  %34 = add nuw nsw i64 %22, 1
  %35 = zext i32 %33 to i64
  %36 = icmp ult i64 %34, %35
  br i1 %36, label %20, label %16

37:                                               ; preds = %16
  %38 = getelementptr inbounds %struct.VkAttachmentReference, %struct.VkAttachmentReference* %18, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %58, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 3
  %43 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %42, align 8
  %44 = tail call %"class.vk::ImageView"* @_ZNK2vk11Framebuffer13getAttachmentEj(%"class.vk::Framebuffer"* %43, i32 %39) #16
  %45 = getelementptr inbounds %"class.vk::ImageView", %"class.vk::ImageView"* %44, i64 0, i32 4, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.vk::Attachments", %"struct.vk::Attachments"* %1, i64 0, i32 1
  store %"class.vk::ImageView"* %44, %"class.vk::ImageView"** %50, align 8
  %51 = load i32, i32* %45, align 8
  br label %52

52:                                               ; preds = %41, %49
  %53 = phi i32 [ %46, %41 ], [ %51, %49 ]
  %54 = and i32 %53, 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.vk::Attachments", %"struct.vk::Attachments"* %1, i64 0, i32 2
  store %"class.vk::ImageView"* %44, %"class.vk::ImageView"** %57, align 8
  br label %58

58:                                               ; preds = %52, %56, %37, %16
  ret void
}

; Function Attrs: optsize
declare %"class.vk::ImageView"* @_ZNK2vk11Framebuffer13getAttachmentEj(%"class.vk::Framebuffer"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk13CommandBuffer14ExecutionState9viewCountEv(%"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 2
  %3 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %2, align 16
  %4 = icmp eq %"class.vk::RenderPass"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %3, i64 0, i32 8
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 10
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %7, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  br label %16

16:                                               ; preds = %9, %5, %1
  %17 = phi i64 [ 1, %1 ], [ %15, %9 ], [ 1, %5 ]
  %18 = tail call i64 @llvm.ctpop.i64(i64 %17) #15, !range !2
  %19 = trunc i64 %18 to i32
  ret i32 %19
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.305"*, %"class.std::__1::unique_ptr.307"* dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"struct.std::__1::__split_buffer.448", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 2
  %5 = bitcast %"struct.std::__1::__split_buffer.448"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %3, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %3, i64 0, i32 3, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %3, i64 0, i32 3, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.307"** %11 to i64*
  %13 = bitcast %"struct.std::__1::__split_buffer.448"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 40, i1 false)
  %14 = load i64, i64* %12, align 8
  %15 = bitcast %"class.std::__1::vector.305"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = add nsw i64 %18, 1
  %20 = icmp ugt i64 %19, 2305843009213693951
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::vector.305"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #18
  unreachable

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"class.std::__1::unique_ptr.307"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %16
  %28 = ashr exact i64 %27, 3
  %29 = icmp ult i64 %28, 1152921504606846975
  br i1 %29, label %32, label %30

30:                                               ; preds = %23
  store %"class.std::__1::unique_ptr.307"* null, %"class.std::__1::unique_ptr.307"** %9, align 8
  %31 = bitcast %"class.std::__1::allocator.316"** %10 to %"class.std::__1::__compressed_pair.313"**
  store %"class.std::__1::__compressed_pair.313"* %4, %"class.std::__1::__compressed_pair.313"** %31, align 8
  br label %41

32:                                               ; preds = %23
  %33 = ashr exact i64 %27, 2
  %34 = icmp ult i64 %33, %19
  %35 = select i1 %34, i64 %19, i64 %33
  store %"class.std::__1::unique_ptr.307"* null, %"class.std::__1::unique_ptr.307"** %9, align 8
  %36 = bitcast %"class.std::__1::allocator.316"** %10 to %"class.std::__1::__compressed_pair.313"**
  store %"class.std::__1::__compressed_pair.313"* %4, %"class.std::__1::__compressed_pair.313"** %36, align 8
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %32
  %39 = icmp ugt i64 %35, 2305843009213693951
  br i1 %39, label %40, label %41

40:                                               ; preds = %38
  tail call void @abort() #18
  unreachable

41:                                               ; preds = %30, %38
  %42 = phi i64 [ 2305843009213693951, %30 ], [ %35, %38 ]
  %43 = shl i64 %42, 3
  %44 = tail call i8* @_Znwm(i64 %43) #17
  %45 = bitcast i8* %44 to %"class.std::__1::unique_ptr.307"*
  br label %46

46:                                               ; preds = %32, %41
  %47 = phi i64 [ %42, %41 ], [ 0, %32 ]
  %48 = phi %"class.std::__1::unique_ptr.307"* [ %45, %41 ], [ null, %32 ]
  store %"class.std::__1::unique_ptr.307"* %48, %"class.std::__1::unique_ptr.307"** %6, align 8
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %48, i64 %18
  store %"class.std::__1::unique_ptr.307"* %49, %"class.std::__1::unique_ptr.307"** %7, align 8
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %48, i64 %47
  store %"class.std::__1::unique_ptr.307"* %50, %"class.std::__1::unique_ptr.307"** %9, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %1, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::unique_ptr.307"* %1 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %51, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.307"* %49 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %49, i64 1
  store %"class.std::__1::unique_ptr.307"* %55, %"class.std::__1::unique_ptr.307"** %8, align 8
  %56 = getelementptr inbounds %"class.std::__1::vector.305", %"class.std::__1::vector.305"* %0, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %56, align 8
  %58 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %11, align 8
  %59 = icmp eq %"class.std::__1::unique_ptr.307"* %58, %57
  br i1 %59, label %60, label %66

60:                                               ; preds = %46
  %61 = insertelement <2 x %"class.std::__1::unique_ptr.307"*> undef, %"class.std::__1::unique_ptr.307"* %55, i32 0
  %62 = insertelement <2 x %"class.std::__1::unique_ptr.307"*> %61, %"class.std::__1::unique_ptr.307"* %50, i32 1
  %63 = ptrtoint <2 x %"class.std::__1::unique_ptr.307"*> %62 to <2 x i64>
  %64 = ptrtoint %"class.std::__1::unique_ptr.307"* %58 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.307"* %57 to i64
  br label %83

66:                                               ; preds = %46, %66
  %67 = phi %"class.std::__1::unique_ptr.307"* [ %76, %66 ], [ %49, %46 ]
  %68 = phi %"class.std::__1::unique_ptr.307"* [ %70, %66 ], [ %58, %46 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %67, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %68, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.307"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %71, align 8
  %74 = bitcast %"class.std::__1::unique_ptr.307"* %69 to i64*
  store i64 %73, i64* %74, align 8
  %75 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %7, align 8
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %75, i64 -1
  store %"class.std::__1::unique_ptr.307"* %76, %"class.std::__1::unique_ptr.307"** %7, align 8
  %77 = icmp eq %"class.std::__1::unique_ptr.307"* %70, %57
  br i1 %77, label %78, label %66

78:                                               ; preds = %66
  %79 = load i64, i64* %15, align 8
  %80 = load i64, i64* %12, align 8
  %81 = bitcast %"class.std::__1::unique_ptr.307"** %8 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8
  br label %83

83:                                               ; preds = %60, %78
  %84 = phi i64 [ %64, %60 ], [ %80, %78 ]
  %85 = phi %"class.std::__1::unique_ptr.307"* [ %49, %60 ], [ %76, %78 ]
  %86 = phi i64 [ %65, %60 ], [ %79, %78 ]
  %87 = phi <2 x i64> [ %63, %60 ], [ %82, %78 ]
  %88 = bitcast %"class.std::__1::unique_ptr.307"** %8 to i64*
  %89 = bitcast %"class.std::__1::unique_ptr.307"** %9 to i64*
  %90 = ptrtoint %"class.std::__1::unique_ptr.307"* %85 to i64
  %91 = bitcast %"class.std::__1::unique_ptr.307"** %7 to i64*
  store i64 %90, i64* %15, align 8
  store i64 %86, i64* %91, align 8
  store i64 %84, i64* %88, align 8
  %92 = load i64, i64* %25, align 8
  %93 = bitcast %"class.std::__1::unique_ptr.307"** %11 to <2 x i64>*
  store <2 x i64> %87, <2 x i64>* %93, align 8
  store i64 %92, i64* %89, align 8
  %94 = bitcast %"struct.std::__1::__split_buffer.448"* %3 to i64*
  store i64 %86, i64* %94, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEED2Ev(%"struct.std::__1::__split_buffer.448"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN2vk13CommandBuffer7CommandENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEED2Ev(%"struct.std::__1::__split_buffer.448"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %0, i64 0, i32 2
  %5 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.307"* %5, %3
  br i1 %6, label %21, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::unique_ptr.307"* [ %19, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %8, i64 -1
  store %"class.std::__1::unique_ptr.307"* %9, %"class.std::__1::unique_ptr.307"** %4, align 8
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %10, align 8
  store %"class.vk::CommandBuffer::Command"* null, %"class.vk::CommandBuffer::Command"** %10, align 8
  %12 = icmp eq %"class.vk::CommandBuffer::Command"* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.vk::CommandBuffer::Command"* %11 to void (%"class.vk::CommandBuffer::Command"*)***
  %15 = load void (%"class.vk::CommandBuffer::Command"*)**, void (%"class.vk::CommandBuffer::Command"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %15, i64 3
  %17 = load void (%"class.vk::CommandBuffer::Command"*)*, void (%"class.vk::CommandBuffer::Command"*)** %16, align 8
  tail call void %17(%"class.vk::CommandBuffer::Command"* nonnull %11) #16
  br label %18

18:                                               ; preds = %13, %7
  %19 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %4, align 8
  %20 = icmp eq %"class.std::__1::unique_ptr.307"* %19, %3
  br i1 %20, label %21, label %7

21:                                               ; preds = %18, %1
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer.448", %"struct.std::__1::__split_buffer.448"* %0, i64 0, i32 0
  %23 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %22, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr.307"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.std::__1::unique_ptr.307"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %21, %25
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #9

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdBeginRenderPass4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdBeginRenderPass"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 1
  %4 = bitcast %"class.vk::RenderPass"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %7 = bitcast %"class.vk::RenderPass"** %6 to i64*
  store i64 %5, i64* %7, align 16
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 2
  %9 = bitcast %"class.vk::Framebuffer"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 3
  %12 = bitcast %"class.vk::Framebuffer"** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  store i32 0, i32* %13, align 4
  %14 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %8, align 8
  %15 = inttoptr i64 %5 to %"class.vk::RenderPass"*
  %16 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 5
  %19 = load %union.VkClearValue*, %union.VkClearValue** %18, align 8
  %20 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 3
  tail call void @_ZN2vk11Framebuffer5clearEPKNS_10RenderPassEjPK12VkClearValueRK8VkRect2D(%"class.vk::Framebuffer"* %14, %"class.vk::RenderPass"* %15, i32 %17, %union.VkClearValue* %19, %struct.VkRect2D* dereferenceable(16) %20) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdBeginRenderPass11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdBeginRenderPass"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdBeginRenderPassD2Ev(%"class.(anonymous namespace)::CmdBeginRenderPass"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdBeginRenderPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 5
  %4 = load %union.VkClearValue*, %union.VkClearValue** %3, align 8
  %5 = icmp eq %union.VkClearValue* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %union.VkClearValue* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #17
  br label %8

8:                                                ; preds = %6, %1
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdBeginRenderPassD0Ev(%"class.(anonymous namespace)::CmdBeginRenderPass"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_118CmdBeginRenderPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginRenderPass", %"class.(anonymous namespace)::CmdBeginRenderPass"* %0, i64 0, i32 5
  %4 = load %union.VkClearValue*, %union.VkClearValue** %3, align 8
  %5 = icmp eq %union.VkClearValue* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %union.VkClearValue* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #17
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.(anonymous namespace)::CmdBeginRenderPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk11Framebuffer5clearEPKNS_10RenderPassEjPK12VkClearValueRK8VkRect2D(%"class.vk::Framebuffer"*, %"class.vk::RenderPass"*, i32, %union.VkClearValue*, %struct.VkRect2D* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #16
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #18
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #17
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #15
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdaPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdNextSubpass4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdNextSubpass"* nocapture readnone, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %4 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %3, align 16
  %5 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %4, i64 0, i32 3
  %8 = load %struct.VkSubpassDescription*, %struct.VkSubpassDescription** %7, align 8
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %struct.VkSubpassDescription, %struct.VkSubpassDescription* %8, i64 %9, i32 6
  %11 = load %struct.VkAttachmentReference*, %struct.VkAttachmentReference** %10, align 8
  %12 = icmp eq %struct.VkAttachmentReference* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %15 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %14, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %15) #16
  %16 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 3
  %17 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %16, align 8
  %18 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %3, align 16
  %19 = load i32, i32* %5, align 4
  tail call void @_ZN2vk11Framebuffer7resolveEPKNS_10RenderPassEj(%"class.vk::Framebuffer"* %17, %"class.vk::RenderPass"* %18, i32 %19) #16
  %20 = load i32, i32* %5, align 4
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi i32 [ %6, %2 ], [ %20, %13 ]
  %23 = add i32 %22, 1
  store i32 %23, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdNextSubpass11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdNextSubpass"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdNextSubpassD0Ev(%"class.(anonymous namespace)::CmdNextSubpass"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdNextSubpass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk11Framebuffer7resolveEPKNS_10RenderPassEj(%"class.vk::Framebuffer"*, %"class.vk::RenderPass"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_116CmdEndRenderPass4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdEndRenderPass"* nocapture readnone, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %4) #16
  %5 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 3
  %6 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %5, align 8
  %7 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %8 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %7, align 16
  %9 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  tail call void @_ZN2vk11Framebuffer7resolveEPKNS_10RenderPassEj(%"class.vk::Framebuffer"* %6, %"class.vk::RenderPass"* %8, i32 %10) #16
  %11 = bitcast %"class.vk::RenderPass"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %11, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_116CmdEndRenderPass11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdEndRenderPass"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_116CmdEndRenderPassD0Ev(%"class.(anonymous namespace)::CmdEndRenderPass"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdEndRenderPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdExecuteCommands4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdExecuteCommands"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdExecuteCommands", %"class.(anonymous namespace)::CmdExecuteCommands"* %0, i64 0, i32 1
  %4 = load %"class.vk::CommandBuffer"*, %"class.vk::CommandBuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %5, align 8
  %7 = getelementptr inbounds %"class.vk::CommandBuffer", %"class.vk::CommandBuffer"* %4, i64 0, i32 3, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.307"*, %"class.std::__1::unique_ptr.307"** %7, align 8
  %9 = icmp eq %"class.std::__1::unique_ptr.307"* %6, %8
  br i1 %9, label %19, label %10

10:                                               ; preds = %2, %10
  %11 = phi %"class.std::__1::unique_ptr.307"* [ %17, %10 ], [ %6, %2 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.vk::CommandBuffer::Command"*, %"class.vk::CommandBuffer::Command"** %12, align 8
  %14 = bitcast %"class.vk::CommandBuffer::Command"* %13 to void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)***
  %15 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)**, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*** %14, align 8
  %16 = load void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)*, void (%"class.vk::CommandBuffer::Command"*, %"struct.vk::CommandBuffer::ExecutionState"*)** %15, align 8
  tail call void %16(%"class.vk::CommandBuffer::Command"* %13, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1) #16
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.307"* %11, i64 1
  %18 = icmp eq %"class.std::__1::unique_ptr.307"* %17, %8
  br i1 %18, label %19, label %10

19:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdExecuteCommands11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdExecuteCommands"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdExecuteCommandsD0Ev(%"class.(anonymous namespace)::CmdExecuteCommands"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdExecuteCommands"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdDispatch4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDispatch"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1
  %4 = bitcast %"struct.vk::CommandBuffer::ExecutionState::PipelineState"* %3 to %"class.vk::ComputePipeline"**
  %5 = load %"class.vk::ComputePipeline"*, %"class.vk::ComputePipeline"** %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatch", %"class.(anonymous namespace)::CmdDispatch"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 1
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 2
  %20 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 3
  %21 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 6
  tail call void @_ZN2vk15ComputePipeline3runEjjjjjjRKNSt3__15arrayIPNS_13DescriptorSetELm4EEERKNS2_IPhLm4EEERKNS2_IjLm12EEERKNS_8Pipeline19PushConstantStorageE(%"class.vk::ComputePipeline"* %5, i32 %7, i32 %9, i32 %11, i32 %13, i32 %15, i32 %17, %"struct.std::__1::array.427"* dereferenceable(32) %18, %"struct.std::__1::array.422"* dereferenceable(32) %19, %"struct.std::__1::array.423"* dereferenceable(48) %20, %"struct.vk::Pipeline::PushConstantStorage"* dereferenceable(128) %21) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdDispatch11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDispatch"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdDispatchD0Ev(%"class.(anonymous namespace)::CmdDispatch"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDispatch"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk15ComputePipeline3runEjjjjjjRKNSt3__15arrayIPNS_13DescriptorSetELm4EEERKNS2_IPhLm4EEERKNS2_IjLm12EEERKNS_8Pipeline19PushConstantStorageE(%"class.vk::ComputePipeline"*, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.427"* dereferenceable(32), %"struct.std::__1::array.422"* dereferenceable(32), %"struct.std::__1::array.423"* dereferenceable(48), %"struct.vk::Pipeline::PushConstantStorage"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdPipelineBarrier4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdPipelineBarrier"* nocapture readnone, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %4) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdPipelineBarrier11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdPipelineBarrier"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdPipelineBarrierD0Ev(%"class.(anonymous namespace)::CmdPipelineBarrier"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdPipelineBarrier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdPipelineBind4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdPipelineBind"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdPipelineBind", %"class.(anonymous namespace)::CmdPipelineBind"* %0, i64 0, i32 2
  %4 = bitcast %"class.vk::Pipeline"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdPipelineBind", %"class.(anonymous namespace)::CmdPipelineBind"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 %8
  %10 = bitcast %"struct.vk::CommandBuffer::ExecutionState::PipelineState"* %9 to i64*
  store i64 %5, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdPipelineBind11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdPipelineBind"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdPipelineBindD0Ev(%"class.(anonymous namespace)::CmdPipelineBind"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdPipelineBind"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdVertexBufferBind4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdVertexBufferBind"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdVertexBufferBind", %"class.(anonymous namespace)::CmdVertexBufferBind"* %0, i64 0, i32 2
  %4 = bitcast %"class.vk::Buffer"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdVertexBufferBind", %"class.(anonymous namespace)::CmdVertexBufferBind"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 7, i64 %8
  %10 = bitcast %"struct.vk::VertexInputBinding"* %9 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %10, align 16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdVertexBufferBind11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdVertexBufferBind"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdVertexBufferBindD0Ev(%"class.(anonymous namespace)::CmdVertexBufferBind"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdVertexBufferBind"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdBeginQuery4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdBeginQuery"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %4 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginQuery", %"class.(anonymous namespace)::CmdBeginQuery"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginQuery", %"class.(anonymous namespace)::CmdBeginQuery"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdBeginQuery", %"class.(anonymous namespace)::CmdBeginQuery"* %0, i64 0, i32 3
  br label %8

8:                                                ; preds = %36, %2
  %9 = phi i32 [ 0, %2 ], [ %41, %36 ]
  %10 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %3, align 16
  %11 = icmp eq %"class.vk::RenderPass"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %10, i64 0, i32 8
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %12
  %17 = load i32, i32* %4, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %14, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  br label %22

22:                                               ; preds = %8, %12, %16
  %23 = phi i64 [ 1, %8 ], [ %21, %16 ], [ 1, %12 ]
  %24 = tail call i64 @llvm.ctpop.i64(i64 %23) #15, !range !2
  %25 = trunc i64 %24 to i32
  %26 = icmp ult i32 %9, %25
  br i1 %26, label %36, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %29 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %28, align 16
  %30 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %5, align 8
  %31 = load i32, i32* %6, align 8
  %32 = getelementptr inbounds %"class.vk::QueryPool", %"class.vk::QueryPool"* %30, i64 0, i32 0
  %33 = load %"class.vk::Query"*, %"class.vk::Query"** %32, align 8
  %34 = zext i32 %31 to i64
  %35 = getelementptr inbounds %"class.vk::Query", %"class.vk::Query"* %33, i64 %34
  tail call void @_ZN2sw8Renderer8addQueryEPN2vk5QueryE(%"class.sw::Renderer"* %29, %"class.vk::Query"* %35) #16
  ret void

36:                                               ; preds = %22
  %37 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %5, align 8
  %38 = load i32, i32* %6, align 8
  %39 = add i32 %38, %9
  %40 = load i32, i32* %7, align 4
  tail call void @_ZN2vk9QueryPool5beginEjj(%"class.vk::QueryPool"* %37, i32 %39, i32 %40) #16
  %41 = add nuw nsw i32 %9, 1
  br label %8
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdBeginQuery11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdBeginQuery"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdBeginQueryD0Ev(%"class.(anonymous namespace)::CmdBeginQuery"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdBeginQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool5beginEjj(%"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw8Renderer8addQueryEPN2vk5QueryE(%"class.sw::Renderer"*, %"class.vk::Query"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdEndQuery4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdEndQuery"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdEndQuery", %"class.(anonymous namespace)::CmdEndQuery"* %0, i64 0, i32 1
  %6 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdEndQuery", %"class.(anonymous namespace)::CmdEndQuery"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.vk::QueryPool", %"class.vk::QueryPool"* %6, i64 0, i32 0
  %10 = load %"class.vk::Query"*, %"class.vk::Query"** %9, align 8
  %11 = zext i32 %8 to i64
  %12 = getelementptr inbounds %"class.vk::Query", %"class.vk::Query"* %10, i64 %11
  tail call void @_ZN2sw8Renderer11removeQueryEPN2vk5QueryE(%"class.sw::Renderer"* %4, %"class.vk::Query"* %12) #16
  %13 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  br label %15

15:                                               ; preds = %34, %2
  %16 = phi i32 [ 1, %2 ], [ %42, %34 ]
  %17 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %13, align 16
  %18 = icmp eq %"class.vk::RenderPass"* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %17, i64 0, i32 8
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* %14, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %21, i64 %25
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %15, %19, %23
  %30 = phi i64 [ 1, %15 ], [ %28, %23 ], [ 1, %19 ]
  %31 = tail call i64 @llvm.ctpop.i64(i64 %30) #15, !range !2
  %32 = trunc i64 %31 to i32
  %33 = icmp ult i32 %16, %32
  br i1 %33, label %34, label %43

34:                                               ; preds = %29
  %35 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %5, align 8
  %36 = load i32, i32* %7, align 8
  %37 = add i32 %36, %16
  %38 = getelementptr inbounds %"class.vk::QueryPool", %"class.vk::QueryPool"* %35, i64 0, i32 0
  %39 = load %"class.vk::Query"*, %"class.vk::Query"** %38, align 8
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.vk::Query", %"class.vk::Query"* %39, i64 %40
  tail call void @_ZN2vk5Query3setEl(%"class.vk::Query"* %41, i64 0) #16
  %42 = add nuw nsw i32 %16, 1
  br label %15

43:                                               ; preds = %29, %63
  %44 = phi %"class.vk::RenderPass"* [ %68, %63 ], [ %17, %29 ]
  %45 = phi i32 [ %67, %63 ], [ 0, %29 ]
  %46 = icmp eq %"class.vk::RenderPass"* %44, null
  br i1 %46, label %57, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %44, i64 0, i32 8
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = load i32, i32* %14, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %49, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %47, %51
  %58 = phi i64 [ 1, %43 ], [ %56, %51 ], [ 1, %47 ]
  %59 = tail call i64 @llvm.ctpop.i64(i64 %58) #15, !range !2
  %60 = trunc i64 %59 to i32
  %61 = icmp ult i32 %45, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %57
  ret void

63:                                               ; preds = %57
  %64 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %5, align 8
  %65 = load i32, i32* %7, align 8
  %66 = add i32 %65, %45
  tail call void @_ZN2vk9QueryPool3endEj(%"class.vk::QueryPool"* %64, i32 %66) #16
  %67 = add nuw nsw i32 %45, 1
  %68 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %13, align 16
  br label %43
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdEndQuery11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdEndQuery"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_111CmdEndQueryD0Ev(%"class.(anonymous namespace)::CmdEndQuery"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdEndQuery"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Renderer11removeQueryEPN2vk5QueryE(%"class.sw::Renderer"*, %"class.vk::Query"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk5Query3setEl(%"class.vk::Query"*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool3endEj(%"class.vk::QueryPool"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdResetQueryPool4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdResetQueryPool"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdResetQueryPool", %"class.(anonymous namespace)::CmdResetQueryPool"* %0, i64 0, i32 1
  %4 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdResetQueryPool", %"class.(anonymous namespace)::CmdResetQueryPool"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdResetQueryPool", %"class.(anonymous namespace)::CmdResetQueryPool"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  tail call void @_ZN2vk9QueryPool5resetEjj(%"class.vk::QueryPool"* %4, i32 %6, i32 %8) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdResetQueryPool11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdResetQueryPool"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdResetQueryPoolD0Ev(%"class.(anonymous namespace)::CmdResetQueryPool"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdResetQueryPool"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool5resetEjj(%"class.vk::QueryPool"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdWriteTimeStamp4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdWriteTimeStamp"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdWriteTimeStamp", %"class.(anonymous namespace)::CmdWriteTimeStamp"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, 3
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %8 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %7, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %8) #16
  br label %9

9:                                                ; preds = %6, %2
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CmdWriteTimeStamp", %"class.(anonymous namespace)::CmdWriteTimeStamp"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CmdWriteTimeStamp", %"class.(anonymous namespace)::CmdWriteTimeStamp"* %0, i64 0, i32 2
  br label %14

14:                                               ; preds = %34, %9
  %15 = phi i32 [ 0, %9 ], [ %38, %34 ]
  %16 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %10, align 16
  %17 = icmp eq %"class.vk::RenderPass"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %16, i64 0, i32 8
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %11, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %20, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  br label %28

28:                                               ; preds = %14, %18, %22
  %29 = phi i64 [ 1, %14 ], [ %27, %22 ], [ 1, %18 ]
  %30 = tail call i64 @llvm.ctpop.i64(i64 %29) #15, !range !2
  %31 = trunc i64 %30 to i32
  %32 = icmp ult i32 %15, %31
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  ret void

34:                                               ; preds = %28
  %35 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %12, align 8
  %36 = load i32, i32* %13, align 8
  %37 = add i32 %36, %15
  tail call void @_ZN2vk9QueryPool14writeTimestampEj(%"class.vk::QueryPool"* %35, i32 %37) #16
  %38 = add nuw nsw i32 %15, 1
  br label %14
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdWriteTimeStamp11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdWriteTimeStamp"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdWriteTimeStampD0Ev(%"class.(anonymous namespace)::CmdWriteTimeStamp"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdWriteTimeStamp"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk9QueryPool14writeTimestampEj(%"class.vk::QueryPool"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResults4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdCopyQueryPoolResults"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 1
  %4 = load %"class.vk::QueryPool"*, %"class.vk::QueryPool"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 4
  %10 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %9, align 8
  %11 = getelementptr inbounds %"class.vk::Buffer", %"class.vk::Buffer"* %10, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = tail call i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"* %10, i64 %14) #16
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyQueryPoolResults", %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0, i64 0, i32 7
  %20 = load i32, i32* %19, align 8
  %21 = tail call i32 @_ZNK2vk9QueryPool10getResultsEjjmPvmj(%"class.vk::QueryPool"* %4, i32 %6, i32 %8, i64 %15, i8* %16, i64 %18, i32 %20) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResults11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_123CmdCopyQueryPoolResultsD0Ev(%"class.(anonymous namespace)::CmdCopyQueryPoolResults"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdCopyQueryPoolResults"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare i32 @_ZNK2vk9QueryPool10getResultsEjjmPvmj(%"class.vk::QueryPool"*, i32, i32, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdSetPushConstants4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetPushConstants"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetPushConstants", %"class.(anonymous namespace)::CmdSetPushConstants"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 6, i32 0, i64 %5
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetPushConstants", %"class.(anonymous namespace)::CmdSetPushConstants"* %0, i64 0, i32 3, i64 0
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetPushConstants", %"class.(anonymous namespace)::CmdSetPushConstants"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 8 %7, i64 %10, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdSetPushConstants11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetPushConstants"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdSetPushConstantsD0Ev(%"class.(anonymous namespace)::CmdSetPushConstants"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetPushConstants"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSetViewport4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetViewport"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetViewport", %"class.(anonymous namespace)::CmdSetViewport"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 0
  %5 = bitcast %struct.VkViewport* %4 to i8*
  %6 = bitcast %struct.VkViewport* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 4 %6, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSetViewport11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetViewport"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSetViewportD0Ev(%"class.(anonymous namespace)::CmdSetViewport"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetViewport"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdSetScissor4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetScissor"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetScissor", %"class.(anonymous namespace)::CmdSetScissor"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 1
  %5 = bitcast %struct.VkRect2D* %4 to i8*
  %6 = bitcast %struct.VkRect2D* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 4 %6, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdSetScissor11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetScissor"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdSetScissorD0Ev(%"class.(anonymous namespace)::CmdSetScissor"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetScissor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdSetDepthBias4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetDepthBias"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetDepthBias", %"class.(anonymous namespace)::CmdSetDepthBias"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 4
  %7 = bitcast float* %6 to i32*
  store i32 %5, i32* %7, align 16
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetDepthBias", %"class.(anonymous namespace)::CmdSetDepthBias"* %0, i64 0, i32 2
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 5
  %12 = bitcast float* %11 to i32*
  store i32 %10, i32* %12, align 4
  %13 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetDepthBias", %"class.(anonymous namespace)::CmdSetDepthBias"* %0, i64 0, i32 3
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 6
  %17 = bitcast float* %16 to i32*
  store i32 %15, i32* %17, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdSetDepthBias11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetDepthBias"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdSetDepthBiasD0Ev(%"class.(anonymous namespace)::CmdSetDepthBias"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetDepthBias"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdSetBlendConstants4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetBlendConstants"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 3, i32 0, i32 0, i64 0
  %4 = bitcast float* %3 to i8*
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetBlendConstants", %"class.(anonymous namespace)::CmdSetBlendConstants"* %0, i64 0, i32 1, i64 0
  %6 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %4, i8* align 8 %6, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdSetBlendConstants11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetBlendConstants"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdSetBlendConstantsD0Ev(%"class.(anonymous namespace)::CmdSetBlendConstants"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetBlendConstants"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdSetDepthBounds4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetDepthBounds"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetDepthBounds", %"class.(anonymous namespace)::CmdSetDepthBounds"* %0, i64 0, i32 1
  %4 = bitcast float* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 7
  %7 = bitcast float* %6 to i32*
  store i32 %5, i32* %7, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetDepthBounds", %"class.(anonymous namespace)::CmdSetDepthBounds"* %0, i64 0, i32 2
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 8
  %12 = bitcast float* %11 to i32*
  store i32 %10, i32* %12, align 16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdSetDepthBounds11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetDepthBounds"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_117CmdSetDepthBoundsD0Ev(%"class.(anonymous namespace)::CmdSetDepthBounds"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetDepthBounds"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_124CmdSetStencilCompareMask4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetStencilCompareMask"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilCompareMask", %"class.(anonymous namespace)::CmdSetStencilCompareMask"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilCompareMask", %"class.(anonymous namespace)::CmdSetStencilCompareMask"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 9, i64 0
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %3, align 8
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %4, %2 ], [ %11, %7 ]
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilCompareMask", %"class.(anonymous namespace)::CmdSetStencilCompareMask"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 9, i64 1
  store i32 %18, i32* %19, align 4
  br label %20

20:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_124CmdSetStencilCompareMask11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetStencilCompareMask"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_124CmdSetStencilCompareMaskD0Ev(%"class.(anonymous namespace)::CmdSetStencilCompareMask"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetStencilCompareMask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilWriteMask4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetStencilWriteMask"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilWriteMask", %"class.(anonymous namespace)::CmdSetStencilWriteMask"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilWriteMask", %"class.(anonymous namespace)::CmdSetStencilWriteMask"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 10, i64 0
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %3, align 8
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %4, %2 ], [ %11, %7 ]
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilWriteMask", %"class.(anonymous namespace)::CmdSetStencilWriteMask"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 10, i64 1
  store i32 %18, i32* %19, align 4
  br label %20

20:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilWriteMask11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetStencilWriteMask"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilWriteMaskD0Ev(%"class.(anonymous namespace)::CmdSetStencilWriteMask"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetStencilWriteMask"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilReference4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSetStencilReference"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilReference", %"class.(anonymous namespace)::CmdSetStencilReference"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilReference", %"class.(anonymous namespace)::CmdSetStencilReference"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 11, i64 0
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* %3, align 8
  br label %12

12:                                               ; preds = %2, %7
  %13 = phi i32 [ %4, %2 ], [ %11, %7 ]
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CmdSetStencilReference", %"class.(anonymous namespace)::CmdSetStencilReference"* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 5, i32 11, i64 1
  store i32 %18, i32* %19, align 4
  br label %20

20:                                               ; preds = %12, %16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilReference11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSetStencilReference"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.26, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdSetStencilReferenceD0Ev(%"class.(anonymous namespace)::CmdSetStencilReference"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSetStencilReference"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_121CmdBindDescriptorSets4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdBindDescriptorSets"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, %7
  %11 = icmp ult i32 %7, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = zext i32 %7 to i64
  br label %23

14:                                               ; preds = %23, %2
  %15 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, %16
  %20 = icmp ult i32 %16, %19
  br i1 %20, label %21, label %41

21:                                               ; preds = %14
  %22 = zext i32 %16 to i64
  br label %42

23:                                               ; preds = %12, %23
  %24 = phi i64 [ %13, %12 ], [ %35, %23 ]
  %25 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 6, i32 0, i64 %24
  %26 = bitcast %"class.vk::DescriptorSet"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 %5, i32 1, i32 0, i64 %24
  %29 = bitcast %"class.vk::DescriptorSet"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 7, i32 0, i64 %24
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 %5, i32 2, i32 0, i64 %24
  %34 = bitcast i8** %33 to i64*
  store i64 %32, i64* %34, align 8
  %35 = add nuw nsw i64 %24, 1
  %36 = load i32, i32* %6, align 4
  %37 = load i32, i32* %8, align 8
  %38 = add i32 %37, %36
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %35, %39
  br i1 %40, label %23, label %14

41:                                               ; preds = %42, %14
  ret void

42:                                               ; preds = %21, %42
  %43 = phi i64 [ %22, %21 ], [ %47, %42 ]
  %44 = getelementptr inbounds %"class.(anonymous namespace)::CmdBindDescriptorSets", %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0, i64 0, i32 8, i32 0, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 %5, i32 3, i32 0, i64 %43
  store i32 %45, i32* %46, align 4
  %47 = add nuw nsw i64 %43, 1
  %48 = load i32, i32* %15, align 4
  %49 = load i32, i32* %17, align 8
  %50 = add i32 %49, %48
  %51 = zext i32 %50 to i64
  %52 = icmp ult i64 %47, %51
  br i1 %52, label %42, label %41
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_121CmdBindDescriptorSets11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdBindDescriptorSets"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_121CmdBindDescriptorSetsD0Ev(%"class.(anonymous namespace)::CmdBindDescriptorSets"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdBindDescriptorSets"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdIndexBufferBind4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdIndexBufferBind"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture dereferenceable(800)) unnamed_addr #12 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdIndexBufferBind", %"class.(anonymous namespace)::CmdIndexBufferBind"* %0, i64 0, i32 1
  %4 = bitcast %"class.vk::Buffer"** %3 to <2 x i64>*
  %5 = load <2 x i64>, <2 x i64>* %4, align 8
  %6 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 8, i32 0
  %7 = bitcast %"class.vk::Buffer"** %6 to <2 x i64>*
  store <2 x i64> %5, <2 x i64>* %7, align 16
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdIndexBufferBind", %"class.(anonymous namespace)::CmdIndexBufferBind"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 9
  store i32 %9, i32* %10, align 16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdIndexBufferBind11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdIndexBufferBind"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.28, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk13CommandBuffer7CommandD2Ev(%"class.vk::CommandBuffer::Command"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdIndexBufferBindD0Ev(%"class.(anonymous namespace)::CmdIndexBufferBind"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdIndexBufferBind"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdDispatchIndirect4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDispatchIndirect"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatchIndirect", %"class.(anonymous namespace)::CmdDispatchIndirect"* %0, i64 0, i32 1
  %4 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdDispatchIndirect", %"class.(anonymous namespace)::CmdDispatchIndirect"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = tail call i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"* %4, i64 %6) #16
  %8 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1
  %9 = bitcast %"struct.vk::CommandBuffer::ExecutionState::PipelineState"* %8 to %"class.vk::ComputePipeline"**
  %10 = load %"class.vk::ComputePipeline"*, %"class.vk::ComputePipeline"** %9, align 8
  %11 = bitcast i8* %7 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds i8, i8* %7, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds i8, i8* %7, i64 8
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 1
  %20 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 2
  %21 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 4, i32 0, i64 1, i32 3
  %22 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 6
  tail call void @_ZN2vk15ComputePipeline3runEjjjjjjRKNSt3__15arrayIPNS_13DescriptorSetELm4EEERKNS2_IPhLm4EEERKNS2_IjLm12EEERKNS_8Pipeline19PushConstantStorageE(%"class.vk::ComputePipeline"* %10, i32 0, i32 0, i32 0, i32 %12, i32 %15, i32 %18, %"struct.std::__1::array.427"* dereferenceable(32) %19, %"struct.std::__1::array.422"* dereferenceable(32) %20, %"struct.std::__1::array.423"* dereferenceable(48) %21, %"struct.vk::Pipeline::PushConstantStorage"* dereferenceable(128) %22) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdDispatchIndirect11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDispatchIndirect"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.29, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_119CmdDispatchIndirectD0Ev(%"class.(anonymous namespace)::CmdDispatchIndirect"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDispatchIndirect"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdCopyBuffer4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdCopyBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBuffer", %"class.(anonymous namespace)::CmdCopyBuffer"* %0, i64 0, i32 1
  %4 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBuffer", %"class.(anonymous namespace)::CmdCopyBuffer"* %0, i64 0, i32 2
  %6 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBuffer", %"class.(anonymous namespace)::CmdCopyBuffer"* %0, i64 0, i32 3
  tail call void @_ZNK2vk6Buffer6copyToEPS0_RK12VkBufferCopy(%"class.vk::Buffer"* %4, %"class.vk::Buffer"* %6, %struct.VkBufferCopy* dereferenceable(24) %7) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdCopyBuffer11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdCopyBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdCopyBufferD0Ev(%"class.(anonymous namespace)::CmdCopyBuffer"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdCopyBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk6Buffer6copyToEPS0_RK12VkBufferCopy(%"class.vk::Buffer"*, %"class.vk::Buffer"*, %struct.VkBufferCopy* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdCopyImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdCopyImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImage", %"class.(anonymous namespace)::CmdCopyImage"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImage", %"class.(anonymous namespace)::CmdCopyImage"* %0, i64 0, i32 2
  %6 = load %"class.vk::Image"*, %"class.vk::Image"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImage", %"class.(anonymous namespace)::CmdCopyImage"* %0, i64 0, i32 3
  tail call void @_ZNK2vk5Image6copyToEPS0_RK11VkImageCopy(%"class.vk::Image"* %4, %"class.vk::Image"* %6, %struct.VkImageCopy* dereferenceable(68) %7) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdCopyImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdCopyImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdCopyImageD0Ev(%"class.(anonymous namespace)::CmdCopyImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdCopyImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image6copyToEPS0_RK11VkImageCopy(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageCopy* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdBlitImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdBlitImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdBlitImage", %"class.(anonymous namespace)::CmdBlitImage"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdBlitImage", %"class.(anonymous namespace)::CmdBlitImage"* %0, i64 0, i32 2
  %6 = load %"class.vk::Image"*, %"class.vk::Image"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdBlitImage", %"class.(anonymous namespace)::CmdBlitImage"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdBlitImage", %"class.(anonymous namespace)::CmdBlitImage"* %0, i64 0, i32 4
  %9 = load i32, i32* %8, align 8
  tail call void @_ZNK2vk5Image6blitToEPS0_RK11VkImageBlit8VkFilter(%"class.vk::Image"* %4, %"class.vk::Image"* %6, %struct.VkImageBlit* dereferenceable(80) %7, i32 %9) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdBlitImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdBlitImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdBlitImageD0Ev(%"class.(anonymous namespace)::CmdBlitImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdBlitImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image6blitToEPS0_RK11VkImageBlit8VkFilter(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageBlit* dereferenceable(80), i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyBufferToImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdCopyBufferToImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBufferToImage", %"class.(anonymous namespace)::CmdCopyBufferToImage"* %0, i64 0, i32 2
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBufferToImage", %"class.(anonymous namespace)::CmdCopyBufferToImage"* %0, i64 0, i32 1
  %6 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyBufferToImage", %"class.(anonymous namespace)::CmdCopyBufferToImage"* %0, i64 0, i32 3
  tail call void @_ZN2vk5Image8copyFromEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"* %4, %"class.vk::Buffer"* %6, %struct.VkBufferImageCopy* dereferenceable(56) %7) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyBufferToImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdCopyBufferToImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyBufferToImageD0Ev(%"class.(anonymous namespace)::CmdCopyBufferToImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdCopyBufferToImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Image8copyFromEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyImageToBuffer4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdCopyImageToBuffer"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImageToBuffer", %"class.(anonymous namespace)::CmdCopyImageToBuffer"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImageToBuffer", %"class.(anonymous namespace)::CmdCopyImageToBuffer"* %0, i64 0, i32 2
  %6 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdCopyImageToBuffer", %"class.(anonymous namespace)::CmdCopyImageToBuffer"* %0, i64 0, i32 3
  tail call void @_ZN2vk5Image6copyToEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"* %4, %"class.vk::Buffer"* %6, %struct.VkBufferImageCopy* dereferenceable(56) %7) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyImageToBuffer11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdCopyImageToBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.34, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_120CmdCopyImageToBufferD0Ev(%"class.(anonymous namespace)::CmdCopyImageToBuffer"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdCopyImageToBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Image6copyToEPNS_6BufferERK17VkBufferImageCopy(%"class.vk::Image"*, %"class.vk::Buffer"*, %struct.VkBufferImageCopy* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdUpdateBuffer4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdUpdateBuffer"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 1
  %4 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.945"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = inttoptr i64 %12 to i8*
  tail call void @_ZN2vk6Buffer6updateEmmPKv(%"class.vk::Buffer"* %4, i64 %6, i64 %13, i8* %14) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdUpdateBuffer11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdUpdateBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdUpdateBufferD2Ev(%"class.(anonymous namespace)::CmdUpdateBuffer"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdUpdateBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdUpdateBufferD0Ev(%"class.(anonymous namespace)::CmdUpdateBuffer"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN12_GLOBAL__N_115CmdUpdateBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdUpdateBuffer", %"class.(anonymous namespace)::CmdUpdateBuffer"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #17
  br label %10

10:                                               ; preds = %1, %6
  %11 = bitcast %"class.(anonymous namespace)::CmdUpdateBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %11) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE11__vallocateEm(%"class.std::__1::vector.945"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp slt i64 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::vector.945"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %5) #18
  unreachable

6:                                                ; preds = %2
  %7 = tail call i8* @_Znwm(i64 %1) #17
  %8 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 1
  store i8* %7, i8** %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds i8, i8* %7, i64 %1
  %11 = getelementptr inbounds %"class.std::__1::vector.945", %"class.std::__1::vector.945"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i8* %10, i8** %11, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk6Buffer6updateEmmPKv(%"class.vk::Buffer"*, i64, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdFillBuffer4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdFillBuffer"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdFillBuffer", %"class.(anonymous namespace)::CmdFillBuffer"* %0, i64 0, i32 1
  %4 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdFillBuffer", %"class.(anonymous namespace)::CmdFillBuffer"* %0, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdFillBuffer", %"class.(anonymous namespace)::CmdFillBuffer"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdFillBuffer", %"class.(anonymous namespace)::CmdFillBuffer"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  tail call void @_ZN2vk6Buffer4fillEmmj(%"class.vk::Buffer"* %4, i64 %6, i64 %8, i32 %10) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdFillBuffer11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdFillBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.36, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdFillBufferD0Ev(%"class.(anonymous namespace)::CmdFillBuffer"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdFillBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk6Buffer4fillEmmj(%"class.vk::Buffer"*, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearColorImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdClearColorImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearColorImage", %"class.(anonymous namespace)::CmdClearColorImage"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearColorImage", %"class.(anonymous namespace)::CmdClearColorImage"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearColorImage", %"class.(anonymous namespace)::CmdClearColorImage"* %0, i64 0, i32 3
  tail call void @_ZN2vk5Image5clearERK17VkClearColorValueRK23VkImageSubresourceRange(%"class.vk::Image"* %4, %union.VkClearColorValue* dereferenceable(16) %5, %struct.VkImageSubresourceRange* dereferenceable(20) %6) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearColorImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdClearColorImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearColorImageD0Ev(%"class.(anonymous namespace)::CmdClearColorImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdClearColorImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Image5clearERK17VkClearColorValueRK23VkImageSubresourceRange(%"class.vk::Image"*, %union.VkClearColorValue* dereferenceable(16), %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_125CmdClearDepthStencilImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdClearDepthStencilImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearDepthStencilImage", %"class.(anonymous namespace)::CmdClearDepthStencilImage"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearDepthStencilImage", %"class.(anonymous namespace)::CmdClearDepthStencilImage"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearDepthStencilImage", %"class.(anonymous namespace)::CmdClearDepthStencilImage"* %0, i64 0, i32 3
  tail call void @_ZN2vk5Image5clearERK24VkClearDepthStencilValueRK23VkImageSubresourceRange(%"class.vk::Image"* %4, %struct.VkClearDepthStencilValue* dereferenceable(8) %5, %struct.VkImageSubresourceRange* dereferenceable(20) %6) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_125CmdClearDepthStencilImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdClearDepthStencilImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_125CmdClearDepthStencilImageD0Ev(%"class.(anonymous namespace)::CmdClearDepthStencilImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdClearDepthStencilImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk5Image5clearERK24VkClearDepthStencilValueRK23VkImageSubresourceRange(%"class.vk::Image"*, %struct.VkClearDepthStencilValue* dereferenceable(8), %struct.VkImageSubresourceRange* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearAttachment4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdClearAttachment"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %4) #16
  %5 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 3
  %6 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %5, align 8
  %7 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 2
  %8 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %7, align 16
  %9 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearAttachment", %"class.(anonymous namespace)::CmdClearAttachment"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.(anonymous namespace)::CmdClearAttachment", %"class.(anonymous namespace)::CmdClearAttachment"* %0, i64 0, i32 2
  tail call void @_ZN2vk11Framebuffer15clearAttachmentEPKNS_10RenderPassEjRK17VkClearAttachmentRK11VkClearRect(%"class.vk::Framebuffer"* %6, %"class.vk::RenderPass"* %8, i32 %10, %struct.VkClearAttachment* dereferenceable(24) %11, %struct.VkClearRect* dereferenceable(24) %12) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearAttachment11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdClearAttachment"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_118CmdClearAttachmentD0Ev(%"class.(anonymous namespace)::CmdClearAttachment"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdClearAttachment"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk11Framebuffer15clearAttachmentEPKNS_10RenderPassEjRK17VkClearAttachmentRK11VkClearRect(%"class.vk::Framebuffer"*, %"class.vk::RenderPass"*, i32, %struct.VkClearAttachment* dereferenceable(24), %struct.VkClearRect* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdResolveImage4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdResolveImage"*, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdResolveImage", %"class.(anonymous namespace)::CmdResolveImage"* %0, i64 0, i32 1
  %4 = load %"class.vk::Image"*, %"class.vk::Image"** %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdResolveImage", %"class.(anonymous namespace)::CmdResolveImage"* %0, i64 0, i32 2
  %6 = load %"class.vk::Image"*, %"class.vk::Image"** %5, align 8
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdResolveImage", %"class.(anonymous namespace)::CmdResolveImage"* %0, i64 0, i32 3
  tail call void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"* %4, %"class.vk::Image"* %6, %struct.VkImageResolve* dereferenceable(68) %7) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdResolveImage11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdResolveImage"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdResolveImageD0Ev(%"class.(anonymous namespace)::CmdResolveImage"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdResolveImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: optsize
declare void @_ZNK2vk5Image9resolveToEPS0_RK14VkImageResolve(%"class.vk::Image"*, %"class.vk::Image"*, %struct.VkImageResolve* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSignalEvent4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdSignalEvent"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %4) #16
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdSignalEvent", %"class.(anonymous namespace)::CmdSignalEvent"* %0, i64 0, i32 1
  %6 = load %"class.vk::Event"*, %"class.vk::Event"** %5, align 8
  tail call void @_ZN2vk5Event6signalEv(%"class.vk::Event"* %6) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSignalEvent11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdSignalEvent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.40, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdSignalEventD0Ev(%"class.(anonymous namespace)::CmdSignalEvent"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdSignalEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk5Event6signalEv(%"class.vk::Event"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %2) #16
  %3 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 1
  store i32 3, i32* %3, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %2) #16
  %4 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 2
  tail call void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"* %4) #16
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable10notify_allEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #13

; Function Attrs: optsize
declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdResetEvent4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdResetEvent"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readnone dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdResetEvent", %"class.(anonymous namespace)::CmdResetEvent"* %0, i64 0, i32 1
  %4 = load %"class.vk::Event"*, %"class.vk::Event"** %3, align 8
  %5 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %5) #16
  %6 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %4, i64 0, i32 1
  store i32 4, i32* %6, align 8
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %5) #16
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdResetEvent11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdResetEvent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.41, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_113CmdResetEventD0Ev(%"class.(anonymous namespace)::CmdResetEvent"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdResetEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdWaitEvent4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdWaitEvent"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* nocapture readonly dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %1, i64 0, i32 0
  %4 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %3, align 16
  tail call void @_ZN2sw8Renderer11synchronizeEv(%"class.sw::Renderer"* %4) #16
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdWaitEvent", %"class.(anonymous namespace)::CmdWaitEvent"* %0, i64 0, i32 1
  %6 = load %"class.vk::Event"*, %"class.vk::Event"** %5, align 8
  tail call void @_ZN2vk5Event4waitEv(%"class.vk::Event"* %6) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdWaitEvent11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdWaitEvent"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_112CmdWaitEventD0Ev(%"class.(anonymous namespace)::CmdWaitEvent"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdWaitEvent"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk5Event4waitEv(%"class.vk::Event"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.marl::lock", align 8
  %3 = bitcast %"class.marl::lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #15
  %4 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 0, i32 0
  %7 = bitcast %"class.marl::lock"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  store %"class.std::__1::mutex"* %6, %"class.std::__1::mutex"** %4, align 8
  store i8 1, i8* %5, align 8
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %6) #16
  %8 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.marl::lock", %"class.marl::lock"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.vk::Event", %"class.vk::Event"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %19, label %13

13:                                               ; preds = %1, %13
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %8, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %9) #16
  %14 = load i32, i32* %10, align 8
  %15 = icmp eq i32 %14, 3
  br i1 %15, label %16, label %13

16:                                               ; preds = %13
  %17 = load i8, i8* %5, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %1, %16
  %20 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %4, align 8
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %20) #16
  br label %21

21:                                               ; preds = %16, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #15
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #13

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_17CmdDraw4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDraw"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdDraw", %"class.(anonymous namespace)::CmdDraw"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdDraw", %"class.(anonymous namespace)::CmdDraw"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdDraw", %"class.(anonymous namespace)::CmdDraw"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdDraw", %"class.(anonymous namespace)::CmdDraw"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111CmdDrawBase4drawERN2vk13CommandBuffer14ExecutionStateEbjjjij(%"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1, i1 zeroext false, i32 %4, i32 %6, i32 0, i32 %8, i32 %10) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_17CmdDraw11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDraw"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_17CmdDrawD0Ev(%"class.(anonymous namespace)::CmdDraw"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDraw"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_111CmdDrawBase4drawERN2vk13CommandBuffer14ExecutionStateEbjjjij(%"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800), i1 zeroext, i32, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::vector.1010", align 8
  %9 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 4, i32 0, i64 0
  %10 = bitcast %"struct.vk::CommandBuffer::ExecutionState::PipelineState"* %9 to %"class.vk::GraphicsPipeline"**
  %11 = load %"class.vk::GraphicsPipeline"*, %"class.vk::GraphicsPipeline"** %10, align 8
  %12 = getelementptr inbounds %"class.vk::GraphicsPipeline", %"class.vk::GraphicsPipeline"* %11, i64 0, i32 5
  tail call void @_ZN2vk13CommandBuffer14ExecutionState15bindAttachmentsEPNS_11AttachmentsE(%"struct.vk::CommandBuffer::ExecutionState"* %0, %"struct.vk::Attachments"* %12) #19
  %13 = getelementptr inbounds %"class.vk::GraphicsPipeline", %"class.vk::GraphicsPipeline"* %11, i64 0, i32 6
  %14 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 4, i32 0, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 4, i32 0, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 4, i32 0, i64 0, i32 3
  tail call void @_ZN2vk6Inputs20updateDescriptorSetsERKNSt3__15arrayIPNS_13DescriptorSetELm4EEERKNS2_IPhLm4EEERKNS2_IjLm12EEE(%"struct.vk::Inputs"* %13, %"struct.std::__1::array.427"* dereferenceable(32) %14, %"struct.std::__1::array.422"* dereferenceable(32) %15, %"struct.std::__1::array.423"* dereferenceable(48) %16) #16
  %17 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 7, i64 0
  tail call void @_ZN2vk6Inputs21setVertexInputBindingEPKNS_18VertexInputBindingE(%"struct.vk::Inputs"* %13, %"struct.vk::VertexInputBinding"* %17) #16
  tail call void @_ZN2vk6Inputs16bindVertexInputsEi(%"struct.vk::Inputs"* %13, i32 %6) #16
  %18 = getelementptr inbounds %"class.vk::GraphicsPipeline", %"class.vk::GraphicsPipeline"* %11, i64 0, i32 4
  %19 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 9
  %21 = load i32, i32* %20, align 16
  tail call void @_ZN2vk11IndexBuffer21setIndexBufferBindingERKNS_18VertexInputBindingE11VkIndexType(%"struct.vk::IndexBuffer"* %18, %"struct.vk::VertexInputBinding"* dereferenceable(16) %19, i32 %21) #16
  %22 = bitcast %"class.std::__1::vector.1010"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %8, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.1010", %"class.std::__1::vector.1010"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 24, i1 false) #15
  call void @_ZNK2vk16GraphicsPipeline15getIndexBuffersEjjbPNSt3__16vectorINS1_4pairIjPvEENS1_9allocatorIS5_EEEE(%"class.vk::GraphicsPipeline"* %11, i32 %2, i32 %4, i1 zeroext %1, %"class.std::__1::vector.1010"* nonnull %8) #16
  %25 = add i32 %6, %3
  %26 = icmp eq i32 %3, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 10
  %30 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 5
  %32 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 3
  %34 = getelementptr inbounds %"struct.vk::CommandBuffer::ExecutionState", %"struct.vk::CommandBuffer::ExecutionState"* %0, i64 0, i32 6
  br label %43

35:                                               ; preds = %81, %7
  %36 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %37 = icmp eq %"struct.std::__1::pair"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %35
  %39 = ptrtoint %"struct.std::__1::pair"* %36 to i64
  %40 = bitcast %"struct.std::__1::pair"** %24 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast %"struct.std::__1::pair"* %36 to i8*
  call void @_ZdlPv(i8* %41) #17
  br label %42

42:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  ret void

43:                                               ; preds = %27, %81
  %44 = phi i32 [ %6, %27 ], [ %82, %81 ]
  %45 = load %"class.vk::RenderPass"*, %"class.vk::RenderPass"** %28, align 16
  %46 = getelementptr inbounds %"class.vk::RenderPass", %"class.vk::RenderPass"* %45, i64 0, i32 8
  %47 = load i32*, i32** %46, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %43
  %50 = load i32, i32* %29, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %47, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %81, label %55

55:                                               ; preds = %43, %49
  %56 = phi i32 [ 1, %43 ], [ %53, %49 ]
  br label %59

57:                                               ; preds = %69, %59
  %58 = icmp eq i32 %65, 0
  br i1 %58, label %81, label %59

59:                                               ; preds = %55, %57
  %60 = phi i32 [ %65, %57 ], [ %56, %55 ]
  %61 = call i32 @llvm.ctlz.i32(i32 %60, i1 true) #15, !range !4
  %62 = xor i32 %61, 31
  %63 = shl i32 1, %62
  %64 = xor i32 %63, -1
  %65 = and i32 %60, %64
  %66 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %67 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %24, align 8
  %68 = icmp eq %"struct.std::__1::pair"* %66, %67
  br i1 %68, label %57, label %69

69:                                               ; preds = %59, %69
  %70 = phi %"struct.std::__1::pair"* [ %79, %69 ], [ %66, %59 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 1
  %74 = load i8*, i8** %73, align 8
  %75 = load %"class.sw::Renderer"*, %"class.sw::Renderer"** %30, align 16
  %76 = load %"class.sw::CountedEvent"*, %"class.sw::CountedEvent"** %32, align 8
  %77 = load %"class.vk::Framebuffer"*, %"class.vk::Framebuffer"** %33, align 8
  %78 = getelementptr inbounds %"class.vk::Framebuffer", %"class.vk::Framebuffer"* %77, i64 0, i32 3
  call void @_ZN2sw8Renderer4drawEPKN2vk16GraphicsPipelineERKNS1_12DynamicStateEjiPNS_12CountedEventEiiPvRK10VkExtent3DRKNS1_8Pipeline19PushConstantStorageEb(%"class.sw::Renderer"* %75, %"class.vk::GraphicsPipeline"* %11, %"struct.vk::DynamicState"* dereferenceable(112) %31, i32 %72, i32 %5, %"class.sw::CountedEvent"* %76, i32 %44, i32 %62, i8* %74, %struct.VkExtent3D* dereferenceable(12) %78, %"struct.vk::Pipeline::PushConstantStorage"* dereferenceable(128) %34, i1 zeroext true) #16
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 1
  %80 = icmp eq %"struct.std::__1::pair"* %79, %67
  br i1 %80, label %57, label %69

81:                                               ; preds = %57, %49
  call void @_ZN2vk6Inputs25advanceInstanceAttributesEv(%"struct.vk::Inputs"* %13) #16
  %82 = add i32 %44, 1
  %83 = icmp eq i32 %82, %25
  br i1 %83, label %35, label %43
}

; Function Attrs: optsize
declare void @_ZN2vk6Inputs20updateDescriptorSetsERKNSt3__15arrayIPNS_13DescriptorSetELm4EEERKNS2_IPhLm4EEERKNS2_IjLm12EEE(%"struct.vk::Inputs"*, %"struct.std::__1::array.427"* dereferenceable(32), %"struct.std::__1::array.422"* dereferenceable(32), %"struct.std::__1::array.423"* dereferenceable(48)) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk6Inputs21setVertexInputBindingEPKNS_18VertexInputBindingE(%"struct.vk::Inputs"*, %"struct.vk::VertexInputBinding"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk6Inputs16bindVertexInputsEi(%"struct.vk::Inputs"*, i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk11IndexBuffer21setIndexBufferBindingERKNS_18VertexInputBindingE11VkIndexType(%"struct.vk::IndexBuffer"*, %"struct.vk::VertexInputBinding"* dereferenceable(16), i32) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZNK2vk16GraphicsPipeline15getIndexBuffersEjjbPNSt3__16vectorINS1_4pairIjPvEENS1_9allocatorIS5_EEEE(%"class.vk::GraphicsPipeline"*, i32, i32, i1 zeroext, %"class.std::__1::vector.1010"*) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw8Renderer4drawEPKN2vk16GraphicsPipelineERKNS1_12DynamicStateEjiPNS_12CountedEventEiiPvRK10VkExtent3DRKNS1_8Pipeline19PushConstantStorageEb(%"class.sw::Renderer"*, %"class.vk::GraphicsPipeline"*, %"struct.vk::DynamicState"* dereferenceable(112), i32, i32, %"class.sw::CountedEvent"*, i32, i32, i8*, %struct.VkExtent3D* dereferenceable(12), %"struct.vk::Pipeline::PushConstantStorage"* dereferenceable(128), i1 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk6Inputs25advanceInstanceAttributesEv(%"struct.vk::Inputs"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #14

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdDrawIndexed4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDrawIndexed"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexed", %"class.(anonymous namespace)::CmdDrawIndexed"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexed", %"class.(anonymous namespace)::CmdDrawIndexed"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexed", %"class.(anonymous namespace)::CmdDrawIndexed"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexed", %"class.(anonymous namespace)::CmdDrawIndexed"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexed", %"class.(anonymous namespace)::CmdDrawIndexed"* %0, i64 0, i32 5
  %12 = load i32, i32* %11, align 8
  tail call fastcc void @_ZN12_GLOBAL__N_111CmdDrawBase4drawERN2vk13CommandBuffer14ExecutionStateEbjjjij(%"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1, i1 zeroext true, i32 %4, i32 %6, i32 %8, i32 %10, i32 %12) #19
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdDrawIndexed11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDrawIndexed"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.44, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_114CmdDrawIndexedD0Ev(%"class.(anonymous namespace)::CmdDrawIndexed"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDrawIndexed"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdDrawIndirect4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDrawIndirect"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndirect", %"class.(anonymous namespace)::CmdDrawIndirect"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndirect", %"class.(anonymous namespace)::CmdDrawIndirect"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndirect", %"class.(anonymous namespace)::CmdDrawIndirect"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndirect", %"class.(anonymous namespace)::CmdDrawIndirect"* %0, i64 0, i32 4
  br label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %6, %11
  %12 = phi i32 [ 0, %6 ], [ %31, %11 ]
  %13 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %7, align 8
  %14 = load i64, i64* %8, align 8
  %15 = load i32, i32* %9, align 4
  %16 = mul i32 %15, %12
  %17 = zext i32 %16 to i64
  %18 = add i64 %14, %17
  %19 = tail call i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"* %13, i64 %18) #16
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %19, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i8, i8* %19, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111CmdDrawBase4drawERN2vk13CommandBuffer14ExecutionStateEbjjjij(%"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1, i1 zeroext false, i32 %21, i32 %24, i32 0, i32 %27, i32 %30) #19
  %31 = add nuw i32 %12, 1
  %32 = load i32, i32* %3, align 8
  %33 = icmp ult i32 %31, %32
  br i1 %33, label %11, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdDrawIndirect11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDrawIndirect"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.45, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_115CmdDrawIndirectD0Ev(%"class.(anonymous namespace)::CmdDrawIndirect"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDrawIndirect"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirect4playERN2vk13CommandBuffer14ExecutionStateE(%"class.(anonymous namespace)::CmdDrawIndexedIndirect"* nocapture readonly, %"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexedIndirect", %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexedIndirect", %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexedIndirect", %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.(anonymous namespace)::CmdDrawIndexedIndirect", %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* %0, i64 0, i32 4
  br label %11

10:                                               ; preds = %11, %2
  ret void

11:                                               ; preds = %6, %11
  %12 = phi i32 [ 0, %6 ], [ %34, %11 ]
  %13 = load %"class.vk::Buffer"*, %"class.vk::Buffer"** %7, align 8
  %14 = load i64, i64* %8, align 8
  %15 = load i32, i32* %9, align 4
  %16 = mul i32 %15, %12
  %17 = zext i32 %16 to i64
  %18 = add i64 %14, %17
  %19 = tail call i8* @_ZNK2vk6Buffer16getOffsetPointerEm(%"class.vk::Buffer"* %13, i64 %18) #16
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds i8, i8* %19, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds i8, i8* %19, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds i8, i8* %19, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds i8, i8* %19, i64 16
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  tail call fastcc void @_ZN12_GLOBAL__N_111CmdDrawBase4drawERN2vk13CommandBuffer14ExecutionStateEbjjjij(%"struct.vk::CommandBuffer::ExecutionState"* dereferenceable(800) %1, i1 zeroext true, i32 %21, i32 %24, i32 %27, i32 %30, i32 %33) #19
  %34 = add nuw i32 %12, 1
  %35 = load i32, i32* %3, align 8
  %36 = icmp ult i32 %34, %35
  br i1 %36, label %11, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirect11descriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* nocapture readnone) unnamed_addr #0 align 2 {
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i64 0, i64 0)) #19
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZN12_GLOBAL__N_122CmdDrawIndexedIndirectD0Ev(%"class.(anonymous namespace)::CmdDrawIndexedIndirect"*) unnamed_addr #6 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::CmdDrawIndexedIndirect"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nounwind }
attributes #16 = { nounwind optsize }
attributes #17 = { builtin nounwind optsize }
attributes #18 = { noreturn nounwind optsize }
attributes #19 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{i32 0, i32 33}
