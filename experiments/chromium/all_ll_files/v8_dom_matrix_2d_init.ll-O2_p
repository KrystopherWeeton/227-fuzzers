; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_dom_matrix_2d_init.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_dom_matrix_2d_init.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.72", i32, [4 x i8], %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.249", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.130", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::Worklist.119"* }
%"class.blink::Worklist.119" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::Worklist.126"* }
%"class.blink::Worklist.126" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.blink::Worklist.133"* }
%"class.blink::Worklist.133" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::Worklist.140"* }
%"class.blink::Worklist.140" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::Worklist.147"* }
%"class.blink::Worklist.147" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::Worklist.154"* }
%"class.blink::Worklist.154" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::Worklist.161"* }
%"class.blink::Worklist.161" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.108" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.168", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170", %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { float }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.191", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.200" }
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202" }
%"class.WTF::VectorBufferBase.202" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.230" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.119"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.126"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.133"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.140"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.147"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.280" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.249" = type { %"struct.std::__1::__atomic_base.250" }
%"struct.std::__1::__atomic_base.250" = type { %"struct.std::__1::__cxx_atomic_impl.251" }
%"struct.std::__1::__cxx_atomic_impl.251" = type { %"struct.std::__1::__cxx_atomic_base_impl.252" }
%"struct.std::__1::__cxx_atomic_base_impl.252" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::DOMMatrix2DInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, double, double, double, double, double, double, double, double, double, double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.19", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.66", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.253", %"class.std::__1::unique_ptr.258", %"class.blink::Persistent.264", %"class.blink::Persistent.268", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.19" = type { %"class.WTF::HashTable.20" }
%"class.WTF::HashTable.20" = type <{ %"struct.WTF::KeyValuePair.23"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.23" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.32", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.27", i8* }
%"class.WTF::HashMap.27" = type { %"class.WTF::HashTable.28" }
%"class.WTF::HashTable.28" = type <{ %"struct.WTF::KeyValuePair.31"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.31" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.32" = type { %"class.v8::PersistentValueMapBase.33" }
%"class.v8::PersistentValueMapBase.33" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.34", i8* }
%"class.WTF::HashMap.34" = type { %"class.WTF::HashTable.35" }
%"class.WTF::HashTable.35" = type <{ %"struct.WTF::KeyValuePair.38"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.38" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.39" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.50", %"class.WTF::Vector.56", i8, i32 }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.287, %"class.blink::Member.306", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.287 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.288", i32, i32, %"class.blink::Persistent.290" }
%"class.WTF::RefCounted.288" = type { %"class.base::RefCounted.289" }
%"class.base::RefCounted.289" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.290" = type { %"class.blink::PersistentBase.291" }
%"class.blink::PersistentBase.291" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.296" }
%"class.WTF::HashMap.296" = type { %"class.WTF::HashTable.297" }
%"class.WTF::HashTable.297" = type <{ %"struct.WTF::KeyValuePair.299"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.299" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.303" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.300" }
%"class.blink::MemberBase.300" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.303" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.303" = type { %"class.v8::TracedReference.304" }
%"class.v8::TracedReference.304" = type { %"class.v8::BasicTracedReference.305" }
%"class.v8::BasicTracedReference.305" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.306" = type { %"class.blink::MemberBase.307" }
%"class.blink::MemberBase.307" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.253" = type { %"class.WTF::VectorBuffer.254" }
%"class.WTF::VectorBuffer.254" = type { %"class.WTF::VectorBufferBase.255" }
%"class.WTF::VectorBufferBase.255" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.264" = type { %"class.blink::PersistentBase.265" }
%"class.blink::PersistentBase.265" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.268" = type { %"class.blink::PersistentBase.269" }
%"class.blink::PersistentBase.269" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"struct.std::__1::pair.277"*, i32, i32 }
%"struct.std::__1::pair.277" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.308" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::Number" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL28eternalV8DOMMatrix2DInitKeysEPN2v87IsolateEE5kKeys = internal constant [12 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"b\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"e\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"f\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"m11\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"m12\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"m21\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"m22\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"m41\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"m42\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 12, i8** getelementptr inbounds ([12 x i8*], [12 x i8*]* @_ZZN5blinkL28eternalV8DOMMatrix2DInitKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.14 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17V8DOMMatrix2DInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_15DOMMatrix2DInitERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::DOMMatrix2DInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = icmp eq %"class.v8::Value"* %1, null
  br i1 %6, label %628, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 3
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %28

12:                                               ; preds = %7
  %13 = add i64 %9, -1
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = and i64 %9, -4294967296
  %17 = zext i32 %15 to i64
  %18 = or i64 %16, %17
  %19 = add i64 %18, 7
  %20 = inttoptr i64 %19 to i16*
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 67
  br i1 %22, label %23, label %28

23:                                               ; preds = %12
  %24 = add i64 %9, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 1
  switch i32 %27, label %28 [
    i32 5, label %628
    i32 3, label %628
  ]

28:                                               ; preds = %23, %12, %7
  %29 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #4
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #4
  br label %628

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %33 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to %"class.blink::V8PerIsolateData"**
  %36 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %35, align 8
  %37 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %36, i8* bitcast ([12 x i8*]* @_ZZN5blinkL28eternalV8DOMMatrix2DInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.308"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.308"*)) #4
  %38 = extractvalue { i64, %"class.v8::Eternal"* } %37, 1
  %39 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %39) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #4
  %40 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #4
  %41 = bitcast %"class.v8::Eternal"* %38 to %"class.v8::Value"**
  %42 = load %"class.v8::Value"*, %"class.v8::Value"** %41, align 8
  %43 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %42) #4
  %44 = icmp eq %"class.v8::Value"* %43, null
  br i1 %44, label %45, label %51

45:                                               ; preds = %31
  %46 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %47 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %48, i64 5
  %50 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %49, align 8
  call void %50(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %46) #4
  br label %627

51:                                               ; preds = %31
  %52 = bitcast %"class.v8::Value"* %43 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = and i64 %53, 3
  %55 = icmp eq i64 %54, 1
  br i1 %55, label %56, label %73

56:                                               ; preds = %51
  %57 = add i64 %53, -1
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = and i64 %53, -4294967296
  %61 = zext i32 %59 to i64
  %62 = or i64 %60, %61
  %63 = add i64 %62, 7
  %64 = inttoptr i64 %63 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = icmp eq i16 %65, 67
  br i1 %66, label %67, label %73

67:                                               ; preds = %56
  %68 = add i64 %53, 23
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i32 %70, -2
  %72 = icmp eq i32 %71, 10
  br i1 %72, label %88, label %73

73:                                               ; preds = %56, %51, %67
  %74 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %43) #4
  br i1 %74, label %75, label %78, !prof !2

75:                                               ; preds = %73
  %76 = bitcast %"class.v8::Value"* %43 to %"class.v8::Number"*
  %77 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %76) #4
  br label %80

78:                                               ; preds = %73
  %79 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %43, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %80

80:                                               ; preds = %75, %78
  %81 = phi double [ %77, %75 ], [ %79, %78 ]
  %82 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %627

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 13
  store double %81, double* %86, align 8
  %87 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 1
  store i8 1, i8* %87, align 8
  br label %88

88:                                               ; preds = %85, %67
  %89 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 1, i32 0
  %90 = bitcast %"class.v8::Name"** %89 to %"class.v8::Value"**
  %91 = load %"class.v8::Value"*, %"class.v8::Value"** %90, align 8
  %92 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %91) #4
  %93 = icmp eq %"class.v8::Value"* %92, null
  br i1 %93, label %94, label %100

94:                                               ; preds = %88
  %95 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %96 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %97 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %97, i64 5
  %99 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %98, align 8
  call void %99(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %95) #4
  br label %627

100:                                              ; preds = %88
  %101 = bitcast %"class.v8::Value"* %92 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = and i64 %102, 3
  %104 = icmp eq i64 %103, 1
  br i1 %104, label %105, label %122

105:                                              ; preds = %100
  %106 = add i64 %102, -1
  %107 = inttoptr i64 %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = and i64 %102, -4294967296
  %110 = zext i32 %108 to i64
  %111 = or i64 %109, %110
  %112 = add i64 %111, 7
  %113 = inttoptr i64 %112 to i16*
  %114 = load i16, i16* %113, align 2
  %115 = icmp eq i16 %114, 67
  br i1 %115, label %116, label %122

116:                                              ; preds = %105
  %117 = add i64 %102, 23
  %118 = inttoptr i64 %117 to i32*
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, -2
  %121 = icmp eq i32 %120, 10
  br i1 %121, label %137, label %122

122:                                              ; preds = %105, %100, %116
  %123 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %92) #4
  br i1 %123, label %124, label %127, !prof !2

124:                                              ; preds = %122
  %125 = bitcast %"class.v8::Value"* %92 to %"class.v8::Number"*
  %126 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %125) #4
  br label %129

127:                                              ; preds = %122
  %128 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %92, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %129

129:                                              ; preds = %124, %127
  %130 = phi double [ %126, %124 ], [ %128, %127 ]
  %131 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %627

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 14
  store double %130, double* %135, align 8
  %136 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 2
  store i8 1, i8* %136, align 1
  br label %137

137:                                              ; preds = %134, %116
  %138 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 2, i32 0
  %139 = bitcast %"class.v8::Name"** %138 to %"class.v8::Value"**
  %140 = load %"class.v8::Value"*, %"class.v8::Value"** %139, align 8
  %141 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %140) #4
  %142 = icmp eq %"class.v8::Value"* %141, null
  br i1 %142, label %143, label %149

143:                                              ; preds = %137
  %144 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %145 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %146 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %146, i64 5
  %148 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %147, align 8
  call void %148(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %144) #4
  br label %627

149:                                              ; preds = %137
  %150 = bitcast %"class.v8::Value"* %141 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 3
  %153 = icmp eq i64 %152, 1
  br i1 %153, label %154, label %171

154:                                              ; preds = %149
  %155 = add i64 %151, -1
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = and i64 %151, -4294967296
  %159 = zext i32 %157 to i64
  %160 = or i64 %158, %159
  %161 = add i64 %160, 7
  %162 = inttoptr i64 %161 to i16*
  %163 = load i16, i16* %162, align 2
  %164 = icmp eq i16 %163, 67
  br i1 %164, label %165, label %171

165:                                              ; preds = %154
  %166 = add i64 %151, 23
  %167 = inttoptr i64 %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = and i32 %168, -2
  %170 = icmp eq i32 %169, 10
  br i1 %170, label %186, label %171

171:                                              ; preds = %154, %149, %165
  %172 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %141) #4
  br i1 %172, label %173, label %176, !prof !2

173:                                              ; preds = %171
  %174 = bitcast %"class.v8::Value"* %141 to %"class.v8::Number"*
  %175 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %174) #4
  br label %178

176:                                              ; preds = %171
  %177 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %141, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %178

178:                                              ; preds = %173, %176
  %179 = phi double [ %175, %173 ], [ %177, %176 ]
  %180 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %627

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 15
  store double %179, double* %184, align 8
  %185 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 3
  store i8 1, i8* %185, align 2
  br label %186

186:                                              ; preds = %183, %165
  %187 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 3, i32 0
  %188 = bitcast %"class.v8::Name"** %187 to %"class.v8::Value"**
  %189 = load %"class.v8::Value"*, %"class.v8::Value"** %188, align 8
  %190 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %189) #4
  %191 = icmp eq %"class.v8::Value"* %190, null
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %194 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %195 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %195, i64 5
  %197 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %196, align 8
  call void %197(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %193) #4
  br label %627

198:                                              ; preds = %186
  %199 = bitcast %"class.v8::Value"* %190 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = and i64 %200, 3
  %202 = icmp eq i64 %201, 1
  br i1 %202, label %203, label %220

203:                                              ; preds = %198
  %204 = add i64 %200, -1
  %205 = inttoptr i64 %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = and i64 %200, -4294967296
  %208 = zext i32 %206 to i64
  %209 = or i64 %207, %208
  %210 = add i64 %209, 7
  %211 = inttoptr i64 %210 to i16*
  %212 = load i16, i16* %211, align 2
  %213 = icmp eq i16 %212, 67
  br i1 %213, label %214, label %220

214:                                              ; preds = %203
  %215 = add i64 %200, 23
  %216 = inttoptr i64 %215 to i32*
  %217 = load i32, i32* %216, align 4
  %218 = and i32 %217, -2
  %219 = icmp eq i32 %218, 10
  br i1 %219, label %235, label %220

220:                                              ; preds = %203, %198, %214
  %221 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %190) #4
  br i1 %221, label %222, label %225, !prof !2

222:                                              ; preds = %220
  %223 = bitcast %"class.v8::Value"* %190 to %"class.v8::Number"*
  %224 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %223) #4
  br label %227

225:                                              ; preds = %220
  %226 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %190, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %227

227:                                              ; preds = %222, %225
  %228 = phi double [ %224, %222 ], [ %226, %225 ]
  %229 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %230 = load i32, i32* %229, align 8
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %627

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 16
  store double %228, double* %233, align 8
  %234 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 4
  store i8 1, i8* %234, align 1
  br label %235

235:                                              ; preds = %232, %214
  %236 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 4, i32 0
  %237 = bitcast %"class.v8::Name"** %236 to %"class.v8::Value"**
  %238 = load %"class.v8::Value"*, %"class.v8::Value"** %237, align 8
  %239 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %238) #4
  %240 = icmp eq %"class.v8::Value"* %239, null
  br i1 %240, label %241, label %247

241:                                              ; preds = %235
  %242 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %243 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %244 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %243, align 8
  %245 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %244, i64 5
  %246 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %245, align 8
  call void %246(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %242) #4
  br label %627

247:                                              ; preds = %235
  %248 = bitcast %"class.v8::Value"* %239 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = and i64 %249, 3
  %251 = icmp eq i64 %250, 1
  br i1 %251, label %252, label %269

252:                                              ; preds = %247
  %253 = add i64 %249, -1
  %254 = inttoptr i64 %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = and i64 %249, -4294967296
  %257 = zext i32 %255 to i64
  %258 = or i64 %256, %257
  %259 = add i64 %258, 7
  %260 = inttoptr i64 %259 to i16*
  %261 = load i16, i16* %260, align 2
  %262 = icmp eq i16 %261, 67
  br i1 %262, label %263, label %269

263:                                              ; preds = %252
  %264 = add i64 %249, 23
  %265 = inttoptr i64 %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = and i32 %266, -2
  %268 = icmp eq i32 %267, 10
  br i1 %268, label %284, label %269

269:                                              ; preds = %252, %247, %263
  %270 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %239) #4
  br i1 %270, label %271, label %274, !prof !2

271:                                              ; preds = %269
  %272 = bitcast %"class.v8::Value"* %239 to %"class.v8::Number"*
  %273 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %272) #4
  br label %276

274:                                              ; preds = %269
  %275 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %239, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %276

276:                                              ; preds = %271, %274
  %277 = phi double [ %273, %271 ], [ %275, %274 ]
  %278 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %279 = load i32, i32* %278, align 8
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %627

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 17
  store double %277, double* %282, align 8
  %283 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 5
  store i8 1, i8* %283, align 4
  br label %284

284:                                              ; preds = %281, %263
  %285 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 5, i32 0
  %286 = bitcast %"class.v8::Name"** %285 to %"class.v8::Value"**
  %287 = load %"class.v8::Value"*, %"class.v8::Value"** %286, align 8
  %288 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %287) #4
  %289 = icmp eq %"class.v8::Value"* %288, null
  br i1 %289, label %290, label %296

290:                                              ; preds = %284
  %291 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %292 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %293 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %292, align 8
  %294 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %293, i64 5
  %295 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %294, align 8
  call void %295(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %291) #4
  br label %627

296:                                              ; preds = %284
  %297 = bitcast %"class.v8::Value"* %288 to i64*
  %298 = load i64, i64* %297, align 8
  %299 = and i64 %298, 3
  %300 = icmp eq i64 %299, 1
  br i1 %300, label %301, label %318

301:                                              ; preds = %296
  %302 = add i64 %298, -1
  %303 = inttoptr i64 %302 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = and i64 %298, -4294967296
  %306 = zext i32 %304 to i64
  %307 = or i64 %305, %306
  %308 = add i64 %307, 7
  %309 = inttoptr i64 %308 to i16*
  %310 = load i16, i16* %309, align 2
  %311 = icmp eq i16 %310, 67
  br i1 %311, label %312, label %318

312:                                              ; preds = %301
  %313 = add i64 %298, 23
  %314 = inttoptr i64 %313 to i32*
  %315 = load i32, i32* %314, align 4
  %316 = and i32 %315, -2
  %317 = icmp eq i32 %316, 10
  br i1 %317, label %333, label %318

318:                                              ; preds = %301, %296, %312
  %319 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %288) #4
  br i1 %319, label %320, label %323, !prof !2

320:                                              ; preds = %318
  %321 = bitcast %"class.v8::Value"* %288 to %"class.v8::Number"*
  %322 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %321) #4
  br label %325

323:                                              ; preds = %318
  %324 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %288, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %325

325:                                              ; preds = %320, %323
  %326 = phi double [ %322, %320 ], [ %324, %323 ]
  %327 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %328 = load i32, i32* %327, align 8
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %627

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 18
  store double %326, double* %331, align 8
  %332 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 6
  store i8 1, i8* %332, align 1
  br label %333

333:                                              ; preds = %330, %312
  %334 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 6, i32 0
  %335 = bitcast %"class.v8::Name"** %334 to %"class.v8::Value"**
  %336 = load %"class.v8::Value"*, %"class.v8::Value"** %335, align 8
  %337 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %336) #4
  %338 = icmp eq %"class.v8::Value"* %337, null
  br i1 %338, label %339, label %345

339:                                              ; preds = %333
  %340 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %341 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %342 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %341, align 8
  %343 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %342, i64 5
  %344 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %343, align 8
  call void %344(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %340) #4
  br label %627

345:                                              ; preds = %333
  %346 = bitcast %"class.v8::Value"* %337 to i64*
  %347 = load i64, i64* %346, align 8
  %348 = and i64 %347, 3
  %349 = icmp eq i64 %348, 1
  br i1 %349, label %350, label %367

350:                                              ; preds = %345
  %351 = add i64 %347, -1
  %352 = inttoptr i64 %351 to i32*
  %353 = load i32, i32* %352, align 4
  %354 = and i64 %347, -4294967296
  %355 = zext i32 %353 to i64
  %356 = or i64 %354, %355
  %357 = add i64 %356, 7
  %358 = inttoptr i64 %357 to i16*
  %359 = load i16, i16* %358, align 2
  %360 = icmp eq i16 %359, 67
  br i1 %360, label %361, label %367

361:                                              ; preds = %350
  %362 = add i64 %347, 23
  %363 = inttoptr i64 %362 to i32*
  %364 = load i32, i32* %363, align 4
  %365 = and i32 %364, -2
  %366 = icmp eq i32 %365, 10
  br i1 %366, label %382, label %367

367:                                              ; preds = %350, %345, %361
  %368 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %337) #4
  br i1 %368, label %369, label %372, !prof !2

369:                                              ; preds = %367
  %370 = bitcast %"class.v8::Value"* %337 to %"class.v8::Number"*
  %371 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %370) #4
  br label %374

372:                                              ; preds = %367
  %373 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %337, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %374

374:                                              ; preds = %369, %372
  %375 = phi double [ %371, %369 ], [ %373, %372 ]
  %376 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %377 = load i32, i32* %376, align 8
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %627

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 19
  store double %375, double* %380, align 8
  %381 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 7
  store i8 1, i8* %381, align 2
  br label %382

382:                                              ; preds = %379, %361
  %383 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 7, i32 0
  %384 = bitcast %"class.v8::Name"** %383 to %"class.v8::Value"**
  %385 = load %"class.v8::Value"*, %"class.v8::Value"** %384, align 8
  %386 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %385) #4
  %387 = icmp eq %"class.v8::Value"* %386, null
  br i1 %387, label %388, label %394

388:                                              ; preds = %382
  %389 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %390 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %391 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %390, align 8
  %392 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %391, i64 5
  %393 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %392, align 8
  call void %393(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %389) #4
  br label %627

394:                                              ; preds = %382
  %395 = bitcast %"class.v8::Value"* %386 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = and i64 %396, 3
  %398 = icmp eq i64 %397, 1
  br i1 %398, label %399, label %416

399:                                              ; preds = %394
  %400 = add i64 %396, -1
  %401 = inttoptr i64 %400 to i32*
  %402 = load i32, i32* %401, align 4
  %403 = and i64 %396, -4294967296
  %404 = zext i32 %402 to i64
  %405 = or i64 %403, %404
  %406 = add i64 %405, 7
  %407 = inttoptr i64 %406 to i16*
  %408 = load i16, i16* %407, align 2
  %409 = icmp eq i16 %408, 67
  br i1 %409, label %410, label %416

410:                                              ; preds = %399
  %411 = add i64 %396, 23
  %412 = inttoptr i64 %411 to i32*
  %413 = load i32, i32* %412, align 4
  %414 = and i32 %413, -2
  %415 = icmp eq i32 %414, 10
  br i1 %415, label %431, label %416

416:                                              ; preds = %399, %394, %410
  %417 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %386) #4
  br i1 %417, label %418, label %421, !prof !2

418:                                              ; preds = %416
  %419 = bitcast %"class.v8::Value"* %386 to %"class.v8::Number"*
  %420 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %419) #4
  br label %423

421:                                              ; preds = %416
  %422 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %386, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %423

423:                                              ; preds = %418, %421
  %424 = phi double [ %420, %418 ], [ %422, %421 ]
  %425 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %426 = load i32, i32* %425, align 8
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %627

428:                                              ; preds = %423
  %429 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 20
  store double %424, double* %429, align 8
  %430 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 8
  store i8 1, i8* %430, align 1
  br label %431

431:                                              ; preds = %428, %410
  %432 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 8, i32 0
  %433 = bitcast %"class.v8::Name"** %432 to %"class.v8::Value"**
  %434 = load %"class.v8::Value"*, %"class.v8::Value"** %433, align 8
  %435 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %434) #4
  %436 = icmp eq %"class.v8::Value"* %435, null
  br i1 %436, label %437, label %443

437:                                              ; preds = %431
  %438 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %439 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %440 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %439, align 8
  %441 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %440, i64 5
  %442 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %441, align 8
  call void %442(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %438) #4
  br label %627

443:                                              ; preds = %431
  %444 = bitcast %"class.v8::Value"* %435 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = and i64 %445, 3
  %447 = icmp eq i64 %446, 1
  br i1 %447, label %448, label %465

448:                                              ; preds = %443
  %449 = add i64 %445, -1
  %450 = inttoptr i64 %449 to i32*
  %451 = load i32, i32* %450, align 4
  %452 = and i64 %445, -4294967296
  %453 = zext i32 %451 to i64
  %454 = or i64 %452, %453
  %455 = add i64 %454, 7
  %456 = inttoptr i64 %455 to i16*
  %457 = load i16, i16* %456, align 2
  %458 = icmp eq i16 %457, 67
  br i1 %458, label %459, label %465

459:                                              ; preds = %448
  %460 = add i64 %445, 23
  %461 = inttoptr i64 %460 to i32*
  %462 = load i32, i32* %461, align 4
  %463 = and i32 %462, -2
  %464 = icmp eq i32 %463, 10
  br i1 %464, label %480, label %465

465:                                              ; preds = %448, %443, %459
  %466 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %435) #4
  br i1 %466, label %467, label %470, !prof !2

467:                                              ; preds = %465
  %468 = bitcast %"class.v8::Value"* %435 to %"class.v8::Number"*
  %469 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %468) #4
  br label %472

470:                                              ; preds = %465
  %471 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %435, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %472

472:                                              ; preds = %467, %470
  %473 = phi double [ %469, %467 ], [ %471, %470 ]
  %474 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %475 = load i32, i32* %474, align 8
  %476 = icmp eq i32 %475, 0
  br i1 %476, label %477, label %627

477:                                              ; preds = %472
  %478 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 21
  store double %473, double* %478, align 8
  %479 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 9
  store i8 1, i8* %479, align 8
  br label %480

480:                                              ; preds = %477, %459
  %481 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 9, i32 0
  %482 = bitcast %"class.v8::Name"** %481 to %"class.v8::Value"**
  %483 = load %"class.v8::Value"*, %"class.v8::Value"** %482, align 8
  %484 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %483) #4
  %485 = icmp eq %"class.v8::Value"* %484, null
  br i1 %485, label %486, label %492

486:                                              ; preds = %480
  %487 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %488 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %489 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %488, align 8
  %490 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %489, i64 5
  %491 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %490, align 8
  call void %491(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %487) #4
  br label %627

492:                                              ; preds = %480
  %493 = bitcast %"class.v8::Value"* %484 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = and i64 %494, 3
  %496 = icmp eq i64 %495, 1
  br i1 %496, label %497, label %514

497:                                              ; preds = %492
  %498 = add i64 %494, -1
  %499 = inttoptr i64 %498 to i32*
  %500 = load i32, i32* %499, align 4
  %501 = and i64 %494, -4294967296
  %502 = zext i32 %500 to i64
  %503 = or i64 %501, %502
  %504 = add i64 %503, 7
  %505 = inttoptr i64 %504 to i16*
  %506 = load i16, i16* %505, align 2
  %507 = icmp eq i16 %506, 67
  br i1 %507, label %508, label %514

508:                                              ; preds = %497
  %509 = add i64 %494, 23
  %510 = inttoptr i64 %509 to i32*
  %511 = load i32, i32* %510, align 4
  %512 = and i32 %511, -2
  %513 = icmp eq i32 %512, 10
  br i1 %513, label %529, label %514

514:                                              ; preds = %497, %492, %508
  %515 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %484) #4
  br i1 %515, label %516, label %519, !prof !2

516:                                              ; preds = %514
  %517 = bitcast %"class.v8::Value"* %484 to %"class.v8::Number"*
  %518 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %517) #4
  br label %521

519:                                              ; preds = %514
  %520 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %484, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %521

521:                                              ; preds = %516, %519
  %522 = phi double [ %518, %516 ], [ %520, %519 ]
  %523 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %524 = load i32, i32* %523, align 8
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %627

526:                                              ; preds = %521
  %527 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 22
  store double %522, double* %527, align 8
  %528 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 10
  store i8 1, i8* %528, align 1
  br label %529

529:                                              ; preds = %526, %508
  %530 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 10, i32 0
  %531 = bitcast %"class.v8::Name"** %530 to %"class.v8::Value"**
  %532 = load %"class.v8::Value"*, %"class.v8::Value"** %531, align 8
  %533 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %532) #4
  %534 = icmp eq %"class.v8::Value"* %533, null
  br i1 %534, label %535, label %541

535:                                              ; preds = %529
  %536 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %537 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %538 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %537, align 8
  %539 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %538, i64 5
  %540 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %539, align 8
  call void %540(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %536) #4
  br label %627

541:                                              ; preds = %529
  %542 = bitcast %"class.v8::Value"* %533 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = and i64 %543, 3
  %545 = icmp eq i64 %544, 1
  br i1 %545, label %546, label %563

546:                                              ; preds = %541
  %547 = add i64 %543, -1
  %548 = inttoptr i64 %547 to i32*
  %549 = load i32, i32* %548, align 4
  %550 = and i64 %543, -4294967296
  %551 = zext i32 %549 to i64
  %552 = or i64 %550, %551
  %553 = add i64 %552, 7
  %554 = inttoptr i64 %553 to i16*
  %555 = load i16, i16* %554, align 2
  %556 = icmp eq i16 %555, 67
  br i1 %556, label %557, label %563

557:                                              ; preds = %546
  %558 = add i64 %543, 23
  %559 = inttoptr i64 %558 to i32*
  %560 = load i32, i32* %559, align 4
  %561 = and i32 %560, -2
  %562 = icmp eq i32 %561, 10
  br i1 %562, label %578, label %563

563:                                              ; preds = %546, %541, %557
  %564 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %533) #4
  br i1 %564, label %565, label %568, !prof !2

565:                                              ; preds = %563
  %566 = bitcast %"class.v8::Value"* %533 to %"class.v8::Number"*
  %567 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %566) #4
  br label %570

568:                                              ; preds = %563
  %569 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %533, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %570

570:                                              ; preds = %565, %568
  %571 = phi double [ %567, %565 ], [ %569, %568 ]
  %572 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %573 = load i32, i32* %572, align 8
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %575, label %627

575:                                              ; preds = %570
  %576 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 23
  store double %571, double* %576, align 8
  %577 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 11
  store i8 1, i8* %577, align 2
  br label %578

578:                                              ; preds = %575, %557
  %579 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %38, i64 11, i32 0
  %580 = bitcast %"class.v8::Name"** %579 to %"class.v8::Value"**
  %581 = load %"class.v8::Value"*, %"class.v8::Value"** %580, align 8
  %582 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %32, %"class.v8::Context"* %40, %"class.v8::Value"* %581) #4
  %583 = icmp eq %"class.v8::Value"* %582, null
  br i1 %583, label %584, label %590

584:                                              ; preds = %578
  %585 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #4
  %586 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %587 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %586, align 8
  %588 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %587, i64 5
  %589 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %588, align 8
  call void %589(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %585) #4
  br label %627

590:                                              ; preds = %578
  %591 = bitcast %"class.v8::Value"* %582 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = and i64 %592, 3
  %594 = icmp eq i64 %593, 1
  br i1 %594, label %595, label %612

595:                                              ; preds = %590
  %596 = add i64 %592, -1
  %597 = inttoptr i64 %596 to i32*
  %598 = load i32, i32* %597, align 4
  %599 = and i64 %592, -4294967296
  %600 = zext i32 %598 to i64
  %601 = or i64 %599, %600
  %602 = add i64 %601, 7
  %603 = inttoptr i64 %602 to i16*
  %604 = load i16, i16* %603, align 2
  %605 = icmp eq i16 %604, 67
  br i1 %605, label %606, label %612

606:                                              ; preds = %595
  %607 = add i64 %592, 23
  %608 = inttoptr i64 %607 to i32*
  %609 = load i32, i32* %608, align 4
  %610 = and i32 %609, -2
  %611 = icmp eq i32 %610, 10
  br i1 %611, label %627, label %612

612:                                              ; preds = %595, %590, %606
  %613 = call zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"* nonnull %582) #4
  br i1 %613, label %614, label %617, !prof !2

614:                                              ; preds = %612
  %615 = bitcast %"class.v8::Value"* %582 to %"class.v8::Number"*
  %616 = call double @_ZNK2v86Number5ValueEv(%"class.v8::Number"* nonnull %615) #4
  br label %619

617:                                              ; preds = %612
  %618 = call double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %582, %"class.blink::ExceptionState"* dereferenceable(72) %3) #4
  br label %619

619:                                              ; preds = %614, %617
  %620 = phi double [ %616, %614 ], [ %618, %617 ]
  %621 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %622 = load i32, i32* %621, align 8
  %623 = icmp eq i32 %622, 0
  br i1 %623, label %624, label %627

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 24
  store double %620, double* %625, align 8
  %626 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %2, i64 0, i32 12
  store i8 1, i8* %626, align 1
  br label %627

627:                                              ; preds = %619, %570, %521, %472, %423, %374, %325, %276, %227, %178, %129, %80, %94, %192, %290, %388, %486, %584, %624, %606, %535, %437, %339, %241, %143, %45
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %39) #4
  br label %628

628:                                              ; preds = %23, %23, %4, %627, %30
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink15DOMMatrix2DInit8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::DOMMatrix2DInit"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #4
  %5 = tail call zeroext i1 @_ZN5blink19toV8DOMMatrix2DInitEPKNS_15DOMMatrix2DInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrix2DInit"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19toV8DOMMatrix2DInitEPKNS_15DOMMatrix2DInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::DOMMatrix2DInit"* readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %8, i8* bitcast ([12 x i8*]* @_ZZN5blinkL28eternalV8DOMMatrix2DInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.308"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.308"*)) #4
  %10 = extractvalue { i64, %"class.v8::Eternal"* } %9, 1
  %11 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #4
  %12 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 13
  %17 = load double, double* %16, align 8
  %18 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %17) #4
  %19 = bitcast %"class.v8::Number"* %18 to %"class.v8::Value"*
  %20 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 0, i32 0
  %21 = load %"class.v8::Name"*, %"class.v8::Name"** %20, align 8
  %22 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %21, %"class.v8::Value"* %19) #4
  %23 = trunc i16 %22 to i8
  %24 = icmp ne i8 %23, 0
  %25 = icmp ugt i16 %22, 255
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %204

27:                                               ; preds = %4, %15
  %28 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 2
  %29 = load i8, i8* %28, align 1, !range !3
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %43, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 14
  %33 = load double, double* %32, align 8
  %34 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %33) #4
  %35 = bitcast %"class.v8::Number"* %34 to %"class.v8::Value"*
  %36 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 1, i32 0
  %37 = load %"class.v8::Name"*, %"class.v8::Name"** %36, align 8
  %38 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %37, %"class.v8::Value"* %35) #4
  %39 = trunc i16 %38 to i8
  %40 = icmp ne i8 %39, 0
  %41 = icmp ugt i16 %38, 255
  %42 = and i1 %41, %40
  br i1 %42, label %43, label %204

43:                                               ; preds = %27, %31
  %44 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 3
  %45 = load i8, i8* %44, align 2, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %59, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 15
  %49 = load double, double* %48, align 8
  %50 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %49) #4
  %51 = bitcast %"class.v8::Number"* %50 to %"class.v8::Value"*
  %52 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 2, i32 0
  %53 = load %"class.v8::Name"*, %"class.v8::Name"** %52, align 8
  %54 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %53, %"class.v8::Value"* %51) #4
  %55 = trunc i16 %54 to i8
  %56 = icmp ne i8 %55, 0
  %57 = icmp ugt i16 %54, 255
  %58 = and i1 %57, %56
  br i1 %58, label %59, label %204

59:                                               ; preds = %43, %47
  %60 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 4
  %61 = load i8, i8* %60, align 1, !range !3
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 16
  %65 = load double, double* %64, align 8
  %66 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %65) #4
  %67 = bitcast %"class.v8::Number"* %66 to %"class.v8::Value"*
  %68 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 3, i32 0
  %69 = load %"class.v8::Name"*, %"class.v8::Name"** %68, align 8
  %70 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %69, %"class.v8::Value"* %67) #4
  %71 = trunc i16 %70 to i8
  %72 = icmp ne i8 %71, 0
  %73 = icmp ugt i16 %70, 255
  %74 = and i1 %73, %72
  br i1 %74, label %75, label %204

75:                                               ; preds = %59, %63
  %76 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 5
  %77 = load i8, i8* %76, align 4, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %91, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 17
  %81 = load double, double* %80, align 8
  %82 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %81) #4
  %83 = bitcast %"class.v8::Number"* %82 to %"class.v8::Value"*
  %84 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 4, i32 0
  %85 = load %"class.v8::Name"*, %"class.v8::Name"** %84, align 8
  %86 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %85, %"class.v8::Value"* %83) #4
  %87 = trunc i16 %86 to i8
  %88 = icmp ne i8 %87, 0
  %89 = icmp ugt i16 %86, 255
  %90 = and i1 %89, %88
  br i1 %90, label %91, label %204

91:                                               ; preds = %75, %79
  %92 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 6
  %93 = load i8, i8* %92, align 1, !range !3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %107, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 18
  %97 = load double, double* %96, align 8
  %98 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %97) #4
  %99 = bitcast %"class.v8::Number"* %98 to %"class.v8::Value"*
  %100 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 5, i32 0
  %101 = load %"class.v8::Name"*, %"class.v8::Name"** %100, align 8
  %102 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %101, %"class.v8::Value"* %99) #4
  %103 = trunc i16 %102 to i8
  %104 = icmp ne i8 %103, 0
  %105 = icmp ugt i16 %102, 255
  %106 = and i1 %105, %104
  br i1 %106, label %107, label %204

107:                                              ; preds = %91, %95
  %108 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 7
  %109 = load i8, i8* %108, align 2, !range !3
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %123, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 19
  %113 = load double, double* %112, align 8
  %114 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %113) #4
  %115 = bitcast %"class.v8::Number"* %114 to %"class.v8::Value"*
  %116 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 6, i32 0
  %117 = load %"class.v8::Name"*, %"class.v8::Name"** %116, align 8
  %118 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %117, %"class.v8::Value"* %115) #4
  %119 = trunc i16 %118 to i8
  %120 = icmp ne i8 %119, 0
  %121 = icmp ugt i16 %118, 255
  %122 = and i1 %121, %120
  br i1 %122, label %123, label %204

123:                                              ; preds = %107, %111
  %124 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 8
  %125 = load i8, i8* %124, align 1, !range !3
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %139, label %127

127:                                              ; preds = %123
  %128 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 20
  %129 = load double, double* %128, align 8
  %130 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %129) #4
  %131 = bitcast %"class.v8::Number"* %130 to %"class.v8::Value"*
  %132 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 7, i32 0
  %133 = load %"class.v8::Name"*, %"class.v8::Name"** %132, align 8
  %134 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %133, %"class.v8::Value"* %131) #4
  %135 = trunc i16 %134 to i8
  %136 = icmp ne i8 %135, 0
  %137 = icmp ugt i16 %134, 255
  %138 = and i1 %137, %136
  br i1 %138, label %139, label %204

139:                                              ; preds = %123, %127
  %140 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 9
  %141 = load i8, i8* %140, align 8, !range !3
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %155, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 21
  %145 = load double, double* %144, align 8
  %146 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %145) #4
  %147 = bitcast %"class.v8::Number"* %146 to %"class.v8::Value"*
  %148 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 8, i32 0
  %149 = load %"class.v8::Name"*, %"class.v8::Name"** %148, align 8
  %150 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %149, %"class.v8::Value"* %147) #4
  %151 = trunc i16 %150 to i8
  %152 = icmp ne i8 %151, 0
  %153 = icmp ugt i16 %150, 255
  %154 = and i1 %153, %152
  br i1 %154, label %155, label %204

155:                                              ; preds = %139, %143
  %156 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 10
  %157 = load i8, i8* %156, align 1, !range !3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %171, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 22
  %161 = load double, double* %160, align 8
  %162 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %161) #4
  %163 = bitcast %"class.v8::Number"* %162 to %"class.v8::Value"*
  %164 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 9, i32 0
  %165 = load %"class.v8::Name"*, %"class.v8::Name"** %164, align 8
  %166 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %165, %"class.v8::Value"* %163) #4
  %167 = trunc i16 %166 to i8
  %168 = icmp ne i8 %167, 0
  %169 = icmp ugt i16 %166, 255
  %170 = and i1 %169, %168
  br i1 %170, label %171, label %204

171:                                              ; preds = %155, %159
  %172 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 11
  %173 = load i8, i8* %172, align 2, !range !3
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %187, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 23
  %177 = load double, double* %176, align 8
  %178 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %177) #4
  %179 = bitcast %"class.v8::Number"* %178 to %"class.v8::Value"*
  %180 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 10, i32 0
  %181 = load %"class.v8::Name"*, %"class.v8::Name"** %180, align 8
  %182 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %181, %"class.v8::Value"* %179) #4
  %183 = trunc i16 %182 to i8
  %184 = icmp ne i8 %183, 0
  %185 = icmp ugt i16 %182, 255
  %186 = and i1 %185, %184
  br i1 %186, label %187, label %204

187:                                              ; preds = %171, %175
  %188 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 12
  %189 = load i8, i8* %188, align 1, !range !3
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %203, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.blink::DOMMatrix2DInit", %"class.blink::DOMMatrix2DInit"* %0, i64 0, i32 24
  %193 = load double, double* %192, align 8
  %194 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %193) #4
  %195 = bitcast %"class.v8::Number"* %194 to %"class.v8::Value"*
  %196 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %10, i64 11, i32 0
  %197 = load %"class.v8::Name"*, %"class.v8::Name"** %196, align 8
  %198 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %11, %"class.v8::Name"* %197, %"class.v8::Value"* %195) #4
  %199 = trunc i16 %198 to i8
  %200 = icmp ne i8 %199, 0
  %201 = icmp ugt i16 %198, 255
  %202 = and i1 %201, %200
  br i1 %202, label %203, label %204

203:                                              ; preds = %187, %191
  br label %204

204:                                              ; preds = %31, %63, %95, %127, %159, %203, %191, %175, %143, %111, %79, %47, %15
  %205 = phi i1 [ false, %15 ], [ false, %31 ], [ false, %47 ], [ false, %63 ], [ false, %79 ], [ false, %95 ], [ false, %111 ], [ false, %127 ], [ false, %143 ], [ false, %159 ], [ false, %175 ], [ true, %203 ], [ false, %191 ]
  ret i1 %205
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMMatrix2DInit"* @_ZN5blink17NativeValueTraitsINS_15DOMMatrix2DInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 120) #4
  %5 = bitcast i8* %4 to %"class.blink::DOMMatrix2DInit"*
  tail call void @_ZN5blink15DOMMatrix2DInitC1Ev(%"class.blink::DOMMatrix2DInit"* %5) #4
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink17V8DOMMatrix2DInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_15DOMMatrix2DInitERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::DOMMatrix2DInit"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::DOMMatrix2DInit"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.308"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsNumberEv(%"class.v8::Value"*) local_unnamed_addr #1

declare double @_ZNK2v86Number5ValueEv(%"class.v8::Number"*) local_unnamed_addr #1

declare double @_ZN5blink12ToDoubleSlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink15DOMMatrix2DInitC1Ev(%"class.blink::DOMMatrix2DInit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #4
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #4
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #4
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #4
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #4
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #4
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %40, i8* %41) #4
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #4
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.14, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #4
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #4
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #4
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #4
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
