; ModuleID = '../../third_party/libgav1/src/src/post_filter/post_filter.cc'
source_filename = "../../third_party/libgav1/src/src/post_filter/post_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.libgav1::PostFilter" = type <{ [2 x { i64, i64 }], %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::dsp::Dsp"*, i32, i32, i32, i32, i8, [3 x i8], [3 x i8], i8, i32, [4 x i8], i8*, i8*, i8, [8 x [4 x [8 x [2 x i8]]]], [3 x i8], [3 x %struct.anon], %"class.libgav1::Array2D.23"*, %"class.libgav1::Array2D.31"*, %"class.libgav1::LoopRestorationInfo"*, [2 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::BlockParametersHolder"*, %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"*, [3 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"*, i8, [7 x i8], %"class.libgav1::ThreadPool"*, i32, [9248 x i16], [4 x i8] }>
%"struct.libgav1::LoopRestoration" = type { [3 x i8], [3 x i32] }
%struct.anon = type { i32, i32, i32 }
%"class.libgav1::Array2D.23" = type { %"class.std::__1::unique_ptr.24", i64, i64, %"class.libgav1::Array2DView.30" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i16* }
%"class.libgav1::Array2DView.30" = type { i32, i32, i16* }
%"class.libgav1::Array2D.31" = type { %"class.std::__1::unique_ptr.32", i64, i64, %"class.libgav1::Array2DView.38" }
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i8* }
%"class.libgav1::Array2DView.38" = type { i32, i32, i8* }
%"class.libgav1::LoopRestorationInfo" = type { [3 x %"struct.libgav1::RestorationUnitInfo"*], %"class.libgav1::DynamicBuffer", [3 x i8], %"struct.libgav1::LoopRestoration"*, i8, i8, [3 x i32], [3 x i32], [3 x i32] }
%"struct.libgav1::RestorationUnitInfo" = type { i8, %"struct.libgav1::SgrProjInfo", [16 x i8], %"struct.libgav1::WienerInfo" }
%"struct.libgav1::SgrProjInfo" = type { i32, [2 x i32] }
%"struct.libgav1::WienerInfo" = type { [2 x i16], [28 x i8], [2 x [4 x i16]], [16 x i8] }
%"class.libgav1::DynamicBuffer" = type { %"class.std::__1::unique_ptr.39", i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.libgav1::RestorationUnitInfo"* }
%"class.libgav1::BlockParametersHolder" = type { i32, i32, %"class.libgav1::DynamicBuffer.51", %"struct.std::__1::atomic", %"class.libgav1::Array2D.60" }
%"class.libgav1::DynamicBuffer.51" = type { %"class.std::__1::unique_ptr.52", i64 }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::unique_ptr.55"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"struct.libgav1::BlockParameters"* }
%"struct.libgav1::BlockParameters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], [2 x i8], [4 x i8], %"union.libgav1::CompoundMotionVector", %"struct.libgav1::PaletteModeInfo", %"class.std::__1::unique_ptr.64" }
%"union.libgav1::CompoundMotionVector" = type { i64 }
%"struct.libgav1::PaletteModeInfo" = type { [2 x i8], [3 x [8 x i16]] }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.libgav1::PredictionParameters"* }
%"struct.libgav1::PredictionParameters" = type { i8, i8, [2 x i32], i8, i8, i32, i32, [2 x %"class.libgav1::Array2D.67"], i8, i8, i8, i32, i32, i8, i8, i8, %union.anon.69, [8 x i16], i32, i32, i32, [2 x %"struct.libgav1::MotionVector"], i32, [8 x [4 x i32]] }
%"class.libgav1::Array2D.67" = type { %"class.std::__1::unique_ptr.45", i64, i64, %"class.libgav1::Array2DView.68" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { i8* }
%"class.libgav1::Array2DView.68" = type { i32, i32, i8* }
%union.anon.69 = type { [8 x %"union.libgav1::CompoundMotionVector"] }
%"struct.libgav1::MotionVector" = type { %union.anon }
%union.anon = type { i32 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.libgav1::Array2D.60" = type { %"class.std::__1::unique_ptr.61", i64, i64, %"class.libgav1::Array2DView.76" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.libgav1::BlockParameters"** }
%"class.libgav1::Array2DView.76" = type { i32, i32, %"struct.libgav1::BlockParameters"** }
%"class.libgav1::YuvBuffer" = type <{ i32, i8, [3 x i8], i32, i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [3 x i32], [4 x i8], [3 x i8*], %"class.std::__1::unique_ptr.45", i64, i8, i8, [6 x i8] }>
%"class.libgav1::ThreadPool" = type { %"class.libgav1::Executor", %"class.std::__1::condition_variable", %"class.std::__1::mutex", %"class.libgav1::UnboundedQueue", %"class.std::__1::unique_ptr.81", i8, i32, [16 x i8] }
%"class.libgav1::Executor" = type { i32 (...)** }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.77, %union.anon.79, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.77 = type { i64 }
%union.anon.79 = type { i64 }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.libgav1::UnboundedQueue" = type { %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64, %"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block"*, i64 }
%"struct.libgav1::UnboundedQueue<std::__1::function<void ()> >::Block" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.libgav1::ThreadPool::WorkerThread"** }
%"class.libgav1::ThreadPool::WorkerThread" = type opaque
%"struct.libgav1::ObuFrameHeader" = type { i16, i16, i64, [7 x i16], i32, i32, i32, i32, i32, i32, i32, %"struct.libgav1::LoopRestoration", [32 x i32], i32, %"struct.std::__1::array", %"struct.libgav1::TileInfo", %"struct.libgav1::QuantizerParameters", %"struct.libgav1::Segmentation", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [2 x i8], i8, i8, i8, %"struct.libgav1::Delta", %"struct.libgav1::Delta", [7 x i8], [8 x i8], %"struct.libgav1::LoopFilter", %"struct.libgav1::Cdef", %"struct.libgav1::FilmGrainParams" }
%"struct.std::__1::array" = type { [8 x %"struct.libgav1::GlobalMotion"] }
%"struct.libgav1::GlobalMotion" = type { i8, [6 x i32], i16, i16, i16, i16 }
%"struct.libgav1::TileInfo" = type { i8, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32, [65 x i32], [65 x i32], i16, i8 }
%"struct.libgav1::QuantizerParameters" = type { i8, [3 x i8], [3 x i8], i8, [3 x i8] }
%"struct.libgav1::Segmentation" = type { i8, i8, i8, i8, i8, i8, [8 x [8 x i8]], [8 x [8 x i16]], [8 x i8], [8 x i8] }
%"struct.libgav1::Delta" = type { i8, i8, i8 }
%"struct.libgav1::LoopFilter" = type { %"struct.std::__1::array.0", i8, i8, i8, %"struct.std::__1::array.1", %"struct.std::__1::array.2" }
%"struct.std::__1::array.0" = type { [4 x i8] }
%"struct.std::__1::array.1" = type { [8 x i8] }
%"struct.std::__1::array.2" = type { [2 x i8] }
%"struct.libgav1::Cdef" = type { i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x i8] }
%"struct.libgav1::FilmGrainParams" = type { i8, i8, i8, i8, i8, i8, i8, i8, [14 x i8], [14 x i8], [10 x i8], [10 x i8], [10 x i8], [10 x i8], i8, i8, [24 x i8], [25 x i8], [25 x i8], i8, i16, i32, i32, i8, i8, i16, i8, i8, i16 }
%"struct.libgav1::ObuSequenceHeader" = type { i8, i8, i8, i32, [32 x i32], [32 x %"struct.libgav1::BitStreamLevel"], [32 x i8], i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.libgav1::ColorConfig", i8, %"struct.libgav1::TimingInfo", i8, %"struct.libgav1::DecoderModelInfo", [32 x i8], i8, [32 x i8], i8, %"struct.libgav1::OperatingParameters" }
%"struct.libgav1::BitStreamLevel" = type { i8, i8 }
%"struct.libgav1::ColorConfig" = type { i8, i8, i32, i32, i32, i32, i8, i8, i32, i8 }
%"struct.libgav1::TimingInfo" = type { i32, i32, i8, i32 }
%"struct.libgav1::DecoderModelInfo" = type { i8, i32, i8, i8 }
%"struct.libgav1::OperatingParameters" = type { [32 x i32], [32 x i32], [32 x i8] }
%"struct.libgav1::FrameScratchBuffer" = type <{ %"class.libgav1::LoopRestorationInfo", %"class.libgav1::Array2D.23", %"class.libgav1::Array2D.31", %"class.libgav1::BlockParametersHolder", %"struct.libgav1::TemporalMotionField", [24 x i8], %"struct.libgav1::SymbolDecoderContext", %"class.std::__1::unique_ptr.87", %"class.libgav1::YuvBuffer", [2 x %"class.libgav1::AlignedDynamicBuffer"], %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer", %"class.libgav1::DynamicBuffer.109", %"class.libgav1::TileScratchBufferPool", %"class.libgav1::ThreadingStrategy", %"class.std::__1::mutex", %"class.libgav1::DynamicBuffer.130", %"class.libgav1::DynamicBuffer.137", i8, [23 x i8] }>
%"struct.libgav1::TemporalMotionField" = type { %"class.libgav1::Array2D.7", %"class.libgav1::Array2D.15" }
%"class.libgav1::Array2D.7" = type { %"class.std::__1::unique_ptr.8", i64, i64, %"class.libgav1::Array2DView.14" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.libgav1::MotionVector"* }
%"class.libgav1::Array2DView.14" = type { i32, i32, %"struct.libgav1::MotionVector"* }
%"class.libgav1::Array2D.15" = type { %"class.std::__1::unique_ptr.16", i64, i64, %"class.libgav1::Array2DView.22" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { i8* }
%"class.libgav1::Array2DView.22" = type { i32, i32, i8* }
%"struct.libgav1::SymbolDecoderContext" = type { [5 x [4 x [11 x i16]]], [8 x i8], [3 x [9 x i16]], [10 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [5 x i16], [22 x i8], [5 x i16], [22 x i8], [4 x [5 x i16]], [24 x i8], [3 x i16], [26 x i8], [5 x [5 x [14 x i16]]], [4 x i8], [4 x [14 x i16]], [16 x i8], [8 x [8 x i16]], [2 x [13 x [15 x i16]]], [20 x i8], [9 x i16], [14 x i8], [6 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [6 x i16], [20 x i8], [4 x [3 x [4 x i16]]], [21 x [3 x i16]], [2 x i8], [5 x [13 x [3 x i16]]], [26 x i8], [3 x [4 x [17 x i16]]], [8 x i8], [2 x [4 x [13 x [17 x i16]]]], [16 x i8], [2 x [2 x [6 x i16]]], [16 x i8], [2 x [2 x [7 x i16]]], [8 x i8], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [24 x i8], [2 x [2 x [10 x i16]]], [16 x i8], [2 x [11 x i16]], [20 x i8], [2 x [12 x i16]], [16 x i8], [5 x [2 x [9 x [3 x i16]]]], [4 x i8], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [24 x i8], [5 x [2 x [21 x [5 x i16]]]], [12 x i8], [2 x [3 x [3 x i16]]], [28 x i8], [4 x i16], [24 x i8], [3 x i16], [26 x i8], [3 x i16], [26 x i8], [7 x [3 x [3 x i16]]], [2 x i8], [7 x [8 x i16]], [16 x i8], [2 x [3 x i16]], [20 x i8], [7 x [8 x i16]], [16 x i8], [2 x [7 x [5 x [9 x i16]]]], [20 x i8], [4 x [3 x i16]], [8 x i8], [5 x [3 x i16]], [2 x i8], [5 x [3 x i16]], [2 x i8], [2 x [3 x [3 x [3 x i16]]]], [20 x i8], [3 x [2 x [3 x i16]]], [28 x i8], [3 x [6 x [3 x i16]]], [20 x i8], [8 x [9 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [2 x [3 x i16]], [20 x i8], [6 x [3 x i16]], [28 x i8], [3 x [3 x i16]], [14 x i8], [3 x [3 x i16]], [14 x i8], [3 x [5 x i16]], [2 x i8], [22 x [3 x i16]], [28 x i8], [22 x [17 x i16]], [20 x i8], [22 x [3 x i16]], [28 x i8], [22 x [4 x i16]], [16 x i8], [6 x [3 x i16]], [28 x i8], [6 x [3 x i16]], [28 x i8], [22 x [3 x i16]], [28 x i8], [16 x [4 x i16]], [2 x [5 x i16]], [12 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [12 x i16]]], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [2 x [5 x i16]]]], [16 x i8], [2 x [2 x [3 x i16]]], [8 x i8], [2 x [2 x [10 x [3 x i16]]]], [16 x i8], [2 x [2 x [5 x i16]]], [24 x i8], [2 x [2 x [3 x i16]]], [8 x i8] }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.libgav1::ResidualBufferPool"* }
%"class.libgav1::ResidualBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::ResidualBufferStack", i64, i32, [4 x i8] }>
%"class.libgav1::ResidualBufferStack" = type { %"class.libgav1::ResidualBuffer"*, i64 }
%"class.libgav1::ResidualBuffer" = type { %"class.std::__1::unique_ptr.90", %"class.libgav1::Queue", %"class.libgav1::Queue.99", %"class.libgav1::ResidualBuffer"* }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"class.libgav1::Queue" = type { %"class.std::__1::unique_ptr.93", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.libgav1::TransformParameters"* }
%"struct.libgav1::TransformParameters" = type { i8, i32 }
%"class.libgav1::Queue.99" = type { %"class.std::__1::unique_ptr.100", i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"struct.libgav1::PartitionTreeNode"* }
%"struct.libgav1::PartitionTreeNode" = type <{ i32, i32, i8, [3 x i8] }>
%"class.libgav1::AlignedDynamicBuffer" = type { %"class.std::__1::unique_ptr.90", i64 }
%"class.libgav1::DynamicBuffer.109" = type { %"class.std::__1::unique_ptr.110", i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::array.113"* }
%"struct.std::__1::array.113" = type { [3 x %"class.libgav1::AlignedDynamicBuffer.151"] }
%"class.libgav1::AlignedDynamicBuffer.151" = type { %"class.std::__1::unique_ptr.90", i64 }
%"class.libgav1::TileScratchBufferPool" = type <{ %"class.std::__1::mutex", %"class.libgav1::Stack", i32, [4 x i8] }>
%"class.libgav1::Stack" = type <{ [128 x %"class.std::__1::unique_ptr.117"], i32, [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.libgav1::TileScratchBuffer"* }
%"struct.libgav1::TileScratchBuffer" = type <{ [16384 x i8], %union.anon.120, %"class.std::__1::unique_ptr.90", i64, i8, [3 x [34 x [34 x i8]]], [3 x i8] }>
%union.anon.120 = type { [2 x [16384 x i16]] }
%"class.libgav1::ThreadingStrategy" = type <{ %"class.std::__1::unique_ptr.124", i32, i32, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.libgav1::ThreadPool"* }
%"class.libgav1::DynamicBuffer.130" = type { %"class.std::__1::unique_ptr.131", i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { i32* }
%"class.libgav1::DynamicBuffer.137" = type { %"class.std::__1::unique_ptr.138", i64 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.std::__1::condition_variable"* }
%"struct.libgav1::dsp::Dsp" = type { void (i8*, i8*, i32, i32, i8*, i64)*, void (i8*, i64, i8*, i32*)*, [2 x [3 x void (i16*, i64, i32, i32, i32, i32, i32, i8*, i64)*]], [19 x void (i8*, i64, [32 x i16]*, i32)*], [19 x [3 x void ([32 x i16]*, i32, i32, i8*, i64)*]], [2 x [2 x [2 x [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i8*, i64)*]]]], [2 x void (i8*, i64, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64)*], void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i64, i8*, i8*, i32, i32, i32, i32, i1, i1)*, void (i8*, i64, i8*, i32, i32, i32, i1)*, void (i8*, i8*, i8, i8, i32, i32, i8*, i64)*, %"struct.libgav1::dsp::FilmGrainFuncs", void (i8*, i64, i8*, i8*, i8, i32, i32)*, [3 x void (i8*, i8*, i64, i8*, i64, i32, i32)*], void (i8*, i32, i32)*, void (i8*, i32)*, [19 x [10 x void (i8*, i64, i8*, i8*)*]], [4 x [5 x [2 x void (i8, i8, i32, i8*, i32, i32, i8*)*]]], [4 x [2 x void (i8*, i64, i32, i32, i32)*]], [2 x void (%"struct.libgav1::RestorationUnitInfo"*, i8*, i64, i8*, i64, i8*, i64, i32, i32, %"union.libgav1::RestorationBuffer"*, i8*)*], [3 x [2 x void (i8*, i8*, i64, i8*, i64, i32, i32, i8*, i64)*]], void (%"struct.libgav1::ReferenceInfo"*, i32, i32, i32, i32, i32, i32, %"struct.libgav1::TemporalMotionField"*)*, [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32*, i32, %"union.libgav1::CompoundMotionVector"*)*], [3 x void (%"struct.libgav1::MotionVector"*, i8*, i32, i32, %"struct.libgav1::MotionVector"*)*], [2 x void (i8*, i64, i32, i32, i8*, i64)*], void (i32, i32, i32, i8*)*, void (i8*, i8*, i64, i32, i32, i32, i32, i32, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, void (i8*, i64, i32, i32, i32*, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, i8*, i64)*, [6 x [6 x [2 x void (i8*, i8*, i8*, i64)*]]] }
%"struct.libgav1::dsp::FilmGrainFuncs" = type { [3 x void (%"struct.libgav1::FilmGrainParams"*, i8*)*], [2 x [4 x void (%"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i8*, i8*)*]], [2 x void (i8*, i32, i32, i32, i32, i32, i8*)*], void (i8*, i32, i32, i32, i32, i8*)*, void (i32, i8*, i8*, i8*)*, void (i8*, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64)*, [2 x void (i8, %"struct.libgav1::FilmGrainParams"*, i8*, i32, i32, i32, i32, i32, i32, i32, i8*, i8*, i64, i8*, i64, i8*, i64)*] }
%"union.libgav1::RestorationBuffer" = type { %"struct.libgav1::SgrBuffer", [5024 x i8] }
%"struct.libgav1::SgrBuffer" = type { [1152 x i16], [1440 x i16], [1152 x i32], [1440 x i32], [1024 x i16], [768 x i16], [512 x i16], [1024 x i32], [768 x i32], [512 x i32], [288 x i8], [288 x i32] }
%"struct.libgav1::ReferenceInfo" = type { %"struct.std::__1::array.3", %"struct.std::__1::array.1", %"struct.std::__1::array.1", %"struct.std::__1::array.4", %"struct.std::__1::array.5", %"class.libgav1::Array2D", %"class.libgav1::Array2D.7" }
%"struct.std::__1::array.3" = type { [8 x i8] }
%"struct.std::__1::array.4" = type { [8 x i8] }
%"struct.std::__1::array.5" = type { [8 x i16] }
%"class.libgav1::Array2D" = type { %"class.std::__1::unique_ptr", i64, i64, %"class.libgav1::Array2DView" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.libgav1::Array2DView" = type { i32, i32, i8* }
%"struct.std::__1::array.144" = type { [3 x i8*] }
%"struct.std::__1::array.145" = type { [3 x i32] }
%"class.std::__1::unique_lock" = type <{ %"class.std::__1::mutex"*, i8, [7 x i8] }>
%"class.libgav1::BlockingCounterImpl" = type <{ %"class.std::__1::mutex", %"class.std::__1::condition_variable", i32, i8, [3 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*, %"class.libgav1::BlockingCounterImpl"*, { i64, i64 } }

$_ZN7libgav110PostFilter11ExtendFrameIhEEvPT_iiliiii = comdat any

$_ZN7libgav110PostFilter11ExtendFrameItEEvPT_iiliiii = comdat any

@constinit = private unnamed_addr constant [2 x { i64, i64 }] [{ i64, i64 } { i64 ptrtoint (void (%"class.libgav1::PostFilter"*, i32, i32)* @_ZN7libgav110PostFilter21VerticalDeblockFilterEii to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.libgav1::PostFilter"*, i32, i32)* @_ZN7libgav110PostFilter23HorizontalDeblockFilterEii to i64), i64 0 }], align 8
@_ZN7libgav112_GLOBAL__N_112kInnerThreshE = internal constant [8 x [64 x i8]] [[64 x i8] c"\01\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<=>?", [64 x i8] c"\01\01\01\01\02\02\03\03\04\04\05\05\06\06\07\07\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08\08", [64 x i8] c"\01\01\01\01\02\02\03\03\04\04\05\05\06\06\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07\07", [64 x i8] c"\01\01\01\01\02\02\03\03\04\04\05\05\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06", [64 x i8] c"\01\01\01\01\02\02\03\03\04\04\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05\05", [64 x i8] c"\01\01\01\01\01\01\01\01\02\02\02\02\03\03\03\03\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04\04", [64 x i8] c"\01\01\01\01\01\01\01\01\02\02\02\02\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03\03", [64 x i8] c"\01\01\01\01\01\01\01\01\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02\02"], align 16
@_ZN7libgav112_GLOBAL__N_112kOuterThreshE = internal constant [8 x [64 x i8]] [[64 x i8] c"\05\07\0A\0D\10\13\16\19\1C\1F\22%(+.147:=@CFILORUX[^adgjmpsvy|\7F\82\85\88\8B\8E\91\94\97\9A\9D\A0\A3\A6\A9\AC\AF\B2\B5\B8\BB\BE\C1", [64 x i8] c"\05\07\09\0B\0E\10\13\15\18\1A\1D\1F\22$'),.02468:<>@BDFHJLNPRTVXZ\5C^`bdfhjlnprtvxz|~\80\82\84\86\88\8A", [64 x i8] c"\05\07\09\0B\0E\10\13\15\18\1A\1D\1F\22$')+-/13579;=?ACEGIKMOQSUWY[]_acegikmoqsuwy{}\7F\81\83\85\87\89", [64 x i8] c"\05\07\09\0B\0E\10\13\15\18\1A\1D\1F\22$&(*,.02468:<>@BDFHJLNPRTVXZ\5C^`bdfhjlnprtvxz|~\80\82\84\86\88", [64 x i8] c"\05\07\09\0B\0E\10\13\15\18\1A\1D\1F!#%')+-/13579;=?ACEGIKMOQSUWY[]_acegikmoqsuwy{}\7F\81\83\85\87", [64 x i8] c"\05\07\09\0B\0D\0F\11\13\16\18\1A\1C\1F!#%(*,.02468:<>@BDFHJLNPRTVXZ\5C^`bdfhjlnprtvxz|~\80\82\84\86", [64 x i8] c"\05\07\09\0B\0D\0F\11\13\16\18\1A\1C\1F!#%')+-/13579;=?ACEGIKMOQSUWY[]_acegikmoqsuwy{}\7F\81\83\85", [64 x i8] c"\05\07\09\0B\0D\0F\11\13\16\18\1A\1C\1E \22$&(*,.02468:<>@BDFHJLNPRTVXZ\5C^`bdfhjlnprtvxz|~\80\82\84"], align 16
@_ZZN7libgav110PostFilterC1ERKNS_14ObuFrameHeaderERKNS_17ObuSequenceHeaderEPNS_18FrameScratchBufferEPNS_9YuvBufferEPKNS_3dsp3DspEiE13zero_delta_lf = internal constant [4 x i8] zeroinitializer, align 1
@_ZN7libgav112_GLOBAL__N_126kLoopRestorationBorderRowsE = internal unnamed_addr constant [2 x i32] [i32 54, i32 26], align 4
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

@_ZN7libgav110PostFilterC1ERKNS_14ObuFrameHeaderERKNS_17ObuSequenceHeaderEPNS_18FrameScratchBufferEPNS_9YuvBufferEPKNS_3dsp3DspEi = hidden unnamed_addr alias void (%"class.libgav1::PostFilter"*, %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuSequenceHeader"*, %"struct.libgav1::FrameScratchBuffer"*, %"class.libgav1::YuvBuffer"*, %"struct.libgav1::dsp::Dsp"*, i32), void (%"class.libgav1::PostFilter"*, %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuSequenceHeader"*, %"struct.libgav1::FrameScratchBuffer"*, %"class.libgav1::YuvBuffer"*, %"struct.libgav1::dsp::Dsp"*, i32)* @_ZN7libgav110PostFilterC2ERKNS_14ObuFrameHeaderERKNS_17ObuSequenceHeaderEPNS_18FrameScratchBufferEPNS_9YuvBufferEPKNS_3dsp3DspEi

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav110PostFilter11ExtendFrameIhEEvPT_iiliiii(i8*, i32, i32, i64, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %9 = sext i32 %4 to i64
  %10 = sub nsw i64 0, %9
  %11 = sext i32 %1 to i64
  %12 = add nsw i32 %1, -1
  %13 = sext i32 %12 to i64
  %14 = sext i32 %5 to i64
  %15 = add nsw i32 %2, -1
  %16 = and i32 %2, 3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %31, label %18

18:                                               ; preds = %8, %18
  %19 = phi i8* [ %27, %18 ], [ %0, %8 ]
  %20 = phi i32 [ %28, %18 ], [ %2, %8 ]
  %21 = phi i32 [ %29, %18 ], [ %16, %8 ]
  %22 = getelementptr inbounds i8, i8* %19, i64 %10
  %23 = load i8, i8* %19, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 %23, i64 %9, i1 false) #6
  %24 = getelementptr inbounds i8, i8* %19, i64 %11
  %25 = getelementptr inbounds i8, i8* %19, i64 %13
  %26 = load i8, i8* %25, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 %26, i64 %14, i1 false) #6
  %27 = getelementptr inbounds i8, i8* %19, i64 %3
  %28 = add nsw i32 %20, -1
  %29 = add i32 %21, -1
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %18, !llvm.loop !2

31:                                               ; preds = %18, %8
  %32 = phi i8* [ undef, %8 ], [ %27, %18 ]
  %33 = phi i8* [ %0, %8 ], [ %27, %18 ]
  %34 = phi i32 [ %2, %8 ], [ %28, %18 ]
  %35 = icmp ult i32 %15, 3
  br i1 %35, label %65, label %36

36:                                               ; preds = %31, %36
  %37 = phi i8* [ %62, %36 ], [ %33, %31 ]
  %38 = phi i32 [ %63, %36 ], [ %34, %31 ]
  %39 = getelementptr inbounds i8, i8* %37, i64 %10
  %40 = load i8, i8* %37, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %39, i8 %40, i64 %9, i1 false) #6
  %41 = getelementptr inbounds i8, i8* %37, i64 %11
  %42 = getelementptr inbounds i8, i8* %37, i64 %13
  %43 = load i8, i8* %42, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 %43, i64 %14, i1 false) #6
  %44 = getelementptr inbounds i8, i8* %37, i64 %3
  %45 = getelementptr inbounds i8, i8* %44, i64 %10
  %46 = load i8, i8* %44, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 %46, i64 %9, i1 false) #6
  %47 = getelementptr inbounds i8, i8* %44, i64 %11
  %48 = getelementptr inbounds i8, i8* %44, i64 %13
  %49 = load i8, i8* %48, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 %49, i64 %14, i1 false) #6
  %50 = getelementptr inbounds i8, i8* %44, i64 %3
  %51 = getelementptr inbounds i8, i8* %50, i64 %10
  %52 = load i8, i8* %50, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %51, i8 %52, i64 %9, i1 false) #6
  %53 = getelementptr inbounds i8, i8* %50, i64 %11
  %54 = getelementptr inbounds i8, i8* %50, i64 %13
  %55 = load i8, i8* %54, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %53, i8 %55, i64 %14, i1 false) #6
  %56 = getelementptr inbounds i8, i8* %50, i64 %3
  %57 = getelementptr inbounds i8, i8* %56, i64 %10
  %58 = load i8, i8* %56, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %57, i8 %58, i64 %9, i1 false) #6
  %59 = getelementptr inbounds i8, i8* %56, i64 %11
  %60 = getelementptr inbounds i8, i8* %56, i64 %13
  %61 = load i8, i8* %60, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 %61, i64 %14, i1 false) #6
  %62 = getelementptr inbounds i8, i8* %56, i64 %3
  %63 = add nsw i32 %38, -4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %36

65:                                               ; preds = %36, %31
  %66 = phi i8* [ %32, %31 ], [ %62, %36 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 %10
  %68 = sub i64 0, %3
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = icmp sgt i32 %7, 0
  br i1 %70, label %71, label %86

71:                                               ; preds = %65
  %72 = add i32 %7, -1
  %73 = and i32 %7, 3
  %74 = icmp ult i32 %72, 3
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = sub i32 %7, %73
  br label %99

77:                                               ; preds = %99, %71
  %78 = phi i8* [ %67, %71 ], [ %105, %99 ]
  %79 = icmp eq i32 %73, 0
  br i1 %79, label %86, label %80

80:                                               ; preds = %77, %80
  %81 = phi i8* [ %83, %80 ], [ %78, %77 ]
  %82 = phi i32 [ %84, %80 ], [ %73, %77 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %81, i8* align 1 %69, i64 %3, i1 false)
  %83 = getelementptr inbounds i8, i8* %81, i64 %3
  %84 = add i32 %82, -1
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %80, !llvm.loop !4

86:                                               ; preds = %77, %80, %65
  %87 = getelementptr inbounds i8, i8* %0, i64 %10
  %88 = icmp sgt i32 %6, 0
  br i1 %88, label %89, label %117

89:                                               ; preds = %86
  %90 = sext i32 %6 to i64
  %91 = mul i64 %90, %3
  %92 = sub i64 0, %91
  %93 = getelementptr inbounds i8, i8* %87, i64 %92
  %94 = add i32 %6, -1
  %95 = and i32 %6, 3
  %96 = icmp ult i32 %94, 3
  br i1 %96, label %108, label %97

97:                                               ; preds = %89
  %98 = sub i32 %6, %95
  br label %118

99:                                               ; preds = %99, %75
  %100 = phi i8* [ %67, %75 ], [ %105, %99 ]
  %101 = phi i32 [ %76, %75 ], [ %106, %99 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %69, i64 %3, i1 false)
  %102 = getelementptr inbounds i8, i8* %100, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %102, i8* align 1 %69, i64 %3, i1 false)
  %103 = getelementptr inbounds i8, i8* %102, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %103, i8* align 1 %69, i64 %3, i1 false)
  %104 = getelementptr inbounds i8, i8* %103, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %104, i8* align 1 %69, i64 %3, i1 false)
  %105 = getelementptr inbounds i8, i8* %104, i64 %3
  %106 = add i32 %101, -4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %77, label %99

108:                                              ; preds = %118, %89
  %109 = phi i8* [ %93, %89 ], [ %124, %118 ]
  %110 = icmp eq i32 %95, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %108, %111
  %112 = phi i8* [ %114, %111 ], [ %109, %108 ]
  %113 = phi i32 [ %115, %111 ], [ %95, %108 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %112, i8* align 1 %87, i64 %3, i1 false)
  %114 = getelementptr inbounds i8, i8* %112, i64 %3
  %115 = add i32 %113, -1
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %111, !llvm.loop !5

117:                                              ; preds = %108, %111, %86
  ret void

118:                                              ; preds = %118, %97
  %119 = phi i8* [ %93, %97 ], [ %124, %118 ]
  %120 = phi i32 [ %98, %97 ], [ %125, %118 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %119, i8* align 1 %87, i64 %3, i1 false)
  %121 = getelementptr inbounds i8, i8* %119, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %121, i8* align 1 %87, i64 %3, i1 false)
  %122 = getelementptr inbounds i8, i8* %121, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %122, i8* align 1 %87, i64 %3, i1 false)
  %123 = getelementptr inbounds i8, i8* %122, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %87, i64 %3, i1 false)
  %124 = getelementptr inbounds i8, i8* %123, i64 %3
  %125 = add i32 %120, -4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %108, label %118
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN7libgav110PostFilter11ExtendFrameItEEvPT_iiliiii(i16*, i32, i32, i64, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %9 = sext i32 %4 to i64
  %10 = sub nsw i64 0, %9
  %11 = icmp eq i32 %4, 0
  %12 = sext i32 %1 to i64
  %13 = add nsw i32 %1, -1
  %14 = sext i32 %13 to i64
  %15 = sext i32 %5 to i64
  %16 = icmp eq i32 %5, 0
  %17 = add nsw i64 %9, -16
  %18 = lshr i64 %17, 4
  %19 = add nuw nsw i64 %18, 1
  %20 = add nsw i64 %15, -16
  %21 = lshr i64 %20, 4
  %22 = add nuw nsw i64 %21, 1
  %23 = icmp ult i32 %4, 16
  %24 = and i64 %9, -16
  %25 = and i64 %19, 7
  %26 = icmp ult i64 %17, 112
  %27 = sub nsw i64 %19, %25
  %28 = icmp eq i64 %25, 0
  %29 = icmp eq i64 %24, %9
  %30 = icmp ult i32 %5, 16
  %31 = and i64 %15, -16
  %32 = and i64 %22, 7
  %33 = icmp ult i64 %20, 112
  %34 = sub nsw i64 %22, %32
  %35 = icmp eq i64 %32, 0
  %36 = icmp eq i64 %31, %15
  br label %37

37:                                               ; preds = %188, %8
  %38 = phi i16* [ %0, %8 ], [ %189, %188 ]
  %39 = phi i32 [ %2, %8 ], [ %190, %188 ]
  %40 = getelementptr inbounds i16, i16* %38, i64 %10
  %41 = load i16, i16* %38, align 2
  br i1 %11, label %113, label %42

42:                                               ; preds = %37
  br i1 %23, label %106, label %43

43:                                               ; preds = %42
  %44 = insertelement <8 x i16> undef, i16 %41, i32 0
  %45 = shufflevector <8 x i16> %44, <8 x i16> undef, <8 x i32> zeroinitializer
  %46 = insertelement <8 x i16> undef, i16 %41, i32 0
  %47 = shufflevector <8 x i16> %46, <8 x i16> undef, <8 x i32> zeroinitializer
  br i1 %26, label %93, label %48

48:                                               ; preds = %43, %48
  %49 = phi i64 [ %90, %48 ], [ 0, %43 ]
  %50 = phi i64 [ %91, %48 ], [ %27, %43 ]
  %51 = getelementptr inbounds i16, i16* %40, i64 %49
  %52 = bitcast i16* %51 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %52, align 2
  %53 = getelementptr inbounds i16, i16* %51, i64 8
  %54 = bitcast i16* %53 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %54, align 2
  %55 = or i64 %49, 16
  %56 = getelementptr inbounds i16, i16* %40, i64 %55
  %57 = bitcast i16* %56 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %57, align 2
  %58 = getelementptr inbounds i16, i16* %56, i64 8
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %59, align 2
  %60 = or i64 %49, 32
  %61 = getelementptr inbounds i16, i16* %40, i64 %60
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %62, align 2
  %63 = getelementptr inbounds i16, i16* %61, i64 8
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %64, align 2
  %65 = or i64 %49, 48
  %66 = getelementptr inbounds i16, i16* %40, i64 %65
  %67 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %67, align 2
  %68 = getelementptr inbounds i16, i16* %66, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %69, align 2
  %70 = or i64 %49, 64
  %71 = getelementptr inbounds i16, i16* %40, i64 %70
  %72 = bitcast i16* %71 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %72, align 2
  %73 = getelementptr inbounds i16, i16* %71, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %74, align 2
  %75 = or i64 %49, 80
  %76 = getelementptr inbounds i16, i16* %40, i64 %75
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %77, align 2
  %78 = getelementptr inbounds i16, i16* %76, i64 8
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %79, align 2
  %80 = or i64 %49, 96
  %81 = getelementptr inbounds i16, i16* %40, i64 %80
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %82, align 2
  %83 = getelementptr inbounds i16, i16* %81, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %84, align 2
  %85 = or i64 %49, 112
  %86 = getelementptr inbounds i16, i16* %40, i64 %85
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %87, align 2
  %88 = getelementptr inbounds i16, i16* %86, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %89, align 2
  %90 = add i64 %49, 128
  %91 = add i64 %50, -8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %48, !llvm.loop !6

93:                                               ; preds = %48, %43
  %94 = phi i64 [ 0, %43 ], [ %90, %48 ]
  br i1 %28, label %105, label %95

95:                                               ; preds = %93, %95
  %96 = phi i64 [ %102, %95 ], [ %94, %93 ]
  %97 = phi i64 [ %103, %95 ], [ %25, %93 ]
  %98 = getelementptr inbounds i16, i16* %40, i64 %96
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %45, <8 x i16>* %99, align 2
  %100 = getelementptr inbounds i16, i16* %98, i64 8
  %101 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %47, <8 x i16>* %101, align 2
  %102 = add i64 %96, 16
  %103 = add i64 %97, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %95, !llvm.loop !8

105:                                              ; preds = %95, %93
  br i1 %29, label %113, label %106

106:                                              ; preds = %105, %42
  %107 = phi i64 [ 0, %42 ], [ %24, %105 ]
  br label %108

108:                                              ; preds = %106, %108
  %109 = phi i64 [ %111, %108 ], [ %107, %106 ]
  %110 = getelementptr inbounds i16, i16* %40, i64 %109
  store i16 %41, i16* %110, align 2
  %111 = add nuw i64 %109, 1
  %112 = icmp eq i64 %111, %9
  br i1 %112, label %113, label %108, !llvm.loop !9

113:                                              ; preds = %108, %105, %37
  %114 = getelementptr inbounds i16, i16* %38, i64 %12
  %115 = getelementptr inbounds i16, i16* %38, i64 %14
  %116 = load i16, i16* %115, align 2
  br i1 %16, label %188, label %117

117:                                              ; preds = %113
  br i1 %30, label %181, label %118

118:                                              ; preds = %117
  %119 = insertelement <8 x i16> undef, i16 %116, i32 0
  %120 = shufflevector <8 x i16> %119, <8 x i16> undef, <8 x i32> zeroinitializer
  %121 = insertelement <8 x i16> undef, i16 %116, i32 0
  %122 = shufflevector <8 x i16> %121, <8 x i16> undef, <8 x i32> zeroinitializer
  br i1 %33, label %168, label %123

123:                                              ; preds = %118, %123
  %124 = phi i64 [ %165, %123 ], [ 0, %118 ]
  %125 = phi i64 [ %166, %123 ], [ %34, %118 ]
  %126 = getelementptr inbounds i16, i16* %114, i64 %124
  %127 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %127, align 2
  %128 = getelementptr inbounds i16, i16* %126, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %129, align 2
  %130 = or i64 %124, 16
  %131 = getelementptr inbounds i16, i16* %114, i64 %130
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %132, align 2
  %133 = getelementptr inbounds i16, i16* %131, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %134, align 2
  %135 = or i64 %124, 32
  %136 = getelementptr inbounds i16, i16* %114, i64 %135
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %137, align 2
  %138 = getelementptr inbounds i16, i16* %136, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %139, align 2
  %140 = or i64 %124, 48
  %141 = getelementptr inbounds i16, i16* %114, i64 %140
  %142 = bitcast i16* %141 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %142, align 2
  %143 = getelementptr inbounds i16, i16* %141, i64 8
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %144, align 2
  %145 = or i64 %124, 64
  %146 = getelementptr inbounds i16, i16* %114, i64 %145
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %147, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 8
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %149, align 2
  %150 = or i64 %124, 80
  %151 = getelementptr inbounds i16, i16* %114, i64 %150
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %152, align 2
  %153 = getelementptr inbounds i16, i16* %151, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %154, align 2
  %155 = or i64 %124, 96
  %156 = getelementptr inbounds i16, i16* %114, i64 %155
  %157 = bitcast i16* %156 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %157, align 2
  %158 = getelementptr inbounds i16, i16* %156, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %159, align 2
  %160 = or i64 %124, 112
  %161 = getelementptr inbounds i16, i16* %114, i64 %160
  %162 = bitcast i16* %161 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %162, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 8
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %164, align 2
  %165 = add i64 %124, 128
  %166 = add i64 %125, -8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %123, !llvm.loop !11

168:                                              ; preds = %123, %118
  %169 = phi i64 [ 0, %118 ], [ %165, %123 ]
  br i1 %35, label %180, label %170

170:                                              ; preds = %168, %170
  %171 = phi i64 [ %177, %170 ], [ %169, %168 ]
  %172 = phi i64 [ %178, %170 ], [ %32, %168 ]
  %173 = getelementptr inbounds i16, i16* %114, i64 %171
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %174, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %176, align 2
  %177 = add i64 %171, 16
  %178 = add i64 %172, -1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %170, !llvm.loop !12

180:                                              ; preds = %170, %168
  br i1 %36, label %188, label %181

181:                                              ; preds = %180, %117
  %182 = phi i64 [ 0, %117 ], [ %31, %180 ]
  br label %183

183:                                              ; preds = %181, %183
  %184 = phi i64 [ %186, %183 ], [ %182, %181 ]
  %185 = getelementptr inbounds i16, i16* %114, i64 %184
  store i16 %116, i16* %185, align 2
  %186 = add nuw i64 %184, 1
  %187 = icmp eq i64 %186, %15
  br i1 %187, label %188, label %183, !llvm.loop !13

188:                                              ; preds = %183, %180, %113
  %189 = getelementptr inbounds i16, i16* %38, i64 %3
  %190 = add nsw i32 %39, -1
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %37

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %189, i64 %10
  %194 = icmp sgt i32 %7, 0
  br i1 %194, label %195, label %215

195:                                              ; preds = %192
  %196 = sub i64 0, %3
  %197 = getelementptr inbounds i16, i16* %193, i64 %196
  %198 = bitcast i16* %197 to i8*
  %199 = shl i64 %3, 1
  %200 = add i32 %7, -1
  %201 = and i32 %7, 3
  %202 = icmp ult i32 %200, 3
  br i1 %202, label %205, label %203

203:                                              ; preds = %195
  %204 = sub i32 %7, %201
  br label %230

205:                                              ; preds = %230, %195
  %206 = phi i16* [ %193, %195 ], [ %240, %230 ]
  %207 = icmp eq i32 %201, 0
  br i1 %207, label %215, label %208

208:                                              ; preds = %205, %208
  %209 = phi i16* [ %212, %208 ], [ %206, %205 ]
  %210 = phi i32 [ %213, %208 ], [ %201, %205 ]
  %211 = bitcast i16* %209 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %211, i8* align 2 %198, i64 %199, i1 false)
  %212 = getelementptr inbounds i16, i16* %209, i64 %3
  %213 = add i32 %210, -1
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %208, !llvm.loop !14

215:                                              ; preds = %205, %208, %192
  %216 = getelementptr inbounds i16, i16* %0, i64 %10
  %217 = icmp sgt i32 %6, 0
  br i1 %217, label %218, label %253

218:                                              ; preds = %215
  %219 = sext i32 %6 to i64
  %220 = mul i64 %219, %3
  %221 = sub i64 0, %220
  %222 = getelementptr inbounds i16, i16* %216, i64 %221
  %223 = bitcast i16* %216 to i8*
  %224 = shl i64 %3, 1
  %225 = add i32 %6, -1
  %226 = and i32 %6, 3
  %227 = icmp ult i32 %225, 3
  br i1 %227, label %243, label %228

228:                                              ; preds = %218
  %229 = sub i32 %6, %226
  br label %254

230:                                              ; preds = %230, %203
  %231 = phi i16* [ %193, %203 ], [ %240, %230 ]
  %232 = phi i32 [ %204, %203 ], [ %241, %230 ]
  %233 = bitcast i16* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %233, i8* align 2 %198, i64 %199, i1 false)
  %234 = getelementptr inbounds i16, i16* %231, i64 %3
  %235 = bitcast i16* %234 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %235, i8* align 2 %198, i64 %199, i1 false)
  %236 = getelementptr inbounds i16, i16* %234, i64 %3
  %237 = bitcast i16* %236 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %237, i8* align 2 %198, i64 %199, i1 false)
  %238 = getelementptr inbounds i16, i16* %236, i64 %3
  %239 = bitcast i16* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %239, i8* align 2 %198, i64 %199, i1 false)
  %240 = getelementptr inbounds i16, i16* %238, i64 %3
  %241 = add i32 %232, -4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %205, label %230

243:                                              ; preds = %254, %218
  %244 = phi i16* [ %222, %218 ], [ %264, %254 ]
  %245 = icmp eq i32 %226, 0
  br i1 %245, label %253, label %246

246:                                              ; preds = %243, %246
  %247 = phi i16* [ %250, %246 ], [ %244, %243 ]
  %248 = phi i32 [ %251, %246 ], [ %226, %243 ]
  %249 = bitcast i16* %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %249, i8* align 2 %223, i64 %224, i1 false)
  %250 = getelementptr inbounds i16, i16* %247, i64 %3
  %251 = add i32 %248, -1
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %246, !llvm.loop !15

253:                                              ; preds = %243, %246, %215
  ret void

254:                                              ; preds = %254, %228
  %255 = phi i16* [ %222, %228 ], [ %264, %254 ]
  %256 = phi i32 [ %229, %228 ], [ %265, %254 ]
  %257 = bitcast i16* %255 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %257, i8* align 2 %223, i64 %224, i1 false)
  %258 = getelementptr inbounds i16, i16* %255, i64 %3
  %259 = bitcast i16* %258 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %259, i8* align 2 %223, i64 %224, i1 false)
  %260 = getelementptr inbounds i16, i16* %258, i64 %3
  %261 = bitcast i16* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %261, i8* align 2 %223, i64 %224, i1 false)
  %262 = getelementptr inbounds i16, i16* %260, i64 %3
  %263 = bitcast i16* %262 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %263, i8* align 2 %223, i64 %224, i1 false)
  %264 = getelementptr inbounds i16, i16* %262, i64 %3
  %265 = add i32 %256, -4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %243, label %254
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilterC2ERKNS_14ObuFrameHeaderERKNS_17ObuSequenceHeaderEPNS_18FrameScratchBufferEPNS_9YuvBufferEPKNS_3dsp3DspEi(%"class.libgav1::PostFilter"*, %"struct.libgav1::ObuFrameHeader"* dereferenceable(2080), %"struct.libgav1::ObuSequenceHeader"* nocapture readonly dereferenceable(692), %"struct.libgav1::FrameScratchBuffer"*, %"class.libgav1::YuvBuffer"*, %"struct.libgav1::dsp::Dsp"*, i32) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.libgav1::PostFilter"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 bitcast ([2 x { i64, i64 }]* @constinit to i8*), i64 32, i1 false)
  %9 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  store %"struct.libgav1::ObuFrameHeader"* %1, %"struct.libgav1::ObuFrameHeader"** %9, align 8
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 11
  store %"struct.libgav1::LoopRestoration"* %11, %"struct.libgav1::LoopRestoration"** %10, align 8
  %12 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 3
  store %"struct.libgav1::dsp::Dsp"* %5, %"struct.libgav1::dsp::Dsp"** %12, align 8
  %13 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 63
  %17 = ashr i32 %16, 6
  store i32 %17, i32* %13, align 8
  %18 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 10
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 4
  %21 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 6
  %22 = load i32, i32* %14, align 8
  store i32 %22, i32* %21, align 8
  %23 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %24 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 5
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %23, align 4
  %26 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 8
  %27 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %2, i64 0, i32 33, i32 0
  %28 = load i8, i8* %27, align 4
  store i8 %28, i8* %26, align 8
  %29 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 0
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 1
  %31 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %2, i64 0, i32 33, i32 6
  %32 = load i8, i8* %31, align 4
  store i8 %32, i8* %30, align 1
  %33 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 2
  %34 = load i8, i8* %31, align 4
  store i8 %34, i8* %33, align 1
  %35 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 0
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 1
  %37 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %2, i64 0, i32 33, i32 7
  %38 = load i8, i8* %37, align 1
  store i8 %38, i8* %36, align 1
  %39 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 2
  %40 = load i8, i8* %37, align 1
  store i8 %40, i8* %39, align 1
  %41 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %42 = getelementptr inbounds %"struct.libgav1::ObuSequenceHeader", %"struct.libgav1::ObuSequenceHeader"* %2, i64 0, i32 33, i32 1
  %43 = load i8, i8* %42, align 1, !range !16
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %44, i8 3, i8 1
  store i8 %45, i8* %41, align 1
  %46 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 12
  %47 = icmp ne i8 %28, 8
  %48 = zext i1 %47 to i32
  store i32 %48, i32* %46, align 8
  %49 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 14
  %50 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 54, i32 1
  %51 = load i8, i8* %50, align 4
  %52 = sext i8 %51 to i64
  %53 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @_ZN7libgav112_GLOBAL__N_112kInnerThreshE, i64 0, i64 %52, i64 0
  store i8* %53, i8** %49, align 8
  %54 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 15
  %55 = load i8, i8* %50, align 4
  %56 = sext i8 %55 to i64
  %57 = getelementptr inbounds [8 x [64 x i8]], [8 x [64 x i8]]* @_ZN7libgav112_GLOBAL__N_112kOuterThreshE, i64 0, i64 %56, i64 0
  store i8* %57, i8** %54, align 8
  %58 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 16
  %59 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 54, i32 0, i32 0, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %67

62:                                               ; preds = %7
  %63 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %1, i64 0, i32 54, i32 0, i32 0, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = icmp ne i8 %64, 0
  %66 = zext i1 %65 to i8
  br label %67

67:                                               ; preds = %7, %62
  %68 = phi i8 [ 1, %7 ], [ %66, %62 ]
  store i8 %68, i8* %58, align 8
  %69 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 20
  %70 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 1
  store %"class.libgav1::Array2D.23"* %70, %"class.libgav1::Array2D.23"** %69, align 8
  %71 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 21
  %72 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 2
  store %"class.libgav1::Array2D.31"* %72, %"class.libgav1::Array2D.31"** %71, align 8
  %73 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 22
  %74 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 0
  store %"class.libgav1::LoopRestorationInfo"* %74, %"class.libgav1::LoopRestorationInfo"** %73, align 8
  %75 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 0
  %76 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 9, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast i8** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast i8** %75 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 1
  %81 = load i8, i8* %42, align 1, !range !16
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %67
  %84 = load i8, i8* %31, align 4
  %85 = icmp ne i8 %84, 0
  %86 = zext i1 %85 to i64
  br label %87

87:                                               ; preds = %67, %83
  %88 = phi i64 [ 0, %67 ], [ %86, %83 ]
  %89 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 9, i64 %88, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast i8** %80 to i64*
  store i64 %91, i64* %92, align 8
  %93 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 24
  %94 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 10
  store %"class.libgav1::YuvBuffer"* %94, %"class.libgav1::YuvBuffer"** %93, align 8
  %95 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 25
  %96 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 3
  store %"class.libgav1::BlockParametersHolder"* %96, %"class.libgav1::BlockParametersHolder"** %95, align 8
  %97 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 26, i32 0
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 26, i32 1
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 26, i32 3
  %100 = getelementptr %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 26, i32 13, i64 0
  %101 = bitcast i32* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 76, i1 false) #6
  %102 = bitcast i8** %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 42, i1 false) #6
  %103 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  store %"class.libgav1::YuvBuffer"* %4, %"class.libgav1::YuvBuffer"** %103, align 8
  %104 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 32
  %105 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 8
  store %"class.libgav1::YuvBuffer"* %105, %"class.libgav1::YuvBuffer"** %104, align 8
  %106 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 33
  %107 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 11
  store %"class.libgav1::YuvBuffer"* %107, %"class.libgav1::YuvBuffer"** %106, align 8
  %108 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %109 = trunc i32 %6 to i8
  store i8 %109, i8* %108, align 8
  %110 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %111 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 14, i32 3
  %112 = load i8, i8* %111, align 8, !range !16
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %87
  %115 = getelementptr inbounds %"struct.libgav1::FrameScratchBuffer", %"struct.libgav1::FrameScratchBuffer"* %3, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %116 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %115, align 8
  br label %117

117:                                              ; preds = %87, %114
  %118 = phi %"class.libgav1::ThreadPool"* [ %116, %114 ], [ null, %87 ]
  store %"class.libgav1::ThreadPool"* %118, %"class.libgav1::ThreadPool"** %110, align 8
  %119 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 37
  store i32 -1, i32* %119, align 8
  %120 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 17, i64 0
  tail call void @_ZNK7libgav110PostFilter26ComputeDeblockFilterLevelsEPKaPA4_A8_A2_h(%"class.libgav1::PostFilter"* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @_ZZN7libgav110PostFilterC1ERKNS_14ObuFrameHeaderERKNS_17ObuSequenceHeaderEPNS_18FrameScratchBufferEPNS_9YuvBufferEPKNS_3dsp3DspEiE13zero_delta_lf, i64 0, i64 0), [4 x [8 x [2 x i8]]]* %120) #6
  %121 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %9, align 8
  %122 = load i8, i8* %108, align 8
  %123 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %121, i64 0, i32 4
  %124 = load i32, i32* %123, align 8
  %125 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %121, i64 0, i32 10
  %126 = load i32, i32* %125, align 8
  %127 = icmp ne i32 %124, %126
  %128 = and i8 %122, 4
  %129 = icmp ne i8 %128, 0
  %130 = and i1 %129, %127
  br i1 %130, label %131, label %200

131:                                              ; preds = %117
  %132 = load i32, i32* %21, align 8
  %133 = load i32, i32* %18, align 4
  %134 = load i8, i8* %41, align 1
  %135 = sext i8 %134 to i64
  br label %136

136:                                              ; preds = %131, %136
  %137 = phi i64 [ 0, %131 ], [ %163, %136 ]
  %138 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = add nsw i32 %132, %140
  %142 = ashr i32 %141, %140
  %143 = add nsw i32 %133, %140
  %144 = ashr i32 %143, %140
  %145 = shl i32 %142, 14
  %146 = sdiv i32 %144, 2
  %147 = add nsw i32 %145, %146
  %148 = sdiv i32 %147, %144
  %149 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %137, i32 2
  store i32 %148, i32* %149, align 4
  %150 = mul nsw i32 %144, %148
  %151 = sub nsw i32 %150, %145
  %152 = sub nsw i32 %144, %142
  %153 = shl i32 %152, 13
  %154 = ashr i32 %144, 1
  %155 = sub i32 %154, %153
  %156 = sdiv i32 %155, %144
  %157 = add nsw i32 %156, 128
  %158 = sdiv i32 %151, -2
  %159 = add i32 %157, %158
  %160 = and i32 %159, 16383
  %161 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %137, i32 1
  store i32 %160, i32* %161, align 4
  %162 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %137, i32 0
  store i32 %144, i32* %162, align 4
  %163 = add nuw nsw i64 %137, 1
  %164 = icmp slt i64 %163, %135
  br i1 %164, label %136, label %165

165:                                              ; preds = %136
  %166 = getelementptr inbounds %"struct.libgav1::dsp::Dsp", %"struct.libgav1::dsp::Dsp"* %5, i64 0, i32 25
  %167 = load void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** %166, align 8
  %168 = icmp eq void (i32, i32, i32, i8*)* %167, null
  br i1 %168, label %200, label %169

169:                                              ; preds = %165
  %170 = load i8*, i8** %75, align 8
  %171 = load i8*, i8** %80, align 8
  %172 = icmp eq i8* %170, %171
  %173 = select i1 %172, i64 1, i64 2
  %174 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 0
  %175 = load i8, i8* %174, align 1
  %176 = sext i8 %175 to i32
  %177 = add nsw i32 %133, %176
  %178 = ashr i32 %177, %176
  %179 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 0, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 0, i32 2
  %182 = load i32, i32* %181, align 4
  tail call void %167(i32 %178, i32 %180, i32 %182, i8* %170) #6
  br i1 %172, label %200, label %183

183:                                              ; preds = %169, %183
  %184 = phi i64 [ %198, %183 ], [ 1, %169 ]
  %185 = load void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** %166, align 8
  %186 = load i32, i32* %18, align 4
  %187 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 23, i64 %184
  %188 = load i8*, i8** %187, align 8
  %189 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %184
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = add nsw i32 %186, %191
  %193 = ashr i32 %192, %191
  %194 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %184, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %184, i32 2
  %197 = load i32, i32* %196, align 4
  tail call void %185(i32 %193, i32 %195, i32 %197, i8* %188) #6
  %198 = add nuw nsw i64 %184, 1
  %199 = icmp ult i64 %198, %173
  br i1 %199, label %183, label %200

200:                                              ; preds = %183, %169, %165, %117
  %201 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %103, align 8
  %202 = load i8, i8* %41, align 1
  %203 = sext i8 %202 to i64
  %204 = icmp sgt i64 %203, 1
  %205 = select i1 %204, i64 %203, i64 1
  %206 = icmp ult i64 %205, 2
  br i1 %206, label %296, label %207

207:                                              ; preds = %200
  %208 = bitcast %"class.libgav1::YuvBuffer"* %201 to i8*
  %209 = getelementptr %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 0
  %210 = bitcast i8** %209 to i8*
  %211 = getelementptr %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 0, i64 58, i32 0
  %212 = icmp sgt i64 %203, 1
  %213 = select i1 %212, i64 %203, i64 1
  %214 = getelementptr i64, i64* %211, i64 %213
  %215 = getelementptr %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 0
  %216 = shl nuw nsw i64 %213, 3
  %217 = add nuw nsw i64 %216, 88
  %218 = getelementptr i8, i8* %208, i64 %217
  %219 = icmp ugt i8* %218, %210
  %220 = bitcast i64* %214 to i8**
  %221 = icmp ult i8** %215, %220
  %222 = and i1 %219, %221
  br i1 %222, label %296, label %223

223:                                              ; preds = %207
  %224 = and i64 %205, 9223372036854775806
  %225 = add nsw i64 %224, -2
  %226 = lshr exact i64 %225, 1
  %227 = add nuw i64 %226, 1
  %228 = and i64 %227, 1
  %229 = icmp eq i64 %225, 0
  br i1 %229, label %273, label %230

230:                                              ; preds = %223
  %231 = sub nuw i64 %227, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %270, %232 ]
  %234 = phi i64 [ %231, %230 ], [ %271, %232 ]
  %235 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 %233
  %236 = bitcast i8** %235 to <2 x i64>*
  %237 = load <2 x i64>, <2 x i64>* %236, align 8, !alias.scope !17
  %238 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 31, i64 %233
  %239 = bitcast i8** %238 to <2 x i64>*
  store <2 x i64> %237, <2 x i64>* %239, align 8, !alias.scope !20, !noalias !17
  %240 = bitcast i8** %235 to <2 x i64>*
  %241 = load <2 x i64>, <2 x i64>* %240, align 8, !alias.scope !17
  %242 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %233
  %243 = bitcast i8** %242 to <2 x i64>*
  store <2 x i64> %241, <2 x i64>* %243, align 8, !alias.scope !20, !noalias !17
  %244 = bitcast i8** %235 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8, !alias.scope !17
  %246 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %233
  %247 = bitcast i8** %246 to <2 x i64>*
  store <2 x i64> %245, <2 x i64>* %247, align 8, !alias.scope !20, !noalias !17
  %248 = bitcast i8** %235 to <2 x i64>*
  %249 = load <2 x i64>, <2 x i64>* %248, align 8, !alias.scope !17
  %250 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %233
  %251 = bitcast i8** %250 to <2 x i64>*
  store <2 x i64> %249, <2 x i64>* %251, align 8, !alias.scope !20, !noalias !17
  %252 = or i64 %233, 2
  %253 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 %252
  %254 = bitcast i8** %253 to <2 x i64>*
  %255 = load <2 x i64>, <2 x i64>* %254, align 8, !alias.scope !17
  %256 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 31, i64 %252
  %257 = bitcast i8** %256 to <2 x i64>*
  store <2 x i64> %255, <2 x i64>* %257, align 8, !alias.scope !20, !noalias !17
  %258 = bitcast i8** %253 to <2 x i64>*
  %259 = load <2 x i64>, <2 x i64>* %258, align 8, !alias.scope !17
  %260 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %252
  %261 = bitcast i8** %260 to <2 x i64>*
  store <2 x i64> %259, <2 x i64>* %261, align 8, !alias.scope !20, !noalias !17
  %262 = bitcast i8** %253 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !17
  %264 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %252
  %265 = bitcast i8** %264 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %265, align 8, !alias.scope !20, !noalias !17
  %266 = bitcast i8** %253 to <2 x i64>*
  %267 = load <2 x i64>, <2 x i64>* %266, align 8, !alias.scope !17
  %268 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %252
  %269 = bitcast i8** %268 to <2 x i64>*
  store <2 x i64> %267, <2 x i64>* %269, align 8, !alias.scope !20, !noalias !17
  %270 = add i64 %233, 4
  %271 = add i64 %234, -2
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %232, !llvm.loop !22

273:                                              ; preds = %232, %223
  %274 = phi i64 [ 0, %223 ], [ %270, %232 ]
  %275 = icmp eq i64 %228, 0
  br i1 %275, label %294, label %276

276:                                              ; preds = %273
  %277 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 %274
  %278 = bitcast i8** %277 to <2 x i64>*
  %279 = load <2 x i64>, <2 x i64>* %278, align 8, !alias.scope !17
  %280 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 31, i64 %274
  %281 = bitcast i8** %280 to <2 x i64>*
  store <2 x i64> %279, <2 x i64>* %281, align 8, !alias.scope !20, !noalias !17
  %282 = bitcast i8** %277 to <2 x i64>*
  %283 = load <2 x i64>, <2 x i64>* %282, align 8, !alias.scope !17
  %284 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %274
  %285 = bitcast i8** %284 to <2 x i64>*
  store <2 x i64> %283, <2 x i64>* %285, align 8, !alias.scope !20, !noalias !17
  %286 = bitcast i8** %277 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !17
  %288 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %274
  %289 = bitcast i8** %288 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %289, align 8, !alias.scope !20, !noalias !17
  %290 = bitcast i8** %277 to <2 x i64>*
  %291 = load <2 x i64>, <2 x i64>* %290, align 8, !alias.scope !17
  %292 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %274
  %293 = bitcast i8** %292 to <2 x i64>*
  store <2 x i64> %291, <2 x i64>* %293, align 8, !alias.scope !20, !noalias !17
  br label %294

294:                                              ; preds = %273, %276
  %295 = icmp eq i64 %205, %224
  br i1 %295, label %316, label %296

296:                                              ; preds = %294, %207, %200
  %297 = phi i64 [ 0, %207 ], [ 0, %200 ], [ %224, %294 ]
  br label %298

298:                                              ; preds = %296, %298
  %299 = phi i64 [ %314, %298 ], [ %297, %296 ]
  %300 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 %299
  %301 = bitcast i8** %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 31, i64 %299
  %304 = bitcast i8** %303 to i64*
  store i64 %302, i64* %304, align 8
  %305 = load i64, i64* %301, align 8
  %306 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %299
  %307 = bitcast i8** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = load i64, i64* %301, align 8
  %309 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %299
  %310 = bitcast i8** %309 to i64*
  store i64 %308, i64* %310, align 8
  %311 = load i64, i64* %301, align 8
  %312 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %299
  %313 = bitcast i8** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = add nuw nsw i64 %299, 1
  %315 = icmp slt i64 %314, %203
  br i1 %315, label %298, label %316, !llvm.loop !23

316:                                              ; preds = %298, %294
  %317 = sext i8 %202 to i64
  %318 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %9, align 8
  %319 = load i8, i8* %108, align 8
  %320 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 1
  %321 = load i8, i8* %320, align 1
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %323, label %339

323:                                              ; preds = %316
  %324 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 2, i64 0
  %325 = load i8, i8* %324, align 1
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %327, label %339

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 3, i64 0
  %329 = load i8, i8* %328, align 1
  %330 = icmp eq i8 %329, 0
  br i1 %330, label %331, label %339

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 4, i64 0
  %333 = load i8, i8* %332, align 1
  %334 = icmp eq i8 %333, 0
  br i1 %334, label %335, label %339

335:                                              ; preds = %331
  %336 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 5, i64 0
  %337 = load i8, i8* %336, align 1
  %338 = icmp eq i8 %337, 0
  br i1 %338, label %342, label %339

339:                                              ; preds = %316, %323, %327, %331, %335
  %340 = and i8 %319, 2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %342, label %373

342:                                              ; preds = %339, %335
  %343 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %10, align 8
  %344 = icmp eq i8 %202, 1
  %345 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %343, i64 0, i32 0, i64 0
  %346 = load i8, i8* %345, align 4
  %347 = icmp ne i8 %346, 0
  br i1 %344, label %348, label %352

348:                                              ; preds = %342
  %349 = and i8 %319, 8
  %350 = icmp ne i8 %349, 0
  %351 = and i1 %350, %347
  br i1 %351, label %373, label %364

352:                                              ; preds = %342
  br i1 %347, label %361, label %353

353:                                              ; preds = %352
  %354 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %343, i64 0, i32 0, i64 1
  %355 = load i8, i8* %354, align 1
  %356 = icmp eq i8 %355, 0
  br i1 %356, label %357, label %361

357:                                              ; preds = %353
  %358 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %343, i64 0, i32 0, i64 2
  %359 = load i8, i8* %358, align 2
  %360 = icmp eq i8 %359, 0
  br i1 %360, label %364, label %361

361:                                              ; preds = %352, %353, %357
  %362 = and i8 %319, 8
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %373

364:                                              ; preds = %361, %357, %348
  %365 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 4
  %366 = load i32, i32* %365, align 8
  %367 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 10
  %368 = load i32, i32* %367, align 8
  %369 = icmp ne i32 %366, %368
  %370 = and i8 %319, 4
  %371 = icmp ne i8 %370, 0
  %372 = and i1 %371, %369
  br i1 %372, label %373, label %503

373:                                              ; preds = %361, %339, %348, %364
  %374 = load i32, i32* %46, align 8
  %375 = icmp eq i8 %202, 1
  %376 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 2, i64 0
  %377 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 3, i64 0
  %378 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 4, i64 0
  %379 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 55, i32 5, i64 0
  %380 = shl i32 16, %374
  %381 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 4
  %382 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %318, i64 0, i32 10
  %383 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %10, align 8
  %384 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %383, i64 0, i32 0, i64 0
  %385 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %383, i64 0, i32 0, i64 1
  %386 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %383, i64 0, i32 0, i64 2
  br label %387

387:                                              ; preds = %501, %373
  %388 = phi i8 [ %502, %501 ], [ %319, %373 ]
  %389 = phi i64 [ %499, %501 ], [ 0, %373 ]
  %390 = load i8, i8* %384, align 4
  %391 = icmp ne i8 %390, 0
  br i1 %375, label %392, label %396

392:                                              ; preds = %387
  %393 = and i8 %388, 8
  %394 = icmp ne i8 %393, 0
  %395 = and i1 %394, %391
  br i1 %395, label %406, label %443

396:                                              ; preds = %387
  br i1 %391, label %403, label %397

397:                                              ; preds = %396
  %398 = load i8, i8* %385, align 1
  %399 = icmp eq i8 %398, 0
  br i1 %399, label %400, label %403

400:                                              ; preds = %397
  %401 = load i8, i8* %386, align 2
  %402 = icmp eq i8 %401, 0
  br i1 %402, label %443, label %403

403:                                              ; preds = %396, %397, %400
  %404 = and i8 %388, 8
  %405 = icmp eq i8 %404, 0
  br i1 %405, label %443, label %406

406:                                              ; preds = %403, %392
  %407 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %383, i64 0, i32 0, i64 %389
  %408 = load i8, i8* %407, align 1
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %443, label %410

410:                                              ; preds = %406
  %411 = load i8, i8* %320, align 1
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %413, label %425

413:                                              ; preds = %410
  %414 = load i8, i8* %376, align 1
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %416, label %425

416:                                              ; preds = %413
  %417 = load i8, i8* %377, align 1
  %418 = icmp eq i8 %417, 0
  br i1 %418, label %419, label %425

419:                                              ; preds = %416
  %420 = load i8, i8* %378, align 1
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %422, label %425

422:                                              ; preds = %419
  %423 = load i8, i8* %379, align 1
  %424 = icmp eq i8 %423, 0
  br i1 %424, label %428, label %425

425:                                              ; preds = %410, %413, %416, %419, %422
  %426 = and i8 %388, 2
  %427 = icmp eq i8 %426, 0
  br i1 %427, label %428, label %432

428:                                              ; preds = %425, %422
  %429 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %110, align 8
  %430 = icmp eq %"class.libgav1::ThreadPool"* %429, null
  %431 = select i1 %430, i32 2, i32 0
  br label %432

432:                                              ; preds = %425, %428
  %433 = phi i32 [ 0, %425 ], [ %431, %428 ]
  %434 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 11, i64 %389
  %435 = load i32, i32* %434, align 4
  %436 = mul nsw i32 %435, %433
  %437 = add nsw i32 %436, %380
  %438 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %389
  %439 = load i8*, i8** %438, align 8
  %440 = sext i32 %437 to i64
  %441 = getelementptr inbounds i8, i8* %439, i64 %440
  store i8* %441, i8** %438, align 8
  %442 = load i8, i8* %108, align 8
  br label %443

443:                                              ; preds = %403, %400, %392, %406, %432
  %444 = phi i8 [ %442, %432 ], [ %388, %406 ], [ %388, %403 ], [ %388, %392 ], [ %388, %400 ]
  %445 = phi i32 [ 16, %432 ], [ 0, %406 ], [ 0, %403 ], [ 0, %392 ], [ 0, %400 ]
  %446 = phi i32 [ %433, %432 ], [ 0, %406 ], [ 0, %403 ], [ 0, %392 ], [ 0, %400 ]
  %447 = load i32, i32* %381, align 8
  %448 = load i32, i32* %382, align 8
  %449 = icmp ne i32 %447, %448
  %450 = and i8 %444, 4
  %451 = icmp ne i8 %450, 0
  %452 = and i1 %451, %449
  %453 = zext i1 %452 to i32
  %454 = add nuw nsw i32 %446, %453
  %455 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 11, i64 %389
  %456 = load i32, i32* %455, align 4
  %457 = mul nsw i32 %454, %456
  %458 = shl i32 %445, %374
  %459 = add nsw i32 %457, %458
  %460 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 29, i64 %389
  %461 = load i8*, i8** %460, align 8
  %462 = sext i32 %459 to i64
  %463 = getelementptr inbounds i8, i8* %461, i64 %462
  store i8* %463, i8** %460, align 8
  %464 = load i8, i8* %108, align 8
  %465 = load i8, i8* %320, align 1
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %467, label %479

467:                                              ; preds = %443
  %468 = load i8, i8* %376, align 1
  %469 = icmp eq i8 %468, 0
  br i1 %469, label %470, label %479

470:                                              ; preds = %467
  %471 = load i8, i8* %377, align 1
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %473, label %479

473:                                              ; preds = %470
  %474 = load i8, i8* %378, align 1
  %475 = icmp eq i8 %474, 0
  br i1 %475, label %476, label %479

476:                                              ; preds = %473
  %477 = load i8, i8* %379, align 1
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %489, label %479

479:                                              ; preds = %443, %467, %470, %473, %476
  %480 = and i8 %464, 2
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %489, label %482

482:                                              ; preds = %479
  %483 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %110, align 8
  %484 = icmp eq %"class.libgav1::ThreadPool"* %483, null
  br i1 %484, label %485, label %489

485:                                              ; preds = %482
  %486 = add nuw nsw i32 %445, 16
  %487 = add nuw nsw i32 %454, 2
  %488 = shl i32 %486, %374
  br label %489

489:                                              ; preds = %479, %476, %485, %482
  %490 = phi i32 [ %458, %479 ], [ %458, %476 ], [ %488, %485 ], [ %458, %482 ]
  %491 = phi i32 [ %454, %479 ], [ %454, %476 ], [ %487, %485 ], [ %454, %482 ]
  %492 = load i32, i32* %455, align 4
  %493 = mul nsw i32 %492, %491
  %494 = add nsw i32 %493, %490
  %495 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %389
  %496 = load i8*, i8** %495, align 8
  %497 = sext i32 %494 to i64
  %498 = getelementptr inbounds i8, i8* %496, i64 %497
  store i8* %498, i8** %495, align 8
  %499 = add nuw nsw i64 %389, 1
  %500 = icmp slt i64 %499, %317
  br i1 %500, label %501, label %503

501:                                              ; preds = %489
  %502 = load i8, i8* %108, align 8
  br label %387

503:                                              ; preds = %489, %364
  ret void
}

declare void @_ZN7libgav110PostFilter21VerticalDeblockFilterEii(%"class.libgav1::PostFilter"*, i32, i32) #2

declare void @_ZN7libgav110PostFilter23HorizontalDeblockFilterEii(%"class.libgav1::PostFilter"*, i32, i32) #2

declare void @_ZNK7libgav110PostFilter26ComputeDeblockFilterLevelsEPKaPA4_A8_A2_h(%"class.libgav1::PostFilter"*, i8*, [4 x [8 x [2 x i8]]]*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7libgav110PostFilter19ExtendFrameBoundaryEPhiiliiii(%"class.libgav1::PostFilter"* nocapture readonly, i8* nocapture, i32, i32, i64, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 8
  %11 = load i8, i8* %10, align 8
  %12 = icmp sgt i8 %11, 9
  br i1 %12, label %13, label %263

13:                                               ; preds = %9
  %14 = bitcast i8* %1 to i16*
  %15 = lshr i64 %4, 1
  %16 = sext i32 %5 to i64
  %17 = sub nsw i64 0, %16
  %18 = icmp eq i32 %5, 0
  %19 = sext i32 %2 to i64
  %20 = add nsw i32 %2, -1
  %21 = sext i32 %20 to i64
  %22 = sext i32 %6 to i64
  %23 = icmp eq i32 %6, 0
  %24 = add nsw i64 %16, -16
  %25 = lshr i64 %24, 4
  %26 = add nuw nsw i64 %25, 1
  %27 = add nsw i64 %22, -16
  %28 = lshr i64 %27, 4
  %29 = add nuw nsw i64 %28, 1
  %30 = icmp ult i32 %5, 16
  %31 = and i64 %16, -16
  %32 = and i64 %26, 7
  %33 = icmp ult i64 %24, 112
  %34 = sub nsw i64 %26, %32
  %35 = icmp eq i64 %32, 0
  %36 = icmp eq i64 %31, %16
  %37 = icmp ult i32 %6, 16
  %38 = and i64 %22, -16
  %39 = and i64 %29, 7
  %40 = icmp ult i64 %27, 112
  %41 = sub nsw i64 %29, %39
  %42 = icmp eq i64 %39, 0
  %43 = icmp eq i64 %38, %22
  br label %44

44:                                               ; preds = %195, %13
  %45 = phi i16* [ %14, %13 ], [ %196, %195 ]
  %46 = phi i32 [ %3, %13 ], [ %197, %195 ]
  %47 = getelementptr inbounds i16, i16* %45, i64 %17
  %48 = load i16, i16* %45, align 2
  br i1 %18, label %120, label %49

49:                                               ; preds = %44
  br i1 %30, label %113, label %50

50:                                               ; preds = %49
  %51 = insertelement <8 x i16> undef, i16 %48, i32 0
  %52 = shufflevector <8 x i16> %51, <8 x i16> undef, <8 x i32> zeroinitializer
  %53 = insertelement <8 x i16> undef, i16 %48, i32 0
  %54 = shufflevector <8 x i16> %53, <8 x i16> undef, <8 x i32> zeroinitializer
  br i1 %33, label %100, label %55

55:                                               ; preds = %50, %55
  %56 = phi i64 [ %97, %55 ], [ 0, %50 ]
  %57 = phi i64 [ %98, %55 ], [ %34, %50 ]
  %58 = getelementptr inbounds i16, i16* %47, i64 %56
  %59 = bitcast i16* %58 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %59, align 2
  %60 = getelementptr inbounds i16, i16* %58, i64 8
  %61 = bitcast i16* %60 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %61, align 2
  %62 = or i64 %56, 16
  %63 = getelementptr inbounds i16, i16* %47, i64 %62
  %64 = bitcast i16* %63 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %64, align 2
  %65 = getelementptr inbounds i16, i16* %63, i64 8
  %66 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %66, align 2
  %67 = or i64 %56, 32
  %68 = getelementptr inbounds i16, i16* %47, i64 %67
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %69, align 2
  %70 = getelementptr inbounds i16, i16* %68, i64 8
  %71 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %71, align 2
  %72 = or i64 %56, 48
  %73 = getelementptr inbounds i16, i16* %47, i64 %72
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %74, align 2
  %75 = getelementptr inbounds i16, i16* %73, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %76, align 2
  %77 = or i64 %56, 64
  %78 = getelementptr inbounds i16, i16* %47, i64 %77
  %79 = bitcast i16* %78 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %79, align 2
  %80 = getelementptr inbounds i16, i16* %78, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %81, align 2
  %82 = or i64 %56, 80
  %83 = getelementptr inbounds i16, i16* %47, i64 %82
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %84, align 2
  %85 = getelementptr inbounds i16, i16* %83, i64 8
  %86 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %86, align 2
  %87 = or i64 %56, 96
  %88 = getelementptr inbounds i16, i16* %47, i64 %87
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %89, align 2
  %90 = getelementptr inbounds i16, i16* %88, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %91, align 2
  %92 = or i64 %56, 112
  %93 = getelementptr inbounds i16, i16* %47, i64 %92
  %94 = bitcast i16* %93 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %94, align 2
  %95 = getelementptr inbounds i16, i16* %93, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %96, align 2
  %97 = add i64 %56, 128
  %98 = add i64 %57, -8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %55, !llvm.loop !24

100:                                              ; preds = %55, %50
  %101 = phi i64 [ 0, %50 ], [ %97, %55 ]
  br i1 %35, label %112, label %102

102:                                              ; preds = %100, %102
  %103 = phi i64 [ %109, %102 ], [ %101, %100 ]
  %104 = phi i64 [ %110, %102 ], [ %32, %100 ]
  %105 = getelementptr inbounds i16, i16* %47, i64 %103
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %52, <8 x i16>* %106, align 2
  %107 = getelementptr inbounds i16, i16* %105, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %54, <8 x i16>* %108, align 2
  %109 = add i64 %103, 16
  %110 = add i64 %104, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %102, !llvm.loop !25

112:                                              ; preds = %102, %100
  br i1 %36, label %120, label %113

113:                                              ; preds = %112, %49
  %114 = phi i64 [ 0, %49 ], [ %31, %112 ]
  br label %115

115:                                              ; preds = %113, %115
  %116 = phi i64 [ %118, %115 ], [ %114, %113 ]
  %117 = getelementptr inbounds i16, i16* %47, i64 %116
  store i16 %48, i16* %117, align 2
  %118 = add nuw i64 %116, 1
  %119 = icmp eq i64 %118, %16
  br i1 %119, label %120, label %115, !llvm.loop !26

120:                                              ; preds = %115, %112, %44
  %121 = getelementptr inbounds i16, i16* %45, i64 %19
  %122 = getelementptr inbounds i16, i16* %45, i64 %21
  %123 = load i16, i16* %122, align 2
  br i1 %23, label %195, label %124

124:                                              ; preds = %120
  br i1 %37, label %188, label %125

125:                                              ; preds = %124
  %126 = insertelement <8 x i16> undef, i16 %123, i32 0
  %127 = shufflevector <8 x i16> %126, <8 x i16> undef, <8 x i32> zeroinitializer
  %128 = insertelement <8 x i16> undef, i16 %123, i32 0
  %129 = shufflevector <8 x i16> %128, <8 x i16> undef, <8 x i32> zeroinitializer
  br i1 %40, label %175, label %130

130:                                              ; preds = %125, %130
  %131 = phi i64 [ %172, %130 ], [ 0, %125 ]
  %132 = phi i64 [ %173, %130 ], [ %41, %125 ]
  %133 = getelementptr inbounds i16, i16* %121, i64 %131
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %134, align 2
  %135 = getelementptr inbounds i16, i16* %133, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %136, align 2
  %137 = or i64 %131, 16
  %138 = getelementptr inbounds i16, i16* %121, i64 %137
  %139 = bitcast i16* %138 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %139, align 2
  %140 = getelementptr inbounds i16, i16* %138, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %141, align 2
  %142 = or i64 %131, 32
  %143 = getelementptr inbounds i16, i16* %121, i64 %142
  %144 = bitcast i16* %143 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %144, align 2
  %145 = getelementptr inbounds i16, i16* %143, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %146, align 2
  %147 = or i64 %131, 48
  %148 = getelementptr inbounds i16, i16* %121, i64 %147
  %149 = bitcast i16* %148 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %149, align 2
  %150 = getelementptr inbounds i16, i16* %148, i64 8
  %151 = bitcast i16* %150 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %151, align 2
  %152 = or i64 %131, 64
  %153 = getelementptr inbounds i16, i16* %121, i64 %152
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %154, align 2
  %155 = getelementptr inbounds i16, i16* %153, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %156, align 2
  %157 = or i64 %131, 80
  %158 = getelementptr inbounds i16, i16* %121, i64 %157
  %159 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %159, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %161, align 2
  %162 = or i64 %131, 96
  %163 = getelementptr inbounds i16, i16* %121, i64 %162
  %164 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %164, align 2
  %165 = getelementptr inbounds i16, i16* %163, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %166, align 2
  %167 = or i64 %131, 112
  %168 = getelementptr inbounds i16, i16* %121, i64 %167
  %169 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %169, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %171, align 2
  %172 = add i64 %131, 128
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %130, !llvm.loop !27

175:                                              ; preds = %130, %125
  %176 = phi i64 [ 0, %125 ], [ %172, %130 ]
  br i1 %42, label %187, label %177

177:                                              ; preds = %175, %177
  %178 = phi i64 [ %184, %177 ], [ %176, %175 ]
  %179 = phi i64 [ %185, %177 ], [ %39, %175 ]
  %180 = getelementptr inbounds i16, i16* %121, i64 %178
  %181 = bitcast i16* %180 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %181, align 2
  %182 = getelementptr inbounds i16, i16* %180, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %183, align 2
  %184 = add i64 %178, 16
  %185 = add i64 %179, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %177, !llvm.loop !28

187:                                              ; preds = %177, %175
  br i1 %43, label %195, label %188

188:                                              ; preds = %187, %124
  %189 = phi i64 [ 0, %124 ], [ %38, %187 ]
  br label %190

190:                                              ; preds = %188, %190
  %191 = phi i64 [ %193, %190 ], [ %189, %188 ]
  %192 = getelementptr inbounds i16, i16* %121, i64 %191
  store i16 %123, i16* %192, align 2
  %193 = add nuw i64 %191, 1
  %194 = icmp eq i64 %193, %22
  br i1 %194, label %195, label %190, !llvm.loop !29

195:                                              ; preds = %190, %187, %120
  %196 = getelementptr inbounds i16, i16* %45, i64 %15
  %197 = add nsw i32 %46, -1
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %44

199:                                              ; preds = %195
  %200 = getelementptr inbounds i16, i16* %196, i64 %17
  %201 = icmp sgt i32 %8, 0
  br i1 %201, label %202, label %222

202:                                              ; preds = %199
  %203 = sub nsw i64 0, %15
  %204 = getelementptr inbounds i16, i16* %200, i64 %203
  %205 = bitcast i16* %204 to i8*
  %206 = and i64 %4, -2
  %207 = add i32 %8, -1
  %208 = and i32 %8, 3
  %209 = icmp ult i32 %207, 3
  br i1 %209, label %212, label %210

210:                                              ; preds = %202
  %211 = sub i32 %8, %208
  br label %237

212:                                              ; preds = %237, %202
  %213 = phi i16* [ %200, %202 ], [ %247, %237 ]
  %214 = icmp eq i32 %208, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %212, %215
  %216 = phi i16* [ %219, %215 ], [ %213, %212 ]
  %217 = phi i32 [ %220, %215 ], [ %208, %212 ]
  %218 = bitcast i16* %216 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %218, i8* align 2 %205, i64 %206, i1 false) #6
  %219 = getelementptr inbounds i16, i16* %216, i64 %15
  %220 = add i32 %217, -1
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %215, !llvm.loop !30

222:                                              ; preds = %212, %215, %199
  %223 = getelementptr inbounds i16, i16* %14, i64 %17
  %224 = icmp sgt i32 %7, 0
  br i1 %224, label %225, label %391

225:                                              ; preds = %222
  %226 = sext i32 %7 to i64
  %227 = mul i64 %15, %226
  %228 = sub i64 0, %227
  %229 = getelementptr inbounds i16, i16* %223, i64 %228
  %230 = bitcast i16* %223 to i8*
  %231 = and i64 %4, -2
  %232 = add i32 %7, -1
  %233 = and i32 %7, 3
  %234 = icmp ult i32 %232, 3
  br i1 %234, label %372, label %235

235:                                              ; preds = %225
  %236 = sub i32 %7, %233
  br label %250

237:                                              ; preds = %237, %210
  %238 = phi i16* [ %200, %210 ], [ %247, %237 ]
  %239 = phi i32 [ %211, %210 ], [ %248, %237 ]
  %240 = bitcast i16* %238 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %240, i8* align 2 %205, i64 %206, i1 false) #6
  %241 = getelementptr inbounds i16, i16* %238, i64 %15
  %242 = bitcast i16* %241 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %242, i8* align 2 %205, i64 %206, i1 false) #6
  %243 = getelementptr inbounds i16, i16* %241, i64 %15
  %244 = bitcast i16* %243 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %244, i8* align 2 %205, i64 %206, i1 false) #6
  %245 = getelementptr inbounds i16, i16* %243, i64 %15
  %246 = bitcast i16* %245 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %246, i8* align 2 %205, i64 %206, i1 false) #6
  %247 = getelementptr inbounds i16, i16* %245, i64 %15
  %248 = add i32 %239, -4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %212, label %237

250:                                              ; preds = %250, %235
  %251 = phi i16* [ %229, %235 ], [ %260, %250 ]
  %252 = phi i32 [ %236, %235 ], [ %261, %250 ]
  %253 = bitcast i16* %251 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %253, i8* align 2 %230, i64 %231, i1 false) #6
  %254 = getelementptr inbounds i16, i16* %251, i64 %15
  %255 = bitcast i16* %254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %255, i8* align 2 %230, i64 %231, i1 false) #6
  %256 = getelementptr inbounds i16, i16* %254, i64 %15
  %257 = bitcast i16* %256 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %257, i8* align 2 %230, i64 %231, i1 false) #6
  %258 = getelementptr inbounds i16, i16* %256, i64 %15
  %259 = bitcast i16* %258 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %259, i8* align 2 %230, i64 %231, i1 false) #6
  %260 = getelementptr inbounds i16, i16* %258, i64 %15
  %261 = add i32 %252, -4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %372, label %250

263:                                              ; preds = %9
  %264 = sext i32 %5 to i64
  %265 = sub nsw i64 0, %264
  %266 = sext i32 %2 to i64
  %267 = add nsw i32 %2, -1
  %268 = sext i32 %267 to i64
  %269 = sext i32 %6 to i64
  %270 = add nsw i32 %3, -1
  %271 = and i32 %3, 3
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %286, label %273

273:                                              ; preds = %263, %273
  %274 = phi i8* [ %282, %273 ], [ %1, %263 ]
  %275 = phi i32 [ %283, %273 ], [ %3, %263 ]
  %276 = phi i32 [ %284, %273 ], [ %271, %263 ]
  %277 = getelementptr inbounds i8, i8* %274, i64 %265
  %278 = load i8, i8* %274, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %277, i8 %278, i64 %264, i1 false) #6
  %279 = getelementptr inbounds i8, i8* %274, i64 %266
  %280 = getelementptr inbounds i8, i8* %274, i64 %268
  %281 = load i8, i8* %280, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %279, i8 %281, i64 %269, i1 false) #6
  %282 = getelementptr inbounds i8, i8* %274, i64 %4
  %283 = add nsw i32 %275, -1
  %284 = add i32 %276, -1
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %273, !llvm.loop !31

286:                                              ; preds = %273, %263
  %287 = phi i8* [ undef, %263 ], [ %282, %273 ]
  %288 = phi i8* [ %1, %263 ], [ %282, %273 ]
  %289 = phi i32 [ %3, %263 ], [ %283, %273 ]
  %290 = icmp ult i32 %270, 3
  br i1 %290, label %320, label %291

291:                                              ; preds = %286, %291
  %292 = phi i8* [ %317, %291 ], [ %288, %286 ]
  %293 = phi i32 [ %318, %291 ], [ %289, %286 ]
  %294 = getelementptr inbounds i8, i8* %292, i64 %265
  %295 = load i8, i8* %292, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %294, i8 %295, i64 %264, i1 false) #6
  %296 = getelementptr inbounds i8, i8* %292, i64 %266
  %297 = getelementptr inbounds i8, i8* %292, i64 %268
  %298 = load i8, i8* %297, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %296, i8 %298, i64 %269, i1 false) #6
  %299 = getelementptr inbounds i8, i8* %292, i64 %4
  %300 = getelementptr inbounds i8, i8* %299, i64 %265
  %301 = load i8, i8* %299, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %300, i8 %301, i64 %264, i1 false) #6
  %302 = getelementptr inbounds i8, i8* %299, i64 %266
  %303 = getelementptr inbounds i8, i8* %299, i64 %268
  %304 = load i8, i8* %303, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %302, i8 %304, i64 %269, i1 false) #6
  %305 = getelementptr inbounds i8, i8* %299, i64 %4
  %306 = getelementptr inbounds i8, i8* %305, i64 %265
  %307 = load i8, i8* %305, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %306, i8 %307, i64 %264, i1 false) #6
  %308 = getelementptr inbounds i8, i8* %305, i64 %266
  %309 = getelementptr inbounds i8, i8* %305, i64 %268
  %310 = load i8, i8* %309, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %308, i8 %310, i64 %269, i1 false) #6
  %311 = getelementptr inbounds i8, i8* %305, i64 %4
  %312 = getelementptr inbounds i8, i8* %311, i64 %265
  %313 = load i8, i8* %311, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %312, i8 %313, i64 %264, i1 false) #6
  %314 = getelementptr inbounds i8, i8* %311, i64 %266
  %315 = getelementptr inbounds i8, i8* %311, i64 %268
  %316 = load i8, i8* %315, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %314, i8 %316, i64 %269, i1 false) #6
  %317 = getelementptr inbounds i8, i8* %311, i64 %4
  %318 = add nsw i32 %293, -4
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %291

320:                                              ; preds = %291, %286
  %321 = phi i8* [ %287, %286 ], [ %317, %291 ]
  %322 = getelementptr inbounds i8, i8* %321, i64 %265
  %323 = sub i64 0, %4
  %324 = getelementptr inbounds i8, i8* %322, i64 %323
  %325 = icmp sgt i32 %8, 0
  br i1 %325, label %326, label %341

326:                                              ; preds = %320
  %327 = add i32 %8, -1
  %328 = and i32 %8, 3
  %329 = icmp ult i32 %327, 3
  br i1 %329, label %332, label %330

330:                                              ; preds = %326
  %331 = sub i32 %8, %328
  br label %354

332:                                              ; preds = %354, %326
  %333 = phi i8* [ %322, %326 ], [ %360, %354 ]
  %334 = icmp eq i32 %328, 0
  br i1 %334, label %341, label %335

335:                                              ; preds = %332, %335
  %336 = phi i8* [ %338, %335 ], [ %333, %332 ]
  %337 = phi i32 [ %339, %335 ], [ %328, %332 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %336, i8* align 1 %324, i64 %4, i1 false) #6
  %338 = getelementptr inbounds i8, i8* %336, i64 %4
  %339 = add i32 %337, -1
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %335, !llvm.loop !32

341:                                              ; preds = %332, %335, %320
  %342 = getelementptr inbounds i8, i8* %1, i64 %265
  %343 = icmp sgt i32 %7, 0
  br i1 %343, label %344, label %391

344:                                              ; preds = %341
  %345 = sext i32 %7 to i64
  %346 = mul i64 %345, %4
  %347 = sub i64 0, %346
  %348 = getelementptr inbounds i8, i8* %342, i64 %347
  %349 = add i32 %7, -1
  %350 = and i32 %7, 3
  %351 = icmp ult i32 %349, 3
  br i1 %351, label %382, label %352

352:                                              ; preds = %344
  %353 = sub i32 %7, %350
  br label %363

354:                                              ; preds = %354, %330
  %355 = phi i8* [ %322, %330 ], [ %360, %354 ]
  %356 = phi i32 [ %331, %330 ], [ %361, %354 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %355, i8* align 1 %324, i64 %4, i1 false) #6
  %357 = getelementptr inbounds i8, i8* %355, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %357, i8* align 1 %324, i64 %4, i1 false) #6
  %358 = getelementptr inbounds i8, i8* %357, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %358, i8* align 1 %324, i64 %4, i1 false) #6
  %359 = getelementptr inbounds i8, i8* %358, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %359, i8* align 1 %324, i64 %4, i1 false) #6
  %360 = getelementptr inbounds i8, i8* %359, i64 %4
  %361 = add i32 %356, -4
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %332, label %354

363:                                              ; preds = %363, %352
  %364 = phi i8* [ %348, %352 ], [ %369, %363 ]
  %365 = phi i32 [ %353, %352 ], [ %370, %363 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %364, i8* align 1 %342, i64 %4, i1 false) #6
  %366 = getelementptr inbounds i8, i8* %364, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %366, i8* align 1 %342, i64 %4, i1 false) #6
  %367 = getelementptr inbounds i8, i8* %366, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %367, i8* align 1 %342, i64 %4, i1 false) #6
  %368 = getelementptr inbounds i8, i8* %367, i64 %4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %368, i8* align 1 %342, i64 %4, i1 false) #6
  %369 = getelementptr inbounds i8, i8* %368, i64 %4
  %370 = add i32 %365, -4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %382, label %363

372:                                              ; preds = %250, %225
  %373 = phi i16* [ %229, %225 ], [ %260, %250 ]
  %374 = icmp eq i32 %233, 0
  br i1 %374, label %391, label %375

375:                                              ; preds = %372, %375
  %376 = phi i16* [ %379, %375 ], [ %373, %372 ]
  %377 = phi i32 [ %380, %375 ], [ %233, %372 ]
  %378 = bitcast i16* %376 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %378, i8* align 2 %230, i64 %231, i1 false) #6
  %379 = getelementptr inbounds i16, i16* %376, i64 %15
  %380 = add i32 %377, -1
  %381 = icmp eq i32 %380, 0
  br i1 %381, label %391, label %375, !llvm.loop !33

382:                                              ; preds = %363, %344
  %383 = phi i8* [ %348, %344 ], [ %369, %363 ]
  %384 = icmp eq i32 %350, 0
  br i1 %384, label %391, label %385

385:                                              ; preds = %382, %385
  %386 = phi i8* [ %388, %385 ], [ %383, %382 ]
  %387 = phi i32 [ %389, %385 ], [ %350, %382 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %386, i8* align 1 %342, i64 %4, i1 false) #6
  %388 = getelementptr inbounds i8, i8* %386, i64 %4
  %389 = add i32 %387, -1
  %390 = icmp eq i32 %389, 0
  br i1 %390, label %391, label %385, !llvm.loop !34

391:                                              ; preds = %382, %385, %372, %375, %341, %222
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter30ExtendBordersForReferenceFrameEv(%"class.libgav1::PostFilter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %3 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %2, align 8
  %4 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %3, i64 0, i32 34
  %5 = load i8, i8* %4, align 2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %11 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  br label %12

12:                                               ; preds = %7, %12
  %13 = phi i64 [ 0, %7 ], [ %40, %12 ]
  %14 = load i32, i32* %8, align 4
  %15 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %13
  %16 = load i8, i8* %15, align 1
  %17 = sext i8 %16 to i32
  %18 = add nsw i32 %14, %17
  %19 = ashr i32 %18, %17
  %20 = load i32, i32* %9, align 4
  %21 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %13
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = add nsw i32 %20, %23
  %25 = ashr i32 %24, %23
  %26 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %10, align 8
  %27 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 13, i64 %13
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 11, i64 %13
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 7, i64 %13
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 8, i64 %13
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 9, i64 %13
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %26, i64 0, i32 10, i64 %13
  %39 = load i32, i32* %38, align 4
  tail call void @_ZNK7libgav110PostFilter19ExtendFrameBoundaryEPhiiliiii(%"class.libgav1::PostFilter"* %0, i8* %28, i32 %19, i32 %25, i64 %31, i32 %33, i32 %35, i32 %37, i32 %39)
  %40 = add nuw nsw i64 %13, 1
  %41 = load i8, i8* %11, align 1
  %42 = sext i8 %41 to i64
  %43 = icmp slt i64 %40, %42
  br i1 %43, label %12, label %44

44:                                               ; preds = %12, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter19CopyDeblockedPixelsENS_5PlaneEi(%"class.libgav1::PostFilter"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %5 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %4, align 8
  %6 = zext i8 %1 to i64
  %7 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %5, i64 0, i32 11, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %6
  %11 = load i8*, i8** %10, align 8
  %12 = shl i32 %2, 2
  %13 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %6
  %14 = load i8, i8* %13, align 1
  %15 = sext i8 %14 to i32
  %16 = ashr i32 %12, %15
  %17 = mul nsw i32 %16, %8
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %11, i64 %18
  %20 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %6
  %21 = load i8, i8* %20, align 1
  %22 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 12
  %23 = ashr i32 %2, 2
  %24 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 33
  %25 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %24, align 8
  %26 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %25, i64 0, i32 11, i64 %6
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %25, i64 0, i32 13, i64 %6
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %23 to i64
  %32 = mul nsw i64 %28, %31
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %35 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %34, align 8
  %36 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %35, i64 0, i32 6
  %37 = load i32, i32* %36, align 8
  %38 = shl i32 %37, 2
  %39 = sext i8 %21 to i32
  %40 = add nsw i32 %38, %39
  %41 = ashr i32 %40, %39
  %42 = load i32, i32* %22, align 8
  %43 = shl i32 %41, %42
  %44 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %35, i64 0, i32 5
  %45 = load i32, i32* %44, align 4
  %46 = add nsw i32 %45, %15
  %47 = ashr i32 %46, %15
  %48 = sext i8 %14 to i64
  %49 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN7libgav112_GLOBAL__N_126kLoopRestorationBorderRowsE, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %16
  %52 = sext i32 %43 to i64
  %53 = icmp slt i32 %51, %47
  br i1 %53, label %54, label %66

54:                                               ; preds = %3
  %55 = sext i32 %50 to i64
  %56 = mul nsw i64 %55, %9
  %57 = getelementptr inbounds i8, i8* %19, i64 %56
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %57, i64 %52, i1 false)
  %58 = getelementptr inbounds i8, i8* %33, i64 %28
  %59 = add nsw i32 %50, 1
  %60 = add nsw i32 %51, 1
  %61 = icmp slt i32 %60, %47
  br i1 %61, label %62, label %67

62:                                               ; preds = %54
  %63 = sext i32 %59 to i64
  %64 = mul nsw i64 %63, %9
  %65 = add nsw i32 %50, 2
  br label %67

66:                                               ; preds = %3, %94, %92, %79
  ret void

67:                                               ; preds = %54, %62
  %68 = phi i32 [ %65, %62 ], [ %59, %54 ]
  %69 = phi i64 [ %64, %62 ], [ %56, %54 ]
  %70 = phi i32 [ %59, %62 ], [ %50, %54 ]
  %71 = getelementptr inbounds i8, i8* %19, i64 %69
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %71, i64 %52, i1 false)
  %72 = getelementptr inbounds i8, i8* %58, i64 %28
  %73 = add nsw i32 %51, 2
  %74 = icmp slt i32 %73, %47
  br i1 %74, label %75, label %79

75:                                               ; preds = %67
  %76 = sext i32 %68 to i64
  %77 = mul nsw i64 %76, %9
  %78 = add nsw i32 %68, 1
  br label %81

79:                                               ; preds = %67
  %80 = icmp eq i32 %70, -1
  br i1 %80, label %66, label %81

81:                                               ; preds = %75, %79
  %82 = phi i32 [ %78, %75 ], [ %68, %79 ]
  %83 = phi i64 [ %77, %75 ], [ %69, %79 ]
  %84 = phi i32 [ %68, %75 ], [ %70, %79 ]
  %85 = getelementptr inbounds i8, i8* %19, i64 %83
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* align 1 %85, i64 %52, i1 false)
  %86 = getelementptr inbounds i8, i8* %72, i64 %28
  %87 = add nsw i32 %51, 3
  %88 = icmp slt i32 %87, %47
  br i1 %88, label %89, label %92

89:                                               ; preds = %81
  %90 = sext i32 %82 to i64
  %91 = mul nsw i64 %90, %9
  br label %94

92:                                               ; preds = %81
  %93 = icmp eq i32 %84, -1
  br i1 %93, label %66, label %94

94:                                               ; preds = %89, %92
  %95 = phi i64 [ %91, %89 ], [ %83, %92 ]
  %96 = getelementptr inbounds i8, i8* %19, i64 %95
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %86, i8* align 1 %96, i64 %52, i1 false)
  br label %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter30CopyBordersForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %1, 0
  %6 = select i1 %5, i32 0, i32 8
  br i1 %3, label %7, label %39

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %9 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %8, align 8
  %10 = icmp eq %"class.libgav1::ThreadPool"* %9, null
  br i1 %10, label %11, label %39

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %13 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %12, align 8
  %14 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %15 = load i8, i8* %14, align 8
  %16 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %13, i64 0, i32 55, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %35

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %13, i64 0, i32 55, i32 2, i64 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %13, i64 0, i32 55, i32 3, i64 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %13, i64 0, i32 55, i32 4, i64 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %13, i64 0, i32 55, i32 5, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %11, %19, %23, %27, %31
  %36 = and i8 %15, 2
  %37 = xor i8 %36, 2
  %38 = zext i8 %37 to i32
  br label %39

39:                                               ; preds = %35, %31, %7, %4
  %40 = phi i32 [ 0, %7 ], [ 0, %4 ], [ 2, %31 ], [ %38, %35 ]
  %41 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %42 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %43 = shl i32 %1, 2
  %44 = sub nsw i32 %43, %6
  %45 = shl i32 %2, 2
  %46 = select i1 %5, i32 -8, i32 0
  %47 = add i32 %45, %46
  %48 = xor i1 %3, true
  %49 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 37
  %50 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %51 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  br label %52

52:                                               ; preds = %112, %39
  %53 = phi i64 [ %119, %112 ], [ 0, %39 ]
  %54 = load i32, i32* %41, align 4
  %55 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %53
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = add nsw i32 %54, %57
  %59 = ashr i32 %58, %57
  %60 = load i32, i32* %42, align 4
  %61 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %53
  %62 = load i8, i8* %61, align 1
  %63 = sext i8 %62 to i32
  %64 = add nsw i32 %60, %63
  %65 = ashr i32 %64, %63
  %66 = ashr i32 %44, %63
  %67 = icmp sgt i32 %65, %66
  br i1 %67, label %68, label %123

68:                                               ; preds = %52
  %69 = add nsw i32 %47, %63
  %70 = ashr i32 %69, %63
  %71 = add nsw i32 %70, %40
  %72 = sub nsw i32 %65, %66
  %73 = icmp slt i32 %72, %71
  %74 = select i1 %73, i32 %72, i32 %71
  %75 = icmp eq i64 %53, 0
  %76 = and i1 %75, %48
  %77 = add nsw i32 %74, %66
  br i1 %76, label %78, label %79

78:                                               ; preds = %68
  store i32 %77, i32* %49, align 8
  br label %79

79:                                               ; preds = %68, %78
  %80 = icmp eq i32 %77, %65
  %81 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %50, align 8
  %82 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 11, i64 %53
  %83 = load i32, i32* %82, align 4
  br i1 %3, label %84, label %93

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %53
  %86 = load i8*, i8** %85, align 8
  %87 = mul nsw i32 %83, %66
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = icmp eq i32 %66, 0
  %91 = select i1 %90, i32 2, i32 0
  %92 = select i1 %80, i32 2, i32 0
  br label %112

93:                                               ; preds = %79
  %94 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 13, i64 %53
  %95 = load i8*, i8** %94, align 8
  %96 = mul nsw i32 %83, %66
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 7, i64 %53
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 8, i64 %53
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %66, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %93
  %105 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 9, i64 %53
  %106 = load i32, i32* %105, align 4
  br label %107

107:                                              ; preds = %93, %104
  %108 = phi i32 [ %106, %104 ], [ 0, %93 ]
  br i1 %80, label %109, label %112

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %81, i64 0, i32 10, i64 %53
  %111 = load i32, i32* %110, align 4
  br label %112

112:                                              ; preds = %107, %84, %109
  %113 = phi i32 [ %108, %109 ], [ %108, %107 ], [ %91, %84 ]
  %114 = phi i32 [ %100, %109 ], [ %100, %107 ], [ 4, %84 ]
  %115 = phi i8* [ %98, %109 ], [ %98, %107 ], [ %89, %84 ]
  %116 = phi i32 [ %102, %109 ], [ %102, %107 ], [ 4, %84 ]
  %117 = phi i32 [ %111, %109 ], [ 0, %107 ], [ %92, %84 ]
  %118 = sext i32 %83 to i64
  tail call void @_ZNK7libgav110PostFilter19ExtendFrameBoundaryEPhiiliiii(%"class.libgav1::PostFilter"* %0, i8* %115, i32 %59, i32 %74, i64 %118, i32 %114, i32 %116, i32 %113, i32 %117)
  %119 = add nuw nsw i64 %53, 1
  %120 = load i8, i8* %51, align 1
  %121 = sext i8 %120 to i64
  %122 = icmp slt i64 %119, %121
  br i1 %122, label %52, label %123

123:                                              ; preds = %52, %112
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter26SetupLoopRestorationBorderEi(%"class.libgav1::PostFilter"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %4 = ashr i32 %1, 2
  %5 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 12
  %7 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %8 = shl i32 %1, 2
  %9 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 33
  %11 = sext i32 %4 to i64
  %12 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 8
  %13 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  br label %14

14:                                               ; preds = %97, %2
  %15 = phi i64 [ %98, %97 ], [ 0, %2 ]
  %16 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %3, align 8
  %17 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %16, i64 0, i32 0, i64 %15
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %97, label %20

20:                                               ; preds = %14
  %21 = load i32, i32* %5, align 4
  %22 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %15
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = add nsw i32 %21, %24
  %26 = ashr i32 %25, %24
  %27 = load i32, i32* %6, align 8
  %28 = shl i32 %26, %27
  %29 = load i32, i32* %7, align 4
  %30 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %15
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = add nsw i32 %29, %32
  %34 = ashr i32 %33, %32
  %35 = sext i8 %31 to i64
  %36 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN7libgav112_GLOBAL__N_126kLoopRestorationBorderRowsE, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %8, %32
  %39 = add nsw i32 %38, %37
  %40 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %9, align 8
  %41 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %40, i64 0, i32 11, i64 %15
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 30, i64 %15
  %45 = load i8*, i8** %44, align 8
  %46 = mul nsw i32 %38, %42
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = sext i32 %37 to i64
  %50 = mul nsw i64 %43, %49
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %10, align 8
  %53 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %52, i64 0, i32 11, i64 %15
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %52, i64 0, i32 13, i64 %15
  %57 = load i8*, i8** %56, align 8
  %58 = mul nsw i64 %55, %11
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = sext i32 %28 to i64
  %61 = sext i32 %26 to i64
  %62 = add nsw i32 %26, -1
  %63 = sext i32 %62 to i64
  %64 = add nsw i32 %34, -1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %59, i8* align 1 %51, i64 %60, i1 false)
  %65 = load i8, i8* %12, align 8
  %66 = icmp sgt i8 %65, 9
  br i1 %66, label %67, label %84

67:                                               ; preds = %20
  %68 = bitcast i8* %59 to i16*
  %69 = getelementptr inbounds i8, i8* %59, i64 -8
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %68, align 2
  store i16 %71, i16* %70, align 2
  %72 = getelementptr inbounds i8, i8* %69, i64 2
  %73 = bitcast i8* %72 to i16*
  store i16 %71, i16* %73, align 2
  %74 = getelementptr inbounds i8, i8* %69, i64 4
  %75 = bitcast i8* %74 to i16*
  store i16 %71, i16* %75, align 2
  %76 = getelementptr inbounds i8, i8* %69, i64 6
  %77 = bitcast i8* %76 to i16*
  store i16 %71, i16* %77, align 2
  %78 = getelementptr inbounds i16, i16* %68, i64 %61
  %79 = getelementptr inbounds i16, i16* %68, i64 %63
  %80 = load i16, i16* %79, align 2
  store i16 %80, i16* %78, align 2
  %81 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 %80, i16* %81, align 2
  %82 = getelementptr inbounds i16, i16* %78, i64 2
  store i16 %80, i16* %82, align 2
  %83 = getelementptr inbounds i16, i16* %78, i64 3
  store i16 %80, i16* %83, align 2
  br label %90

84:                                               ; preds = %20
  %85 = getelementptr inbounds i8, i8* %59, i64 -4
  %86 = load i8, i8* %59, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 %86, i64 4, i1 false) #6
  %87 = getelementptr inbounds i8, i8* %59, i64 %61
  %88 = getelementptr inbounds i8, i8* %59, i64 %63
  %89 = load i8, i8* %88, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %87, i8 %89, i64 4, i1 false) #6
  br label %90

90:                                               ; preds = %67, %84
  %91 = icmp slt i32 %39, %64
  %92 = getelementptr inbounds i8, i8* %51, i64 %43
  %93 = select i1 %91, i8* %92, i8* %51
  %94 = getelementptr inbounds i8, i8* %59, i64 %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %94, i8* align 1 %93, i64 %60, i1 false)
  %95 = load i8, i8* %12, align 8
  %96 = icmp sgt i8 %95, 9
  br i1 %96, label %109, label %103

97:                                               ; preds = %165, %171, %14
  %98 = add nuw nsw i64 %15, 1
  %99 = load i8, i8* %13, align 1
  %100 = sext i8 %99 to i64
  %101 = icmp slt i64 %98, %100
  br i1 %101, label %14, label %102

102:                                              ; preds = %97
  ret void

103:                                              ; preds = %90
  %104 = getelementptr inbounds i8, i8* %94, i64 -4
  %105 = load i8, i8* %94, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %104, i8 %105, i64 4, i1 false) #6
  %106 = getelementptr inbounds i8, i8* %94, i64 %61
  %107 = getelementptr inbounds i8, i8* %94, i64 %63
  %108 = load i8, i8* %107, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 %108, i64 4, i1 false) #6
  br label %126

109:                                              ; preds = %90
  %110 = bitcast i8* %94 to i16*
  %111 = getelementptr inbounds i8, i8* %94, i64 -8
  %112 = bitcast i8* %111 to i16*
  %113 = load i16, i16* %110, align 2
  store i16 %113, i16* %112, align 2
  %114 = getelementptr inbounds i8, i8* %111, i64 2
  %115 = bitcast i8* %114 to i16*
  store i16 %113, i16* %115, align 2
  %116 = getelementptr inbounds i8, i8* %111, i64 4
  %117 = bitcast i8* %116 to i16*
  store i16 %113, i16* %117, align 2
  %118 = getelementptr inbounds i8, i8* %111, i64 6
  %119 = bitcast i8* %118 to i16*
  store i16 %113, i16* %119, align 2
  %120 = getelementptr inbounds i16, i16* %110, i64 %61
  %121 = getelementptr inbounds i16, i16* %110, i64 %63
  %122 = load i16, i16* %121, align 2
  store i16 %122, i16* %120, align 2
  %123 = getelementptr inbounds i16, i16* %120, i64 1
  store i16 %122, i16* %123, align 2
  %124 = getelementptr inbounds i16, i16* %120, i64 2
  store i16 %122, i16* %124, align 2
  %125 = getelementptr inbounds i16, i16* %120, i64 3
  store i16 %122, i16* %125, align 2
  br label %126

126:                                              ; preds = %109, %103
  %127 = add nsw i32 %39, 1
  %128 = icmp slt i32 %127, %64
  %129 = getelementptr inbounds i8, i8* %93, i64 %43
  %130 = select i1 %128, i8* %129, i8* %93
  %131 = getelementptr inbounds i8, i8* %94, i64 %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %131, i8* align 1 %130, i64 %60, i1 false)
  %132 = load i8, i8* %12, align 8
  %133 = icmp sgt i8 %132, 9
  br i1 %133, label %140, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds i8, i8* %131, i64 -4
  %136 = load i8, i8* %131, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %135, i8 %136, i64 4, i1 false) #6
  %137 = getelementptr inbounds i8, i8* %131, i64 %61
  %138 = getelementptr inbounds i8, i8* %131, i64 %63
  %139 = load i8, i8* %138, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 %139, i64 4, i1 false) #6
  br label %157

140:                                              ; preds = %126
  %141 = bitcast i8* %131 to i16*
  %142 = getelementptr inbounds i8, i8* %131, i64 -8
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %143, align 2
  %145 = getelementptr inbounds i8, i8* %142, i64 2
  %146 = bitcast i8* %145 to i16*
  store i16 %144, i16* %146, align 2
  %147 = getelementptr inbounds i8, i8* %142, i64 4
  %148 = bitcast i8* %147 to i16*
  store i16 %144, i16* %148, align 2
  %149 = getelementptr inbounds i8, i8* %142, i64 6
  %150 = bitcast i8* %149 to i16*
  store i16 %144, i16* %150, align 2
  %151 = getelementptr inbounds i16, i16* %141, i64 %61
  %152 = getelementptr inbounds i16, i16* %141, i64 %63
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %151, i64 1
  store i16 %153, i16* %154, align 2
  %155 = getelementptr inbounds i16, i16* %151, i64 2
  store i16 %153, i16* %155, align 2
  %156 = getelementptr inbounds i16, i16* %151, i64 3
  store i16 %153, i16* %156, align 2
  br label %157

157:                                              ; preds = %140, %134
  %158 = add nsw i32 %39, 2
  %159 = icmp slt i32 %158, %64
  %160 = getelementptr inbounds i8, i8* %130, i64 %43
  %161 = select i1 %159, i8* %160, i8* %130
  %162 = getelementptr inbounds i8, i8* %131, i64 %55
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %162, i8* align 1 %161, i64 %60, i1 false)
  %163 = load i8, i8* %12, align 8
  %164 = icmp sgt i8 %163, 9
  br i1 %164, label %171, label %165

165:                                              ; preds = %157
  %166 = getelementptr inbounds i8, i8* %162, i64 -4
  %167 = load i8, i8* %162, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %166, i8 %167, i64 4, i1 false) #6
  %168 = getelementptr inbounds i8, i8* %162, i64 %61
  %169 = getelementptr inbounds i8, i8* %162, i64 %63
  %170 = load i8, i8* %169, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %168, i8 %170, i64 4, i1 false) #6
  br label %97

171:                                              ; preds = %157
  %172 = bitcast i8* %162 to i16*
  %173 = getelementptr inbounds i8, i8* %162, i64 -8
  %174 = bitcast i8* %173 to i16*
  %175 = load i16, i16* %172, align 2
  store i16 %175, i16* %174, align 2
  %176 = getelementptr inbounds i8, i8* %173, i64 2
  %177 = bitcast i8* %176 to i16*
  store i16 %175, i16* %177, align 2
  %178 = getelementptr inbounds i8, i8* %173, i64 4
  %179 = bitcast i8* %178 to i16*
  store i16 %175, i16* %179, align 2
  %180 = getelementptr inbounds i8, i8* %173, i64 6
  %181 = bitcast i8* %180 to i16*
  store i16 %175, i16* %181, align 2
  %182 = getelementptr inbounds i16, i16* %172, i64 %61
  %183 = getelementptr inbounds i16, i16* %172, i64 %63
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %182, i64 1
  store i16 %184, i16* %185, align 2
  %186 = getelementptr inbounds i16, i16* %182, i64 2
  store i16 %184, i16* %186, align 2
  %187 = getelementptr inbounds i16, i16* %182, i64 3
  store i16 %184, i16* %187, align 2
  br label %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter26SetupLoopRestorationBorderEii(%"class.libgav1::PostFilter"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::array.144", align 8
  %5 = alloca %"struct.std::__1::array.144", align 8
  %6 = alloca %"struct.std::__1::array.145", align 4
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %28

8:                                                ; preds = %3
  %9 = bitcast %"struct.std::__1::array.144"* %4 to i8*
  %10 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %4, i64 0, i32 0, i64 0
  %11 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %4, i64 0, i32 0, i64 1
  %12 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %4, i64 0, i32 0, i64 2
  %13 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 33
  %14 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %16 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %17 = bitcast %"struct.std::__1::array.144"* %5 to i8*
  %18 = bitcast %"struct.std::__1::array.145"* %6 to i8*
  %19 = getelementptr inbounds %"struct.std::__1::array.145", %"struct.std::__1::array.145"* %6, i64 0, i32 0, i64 0
  %20 = getelementptr inbounds %"struct.std::__1::array.145", %"struct.std::__1::array.145"* %6, i64 0, i32 0, i64 1
  %21 = getelementptr inbounds %"struct.std::__1::array.145", %"struct.std::__1::array.145"* %6, i64 0, i32 0, i64 2
  %22 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %23 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  %24 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 12
  %25 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %26 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 8
  %27 = bitcast %"struct.std::__1::array.144"* %5 to i8*
  br label %29

28:                                               ; preds = %232, %3
  ret void

29:                                               ; preds = %8, %232
  %30 = phi i32 [ 0, %8 ], [ %233, %232 ]
  %31 = add nsw i32 %30, %1
  %32 = ashr i32 %31, 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6
  %33 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %34 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 13, i64 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 11, i64 0
  %37 = load i32, i32* %36, align 4
  %38 = mul nsw i32 %37, %32
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %35, i64 %39
  store i8* %40, i8** %10, align 8
  %41 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 13, i64 1
  %42 = load i8*, i8** %41, align 8
  %43 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 11, i64 1
  %44 = load i32, i32* %43, align 4
  %45 = mul nsw i32 %44, %32
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %42, i64 %46
  store i8* %47, i8** %11, align 8
  %48 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 13, i64 2
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %33, i64 0, i32 11, i64 2
  %51 = load i32, i32* %50, align 4
  %52 = mul nsw i32 %51, %32
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %49, i64 %53
  store i8* %54, i8** %12, align 8
  %55 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %14, align 8
  %56 = load i8, i8* %15, align 8
  %57 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %55, i64 0, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %55, i64 0, i32 10
  %60 = load i32, i32* %59, align 8
  %61 = icmp ne i32 %58, %60
  %62 = and i8 %56, 4
  %63 = icmp ne i8 %62, 0
  %64 = and i1 %63, %61
  br i1 %64, label %65, label %166

65:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %18) #6
  store i32 -1431655766, i32* %19, align 4
  store i32 -1431655766, i32* %20, align 4
  store i32 -1431655766, i32* %21, align 4
  %66 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %55, i64 0, i32 5
  %67 = shl i32 %31, 2
  %68 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %22, align 8
  br label %69

69:                                               ; preds = %103, %65
  %70 = phi i64 [ %106, %103 ], [ 0, %65 ]
  %71 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %68, i64 0, i32 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %103, label %74

74:                                               ; preds = %69
  %75 = load i32, i32* %66, align 4
  %76 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %70
  %77 = load i8, i8* %76, align 1
  %78 = sext i8 %77 to i32
  %79 = add nsw i32 %75, %78
  %80 = ashr i32 %79, %78
  %81 = sext i8 %77 to i64
  %82 = getelementptr inbounds [2 x i32], [2 x i32]* @_ZN7libgav112_GLOBAL__N_126kLoopRestorationBorderRowsE, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = ashr i32 %67, %78
  %85 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 28, i64 %70
  %86 = load i8*, i8** %85, align 8
  %87 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %23, align 8
  %88 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %87, i64 0, i32 11, i64 %70
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %84, %89
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %86, i64 %91
  %93 = mul nsw i32 %89, %83
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %5, i64 0, i32 0, i64 %70
  store i8* %95, i8** %96, align 8
  %97 = add i32 %84, %83
  %98 = sub i32 %80, %97
  %99 = icmp slt i32 %98, 4
  %100 = select i1 %99, i32 %98, i32 4
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  br label %103

103:                                              ; preds = %69, %74
  %104 = phi i32 [ %102, %74 ], [ 0, %69 ]
  %105 = getelementptr inbounds %"struct.std::__1::array.145", %"struct.std::__1::array.145"* %6, i64 0, i32 0, i64 %70
  store i32 %104, i32* %105, align 4
  %106 = add nuw nsw i64 %70, 1
  %107 = load i8, i8* %16, align 1
  %108 = sext i8 %107 to i64
  %109 = icmp slt i64 %106, %108
  br i1 %109, label %69, label %110

110:                                              ; preds = %103
  call void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::array.144"* nonnull dereferenceable(24) %5, %"struct.std::__1::array.145"* nonnull dereferenceable(12) %6, i32 -1, %"struct.std::__1::array.144"* nonnull dereferenceable(24) %4, i1 zeroext true) #6
  br label %111

111:                                              ; preds = %160, %110
  %112 = phi i64 [ %161, %160 ], [ 0, %110 ]
  %113 = getelementptr inbounds %"struct.std::__1::array.145", %"struct.std::__1::array.145"* %6, i64 0, i32 0, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  %116 = icmp sgt i32 %114, 3
  %117 = or i1 %115, %116
  br i1 %117, label %160, label %118

118:                                              ; preds = %111
  %119 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %120 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %119, i64 0, i32 11, i64 %112
  %121 = load i32, i32* %120, align 4
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %4, i64 0, i32 0, i64 %112
  %124 = load i8*, i8** %123, align 8
  %125 = sext i32 %114 to i64
  %126 = mul nsw i64 %122, %125
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  %128 = sub nsw i64 0, %122
  %129 = getelementptr inbounds i8, i8* %127, i64 %128
  %130 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 19, i64 %112, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* %24, align 8
  %133 = shl i32 %131, %132
  %134 = sext i32 %133 to i64
  %135 = sub i32 0, %114
  %136 = sub i32 3, %114
  %137 = and i32 %135, 3
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %118, %139
  %140 = phi i32 [ %144, %139 ], [ %114, %118 ]
  %141 = phi i8* [ %143, %139 ], [ %127, %118 ]
  %142 = phi i32 [ %145, %139 ], [ %137, %118 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 1 %129, i64 %134, i1 false)
  %143 = getelementptr inbounds i8, i8* %141, i64 %122
  %144 = add nsw i32 %140, 1
  %145 = add i32 %142, -1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %139, !llvm.loop !35

147:                                              ; preds = %139, %118
  %148 = phi i32 [ %114, %118 ], [ %144, %139 ]
  %149 = phi i8* [ %127, %118 ], [ %143, %139 ]
  %150 = icmp ult i32 %136, 3
  br i1 %150, label %160, label %151

151:                                              ; preds = %147, %151
  %152 = phi i32 [ %158, %151 ], [ %148, %147 ]
  %153 = phi i8* [ %157, %151 ], [ %149, %147 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %129, i64 %134, i1 false)
  %154 = getelementptr inbounds i8, i8* %153, i64 %122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %129, i64 %134, i1 false)
  %155 = getelementptr inbounds i8, i8* %154, i64 %122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %155, i8* align 1 %129, i64 %134, i1 false)
  %156 = getelementptr inbounds i8, i8* %155, i64 %122
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %156, i8* align 1 %129, i64 %134, i1 false)
  %157 = getelementptr inbounds i8, i8* %156, i64 %122
  %158 = add nsw i32 %152, 4
  %159 = icmp eq i32 %152, 0
  br i1 %159, label %160, label %151

160:                                              ; preds = %147, %151, %111
  %161 = add nuw nsw i64 %112, 1
  %162 = load i8, i8* %16, align 1
  %163 = sext i8 %162 to i64
  %164 = icmp slt i64 %161, %163
  br i1 %164, label %111, label %165

165:                                              ; preds = %160
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %18) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #6
  br label %173

166:                                              ; preds = %29, %166
  %167 = phi i32 [ %169, %166 ], [ 0, %29 ]
  %168 = trunc i32 %167 to i8
  call void @_ZN7libgav110PostFilter19CopyDeblockedPixelsENS_5PlaneEi(%"class.libgav1::PostFilter"* %0, i8 zeroext %168, i32 %31)
  %169 = add nuw nsw i32 %167, 1
  %170 = load i8, i8* %16, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp slt i32 %169, %171
  br i1 %172, label %166, label %173

173:                                              ; preds = %166, %165
  %174 = phi i8 [ %162, %165 ], [ %170, %166 ]
  br label %175

175:                                              ; preds = %173, %227
  %176 = phi i8 [ %228, %227 ], [ %174, %173 ]
  %177 = phi i64 [ %229, %227 ], [ 0, %173 ]
  %178 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %22, align 8
  %179 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %178, i64 0, i32 0, i64 %177
  %180 = load i8, i8* %179, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %227, label %182

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"struct.std::__1::array.144", %"struct.std::__1::array.144"* %4, i64 0, i32 0, i64 %177
  %184 = load i8*, i8** %183, align 8
  %185 = load i32, i32* %25, align 4
  %186 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %177
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i32
  %189 = add nsw i32 %185, %188
  %190 = ashr i32 %189, %188
  %191 = sext i32 %190 to i64
  %192 = add nsw i32 %190, -1
  %193 = sext i32 %192 to i64
  %194 = load i8, i8* %26, align 8
  %195 = icmp sgt i8 %194, 9
  br i1 %195, label %196, label %213

196:                                              ; preds = %182
  %197 = bitcast i8* %184 to i16*
  %198 = getelementptr inbounds i8, i8* %184, i64 -8
  %199 = bitcast i8* %198 to i16*
  %200 = load i16, i16* %197, align 2
  store i16 %200, i16* %199, align 2
  %201 = getelementptr inbounds i8, i8* %184, i64 -6
  %202 = bitcast i8* %201 to i16*
  store i16 %200, i16* %202, align 2
  %203 = getelementptr inbounds i8, i8* %184, i64 -4
  %204 = bitcast i8* %203 to i16*
  store i16 %200, i16* %204, align 2
  %205 = getelementptr inbounds i8, i8* %184, i64 -2
  %206 = bitcast i8* %205 to i16*
  store i16 %200, i16* %206, align 2
  %207 = getelementptr inbounds i16, i16* %197, i64 %191
  %208 = getelementptr inbounds i16, i16* %197, i64 %193
  %209 = load i16, i16* %208, align 2
  store i16 %209, i16* %207, align 2
  %210 = getelementptr inbounds i16, i16* %207, i64 1
  store i16 %209, i16* %210, align 2
  %211 = getelementptr inbounds i16, i16* %207, i64 2
  store i16 %209, i16* %211, align 2
  %212 = getelementptr inbounds i16, i16* %207, i64 3
  store i16 %209, i16* %212, align 2
  br label %219

213:                                              ; preds = %182
  %214 = getelementptr inbounds i8, i8* %184, i64 -4
  %215 = load i8, i8* %184, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %214, i8 %215, i64 4, i1 false) #6
  %216 = getelementptr inbounds i8, i8* %184, i64 %191
  %217 = getelementptr inbounds i8, i8* %184, i64 %193
  %218 = load i8, i8* %217, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %216, i8 %218, i64 4, i1 false) #6
  br label %219

219:                                              ; preds = %196, %213
  %220 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %221 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %220, i64 0, i32 11, i64 %177
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8, i8* %184, i64 %223
  %225 = load i8, i8* %26, align 8
  %226 = icmp sgt i8 %225, 9
  br i1 %226, label %241, label %235

227:                                              ; preds = %320, %175
  %228 = phi i8 [ %321, %320 ], [ %176, %175 ]
  %229 = add nuw nsw i64 %177, 1
  %230 = sext i8 %228 to i64
  %231 = icmp slt i64 %229, %230
  br i1 %231, label %175, label %232

232:                                              ; preds = %227
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6
  %233 = add nuw nsw i32 %30, 16
  %234 = icmp slt i32 %233, %2
  br i1 %234, label %29, label %28

235:                                              ; preds = %219
  %236 = getelementptr inbounds i8, i8* %224, i64 -4
  %237 = load i8, i8* %224, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %236, i8 %237, i64 4, i1 false) #6
  %238 = getelementptr inbounds i8, i8* %224, i64 %191
  %239 = getelementptr inbounds i8, i8* %224, i64 %193
  %240 = load i8, i8* %239, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %238, i8 %240, i64 4, i1 false) #6
  br label %258

241:                                              ; preds = %219
  %242 = bitcast i8* %224 to i16*
  %243 = getelementptr inbounds i8, i8* %224, i64 -8
  %244 = bitcast i8* %243 to i16*
  %245 = load i16, i16* %242, align 2
  store i16 %245, i16* %244, align 2
  %246 = getelementptr inbounds i8, i8* %243, i64 2
  %247 = bitcast i8* %246 to i16*
  store i16 %245, i16* %247, align 2
  %248 = getelementptr inbounds i8, i8* %243, i64 4
  %249 = bitcast i8* %248 to i16*
  store i16 %245, i16* %249, align 2
  %250 = getelementptr inbounds i8, i8* %243, i64 6
  %251 = bitcast i8* %250 to i16*
  store i16 %245, i16* %251, align 2
  %252 = getelementptr inbounds i16, i16* %242, i64 %191
  %253 = getelementptr inbounds i16, i16* %242, i64 %193
  %254 = load i16, i16* %253, align 2
  store i16 %254, i16* %252, align 2
  %255 = getelementptr inbounds i16, i16* %252, i64 1
  store i16 %254, i16* %255, align 2
  %256 = getelementptr inbounds i16, i16* %252, i64 2
  store i16 %254, i16* %256, align 2
  %257 = getelementptr inbounds i16, i16* %252, i64 3
  store i16 %254, i16* %257, align 2
  br label %258

258:                                              ; preds = %241, %235
  %259 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %260 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %259, i64 0, i32 11, i64 %177
  %261 = load i32, i32* %260, align 4
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* %224, i64 %262
  %264 = load i8, i8* %26, align 8
  %265 = icmp sgt i8 %264, 9
  br i1 %265, label %272, label %266

266:                                              ; preds = %258
  %267 = getelementptr inbounds i8, i8* %263, i64 -4
  %268 = load i8, i8* %263, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %267, i8 %268, i64 4, i1 false) #6
  %269 = getelementptr inbounds i8, i8* %263, i64 %191
  %270 = getelementptr inbounds i8, i8* %263, i64 %193
  %271 = load i8, i8* %270, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %269, i8 %271, i64 4, i1 false) #6
  br label %289

272:                                              ; preds = %258
  %273 = bitcast i8* %263 to i16*
  %274 = getelementptr inbounds i8, i8* %263, i64 -8
  %275 = bitcast i8* %274 to i16*
  %276 = load i16, i16* %273, align 2
  store i16 %276, i16* %275, align 2
  %277 = getelementptr inbounds i8, i8* %274, i64 2
  %278 = bitcast i8* %277 to i16*
  store i16 %276, i16* %278, align 2
  %279 = getelementptr inbounds i8, i8* %274, i64 4
  %280 = bitcast i8* %279 to i16*
  store i16 %276, i16* %280, align 2
  %281 = getelementptr inbounds i8, i8* %274, i64 6
  %282 = bitcast i8* %281 to i16*
  store i16 %276, i16* %282, align 2
  %283 = getelementptr inbounds i16, i16* %273, i64 %191
  %284 = getelementptr inbounds i16, i16* %273, i64 %193
  %285 = load i16, i16* %284, align 2
  store i16 %285, i16* %283, align 2
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  store i16 %285, i16* %286, align 2
  %287 = getelementptr inbounds i16, i16* %283, i64 2
  store i16 %285, i16* %287, align 2
  %288 = getelementptr inbounds i16, i16* %283, i64 3
  store i16 %285, i16* %288, align 2
  br label %289

289:                                              ; preds = %272, %266
  %290 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %13, align 8
  %291 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %290, i64 0, i32 11, i64 %177
  %292 = load i32, i32* %291, align 4
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i8, i8* %263, i64 %293
  %295 = load i8, i8* %26, align 8
  %296 = icmp sgt i8 %295, 9
  br i1 %296, label %303, label %297

297:                                              ; preds = %289
  %298 = getelementptr inbounds i8, i8* %294, i64 -4
  %299 = load i8, i8* %294, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %298, i8 %299, i64 4, i1 false) #6
  %300 = getelementptr inbounds i8, i8* %294, i64 %191
  %301 = getelementptr inbounds i8, i8* %294, i64 %193
  %302 = load i8, i8* %301, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %300, i8 %302, i64 4, i1 false) #6
  br label %320

303:                                              ; preds = %289
  %304 = bitcast i8* %294 to i16*
  %305 = getelementptr inbounds i8, i8* %294, i64 -8
  %306 = bitcast i8* %305 to i16*
  %307 = load i16, i16* %304, align 2
  store i16 %307, i16* %306, align 2
  %308 = getelementptr inbounds i8, i8* %305, i64 2
  %309 = bitcast i8* %308 to i16*
  store i16 %307, i16* %309, align 2
  %310 = getelementptr inbounds i8, i8* %305, i64 4
  %311 = bitcast i8* %310 to i16*
  store i16 %307, i16* %311, align 2
  %312 = getelementptr inbounds i8, i8* %305, i64 6
  %313 = bitcast i8* %312 to i16*
  store i16 %307, i16* %313, align 2
  %314 = getelementptr inbounds i16, i16* %304, i64 %191
  %315 = getelementptr inbounds i16, i16* %304, i64 %193
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %314, i64 1
  store i16 %316, i16* %317, align 2
  %318 = getelementptr inbounds i16, i16* %314, i64 2
  store i16 %316, i16* %318, align 2
  %319 = getelementptr inbounds i16, i16* %314, i64 3
  store i16 %316, i16* %319, align 2
  br label %320

320:                                              ; preds = %303, %297
  %321 = load i8, i8* %16, align 1
  br label %227
}

declare void @_ZN7libgav110PostFilter13ApplySuperResERKNSt3__15arrayIPhLm3EEERKNS2_IiLm3EEEiS6_b(%"class.libgav1::PostFilter"*, %"struct.std::__1::array.144"* dereferenceable(24), %"struct.std::__1::array.145"* dereferenceable(12), i32, %"struct.std::__1::array.144"* dereferenceable(24), i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter7RunJobsEMS0_FvPNSt3__16atomicIiEEE(%"class.libgav1::PostFilter"*, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_lock", align 8
  %5 = alloca %"struct.std::__1::atomic", align 4
  %6 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %7 = alloca %"class.std::__1::function", align 8
  %8 = bitcast %"struct.std::__1::atomic"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #6
  %9 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %11 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %10, align 8
  %12 = tail call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %11) #6
  %13 = bitcast %"class.libgav1::BlockingCounterImpl"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %13) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 96, i1 false)
  %14 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %6, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 88, i1 false) #6
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %6, i64 0, i32 3
  store i8 0, i8* %15, align 4
  %16 = icmp sgt i32 %12, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %7, i64 0, i32 0, i32 0, i32 0
  br label %27

21:                                               ; preds = %50, %3
  %22 = bitcast %"class.libgav1::PostFilter"* %0 to i8*
  %23 = getelementptr inbounds i8, i8* %22, i64 %2
  %24 = bitcast i8* %23 to %"class.libgav1::PostFilter"*
  %25 = and i64 %1, 1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %60, label %53

27:                                               ; preds = %50, %17
  %28 = phi i32 [ 0, %17 ], [ %51, %50 ]
  %29 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %10, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %18, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %19, align 8
  %30 = call i8* @_Znwm(i64 40) #7, !noalias !36
  %31 = bitcast i8* %30 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %5, %"struct.std::__1::atomic"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 16
  %35 = bitcast i8* %34 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %6, %"class.libgav1::BlockingCounterImpl"** %35, align 8
  %36 = getelementptr inbounds i8, i8* %30, i64 24
  %37 = bitcast i8* %36 to i64*
  store i64 %1, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %30, i64 32
  %39 = bitcast i8* %38 to i64*
  store i64 %2, i64* %39, align 8
  store i8* %30, i8** %20, align 8
  %40 = bitcast %"class.libgav1::ThreadPool"* %29 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %41 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %41, i64 2
  %43 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %42, align 8
  call void %43(%"class.libgav1::ThreadPool"* %29, %"class.std::__1::function"* nonnull %7) #6
  %44 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %19, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %44, i64 0, i32 1
  %46 = load void (i8*)*, void (i8*)** %45, align 8
  %47 = icmp eq void (i8*)* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %27
  %49 = load i8*, i8** %20, align 8
  call void %46(i8* %49) #6
  br label %50

50:                                               ; preds = %27, %48
  %51 = add nuw nsw i32 %28, 1
  %52 = icmp eq i32 %51, %12
  br i1 %52, label %21, label %27

53:                                               ; preds = %21
  %54 = bitcast i8* %23 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = add i64 %1, -1
  %57 = getelementptr i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)**
  %59 = load void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)*, void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)** %58, align 8
  br label %62

60:                                               ; preds = %21
  %61 = inttoptr i64 %1 to void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)*
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* [ %59, %53 ], [ %61, %60 ]
  call void %63(%"class.libgav1::PostFilter"* %24, %"struct.std::__1::atomic"* nonnull %5) #6
  %64 = bitcast %"class.std::__1::unique_lock"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #6
  %65 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %4, i64 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %4, i64 0, i32 1
  %67 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %67, %"class.std::__1::mutex"** %65, align 8
  store i8 1, i8* %66, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %67) #6
  %68 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %6, i64 0, i32 1
  %69 = load i32, i32* %14, align 8
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %62, %71
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %68, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %4) #6
  %72 = load i32, i32* %14, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %71

74:                                               ; preds = %71
  %75 = load i8, i8* %66, align 8, !range !16
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %74
  %78 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %65, align 8
  br label %79

79:                                               ; preds = %77, %62
  %80 = phi %"class.std::__1::mutex"* [ %78, %77 ], [ %67, %62 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %80) #6
  br label %81

81:                                               ; preds = %74, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %68) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %13) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7libgav110PostFilter22ApplyFilteringThreadedEv(%"class.libgav1::PostFilter"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_lock", align 8
  %3 = alloca %"struct.std::__1::atomic", align 4
  %4 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %5 = alloca %"class.std::__1::function", align 8
  %6 = alloca %"class.std::__1::unique_lock", align 8
  %7 = alloca %"struct.std::__1::atomic", align 4
  %8 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %9 = alloca %"class.std::__1::function", align 8
  %10 = alloca %"class.std::__1::unique_lock", align 8
  %11 = alloca %"struct.std::__1::atomic", align 4
  %12 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %13 = alloca %"class.std::__1::function", align 8
  %14 = alloca %"class.std::__1::unique_lock", align 8
  %15 = alloca %"struct.std::__1::atomic", align 4
  %16 = alloca %"class.libgav1::BlockingCounterImpl", align 8
  %17 = alloca %"class.std::__1::function", align 8
  %18 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %19 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %20 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %21 = load i8, i8* %20, align 8
  %22 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %19, i64 0, i32 54, i32 0, i32 0, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp sgt i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %19, i64 0, i32 54, i32 0, i32 0, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp sgt i8 %27, 0
  br i1 %28, label %29, label %148

29:                                               ; preds = %1, %25
  %30 = and i8 %21, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %148, label %32

32:                                               ; preds = %29
  %33 = bitcast %"class.std::__1::function"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33)
  %34 = bitcast %"struct.std::__1::atomic"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  %35 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %35, align 4
  %36 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %37 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %36, align 8
  %38 = tail call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %37) #6
  %39 = bitcast %"class.libgav1::BlockingCounterImpl"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %39) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 96, i1 false) #6
  %40 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %16, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 88, i1 false) #6
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %16, i64 0, i32 3
  store i8 0, i8* %41, align 4
  %42 = icmp sgt i32 %38, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %32
  %44 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %17, i64 0, i32 0, i32 0, i32 0
  br label %55

47:                                               ; preds = %76, %32
  call void @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE0EEEvPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::atomic"* nonnull %15) #6
  %48 = bitcast %"class.std::__1::unique_lock"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #6
  %49 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 0
  %50 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %14, i64 0, i32 1
  %51 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %16, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %51, %"class.std::__1::mutex"** %49, align 8
  store i8 1, i8* %50, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %51) #6
  %52 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %16, i64 0, i32 1
  %53 = load i32, i32* %40, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %87, label %79

55:                                               ; preds = %76, %43
  %56 = phi i32 [ 0, %43 ], [ %77, %76 ]
  %57 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %36, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %45, align 8
  %58 = call i8* @_Znwm(i64 40) #7, !noalias !41
  %59 = bitcast i8* %58 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %15, %"struct.std::__1::atomic"** %61, align 8
  %62 = getelementptr inbounds i8, i8* %58, i64 16
  %63 = bitcast i8* %62 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %16, %"class.libgav1::BlockingCounterImpl"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %58, i64 24
  %65 = bitcast i8* %64 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE0EEEvPNSt3__16atomicIiEE to i64), i64 0>, <2 x i64>* %65, align 8
  store i8* %58, i8** %46, align 8
  %66 = bitcast %"class.libgav1::ThreadPool"* %57 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %67 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %67, i64 2
  %69 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %68, align 8
  call void %69(%"class.libgav1::ThreadPool"* %57, %"class.std::__1::function"* nonnull %17) #6
  %70 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %70, i64 0, i32 1
  %72 = load void (i8*)*, void (i8*)** %71, align 8
  %73 = icmp eq void (i8*)* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %55
  %75 = load i8*, i8** %46, align 8
  call void %72(i8* %75) #6
  br label %76

76:                                               ; preds = %74, %55
  %77 = add nuw nsw i32 %56, 1
  %78 = icmp eq i32 %77, %38
  br i1 %78, label %47, label %55

79:                                               ; preds = %47, %79
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %52, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %14) #6
  %80 = load i32, i32* %40, align 8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %79

82:                                               ; preds = %79
  %83 = load i8, i8* %50, align 8, !range !16
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %82
  %86 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %49, align 8
  br label %87

87:                                               ; preds = %85, %47
  %88 = phi %"class.std::__1::mutex"* [ %86, %85 ], [ %51, %47 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %88) #6
  br label %89

89:                                               ; preds = %82, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %52) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33)
  %90 = bitcast %"class.std::__1::function"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90)
  %91 = bitcast %"struct.std::__1::atomic"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #6
  %92 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %92, align 4
  %93 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %36, align 8
  %94 = call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %93) #6
  %95 = bitcast %"class.libgav1::BlockingCounterImpl"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %95) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 96, i1 false) #6
  %96 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 88, i1 false) #6
  store i32 %94, i32* %96, align 8
  %97 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 3
  store i8 0, i8* %97, align 4
  %98 = icmp sgt i32 %94, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %89
  %100 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 1, i32 0
  %101 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 2
  %102 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %13, i64 0, i32 0, i32 0, i32 0
  br label %111

103:                                              ; preds = %132, %89
  call void @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE1EEEvPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::atomic"* nonnull %11) #6
  %104 = bitcast %"class.std::__1::unique_lock"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #6
  %105 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %10, i64 0, i32 0
  %106 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %10, i64 0, i32 1
  %107 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %107, %"class.std::__1::mutex"** %105, align 8
  store i8 1, i8* %106, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %107) #6
  %108 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %12, i64 0, i32 1
  %109 = load i32, i32* %96, align 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %143, label %135

111:                                              ; preds = %132, %99
  %112 = phi i32 [ 0, %99 ], [ %133, %132 ]
  %113 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %36, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %100, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %101, align 8
  %114 = call i8* @_Znwm(i64 40) #7, !noalias !46
  %115 = bitcast i8* %114 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %115, align 8
  %116 = getelementptr inbounds i8, i8* %114, i64 8
  %117 = bitcast i8* %116 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %11, %"struct.std::__1::atomic"** %117, align 8
  %118 = getelementptr inbounds i8, i8* %114, i64 16
  %119 = bitcast i8* %118 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %12, %"class.libgav1::BlockingCounterImpl"** %119, align 8
  %120 = getelementptr inbounds i8, i8* %114, i64 24
  %121 = bitcast i8* %120 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE1EEEvPNSt3__16atomicIiEE to i64), i64 0>, <2 x i64>* %121, align 8
  store i8* %114, i8** %102, align 8
  %122 = bitcast %"class.libgav1::ThreadPool"* %113 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %123 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %123, i64 2
  %125 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %124, align 8
  call void %125(%"class.libgav1::ThreadPool"* %113, %"class.std::__1::function"* nonnull %13) #6
  %126 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %101, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %126, i64 0, i32 1
  %128 = load void (i8*)*, void (i8*)** %127, align 8
  %129 = icmp eq void (i8*)* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %111
  %131 = load i8*, i8** %102, align 8
  call void %128(i8* %131) #6
  br label %132

132:                                              ; preds = %130, %111
  %133 = add nuw nsw i32 %112, 1
  %134 = icmp eq i32 %133, %94
  br i1 %134, label %103, label %111

135:                                              ; preds = %103, %135
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %108, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %10) #6
  %136 = load i32, i32* %96, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %135

138:                                              ; preds = %135
  %139 = load i8, i8* %106, align 8, !range !16
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %105, align 8
  br label %143

143:                                              ; preds = %141, %103
  %144 = phi %"class.std::__1::mutex"* [ %142, %141 ], [ %107, %103 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %144) #6
  br label %145

145:                                              ; preds = %138, %143
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %108) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %95) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90)
  %146 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %147 = load i8, i8* %20, align 8
  br label %148

148:                                              ; preds = %29, %25, %145
  %149 = phi i8 [ %21, %29 ], [ %21, %25 ], [ %147, %145 ]
  %150 = phi %"struct.libgav1::ObuFrameHeader"* [ %19, %29 ], [ %19, %25 ], [ %146, %145 ]
  %151 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 55, i32 1
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %170

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 55, i32 2, i64 0
  %156 = load i8, i8* %155, align 1
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %158, label %170

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 55, i32 3, i64 0
  %160 = load i8, i8* %159, align 1
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 55, i32 4, i64 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 55, i32 5, i64 0
  %168 = load i8, i8* %167, align 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %218, label %170

170:                                              ; preds = %148, %154, %158, %162, %166
  %171 = and i8 %149, 2
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %213, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %175 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %174, align 8
  %176 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %177 = load i8, i8* %176, align 1
  %178 = icmp eq i8 %177, 1
  %179 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %175, i64 0, i32 0, i64 0
  %180 = load i8, i8* %179, align 4
  %181 = icmp ne i8 %180, 0
  br i1 %178, label %182, label %186

182:                                              ; preds = %173
  %183 = and i8 %149, 8
  %184 = icmp ne i8 %183, 0
  %185 = and i1 %184, %181
  br i1 %185, label %198, label %213

186:                                              ; preds = %173
  br i1 %181, label %195, label %187

187:                                              ; preds = %186
  %188 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %175, i64 0, i32 0, i64 1
  %189 = load i8, i8* %188, align 1
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %195

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %175, i64 0, i32 0, i64 2
  %193 = load i8, i8* %192, align 2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %213, label %195

195:                                              ; preds = %186, %187, %191
  %196 = and i8 %149, 8
  %197 = icmp eq i8 %196, 0
  br i1 %197, label %213, label %198

198:                                              ; preds = %182, %195
  %199 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %150, i64 0, i32 7
  %200 = load i32, i32* %199, align 4
  %201 = icmp sgt i32 %200, 0
  br i1 %201, label %202, label %213

202:                                              ; preds = %198, %202
  %203 = phi i32 [ %204, %202 ], [ 0, %198 ]
  call void @_ZN7libgav110PostFilter26SetupLoopRestorationBorderEii(%"class.libgav1::PostFilter"* %0, i32 %203, i32 16)
  %204 = add nuw nsw i32 %203, 16
  %205 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %206 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %205, i64 0, i32 7
  %207 = load i32, i32* %206, align 4
  %208 = icmp slt i32 %204, %207
  br i1 %208, label %202, label %209

209:                                              ; preds = %202
  %210 = load i8, i8* %20, align 8
  %211 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %205, i64 0, i32 55, i32 1
  %212 = load i8, i8* %211, align 1
  br label %213

213:                                              ; preds = %209, %198, %195, %170, %191, %182
  %214 = phi i8 [ %212, %209 ], [ %152, %198 ], [ %152, %195 ], [ %152, %170 ], [ %152, %191 ], [ %152, %182 ]
  %215 = phi i8 [ %210, %209 ], [ %149, %198 ], [ %149, %195 ], [ %149, %170 ], [ %149, %191 ], [ %149, %182 ]
  %216 = phi %"struct.libgav1::ObuFrameHeader"* [ %205, %209 ], [ %150, %198 ], [ %150, %195 ], [ %150, %170 ], [ %150, %191 ], [ %150, %182 ]
  %217 = icmp eq i8 %214, 0
  br i1 %217, label %218, label %236

218:                                              ; preds = %166, %213
  %219 = phi %"struct.libgav1::ObuFrameHeader"* [ %216, %213 ], [ %150, %166 ]
  %220 = phi i8 [ %215, %213 ], [ %149, %166 ]
  %221 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %219, i64 0, i32 55, i32 2, i64 0
  %222 = load i8, i8* %221, align 1
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %224, label %236

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %219, i64 0, i32 55, i32 3, i64 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %236

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %219, i64 0, i32 55, i32 4, i64 0
  %230 = load i8, i8* %229, align 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %219, i64 0, i32 55, i32 5, i64 0
  %234 = load i8, i8* %233, align 1
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %312, label %236

236:                                              ; preds = %213, %218, %224, %228, %232
  %237 = phi %"struct.libgav1::ObuFrameHeader"* [ %216, %213 ], [ %219, %218 ], [ %219, %224 ], [ %219, %228 ], [ %219, %232 ]
  %238 = phi i8 [ %215, %213 ], [ %220, %218 ], [ %220, %224 ], [ %220, %228 ], [ %220, %232 ]
  %239 = and i8 %238, 2
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %312, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %237, i64 0, i32 7
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %243, 0
  br i1 %244, label %305, label %245

245:                                              ; preds = %305, %241
  %246 = bitcast %"class.std::__1::function"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %246)
  %247 = bitcast %"struct.std::__1::atomic"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #6
  %248 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %248, align 4
  %249 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %250 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %249, align 8
  %251 = call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %250) #6
  %252 = bitcast %"class.libgav1::BlockingCounterImpl"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %252) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 -86, i64 96, i1 false) #6
  %253 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %8, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %252, i8 0, i64 88, i1 false) #6
  store i32 %251, i32* %253, align 8
  %254 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %8, i64 0, i32 3
  store i8 0, i8* %254, align 4
  %255 = icmp sgt i32 %251, 0
  br i1 %255, label %256, label %260

256:                                              ; preds = %245
  %257 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 1, i32 0
  %258 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 2
  %259 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %9, i64 0, i32 0, i32 0, i32 0
  br label %268

260:                                              ; preds = %289, %245
  call void @_ZN7libgav110PostFilter15ApplyCdefWorkerEPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::atomic"* nonnull %7) #6
  %261 = bitcast %"class.std::__1::unique_lock"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %261) #6
  %262 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %6, i64 0, i32 0
  %263 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %6, i64 0, i32 1
  %264 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %8, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %264, %"class.std::__1::mutex"** %262, align 8
  store i8 1, i8* %263, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %264) #6
  %265 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %8, i64 0, i32 1
  %266 = load i32, i32* %253, align 8
  %267 = icmp eq i32 %266, 0
  br i1 %267, label %300, label %292

268:                                              ; preds = %289, %256
  %269 = phi i32 [ 0, %256 ], [ %290, %289 ]
  %270 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %249, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %257, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %258, align 8
  %271 = call i8* @_Znwm(i64 40) #7, !noalias !51
  %272 = bitcast i8* %271 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %272, align 8
  %273 = getelementptr inbounds i8, i8* %271, i64 8
  %274 = bitcast i8* %273 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %7, %"struct.std::__1::atomic"** %274, align 8
  %275 = getelementptr inbounds i8, i8* %271, i64 16
  %276 = bitcast i8* %275 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %8, %"class.libgav1::BlockingCounterImpl"** %276, align 8
  %277 = getelementptr inbounds i8, i8* %271, i64 24
  %278 = bitcast i8* %277 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* @_ZN7libgav110PostFilter15ApplyCdefWorkerEPNSt3__16atomicIiEE to i64), i64 0>, <2 x i64>* %278, align 8
  store i8* %271, i8** %259, align 8
  %279 = bitcast %"class.libgav1::ThreadPool"* %270 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %280 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %279, align 8
  %281 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %280, i64 2
  %282 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %281, align 8
  call void %282(%"class.libgav1::ThreadPool"* %270, %"class.std::__1::function"* nonnull %9) #6
  %283 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %258, align 8
  %284 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %283, i64 0, i32 1
  %285 = load void (i8*)*, void (i8*)** %284, align 8
  %286 = icmp eq void (i8*)* %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %268
  %288 = load i8*, i8** %259, align 8
  call void %285(i8* %288) #6
  br label %289

289:                                              ; preds = %287, %268
  %290 = add nuw nsw i32 %269, 1
  %291 = icmp eq i32 %290, %251
  br i1 %291, label %260, label %268

292:                                              ; preds = %260, %292
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %265, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %6) #6
  %293 = load i32, i32* %253, align 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %292

295:                                              ; preds = %292
  %296 = load i8, i8* %263, align 8, !range !16
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %302, label %298

298:                                              ; preds = %295
  %299 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %262, align 8
  br label %300

300:                                              ; preds = %298, %260
  %301 = phi %"class.std::__1::mutex"* [ %299, %298 ], [ %264, %260 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %301) #6
  br label %302

302:                                              ; preds = %295, %300
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %261) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %265) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %252) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %246)
  %303 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %304 = load i8, i8* %20, align 8
  br label %312

305:                                              ; preds = %241, %305
  %306 = phi i32 [ %307, %305 ], [ 0, %241 ]
  call void @_ZN7libgav110PostFilter15SetupCdefBorderEi(%"class.libgav1::PostFilter"* %0, i32 %306) #6
  %307 = add nuw nsw i32 %306, 16
  %308 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %309 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %308, i64 0, i32 7
  %310 = load i32, i32* %309, align 4
  %311 = icmp slt i32 %307, %310
  br i1 %311, label %305, label %245

312:                                              ; preds = %236, %232, %302
  %313 = phi i8 [ %238, %236 ], [ %220, %232 ], [ %304, %302 ]
  %314 = phi %"struct.libgav1::ObuFrameHeader"* [ %237, %236 ], [ %219, %232 ], [ %303, %302 ]
  %315 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %314, i64 0, i32 4
  %316 = load i32, i32* %315, align 8
  %317 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %314, i64 0, i32 10
  %318 = load i32, i32* %317, align 8
  %319 = icmp ne i32 %316, %318
  %320 = and i8 %313, 4
  %321 = icmp ne i8 %320, 0
  %322 = and i1 %321, %319
  br i1 %322, label %323, label %325

323:                                              ; preds = %312
  call void @_ZN7libgav110PostFilter21ApplySuperResThreadedEv(%"class.libgav1::PostFilter"* %0) #6
  %324 = load i8, i8* %20, align 8
  br label %325

325:                                              ; preds = %323, %312
  %326 = phi i8 [ %324, %323 ], [ %313, %312 ]
  %327 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %328 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %327, align 8
  %329 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %330 = load i8, i8* %329, align 1
  %331 = icmp eq i8 %330, 1
  %332 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %328, i64 0, i32 0, i64 0
  %333 = load i8, i8* %332, align 4
  %334 = icmp ne i8 %333, 0
  br i1 %331, label %335, label %339

335:                                              ; preds = %325
  %336 = and i8 %326, 8
  %337 = icmp ne i8 %336, 0
  %338 = and i1 %337, %334
  br i1 %338, label %351, label %441

339:                                              ; preds = %325
  br i1 %334, label %348, label %340

340:                                              ; preds = %339
  %341 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %328, i64 0, i32 0, i64 1
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %344, label %348

344:                                              ; preds = %340
  %345 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %328, i64 0, i32 0, i64 2
  %346 = load i8, i8* %345, align 2
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %441, label %348

348:                                              ; preds = %339, %340, %344
  %349 = and i8 %326, 8
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %441, label %351

351:                                              ; preds = %348, %335
  %352 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %353 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %352, i64 0, i32 55, i32 1
  %354 = load i8, i8* %353, align 1
  %355 = icmp eq i8 %354, 0
  br i1 %355, label %356, label %372

356:                                              ; preds = %351
  %357 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %352, i64 0, i32 55, i32 2, i64 0
  %358 = load i8, i8* %357, align 1
  %359 = icmp eq i8 %358, 0
  br i1 %359, label %360, label %372

360:                                              ; preds = %356
  %361 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %352, i64 0, i32 55, i32 3, i64 0
  %362 = load i8, i8* %361, align 1
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %364, label %372

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %352, i64 0, i32 55, i32 4, i64 0
  %366 = load i8, i8* %365, align 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %372

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %352, i64 0, i32 55, i32 5, i64 0
  %370 = load i8, i8* %369, align 1
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %375, label %372

372:                                              ; preds = %368, %364, %360, %356, %351
  %373 = and i8 %326, 2
  %374 = icmp eq i8 %373, 0
  br i1 %374, label %375, label %383

375:                                              ; preds = %368, %372
  br label %376

376:                                              ; preds = %375, %376
  %377 = phi i32 [ %378, %376 ], [ 0, %375 ]
  call void @_ZN7libgav110PostFilter26SetupLoopRestorationBorderEi(%"class.libgav1::PostFilter"* %0, i32 %377)
  %378 = add nuw nsw i32 %377, 16
  %379 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %380 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %379, i64 0, i32 7
  %381 = load i32, i32* %380, align 4
  %382 = icmp slt i32 %378, %381
  br i1 %382, label %376, label %383

383:                                              ; preds = %376, %372
  %384 = bitcast %"class.std::__1::function"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %384)
  %385 = bitcast %"struct.std::__1::atomic"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %385) #6
  %386 = getelementptr inbounds %"struct.std::__1::atomic", %"struct.std::__1::atomic"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %386, align 4
  %387 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 36
  %388 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %387, align 8
  %389 = call i32 @_ZNK7libgav110ThreadPool11num_threadsEv(%"class.libgav1::ThreadPool"* %388) #6
  %390 = bitcast %"class.libgav1::BlockingCounterImpl"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %390) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 96, i1 false) #6
  %391 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 0, i64 88, i1 false) #6
  store i32 %389, i32* %391, align 8
  %392 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %4, i64 0, i32 3
  store i8 0, i8* %392, align 4
  %393 = icmp sgt i32 %389, 0
  br i1 %393, label %394, label %398

394:                                              ; preds = %383
  %395 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 1, i32 0
  %396 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 2
  %397 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %5, i64 0, i32 0, i32 0, i32 0
  br label %406

398:                                              ; preds = %427, %383
  call void @_ZN7libgav110PostFilter26ApplyLoopRestorationWorkerEPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"* %0, %"struct.std::__1::atomic"* nonnull %3) #6
  %399 = bitcast %"class.std::__1::unique_lock"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %399) #6
  %400 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 0
  %401 = getelementptr inbounds %"class.std::__1::unique_lock", %"class.std::__1::unique_lock"* %2, i64 0, i32 1
  %402 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %399, i8 -86, i64 16, i1 false) #6
  store %"class.std::__1::mutex"* %402, %"class.std::__1::mutex"** %400, align 8
  store i8 1, i8* %401, align 8
  call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* nonnull %402) #6
  %403 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %4, i64 0, i32 1
  %404 = load i32, i32* %391, align 8
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %438, label %430

406:                                              ; preds = %427, %394
  %407 = phi i32 [ 0, %394 ], [ %428, %427 ]
  %408 = load %"class.libgav1::ThreadPool"*, %"class.libgav1::ThreadPool"** %387, align 8
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %395, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %396, align 8
  %409 = call i8* @_Znwm(i64 40) #7, !noalias !56
  %410 = bitcast i8* %409 to %"class.libgav1::PostFilter"**
  store %"class.libgav1::PostFilter"* %0, %"class.libgav1::PostFilter"** %410, align 8
  %411 = getelementptr inbounds i8, i8* %409, i64 8
  %412 = bitcast i8* %411 to %"struct.std::__1::atomic"**
  store %"struct.std::__1::atomic"* %3, %"struct.std::__1::atomic"** %412, align 8
  %413 = getelementptr inbounds i8, i8* %409, i64 16
  %414 = bitcast i8* %413 to %"class.libgav1::BlockingCounterImpl"**
  store %"class.libgav1::BlockingCounterImpl"* %4, %"class.libgav1::BlockingCounterImpl"** %414, align 8
  %415 = getelementptr inbounds i8, i8* %409, i64 24
  %416 = bitcast i8* %415 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* @_ZN7libgav110PostFilter26ApplyLoopRestorationWorkerEPNSt3__16atomicIiEE to i64), i64 0>, <2 x i64>* %416, align 8
  store i8* %409, i8** %397, align 8
  %417 = bitcast %"class.libgav1::ThreadPool"* %408 to void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)***
  %418 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)**, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*** %417, align 8
  %419 = getelementptr inbounds void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %418, i64 2
  %420 = load void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)*, void (%"class.libgav1::ThreadPool"*, %"class.std::__1::function"*)** %419, align 8
  call void %420(%"class.libgav1::ThreadPool"* %408, %"class.std::__1::function"* nonnull %5) #6
  %421 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %396, align 8
  %422 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %421, i64 0, i32 1
  %423 = load void (i8*)*, void (i8*)** %422, align 8
  %424 = icmp eq void (i8*)* %423, null
  br i1 %424, label %427, label %425

425:                                              ; preds = %406
  %426 = load i8*, i8** %397, align 8
  call void %423(i8* %426) #6
  br label %427

427:                                              ; preds = %425, %406
  %428 = add nuw nsw i32 %407, 1
  %429 = icmp eq i32 %428, %389
  br i1 %429, label %398, label %406

430:                                              ; preds = %398, %430
  call void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"* %403, %"class.std::__1::unique_lock"* nonnull dereferenceable(16) %2) #6
  %431 = load i32, i32* %391, align 8
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %430

433:                                              ; preds = %430
  %434 = load i8, i8* %401, align 8, !range !16
  %435 = icmp eq i8 %434, 0
  br i1 %435, label %440, label %436

436:                                              ; preds = %433
  %437 = load %"class.std::__1::mutex"*, %"class.std::__1::mutex"** %400, align 8
  br label %438

438:                                              ; preds = %436, %398
  %439 = phi %"class.std::__1::mutex"* [ %437, %436 ], [ %402, %398 ]
  call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %439) #6
  br label %440

440:                                              ; preds = %433, %438
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %399) #6
  call void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"* %403) #6
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %390) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %385) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %384)
  br label %441

441:                                              ; preds = %348, %344, %335, %440
  %442 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %18, align 8
  %443 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %442, i64 0, i32 34
  %444 = load i8, i8* %443, align 2
  %445 = icmp eq i8 %444, 0
  br i1 %445, label %482, label %446

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %448 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %449 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  br label %450

450:                                              ; preds = %450, %446
  %451 = phi i64 [ 0, %446 ], [ %478, %450 ]
  %452 = load i32, i32* %447, align 4
  %453 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %451
  %454 = load i8, i8* %453, align 1
  %455 = sext i8 %454 to i32
  %456 = add nsw i32 %452, %455
  %457 = ashr i32 %456, %455
  %458 = load i32, i32* %448, align 4
  %459 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %451
  %460 = load i8, i8* %459, align 1
  %461 = sext i8 %460 to i32
  %462 = add nsw i32 %458, %461
  %463 = ashr i32 %462, %461
  %464 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %449, align 8
  %465 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 13, i64 %451
  %466 = load i8*, i8** %465, align 8
  %467 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 11, i64 %451
  %468 = load i32, i32* %467, align 4
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 7, i64 %451
  %471 = load i32, i32* %470, align 4
  %472 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 8, i64 %451
  %473 = load i32, i32* %472, align 4
  %474 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 9, i64 %451
  %475 = load i32, i32* %474, align 4
  %476 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %464, i64 0, i32 10, i64 %451
  %477 = load i32, i32* %476, align 4
  call void @_ZNK7libgav110PostFilter19ExtendFrameBoundaryEPhiiliiii(%"class.libgav1::PostFilter"* %0, i8* %466, i32 %457, i32 %463, i64 %469, i32 %471, i32 %473, i32 %475, i32 %477) #6
  %478 = add nuw nsw i64 %451, 1
  %479 = load i8, i8* %329, align 1
  %480 = sext i8 %479 to i64
  %481 = icmp slt i64 %478, %480
  br i1 %481, label %450, label %482

482:                                              ; preds = %450, %441
  ret void
}

declare void @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE0EEEvPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*) #2

declare void @_ZN7libgav110PostFilter19DeblockFilterWorkerILNS_14LoopFilterTypeE1EEEvPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*) #2

declare void @_ZN7libgav110PostFilter15SetupCdefBorderEi(%"class.libgav1::PostFilter"*, i32) local_unnamed_addr #2

declare void @_ZN7libgav110PostFilter15ApplyCdefWorkerEPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*) #2

declare void @_ZN7libgav110PostFilter21ApplySuperResThreadedEv(%"class.libgav1::PostFilter"*) local_unnamed_addr #2

declare void @_ZN7libgav110PostFilter26ApplyLoopRestorationWorkerEPNSt3__16atomicIiEE(%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7libgav110PostFilter33ApplyFilteringForOneSuperBlockRowEiibb(%"class.libgav1::PostFilter"*, i32, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = icmp slt i32 %1, 0
  br i1 %6, label %227, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 1
  %9 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %10 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 34
  %11 = load i8, i8* %10, align 8
  %12 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 54, i32 0, i32 0, i64 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp sgt i8 %13, 0
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %9, i64 0, i32 54, i32 0, i32 0, i64 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp sgt i8 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %7, %15
  %20 = and i8 %11, 1
  %21 = icmp eq i8 %20, 0
  %22 = xor i1 %4, true
  %23 = or i1 %21, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  tail call void @_ZN7libgav110PostFilter37ApplyDeblockFilterForOneSuperBlockRowEii(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2) #6
  %25 = load i8, i8* %10, align 8
  br label %26

26:                                               ; preds = %15, %19, %24
  %27 = phi i8 [ %11, %15 ], [ %11, %19 ], [ %25, %24 ]
  %28 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 2
  %29 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %28, align 8
  %30 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 11
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 1
  %33 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %29, i64 0, i32 0, i64 0
  %34 = load i8, i8* %33, align 4
  %35 = icmp ne i8 %34, 0
  br i1 %32, label %36, label %40

36:                                               ; preds = %26
  %37 = and i8 %27, 8
  %38 = icmp ne i8 %37, 0
  %39 = and i1 %38, %35
  br i1 %39, label %52, label %78

40:                                               ; preds = %26
  br i1 %35, label %49, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %29, i64 0, i32 0, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %29, i64 0, i32 0, i64 2
  %47 = load i8, i8* %46, align 2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %40, %41, %45
  %50 = and i8 %27, 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49, %36
  %53 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %54 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %53, i64 0, i32 55, i32 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %73

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %53, i64 0, i32 55, i32 2, i64 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %53, i64 0, i32 55, i32 3, i64 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %53, i64 0, i32 55, i32 4, i64 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %53, i64 0, i32 55, i32 5, i64 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %52, %57, %61, %65, %69
  %74 = and i8 %27, 2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  tail call void @_ZN7libgav110PostFilter26SetupLoopRestorationBorderEii(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2)
  %77 = load i8, i8* %10, align 8
  br label %78

78:                                               ; preds = %73, %49, %69, %45, %36, %76
  %79 = phi i8 [ %27, %73 ], [ %27, %49 ], [ %27, %69 ], [ %27, %45 ], [ %27, %36 ], [ %77, %76 ]
  %80 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %81 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 55, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %100

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 55, i32 2, i64 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 55, i32 3, i64 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 55, i32 4, i64 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %80, i64 0, i32 55, i32 5, i64 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %78, %84, %88, %92, %96
  %101 = and i8 %79, 2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %100
  tail call void @_ZN7libgav110PostFilter28ApplyCdefForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2, i1 zeroext %3) #6
  %104 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %105 = load i8, i8* %10, align 8
  br label %106

106:                                              ; preds = %100, %96, %103
  %107 = phi i8 [ %79, %100 ], [ %79, %96 ], [ %105, %103 ]
  %108 = phi %"struct.libgav1::ObuFrameHeader"* [ %80, %100 ], [ %80, %96 ], [ %104, %103 ]
  %109 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %108, i64 0, i32 4
  %110 = load i32, i32* %109, align 8
  %111 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %108, i64 0, i32 10
  %112 = load i32, i32* %111, align 8
  %113 = icmp ne i32 %110, %112
  %114 = and i8 %107, 4
  %115 = icmp ne i8 %114, 0
  %116 = and i1 %115, %113
  br i1 %116, label %117, label %119

117:                                              ; preds = %106
  tail call void @_ZN7libgav110PostFilter32ApplySuperResForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2, i1 zeroext %3) #6
  %118 = load i8, i8* %10, align 8
  br label %119

119:                                              ; preds = %117, %106
  %120 = phi i8 [ %118, %117 ], [ %107, %106 ]
  %121 = load %"struct.libgav1::LoopRestoration"*, %"struct.libgav1::LoopRestoration"** %28, align 8
  %122 = load i8, i8* %30, align 1
  %123 = icmp eq i8 %122, 1
  %124 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %121, i64 0, i32 0, i64 0
  %125 = load i8, i8* %124, align 4
  %126 = icmp ne i8 %125, 0
  br i1 %123, label %127, label %131

127:                                              ; preds = %119
  %128 = and i8 %120, 8
  %129 = icmp ne i8 %128, 0
  %130 = and i1 %129, %126
  br i1 %130, label %143, label %146

131:                                              ; preds = %119
  br i1 %126, label %140, label %132

132:                                              ; preds = %131
  %133 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %121, i64 0, i32 0, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"struct.libgav1::LoopRestoration", %"struct.libgav1::LoopRestoration"* %121, i64 0, i32 0, i64 2
  %138 = load i8, i8* %137, align 2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %131, %132, %136
  %141 = and i8 %120, 8
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %140, %127
  tail call void @_ZN7libgav110PostFilter30CopyBordersForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2, i1 zeroext true)
  tail call void @_ZN7libgav110PostFilter20ApplyLoopRestorationEii(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2) #6
  br i1 %3, label %144, label %146

144:                                              ; preds = %143
  %145 = add nsw i32 %2, %1
  tail call void @_ZN7libgav110PostFilter30CopyBordersForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %145, i32 16, i1 zeroext true)
  tail call void @_ZN7libgav110PostFilter20ApplyLoopRestorationEii(%"class.libgav1::PostFilter"* %0, i32 %145, i32 16) #6
  br label %146

146:                                              ; preds = %140, %136, %127, %143, %144
  %147 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  %148 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %147, i64 0, i32 34
  %149 = load i8, i8* %148, align 2
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %166, label %151

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %147, i64 0, i32 32
  %153 = load i8, i8* %152, align 4, !range !16
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %162, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %147, i64 0, i32 10
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %147, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = shl i32 %159, 2
  %161 = icmp eq i32 %157, %160
  br i1 %161, label %162, label %166

162:                                              ; preds = %151, %155
  tail call void @_ZN7libgav110PostFilter30CopyBordersForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %1, i32 %2, i1 zeroext false)
  br i1 %3, label %163, label %222

163:                                              ; preds = %162
  %164 = add nsw i32 %2, %1
  tail call void @_ZN7libgav110PostFilter30CopyBordersForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"* %0, i32 %164, i32 16, i1 zeroext false)
  %165 = load %"struct.libgav1::ObuFrameHeader"*, %"struct.libgav1::ObuFrameHeader"** %8, align 8
  br label %167

166:                                              ; preds = %146, %155
  br i1 %3, label %167, label %222

167:                                              ; preds = %163, %166
  %168 = phi %"struct.libgav1::ObuFrameHeader"* [ %165, %163 ], [ %147, %166 ]
  %169 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %168, i64 0, i32 32
  %170 = load i8, i8* %169, align 4, !range !16
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %220, label %172

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %168, i64 0, i32 10
  %174 = load i32, i32* %173, align 8
  %175 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %168, i64 0, i32 6
  %176 = load i32, i32* %175, align 8
  %177 = shl i32 %176, 2
  %178 = icmp eq i32 %174, %177
  br i1 %178, label %220, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"struct.libgav1::ObuFrameHeader", %"struct.libgav1::ObuFrameHeader"* %168, i64 0, i32 34
  %181 = load i8, i8* %180, align 2
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %220, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 5
  %185 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  %186 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 27
  br label %187

187:                                              ; preds = %187, %183
  %188 = phi i64 [ 0, %183 ], [ %215, %187 ]
  %189 = load i32, i32* %184, align 4
  %190 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 9, i64 %188
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = add nsw i32 %189, %192
  %194 = ashr i32 %193, %192
  %195 = load i32, i32* %185, align 4
  %196 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 10, i64 %188
  %197 = load i8, i8* %196, align 1
  %198 = sext i8 %197 to i32
  %199 = add nsw i32 %195, %198
  %200 = ashr i32 %199, %198
  %201 = load %"class.libgav1::YuvBuffer"*, %"class.libgav1::YuvBuffer"** %186, align 8
  %202 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 13, i64 %188
  %203 = load i8*, i8** %202, align 8
  %204 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 11, i64 %188
  %205 = load i32, i32* %204, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 7, i64 %188
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 8, i64 %188
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 9, i64 %188
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.libgav1::YuvBuffer", %"class.libgav1::YuvBuffer"* %201, i64 0, i32 10, i64 %188
  %214 = load i32, i32* %213, align 4
  tail call void @_ZNK7libgav110PostFilter19ExtendFrameBoundaryEPhiiliiii(%"class.libgav1::PostFilter"* %0, i8* %203, i32 %194, i32 %200, i64 %206, i32 %208, i32 %210, i32 %212, i32 %214) #6
  %215 = add nuw nsw i64 %188, 1
  %216 = load i8, i8* %30, align 1
  %217 = sext i8 %216 to i64
  %218 = icmp slt i64 %215, %217
  br i1 %218, label %187, label %219

219:                                              ; preds = %187
  br i1 %3, label %220, label %222

220:                                              ; preds = %167, %172, %179, %219
  %221 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 7
  br label %224

222:                                              ; preds = %166, %162, %219
  %223 = getelementptr inbounds %"class.libgav1::PostFilter", %"class.libgav1::PostFilter"* %0, i64 0, i32 37
  br label %224

224:                                              ; preds = %222, %220
  %225 = phi i32* [ %221, %220 ], [ %223, %222 ]
  %226 = load i32, i32* %225, align 4
  br label %227

227:                                              ; preds = %5, %224
  %228 = phi i32 [ %226, %224 ], [ -1, %5 ]
  ret i32 %228
}

declare void @_ZN7libgav110PostFilter37ApplyDeblockFilterForOneSuperBlockRowEii(%"class.libgav1::PostFilter"*, i32, i32) local_unnamed_addr #2

declare void @_ZN7libgav110PostFilter28ApplyCdefForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7libgav110PostFilter32ApplySuperResForOneSuperBlockRowEiib(%"class.libgav1::PostFilter"*, i32, i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7libgav110PostFilter20ApplyLoopRestorationEii(%"class.libgav1::PostFilter"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variableD1Ev(%"class.std::__1::condition_variable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS7_FvPNS_6atomicIiEEEE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #0 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %3 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %2, align 8
  %4 = bitcast %"class.std::__1::__function::__default_alloc_func"* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 3, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 3, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = bitcast i8* %10 to %"class.libgav1::PostFilter"*
  %12 = and i64 %7, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %1
  %15 = bitcast i8* %10 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = add i64 %7, -1
  %18 = getelementptr i8, i8* %16, i64 %17
  %19 = bitcast i8* %18 to void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)**
  %20 = load void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)*, void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)** %19, align 8
  br label %23

21:                                               ; preds = %1
  %22 = inttoptr i64 %7 to void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)*
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi void (%"class.libgav1::PostFilter"*, %"struct.std::__1::atomic"*)* [ %20, %14 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 1
  %26 = load %"struct.std::__1::atomic"*, %"struct.std::__1::atomic"** %25, align 8
  tail call void %24(%"class.libgav1::PostFilter"* %11, %"struct.std::__1::atomic"* %26) #6
  %27 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 2
  %28 = load %"class.libgav1::BlockingCounterImpl"*, %"class.libgav1::BlockingCounterImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %28, i64 0, i32 0
  tail call void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"* %29) #6
  %30 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %28, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %30, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.libgav1::BlockingCounterImpl", %"class.libgav1::BlockingCounterImpl"* %28, i64 0, i32 1
  tail call void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"* %35) #6
  br label %36

36:                                               ; preds = %23, %34
  tail call void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"* %29) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable10notify_oneEv(%"class.std::__1::condition_variable"*) local_unnamed_addr #3

declare void @_ZNSt3__15mutex4lockEv(%"class.std::__1::mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__15mutex6unlockEv(%"class.std::__1::mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #7, !noalias !61
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #6
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__118condition_variable4waitERNS_11unique_lockINS_5mutexEEE(%"class.std::__1::condition_variable"*, %"class.std::__1::unique_lock"* dereferenceable(16)) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.isvectorized", i32 1}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !10, !7}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !7}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !10, !7}
!14 = distinct !{!14, !3}
!15 = distinct !{!15, !3}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19}
!19 = distinct !{!19, !"LVerDomain"}
!20 = !{!21}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !7}
!23 = distinct !{!23, !7}
!24 = distinct !{!24, !7}
!25 = distinct !{!25, !3}
!26 = distinct !{!26, !10, !7}
!27 = distinct !{!27, !7}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !10, !7}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !3}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
!35 = distinct !{!35, !3}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!39 = distinct !{!39, !40, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!40 = distinct !{!40, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!43 = distinct !{!43, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!44 = distinct !{!44, !45, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!45 = distinct !{!45, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!49 = distinct !{!49, !50, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!51 = !{!52, !54}
!52 = distinct !{!52, !53, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!53 = distinct !{!53, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!54 = distinct !{!54, !55, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!56 = !{!57, !59}
!57 = distinct !{!57, !58, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!58 = distinct !{!58, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!59 = distinct !{!59, !60, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!60 = distinct !{!60, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!61 = !{!62, !64}
!62 = distinct !{!62, !63, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!63 = distinct !{!63, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!64 = distinct !{!64, !65, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!65 = distinct !{!65, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN7libgav110PostFilter7RunJobsEMS5_FvPNS_6atomicIiEEEE3$_0FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
