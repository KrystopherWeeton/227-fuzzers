; ModuleID = '../../third_party/ots/src/src/vdmx.cc'
source_filename = "../../third_party/ots/src/src/vdmx.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeVDMX" = type { %"class.ots::Table.base", i16, i16, i16, %"class.std::__1::vector", %"class.std::__1::vector.29", %"class.std::__1::vector.36" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"*, %"class.std::__1::__compressed_pair.24" }
%"struct.ots::OpenTypeVDMXRatioRecord" = type { i8, i8, i8, i8 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.ots::OpenTypeVDMXRatioRecord"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { i16*, i16*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i16* }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"*, %"class.std::__1::__compressed_pair.45" }
%"struct.ots::OpenTypeVDMXGroup" = type { i16, i8, i8, %"class.std::__1::vector.38" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"*, %"class.std::__1::__compressed_pair.40" }
%"struct.ots::OpenTypeVDMXVTable" = type { i16, i16, i16 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.ots::OpenTypeVDMXVTable"* }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"struct.ots::OpenTypeVDMXGroup"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZN3ots12OpenTypeVDMXD2Ev = comdat any

$_ZN3ots12OpenTypeVDMXD0Ev = comdat any

$_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"Unsupported table version: %u\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Failed to read RatioRange record %d\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Unsupported character set: %u\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Bad y ratio\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Superfluous terminator found\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"Failed to read ratio offset %d\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"Bad ratio offset %d for ration %d\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"Failed to read record header %d\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"Failed to read reacord %d group %d\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"bad y min/max\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"The table is not sorted\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"Failed to write table header\00", align 1
@.str.13 = private unnamed_addr constant [37 x i8] c"Failed to write RatioRange record %d\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"Failed to write ratio offset %d\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"Failed to write group %d\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"Failed to write group %d entry %d\00", align 1
@_ZTVN3ots12OpenTypeVDMXE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeVDMX"*)* @_ZN3ots12OpenTypeVDMXD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeVDMX"*)* @_ZN3ots12OpenTypeVDMXD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeVDMX"*, i8*, i64)* @_ZN3ots12OpenTypeVDMX5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeVDMX"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeVDMX9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeVDMX"*)* @_ZN3ots12OpenTypeVDMX15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeVDMX5ParseEPKhm(%"class.ots::OpenTypeVDMX"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ots::OpenTypeVDMXGroup", align 8
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 1
  %8 = bitcast i8* %1 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #9
  store i16 %10, i16* %7, align 2
  %11 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 2
  %12 = icmp ult i64 %2, 4
  br i1 %12, label %20, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds i8, i8* %1, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #9
  store i16 %17, i16* %11, align 2
  %18 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 3
  %19 = icmp ult i64 %2, 6
  br i1 %19, label %20, label %23

20:                                               ; preds = %13, %6, %3
  %21 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %22 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %21, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %557

23:                                               ; preds = %13
  %24 = getelementptr inbounds i8, i8* %1, i64 4
  %25 = bitcast i8* %24 to i16*
  %26 = load i16, i16* %25, align 1
  %27 = tail call i16 @llvm.bswap.i16(i16 %26) #9
  store i16 %27, i16* %18, align 2
  %28 = icmp ugt i16 %10, 1
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = zext i16 %10 to i32
  %31 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %32 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %31, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 %30) #9
  br label %557

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4
  %35 = zext i16 %27 to i64
  %36 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %34 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = ashr exact i64 %41, 2
  %43 = icmp ult i64 %42, %35
  %44 = inttoptr i64 %40 to %"struct.ots::OpenTypeVDMXRatioRecord"*
  br i1 %43, label %45, label %67

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 1
  %47 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %40
  %50 = ashr exact i64 %49, 2
  %51 = shl nuw nsw i64 %35, 2
  %52 = tail call i8* @_Znwm(i64 %51) #10
  %53 = bitcast i8* %52 to %"struct.ots::OpenTypeVDMXRatioRecord"*
  %54 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %53, i64 %50
  %55 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %54 to i64
  %56 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %53, i64 %35
  %57 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %56 to i64
  %58 = ptrtoint i8* %52 to i64
  %59 = icmp sgt i64 %49, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %44, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 %61, i64 %49, i1 false) #9
  br label %62

62:                                               ; preds = %60, %45
  store i64 %58, i64* %39, align 8
  store i64 %55, i64* %47, align 8
  store i64 %57, i64* %37, align 8
  %63 = icmp eq i64 %40, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %44, i64 0, i32 0
  tail call void @_ZdlPv(i8* %65) #10
  %66 = load i16, i16* %18, align 2
  br label %67

67:                                               ; preds = %33, %62, %64
  %68 = phi i16 [ %27, %33 ], [ %27, %62 ], [ %66, %64 ]
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %209, label %70

70:                                               ; preds = %67
  %71 = zext i16 %68 to i32
  %72 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 1
  %73 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %72 to i64*
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %34, i64 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %70, %204
  %76 = phi i32 [ %71, %70 ], [ %207, %204 ]
  %77 = phi i32 [ 0, %70 ], [ %205, %204 ]
  %78 = phi i64 [ 6, %70 ], [ %94, %204 ]
  %79 = or i64 %78, 1
  %80 = icmp ugt i64 %79, %2
  br i1 %80, label %96, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds i8, i8* %1, i64 %78
  %83 = load i8, i8* %82, align 1
  %84 = add nuw nsw i64 %78, 2
  %85 = icmp ugt i64 %84, %2
  br i1 %85, label %96, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds i8, i8* %1, i64 %79
  %88 = load i8, i8* %87, align 1
  %89 = add nuw nsw i64 %78, 3
  %90 = icmp ugt i64 %89, %2
  br i1 %90, label %96, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds i8, i8* %1, i64 %84
  %93 = load i8, i8* %92, align 1
  %94 = add nuw nsw i64 %78, 4
  %95 = icmp ugt i64 %94, %2
  br i1 %95, label %96, label %99

96:                                               ; preds = %91, %86, %81, %75
  %97 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %98 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %97, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 %77) #9
  br label %557

99:                                               ; preds = %91
  %100 = getelementptr inbounds i8, i8* %1, i64 %89
  %101 = load i8, i8* %100, align 1
  %102 = icmp ugt i8 %83, 1
  br i1 %102, label %103, label %107

103:                                              ; preds = %99
  %104 = zext i8 %83 to i32
  %105 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %106 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %105, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i32 %104) #9
  br label %557

107:                                              ; preds = %99
  %108 = icmp ugt i8 %93, %101
  br i1 %108, label %109, label %112

109:                                              ; preds = %107
  %110 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %111 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %110, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %557

112:                                              ; preds = %107
  %113 = add nsw i32 %76, -1
  %114 = icmp ult i32 %77, %113
  %115 = or i8 %93, %88
  %116 = or i8 %115, %101
  %117 = icmp eq i8 %116, 0
  %118 = and i1 %114, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %112
  %120 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %121 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %120, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %557

122:                                              ; preds = %112
  %123 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %72, align 8
  %124 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %36, align 8
  %125 = icmp eq %"struct.ots::OpenTypeVDMXRatioRecord"* %123, %124
  %126 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %124 to i64
  br i1 %125, label %141, label %127

127:                                              ; preds = %122
  %128 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"* %123 to i32*
  %129 = zext i8 %101 to i32
  %130 = shl nuw i32 %129, 24
  %131 = zext i8 %93 to i32
  %132 = shl nuw nsw i32 %131, 16
  %133 = zext i8 %88 to i32
  %134 = shl nuw nsw i32 %133, 8
  %135 = zext i8 %83 to i32
  %136 = or i32 %134, %135
  %137 = or i32 %136, %132
  %138 = or i32 %137, %130
  store i32 %138, i32* %128, align 1
  %139 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %123, i64 1
  %140 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %139 to i64
  store i64 %140, i64* %73, align 8
  br label %204

141:                                              ; preds = %122
  %142 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %123 to i64
  %143 = load i64, i64* %39, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 2
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 4611686018427387903
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = bitcast %"class.std::__1::vector"* %34 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #11
  unreachable

150:                                              ; preds = %141
  %151 = sub i64 %126, %143
  %152 = ashr exact i64 %151, 2
  %153 = icmp ult i64 %152, 2305843009213693951
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = ashr exact i64 %151, 1
  %156 = icmp ult i64 %155, %146
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 4611686018427387903
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  tail call void @abort() #11
  unreachable

162:                                              ; preds = %159, %150
  %163 = phi i64 [ %157, %159 ], [ 4611686018427387903, %150 ]
  %164 = shl i64 %163, 2
  %165 = tail call i8* @_Znwm(i64 %164) #10
  %166 = bitcast i8* %165 to %"struct.ots::OpenTypeVDMXRatioRecord"*
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi %"struct.ots::OpenTypeVDMXRatioRecord"* [ %166, %162 ], [ null, %154 ]
  %170 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %169, i64 %145
  %171 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %169, i64 %168
  %172 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %171 to i64
  %173 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"* %170 to i32*
  %174 = zext i8 %101 to i32
  %175 = shl nuw i32 %174, 24
  %176 = zext i8 %93 to i32
  %177 = shl nuw nsw i32 %176, 16
  %178 = zext i8 %88 to i32
  %179 = shl nuw nsw i32 %178, 8
  %180 = zext i8 %83 to i32
  %181 = or i32 %179, %180
  %182 = or i32 %181, %177
  %183 = or i32 %182, %175
  store i32 %183, i32* %173, align 1
  %184 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %170, i64 1
  %185 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %184 to i64
  %186 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %74, align 8
  %187 = load i64, i64* %73, align 8
  %188 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %186 to i64
  %189 = sub i64 %187, %188
  %190 = ashr exact i64 %189, 2
  %191 = sub nsw i64 0, %190
  %192 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %170, i64 %191
  %193 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %192 to i64
  %194 = icmp sgt i64 %189, 0
  br i1 %194, label %195, label %199

195:                                              ; preds = %167
  %196 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %192, i64 0, i32 0
  %197 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %186, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %196, i8* align 1 %197, i64 %189, i1 false) #9
  %198 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %74, align 8
  br label %199

199:                                              ; preds = %195, %167
  %200 = phi %"struct.ots::OpenTypeVDMXRatioRecord"* [ %186, %167 ], [ %198, %195 ]
  store i64 %193, i64* %39, align 8
  store i64 %185, i64* %73, align 8
  store i64 %172, i64* %37, align 8
  %201 = icmp eq %"struct.ots::OpenTypeVDMXRatioRecord"* %200, null
  br i1 %201, label %204, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %200, i64 0, i32 0
  tail call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %127, %199, %202
  %205 = add nuw nsw i32 %77, 1
  %206 = load i16, i16* %18, align 2
  %207 = zext i16 %206 to i32
  %208 = icmp ult i32 %205, %207
  br i1 %208, label %75, label %209

209:                                              ; preds = %204, %67
  %210 = phi i16 [ 0, %67 ], [ %206, %204 ]
  %211 = phi i64 [ 6, %67 ], [ %94, %204 ]
  %212 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5
  %213 = zext i16 %210 to i64
  %214 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %215 = bitcast i16** %214 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = bitcast %"class.std::__1::vector.29"* %212 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = sub i64 %216, %218
  %220 = ashr exact i64 %219, 1
  %221 = icmp ult i64 %220, %213
  br i1 %221, label %222, label %244

222:                                              ; preds = %209
  %223 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 1
  %224 = bitcast i16** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = sub i64 %225, %218
  %227 = ashr exact i64 %226, 1
  %228 = shl nuw nsw i64 %213, 1
  %229 = tail call i8* @_Znwm(i64 %228) #10
  %230 = bitcast i8* %229 to i16*
  %231 = getelementptr inbounds i16, i16* %230, i64 %227
  %232 = ptrtoint i16* %231 to i64
  %233 = getelementptr inbounds i16, i16* %230, i64 %213
  %234 = ptrtoint i16* %233 to i64
  %235 = ptrtoint i8* %229 to i64
  %236 = icmp sgt i64 %226, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %222
  %238 = inttoptr i64 %218 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %229, i8* align 2 %238, i64 %226, i1 false) #9
  br label %239

239:                                              ; preds = %237, %222
  store i64 %235, i64* %217, align 8
  store i64 %232, i64* %224, align 8
  store i64 %234, i64* %215, align 8
  %240 = icmp eq i64 %218, 0
  br i1 %240, label %244, label %241

241:                                              ; preds = %239
  %242 = inttoptr i64 %218 to i8*
  tail call void @_ZdlPv(i8* %242) #10
  %243 = load i16, i16* %18, align 2
  br label %244

244:                                              ; preds = %209, %239, %241
  %245 = phi i16 [ %210, %209 ], [ %210, %239 ], [ %243, %241 ]
  %246 = icmp eq i16 %245, 0
  br i1 %246, label %333, label %247

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 1
  %249 = bitcast i16** %248 to i64*
  %250 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %212, i64 0, i32 0, i32 0
  br label %251

251:                                              ; preds = %247, %328
  %252 = phi i32 [ 0, %247 ], [ %329, %328 ]
  %253 = phi i64 [ %211, %247 ], [ %254, %328 ]
  %254 = add nuw nsw i64 %253, 2
  %255 = icmp ugt i64 %254, %2
  br i1 %255, label %256, label %259

256:                                              ; preds = %251
  %257 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %258 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %257, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i32 %252) #9
  br label %557

259:                                              ; preds = %251
  %260 = getelementptr inbounds i8, i8* %1, i64 %253
  %261 = bitcast i8* %260 to i16*
  %262 = load i16, i16* %261, align 1
  %263 = tail call i16 @llvm.bswap.i16(i16 %262) #9
  %264 = zext i16 %263 to i64
  %265 = add i64 %211, %264
  %266 = icmp ult i64 %265, %2
  br i1 %266, label %271, label %267

267:                                              ; preds = %259
  %268 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %269 = zext i16 %263 to i32
  %270 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %268, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 %269, i32 %252) #9
  br label %557

271:                                              ; preds = %259
  %272 = load i16*, i16** %248, align 8
  %273 = load i16*, i16** %214, align 8
  %274 = icmp eq i16* %272, %273
  %275 = ptrtoint i16* %273 to i64
  br i1 %274, label %279, label %276

276:                                              ; preds = %271
  store i16 %263, i16* %272, align 2
  %277 = getelementptr inbounds i16, i16* %272, i64 1
  %278 = ptrtoint i16* %277 to i64
  store i64 %278, i64* %249, align 8
  br label %328

279:                                              ; preds = %271
  %280 = ptrtoint i16* %272 to i64
  %281 = load i64, i64* %217, align 8
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 1
  %284 = add nsw i64 %283, 1
  %285 = icmp slt i64 %284, 0
  br i1 %285, label %286, label %288

286:                                              ; preds = %279
  %287 = bitcast %"class.std::__1::vector.29"* %212 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %287) #11
  unreachable

288:                                              ; preds = %279
  %289 = sub i64 %275, %281
  %290 = ashr exact i64 %289, 1
  %291 = icmp ult i64 %290, 4611686018427387903
  %292 = icmp ult i64 %289, %284
  %293 = select i1 %292, i64 %284, i64 %289
  %294 = select i1 %291, i64 %293, i64 9223372036854775807
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %303, label %296

296:                                              ; preds = %288
  %297 = icmp slt i64 %294, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %296
  tail call void @abort() #11
  unreachable

299:                                              ; preds = %296
  %300 = shl i64 %294, 1
  %301 = tail call i8* @_Znwm(i64 %300) #10
  %302 = bitcast i8* %301 to i16*
  br label %303

303:                                              ; preds = %299, %288
  %304 = phi i16* [ %302, %299 ], [ null, %288 ]
  %305 = getelementptr inbounds i16, i16* %304, i64 %283
  %306 = getelementptr inbounds i16, i16* %304, i64 %294
  %307 = ptrtoint i16* %306 to i64
  store i16 %263, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %305, i64 1
  %309 = ptrtoint i16* %308 to i64
  %310 = load i16*, i16** %250, align 8
  %311 = load i64, i64* %249, align 8
  %312 = ptrtoint i16* %310 to i64
  %313 = sub i64 %311, %312
  %314 = ashr exact i64 %313, 1
  %315 = sub nsw i64 0, %314
  %316 = getelementptr inbounds i16, i16* %305, i64 %315
  %317 = ptrtoint i16* %316 to i64
  %318 = icmp sgt i64 %313, 0
  br i1 %318, label %319, label %323

319:                                              ; preds = %303
  %320 = bitcast i16* %316 to i8*
  %321 = bitcast i16* %310 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %320, i8* align 2 %321, i64 %313, i1 false) #9
  %322 = load i16*, i16** %250, align 8
  br label %323

323:                                              ; preds = %319, %303
  %324 = phi i16* [ %310, %303 ], [ %322, %319 ]
  store i64 %317, i64* %217, align 8
  store i64 %309, i64* %249, align 8
  store i64 %307, i64* %215, align 8
  %325 = icmp eq i16* %324, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %323
  %327 = bitcast i16* %324 to i8*
  tail call void @_ZdlPv(i8* %327) #10
  br label %328

328:                                              ; preds = %276, %323, %326
  %329 = add nuw nsw i32 %252, 1
  %330 = load i16, i16* %18, align 2
  %331 = zext i16 %330 to i32
  %332 = icmp ult i32 %329, %331
  br i1 %332, label %251, label %333

333:                                              ; preds = %328, %244
  %334 = phi i64 [ %211, %244 ], [ %254, %328 ]
  %335 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6
  %336 = load i16, i16* %11, align 4
  %337 = zext i16 %336 to i64
  tail call void @_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.36"* %335, i64 %337)
  %338 = load i16, i16* %11, align 4
  %339 = icmp eq i16 %338, 0
  br i1 %339, label %557, label %340

340:                                              ; preds = %333
  %341 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %4 to i8*
  %342 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 3
  %343 = bitcast %"class.std::__1::vector.38"* %342 to i8*
  %344 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 0
  %345 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 1
  %346 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 2
  %347 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %348 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %347 to i64*
  %349 = bitcast %"class.std::__1::vector.38"* %342 to i64*
  %350 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 3, i32 0, i32 1
  %351 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %350 to i64*
  %352 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %342, i64 0, i32 0, i32 0
  %353 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %354 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6, i32 0, i32 1
  %355 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %356 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %4 to i32*
  %357 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %354 to i64*
  %358 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %4, i64 0, i32 3, i32 0, i32 0
  %359 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %4 to i64*
  br label %364

360:                                              ; preds = %554
  %361 = load i16, i16* %11, align 4
  %362 = zext i16 %361 to i32
  %363 = icmp ult i32 %556, %362
  br i1 %363, label %364, label %557

364:                                              ; preds = %340, %360
  %365 = phi i32 [ 0, %340 ], [ %556, %360 ]
  %366 = phi i1 [ undef, %340 ], [ %547, %360 ]
  %367 = phi i64 [ %334, %340 ], [ %546, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %341) #9
  store i64 -6148914691236517206, i64* %359, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 24, i1 false) #9
  %368 = add i64 %367, 2
  %369 = icmp ugt i64 %368, %2
  br i1 %369, label %382, label %370

370:                                              ; preds = %364
  %371 = getelementptr inbounds i8, i8* %1, i64 %367
  %372 = bitcast i8* %371 to i16*
  %373 = load i16, i16* %372, align 1
  %374 = call i16 @llvm.bswap.i16(i16 %373) #9
  store i16 %374, i16* %344, align 8
  %375 = add i64 %367, 3
  %376 = icmp ugt i64 %375, %2
  br i1 %376, label %382, label %377

377:                                              ; preds = %370
  %378 = getelementptr inbounds i8, i8* %1, i64 %368
  %379 = load i8, i8* %378, align 1
  store i8 %379, i8* %345, align 2
  %380 = add i64 %367, 4
  %381 = icmp ugt i64 %380, %2
  br i1 %381, label %382, label %385

382:                                              ; preds = %377, %370, %364
  %383 = phi i64 [ %367, %364 ], [ %368, %370 ], [ %375, %377 ]
  %384 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %353, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 %365) #9
  br label %545

385:                                              ; preds = %377
  %386 = getelementptr inbounds i8, i8* %1, i64 %375
  %387 = load i8, i8* %386, align 1
  store i8 %387, i8* %346, align 1
  %388 = zext i16 %374 to i64
  %389 = icmp eq i16 %373, 0
  br i1 %389, label %500, label %390

390:                                              ; preds = %385
  %391 = mul nuw nsw i64 %388, 6
  %392 = call i8* @_Znwm(i64 %391) #10
  %393 = bitcast i8* %392 to %"struct.ots::OpenTypeVDMXVTable"*
  %394 = ptrtoint i8* %392 to i64
  %395 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %393, i64 %388
  %396 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %395 to i64
  store i64 %394, i64* %349, align 8
  store i64 %394, i64* %351, align 8
  store i64 %396, i64* %348, align 8
  br label %397

397:                                              ; preds = %390, %495
  %398 = phi i64 [ 0, %390 ], [ %496, %495 ]
  %399 = phi i64 [ %380, %390 ], [ %414, %495 ]
  %400 = add i64 %399, 2
  %401 = icmp ugt i64 %400, %2
  br i1 %401, label %416, label %402

402:                                              ; preds = %397
  %403 = getelementptr inbounds i8, i8* %1, i64 %399
  %404 = bitcast i8* %403 to i16*
  %405 = load i16, i16* %404, align 1
  %406 = call i16 @llvm.bswap.i16(i16 %405) #9
  %407 = add i64 %399, 4
  %408 = icmp ugt i64 %407, %2
  br i1 %408, label %416, label %409

409:                                              ; preds = %402
  %410 = getelementptr inbounds i8, i8* %1, i64 %400
  %411 = bitcast i8* %410 to i16*
  %412 = load i16, i16* %411, align 1
  %413 = call i16 @llvm.bswap.i16(i16 %412) #9
  %414 = add i64 %399, 6
  %415 = icmp ugt i64 %414, %2
  br i1 %415, label %416, label %420

416:                                              ; preds = %409, %402, %397
  %417 = phi i64 [ %399, %397 ], [ %400, %402 ], [ %407, %409 ]
  %418 = trunc i64 %398 to i32
  %419 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %353, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 %365, i32 %418) #9
  br label %545

420:                                              ; preds = %409
  %421 = getelementptr inbounds i8, i8* %1, i64 %407
  %422 = bitcast i8* %421 to i16*
  %423 = load i16, i16* %422, align 1
  %424 = call i16 @llvm.bswap.i16(i16 %423) #9
  %425 = icmp slt i16 %413, %424
  br i1 %425, label %426, label %428

426:                                              ; preds = %420
  %427 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %353, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %545

428:                                              ; preds = %420
  %429 = icmp eq i64 %398, 0
  br i1 %429, label %439, label %430

430:                                              ; preds = %428
  %431 = add nuw i64 %398, 4294967295
  %432 = and i64 %431, 4294967295
  %433 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %352, align 8
  %434 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %433, i64 %432, i32 0
  %435 = load i16, i16* %434, align 2
  %436 = icmp ult i16 %435, %406
  br i1 %436, label %439, label %437

437:                                              ; preds = %430
  %438 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %353, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %545

439:                                              ; preds = %430, %428
  %440 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %350, align 8
  %441 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %347, align 8
  %442 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %440, %441
  %443 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %441 to i64
  br i1 %442, label %450, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %440, i64 0, i32 0
  store i16 %406, i16* %445, align 2
  %446 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %440, i64 0, i32 1
  store i16 %413, i16* %446, align 2
  %447 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %440, i64 0, i32 2
  store i16 %424, i16* %447, align 2
  %448 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %440, i64 1
  %449 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %448 to i64
  store i64 %449, i64* %351, align 8
  br label %495

450:                                              ; preds = %439
  %451 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %440 to i64
  %452 = load i64, i64* %349, align 8
  %453 = sub i64 %451, %452
  %454 = sdiv exact i64 %453, 6
  %455 = add nsw i64 %454, 1
  %456 = icmp ugt i64 %455, 3074457345618258602
  br i1 %456, label %457, label %459

457:                                              ; preds = %450
  %458 = bitcast %"class.std::__1::vector.38"* %342 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %458) #11
  unreachable

459:                                              ; preds = %450
  %460 = sub i64 %443, %452
  %461 = sdiv exact i64 %460, 6
  %462 = icmp ult i64 %461, 1537228672809129301
  br i1 %462, label %463, label %468

463:                                              ; preds = %459
  %464 = shl nsw i64 %461, 1
  %465 = icmp ult i64 %464, %455
  %466 = select i1 %465, i64 %455, i64 %464
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %473, label %468

468:                                              ; preds = %463, %459
  %469 = phi i64 [ %466, %463 ], [ 3074457345618258602, %459 ]
  %470 = mul i64 %469, 6
  %471 = call i8* @_Znwm(i64 %470) #10
  %472 = bitcast i8* %471 to %"struct.ots::OpenTypeVDMXVTable"*
  br label %473

473:                                              ; preds = %468, %463
  %474 = phi i64 [ %469, %468 ], [ 0, %463 ]
  %475 = phi %"struct.ots::OpenTypeVDMXVTable"* [ %472, %468 ], [ null, %463 ]
  %476 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %475, i64 %454
  %477 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %475, i64 %474
  %478 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %477 to i64
  %479 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %476, i64 0, i32 0
  store i16 %406, i16* %479, align 2
  %480 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %475, i64 %454, i32 1
  store i16 %413, i16* %480, align 2
  %481 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %475, i64 %454, i32 2
  store i16 %424, i16* %481, align 2
  %482 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %476, i64 1
  %483 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %482 to i64
  %484 = sdiv exact i64 %453, -6
  %485 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %476, i64 %484
  %486 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %485 to i64
  %487 = icmp sgt i64 %453, 0
  br i1 %487, label %488, label %491

488:                                              ; preds = %473
  %489 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %485 to i8*
  %490 = inttoptr i64 %452 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %489, i8* align 2 %490, i64 %453, i1 false) #9
  br label %491

491:                                              ; preds = %488, %473
  store i64 %486, i64* %349, align 8
  store i64 %483, i64* %351, align 8
  store i64 %478, i64* %348, align 8
  %492 = icmp eq i64 %452, 0
  br i1 %492, label %495, label %493

493:                                              ; preds = %491
  %494 = inttoptr i64 %452 to i8*
  call void @_ZdlPv(i8* %494) #10
  br label %495

495:                                              ; preds = %444, %491, %493
  %496 = add nuw nsw i64 %398, 1
  %497 = load i16, i16* %344, align 8
  %498 = zext i16 %497 to i64
  %499 = icmp ult i64 %496, %498
  br i1 %499, label %397, label %500

500:                                              ; preds = %495, %385
  %501 = phi i64 [ %380, %385 ], [ %414, %495 ]
  %502 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %354, align 8
  %503 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %355, align 8
  %504 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %502, %503
  br i1 %504, label %544, label %505

505:                                              ; preds = %500
  %506 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %502 to i32*
  %507 = load i32, i32* %356, align 8
  store i32 %507, i32* %506, align 8
  %508 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %502, i64 0, i32 3
  %509 = bitcast %"class.std::__1::vector.38"* %508 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %509, i8 0, i64 24, i1 false) #9
  %510 = load i64, i64* %351, align 8
  %511 = load i64, i64* %349, align 8
  %512 = sub i64 %510, %511
  %513 = sdiv exact i64 %512, 6
  %514 = icmp eq i64 %512, 0
  br i1 %514, label %541, label %515

515:                                              ; preds = %505
  %516 = icmp ugt i64 %513, 3074457345618258602
  br i1 %516, label %517, label %519

517:                                              ; preds = %515
  %518 = bitcast %"class.std::__1::vector.38"* %508 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %518) #11
  unreachable

519:                                              ; preds = %515
  %520 = call i8* @_Znwm(i64 %512) #10
  %521 = bitcast i8* %520 to %"struct.ots::OpenTypeVDMXVTable"*
  %522 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %502, i64 0, i32 3, i32 0, i32 1
  %523 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %522 to i8**
  store i8* %520, i8** %523, align 8
  %524 = bitcast %"class.std::__1::vector.38"* %508 to i8**
  store i8* %520, i8** %524, align 8
  %525 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %521, i64 %513
  %526 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %502, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"struct.ots::OpenTypeVDMXVTable"* %525, %"struct.ots::OpenTypeVDMXVTable"** %526, align 8
  %527 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %352, align 8
  %528 = load i64, i64* %351, align 8
  %529 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %522 to i64*
  %530 = ptrtoint i8* %520 to i64
  %531 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %527 to i64
  %532 = sub i64 %528, %531
  %533 = icmp sgt i64 %532, 0
  br i1 %533, label %534, label %539

534:                                              ; preds = %519
  %535 = udiv exact i64 %532, 6
  %536 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %527 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %520, i8* align 2 %536, i64 %532, i1 false) #9
  %537 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %521, i64 %535
  %538 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %537 to i64
  br label %539

539:                                              ; preds = %534, %519
  %540 = phi i64 [ %538, %534 ], [ %530, %519 ]
  store i64 %540, i64* %529, align 8
  br label %541

541:                                              ; preds = %539, %505
  %542 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %502, i64 1
  %543 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %542 to i64
  store i64 %543, i64* %357, align 8
  br label %545

544:                                              ; preds = %500
  call void @_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.36"* %335, %"struct.ots::OpenTypeVDMXGroup"* nonnull dereferenceable(32) %4) #9
  br label %545

545:                                              ; preds = %416, %437, %426, %544, %541, %382
  %546 = phi i64 [ %383, %382 ], [ %501, %541 ], [ %501, %544 ], [ %417, %416 ], [ %414, %437 ], [ %414, %426 ]
  %547 = phi i1 [ %384, %382 ], [ %366, %541 ], [ %366, %544 ], [ %419, %416 ], [ %438, %437 ], [ %427, %426 ]
  %548 = phi i32 [ 1, %382 ], [ 0, %541 ], [ 0, %544 ], [ 1, %416 ], [ 1, %437 ], [ 1, %426 ]
  %549 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %358, align 8
  %550 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %549, null
  br i1 %550, label %554, label %551

551:                                              ; preds = %545
  %552 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %549 to i64
  store i64 %552, i64* %351, align 8
  %553 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %549 to i8*
  call void @_ZdlPv(i8* %553) #10
  br label %554

554:                                              ; preds = %545, %551
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %341) #9
  %555 = icmp eq i32 %548, 0
  %556 = add nuw nsw i32 %365, 1
  br i1 %555, label %360, label %557

557:                                              ; preds = %360, %554, %333, %256, %267, %96, %119, %109, %103, %29, %20
  %558 = phi i1 [ %32, %29 ], [ %22, %20 ], [ %98, %96 ], [ %121, %119 ], [ %111, %109 ], [ %106, %103 ], [ %258, %256 ], [ %270, %267 ], [ true, %333 ], [ true, %360 ], [ %547, %554 ]
  ret i1 %558
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.36"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"struct.ots::OpenTypeVDMXGroup"*
  br i1 %10, label %12, label %143

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"struct.ots::OpenTypeVDMXGroup"*
  %24 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %23, i64 %20
  %25 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %24 to i64
  %26 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %23, i64 %1
  %27 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %26 to i64
  %28 = inttoptr i64 %18 to %"struct.ots::OpenTypeVDMXGroup"*
  %29 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %28, %11
  br i1 %29, label %120, label %30

30:                                               ; preds = %17
  %31 = getelementptr %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %28, i64 -1, i32 0
  %32 = bitcast i16* %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = and i64 %35, 32
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %61

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %24, i64 -1
  %40 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %28, i64 -1
  %41 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %40 to i32*
  %42 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %39 to i32*
  %43 = load i32, i32* %41, align 8
  store i32 %43, i32* %42, align 8
  %44 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %24, i64 -1, i32 3
  %45 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %28, i64 -1, i32 3
  %46 = bitcast %"class.std::__1::vector.38"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9
  %47 = bitcast %"class.std::__1::vector.38"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.38"* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %28, i64 -1, i32 3, i32 0, i32 1
  %51 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %24, i64 -1, i32 3, i32 0, i32 1
  %54 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %28, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %24, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"class.std::__1::vector.38"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #9
  br label %61

61:                                               ; preds = %38, %30
  %62 = phi %"struct.ots::OpenTypeVDMXGroup"* [ undef, %30 ], [ %39, %38 ]
  %63 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %24, %30 ], [ %39, %38 ]
  %64 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %28, %30 ], [ %40, %38 ]
  %65 = icmp ult i8* %34, inttoptr (i64 32 to i8*)
  br i1 %65, label %114, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %91, %66 ], [ %63, %61 ]
  %68 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %92, %66 ], [ %64, %61 ]
  %69 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -1
  %70 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -1
  %71 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %70 to i32*
  %72 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %69 to i32*
  %73 = load i32, i32* %71, align 8
  store i32 %73, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -1, i32 3
  %75 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -1, i32 3
  %76 = bitcast %"class.std::__1::vector.38"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 24, i1 false) #9
  %77 = bitcast %"class.std::__1::vector.38"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.std::__1::vector.38"* %74 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -1, i32 3, i32 0, i32 1
  %81 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -1, i32 3, i32 0, i32 1
  %84 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %86 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %89 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast %"class.std::__1::vector.38"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 24, i1 false) #9
  %91 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -2
  %92 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -2
  %93 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %92 to i32*
  %94 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %91 to i32*
  %95 = load i32, i32* %93, align 8
  store i32 %95, i32* %94, align 8
  %96 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -2, i32 3
  %97 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -2, i32 3
  %98 = bitcast %"class.std::__1::vector.38"* %96 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #9
  %99 = bitcast %"class.std::__1::vector.38"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.std::__1::vector.38"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -2, i32 3, i32 0, i32 1
  %103 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -2, i32 3, i32 0, i32 1
  %106 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %68, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %67, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %111 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = bitcast %"class.std::__1::vector.38"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 24, i1 false) #9
  %113 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %92, %11
  br i1 %113, label %114, label %66

114:                                              ; preds = %66, %61
  %115 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %62, %61 ], [ %91, %66 ]
  %116 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %115 to i64
  %117 = load i64, i64* %6, align 8
  %118 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %13, align 8
  %119 = inttoptr i64 %117 to %"struct.ots::OpenTypeVDMXGroup"*
  br label %120

120:                                              ; preds = %17, %114
  %121 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %119, %114 ], [ %28, %17 ]
  %122 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %118, %114 ], [ %11, %17 ]
  %123 = phi i64 [ %116, %114 ], [ %25, %17 ]
  %124 = phi i64 [ %117, %114 ], [ %18, %17 ]
  store i64 %123, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %125 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %122, %121
  br i1 %125, label %139, label %126

126:                                              ; preds = %120, %137
  %127 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %128, %137 ], [ %122, %120 ]
  %128 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %127, i64 -1
  %129 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %127, i64 -1, i32 3, i32 0, i32 0
  %130 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %129, align 8
  %131 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %126
  %133 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %130 to i64
  %134 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %127, i64 -1, i32 3, i32 0, i32 1
  %135 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %134 to i64*
  store i64 %133, i64* %135, align 8
  %136 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %130 to i8*
  tail call void @_ZdlPv(i8* %136) #10
  br label %137

137:                                              ; preds = %132, %126
  %138 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %128, %121
  br i1 %138, label %139, label %126

139:                                              ; preds = %137, %120
  %140 = icmp eq i64 %124, 0
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = inttoptr i64 %124 to i8*
  tail call void @_ZdlPv(i8* %142) #10
  br label %143

143:                                              ; preds = %141, %139, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeVDMX15ShouldSerializeEv(%"class.ots::OpenTypeVDMX"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %3 = tail call zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"* %2) #9
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 0, i32 3
  %6 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %7 = tail call %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"* %6, i32 1735162214) #9
  %8 = icmp ne %"class.ots::Table"* %7, null
  br label %9

9:                                                ; preds = %4, %1
  %10 = phi i1 [ false, %1 ], [ %8, %4 ]
  ret i1 %10
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

declare %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeVDMX9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeVDMX"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i16, align 2
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i16, align 2
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i16, align 2
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 1
  %40 = load i16, i16* %39, align 2
  %41 = bitcast i16* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %41)
  %42 = tail call i16 @llvm.bswap.i16(i16 %40) #9
  store i16 %42, i16* %38, align 2
  %43 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %44 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %44, i64 4
  %46 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %45, align 8
  %47 = tail call i64 %46(%"class.ots::OTSStream"* %1) #9
  %48 = and i64 %47, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  br label %65

53:                                               ; preds = %2
  %54 = sub nuw nsw i64 4, %48
  %55 = icmp ult i64 %54, 2
  %56 = select i1 %55, i64 %54, i64 2
  %57 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %57) #9
  store i32 0, i32* %36, align 4
  %58 = getelementptr inbounds i8, i8* %57, i64 %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* nonnull align 2 %41, i64 %56, i1 false) #9
  %59 = load i32, i32* %36, align 4
  %60 = tail call i32 @llvm.bswap.i32(i32 %59) #9
  %61 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = add i32 %62, %60
  store i32 %63, i32* %61, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %57) #9
  %64 = icmp eq i64 %48, 3
  br i1 %64, label %65, label %75

65:                                               ; preds = %53, %50
  %66 = phi i32 [ %63, %53 ], [ %52, %50 ]
  %67 = phi i64 [ %56, %53 ], [ 0, %50 ]
  %68 = phi i64 [ 1, %53 ], [ 2, %50 ]
  %69 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %69)
  store i32 0, i32* %37, align 4
  %70 = getelementptr inbounds i8, i8* %41, i64 %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 1 %70, i64 %68, i1 false) #9
  %71 = load i32, i32* %37, align 4
  %72 = tail call i32 @llvm.bswap.i32(i32 %71) #9
  %73 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %74 = add i32 %72, %66
  store i32 %74, i32* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %69)
  br label %75

75:                                               ; preds = %53, %65
  %76 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %77 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %77, i64 2
  %79 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %78, align 8
  %80 = call zeroext i1 %79(%"class.ots::OTSStream"* %1, i8* nonnull %41, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %41)
  br i1 %80, label %81, label %181

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 2
  %83 = load i16, i16* %82, align 4
  %84 = bitcast i16* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %84)
  %85 = call i16 @llvm.bswap.i16(i16 %83) #9
  store i16 %85, i16* %35, align 2
  %86 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %87 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %86, i64 4
  %88 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %87, align 8
  %89 = call i64 %88(%"class.ots::OTSStream"* %1) #9
  %90 = and i64 %89, 3
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %94 = load i32, i32* %93, align 8
  br label %107

95:                                               ; preds = %81
  %96 = sub nuw nsw i64 4, %90
  %97 = icmp ult i64 %96, 2
  %98 = select i1 %97, i64 %96, i64 2
  %99 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #9
  store i32 0, i32* %33, align 4
  %100 = getelementptr inbounds i8, i8* %99, i64 %90
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* nonnull align 2 %84, i64 %98, i1 false) #9
  %101 = load i32, i32* %33, align 4
  %102 = call i32 @llvm.bswap.i32(i32 %101) #9
  %103 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  store i32 %105, i32* %103, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #9
  %106 = icmp eq i64 %90, 3
  br i1 %106, label %107, label %117

107:                                              ; preds = %95, %92
  %108 = phi i32 [ %105, %95 ], [ %94, %92 ]
  %109 = phi i64 [ %98, %95 ], [ 0, %92 ]
  %110 = phi i64 [ 1, %95 ], [ 2, %92 ]
  %111 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111)
  store i32 0, i32* %34, align 4
  %112 = getelementptr inbounds i8, i8* %84, i64 %109
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %111, i8* align 1 %112, i64 %110, i1 false) #9
  %113 = load i32, i32* %34, align 4
  %114 = call i32 @llvm.bswap.i32(i32 %113) #9
  %115 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %116 = add i32 %114, %108
  store i32 %116, i32* %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111)
  br label %117

117:                                              ; preds = %95, %107
  %118 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %119 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %118, i64 2
  %120 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %119, align 8
  %121 = call zeroext i1 %120(%"class.ots::OTSStream"* %1, i8* nonnull %84, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %84)
  br i1 %121, label %122, label %181

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 3
  %124 = load i16, i16* %123, align 2
  %125 = bitcast i16* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %125)
  %126 = call i16 @llvm.bswap.i16(i16 %124) #9
  store i16 %126, i16* %32, align 2
  %127 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %128 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %127, i64 4
  %129 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %128, align 8
  %130 = call i64 %129(%"class.ots::OTSStream"* %1) #9
  %131 = and i64 %130, 3
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %122
  %134 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  br label %148

136:                                              ; preds = %122
  %137 = sub nuw nsw i64 4, %131
  %138 = icmp ult i64 %137, 2
  %139 = select i1 %138, i64 %137, i64 2
  %140 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #9
  store i32 0, i32* %30, align 4
  %141 = getelementptr inbounds i8, i8* %140, i64 %131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* nonnull align 2 %125, i64 %139, i1 false) #9
  %142 = load i32, i32* %30, align 4
  %143 = call i32 @llvm.bswap.i32(i32 %142) #9
  %144 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  store i32 %146, i32* %144, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #9
  %147 = icmp eq i64 %131, 3
  br i1 %147, label %148, label %158

148:                                              ; preds = %136, %133
  %149 = phi i32 [ %146, %136 ], [ %135, %133 ]
  %150 = phi i64 [ %139, %136 ], [ 0, %133 ]
  %151 = phi i64 [ 1, %136 ], [ 2, %133 ]
  %152 = bitcast i32* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %152)
  store i32 0, i32* %31, align 4
  %153 = getelementptr inbounds i8, i8* %125, i64 %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %152, i8* align 1 %153, i64 %151, i1 false) #9
  %154 = load i32, i32* %31, align 4
  %155 = call i32 @llvm.bswap.i32(i32 %154) #9
  %156 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %157 = add i32 %155, %149
  store i32 %157, i32* %156, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %152)
  br label %158

158:                                              ; preds = %136, %148
  %159 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %160 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %159, i64 2
  %161 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %160, align 8
  %162 = call zeroext i1 %161(%"class.ots::OTSStream"* %1, i8* nonnull %125, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %125)
  br i1 %162, label %163, label %181

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4
  %165 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 1
  %166 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.std::__1::vector"* %164 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = icmp eq i64 %167, %169
  br i1 %170, label %184, label %171

171:                                              ; preds = %163
  %172 = bitcast i32* %28 to i8*
  %173 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %174 = bitcast i32* %29 to i8*
  %175 = bitcast i32* %26 to i8*
  %176 = bitcast i32* %27 to i8*
  %177 = bitcast i32* %24 to i8*
  %178 = bitcast i32* %25 to i8*
  %179 = bitcast i32* %22 to i8*
  %180 = bitcast i32* %23 to i8*
  br label %197

181:                                              ; preds = %158, %117, %75
  %182 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %183 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %182, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %622

184:                                              ; preds = %308, %163
  %185 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5
  %186 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 1
  %187 = bitcast i16** %186 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.std::__1::vector.29"* %185 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %188, %190
  br i1 %191, label %316, label %192

192:                                              ; preds = %184
  %193 = bitcast i16* %21 to i8*
  %194 = bitcast i32* %19 to i8*
  %195 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %196 = bitcast i32* %20 to i8*
  br label %342

197:                                              ; preds = %171, %308
  %198 = phi i64 [ %169, %171 ], [ %312, %308 ]
  %199 = phi i64 [ 0, %171 ], [ %310, %308 ]
  %200 = phi i32 [ 0, %171 ], [ %309, %308 ]
  %201 = inttoptr i64 %198 to %"struct.ots::OpenTypeVDMXRatioRecord"*
  %202 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %201, i64 %199, i32 0
  %203 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %204 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %203, i64 4
  %205 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %204, align 8
  %206 = call i64 %205(%"class.ots::OTSStream"* %1) #9
  %207 = and i64 %206, 3
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %216, label %209

209:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %172) #9
  store i32 0, i32* %28, align 4
  %210 = getelementptr inbounds i8, i8* %172, i64 %207
  %211 = load i8, i8* %202, align 1
  store i8 %211, i8* %210, align 1
  %212 = load i32, i32* %28, align 4
  %213 = call i32 @llvm.bswap.i32(i32 %212) #9
  %214 = load i32, i32* %173, align 8
  %215 = add i32 %214, %213
  store i32 %215, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %172) #9
  br label %222

216:                                              ; preds = %197
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %174)
  store i32 0, i32* %29, align 4
  %217 = load i8, i8* %202, align 1
  store i8 %217, i8* %174, align 4
  %218 = load i32, i32* %29, align 4
  %219 = call i32 @llvm.bswap.i32(i32 %218) #9
  %220 = load i32, i32* %173, align 8
  %221 = add i32 %220, %219
  store i32 %221, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %174)
  br label %222

222:                                              ; preds = %209, %216
  %223 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %224 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %223, i64 2
  %225 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %224, align 8
  %226 = call zeroext i1 %225(%"class.ots::OTSStream"* %1, i8* %202, i64 1) #9
  br i1 %226, label %227, label %305

227:                                              ; preds = %222
  %228 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %201, i64 %199, i32 1
  %229 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %230 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %229, i64 4
  %231 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %230, align 8
  %232 = call i64 %231(%"class.ots::OTSStream"* %1) #9
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %242, label %235

235:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175) #9
  store i32 0, i32* %26, align 4
  %236 = getelementptr inbounds i8, i8* %175, i64 %233
  %237 = load i8, i8* %228, align 1
  store i8 %237, i8* %236, align 1
  %238 = load i32, i32* %26, align 4
  %239 = call i32 @llvm.bswap.i32(i32 %238) #9
  %240 = load i32, i32* %173, align 8
  %241 = add i32 %240, %239
  store i32 %241, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175) #9
  br label %248

242:                                              ; preds = %227
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176)
  store i32 0, i32* %27, align 4
  %243 = load i8, i8* %228, align 1
  store i8 %243, i8* %176, align 4
  %244 = load i32, i32* %27, align 4
  %245 = call i32 @llvm.bswap.i32(i32 %244) #9
  %246 = load i32, i32* %173, align 8
  %247 = add i32 %246, %245
  store i32 %247, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176)
  br label %248

248:                                              ; preds = %235, %242
  %249 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %250 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %249, i64 2
  %251 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %250, align 8
  %252 = call zeroext i1 %251(%"class.ots::OTSStream"* %1, i8* %228, i64 1) #9
  br i1 %252, label %253, label %305

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %201, i64 %199, i32 2
  %255 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %256 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %255, i64 4
  %257 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %256, align 8
  %258 = call i64 %257(%"class.ots::OTSStream"* %1) #9
  %259 = and i64 %258, 3
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %268, label %261

261:                                              ; preds = %253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %177) #9
  store i32 0, i32* %24, align 4
  %262 = getelementptr inbounds i8, i8* %177, i64 %259
  %263 = load i8, i8* %254, align 1
  store i8 %263, i8* %262, align 1
  %264 = load i32, i32* %24, align 4
  %265 = call i32 @llvm.bswap.i32(i32 %264) #9
  %266 = load i32, i32* %173, align 8
  %267 = add i32 %266, %265
  store i32 %267, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %177) #9
  br label %274

268:                                              ; preds = %253
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178)
  store i32 0, i32* %25, align 4
  %269 = load i8, i8* %254, align 1
  store i8 %269, i8* %178, align 4
  %270 = load i32, i32* %25, align 4
  %271 = call i32 @llvm.bswap.i32(i32 %270) #9
  %272 = load i32, i32* %173, align 8
  %273 = add i32 %272, %271
  store i32 %273, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178)
  br label %274

274:                                              ; preds = %261, %268
  %275 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %276 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %275, i64 2
  %277 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %276, align 8
  %278 = call zeroext i1 %277(%"class.ots::OTSStream"* %1, i8* %254, i64 1) #9
  br i1 %278, label %279, label %305

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %201, i64 %199, i32 3
  %281 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %282 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %281, i64 4
  %283 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %282, align 8
  %284 = call i64 %283(%"class.ots::OTSStream"* %1) #9
  %285 = and i64 %284, 3
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %294, label %287

287:                                              ; preds = %279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %179) #9
  store i32 0, i32* %22, align 4
  %288 = getelementptr inbounds i8, i8* %179, i64 %285
  %289 = load i8, i8* %280, align 1
  store i8 %289, i8* %288, align 1
  %290 = load i32, i32* %22, align 4
  %291 = call i32 @llvm.bswap.i32(i32 %290) #9
  %292 = load i32, i32* %173, align 8
  %293 = add i32 %292, %291
  store i32 %293, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %179) #9
  br label %300

294:                                              ; preds = %279
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %180)
  store i32 0, i32* %23, align 4
  %295 = load i8, i8* %280, align 1
  store i8 %295, i8* %180, align 4
  %296 = load i32, i32* %23, align 4
  %297 = call i32 @llvm.bswap.i32(i32 %296) #9
  %298 = load i32, i32* %173, align 8
  %299 = add i32 %298, %297
  store i32 %299, i32* %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %180)
  br label %300

300:                                              ; preds = %287, %294
  %301 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %302 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %301, i64 2
  %303 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %302, align 8
  %304 = call zeroext i1 %303(%"class.ots::OTSStream"* %1, i8* %280, i64 1) #9
  br i1 %304, label %308, label %305

305:                                              ; preds = %300, %274, %248, %222
  %306 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %307 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %306, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0), i32 %200) #9
  br label %622

308:                                              ; preds = %300
  %309 = add i32 %200, 1
  %310 = zext i32 %309 to i64
  %311 = load i64, i64* %166, align 8
  %312 = load i64, i64* %168, align 8
  %313 = sub i64 %311, %312
  %314 = ashr exact i64 %313, 2
  %315 = icmp ugt i64 %314, %310
  br i1 %315, label %197, label %184

316:                                              ; preds = %384, %184
  %317 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6
  %318 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6, i32 0, i32 1
  %319 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = bitcast %"class.std::__1::vector.36"* %317 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = icmp eq i64 %320, %322
  br i1 %323, label %622, label %324

324:                                              ; preds = %316
  %325 = bitcast i16* %18 to i8*
  %326 = bitcast i32* %16 to i8*
  %327 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %328 = bitcast i32* %17 to i8*
  %329 = bitcast i32* %14 to i8*
  %330 = bitcast i32* %15 to i8*
  %331 = bitcast i32* %12 to i8*
  %332 = bitcast i32* %13 to i8*
  %333 = bitcast i16* %11 to i8*
  %334 = bitcast i32* %9 to i8*
  %335 = bitcast i32* %10 to i8*
  %336 = bitcast i16* %8 to i8*
  %337 = bitcast i32* %6 to i8*
  %338 = bitcast i32* %7 to i8*
  %339 = bitcast i16* %5 to i8*
  %340 = bitcast i32* %3 to i8*
  %341 = bitcast i32* %4 to i8*
  br label %392

342:                                              ; preds = %192, %384
  %343 = phi i64 [ %190, %192 ], [ %388, %384 ]
  %344 = phi i64 [ 0, %192 ], [ %386, %384 ]
  %345 = phi i32 [ 0, %192 ], [ %385, %384 ]
  %346 = inttoptr i64 %343 to i16*
  %347 = getelementptr inbounds i16, i16* %346, i64 %344
  %348 = load i16, i16* %347, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %193)
  %349 = call i16 @llvm.bswap.i16(i16 %348) #9
  store i16 %349, i16* %21, align 2
  %350 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %351 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %350, i64 4
  %352 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %351, align 8
  %353 = call i64 %352(%"class.ots::OTSStream"* %1) #9
  %354 = and i64 %353, 3
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %358

356:                                              ; preds = %342
  %357 = load i32, i32* %195, align 8
  br label %368

358:                                              ; preds = %342
  %359 = sub nuw nsw i64 4, %354
  %360 = icmp ult i64 %359, 2
  %361 = select i1 %360, i64 %359, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %194) #9
  store i32 0, i32* %19, align 4
  %362 = getelementptr inbounds i8, i8* %194, i64 %354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %362, i8* nonnull align 2 %193, i64 %361, i1 false) #9
  %363 = load i32, i32* %19, align 4
  %364 = call i32 @llvm.bswap.i32(i32 %363) #9
  %365 = load i32, i32* %195, align 8
  %366 = add i32 %365, %364
  store i32 %366, i32* %195, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %194) #9
  %367 = icmp eq i64 %354, 3
  br i1 %367, label %368, label %376

368:                                              ; preds = %358, %356
  %369 = phi i32 [ %366, %358 ], [ %357, %356 ]
  %370 = phi i64 [ %361, %358 ], [ 0, %356 ]
  %371 = phi i64 [ 1, %358 ], [ 2, %356 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %196)
  store i32 0, i32* %20, align 4
  %372 = getelementptr inbounds i8, i8* %193, i64 %370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %196, i8* align 1 %372, i64 %371, i1 false) #9
  %373 = load i32, i32* %20, align 4
  %374 = call i32 @llvm.bswap.i32(i32 %373) #9
  %375 = add i32 %374, %369
  store i32 %375, i32* %195, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %196)
  br label %376

376:                                              ; preds = %358, %368
  %377 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %378 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %377, i64 2
  %379 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %378, align 8
  %380 = call zeroext i1 %379(%"class.ots::OTSStream"* %1, i8* nonnull %193, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %193)
  br i1 %380, label %384, label %381

381:                                              ; preds = %376
  %382 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %383 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %382, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i32 %345) #9
  br label %622

384:                                              ; preds = %376
  %385 = add i32 %345, 1
  %386 = zext i32 %385 to i64
  %387 = load i64, i64* %187, align 8
  %388 = load i64, i64* %189, align 8
  %389 = sub i64 %387, %388
  %390 = ashr exact i64 %389, 1
  %391 = icmp ugt i64 %390, %386
  br i1 %391, label %342, label %316

392:                                              ; preds = %324, %614
  %393 = phi i64 [ %322, %324 ], [ %618, %614 ]
  %394 = phi i64 [ 0, %324 ], [ %616, %614 ]
  %395 = phi i32 [ 0, %324 ], [ %615, %614 ]
  %396 = inttoptr i64 %393 to %"struct.ots::OpenTypeVDMXGroup"*
  %397 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %396, i64 %394, i32 0
  %398 = load i16, i16* %397, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %325)
  %399 = call i16 @llvm.bswap.i16(i16 %398) #9
  store i16 %399, i16* %18, align 2
  %400 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %401 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %400, i64 4
  %402 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %401, align 8
  %403 = call i64 %402(%"class.ots::OTSStream"* %1) #9
  %404 = and i64 %403, 3
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %406, label %408

406:                                              ; preds = %392
  %407 = load i32, i32* %327, align 8
  br label %418

408:                                              ; preds = %392
  %409 = sub nuw nsw i64 4, %404
  %410 = icmp ult i64 %409, 2
  %411 = select i1 %410, i64 %409, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %326) #9
  store i32 0, i32* %16, align 4
  %412 = getelementptr inbounds i8, i8* %326, i64 %404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %412, i8* nonnull align 2 %325, i64 %411, i1 false) #9
  %413 = load i32, i32* %16, align 4
  %414 = call i32 @llvm.bswap.i32(i32 %413) #9
  %415 = load i32, i32* %327, align 8
  %416 = add i32 %415, %414
  store i32 %416, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %326) #9
  %417 = icmp eq i64 %404, 3
  br i1 %417, label %418, label %426

418:                                              ; preds = %408, %406
  %419 = phi i32 [ %416, %408 ], [ %407, %406 ]
  %420 = phi i64 [ %411, %408 ], [ 0, %406 ]
  %421 = phi i64 [ 1, %408 ], [ 2, %406 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %328)
  store i32 0, i32* %17, align 4
  %422 = getelementptr inbounds i8, i8* %325, i64 %420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %328, i8* align 1 %422, i64 %421, i1 false) #9
  %423 = load i32, i32* %17, align 4
  %424 = call i32 @llvm.bswap.i32(i32 %423) #9
  %425 = add i32 %424, %419
  store i32 %425, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %328)
  br label %426

426:                                              ; preds = %408, %418
  %427 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %428 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %427, i64 2
  %429 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %428, align 8
  %430 = call zeroext i1 %429(%"class.ots::OTSStream"* %1, i8* nonnull %325, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %325)
  br i1 %430, label %431, label %491

431:                                              ; preds = %426
  %432 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %396, i64 %394, i32 1
  %433 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %434 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %433, i64 4
  %435 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %434, align 8
  %436 = call i64 %435(%"class.ots::OTSStream"* %1) #9
  %437 = and i64 %436, 3
  %438 = icmp eq i64 %437, 0
  br i1 %438, label %446, label %439

439:                                              ; preds = %431
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %329) #9
  store i32 0, i32* %14, align 4
  %440 = getelementptr inbounds i8, i8* %329, i64 %437
  %441 = load i8, i8* %432, align 1
  store i8 %441, i8* %440, align 1
  %442 = load i32, i32* %14, align 4
  %443 = call i32 @llvm.bswap.i32(i32 %442) #9
  %444 = load i32, i32* %327, align 8
  %445 = add i32 %444, %443
  store i32 %445, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %329) #9
  br label %452

446:                                              ; preds = %431
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %330)
  store i32 0, i32* %15, align 4
  %447 = load i8, i8* %432, align 1
  store i8 %447, i8* %330, align 4
  %448 = load i32, i32* %15, align 4
  %449 = call i32 @llvm.bswap.i32(i32 %448) #9
  %450 = load i32, i32* %327, align 8
  %451 = add i32 %450, %449
  store i32 %451, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %330)
  br label %452

452:                                              ; preds = %439, %446
  %453 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %454 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %453, i64 2
  %455 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %454, align 8
  %456 = call zeroext i1 %455(%"class.ots::OTSStream"* %1, i8* %432, i64 1) #9
  br i1 %456, label %457, label %491

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %396, i64 %394, i32 2
  %459 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %460 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %459, i64 4
  %461 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %460, align 8
  %462 = call i64 %461(%"class.ots::OTSStream"* %1) #9
  %463 = and i64 %462, 3
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %472, label %465

465:                                              ; preds = %457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %331) #9
  store i32 0, i32* %12, align 4
  %466 = getelementptr inbounds i8, i8* %331, i64 %463
  %467 = load i8, i8* %458, align 1
  store i8 %467, i8* %466, align 1
  %468 = load i32, i32* %12, align 4
  %469 = call i32 @llvm.bswap.i32(i32 %468) #9
  %470 = load i32, i32* %327, align 8
  %471 = add i32 %470, %469
  store i32 %471, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %331) #9
  br label %478

472:                                              ; preds = %457
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %332)
  store i32 0, i32* %13, align 4
  %473 = load i8, i8* %458, align 1
  store i8 %473, i8* %332, align 4
  %474 = load i32, i32* %13, align 4
  %475 = call i32 @llvm.bswap.i32(i32 %474) #9
  %476 = load i32, i32* %327, align 8
  %477 = add i32 %476, %475
  store i32 %477, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %332)
  br label %478

478:                                              ; preds = %465, %472
  %479 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %480 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %479, i64 2
  %481 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %480, align 8
  %482 = call zeroext i1 %481(%"class.ots::OTSStream"* %1, i8* %458, i64 1) #9
  br i1 %482, label %483, label %491

483:                                              ; preds = %478
  %484 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %396, i64 %394, i32 3
  %485 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %396, i64 %394, i32 3, i32 0, i32 1
  %486 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = bitcast %"class.std::__1::vector.38"* %484 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = icmp eq i64 %487, %489
  br i1 %490, label %614, label %494

491:                                              ; preds = %478, %452, %426
  %492 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %493 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %492, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i32 %395) #9
  br label %622

494:                                              ; preds = %483, %603
  %495 = phi i64 [ %607, %603 ], [ %489, %483 ]
  %496 = phi i64 [ %605, %603 ], [ 0, %483 ]
  %497 = phi i32 [ %604, %603 ], [ 0, %483 ]
  %498 = inttoptr i64 %495 to %"struct.ots::OpenTypeVDMXVTable"*
  %499 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %498, i64 %496, i32 0
  %500 = load i16, i16* %499, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %333)
  %501 = call i16 @llvm.bswap.i16(i16 %500) #9
  store i16 %501, i16* %11, align 2
  %502 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %503 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %502, i64 4
  %504 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %503, align 8
  %505 = call i64 %504(%"class.ots::OTSStream"* %1) #9
  %506 = and i64 %505, 3
  %507 = icmp eq i64 %506, 0
  br i1 %507, label %508, label %510

508:                                              ; preds = %494
  %509 = load i32, i32* %327, align 8
  br label %520

510:                                              ; preds = %494
  %511 = sub nuw nsw i64 4, %506
  %512 = icmp ult i64 %511, 2
  %513 = select i1 %512, i64 %511, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %334) #9
  store i32 0, i32* %9, align 4
  %514 = getelementptr inbounds i8, i8* %334, i64 %506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %514, i8* nonnull align 2 %333, i64 %513, i1 false) #9
  %515 = load i32, i32* %9, align 4
  %516 = call i32 @llvm.bswap.i32(i32 %515) #9
  %517 = load i32, i32* %327, align 8
  %518 = add i32 %517, %516
  store i32 %518, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %334) #9
  %519 = icmp eq i64 %506, 3
  br i1 %519, label %520, label %528

520:                                              ; preds = %510, %508
  %521 = phi i32 [ %518, %510 ], [ %509, %508 ]
  %522 = phi i64 [ %513, %510 ], [ 0, %508 ]
  %523 = phi i64 [ 1, %510 ], [ 2, %508 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %335)
  store i32 0, i32* %10, align 4
  %524 = getelementptr inbounds i8, i8* %333, i64 %522
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %335, i8* align 1 %524, i64 %523, i1 false) #9
  %525 = load i32, i32* %10, align 4
  %526 = call i32 @llvm.bswap.i32(i32 %525) #9
  %527 = add i32 %526, %521
  store i32 %527, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %335)
  br label %528

528:                                              ; preds = %510, %520
  %529 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %530 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %529, i64 2
  %531 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %530, align 8
  %532 = call zeroext i1 %531(%"class.ots::OTSStream"* %1, i8* nonnull %333, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %333)
  br i1 %532, label %533, label %611

533:                                              ; preds = %528
  %534 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %498, i64 %496, i32 1
  %535 = load i16, i16* %534, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %336)
  %536 = call i16 @llvm.bswap.i16(i16 %535) #9
  store i16 %536, i16* %8, align 2
  %537 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %538 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %537, i64 4
  %539 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %538, align 8
  %540 = call i64 %539(%"class.ots::OTSStream"* %1) #9
  %541 = and i64 %540, 3
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %545

543:                                              ; preds = %533
  %544 = load i32, i32* %327, align 8
  br label %555

545:                                              ; preds = %533
  %546 = sub nuw nsw i64 4, %541
  %547 = icmp ult i64 %546, 2
  %548 = select i1 %547, i64 %546, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %337) #9
  store i32 0, i32* %6, align 4
  %549 = getelementptr inbounds i8, i8* %337, i64 %541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %549, i8* nonnull align 2 %336, i64 %548, i1 false) #9
  %550 = load i32, i32* %6, align 4
  %551 = call i32 @llvm.bswap.i32(i32 %550) #9
  %552 = load i32, i32* %327, align 8
  %553 = add i32 %552, %551
  store i32 %553, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %337) #9
  %554 = icmp eq i64 %541, 3
  br i1 %554, label %555, label %563

555:                                              ; preds = %545, %543
  %556 = phi i32 [ %553, %545 ], [ %544, %543 ]
  %557 = phi i64 [ %548, %545 ], [ 0, %543 ]
  %558 = phi i64 [ 1, %545 ], [ 2, %543 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %338)
  store i32 0, i32* %7, align 4
  %559 = getelementptr inbounds i8, i8* %336, i64 %557
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %338, i8* align 1 %559, i64 %558, i1 false) #9
  %560 = load i32, i32* %7, align 4
  %561 = call i32 @llvm.bswap.i32(i32 %560) #9
  %562 = add i32 %561, %556
  store i32 %562, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %338)
  br label %563

563:                                              ; preds = %545, %555
  %564 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %565 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %564, i64 2
  %566 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %565, align 8
  %567 = call zeroext i1 %566(%"class.ots::OTSStream"* %1, i8* nonnull %336, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %336)
  br i1 %567, label %568, label %611

568:                                              ; preds = %563
  %569 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %498, i64 %496, i32 2
  %570 = load i16, i16* %569, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %339)
  %571 = call i16 @llvm.bswap.i16(i16 %570) #9
  store i16 %571, i16* %5, align 2
  %572 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %43, align 8
  %573 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %572, i64 4
  %574 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %573, align 8
  %575 = call i64 %574(%"class.ots::OTSStream"* %1) #9
  %576 = and i64 %575, 3
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %578, label %580

578:                                              ; preds = %568
  %579 = load i32, i32* %327, align 8
  br label %590

580:                                              ; preds = %568
  %581 = sub nuw nsw i64 4, %576
  %582 = icmp ult i64 %581, 2
  %583 = select i1 %582, i64 %581, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %340) #9
  store i32 0, i32* %3, align 4
  %584 = getelementptr inbounds i8, i8* %340, i64 %576
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %584, i8* nonnull align 2 %339, i64 %583, i1 false) #9
  %585 = load i32, i32* %3, align 4
  %586 = call i32 @llvm.bswap.i32(i32 %585) #9
  %587 = load i32, i32* %327, align 8
  %588 = add i32 %587, %586
  store i32 %588, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %340) #9
  %589 = icmp eq i64 %576, 3
  br i1 %589, label %590, label %598

590:                                              ; preds = %580, %578
  %591 = phi i32 [ %588, %580 ], [ %579, %578 ]
  %592 = phi i64 [ %583, %580 ], [ 0, %578 ]
  %593 = phi i64 [ 1, %580 ], [ 2, %578 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %341)
  store i32 0, i32* %4, align 4
  %594 = getelementptr inbounds i8, i8* %339, i64 %592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %341, i8* align 1 %594, i64 %593, i1 false) #9
  %595 = load i32, i32* %4, align 4
  %596 = call i32 @llvm.bswap.i32(i32 %595) #9
  %597 = add i32 %596, %591
  store i32 %597, i32* %327, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %341)
  br label %598

598:                                              ; preds = %580, %590
  %599 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %76, align 8
  %600 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %599, i64 2
  %601 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %600, align 8
  %602 = call zeroext i1 %601(%"class.ots::OTSStream"* %1, i8* nonnull %339, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %339)
  br i1 %602, label %603, label %611

603:                                              ; preds = %598
  %604 = add i32 %497, 1
  %605 = zext i32 %604 to i64
  %606 = load i64, i64* %486, align 8
  %607 = load i64, i64* %488, align 8
  %608 = sub i64 %606, %607
  %609 = sdiv exact i64 %608, 6
  %610 = icmp ugt i64 %609, %605
  br i1 %610, label %494, label %614

611:                                              ; preds = %598, %563, %528
  %612 = bitcast %"class.ots::OpenTypeVDMX"* %0 to %"class.ots::Table"*
  %613 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %612, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0), i32 %395, i32 %497) #9
  br label %622

614:                                              ; preds = %603, %483
  %615 = add i32 %395, 1
  %616 = zext i32 %615 to i64
  %617 = load i64, i64* %319, align 8
  %618 = load i64, i64* %321, align 8
  %619 = sub i64 %617, %618
  %620 = ashr exact i64 %619, 5
  %621 = icmp ugt i64 %620, %616
  br i1 %621, label %392, label %622

622:                                              ; preds = %614, %316, %181, %305, %381, %611, %491
  %623 = phi i1 [ %613, %611 ], [ %493, %491 ], [ %183, %181 ], [ %307, %305 ], [ %383, %381 ], [ true, %316 ], [ true, %614 ]
  ret i1 %623
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeVDMXD2Ev(%"class.ots::OpenTypeVDMX"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeVDMXE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1, i32 3, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1, i32 3, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.36"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeVDMXGroup"* %5, %"struct.ots::OpenTypeVDMXGroup"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint i16* %32 to i64
  %36 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 1
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i16* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 0
  %41 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %40, align 8
  %42 = icmp eq %"struct.ots::OpenTypeVDMXRatioRecord"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %41 to i64
  %45 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 1
  %46 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %41, i64 0, i32 0
  tail call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %39, %43
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeVDMXD0Ev(%"class.ots::OpenTypeVDMX"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeVDMXE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1, i32 3, i32 0, i32 0
  %16 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %15, align 8
  %17 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %13, i64 -1, i32 3, i32 0, i32 1
  %21 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.36"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeVDMXGroup"* %5, %"struct.ots::OpenTypeVDMXGroup"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint i16* %32 to i64
  %36 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 5, i32 0, i32 1
  %37 = bitcast i16** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast i16* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %34, %30
  %40 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 0
  %41 = load %"struct.ots::OpenTypeVDMXRatioRecord"*, %"struct.ots::OpenTypeVDMXRatioRecord"** %40, align 8
  %42 = icmp eq %"struct.ots::OpenTypeVDMXRatioRecord"* %41, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %39
  %44 = ptrtoint %"struct.ots::OpenTypeVDMXRatioRecord"* %41 to i64
  %45 = getelementptr inbounds %"class.ots::OpenTypeVDMX", %"class.ots::OpenTypeVDMX"* %0, i64 0, i32 4, i32 0, i32 1
  %46 = bitcast %"struct.ots::OpenTypeVDMXRatioRecord"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.ots::OpenTypeVDMXRatioRecord", %"struct.ots::OpenTypeVDMXRatioRecord"* %41, i64 0, i32 0
  tail call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %39, %43
  %49 = bitcast %"class.ots::OpenTypeVDMX"* %0 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots17OpenTypeVDMXGroupENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.36"*, %"struct.ots::OpenTypeVDMXGroup"* dereferenceable(32)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.36"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.36"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.ots::OpenTypeVDMXGroup"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"struct.ots::OpenTypeVDMXGroup"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %36, i64 %35
  %39 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %38 to i64
  %40 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %1 to i32*
  %41 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %37 to i32*
  %42 = load i32, i32* %40, align 8
  store i32 %42, i32* %41, align 8
  %43 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %36, i64 %9, i32 3
  %44 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %1, i64 0, i32 3
  %45 = bitcast %"class.std::__1::vector.38"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 24, i1 false) #9
  %46 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %1, i64 0, i32 3, i32 0, i32 1
  %47 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.38"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = sdiv exact i64 %51, 6
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %34
  %55 = icmp ugt i64 %52, 3074457345618258602
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.38"* %43 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %57) #11
  unreachable

58:                                               ; preds = %54
  %59 = tail call i8* @_Znwm(i64 %51) #10
  %60 = bitcast i8* %59 to %"struct.ots::OpenTypeVDMXVTable"*
  %61 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %36, i64 %9, i32 3, i32 0, i32 1
  %62 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %61 to i8**
  store i8* %59, i8** %62, align 8
  %63 = bitcast %"class.std::__1::vector.38"* %43 to i8**
  store i8* %59, i8** %63, align 8
  %64 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %60, i64 %52
  %65 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %36, i64 %9, i32 3, i32 0, i32 2, i32 0, i32 0
  store %"struct.ots::OpenTypeVDMXVTable"* %64, %"struct.ots::OpenTypeVDMXVTable"** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %44, i64 0, i32 0, i32 0
  %67 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %66, align 8
  %68 = load i64, i64* %47, align 8
  %69 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %61 to i64*
  %70 = ptrtoint i8* %59 to i64
  %71 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %67 to i64
  %72 = sub i64 %68, %71
  %73 = icmp sgt i64 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %58
  %75 = udiv exact i64 %72, 6
  %76 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %59, i8* align 2 %76, i64 %72, i1 false) #9
  %77 = getelementptr inbounds %"struct.ots::OpenTypeVDMXVTable", %"struct.ots::OpenTypeVDMXVTable"* %60, i64 %75
  %78 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %77 to i64
  br label %79

79:                                               ; preds = %74, %58
  %80 = phi i64 [ %78, %74 ], [ %70, %58 ]
  store i64 %80, i64* %69, align 8
  br label %81

81:                                               ; preds = %34, %79
  %82 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %37, i64 1
  %83 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::vector.36", %"class.std::__1::vector.36"* %0, i64 0, i32 0, i32 0
  %85 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %84, align 8
  %86 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %85 to i64
  %87 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %3, align 8
  %88 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %87, %85
  br i1 %88, label %175, label %89

89:                                               ; preds = %81
  %90 = getelementptr %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %87, i64 -1, i32 0
  %91 = ptrtoint i16* %90 to i64
  %92 = sub i64 %91, %86
  %93 = and i64 %92, 32
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %118

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %37, i64 -1
  %97 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %87, i64 -1
  %98 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %97 to i32*
  %99 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %96 to i32*
  %100 = load i32, i32* %98, align 8
  store i32 %100, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %37, i64 -1, i32 3
  %102 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %87, i64 -1, i32 3
  %103 = bitcast %"class.std::__1::vector.38"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #9
  %104 = bitcast %"class.std::__1::vector.38"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.38"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %87, i64 -1, i32 3, i32 0, i32 1
  %108 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %37, i64 -1, i32 3, i32 0, i32 1
  %111 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %110 to i64*
  store i64 %109, i64* %111, align 8
  %112 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %87, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %37, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %116 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = bitcast %"class.std::__1::vector.38"* %102 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #9
  br label %118

118:                                              ; preds = %95, %89
  %119 = phi %"struct.ots::OpenTypeVDMXGroup"* [ undef, %89 ], [ %96, %95 ]
  %120 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %37, %89 ], [ %96, %95 ]
  %121 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %87, %89 ], [ %97, %95 ]
  %122 = icmp ult i64 %92, 32
  br i1 %122, label %171, label %123

123:                                              ; preds = %118, %123
  %124 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %148, %123 ], [ %120, %118 ]
  %125 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %149, %123 ], [ %121, %118 ]
  %126 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -1
  %127 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -1
  %128 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %127 to i32*
  %129 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %126 to i32*
  %130 = load i32, i32* %128, align 8
  store i32 %130, i32* %129, align 8
  %131 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -1, i32 3
  %132 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -1, i32 3
  %133 = bitcast %"class.std::__1::vector.38"* %131 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #9
  %134 = bitcast %"class.std::__1::vector.38"* %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.std::__1::vector.38"* %131 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -1, i32 3, i32 0, i32 1
  %138 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -1, i32 3, i32 0, i32 1
  %141 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %146 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast %"class.std::__1::vector.38"* %132 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %147, i8 0, i64 24, i1 false) #9
  %148 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -2
  %149 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -2
  %150 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %149 to i32*
  %151 = bitcast %"struct.ots::OpenTypeVDMXGroup"* %148 to i32*
  %152 = load i32, i32* %150, align 8
  store i32 %152, i32* %151, align 8
  %153 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -2, i32 3
  %154 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -2, i32 3
  %155 = bitcast %"class.std::__1::vector.38"* %153 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %155, i8 0, i64 24, i1 false) #9
  %156 = bitcast %"class.std::__1::vector.38"* %154 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.std::__1::vector.38"* %153 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -2, i32 3, i32 0, i32 1
  %160 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -2, i32 3, i32 0, i32 1
  %163 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %125, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %165 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %124, i64 -2, i32 3, i32 0, i32 2, i32 0, i32 0
  %168 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast %"class.std::__1::vector.38"* %154 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 24, i1 false) #9
  %170 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %149, %85
  br i1 %170, label %171, label %123

171:                                              ; preds = %123, %118
  %172 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %119, %118 ], [ %148, %123 ]
  %173 = load i64, i64* %6, align 8
  %174 = load %"struct.ots::OpenTypeVDMXGroup"*, %"struct.ots::OpenTypeVDMXGroup"** %3, align 8
  br label %175

175:                                              ; preds = %81, %171
  %176 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %174, %171 ], [ %85, %81 ]
  %177 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %172, %171 ], [ %37, %81 ]
  %178 = phi i64 [ %173, %171 ], [ %86, %81 ]
  %179 = ptrtoint %"struct.ots::OpenTypeVDMXGroup"* %177 to i64
  store i64 %179, i64* %6, align 8
  store i64 %83, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %180 = inttoptr i64 %178 to %"struct.ots::OpenTypeVDMXGroup"*
  %181 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %176, %180
  br i1 %181, label %195, label %182

182:                                              ; preds = %175, %193
  %183 = phi %"struct.ots::OpenTypeVDMXGroup"* [ %184, %193 ], [ %176, %175 ]
  %184 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %183, i64 -1
  %185 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %183, i64 -1, i32 3, i32 0, i32 0
  %186 = load %"struct.ots::OpenTypeVDMXVTable"*, %"struct.ots::OpenTypeVDMXVTable"** %185, align 8
  %187 = icmp eq %"struct.ots::OpenTypeVDMXVTable"* %186, null
  br i1 %187, label %193, label %188

188:                                              ; preds = %182
  %189 = ptrtoint %"struct.ots::OpenTypeVDMXVTable"* %186 to i64
  %190 = getelementptr inbounds %"struct.ots::OpenTypeVDMXGroup", %"struct.ots::OpenTypeVDMXGroup"* %183, i64 -1, i32 3, i32 0, i32 1
  %191 = bitcast %"struct.ots::OpenTypeVDMXVTable"** %190 to i64*
  store i64 %189, i64* %191, align 8
  %192 = bitcast %"struct.ots::OpenTypeVDMXVTable"* %186 to i8*
  tail call void @_ZdlPv(i8* %192) #10
  br label %193

193:                                              ; preds = %188, %182
  %194 = icmp eq %"struct.ots::OpenTypeVDMXGroup"* %184, %180
  br i1 %194, label %195, label %182

195:                                              ; preds = %193, %175
  %196 = icmp eq i64 %178, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %195
  %198 = inttoptr i64 %178 to i8*
  tail call void @_ZdlPv(i8* %198) #10
  br label %199

199:                                              ; preds = %195, %197
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
