; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/split_v.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/split_v.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64* }
%"class.std::__1::__vector_base_common" = type { i8 }
%struct.TfLiteSplitVParams = type { i32 }
%"class.tflite::VectorOfTensors" = type { %"class.std::__1::vector.2", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { float**, float**, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { float** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"class.std::__1::__compressed_pair.11" }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.tflite::RuntimeShape"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"**, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.tflite::RuntimeShape"** }
%"class.tflite::VectorOfTensors.23" = type { %"class.std::__1::vector.24", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i8**, i8**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i8** }
%"class.tflite::VectorOfTensors.31" = type { %"class.std::__1::vector.32", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { i16**, i16**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i16** }
%"class.tflite::VectorOfTensors.39" = type { %"class.std::__1::vector.40", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { i32**, i32**, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32** }
%"class.tflite::VectorOfTensors.47" = type { %"class.std::__1::vector.48", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { i64**, i64**, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64** }
%"class.tflite::VectorOfTensors.55" = type { %"class.std::__1::vector.56", %"class.std::__1::vector.9", %"class.std::__1::vector.16" }
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { i8**, i8**, %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { i8** }

$_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [43 x i8] c"size_splits only support type int32|int64.\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"The size_splits contains more than one -1.\00", align 1
@.str.4 = private unnamed_addr constant [65 x i8] c"The sum of size_splits must be less than the dimension of value.\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"The size_splits must sum to the dimension of value along axis.\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.7 = private unnamed_addr constant [64 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/split_v.cc\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"op_context.params->num_splits\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.13 = private unnamed_addr constant [178 x i8] c"input_type == kTfLiteFloat32 || input_type == kTfLiteUInt8 || input_type == kTfLiteInt16 || input_type == kTfLiteInt32 || input_type == kTfLiteInt64 || input_type == kTfLiteInt8\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"NumDimensions(size_splits)\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"NumElements(size_splits)\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"Type %s currently not supported.\00", align 1
@_ZZN6tflite3ops7builtin16Register_SPLIT_VEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7split_v7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7split_v4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7split_v23UseDynamicOutputTensorsEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* nocapture readonly, %struct.TfLiteNode* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %11

10:                                               ; preds = %30, %2
  ret i32 0

11:                                               ; preds = %8, %30
  %12 = phi %struct.TfLiteIntArray* [ %4, %8 ], [ %31, %30 ]
  %13 = phi i64 [ 0, %8 ], [ %32, %30 ]
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %12, i64 0, i32 1, i64 %13
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %11
  %18 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %19 = sext i32 %15 to i64
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %18, i64 %19
  br label %21

21:                                               ; preds = %11, %17
  %22 = phi %struct.TfLiteTensor* [ %20, %17 ], [ null, %11 ]
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 4
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %30, label %26

26:                                               ; preds = %21
  store i32 4, i32* %23, align 8
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 0, i32 1
  %28 = bitcast %union.TfLitePtrUnion* %27 to i8**
  store i8* null, i8** %28, align 8
  %29 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  br label %30

30:                                               ; preds = %21, %26
  %31 = phi %struct.TfLiteIntArray* [ %12, %21 ], [ %29, %26 ]
  %32 = add nuw nsw i64 %13, 1
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = icmp slt i64 %32, %35
  br i1 %36, label %11, label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7split_v19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_S9_(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly) local_unnamed_addr #2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1, i32 0
  %10 = load i32*, i32** %9, align 8
  br label %11

11:                                               ; preds = %5, %8
  %12 = phi i32* [ %10, %8 ], [ null, %5 ]
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add nsw i32 %19, %13
  br label %21

21:                                               ; preds = %15, %11
  %22 = phi i32 [ %20, %15 ], [ %13, %11 ]
  %23 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #10
  %27 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %343 [
    i32 2, label %29
    i32 4, label %187
  ]

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %31 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %30, align 8
  %32 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %35, label %107

35:                                               ; preds = %29
  %36 = sext i32 %33 to i64
  %37 = add nsw i64 %36, -1
  %38 = and i64 %36, 7
  %39 = icmp ult i64 %37, 7
  br i1 %39, label %88, label %40

40:                                               ; preds = %35
  %41 = sub nsw i64 %36, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %85, %42 ]
  %44 = phi i64 [ 1, %40 ], [ %84, %42 ]
  %45 = phi i64 [ %41, %40 ], [ %86, %42 ]
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = mul nsw i64 %44, %48
  %50 = or i64 %43, 1
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = sext i32 %52 to i64
  %54 = mul nsw i64 %49, %53
  %55 = or i64 %43, 2
  %56 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = mul nsw i64 %54, %58
  %60 = or i64 %43, 3
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = sext i32 %62 to i64
  %64 = mul nsw i64 %59, %63
  %65 = or i64 %43, 4
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = mul nsw i64 %64, %68
  %70 = or i64 %43, 5
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = sext i32 %72 to i64
  %74 = mul nsw i64 %69, %73
  %75 = or i64 %43, 6
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = mul nsw i64 %74, %78
  %80 = or i64 %43, 7
  %81 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = sext i32 %82 to i64
  %84 = mul nsw i64 %79, %83
  %85 = add nuw nsw i64 %43, 8
  %86 = add i64 %45, -8
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %42

88:                                               ; preds = %42, %35
  %89 = phi i64 [ undef, %35 ], [ %84, %42 ]
  %90 = phi i64 [ 0, %35 ], [ %85, %42 ]
  %91 = phi i64 [ 1, %35 ], [ %84, %42 ]
  %92 = icmp eq i64 %38, 0
  br i1 %92, label %104, label %93

93:                                               ; preds = %88, %93
  %94 = phi i64 [ %101, %93 ], [ %90, %88 ]
  %95 = phi i64 [ %100, %93 ], [ %91, %88 ]
  %96 = phi i64 [ %102, %93 ], [ %38, %88 ]
  %97 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %31, i64 0, i32 1, i64 %94
  %98 = load i32, i32* %97, align 4
  %99 = sext i32 %98 to i64
  %100 = mul nsw i64 %95, %99
  %101 = add nuw nsw i64 %94, 1
  %102 = add i64 %96, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %93, !llvm.loop !2

104:                                              ; preds = %93, %88
  %105 = phi i64 [ %89, %88 ], [ %100, %93 ]
  %106 = icmp sgt i64 %105, 0
  br i1 %106, label %107, label %346

107:                                              ; preds = %104, %29
  %108 = phi i64 [ %105, %104 ], [ 1, %29 ]
  %109 = icmp eq %struct.TfLiteTensor* %3, null
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1, i32 0
  %111 = bitcast i64** %25 to i64*
  %112 = bitcast %"class.std::__1::vector"* %6 to i64*
  %113 = bitcast i64** %26 to i64*
  br label %114

114:                                              ; preds = %180, %107
  %115 = phi i64* [ null, %107 ], [ %181, %180 ]
  %116 = phi i64 [ 0, %107 ], [ %182, %180 ]
  %117 = phi i64 [ 0, %107 ], [ %183, %180 ]
  %118 = phi i64* [ null, %107 ], [ %184, %180 ]
  %119 = phi i64 [ 0, %107 ], [ %185, %180 ]
  br i1 %109, label %122, label %120

120:                                              ; preds = %114
  %121 = load i32*, i32** %110, align 8
  br label %122

122:                                              ; preds = %120, %114
  %123 = phi i32* [ %121, %120 ], [ null, %114 ]
  %124 = getelementptr inbounds i32, i32* %123, i64 %119
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = load i64*, i64** %26, align 8
  %128 = icmp ult i64* %118, %127
  %129 = ptrtoint i64* %127 to i64
  br i1 %128, label %130, label %133

130:                                              ; preds = %122
  store i64 %126, i64* %118, align 8
  %131 = getelementptr inbounds i64, i64* %118, i64 1
  %132 = ptrtoint i64* %131 to i64
  store i64 %132, i64* %111, align 8
  br label %180

133:                                              ; preds = %122
  %134 = ptrtoint i64* %118 to i64
  %135 = load i64, i64* %112, align 8
  %136 = sub i64 %134, %135
  %137 = ashr exact i64 %136, 3
  %138 = add nsw i64 %137, 1
  %139 = icmp ugt i64 %138, 2305843009213693951
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %141) #11
  unreachable

142:                                              ; preds = %133
  %143 = sub i64 %129, %135
  %144 = ashr exact i64 %143, 3
  %145 = icmp ult i64 %144, 1152921504606846975
  br i1 %145, label %146, label %154

146:                                              ; preds = %142
  %147 = ashr exact i64 %143, 2
  %148 = icmp ult i64 %147, %138
  %149 = select i1 %148, i64 %138, i64 %147
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %159, label %151

151:                                              ; preds = %146
  %152 = icmp ugt i64 %149, 2305843009213693951
  br i1 %152, label %153, label %154

153:                                              ; preds = %151
  tail call void @abort() #11
  unreachable

154:                                              ; preds = %151, %142
  %155 = phi i64 [ %149, %151 ], [ 2305843009213693951, %142 ]
  %156 = shl i64 %155, 3
  %157 = tail call i8* @_Znwm(i64 %156) #12
  %158 = bitcast i8* %157 to i64*
  br label %159

159:                                              ; preds = %154, %146
  %160 = phi i64 [ %155, %154 ], [ 0, %146 ]
  %161 = phi i64* [ %158, %154 ], [ null, %146 ]
  %162 = getelementptr inbounds i64, i64* %161, i64 %137
  %163 = getelementptr inbounds i64, i64* %161, i64 %160
  %164 = ptrtoint i64* %163 to i64
  store i64 %126, i64* %162, align 8
  %165 = getelementptr inbounds i64, i64* %162, i64 1
  %166 = ptrtoint i64* %165 to i64
  %167 = sub i64 %117, %135
  %168 = ashr exact i64 %167, 3
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds i64, i64* %162, i64 %169
  %171 = ptrtoint i64* %170 to i64
  %172 = icmp sgt i64 %167, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %159
  %174 = bitcast i64* %170 to i8*
  %175 = inttoptr i64 %135 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 %167, i1 false) #10
  br label %176

176:                                              ; preds = %173, %159
  store i64 %171, i64* %112, align 8
  store i64 %166, i64* %111, align 8
  store i64 %164, i64* %113, align 8
  %177 = icmp eq i64 %135, 0
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %130, %176, %178
  %181 = phi i64* [ %115, %130 ], [ %170, %176 ], [ %170, %178 ]
  %182 = phi i64 [ %116, %130 ], [ %171, %176 ], [ %171, %178 ]
  %183 = phi i64 [ %132, %130 ], [ %166, %176 ], [ %166, %178 ]
  %184 = phi i64* [ %131, %130 ], [ %165, %176 ], [ %165, %178 ]
  %185 = add nuw nsw i64 %119, 1
  %186 = icmp eq i64 %185, %108
  br i1 %186, label %349, label %114

187:                                              ; preds = %21
  %188 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %189 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %188, align 8
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  %192 = icmp sgt i32 %191, 0
  br i1 %192, label %193, label %265

193:                                              ; preds = %187
  %194 = sext i32 %191 to i64
  %195 = add nsw i64 %194, -1
  %196 = and i64 %194, 7
  %197 = icmp ult i64 %195, 7
  br i1 %197, label %246, label %198

198:                                              ; preds = %193
  %199 = sub nsw i64 %194, %196
  br label %200

200:                                              ; preds = %200, %198
  %201 = phi i64 [ 0, %198 ], [ %243, %200 ]
  %202 = phi i64 [ 1, %198 ], [ %242, %200 ]
  %203 = phi i64 [ %199, %198 ], [ %244, %200 ]
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %201
  %205 = load i32, i32* %204, align 4
  %206 = sext i32 %205 to i64
  %207 = mul nsw i64 %202, %206
  %208 = or i64 %201, 1
  %209 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %208
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = mul nsw i64 %207, %211
  %213 = or i64 %201, 2
  %214 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = sext i32 %215 to i64
  %217 = mul nsw i64 %212, %216
  %218 = or i64 %201, 3
  %219 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %218
  %220 = load i32, i32* %219, align 4
  %221 = sext i32 %220 to i64
  %222 = mul nsw i64 %217, %221
  %223 = or i64 %201, 4
  %224 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %223
  %225 = load i32, i32* %224, align 4
  %226 = sext i32 %225 to i64
  %227 = mul nsw i64 %222, %226
  %228 = or i64 %201, 5
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = sext i32 %230 to i64
  %232 = mul nsw i64 %227, %231
  %233 = or i64 %201, 6
  %234 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %233
  %235 = load i32, i32* %234, align 4
  %236 = sext i32 %235 to i64
  %237 = mul nsw i64 %232, %236
  %238 = or i64 %201, 7
  %239 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %238
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = mul nsw i64 %237, %241
  %243 = add nuw nsw i64 %201, 8
  %244 = add i64 %203, -8
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %246, label %200

246:                                              ; preds = %200, %193
  %247 = phi i64 [ undef, %193 ], [ %242, %200 ]
  %248 = phi i64 [ 0, %193 ], [ %243, %200 ]
  %249 = phi i64 [ 1, %193 ], [ %242, %200 ]
  %250 = icmp eq i64 %196, 0
  br i1 %250, label %262, label %251

251:                                              ; preds = %246, %251
  %252 = phi i64 [ %259, %251 ], [ %248, %246 ]
  %253 = phi i64 [ %258, %251 ], [ %249, %246 ]
  %254 = phi i64 [ %260, %251 ], [ %196, %246 ]
  %255 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %189, i64 0, i32 1, i64 %252
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = mul nsw i64 %253, %257
  %259 = add nuw nsw i64 %252, 1
  %260 = add i64 %254, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %251, !llvm.loop !4

262:                                              ; preds = %251, %246
  %263 = phi i64 [ %247, %246 ], [ %258, %251 ]
  %264 = icmp sgt i64 %263, 0
  br i1 %264, label %265, label %346

265:                                              ; preds = %262, %187
  %266 = phi i64 [ %263, %262 ], [ 1, %187 ]
  %267 = icmp eq %struct.TfLiteTensor* %3, null
  %268 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %269 = bitcast %union.TfLitePtrUnion* %268 to i64**
  %270 = bitcast i64** %25 to i64*
  %271 = bitcast %"class.std::__1::vector"* %6 to i64*
  %272 = bitcast i64** %26 to i64*
  br label %273

273:                                              ; preds = %336, %265
  %274 = phi i64* [ null, %265 ], [ %337, %336 ]
  %275 = phi i64 [ 0, %265 ], [ %338, %336 ]
  %276 = phi i64 [ 0, %265 ], [ %339, %336 ]
  %277 = phi i64* [ null, %265 ], [ %340, %336 ]
  %278 = phi i64 [ 0, %265 ], [ %341, %336 ]
  br i1 %267, label %281, label %279

279:                                              ; preds = %273
  %280 = load i64*, i64** %269, align 8
  br label %281

281:                                              ; preds = %279, %273
  %282 = phi i64* [ %280, %279 ], [ null, %273 ]
  %283 = getelementptr inbounds i64, i64* %282, i64 %278
  %284 = load i64*, i64** %26, align 8
  %285 = icmp eq i64* %277, %284
  br i1 %285, label %290, label %286

286:                                              ; preds = %281
  %287 = load i64, i64* %283, align 8
  store i64 %287, i64* %277, align 8
  %288 = getelementptr inbounds i64, i64* %277, i64 1
  %289 = ptrtoint i64* %288 to i64
  store i64 %289, i64* %270, align 8
  br label %336

290:                                              ; preds = %281
  %291 = ptrtoint i64* %284 to i64
  %292 = load i64, i64* %271, align 8
  %293 = sub i64 %291, %292
  %294 = ashr exact i64 %293, 3
  %295 = add nsw i64 %294, 1
  %296 = icmp ugt i64 %295, 2305843009213693951
  br i1 %296, label %297, label %299

297:                                              ; preds = %290
  %298 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %298) #11
  unreachable

299:                                              ; preds = %290
  %300 = icmp ult i64 %294, 1152921504606846975
  br i1 %300, label %301, label %309

301:                                              ; preds = %299
  %302 = ashr exact i64 %293, 2
  %303 = icmp ult i64 %302, %295
  %304 = select i1 %303, i64 %295, i64 %302
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %314, label %306

306:                                              ; preds = %301
  %307 = icmp ugt i64 %304, 2305843009213693951
  br i1 %307, label %308, label %309

308:                                              ; preds = %306
  tail call void @abort() #11
  unreachable

309:                                              ; preds = %306, %299
  %310 = phi i64 [ %304, %306 ], [ 2305843009213693951, %299 ]
  %311 = shl i64 %310, 3
  %312 = tail call i8* @_Znwm(i64 %311) #12
  %313 = bitcast i8* %312 to i64*
  br label %314

314:                                              ; preds = %309, %301
  %315 = phi i64 [ %310, %309 ], [ 0, %301 ]
  %316 = phi i64* [ %313, %309 ], [ null, %301 ]
  %317 = getelementptr inbounds i64, i64* %316, i64 %294
  %318 = getelementptr inbounds i64, i64* %316, i64 %315
  %319 = ptrtoint i64* %318 to i64
  %320 = load i64, i64* %283, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds i64, i64* %317, i64 1
  %322 = ptrtoint i64* %321 to i64
  %323 = sub i64 %276, %292
  %324 = ashr exact i64 %323, 3
  %325 = sub nsw i64 0, %324
  %326 = getelementptr inbounds i64, i64* %317, i64 %325
  %327 = ptrtoint i64* %326 to i64
  %328 = icmp sgt i64 %323, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %314
  %330 = bitcast i64* %326 to i8*
  %331 = inttoptr i64 %292 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %330, i8* align 8 %331, i64 %323, i1 false) #10
  br label %332

332:                                              ; preds = %329, %314
  store i64 %327, i64* %271, align 8
  store i64 %322, i64* %270, align 8
  store i64 %319, i64* %272, align 8
  %333 = icmp eq i64 %292, 0
  br i1 %333, label %336, label %334

334:                                              ; preds = %332
  %335 = inttoptr i64 %292 to i8*
  tail call void @_ZdlPv(i8* %335) #12
  br label %336

336:                                              ; preds = %286, %332, %334
  %337 = phi i64* [ %274, %286 ], [ %326, %332 ], [ %326, %334 ]
  %338 = phi i64 [ %275, %286 ], [ %327, %332 ], [ %327, %334 ]
  %339 = phi i64 [ %289, %286 ], [ %322, %332 ], [ %322, %334 ]
  %340 = phi i64* [ %288, %286 ], [ %321, %332 ], [ %321, %334 ]
  %341 = add nuw nsw i64 %278, 1
  %342 = icmp eq i64 %341, %266
  br i1 %342, label %349, label %273

343:                                              ; preds = %21
  %344 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %345 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %344, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %345(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0)) #10
  br label %453

346:                                              ; preds = %262, %104
  %347 = bitcast i64** %25 to i64*
  %348 = bitcast %"class.std::__1::vector"* %6 to i64*
  br label %361

349:                                              ; preds = %336, %180
  %350 = phi i64* [ %181, %180 ], [ %337, %336 ]
  %351 = phi i64 [ %182, %180 ], [ %338, %336 ]
  %352 = phi i64 [ %183, %180 ], [ %339, %336 ]
  %353 = bitcast i64** %25 to i64*
  %354 = bitcast %"class.std::__1::vector"* %6 to i64*
  %355 = icmp eq i64 %352, %351
  br i1 %355, label %361, label %356

356:                                              ; preds = %349
  %357 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %358 = inttoptr i64 %351 to i64*
  %359 = sub i64 %352, %351
  %360 = ashr exact i64 %359, 3
  br label %374

361:                                              ; preds = %388, %346, %349
  %362 = phi i64* [ %354, %349 ], [ %348, %346 ], [ %354, %388 ]
  %363 = phi i64* [ %353, %349 ], [ %347, %346 ], [ %353, %388 ]
  %364 = phi i64* [ %350, %349 ], [ null, %346 ], [ %350, %388 ]
  %365 = phi i32 [ -1, %349 ], [ -1, %346 ], [ %389, %388 ]
  %366 = phi i64 [ 0, %349 ], [ 0, %346 ], [ %390, %388 ]
  %367 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %368 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %367, align 8
  %369 = sext i32 %22 to i64
  %370 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %368, i64 0, i32 1, i64 %369
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %365, -1
  %373 = sext i32 %371 to i64
  br i1 %372, label %402, label %393

374:                                              ; preds = %356, %388
  %375 = phi i64 [ 0, %356 ], [ %391, %388 ]
  %376 = phi i64 [ 0, %356 ], [ %390, %388 ]
  %377 = phi i32 [ -1, %356 ], [ %389, %388 ]
  %378 = getelementptr inbounds i64, i64* %358, i64 %375
  %379 = load i64, i64* %378, align 8
  %380 = icmp eq i64 %379, -1
  br i1 %380, label %381, label %386

381:                                              ; preds = %374
  %382 = icmp eq i32 %377, -1
  %383 = trunc i64 %375 to i32
  br i1 %382, label %388, label %384

384:                                              ; preds = %381
  %385 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %357, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %385(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %388

386:                                              ; preds = %374
  %387 = add nsw i64 %379, %376
  br label %388

388:                                              ; preds = %381, %386, %384
  %389 = phi i32 [ %377, %384 ], [ %377, %386 ], [ %383, %381 ]
  %390 = phi i64 [ %376, %384 ], [ %387, %386 ], [ %376, %381 ]
  %391 = add nuw i64 %375, 1
  %392 = icmp ugt i64 %360, %391
  br i1 %392, label %374, label %361

393:                                              ; preds = %361
  %394 = icmp sgt i64 %366, %373
  br i1 %394, label %395, label %398

395:                                              ; preds = %393
  %396 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %397 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %396, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %397(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %407

398:                                              ; preds = %393
  %399 = sub nsw i64 %373, %366
  %400 = sext i32 %365 to i64
  %401 = getelementptr inbounds i64, i64* %364, i64 %400
  store i64 %399, i64* %401, align 8
  br label %407

402:                                              ; preds = %361
  %403 = icmp eq i64 %366, %373
  br i1 %403, label %407, label %404

404:                                              ; preds = %402
  %405 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %406 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %405, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %406(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %407

407:                                              ; preds = %402, %404, %395, %398
  %408 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %409 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %408, align 8
  %410 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %409, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = icmp sgt i32 %411, 0
  br i1 %412, label %413, label %453

413:                                              ; preds = %407
  %414 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %415 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  br label %422

416:                                              ; preds = %447
  %417 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %408, align 8
  %418 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %417, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  %420 = sext i32 %419 to i64
  %421 = icmp slt i64 %452, %420
  br i1 %421, label %422, label %453

422:                                              ; preds = %413, %416
  %423 = phi i64 [ 0, %413 ], [ %452, %416 ]
  %424 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %367, align 8
  %425 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %424) #10
  %426 = load i64, i64* %363, align 8
  %427 = load i64, i64* %362, align 8
  %428 = sub i64 %426, %427
  %429 = ashr exact i64 %428, 3
  %430 = icmp ugt i64 %429, %423
  br i1 %430, label %433, label %431

431:                                              ; preds = %422
  %432 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* nonnull %432) #11
  unreachable

433:                                              ; preds = %422
  %434 = inttoptr i64 %427 to i64*
  %435 = getelementptr inbounds i64, i64* %434, i64 %423
  %436 = load i64, i64* %435, align 8
  %437 = trunc i64 %436 to i32
  %438 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %425, i64 0, i32 1, i64 %369
  store i32 %437, i32* %438, align 4
  %439 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %408, align 8
  %440 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %439, i64 0, i32 1, i64 %423
  %441 = load i32, i32* %440, align 4
  %442 = icmp slt i32 %441, 0
  br i1 %442, label %447, label %443

443:                                              ; preds = %433
  %444 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %414, align 8
  %445 = sext i32 %441 to i64
  %446 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %444, i64 %445
  br label %447

447:                                              ; preds = %433, %443
  %448 = phi %struct.TfLiteTensor* [ %446, %443 ], [ null, %433 ]
  %449 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %415, align 8
  %450 = tail call i32 %449(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %448, %struct.TfLiteIntArray* %425) #10
  %451 = icmp eq i32 %450, 0
  %452 = add nuw nsw i64 %423, 1
  br i1 %451, label %416, label %453

453:                                              ; preds = %416, %447, %407, %343
  %454 = phi i32 [ 1, %343 ], [ 0, %407 ], [ 0, %416 ], [ %450, %447 ]
  %455 = load i64*, i64** %24, align 8
  %456 = icmp eq i64* %455, null
  br i1 %456, label %461, label %457

457:                                              ; preds = %453
  %458 = ptrtoint i64* %455 to i64
  %459 = bitcast i64** %25 to i64*
  store i64 %458, i64* %459, align 8
  %460 = bitcast i64* %455 to i8*
  tail call void @_ZdlPv(i8* %460) #12
  br label %461

461:                                              ; preds = %453, %457
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  ret i32 %454
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7split_v7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 3
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %6, i32 3) #10
  br label %145

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %13 = bitcast i8** %12 to %struct.TfLiteSplitVParams**
  %14 = load %struct.TfLiteSplitVParams*, %struct.TfLiteSplitVParams** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %18, %11
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %11 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %28, %23
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %40 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %39, align 8
  %41 = sext i32 %36 to i64
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 %41
  br label %43

43:                                               ; preds = %33, %38
  %44 = phi %struct.TfLiteTensor* [ %42, %38 ], [ null, %33 ]
  %45 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %46 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %46, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %struct.TfLiteSplitVParams, %struct.TfLiteSplitVParams* %14, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %48, %50
  br i1 %51, label %55, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %54 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %53, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %54(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %48, i32 %50) #10
  br label %145

55:                                               ; preds = %43
  %56 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  switch i32 %57, label %58 [
    i32 9, label %61
    i32 7, label %61
    i32 4, label %61
    i32 3, label %61
    i32 2, label %61
    i32 1, label %61
  ]

58:                                               ; preds = %55
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %60 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %59, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %60(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 134, i8* getelementptr inbounds ([178 x i8], [178 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %145

61:                                               ; preds = %55, %55, %55, %55, %55, %55
  %62 = icmp sgt i32 %48, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %61
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %73

65:                                               ; preds = %83, %61
  %66 = phi %struct.TfLiteIntArray* [ %46, %61 ], [ %87, %83 ]
  %67 = phi i32 [ %48, %61 ], [ %89, %83 ]
  %68 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 2
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 1
  br i1 %72, label %95, label %92

73:                                               ; preds = %63, %83
  %74 = phi i64 [ 0, %63 ], [ %86, %83 ]
  %75 = phi %struct.TfLiteIntArray* [ %46, %63 ], [ %87, %83 ]
  %76 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %75, i64 0, i32 1, i64 %74
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %73
  %80 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %64, align 8
  %81 = sext i32 %77 to i64
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %80, i64 %81
  br label %83

83:                                               ; preds = %73, %79
  %84 = phi %struct.TfLiteTensor* [ %82, %79 ], [ null, %73 ]
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %84, i64 0, i32 0
  store i32 %57, i32* %85, align 8
  %86 = add nuw nsw i64 %74, 1
  %87 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %87, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = sext i32 %89 to i64
  %91 = icmp slt i64 %86, %90
  br i1 %91, label %73, label %65

92:                                               ; preds = %65
  %93 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %94 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %93, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %94(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 140, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i32 %71, i32 1) #10
  br label %145

95:                                               ; preds = %65
  %96 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %67
  br i1 %98, label %105, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %101 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %100, align 8
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  tail call void (%struct.TfLiteContext*, i8*, ...) %101(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.7, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i32 %67, i64 %104) #10
  br label %145

105:                                              ; preds = %95
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 4
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 0, i32 4
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, 1
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = tail call i32 @_ZN6tflite3ops7builtin7split_v19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_S9_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %44)
  br label %145

115:                                              ; preds = %109, %105
  %116 = icmp sgt i32 %67, 0
  br i1 %116, label %117, label %145

117:                                              ; preds = %115
  %118 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  br label %119

119:                                              ; preds = %138, %117
  %120 = phi %struct.TfLiteIntArray* [ %66, %117 ], [ %139, %138 ]
  %121 = phi i64 [ 0, %117 ], [ %140, %138 ]
  %122 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %120, i64 0, i32 1, i64 %121
  %123 = load i32, i32* %122, align 4
  %124 = icmp slt i32 %123, 0
  br i1 %124, label %129, label %125

125:                                              ; preds = %119
  %126 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %118, align 8
  %127 = sext i32 %123 to i64
  %128 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %126, i64 %127
  br label %129

129:                                              ; preds = %125, %119
  %130 = phi %struct.TfLiteTensor* [ %128, %125 ], [ null, %119 ]
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %130, i64 0, i32 4
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 4
  br i1 %133, label %138, label %134

134:                                              ; preds = %129
  store i32 4, i32* %131, align 8
  %135 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %130, i64 0, i32 1
  %136 = bitcast %union.TfLitePtrUnion* %135 to i8**
  store i8* null, i8** %136, align 8
  %137 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %45, align 8
  br label %138

138:                                              ; preds = %134, %129
  %139 = phi %struct.TfLiteIntArray* [ %120, %129 ], [ %137, %134 ]
  %140 = add nuw nsw i64 %121, 1
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %139, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = sext i32 %142 to i64
  %144 = icmp slt i64 %140, %143
  br i1 %144, label %119, label %145

145:                                              ; preds = %138, %52, %92, %99, %113, %58, %115, %8
  %146 = phi i32 [ 1, %8 ], [ 1, %52 ], [ 1, %58 ], [ 1, %92 ], [ 1, %99 ], [ %114, %113 ], [ 0, %115 ], [ 0, %138 ]
  ret i32 %146
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7split_v4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #2 {
  %3 = alloca %"class.tflite::VectorOfTensors", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::VectorOfTensors.23", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::VectorOfTensors.31", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::VectorOfTensors.39", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::VectorOfTensors.47", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::VectorOfTensors.55", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %22 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %21, align 8
  %23 = sext i32 %18 to i64
  %24 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %22, i64 %23
  br label %25

25:                                               ; preds = %20, %2
  %26 = phi %struct.TfLiteTensor* [ %24, %20 ], [ null, %2 ]
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %30, %25
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %25 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 4
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %57, label %54

54:                                               ; preds = %45, %50
  %55 = tail call i32 @_ZN6tflite3ops7builtin7split_v19ResizeOutputTensorsEP13TfLiteContextP10TfLiteNodePK12TfLiteTensorS9_S9_(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1, %struct.TfLiteTensor* %26, %struct.TfLiteTensor* %36, %struct.TfLiteTensor* %46)
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %1840

57:                                               ; preds = %54, %50
  %58 = icmp eq %struct.TfLiteTensor* %46, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 1, i32 0
  %61 = load i32*, i32** %60, align 8
  br label %62

62:                                               ; preds = %57, %59
  %63 = phi i32* [ %61, %59 ], [ null, %57 ]
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 0
  %66 = load i32, i32* %65, align 8
  switch i32 %66, label %1836 [
    i32 1, label %67
    i32 3, label %363
    i32 7, label %656
    i32 2, label %952
    i32 4, label %1247
    i32 9, label %1543
  ]

67:                                               ; preds = %62
  %68 = bitcast %"class.tflite::VectorOfTensors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %68) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 -86, i64 72, i1 false)
  %69 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %70 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %70)
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = trunc i32 %73 to i16
  %75 = trunc i32 %64 to i16
  %76 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #10
  %77 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !5
  br label %108

80:                                               ; preds = %67
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !5
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !5
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !5
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = call i8* @_Znam(i64 %90) #12, !noalias !5
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !5
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #10
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to float**
  %107 = load float*, float** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi float* [ %107, %100 ], [ null, %78 ]
  %111 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 0
  %112 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %111, align 8
  %113 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 0
  %114 = load float**, float*** %113, align 8
  %115 = shl i32 %64, 16
  %116 = ashr exact i32 %115, 16
  %117 = icmp slt i16 %75, 0
  %118 = select i1 %117, i32 %109, i32 0
  %119 = add i32 %118, %116
  %120 = icmp eq i16 %74, 0
  %121 = icmp sgt i32 %109, 5
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %123 = icmp sgt i32 %119, 0
  br i1 %123, label %124, label %152

124:                                              ; preds = %108
  %125 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = bitcast %union.anon* %122 to [5 x i32]*
  %128 = zext i32 %119 to i64
  %129 = add nsw i64 %128, -1
  %130 = and i64 %128, 3
  %131 = icmp ult i64 %129, 3
  br i1 %131, label %134, label %132

132:                                              ; preds = %124
  %133 = sub nsw i64 %128, %130
  br label %173

134:                                              ; preds = %173, %124
  %135 = phi i64 [ undef, %124 ], [ %203, %173 ]
  %136 = phi i64 [ 0, %124 ], [ %204, %173 ]
  %137 = phi i64 [ 1, %124 ], [ %203, %173 ]
  %138 = icmp eq i64 %130, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %134, %139
  %140 = phi i64 [ %149, %139 ], [ %136, %134 ]
  %141 = phi i64 [ %148, %139 ], [ %137, %134 ]
  %142 = phi i64 [ %150, %139 ], [ %130, %134 ]
  %143 = getelementptr inbounds i32, i32* %126, i64 %140
  %144 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %140
  %145 = select i1 %121, i32* %143, i32* %144
  %146 = load i32, i32* %145, align 4
  %147 = sext i32 %146 to i64
  %148 = mul nsw i64 %141, %147
  %149 = add nuw nsw i64 %140, 1
  %150 = add i64 %142, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %139, !llvm.loop !8

152:                                              ; preds = %134, %139, %108
  %153 = phi i64 [ 1, %108 ], [ %135, %134 ], [ %148, %139 ]
  %154 = add i32 %119, 1
  %155 = icmp slt i32 %154, %109
  br i1 %155, label %156, label %228

156:                                              ; preds = %152
  %157 = getelementptr inbounds %union.anon, %union.anon* %122, i64 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = bitcast %union.anon* %122 to [5 x i32]*
  %160 = sext i32 %154 to i64
  %161 = xor i32 %118, -1
  %162 = add i32 %109, %161
  %163 = shl i32 %64, 16
  %164 = ashr exact i32 %163, 16
  %165 = sub i32 %162, %164
  %166 = add i32 %109, -2
  %167 = sub i32 %166, %118
  %168 = sub i32 %167, %164
  %169 = and i32 %165, 3
  %170 = icmp ult i32 %168, 3
  br i1 %170, label %207, label %171

171:                                              ; preds = %156
  %172 = sub i32 %165, %169
  br label %235

173:                                              ; preds = %173, %132
  %174 = phi i64 [ 0, %132 ], [ %204, %173 ]
  %175 = phi i64 [ 1, %132 ], [ %203, %173 ]
  %176 = phi i64 [ %133, %132 ], [ %205, %173 ]
  %177 = getelementptr inbounds i32, i32* %126, i64 %174
  %178 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %174
  %179 = select i1 %121, i32* %177, i32* %178
  %180 = load i32, i32* %179, align 4
  %181 = sext i32 %180 to i64
  %182 = mul nsw i64 %175, %181
  %183 = or i64 %174, 1
  %184 = getelementptr inbounds i32, i32* %126, i64 %183
  %185 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %183
  %186 = select i1 %121, i32* %184, i32* %185
  %187 = load i32, i32* %186, align 4
  %188 = sext i32 %187 to i64
  %189 = mul nsw i64 %182, %188
  %190 = or i64 %174, 2
  %191 = getelementptr inbounds i32, i32* %126, i64 %190
  %192 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %190
  %193 = select i1 %121, i32* %191, i32* %192
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = mul nsw i64 %189, %195
  %197 = or i64 %174, 3
  %198 = getelementptr inbounds i32, i32* %126, i64 %197
  %199 = getelementptr inbounds [5 x i32], [5 x i32]* %127, i64 0, i64 %197
  %200 = select i1 %121, i32* %198, i32* %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %196, %202
  %204 = add nuw nsw i64 %174, 4
  %205 = add i64 %176, -4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %134, label %173

207:                                              ; preds = %235, %156
  %208 = phi i64 [ undef, %156 ], [ %265, %235 ]
  %209 = phi i64 [ %160, %156 ], [ %266, %235 ]
  %210 = phi i64 [ 1, %156 ], [ %265, %235 ]
  %211 = icmp eq i32 %169, 0
  br i1 %211, label %225, label %212

212:                                              ; preds = %207, %212
  %213 = phi i64 [ %222, %212 ], [ %209, %207 ]
  %214 = phi i64 [ %221, %212 ], [ %210, %207 ]
  %215 = phi i32 [ %223, %212 ], [ %169, %207 ]
  %216 = getelementptr inbounds i32, i32* %158, i64 %213
  %217 = getelementptr inbounds [5 x i32], [5 x i32]* %159, i64 0, i64 %213
  %218 = select i1 %121, i32* %216, i32* %217
  %219 = load i32, i32* %218, align 4
  %220 = sext i32 %219 to i64
  %221 = mul nsw i64 %214, %220
  %222 = add nsw i64 %213, 1
  %223 = add i32 %215, -1
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %212, !llvm.loop !9

225:                                              ; preds = %212, %207
  %226 = phi i64 [ %208, %207 ], [ %221, %212 ]
  %227 = trunc i64 %226 to i32
  br label %228

228:                                              ; preds = %225, %152
  %229 = phi i32 [ 1, %152 ], [ %227, %225 ]
  %230 = icmp sgt i64 %153, 0
  br i1 %230, label %231, label %310

231:                                              ; preds = %228
  %232 = sext i32 %119 to i64
  %233 = and i32 %73, 65535
  %234 = zext i32 %233 to i64
  br label %269

235:                                              ; preds = %235, %171
  %236 = phi i64 [ %160, %171 ], [ %266, %235 ]
  %237 = phi i64 [ 1, %171 ], [ %265, %235 ]
  %238 = phi i32 [ %172, %171 ], [ %267, %235 ]
  %239 = getelementptr inbounds i32, i32* %158, i64 %236
  %240 = getelementptr inbounds [5 x i32], [5 x i32]* %159, i64 0, i64 %236
  %241 = select i1 %121, i32* %239, i32* %240
  %242 = load i32, i32* %241, align 4
  %243 = sext i32 %242 to i64
  %244 = mul nsw i64 %237, %243
  %245 = add nsw i64 %236, 1
  %246 = getelementptr inbounds i32, i32* %158, i64 %245
  %247 = getelementptr inbounds [5 x i32], [5 x i32]* %159, i64 0, i64 %245
  %248 = select i1 %121, i32* %246, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul nsw i64 %244, %250
  %252 = add nsw i64 %236, 2
  %253 = getelementptr inbounds i32, i32* %158, i64 %252
  %254 = getelementptr inbounds [5 x i32], [5 x i32]* %159, i64 0, i64 %252
  %255 = select i1 %121, i32* %253, i32* %254
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = mul nsw i64 %251, %257
  %259 = add nsw i64 %236, 3
  %260 = getelementptr inbounds i32, i32* %158, i64 %259
  %261 = getelementptr inbounds [5 x i32], [5 x i32]* %159, i64 0, i64 %259
  %262 = select i1 %121, i32* %260, i32* %261
  %263 = load i32, i32* %262, align 4
  %264 = sext i32 %263 to i64
  %265 = mul nsw i64 %258, %264
  %266 = add nsw i64 %236, 4
  %267 = add i32 %238, -4
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %207, label %235

269:                                              ; preds = %274, %231
  %270 = phi i64 [ 0, %231 ], [ %276, %274 ]
  %271 = phi float* [ %110, %231 ], [ %275, %274 ]
  br i1 %120, label %274, label %272

272:                                              ; preds = %269
  %273 = trunc i64 %270 to i32
  br label %278

274:                                              ; preds = %294, %269
  %275 = phi float* [ %271, %269 ], [ %307, %294 ]
  %276 = add nuw nsw i64 %270, 1
  %277 = icmp eq i64 %276, %153
  br i1 %277, label %310, label %269

278:                                              ; preds = %294, %272
  %279 = phi i64 [ 0, %272 ], [ %308, %294 ]
  %280 = phi float* [ %271, %272 ], [ %307, %294 ]
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %112, i64 %279
  %282 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %281, align 8
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %282, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = icmp sgt i32 %284, 5
  %286 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %282, i64 0, i32 1
  br i1 %285, label %287, label %291

287:                                              ; preds = %278
  %288 = getelementptr inbounds %union.anon, %union.anon* %286, i64 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = getelementptr inbounds i32, i32* %289, i64 %232
  br label %294

291:                                              ; preds = %278
  %292 = bitcast %union.anon* %286 to [5 x i32]*
  %293 = getelementptr inbounds [5 x i32], [5 x i32]* %292, i64 0, i64 %232
  br label %294

294:                                              ; preds = %291, %287
  %295 = phi i32* [ %290, %287 ], [ %293, %291 ]
  %296 = load i32, i32* %295, align 4
  %297 = mul i32 %296, %229
  %298 = getelementptr inbounds float*, float** %114, i64 %279
  %299 = load float*, float** %298, align 8
  %300 = mul nsw i32 %297, %273
  %301 = sext i32 %300 to i64
  %302 = getelementptr inbounds float, float* %299, i64 %301
  %303 = bitcast float* %302 to i8*
  %304 = bitcast float* %280 to i8*
  %305 = sext i32 %297 to i64
  %306 = shl nsw i64 %305, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %303, i8* align 4 %304, i64 %306, i1 false) #10
  %307 = getelementptr inbounds float, float* %280, i64 %305
  %308 = add nuw nsw i64 %279, 1
  %309 = icmp eq i64 %308, %234
  br i1 %309, label %274, label %278

310:                                              ; preds = %274, %228
  br i1 %121, label %311, label %317

311:                                              ; preds = %310
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %313 = load i32*, i32** %312, align 8
  %314 = icmp eq i32* %313, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %311
  %316 = bitcast i32* %313 to i8*
  call void @_ZdaPv(i8* %316) #12
  br label %317

317:                                              ; preds = %310, %311, %315
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #10
  %318 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %111, align 8
  %319 = icmp eq %"class.tflite::RuntimeShape"** %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %317
  %321 = ptrtoint %"class.tflite::RuntimeShape"** %318 to i64
  %322 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 1
  %323 = bitcast %"class.tflite::RuntimeShape"*** %322 to i64*
  store i64 %321, i64* %323, align 8
  %324 = bitcast %"class.tflite::RuntimeShape"** %318 to i8*
  call void @_ZdlPv(i8* %324) #12
  br label %325

325:                                              ; preds = %320, %317
  %326 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1
  %327 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %326, i64 0, i32 0, i32 0
  %328 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %327, align 8
  %329 = icmp eq %"class.tflite::RuntimeShape"* %328, null
  br i1 %329, label %354, label %330

330:                                              ; preds = %325
  %331 = bitcast %"class.tflite::RuntimeShape"* %328 to i8*
  %332 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1, i32 0, i32 1
  %333 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %332, align 8
  %334 = icmp eq %"class.tflite::RuntimeShape"* %333, %328
  br i1 %334, label %352, label %335

335:                                              ; preds = %330, %347
  %336 = phi %"class.tflite::RuntimeShape"* [ %337, %347 ], [ %333, %330 ]
  %337 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %336, i64 -1
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %337, i64 0, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp sgt i32 %339, 5
  br i1 %340, label %341, label %347

341:                                              ; preds = %335
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %336, i64 -1, i32 1, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = bitcast i32* %343 to i8*
  call void @_ZdaPv(i8* %346) #12
  br label %347

347:                                              ; preds = %345, %341, %335
  %348 = icmp eq %"class.tflite::RuntimeShape"* %337, %328
  br i1 %348, label %349, label %335

349:                                              ; preds = %347
  %350 = bitcast %"class.std::__1::vector.9"* %326 to i8**
  %351 = load i8*, i8** %350, align 8
  br label %352

352:                                              ; preds = %349, %330
  %353 = phi i8* [ %351, %349 ], [ %331, %330 ]
  store %"class.tflite::RuntimeShape"* %328, %"class.tflite::RuntimeShape"** %332, align 8
  call void @_ZdlPv(i8* %353) #12
  br label %354

354:                                              ; preds = %352, %325
  %355 = load float**, float*** %113, align 8
  %356 = icmp eq float** %355, null
  br i1 %356, label %362, label %357

357:                                              ; preds = %354
  %358 = ptrtoint float** %355 to i64
  %359 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 1
  %360 = bitcast float*** %359 to i64*
  store i64 %358, i64* %360, align 8
  %361 = bitcast float** %355 to i8*
  call void @_ZdlPv(i8* %361) #12
  br label %362

362:                                              ; preds = %354, %357
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %68) #10
  br label %1840

363:                                              ; preds = %62
  %364 = bitcast %"class.tflite::VectorOfTensors.23"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %364) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %364, i8 -86, i64 72, i1 false)
  %365 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %366 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %365, align 8
  call void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.23"* nonnull %5, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %366)
  %367 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %365, align 8
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %367, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = trunc i32 %369 to i16
  %371 = trunc i32 %64 to i16
  %372 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %372) #10
  %373 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %373, label %374, label %376

374:                                              ; preds = %363
  %375 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %375, align 8, !alias.scope !10
  br label %404

376:                                              ; preds = %363
  %377 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %378 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %377, align 8, !noalias !10
  %379 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %378, i64 0, i32 0
  %380 = load i32, i32* %379, align 4, !noalias !10
  %381 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %378, i64 0, i32 1, i64 0
  %382 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %380, i32* %382, align 8, !alias.scope !10
  %383 = icmp sgt i32 %380, 5
  br i1 %383, label %384, label %391

384:                                              ; preds = %376
  %385 = sext i32 %380 to i64
  %386 = shl nsw i64 %385, 2
  %387 = call i8* @_Znam(i64 %386) #12, !noalias !10
  %388 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %389 = bitcast i32** %388 to i8**
  store i8* %387, i8** %389, align 8, !alias.scope !10
  %390 = bitcast i8* %387 to i32*
  br label %396

391:                                              ; preds = %376
  %392 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %393 = bitcast %union.anon* %392 to i32*
  %394 = sext i32 %380 to i64
  %395 = shl nsw i64 %394, 2
  br label %396

396:                                              ; preds = %391, %384
  %397 = phi i64 [ %386, %384 ], [ %395, %391 ]
  %398 = phi i32* [ %390, %384 ], [ %393, %391 ]
  %399 = bitcast i32* %398 to i8*
  %400 = bitcast i32* %381 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %399, i8* align 4 %400, i64 %397, i1 false) #10
  %401 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %402 = bitcast %union.TfLitePtrUnion* %401 to i8**
  %403 = load i8*, i8** %402, align 8
  br label %404

404:                                              ; preds = %374, %396
  %405 = phi i32 [ %380, %396 ], [ 0, %374 ]
  %406 = phi i8* [ %403, %396 ], [ null, %374 ]
  %407 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 2, i32 0, i32 0
  %408 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %407, align 8
  %409 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 0, i32 0, i32 0
  %410 = load i8**, i8*** %409, align 8
  %411 = shl i32 %64, 16
  %412 = ashr exact i32 %411, 16
  %413 = icmp slt i16 %371, 0
  %414 = select i1 %413, i32 %405, i32 0
  %415 = add i32 %414, %412
  %416 = icmp eq i16 %370, 0
  %417 = icmp sgt i32 %405, 5
  %418 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %419 = icmp sgt i32 %415, 0
  br i1 %419, label %420, label %448

420:                                              ; preds = %404
  %421 = getelementptr inbounds %union.anon, %union.anon* %418, i64 0, i32 0
  %422 = load i32*, i32** %421, align 8
  %423 = bitcast %union.anon* %418 to [5 x i32]*
  %424 = zext i32 %415 to i64
  %425 = add nsw i64 %424, -1
  %426 = and i64 %424, 3
  %427 = icmp ult i64 %425, 3
  br i1 %427, label %430, label %428

428:                                              ; preds = %420
  %429 = sub nsw i64 %424, %426
  br label %469

430:                                              ; preds = %469, %420
  %431 = phi i64 [ undef, %420 ], [ %499, %469 ]
  %432 = phi i64 [ 0, %420 ], [ %500, %469 ]
  %433 = phi i64 [ 1, %420 ], [ %499, %469 ]
  %434 = icmp eq i64 %426, 0
  br i1 %434, label %448, label %435

435:                                              ; preds = %430, %435
  %436 = phi i64 [ %445, %435 ], [ %432, %430 ]
  %437 = phi i64 [ %444, %435 ], [ %433, %430 ]
  %438 = phi i64 [ %446, %435 ], [ %426, %430 ]
  %439 = getelementptr inbounds i32, i32* %422, i64 %436
  %440 = getelementptr inbounds [5 x i32], [5 x i32]* %423, i64 0, i64 %436
  %441 = select i1 %417, i32* %439, i32* %440
  %442 = load i32, i32* %441, align 4
  %443 = sext i32 %442 to i64
  %444 = mul nsw i64 %437, %443
  %445 = add nuw nsw i64 %436, 1
  %446 = add i64 %438, -1
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %435, !llvm.loop !13

448:                                              ; preds = %430, %435, %404
  %449 = phi i64 [ 1, %404 ], [ %431, %430 ], [ %444, %435 ]
  %450 = add i32 %415, 1
  %451 = icmp slt i32 %450, %405
  br i1 %451, label %452, label %524

452:                                              ; preds = %448
  %453 = getelementptr inbounds %union.anon, %union.anon* %418, i64 0, i32 0
  %454 = load i32*, i32** %453, align 8
  %455 = bitcast %union.anon* %418 to [5 x i32]*
  %456 = sext i32 %450 to i64
  %457 = xor i32 %414, -1
  %458 = add i32 %405, %457
  %459 = shl i32 %64, 16
  %460 = ashr exact i32 %459, 16
  %461 = sub i32 %458, %460
  %462 = add i32 %405, -2
  %463 = sub i32 %462, %414
  %464 = sub i32 %463, %460
  %465 = and i32 %461, 3
  %466 = icmp ult i32 %464, 3
  br i1 %466, label %503, label %467

467:                                              ; preds = %452
  %468 = sub i32 %461, %465
  br label %531

469:                                              ; preds = %469, %428
  %470 = phi i64 [ 0, %428 ], [ %500, %469 ]
  %471 = phi i64 [ 1, %428 ], [ %499, %469 ]
  %472 = phi i64 [ %429, %428 ], [ %501, %469 ]
  %473 = getelementptr inbounds i32, i32* %422, i64 %470
  %474 = getelementptr inbounds [5 x i32], [5 x i32]* %423, i64 0, i64 %470
  %475 = select i1 %417, i32* %473, i32* %474
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = mul nsw i64 %471, %477
  %479 = or i64 %470, 1
  %480 = getelementptr inbounds i32, i32* %422, i64 %479
  %481 = getelementptr inbounds [5 x i32], [5 x i32]* %423, i64 0, i64 %479
  %482 = select i1 %417, i32* %480, i32* %481
  %483 = load i32, i32* %482, align 4
  %484 = sext i32 %483 to i64
  %485 = mul nsw i64 %478, %484
  %486 = or i64 %470, 2
  %487 = getelementptr inbounds i32, i32* %422, i64 %486
  %488 = getelementptr inbounds [5 x i32], [5 x i32]* %423, i64 0, i64 %486
  %489 = select i1 %417, i32* %487, i32* %488
  %490 = load i32, i32* %489, align 4
  %491 = sext i32 %490 to i64
  %492 = mul nsw i64 %485, %491
  %493 = or i64 %470, 3
  %494 = getelementptr inbounds i32, i32* %422, i64 %493
  %495 = getelementptr inbounds [5 x i32], [5 x i32]* %423, i64 0, i64 %493
  %496 = select i1 %417, i32* %494, i32* %495
  %497 = load i32, i32* %496, align 4
  %498 = sext i32 %497 to i64
  %499 = mul nsw i64 %492, %498
  %500 = add nuw nsw i64 %470, 4
  %501 = add i64 %472, -4
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %430, label %469

503:                                              ; preds = %531, %452
  %504 = phi i64 [ undef, %452 ], [ %561, %531 ]
  %505 = phi i64 [ %456, %452 ], [ %562, %531 ]
  %506 = phi i64 [ 1, %452 ], [ %561, %531 ]
  %507 = icmp eq i32 %465, 0
  br i1 %507, label %521, label %508

508:                                              ; preds = %503, %508
  %509 = phi i64 [ %518, %508 ], [ %505, %503 ]
  %510 = phi i64 [ %517, %508 ], [ %506, %503 ]
  %511 = phi i32 [ %519, %508 ], [ %465, %503 ]
  %512 = getelementptr inbounds i32, i32* %454, i64 %509
  %513 = getelementptr inbounds [5 x i32], [5 x i32]* %455, i64 0, i64 %509
  %514 = select i1 %417, i32* %512, i32* %513
  %515 = load i32, i32* %514, align 4
  %516 = sext i32 %515 to i64
  %517 = mul nsw i64 %510, %516
  %518 = add nsw i64 %509, 1
  %519 = add i32 %511, -1
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %508, !llvm.loop !14

521:                                              ; preds = %508, %503
  %522 = phi i64 [ %504, %503 ], [ %517, %508 ]
  %523 = trunc i64 %522 to i32
  br label %524

524:                                              ; preds = %521, %448
  %525 = phi i32 [ 1, %448 ], [ %523, %521 ]
  %526 = icmp sgt i64 %449, 0
  br i1 %526, label %527, label %603

527:                                              ; preds = %524
  %528 = sext i32 %415 to i64
  %529 = and i32 %369, 65535
  %530 = zext i32 %529 to i64
  br label %565

531:                                              ; preds = %531, %467
  %532 = phi i64 [ %456, %467 ], [ %562, %531 ]
  %533 = phi i64 [ 1, %467 ], [ %561, %531 ]
  %534 = phi i32 [ %468, %467 ], [ %563, %531 ]
  %535 = getelementptr inbounds i32, i32* %454, i64 %532
  %536 = getelementptr inbounds [5 x i32], [5 x i32]* %455, i64 0, i64 %532
  %537 = select i1 %417, i32* %535, i32* %536
  %538 = load i32, i32* %537, align 4
  %539 = sext i32 %538 to i64
  %540 = mul nsw i64 %533, %539
  %541 = add nsw i64 %532, 1
  %542 = getelementptr inbounds i32, i32* %454, i64 %541
  %543 = getelementptr inbounds [5 x i32], [5 x i32]* %455, i64 0, i64 %541
  %544 = select i1 %417, i32* %542, i32* %543
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = mul nsw i64 %540, %546
  %548 = add nsw i64 %532, 2
  %549 = getelementptr inbounds i32, i32* %454, i64 %548
  %550 = getelementptr inbounds [5 x i32], [5 x i32]* %455, i64 0, i64 %548
  %551 = select i1 %417, i32* %549, i32* %550
  %552 = load i32, i32* %551, align 4
  %553 = sext i32 %552 to i64
  %554 = mul nsw i64 %547, %553
  %555 = add nsw i64 %532, 3
  %556 = getelementptr inbounds i32, i32* %454, i64 %555
  %557 = getelementptr inbounds [5 x i32], [5 x i32]* %455, i64 0, i64 %555
  %558 = select i1 %417, i32* %556, i32* %557
  %559 = load i32, i32* %558, align 4
  %560 = sext i32 %559 to i64
  %561 = mul nsw i64 %554, %560
  %562 = add nsw i64 %532, 4
  %563 = add i32 %534, -4
  %564 = icmp eq i32 %563, 0
  br i1 %564, label %503, label %531

565:                                              ; preds = %570, %527
  %566 = phi i64 [ 0, %527 ], [ %572, %570 ]
  %567 = phi i8* [ %406, %527 ], [ %571, %570 ]
  br i1 %416, label %570, label %568

568:                                              ; preds = %565
  %569 = trunc i64 %566 to i32
  br label %574

570:                                              ; preds = %590, %565
  %571 = phi i8* [ %567, %565 ], [ %600, %590 ]
  %572 = add nuw nsw i64 %566, 1
  %573 = icmp eq i64 %572, %449
  br i1 %573, label %603, label %565

574:                                              ; preds = %590, %568
  %575 = phi i64 [ 0, %568 ], [ %601, %590 ]
  %576 = phi i8* [ %567, %568 ], [ %600, %590 ]
  %577 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %408, i64 %575
  %578 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %577, align 8
  %579 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %578, i64 0, i32 0
  %580 = load i32, i32* %579, align 8
  %581 = icmp sgt i32 %580, 5
  %582 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %578, i64 0, i32 1
  br i1 %581, label %583, label %587

583:                                              ; preds = %574
  %584 = getelementptr inbounds %union.anon, %union.anon* %582, i64 0, i32 0
  %585 = load i32*, i32** %584, align 8
  %586 = getelementptr inbounds i32, i32* %585, i64 %528
  br label %590

587:                                              ; preds = %574
  %588 = bitcast %union.anon* %582 to [5 x i32]*
  %589 = getelementptr inbounds [5 x i32], [5 x i32]* %588, i64 0, i64 %528
  br label %590

590:                                              ; preds = %587, %583
  %591 = phi i32* [ %586, %583 ], [ %589, %587 ]
  %592 = load i32, i32* %591, align 4
  %593 = mul i32 %592, %525
  %594 = getelementptr inbounds i8*, i8** %410, i64 %575
  %595 = load i8*, i8** %594, align 8
  %596 = mul nsw i32 %593, %569
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, i8* %595, i64 %597
  %599 = sext i32 %593 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %598, i8* align 1 %576, i64 %599, i1 false) #10
  %600 = getelementptr inbounds i8, i8* %576, i64 %599
  %601 = add nuw nsw i64 %575, 1
  %602 = icmp eq i64 %601, %530
  br i1 %602, label %570, label %574

603:                                              ; preds = %570, %524
  br i1 %417, label %604, label %610

604:                                              ; preds = %603
  %605 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %606 = load i32*, i32** %605, align 8
  %607 = icmp eq i32* %606, null
  br i1 %607, label %610, label %608

608:                                              ; preds = %604
  %609 = bitcast i32* %606 to i8*
  call void @_ZdaPv(i8* %609) #12
  br label %610

610:                                              ; preds = %603, %604, %608
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %372) #10
  %611 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %407, align 8
  %612 = icmp eq %"class.tflite::RuntimeShape"** %611, null
  br i1 %612, label %618, label %613

613:                                              ; preds = %610
  %614 = ptrtoint %"class.tflite::RuntimeShape"** %611 to i64
  %615 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 2, i32 0, i32 1
  %616 = bitcast %"class.tflite::RuntimeShape"*** %615 to i64*
  store i64 %614, i64* %616, align 8
  %617 = bitcast %"class.tflite::RuntimeShape"** %611 to i8*
  call void @_ZdlPv(i8* %617) #12
  br label %618

618:                                              ; preds = %613, %610
  %619 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 1
  %620 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %619, i64 0, i32 0, i32 0
  %621 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %620, align 8
  %622 = icmp eq %"class.tflite::RuntimeShape"* %621, null
  br i1 %622, label %647, label %623

623:                                              ; preds = %618
  %624 = bitcast %"class.tflite::RuntimeShape"* %621 to i8*
  %625 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 1, i32 0, i32 1
  %626 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %625, align 8
  %627 = icmp eq %"class.tflite::RuntimeShape"* %626, %621
  br i1 %627, label %645, label %628

628:                                              ; preds = %623, %640
  %629 = phi %"class.tflite::RuntimeShape"* [ %630, %640 ], [ %626, %623 ]
  %630 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %629, i64 -1
  %631 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %630, i64 0, i32 0
  %632 = load i32, i32* %631, align 8
  %633 = icmp sgt i32 %632, 5
  br i1 %633, label %634, label %640

634:                                              ; preds = %628
  %635 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %629, i64 -1, i32 1, i32 0
  %636 = load i32*, i32** %635, align 8
  %637 = icmp eq i32* %636, null
  br i1 %637, label %640, label %638

638:                                              ; preds = %634
  %639 = bitcast i32* %636 to i8*
  call void @_ZdaPv(i8* %639) #12
  br label %640

640:                                              ; preds = %638, %634, %628
  %641 = icmp eq %"class.tflite::RuntimeShape"* %630, %621
  br i1 %641, label %642, label %628

642:                                              ; preds = %640
  %643 = bitcast %"class.std::__1::vector.9"* %619 to i8**
  %644 = load i8*, i8** %643, align 8
  br label %645

645:                                              ; preds = %642, %623
  %646 = phi i8* [ %644, %642 ], [ %624, %623 ]
  store %"class.tflite::RuntimeShape"* %621, %"class.tflite::RuntimeShape"** %625, align 8
  call void @_ZdlPv(i8* %646) #12
  br label %647

647:                                              ; preds = %645, %618
  %648 = load i8**, i8*** %409, align 8
  %649 = icmp eq i8** %648, null
  br i1 %649, label %655, label %650

650:                                              ; preds = %647
  %651 = ptrtoint i8** %648 to i64
  %652 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %5, i64 0, i32 0, i32 0, i32 1
  %653 = bitcast i8*** %652 to i64*
  store i64 %651, i64* %653, align 8
  %654 = bitcast i8** %648 to i8*
  call void @_ZdlPv(i8* %654) #12
  br label %655

655:                                              ; preds = %647, %650
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %364) #10
  br label %1840

656:                                              ; preds = %62
  %657 = bitcast %"class.tflite::VectorOfTensors.31"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %657) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %657, i8 -86, i64 72, i1 false)
  %658 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %659 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %658, align 8
  call void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.31"* nonnull %7, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %659)
  %660 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %658, align 8
  %661 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %660, i64 0, i32 0
  %662 = load i32, i32* %661, align 4
  %663 = trunc i32 %662 to i16
  %664 = trunc i32 %64 to i16
  %665 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %665) #10
  %666 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %666, label %667, label %669

667:                                              ; preds = %656
  %668 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %668, align 8, !alias.scope !15
  br label %697

669:                                              ; preds = %656
  %670 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %671 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %670, align 8, !noalias !15
  %672 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %671, i64 0, i32 0
  %673 = load i32, i32* %672, align 4, !noalias !15
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %671, i64 0, i32 1, i64 0
  %675 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %673, i32* %675, align 8, !alias.scope !15
  %676 = icmp sgt i32 %673, 5
  br i1 %676, label %677, label %684

677:                                              ; preds = %669
  %678 = sext i32 %673 to i64
  %679 = shl nsw i64 %678, 2
  %680 = call i8* @_Znam(i64 %679) #12, !noalias !15
  %681 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %682 = bitcast i32** %681 to i8**
  store i8* %680, i8** %682, align 8, !alias.scope !15
  %683 = bitcast i8* %680 to i32*
  br label %689

684:                                              ; preds = %669
  %685 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %686 = bitcast %union.anon* %685 to i32*
  %687 = sext i32 %673 to i64
  %688 = shl nsw i64 %687, 2
  br label %689

689:                                              ; preds = %684, %677
  %690 = phi i64 [ %679, %677 ], [ %688, %684 ]
  %691 = phi i32* [ %683, %677 ], [ %686, %684 ]
  %692 = bitcast i32* %691 to i8*
  %693 = bitcast i32* %674 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %692, i8* align 4 %693, i64 %690, i1 false) #10
  %694 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %695 = bitcast %union.TfLitePtrUnion* %694 to i16**
  %696 = load i16*, i16** %695, align 8
  br label %697

697:                                              ; preds = %667, %689
  %698 = phi i32 [ %673, %689 ], [ 0, %667 ]
  %699 = phi i16* [ %696, %689 ], [ null, %667 ]
  %700 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 2, i32 0, i32 0
  %701 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %700, align 8
  %702 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 0, i32 0, i32 0
  %703 = load i16**, i16*** %702, align 8
  %704 = shl i32 %64, 16
  %705 = ashr exact i32 %704, 16
  %706 = icmp slt i16 %664, 0
  %707 = select i1 %706, i32 %698, i32 0
  %708 = add i32 %707, %705
  %709 = icmp eq i16 %663, 0
  %710 = icmp sgt i32 %698, 5
  %711 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %712 = icmp sgt i32 %708, 0
  br i1 %712, label %713, label %741

713:                                              ; preds = %697
  %714 = getelementptr inbounds %union.anon, %union.anon* %711, i64 0, i32 0
  %715 = load i32*, i32** %714, align 8
  %716 = bitcast %union.anon* %711 to [5 x i32]*
  %717 = zext i32 %708 to i64
  %718 = add nsw i64 %717, -1
  %719 = and i64 %717, 3
  %720 = icmp ult i64 %718, 3
  br i1 %720, label %723, label %721

721:                                              ; preds = %713
  %722 = sub nsw i64 %717, %719
  br label %762

723:                                              ; preds = %762, %713
  %724 = phi i64 [ undef, %713 ], [ %792, %762 ]
  %725 = phi i64 [ 0, %713 ], [ %793, %762 ]
  %726 = phi i64 [ 1, %713 ], [ %792, %762 ]
  %727 = icmp eq i64 %719, 0
  br i1 %727, label %741, label %728

728:                                              ; preds = %723, %728
  %729 = phi i64 [ %738, %728 ], [ %725, %723 ]
  %730 = phi i64 [ %737, %728 ], [ %726, %723 ]
  %731 = phi i64 [ %739, %728 ], [ %719, %723 ]
  %732 = getelementptr inbounds i32, i32* %715, i64 %729
  %733 = getelementptr inbounds [5 x i32], [5 x i32]* %716, i64 0, i64 %729
  %734 = select i1 %710, i32* %732, i32* %733
  %735 = load i32, i32* %734, align 4
  %736 = sext i32 %735 to i64
  %737 = mul nsw i64 %730, %736
  %738 = add nuw nsw i64 %729, 1
  %739 = add i64 %731, -1
  %740 = icmp eq i64 %739, 0
  br i1 %740, label %741, label %728, !llvm.loop !18

741:                                              ; preds = %723, %728, %697
  %742 = phi i64 [ 1, %697 ], [ %724, %723 ], [ %737, %728 ]
  %743 = add i32 %708, 1
  %744 = icmp slt i32 %743, %698
  br i1 %744, label %745, label %817

745:                                              ; preds = %741
  %746 = getelementptr inbounds %union.anon, %union.anon* %711, i64 0, i32 0
  %747 = load i32*, i32** %746, align 8
  %748 = bitcast %union.anon* %711 to [5 x i32]*
  %749 = sext i32 %743 to i64
  %750 = xor i32 %707, -1
  %751 = add i32 %698, %750
  %752 = shl i32 %64, 16
  %753 = ashr exact i32 %752, 16
  %754 = sub i32 %751, %753
  %755 = add i32 %698, -2
  %756 = sub i32 %755, %707
  %757 = sub i32 %756, %753
  %758 = and i32 %754, 3
  %759 = icmp ult i32 %757, 3
  br i1 %759, label %796, label %760

760:                                              ; preds = %745
  %761 = sub i32 %754, %758
  br label %824

762:                                              ; preds = %762, %721
  %763 = phi i64 [ 0, %721 ], [ %793, %762 ]
  %764 = phi i64 [ 1, %721 ], [ %792, %762 ]
  %765 = phi i64 [ %722, %721 ], [ %794, %762 ]
  %766 = getelementptr inbounds i32, i32* %715, i64 %763
  %767 = getelementptr inbounds [5 x i32], [5 x i32]* %716, i64 0, i64 %763
  %768 = select i1 %710, i32* %766, i32* %767
  %769 = load i32, i32* %768, align 4
  %770 = sext i32 %769 to i64
  %771 = mul nsw i64 %764, %770
  %772 = or i64 %763, 1
  %773 = getelementptr inbounds i32, i32* %715, i64 %772
  %774 = getelementptr inbounds [5 x i32], [5 x i32]* %716, i64 0, i64 %772
  %775 = select i1 %710, i32* %773, i32* %774
  %776 = load i32, i32* %775, align 4
  %777 = sext i32 %776 to i64
  %778 = mul nsw i64 %771, %777
  %779 = or i64 %763, 2
  %780 = getelementptr inbounds i32, i32* %715, i64 %779
  %781 = getelementptr inbounds [5 x i32], [5 x i32]* %716, i64 0, i64 %779
  %782 = select i1 %710, i32* %780, i32* %781
  %783 = load i32, i32* %782, align 4
  %784 = sext i32 %783 to i64
  %785 = mul nsw i64 %778, %784
  %786 = or i64 %763, 3
  %787 = getelementptr inbounds i32, i32* %715, i64 %786
  %788 = getelementptr inbounds [5 x i32], [5 x i32]* %716, i64 0, i64 %786
  %789 = select i1 %710, i32* %787, i32* %788
  %790 = load i32, i32* %789, align 4
  %791 = sext i32 %790 to i64
  %792 = mul nsw i64 %785, %791
  %793 = add nuw nsw i64 %763, 4
  %794 = add i64 %765, -4
  %795 = icmp eq i64 %794, 0
  br i1 %795, label %723, label %762

796:                                              ; preds = %824, %745
  %797 = phi i64 [ undef, %745 ], [ %854, %824 ]
  %798 = phi i64 [ %749, %745 ], [ %855, %824 ]
  %799 = phi i64 [ 1, %745 ], [ %854, %824 ]
  %800 = icmp eq i32 %758, 0
  br i1 %800, label %814, label %801

801:                                              ; preds = %796, %801
  %802 = phi i64 [ %811, %801 ], [ %798, %796 ]
  %803 = phi i64 [ %810, %801 ], [ %799, %796 ]
  %804 = phi i32 [ %812, %801 ], [ %758, %796 ]
  %805 = getelementptr inbounds i32, i32* %747, i64 %802
  %806 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 0, i64 %802
  %807 = select i1 %710, i32* %805, i32* %806
  %808 = load i32, i32* %807, align 4
  %809 = sext i32 %808 to i64
  %810 = mul nsw i64 %803, %809
  %811 = add nsw i64 %802, 1
  %812 = add i32 %804, -1
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %814, label %801, !llvm.loop !19

814:                                              ; preds = %801, %796
  %815 = phi i64 [ %797, %796 ], [ %810, %801 ]
  %816 = trunc i64 %815 to i32
  br label %817

817:                                              ; preds = %814, %741
  %818 = phi i32 [ 1, %741 ], [ %816, %814 ]
  %819 = icmp sgt i64 %742, 0
  br i1 %819, label %820, label %899

820:                                              ; preds = %817
  %821 = sext i32 %708 to i64
  %822 = and i32 %662, 65535
  %823 = zext i32 %822 to i64
  br label %858

824:                                              ; preds = %824, %760
  %825 = phi i64 [ %749, %760 ], [ %855, %824 ]
  %826 = phi i64 [ 1, %760 ], [ %854, %824 ]
  %827 = phi i32 [ %761, %760 ], [ %856, %824 ]
  %828 = getelementptr inbounds i32, i32* %747, i64 %825
  %829 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 0, i64 %825
  %830 = select i1 %710, i32* %828, i32* %829
  %831 = load i32, i32* %830, align 4
  %832 = sext i32 %831 to i64
  %833 = mul nsw i64 %826, %832
  %834 = add nsw i64 %825, 1
  %835 = getelementptr inbounds i32, i32* %747, i64 %834
  %836 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 0, i64 %834
  %837 = select i1 %710, i32* %835, i32* %836
  %838 = load i32, i32* %837, align 4
  %839 = sext i32 %838 to i64
  %840 = mul nsw i64 %833, %839
  %841 = add nsw i64 %825, 2
  %842 = getelementptr inbounds i32, i32* %747, i64 %841
  %843 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 0, i64 %841
  %844 = select i1 %710, i32* %842, i32* %843
  %845 = load i32, i32* %844, align 4
  %846 = sext i32 %845 to i64
  %847 = mul nsw i64 %840, %846
  %848 = add nsw i64 %825, 3
  %849 = getelementptr inbounds i32, i32* %747, i64 %848
  %850 = getelementptr inbounds [5 x i32], [5 x i32]* %748, i64 0, i64 %848
  %851 = select i1 %710, i32* %849, i32* %850
  %852 = load i32, i32* %851, align 4
  %853 = sext i32 %852 to i64
  %854 = mul nsw i64 %847, %853
  %855 = add nsw i64 %825, 4
  %856 = add i32 %827, -4
  %857 = icmp eq i32 %856, 0
  br i1 %857, label %796, label %824

858:                                              ; preds = %863, %820
  %859 = phi i64 [ 0, %820 ], [ %865, %863 ]
  %860 = phi i16* [ %699, %820 ], [ %864, %863 ]
  br i1 %709, label %863, label %861

861:                                              ; preds = %858
  %862 = trunc i64 %859 to i32
  br label %867

863:                                              ; preds = %883, %858
  %864 = phi i16* [ %860, %858 ], [ %896, %883 ]
  %865 = add nuw nsw i64 %859, 1
  %866 = icmp eq i64 %865, %742
  br i1 %866, label %899, label %858

867:                                              ; preds = %883, %861
  %868 = phi i64 [ 0, %861 ], [ %897, %883 ]
  %869 = phi i16* [ %860, %861 ], [ %896, %883 ]
  %870 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %701, i64 %868
  %871 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %870, align 8
  %872 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %871, i64 0, i32 0
  %873 = load i32, i32* %872, align 8
  %874 = icmp sgt i32 %873, 5
  %875 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %871, i64 0, i32 1
  br i1 %874, label %876, label %880

876:                                              ; preds = %867
  %877 = getelementptr inbounds %union.anon, %union.anon* %875, i64 0, i32 0
  %878 = load i32*, i32** %877, align 8
  %879 = getelementptr inbounds i32, i32* %878, i64 %821
  br label %883

880:                                              ; preds = %867
  %881 = bitcast %union.anon* %875 to [5 x i32]*
  %882 = getelementptr inbounds [5 x i32], [5 x i32]* %881, i64 0, i64 %821
  br label %883

883:                                              ; preds = %880, %876
  %884 = phi i32* [ %879, %876 ], [ %882, %880 ]
  %885 = load i32, i32* %884, align 4
  %886 = mul i32 %885, %818
  %887 = getelementptr inbounds i16*, i16** %703, i64 %868
  %888 = load i16*, i16** %887, align 8
  %889 = mul nsw i32 %886, %862
  %890 = sext i32 %889 to i64
  %891 = getelementptr inbounds i16, i16* %888, i64 %890
  %892 = bitcast i16* %891 to i8*
  %893 = bitcast i16* %869 to i8*
  %894 = sext i32 %886 to i64
  %895 = shl nsw i64 %894, 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %892, i8* align 2 %893, i64 %895, i1 false) #10
  %896 = getelementptr inbounds i16, i16* %869, i64 %894
  %897 = add nuw nsw i64 %868, 1
  %898 = icmp eq i64 %897, %823
  br i1 %898, label %863, label %867

899:                                              ; preds = %863, %817
  br i1 %710, label %900, label %906

900:                                              ; preds = %899
  %901 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %902 = load i32*, i32** %901, align 8
  %903 = icmp eq i32* %902, null
  br i1 %903, label %906, label %904

904:                                              ; preds = %900
  %905 = bitcast i32* %902 to i8*
  call void @_ZdaPv(i8* %905) #12
  br label %906

906:                                              ; preds = %899, %900, %904
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %665) #10
  %907 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %700, align 8
  %908 = icmp eq %"class.tflite::RuntimeShape"** %907, null
  br i1 %908, label %914, label %909

909:                                              ; preds = %906
  %910 = ptrtoint %"class.tflite::RuntimeShape"** %907 to i64
  %911 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 2, i32 0, i32 1
  %912 = bitcast %"class.tflite::RuntimeShape"*** %911 to i64*
  store i64 %910, i64* %912, align 8
  %913 = bitcast %"class.tflite::RuntimeShape"** %907 to i8*
  call void @_ZdlPv(i8* %913) #12
  br label %914

914:                                              ; preds = %909, %906
  %915 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 1
  %916 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %915, i64 0, i32 0, i32 0
  %917 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %916, align 8
  %918 = icmp eq %"class.tflite::RuntimeShape"* %917, null
  br i1 %918, label %943, label %919

919:                                              ; preds = %914
  %920 = bitcast %"class.tflite::RuntimeShape"* %917 to i8*
  %921 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 1, i32 0, i32 1
  %922 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %921, align 8
  %923 = icmp eq %"class.tflite::RuntimeShape"* %922, %917
  br i1 %923, label %941, label %924

924:                                              ; preds = %919, %936
  %925 = phi %"class.tflite::RuntimeShape"* [ %926, %936 ], [ %922, %919 ]
  %926 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %925, i64 -1
  %927 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %926, i64 0, i32 0
  %928 = load i32, i32* %927, align 8
  %929 = icmp sgt i32 %928, 5
  br i1 %929, label %930, label %936

930:                                              ; preds = %924
  %931 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %925, i64 -1, i32 1, i32 0
  %932 = load i32*, i32** %931, align 8
  %933 = icmp eq i32* %932, null
  br i1 %933, label %936, label %934

934:                                              ; preds = %930
  %935 = bitcast i32* %932 to i8*
  call void @_ZdaPv(i8* %935) #12
  br label %936

936:                                              ; preds = %934, %930, %924
  %937 = icmp eq %"class.tflite::RuntimeShape"* %926, %917
  br i1 %937, label %938, label %924

938:                                              ; preds = %936
  %939 = bitcast %"class.std::__1::vector.9"* %915 to i8**
  %940 = load i8*, i8** %939, align 8
  br label %941

941:                                              ; preds = %938, %919
  %942 = phi i8* [ %940, %938 ], [ %920, %919 ]
  store %"class.tflite::RuntimeShape"* %917, %"class.tflite::RuntimeShape"** %921, align 8
  call void @_ZdlPv(i8* %942) #12
  br label %943

943:                                              ; preds = %941, %914
  %944 = load i16**, i16*** %702, align 8
  %945 = icmp eq i16** %944, null
  br i1 %945, label %951, label %946

946:                                              ; preds = %943
  %947 = ptrtoint i16** %944 to i64
  %948 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %7, i64 0, i32 0, i32 0, i32 1
  %949 = bitcast i16*** %948 to i64*
  store i64 %947, i64* %949, align 8
  %950 = bitcast i16** %944 to i8*
  call void @_ZdlPv(i8* %950) #12
  br label %951

951:                                              ; preds = %943, %946
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %657) #10
  br label %1840

952:                                              ; preds = %62
  %953 = bitcast %"class.tflite::VectorOfTensors.39"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %953) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %953, i8 -86, i64 72, i1 false)
  %954 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %955 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %954, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.39"* nonnull %9, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %955)
  %956 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %954, align 8
  %957 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %956, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  %959 = trunc i32 %958 to i16
  %960 = trunc i32 %64 to i16
  %961 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %961) #10
  %962 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %962, label %963, label %965

963:                                              ; preds = %952
  %964 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %964, align 8, !alias.scope !20
  br label %992

965:                                              ; preds = %952
  %966 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %967 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %966, align 8, !noalias !20
  %968 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %967, i64 0, i32 0
  %969 = load i32, i32* %968, align 4, !noalias !20
  %970 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %967, i64 0, i32 1, i64 0
  %971 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %969, i32* %971, align 8, !alias.scope !20
  %972 = icmp sgt i32 %969, 5
  br i1 %972, label %973, label %980

973:                                              ; preds = %965
  %974 = sext i32 %969 to i64
  %975 = shl nsw i64 %974, 2
  %976 = call i8* @_Znam(i64 %975) #12, !noalias !20
  %977 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %978 = bitcast i32** %977 to i8**
  store i8* %976, i8** %978, align 8, !alias.scope !20
  %979 = bitcast i8* %976 to i32*
  br label %985

980:                                              ; preds = %965
  %981 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %982 = bitcast %union.anon* %981 to i32*
  %983 = sext i32 %969 to i64
  %984 = shl nsw i64 %983, 2
  br label %985

985:                                              ; preds = %980, %973
  %986 = phi i64 [ %975, %973 ], [ %984, %980 ]
  %987 = phi i32* [ %979, %973 ], [ %982, %980 ]
  %988 = bitcast i32* %987 to i8*
  %989 = bitcast i32* %970 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %988, i8* align 4 %989, i64 %986, i1 false) #10
  %990 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1, i32 0
  %991 = load i32*, i32** %990, align 8
  br label %992

992:                                              ; preds = %963, %985
  %993 = phi i32 [ %969, %985 ], [ 0, %963 ]
  %994 = phi i32* [ %991, %985 ], [ null, %963 ]
  %995 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 2, i32 0, i32 0
  %996 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %995, align 8
  %997 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 0, i32 0, i32 0
  %998 = load i32**, i32*** %997, align 8
  %999 = shl i32 %64, 16
  %1000 = ashr exact i32 %999, 16
  %1001 = icmp slt i16 %960, 0
  %1002 = select i1 %1001, i32 %993, i32 0
  %1003 = add i32 %1002, %1000
  %1004 = icmp eq i16 %959, 0
  %1005 = icmp sgt i32 %993, 5
  %1006 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %1007 = icmp sgt i32 %1003, 0
  br i1 %1007, label %1008, label %1036

1008:                                             ; preds = %992
  %1009 = getelementptr inbounds %union.anon, %union.anon* %1006, i64 0, i32 0
  %1010 = load i32*, i32** %1009, align 8
  %1011 = bitcast %union.anon* %1006 to [5 x i32]*
  %1012 = zext i32 %1003 to i64
  %1013 = add nsw i64 %1012, -1
  %1014 = and i64 %1012, 3
  %1015 = icmp ult i64 %1013, 3
  br i1 %1015, label %1018, label %1016

1016:                                             ; preds = %1008
  %1017 = sub nsw i64 %1012, %1014
  br label %1057

1018:                                             ; preds = %1057, %1008
  %1019 = phi i64 [ undef, %1008 ], [ %1087, %1057 ]
  %1020 = phi i64 [ 0, %1008 ], [ %1088, %1057 ]
  %1021 = phi i64 [ 1, %1008 ], [ %1087, %1057 ]
  %1022 = icmp eq i64 %1014, 0
  br i1 %1022, label %1036, label %1023

1023:                                             ; preds = %1018, %1023
  %1024 = phi i64 [ %1033, %1023 ], [ %1020, %1018 ]
  %1025 = phi i64 [ %1032, %1023 ], [ %1021, %1018 ]
  %1026 = phi i64 [ %1034, %1023 ], [ %1014, %1018 ]
  %1027 = getelementptr inbounds i32, i32* %1010, i64 %1024
  %1028 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 %1024
  %1029 = select i1 %1005, i32* %1027, i32* %1028
  %1030 = load i32, i32* %1029, align 4
  %1031 = sext i32 %1030 to i64
  %1032 = mul nsw i64 %1025, %1031
  %1033 = add nuw nsw i64 %1024, 1
  %1034 = add i64 %1026, -1
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1036, label %1023, !llvm.loop !23

1036:                                             ; preds = %1018, %1023, %992
  %1037 = phi i64 [ 1, %992 ], [ %1019, %1018 ], [ %1032, %1023 ]
  %1038 = add i32 %1003, 1
  %1039 = icmp slt i32 %1038, %993
  br i1 %1039, label %1040, label %1112

1040:                                             ; preds = %1036
  %1041 = getelementptr inbounds %union.anon, %union.anon* %1006, i64 0, i32 0
  %1042 = load i32*, i32** %1041, align 8
  %1043 = bitcast %union.anon* %1006 to [5 x i32]*
  %1044 = sext i32 %1038 to i64
  %1045 = xor i32 %1002, -1
  %1046 = add i32 %993, %1045
  %1047 = shl i32 %64, 16
  %1048 = ashr exact i32 %1047, 16
  %1049 = sub i32 %1046, %1048
  %1050 = add i32 %993, -2
  %1051 = sub i32 %1050, %1002
  %1052 = sub i32 %1051, %1048
  %1053 = and i32 %1049, 3
  %1054 = icmp ult i32 %1052, 3
  br i1 %1054, label %1091, label %1055

1055:                                             ; preds = %1040
  %1056 = sub i32 %1049, %1053
  br label %1119

1057:                                             ; preds = %1057, %1016
  %1058 = phi i64 [ 0, %1016 ], [ %1088, %1057 ]
  %1059 = phi i64 [ 1, %1016 ], [ %1087, %1057 ]
  %1060 = phi i64 [ %1017, %1016 ], [ %1089, %1057 ]
  %1061 = getelementptr inbounds i32, i32* %1010, i64 %1058
  %1062 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 %1058
  %1063 = select i1 %1005, i32* %1061, i32* %1062
  %1064 = load i32, i32* %1063, align 4
  %1065 = sext i32 %1064 to i64
  %1066 = mul nsw i64 %1059, %1065
  %1067 = or i64 %1058, 1
  %1068 = getelementptr inbounds i32, i32* %1010, i64 %1067
  %1069 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 %1067
  %1070 = select i1 %1005, i32* %1068, i32* %1069
  %1071 = load i32, i32* %1070, align 4
  %1072 = sext i32 %1071 to i64
  %1073 = mul nsw i64 %1066, %1072
  %1074 = or i64 %1058, 2
  %1075 = getelementptr inbounds i32, i32* %1010, i64 %1074
  %1076 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 %1074
  %1077 = select i1 %1005, i32* %1075, i32* %1076
  %1078 = load i32, i32* %1077, align 4
  %1079 = sext i32 %1078 to i64
  %1080 = mul nsw i64 %1073, %1079
  %1081 = or i64 %1058, 3
  %1082 = getelementptr inbounds i32, i32* %1010, i64 %1081
  %1083 = getelementptr inbounds [5 x i32], [5 x i32]* %1011, i64 0, i64 %1081
  %1084 = select i1 %1005, i32* %1082, i32* %1083
  %1085 = load i32, i32* %1084, align 4
  %1086 = sext i32 %1085 to i64
  %1087 = mul nsw i64 %1080, %1086
  %1088 = add nuw nsw i64 %1058, 4
  %1089 = add i64 %1060, -4
  %1090 = icmp eq i64 %1089, 0
  br i1 %1090, label %1018, label %1057

1091:                                             ; preds = %1119, %1040
  %1092 = phi i64 [ undef, %1040 ], [ %1149, %1119 ]
  %1093 = phi i64 [ %1044, %1040 ], [ %1150, %1119 ]
  %1094 = phi i64 [ 1, %1040 ], [ %1149, %1119 ]
  %1095 = icmp eq i32 %1053, 0
  br i1 %1095, label %1109, label %1096

1096:                                             ; preds = %1091, %1096
  %1097 = phi i64 [ %1106, %1096 ], [ %1093, %1091 ]
  %1098 = phi i64 [ %1105, %1096 ], [ %1094, %1091 ]
  %1099 = phi i32 [ %1107, %1096 ], [ %1053, %1091 ]
  %1100 = getelementptr inbounds i32, i32* %1042, i64 %1097
  %1101 = getelementptr inbounds [5 x i32], [5 x i32]* %1043, i64 0, i64 %1097
  %1102 = select i1 %1005, i32* %1100, i32* %1101
  %1103 = load i32, i32* %1102, align 4
  %1104 = sext i32 %1103 to i64
  %1105 = mul nsw i64 %1098, %1104
  %1106 = add nsw i64 %1097, 1
  %1107 = add i32 %1099, -1
  %1108 = icmp eq i32 %1107, 0
  br i1 %1108, label %1109, label %1096, !llvm.loop !24

1109:                                             ; preds = %1096, %1091
  %1110 = phi i64 [ %1092, %1091 ], [ %1105, %1096 ]
  %1111 = trunc i64 %1110 to i32
  br label %1112

1112:                                             ; preds = %1109, %1036
  %1113 = phi i32 [ 1, %1036 ], [ %1111, %1109 ]
  %1114 = icmp sgt i64 %1037, 0
  br i1 %1114, label %1115, label %1194

1115:                                             ; preds = %1112
  %1116 = sext i32 %1003 to i64
  %1117 = and i32 %958, 65535
  %1118 = zext i32 %1117 to i64
  br label %1153

1119:                                             ; preds = %1119, %1055
  %1120 = phi i64 [ %1044, %1055 ], [ %1150, %1119 ]
  %1121 = phi i64 [ 1, %1055 ], [ %1149, %1119 ]
  %1122 = phi i32 [ %1056, %1055 ], [ %1151, %1119 ]
  %1123 = getelementptr inbounds i32, i32* %1042, i64 %1120
  %1124 = getelementptr inbounds [5 x i32], [5 x i32]* %1043, i64 0, i64 %1120
  %1125 = select i1 %1005, i32* %1123, i32* %1124
  %1126 = load i32, i32* %1125, align 4
  %1127 = sext i32 %1126 to i64
  %1128 = mul nsw i64 %1121, %1127
  %1129 = add nsw i64 %1120, 1
  %1130 = getelementptr inbounds i32, i32* %1042, i64 %1129
  %1131 = getelementptr inbounds [5 x i32], [5 x i32]* %1043, i64 0, i64 %1129
  %1132 = select i1 %1005, i32* %1130, i32* %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = sext i32 %1133 to i64
  %1135 = mul nsw i64 %1128, %1134
  %1136 = add nsw i64 %1120, 2
  %1137 = getelementptr inbounds i32, i32* %1042, i64 %1136
  %1138 = getelementptr inbounds [5 x i32], [5 x i32]* %1043, i64 0, i64 %1136
  %1139 = select i1 %1005, i32* %1137, i32* %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = sext i32 %1140 to i64
  %1142 = mul nsw i64 %1135, %1141
  %1143 = add nsw i64 %1120, 3
  %1144 = getelementptr inbounds i32, i32* %1042, i64 %1143
  %1145 = getelementptr inbounds [5 x i32], [5 x i32]* %1043, i64 0, i64 %1143
  %1146 = select i1 %1005, i32* %1144, i32* %1145
  %1147 = load i32, i32* %1146, align 4
  %1148 = sext i32 %1147 to i64
  %1149 = mul nsw i64 %1142, %1148
  %1150 = add nsw i64 %1120, 4
  %1151 = add i32 %1122, -4
  %1152 = icmp eq i32 %1151, 0
  br i1 %1152, label %1091, label %1119

1153:                                             ; preds = %1158, %1115
  %1154 = phi i64 [ 0, %1115 ], [ %1160, %1158 ]
  %1155 = phi i32* [ %994, %1115 ], [ %1159, %1158 ]
  br i1 %1004, label %1158, label %1156

1156:                                             ; preds = %1153
  %1157 = trunc i64 %1154 to i32
  br label %1162

1158:                                             ; preds = %1178, %1153
  %1159 = phi i32* [ %1155, %1153 ], [ %1191, %1178 ]
  %1160 = add nuw nsw i64 %1154, 1
  %1161 = icmp eq i64 %1160, %1037
  br i1 %1161, label %1194, label %1153

1162:                                             ; preds = %1178, %1156
  %1163 = phi i64 [ 0, %1156 ], [ %1192, %1178 ]
  %1164 = phi i32* [ %1155, %1156 ], [ %1191, %1178 ]
  %1165 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %996, i64 %1163
  %1166 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1165, align 8
  %1167 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1166, i64 0, i32 0
  %1168 = load i32, i32* %1167, align 8
  %1169 = icmp sgt i32 %1168, 5
  %1170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1166, i64 0, i32 1
  br i1 %1169, label %1171, label %1175

1171:                                             ; preds = %1162
  %1172 = getelementptr inbounds %union.anon, %union.anon* %1170, i64 0, i32 0
  %1173 = load i32*, i32** %1172, align 8
  %1174 = getelementptr inbounds i32, i32* %1173, i64 %1116
  br label %1178

1175:                                             ; preds = %1162
  %1176 = bitcast %union.anon* %1170 to [5 x i32]*
  %1177 = getelementptr inbounds [5 x i32], [5 x i32]* %1176, i64 0, i64 %1116
  br label %1178

1178:                                             ; preds = %1175, %1171
  %1179 = phi i32* [ %1174, %1171 ], [ %1177, %1175 ]
  %1180 = load i32, i32* %1179, align 4
  %1181 = mul i32 %1180, %1113
  %1182 = getelementptr inbounds i32*, i32** %998, i64 %1163
  %1183 = load i32*, i32** %1182, align 8
  %1184 = mul nsw i32 %1181, %1157
  %1185 = sext i32 %1184 to i64
  %1186 = getelementptr inbounds i32, i32* %1183, i64 %1185
  %1187 = bitcast i32* %1186 to i8*
  %1188 = bitcast i32* %1164 to i8*
  %1189 = sext i32 %1181 to i64
  %1190 = shl nsw i64 %1189, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1187, i8* align 4 %1188, i64 %1190, i1 false) #10
  %1191 = getelementptr inbounds i32, i32* %1164, i64 %1189
  %1192 = add nuw nsw i64 %1163, 1
  %1193 = icmp eq i64 %1192, %1118
  br i1 %1193, label %1158, label %1162

1194:                                             ; preds = %1158, %1112
  br i1 %1005, label %1195, label %1201

1195:                                             ; preds = %1194
  %1196 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %1197 = load i32*, i32** %1196, align 8
  %1198 = icmp eq i32* %1197, null
  br i1 %1198, label %1201, label %1199

1199:                                             ; preds = %1195
  %1200 = bitcast i32* %1197 to i8*
  call void @_ZdaPv(i8* %1200) #12
  br label %1201

1201:                                             ; preds = %1194, %1195, %1199
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %961) #10
  %1202 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %995, align 8
  %1203 = icmp eq %"class.tflite::RuntimeShape"** %1202, null
  br i1 %1203, label %1209, label %1204

1204:                                             ; preds = %1201
  %1205 = ptrtoint %"class.tflite::RuntimeShape"** %1202 to i64
  %1206 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 2, i32 0, i32 1
  %1207 = bitcast %"class.tflite::RuntimeShape"*** %1206 to i64*
  store i64 %1205, i64* %1207, align 8
  %1208 = bitcast %"class.tflite::RuntimeShape"** %1202 to i8*
  call void @_ZdlPv(i8* %1208) #12
  br label %1209

1209:                                             ; preds = %1204, %1201
  %1210 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 1
  %1211 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1210, i64 0, i32 0, i32 0
  %1212 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1211, align 8
  %1213 = icmp eq %"class.tflite::RuntimeShape"* %1212, null
  br i1 %1213, label %1238, label %1214

1214:                                             ; preds = %1209
  %1215 = bitcast %"class.tflite::RuntimeShape"* %1212 to i8*
  %1216 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 1, i32 0, i32 1
  %1217 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1216, align 8
  %1218 = icmp eq %"class.tflite::RuntimeShape"* %1217, %1212
  br i1 %1218, label %1236, label %1219

1219:                                             ; preds = %1214, %1231
  %1220 = phi %"class.tflite::RuntimeShape"* [ %1221, %1231 ], [ %1217, %1214 ]
  %1221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1220, i64 -1
  %1222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1221, i64 0, i32 0
  %1223 = load i32, i32* %1222, align 8
  %1224 = icmp sgt i32 %1223, 5
  br i1 %1224, label %1225, label %1231

1225:                                             ; preds = %1219
  %1226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1220, i64 -1, i32 1, i32 0
  %1227 = load i32*, i32** %1226, align 8
  %1228 = icmp eq i32* %1227, null
  br i1 %1228, label %1231, label %1229

1229:                                             ; preds = %1225
  %1230 = bitcast i32* %1227 to i8*
  call void @_ZdaPv(i8* %1230) #12
  br label %1231

1231:                                             ; preds = %1229, %1225, %1219
  %1232 = icmp eq %"class.tflite::RuntimeShape"* %1221, %1212
  br i1 %1232, label %1233, label %1219

1233:                                             ; preds = %1231
  %1234 = bitcast %"class.std::__1::vector.9"* %1210 to i8**
  %1235 = load i8*, i8** %1234, align 8
  br label %1236

1236:                                             ; preds = %1233, %1214
  %1237 = phi i8* [ %1235, %1233 ], [ %1215, %1214 ]
  store %"class.tflite::RuntimeShape"* %1212, %"class.tflite::RuntimeShape"** %1216, align 8
  call void @_ZdlPv(i8* %1237) #12
  br label %1238

1238:                                             ; preds = %1236, %1209
  %1239 = load i32**, i32*** %997, align 8
  %1240 = icmp eq i32** %1239, null
  br i1 %1240, label %1246, label %1241

1241:                                             ; preds = %1238
  %1242 = ptrtoint i32** %1239 to i64
  %1243 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %9, i64 0, i32 0, i32 0, i32 1
  %1244 = bitcast i32*** %1243 to i64*
  store i64 %1242, i64* %1244, align 8
  %1245 = bitcast i32** %1239 to i8*
  call void @_ZdlPv(i8* %1245) #12
  br label %1246

1246:                                             ; preds = %1238, %1241
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %953) #10
  br label %1840

1247:                                             ; preds = %62
  %1248 = bitcast %"class.tflite::VectorOfTensors.47"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1248) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1248, i8 -86, i64 72, i1 false)
  %1249 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %1250 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1249, align 8
  call void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.47"* nonnull %11, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1250)
  %1251 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1249, align 8
  %1252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1251, i64 0, i32 0
  %1253 = load i32, i32* %1252, align 4
  %1254 = trunc i32 %1253 to i16
  %1255 = trunc i32 %64 to i16
  %1256 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1256) #10
  %1257 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %1257, label %1258, label %1260

1258:                                             ; preds = %1247
  %1259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %1259, align 8, !alias.scope !25
  br label %1288

1260:                                             ; preds = %1247
  %1261 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %1262 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1261, align 8, !noalias !25
  %1263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1262, i64 0, i32 0
  %1264 = load i32, i32* %1263, align 4, !noalias !25
  %1265 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1262, i64 0, i32 1, i64 0
  %1266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %1264, i32* %1266, align 8, !alias.scope !25
  %1267 = icmp sgt i32 %1264, 5
  br i1 %1267, label %1268, label %1275

1268:                                             ; preds = %1260
  %1269 = sext i32 %1264 to i64
  %1270 = shl nsw i64 %1269, 2
  %1271 = call i8* @_Znam(i64 %1270) #12, !noalias !25
  %1272 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1273 = bitcast i32** %1272 to i8**
  store i8* %1271, i8** %1273, align 8, !alias.scope !25
  %1274 = bitcast i8* %1271 to i32*
  br label %1280

1275:                                             ; preds = %1260
  %1276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1277 = bitcast %union.anon* %1276 to i32*
  %1278 = sext i32 %1264 to i64
  %1279 = shl nsw i64 %1278, 2
  br label %1280

1280:                                             ; preds = %1275, %1268
  %1281 = phi i64 [ %1270, %1268 ], [ %1279, %1275 ]
  %1282 = phi i32* [ %1274, %1268 ], [ %1277, %1275 ]
  %1283 = bitcast i32* %1282 to i8*
  %1284 = bitcast i32* %1265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1283, i8* align 4 %1284, i64 %1281, i1 false) #10
  %1285 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %1286 = bitcast %union.TfLitePtrUnion* %1285 to i64**
  %1287 = load i64*, i64** %1286, align 8
  br label %1288

1288:                                             ; preds = %1258, %1280
  %1289 = phi i32 [ %1264, %1280 ], [ 0, %1258 ]
  %1290 = phi i64* [ %1287, %1280 ], [ null, %1258 ]
  %1291 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 2, i32 0, i32 0
  %1292 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1291, align 8
  %1293 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 0, i32 0, i32 0
  %1294 = load i64**, i64*** %1293, align 8
  %1295 = shl i32 %64, 16
  %1296 = ashr exact i32 %1295, 16
  %1297 = icmp slt i16 %1255, 0
  %1298 = select i1 %1297, i32 %1289, i32 0
  %1299 = add i32 %1298, %1296
  %1300 = icmp eq i16 %1254, 0
  %1301 = icmp sgt i32 %1289, 5
  %1302 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %1303 = icmp sgt i32 %1299, 0
  br i1 %1303, label %1304, label %1332

1304:                                             ; preds = %1288
  %1305 = getelementptr inbounds %union.anon, %union.anon* %1302, i64 0, i32 0
  %1306 = load i32*, i32** %1305, align 8
  %1307 = bitcast %union.anon* %1302 to [5 x i32]*
  %1308 = zext i32 %1299 to i64
  %1309 = add nsw i64 %1308, -1
  %1310 = and i64 %1308, 3
  %1311 = icmp ult i64 %1309, 3
  br i1 %1311, label %1314, label %1312

1312:                                             ; preds = %1304
  %1313 = sub nsw i64 %1308, %1310
  br label %1353

1314:                                             ; preds = %1353, %1304
  %1315 = phi i64 [ undef, %1304 ], [ %1383, %1353 ]
  %1316 = phi i64 [ 0, %1304 ], [ %1384, %1353 ]
  %1317 = phi i64 [ 1, %1304 ], [ %1383, %1353 ]
  %1318 = icmp eq i64 %1310, 0
  br i1 %1318, label %1332, label %1319

1319:                                             ; preds = %1314, %1319
  %1320 = phi i64 [ %1329, %1319 ], [ %1316, %1314 ]
  %1321 = phi i64 [ %1328, %1319 ], [ %1317, %1314 ]
  %1322 = phi i64 [ %1330, %1319 ], [ %1310, %1314 ]
  %1323 = getelementptr inbounds i32, i32* %1306, i64 %1320
  %1324 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1320
  %1325 = select i1 %1301, i32* %1323, i32* %1324
  %1326 = load i32, i32* %1325, align 4
  %1327 = sext i32 %1326 to i64
  %1328 = mul nsw i64 %1321, %1327
  %1329 = add nuw nsw i64 %1320, 1
  %1330 = add i64 %1322, -1
  %1331 = icmp eq i64 %1330, 0
  br i1 %1331, label %1332, label %1319, !llvm.loop !28

1332:                                             ; preds = %1314, %1319, %1288
  %1333 = phi i64 [ 1, %1288 ], [ %1315, %1314 ], [ %1328, %1319 ]
  %1334 = add i32 %1299, 1
  %1335 = icmp slt i32 %1334, %1289
  br i1 %1335, label %1336, label %1408

1336:                                             ; preds = %1332
  %1337 = getelementptr inbounds %union.anon, %union.anon* %1302, i64 0, i32 0
  %1338 = load i32*, i32** %1337, align 8
  %1339 = bitcast %union.anon* %1302 to [5 x i32]*
  %1340 = sext i32 %1334 to i64
  %1341 = xor i32 %1298, -1
  %1342 = add i32 %1289, %1341
  %1343 = shl i32 %64, 16
  %1344 = ashr exact i32 %1343, 16
  %1345 = sub i32 %1342, %1344
  %1346 = add i32 %1289, -2
  %1347 = sub i32 %1346, %1298
  %1348 = sub i32 %1347, %1344
  %1349 = and i32 %1345, 3
  %1350 = icmp ult i32 %1348, 3
  br i1 %1350, label %1387, label %1351

1351:                                             ; preds = %1336
  %1352 = sub i32 %1345, %1349
  br label %1415

1353:                                             ; preds = %1353, %1312
  %1354 = phi i64 [ 0, %1312 ], [ %1384, %1353 ]
  %1355 = phi i64 [ 1, %1312 ], [ %1383, %1353 ]
  %1356 = phi i64 [ %1313, %1312 ], [ %1385, %1353 ]
  %1357 = getelementptr inbounds i32, i32* %1306, i64 %1354
  %1358 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1354
  %1359 = select i1 %1301, i32* %1357, i32* %1358
  %1360 = load i32, i32* %1359, align 4
  %1361 = sext i32 %1360 to i64
  %1362 = mul nsw i64 %1355, %1361
  %1363 = or i64 %1354, 1
  %1364 = getelementptr inbounds i32, i32* %1306, i64 %1363
  %1365 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1363
  %1366 = select i1 %1301, i32* %1364, i32* %1365
  %1367 = load i32, i32* %1366, align 4
  %1368 = sext i32 %1367 to i64
  %1369 = mul nsw i64 %1362, %1368
  %1370 = or i64 %1354, 2
  %1371 = getelementptr inbounds i32, i32* %1306, i64 %1370
  %1372 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1370
  %1373 = select i1 %1301, i32* %1371, i32* %1372
  %1374 = load i32, i32* %1373, align 4
  %1375 = sext i32 %1374 to i64
  %1376 = mul nsw i64 %1369, %1375
  %1377 = or i64 %1354, 3
  %1378 = getelementptr inbounds i32, i32* %1306, i64 %1377
  %1379 = getelementptr inbounds [5 x i32], [5 x i32]* %1307, i64 0, i64 %1377
  %1380 = select i1 %1301, i32* %1378, i32* %1379
  %1381 = load i32, i32* %1380, align 4
  %1382 = sext i32 %1381 to i64
  %1383 = mul nsw i64 %1376, %1382
  %1384 = add nuw nsw i64 %1354, 4
  %1385 = add i64 %1356, -4
  %1386 = icmp eq i64 %1385, 0
  br i1 %1386, label %1314, label %1353

1387:                                             ; preds = %1415, %1336
  %1388 = phi i64 [ undef, %1336 ], [ %1445, %1415 ]
  %1389 = phi i64 [ %1340, %1336 ], [ %1446, %1415 ]
  %1390 = phi i64 [ 1, %1336 ], [ %1445, %1415 ]
  %1391 = icmp eq i32 %1349, 0
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1387, %1392
  %1393 = phi i64 [ %1402, %1392 ], [ %1389, %1387 ]
  %1394 = phi i64 [ %1401, %1392 ], [ %1390, %1387 ]
  %1395 = phi i32 [ %1403, %1392 ], [ %1349, %1387 ]
  %1396 = getelementptr inbounds i32, i32* %1338, i64 %1393
  %1397 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1393
  %1398 = select i1 %1301, i32* %1396, i32* %1397
  %1399 = load i32, i32* %1398, align 4
  %1400 = sext i32 %1399 to i64
  %1401 = mul nsw i64 %1394, %1400
  %1402 = add nsw i64 %1393, 1
  %1403 = add i32 %1395, -1
  %1404 = icmp eq i32 %1403, 0
  br i1 %1404, label %1405, label %1392, !llvm.loop !29

1405:                                             ; preds = %1392, %1387
  %1406 = phi i64 [ %1388, %1387 ], [ %1401, %1392 ]
  %1407 = trunc i64 %1406 to i32
  br label %1408

1408:                                             ; preds = %1405, %1332
  %1409 = phi i32 [ 1, %1332 ], [ %1407, %1405 ]
  %1410 = icmp sgt i64 %1333, 0
  br i1 %1410, label %1411, label %1490

1411:                                             ; preds = %1408
  %1412 = sext i32 %1299 to i64
  %1413 = and i32 %1253, 65535
  %1414 = zext i32 %1413 to i64
  br label %1449

1415:                                             ; preds = %1415, %1351
  %1416 = phi i64 [ %1340, %1351 ], [ %1446, %1415 ]
  %1417 = phi i64 [ 1, %1351 ], [ %1445, %1415 ]
  %1418 = phi i32 [ %1352, %1351 ], [ %1447, %1415 ]
  %1419 = getelementptr inbounds i32, i32* %1338, i64 %1416
  %1420 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1416
  %1421 = select i1 %1301, i32* %1419, i32* %1420
  %1422 = load i32, i32* %1421, align 4
  %1423 = sext i32 %1422 to i64
  %1424 = mul nsw i64 %1417, %1423
  %1425 = add nsw i64 %1416, 1
  %1426 = getelementptr inbounds i32, i32* %1338, i64 %1425
  %1427 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1425
  %1428 = select i1 %1301, i32* %1426, i32* %1427
  %1429 = load i32, i32* %1428, align 4
  %1430 = sext i32 %1429 to i64
  %1431 = mul nsw i64 %1424, %1430
  %1432 = add nsw i64 %1416, 2
  %1433 = getelementptr inbounds i32, i32* %1338, i64 %1432
  %1434 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1432
  %1435 = select i1 %1301, i32* %1433, i32* %1434
  %1436 = load i32, i32* %1435, align 4
  %1437 = sext i32 %1436 to i64
  %1438 = mul nsw i64 %1431, %1437
  %1439 = add nsw i64 %1416, 3
  %1440 = getelementptr inbounds i32, i32* %1338, i64 %1439
  %1441 = getelementptr inbounds [5 x i32], [5 x i32]* %1339, i64 0, i64 %1439
  %1442 = select i1 %1301, i32* %1440, i32* %1441
  %1443 = load i32, i32* %1442, align 4
  %1444 = sext i32 %1443 to i64
  %1445 = mul nsw i64 %1438, %1444
  %1446 = add nsw i64 %1416, 4
  %1447 = add i32 %1418, -4
  %1448 = icmp eq i32 %1447, 0
  br i1 %1448, label %1387, label %1415

1449:                                             ; preds = %1454, %1411
  %1450 = phi i64 [ 0, %1411 ], [ %1456, %1454 ]
  %1451 = phi i64* [ %1290, %1411 ], [ %1455, %1454 ]
  br i1 %1300, label %1454, label %1452

1452:                                             ; preds = %1449
  %1453 = trunc i64 %1450 to i32
  br label %1458

1454:                                             ; preds = %1474, %1449
  %1455 = phi i64* [ %1451, %1449 ], [ %1487, %1474 ]
  %1456 = add nuw nsw i64 %1450, 1
  %1457 = icmp eq i64 %1456, %1333
  br i1 %1457, label %1490, label %1449

1458:                                             ; preds = %1474, %1452
  %1459 = phi i64 [ 0, %1452 ], [ %1488, %1474 ]
  %1460 = phi i64* [ %1451, %1452 ], [ %1487, %1474 ]
  %1461 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1292, i64 %1459
  %1462 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1461, align 8
  %1463 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1462, i64 0, i32 0
  %1464 = load i32, i32* %1463, align 8
  %1465 = icmp sgt i32 %1464, 5
  %1466 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1462, i64 0, i32 1
  br i1 %1465, label %1467, label %1471

1467:                                             ; preds = %1458
  %1468 = getelementptr inbounds %union.anon, %union.anon* %1466, i64 0, i32 0
  %1469 = load i32*, i32** %1468, align 8
  %1470 = getelementptr inbounds i32, i32* %1469, i64 %1412
  br label %1474

1471:                                             ; preds = %1458
  %1472 = bitcast %union.anon* %1466 to [5 x i32]*
  %1473 = getelementptr inbounds [5 x i32], [5 x i32]* %1472, i64 0, i64 %1412
  br label %1474

1474:                                             ; preds = %1471, %1467
  %1475 = phi i32* [ %1470, %1467 ], [ %1473, %1471 ]
  %1476 = load i32, i32* %1475, align 4
  %1477 = mul i32 %1476, %1409
  %1478 = getelementptr inbounds i64*, i64** %1294, i64 %1459
  %1479 = load i64*, i64** %1478, align 8
  %1480 = mul nsw i32 %1477, %1453
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds i64, i64* %1479, i64 %1481
  %1483 = bitcast i64* %1482 to i8*
  %1484 = bitcast i64* %1460 to i8*
  %1485 = sext i32 %1477 to i64
  %1486 = shl nsw i64 %1485, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1483, i8* align 8 %1484, i64 %1486, i1 false) #10
  %1487 = getelementptr inbounds i64, i64* %1460, i64 %1485
  %1488 = add nuw nsw i64 %1459, 1
  %1489 = icmp eq i64 %1488, %1414
  br i1 %1489, label %1454, label %1458

1490:                                             ; preds = %1454, %1408
  br i1 %1301, label %1491, label %1497

1491:                                             ; preds = %1490
  %1492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %1493 = load i32*, i32** %1492, align 8
  %1494 = icmp eq i32* %1493, null
  br i1 %1494, label %1497, label %1495

1495:                                             ; preds = %1491
  %1496 = bitcast i32* %1493 to i8*
  call void @_ZdaPv(i8* %1496) #12
  br label %1497

1497:                                             ; preds = %1490, %1491, %1495
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1256) #10
  %1498 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1291, align 8
  %1499 = icmp eq %"class.tflite::RuntimeShape"** %1498, null
  br i1 %1499, label %1505, label %1500

1500:                                             ; preds = %1497
  %1501 = ptrtoint %"class.tflite::RuntimeShape"** %1498 to i64
  %1502 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 2, i32 0, i32 1
  %1503 = bitcast %"class.tflite::RuntimeShape"*** %1502 to i64*
  store i64 %1501, i64* %1503, align 8
  %1504 = bitcast %"class.tflite::RuntimeShape"** %1498 to i8*
  call void @_ZdlPv(i8* %1504) #12
  br label %1505

1505:                                             ; preds = %1500, %1497
  %1506 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 1
  %1507 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1506, i64 0, i32 0, i32 0
  %1508 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1507, align 8
  %1509 = icmp eq %"class.tflite::RuntimeShape"* %1508, null
  br i1 %1509, label %1534, label %1510

1510:                                             ; preds = %1505
  %1511 = bitcast %"class.tflite::RuntimeShape"* %1508 to i8*
  %1512 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 1, i32 0, i32 1
  %1513 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1512, align 8
  %1514 = icmp eq %"class.tflite::RuntimeShape"* %1513, %1508
  br i1 %1514, label %1532, label %1515

1515:                                             ; preds = %1510, %1527
  %1516 = phi %"class.tflite::RuntimeShape"* [ %1517, %1527 ], [ %1513, %1510 ]
  %1517 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1516, i64 -1
  %1518 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1517, i64 0, i32 0
  %1519 = load i32, i32* %1518, align 8
  %1520 = icmp sgt i32 %1519, 5
  br i1 %1520, label %1521, label %1527

1521:                                             ; preds = %1515
  %1522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1516, i64 -1, i32 1, i32 0
  %1523 = load i32*, i32** %1522, align 8
  %1524 = icmp eq i32* %1523, null
  br i1 %1524, label %1527, label %1525

1525:                                             ; preds = %1521
  %1526 = bitcast i32* %1523 to i8*
  call void @_ZdaPv(i8* %1526) #12
  br label %1527

1527:                                             ; preds = %1525, %1521, %1515
  %1528 = icmp eq %"class.tflite::RuntimeShape"* %1517, %1508
  br i1 %1528, label %1529, label %1515

1529:                                             ; preds = %1527
  %1530 = bitcast %"class.std::__1::vector.9"* %1506 to i8**
  %1531 = load i8*, i8** %1530, align 8
  br label %1532

1532:                                             ; preds = %1529, %1510
  %1533 = phi i8* [ %1531, %1529 ], [ %1511, %1510 ]
  store %"class.tflite::RuntimeShape"* %1508, %"class.tflite::RuntimeShape"** %1512, align 8
  call void @_ZdlPv(i8* %1533) #12
  br label %1534

1534:                                             ; preds = %1532, %1505
  %1535 = load i64**, i64*** %1293, align 8
  %1536 = icmp eq i64** %1535, null
  br i1 %1536, label %1542, label %1537

1537:                                             ; preds = %1534
  %1538 = ptrtoint i64** %1535 to i64
  %1539 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %11, i64 0, i32 0, i32 0, i32 1
  %1540 = bitcast i64*** %1539 to i64*
  store i64 %1538, i64* %1540, align 8
  %1541 = bitcast i64** %1535 to i8*
  call void @_ZdlPv(i8* %1541) #12
  br label %1542

1542:                                             ; preds = %1534, %1537
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1248) #10
  br label %1840

1543:                                             ; preds = %62
  %1544 = bitcast %"class.tflite::VectorOfTensors.55"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1544) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1544, i8 -86, i64 72, i1 false)
  %1545 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %1546 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1545, align 8
  call void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.55"* nonnull %13, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %1546)
  %1547 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1545, align 8
  %1548 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1547, i64 0, i32 0
  %1549 = load i32, i32* %1548, align 4
  %1550 = trunc i32 %1549 to i16
  %1551 = trunc i32 %64 to i16
  %1552 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1552) #10
  %1553 = icmp eq %struct.TfLiteTensor* %26, null
  br i1 %1553, label %1554, label %1556

1554:                                             ; preds = %1543
  %1555 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %1555, align 8, !alias.scope !30
  br label %1584

1556:                                             ; preds = %1543
  %1557 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 2
  %1558 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %1557, align 8, !noalias !30
  %1559 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1558, i64 0, i32 0
  %1560 = load i32, i32* %1559, align 4, !noalias !30
  %1561 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %1558, i64 0, i32 1, i64 0
  %1562 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %1560, i32* %1562, align 8, !alias.scope !30
  %1563 = icmp sgt i32 %1560, 5
  br i1 %1563, label %1564, label %1571

1564:                                             ; preds = %1556
  %1565 = sext i32 %1560 to i64
  %1566 = shl nsw i64 %1565, 2
  %1567 = call i8* @_Znam(i64 %1566) #12, !noalias !30
  %1568 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1569 = bitcast i32** %1568 to i8**
  store i8* %1567, i8** %1569, align 8, !alias.scope !30
  %1570 = bitcast i8* %1567 to i32*
  br label %1576

1571:                                             ; preds = %1556
  %1572 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1573 = bitcast %union.anon* %1572 to i32*
  %1574 = sext i32 %1560 to i64
  %1575 = shl nsw i64 %1574, 2
  br label %1576

1576:                                             ; preds = %1571, %1564
  %1577 = phi i64 [ %1566, %1564 ], [ %1575, %1571 ]
  %1578 = phi i32* [ %1570, %1564 ], [ %1573, %1571 ]
  %1579 = bitcast i32* %1578 to i8*
  %1580 = bitcast i32* %1561 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1579, i8* align 4 %1580, i64 %1577, i1 false) #10
  %1581 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 0, i32 1
  %1582 = bitcast %union.TfLitePtrUnion* %1581 to i8**
  %1583 = load i8*, i8** %1582, align 8
  br label %1584

1584:                                             ; preds = %1554, %1576
  %1585 = phi i32 [ %1560, %1576 ], [ 0, %1554 ]
  %1586 = phi i8* [ %1583, %1576 ], [ null, %1554 ]
  %1587 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 2, i32 0, i32 0
  %1588 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1587, align 8
  %1589 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 0, i32 0, i32 0
  %1590 = load i8**, i8*** %1589, align 8
  %1591 = shl i32 %64, 16
  %1592 = ashr exact i32 %1591, 16
  %1593 = icmp slt i16 %1551, 0
  %1594 = select i1 %1593, i32 %1585, i32 0
  %1595 = add i32 %1594, %1592
  %1596 = icmp eq i16 %1550, 0
  %1597 = icmp sgt i32 %1585, 5
  %1598 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %1599 = icmp sgt i32 %1595, 0
  br i1 %1599, label %1600, label %1628

1600:                                             ; preds = %1584
  %1601 = getelementptr inbounds %union.anon, %union.anon* %1598, i64 0, i32 0
  %1602 = load i32*, i32** %1601, align 8
  %1603 = bitcast %union.anon* %1598 to [5 x i32]*
  %1604 = zext i32 %1595 to i64
  %1605 = add nsw i64 %1604, -1
  %1606 = and i64 %1604, 3
  %1607 = icmp ult i64 %1605, 3
  br i1 %1607, label %1610, label %1608

1608:                                             ; preds = %1600
  %1609 = sub nsw i64 %1604, %1606
  br label %1649

1610:                                             ; preds = %1649, %1600
  %1611 = phi i64 [ undef, %1600 ], [ %1679, %1649 ]
  %1612 = phi i64 [ 0, %1600 ], [ %1680, %1649 ]
  %1613 = phi i64 [ 1, %1600 ], [ %1679, %1649 ]
  %1614 = icmp eq i64 %1606, 0
  br i1 %1614, label %1628, label %1615

1615:                                             ; preds = %1610, %1615
  %1616 = phi i64 [ %1625, %1615 ], [ %1612, %1610 ]
  %1617 = phi i64 [ %1624, %1615 ], [ %1613, %1610 ]
  %1618 = phi i64 [ %1626, %1615 ], [ %1606, %1610 ]
  %1619 = getelementptr inbounds i32, i32* %1602, i64 %1616
  %1620 = getelementptr inbounds [5 x i32], [5 x i32]* %1603, i64 0, i64 %1616
  %1621 = select i1 %1597, i32* %1619, i32* %1620
  %1622 = load i32, i32* %1621, align 4
  %1623 = sext i32 %1622 to i64
  %1624 = mul nsw i64 %1617, %1623
  %1625 = add nuw nsw i64 %1616, 1
  %1626 = add i64 %1618, -1
  %1627 = icmp eq i64 %1626, 0
  br i1 %1627, label %1628, label %1615, !llvm.loop !33

1628:                                             ; preds = %1610, %1615, %1584
  %1629 = phi i64 [ 1, %1584 ], [ %1611, %1610 ], [ %1624, %1615 ]
  %1630 = add i32 %1595, 1
  %1631 = icmp slt i32 %1630, %1585
  br i1 %1631, label %1632, label %1704

1632:                                             ; preds = %1628
  %1633 = getelementptr inbounds %union.anon, %union.anon* %1598, i64 0, i32 0
  %1634 = load i32*, i32** %1633, align 8
  %1635 = bitcast %union.anon* %1598 to [5 x i32]*
  %1636 = sext i32 %1630 to i64
  %1637 = xor i32 %1594, -1
  %1638 = add i32 %1585, %1637
  %1639 = shl i32 %64, 16
  %1640 = ashr exact i32 %1639, 16
  %1641 = sub i32 %1638, %1640
  %1642 = add i32 %1585, -2
  %1643 = sub i32 %1642, %1594
  %1644 = sub i32 %1643, %1640
  %1645 = and i32 %1641, 3
  %1646 = icmp ult i32 %1644, 3
  br i1 %1646, label %1683, label %1647

1647:                                             ; preds = %1632
  %1648 = sub i32 %1641, %1645
  br label %1711

1649:                                             ; preds = %1649, %1608
  %1650 = phi i64 [ 0, %1608 ], [ %1680, %1649 ]
  %1651 = phi i64 [ 1, %1608 ], [ %1679, %1649 ]
  %1652 = phi i64 [ %1609, %1608 ], [ %1681, %1649 ]
  %1653 = getelementptr inbounds i32, i32* %1602, i64 %1650
  %1654 = getelementptr inbounds [5 x i32], [5 x i32]* %1603, i64 0, i64 %1650
  %1655 = select i1 %1597, i32* %1653, i32* %1654
  %1656 = load i32, i32* %1655, align 4
  %1657 = sext i32 %1656 to i64
  %1658 = mul nsw i64 %1651, %1657
  %1659 = or i64 %1650, 1
  %1660 = getelementptr inbounds i32, i32* %1602, i64 %1659
  %1661 = getelementptr inbounds [5 x i32], [5 x i32]* %1603, i64 0, i64 %1659
  %1662 = select i1 %1597, i32* %1660, i32* %1661
  %1663 = load i32, i32* %1662, align 4
  %1664 = sext i32 %1663 to i64
  %1665 = mul nsw i64 %1658, %1664
  %1666 = or i64 %1650, 2
  %1667 = getelementptr inbounds i32, i32* %1602, i64 %1666
  %1668 = getelementptr inbounds [5 x i32], [5 x i32]* %1603, i64 0, i64 %1666
  %1669 = select i1 %1597, i32* %1667, i32* %1668
  %1670 = load i32, i32* %1669, align 4
  %1671 = sext i32 %1670 to i64
  %1672 = mul nsw i64 %1665, %1671
  %1673 = or i64 %1650, 3
  %1674 = getelementptr inbounds i32, i32* %1602, i64 %1673
  %1675 = getelementptr inbounds [5 x i32], [5 x i32]* %1603, i64 0, i64 %1673
  %1676 = select i1 %1597, i32* %1674, i32* %1675
  %1677 = load i32, i32* %1676, align 4
  %1678 = sext i32 %1677 to i64
  %1679 = mul nsw i64 %1672, %1678
  %1680 = add nuw nsw i64 %1650, 4
  %1681 = add i64 %1652, -4
  %1682 = icmp eq i64 %1681, 0
  br i1 %1682, label %1610, label %1649

1683:                                             ; preds = %1711, %1632
  %1684 = phi i64 [ undef, %1632 ], [ %1741, %1711 ]
  %1685 = phi i64 [ %1636, %1632 ], [ %1742, %1711 ]
  %1686 = phi i64 [ 1, %1632 ], [ %1741, %1711 ]
  %1687 = icmp eq i32 %1645, 0
  br i1 %1687, label %1701, label %1688

1688:                                             ; preds = %1683, %1688
  %1689 = phi i64 [ %1698, %1688 ], [ %1685, %1683 ]
  %1690 = phi i64 [ %1697, %1688 ], [ %1686, %1683 ]
  %1691 = phi i32 [ %1699, %1688 ], [ %1645, %1683 ]
  %1692 = getelementptr inbounds i32, i32* %1634, i64 %1689
  %1693 = getelementptr inbounds [5 x i32], [5 x i32]* %1635, i64 0, i64 %1689
  %1694 = select i1 %1597, i32* %1692, i32* %1693
  %1695 = load i32, i32* %1694, align 4
  %1696 = sext i32 %1695 to i64
  %1697 = mul nsw i64 %1690, %1696
  %1698 = add nsw i64 %1689, 1
  %1699 = add i32 %1691, -1
  %1700 = icmp eq i32 %1699, 0
  br i1 %1700, label %1701, label %1688, !llvm.loop !34

1701:                                             ; preds = %1688, %1683
  %1702 = phi i64 [ %1684, %1683 ], [ %1697, %1688 ]
  %1703 = trunc i64 %1702 to i32
  br label %1704

1704:                                             ; preds = %1701, %1628
  %1705 = phi i32 [ 1, %1628 ], [ %1703, %1701 ]
  %1706 = icmp sgt i64 %1629, 0
  br i1 %1706, label %1707, label %1783

1707:                                             ; preds = %1704
  %1708 = sext i32 %1595 to i64
  %1709 = and i32 %1549, 65535
  %1710 = zext i32 %1709 to i64
  br label %1745

1711:                                             ; preds = %1711, %1647
  %1712 = phi i64 [ %1636, %1647 ], [ %1742, %1711 ]
  %1713 = phi i64 [ 1, %1647 ], [ %1741, %1711 ]
  %1714 = phi i32 [ %1648, %1647 ], [ %1743, %1711 ]
  %1715 = getelementptr inbounds i32, i32* %1634, i64 %1712
  %1716 = getelementptr inbounds [5 x i32], [5 x i32]* %1635, i64 0, i64 %1712
  %1717 = select i1 %1597, i32* %1715, i32* %1716
  %1718 = load i32, i32* %1717, align 4
  %1719 = sext i32 %1718 to i64
  %1720 = mul nsw i64 %1713, %1719
  %1721 = add nsw i64 %1712, 1
  %1722 = getelementptr inbounds i32, i32* %1634, i64 %1721
  %1723 = getelementptr inbounds [5 x i32], [5 x i32]* %1635, i64 0, i64 %1721
  %1724 = select i1 %1597, i32* %1722, i32* %1723
  %1725 = load i32, i32* %1724, align 4
  %1726 = sext i32 %1725 to i64
  %1727 = mul nsw i64 %1720, %1726
  %1728 = add nsw i64 %1712, 2
  %1729 = getelementptr inbounds i32, i32* %1634, i64 %1728
  %1730 = getelementptr inbounds [5 x i32], [5 x i32]* %1635, i64 0, i64 %1728
  %1731 = select i1 %1597, i32* %1729, i32* %1730
  %1732 = load i32, i32* %1731, align 4
  %1733 = sext i32 %1732 to i64
  %1734 = mul nsw i64 %1727, %1733
  %1735 = add nsw i64 %1712, 3
  %1736 = getelementptr inbounds i32, i32* %1634, i64 %1735
  %1737 = getelementptr inbounds [5 x i32], [5 x i32]* %1635, i64 0, i64 %1735
  %1738 = select i1 %1597, i32* %1736, i32* %1737
  %1739 = load i32, i32* %1738, align 4
  %1740 = sext i32 %1739 to i64
  %1741 = mul nsw i64 %1734, %1740
  %1742 = add nsw i64 %1712, 4
  %1743 = add i32 %1714, -4
  %1744 = icmp eq i32 %1743, 0
  br i1 %1744, label %1683, label %1711

1745:                                             ; preds = %1750, %1707
  %1746 = phi i64 [ 0, %1707 ], [ %1752, %1750 ]
  %1747 = phi i8* [ %1586, %1707 ], [ %1751, %1750 ]
  br i1 %1596, label %1750, label %1748

1748:                                             ; preds = %1745
  %1749 = trunc i64 %1746 to i32
  br label %1754

1750:                                             ; preds = %1770, %1745
  %1751 = phi i8* [ %1747, %1745 ], [ %1780, %1770 ]
  %1752 = add nuw nsw i64 %1746, 1
  %1753 = icmp eq i64 %1752, %1629
  br i1 %1753, label %1783, label %1745

1754:                                             ; preds = %1770, %1748
  %1755 = phi i64 [ 0, %1748 ], [ %1781, %1770 ]
  %1756 = phi i8* [ %1747, %1748 ], [ %1780, %1770 ]
  %1757 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1588, i64 %1755
  %1758 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1757, align 8
  %1759 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1758, i64 0, i32 0
  %1760 = load i32, i32* %1759, align 8
  %1761 = icmp sgt i32 %1760, 5
  %1762 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1758, i64 0, i32 1
  br i1 %1761, label %1763, label %1767

1763:                                             ; preds = %1754
  %1764 = getelementptr inbounds %union.anon, %union.anon* %1762, i64 0, i32 0
  %1765 = load i32*, i32** %1764, align 8
  %1766 = getelementptr inbounds i32, i32* %1765, i64 %1708
  br label %1770

1767:                                             ; preds = %1754
  %1768 = bitcast %union.anon* %1762 to [5 x i32]*
  %1769 = getelementptr inbounds [5 x i32], [5 x i32]* %1768, i64 0, i64 %1708
  br label %1770

1770:                                             ; preds = %1767, %1763
  %1771 = phi i32* [ %1766, %1763 ], [ %1769, %1767 ]
  %1772 = load i32, i32* %1771, align 4
  %1773 = mul i32 %1772, %1705
  %1774 = getelementptr inbounds i8*, i8** %1590, i64 %1755
  %1775 = load i8*, i8** %1774, align 8
  %1776 = mul nsw i32 %1773, %1749
  %1777 = sext i32 %1776 to i64
  %1778 = getelementptr inbounds i8, i8* %1775, i64 %1777
  %1779 = sext i32 %1773 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1778, i8* align 1 %1756, i64 %1779, i1 false) #10
  %1780 = getelementptr inbounds i8, i8* %1756, i64 %1779
  %1781 = add nuw nsw i64 %1755, 1
  %1782 = icmp eq i64 %1781, %1710
  br i1 %1782, label %1750, label %1754

1783:                                             ; preds = %1750, %1704
  br i1 %1597, label %1784, label %1790

1784:                                             ; preds = %1783
  %1785 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %1786 = load i32*, i32** %1785, align 8
  %1787 = icmp eq i32* %1786, null
  br i1 %1787, label %1790, label %1788

1788:                                             ; preds = %1784
  %1789 = bitcast i32* %1786 to i8*
  call void @_ZdaPv(i8* %1789) #12
  br label %1790

1790:                                             ; preds = %1783, %1784, %1788
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1552) #10
  %1791 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %1587, align 8
  %1792 = icmp eq %"class.tflite::RuntimeShape"** %1791, null
  br i1 %1792, label %1798, label %1793

1793:                                             ; preds = %1790
  %1794 = ptrtoint %"class.tflite::RuntimeShape"** %1791 to i64
  %1795 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 2, i32 0, i32 1
  %1796 = bitcast %"class.tflite::RuntimeShape"*** %1795 to i64*
  store i64 %1794, i64* %1796, align 8
  %1797 = bitcast %"class.tflite::RuntimeShape"** %1791 to i8*
  call void @_ZdlPv(i8* %1797) #12
  br label %1798

1798:                                             ; preds = %1793, %1790
  %1799 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 1
  %1800 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1799, i64 0, i32 0, i32 0
  %1801 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1800, align 8
  %1802 = icmp eq %"class.tflite::RuntimeShape"* %1801, null
  br i1 %1802, label %1827, label %1803

1803:                                             ; preds = %1798
  %1804 = bitcast %"class.tflite::RuntimeShape"* %1801 to i8*
  %1805 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 1, i32 0, i32 1
  %1806 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %1805, align 8
  %1807 = icmp eq %"class.tflite::RuntimeShape"* %1806, %1801
  br i1 %1807, label %1825, label %1808

1808:                                             ; preds = %1803, %1820
  %1809 = phi %"class.tflite::RuntimeShape"* [ %1810, %1820 ], [ %1806, %1803 ]
  %1810 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1809, i64 -1
  %1811 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1810, i64 0, i32 0
  %1812 = load i32, i32* %1811, align 8
  %1813 = icmp sgt i32 %1812, 5
  br i1 %1813, label %1814, label %1820

1814:                                             ; preds = %1808
  %1815 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1809, i64 -1, i32 1, i32 0
  %1816 = load i32*, i32** %1815, align 8
  %1817 = icmp eq i32* %1816, null
  br i1 %1817, label %1820, label %1818

1818:                                             ; preds = %1814
  %1819 = bitcast i32* %1816 to i8*
  call void @_ZdaPv(i8* %1819) #12
  br label %1820

1820:                                             ; preds = %1818, %1814, %1808
  %1821 = icmp eq %"class.tflite::RuntimeShape"* %1810, %1801
  br i1 %1821, label %1822, label %1808

1822:                                             ; preds = %1820
  %1823 = bitcast %"class.std::__1::vector.9"* %1799 to i8**
  %1824 = load i8*, i8** %1823, align 8
  br label %1825

1825:                                             ; preds = %1822, %1803
  %1826 = phi i8* [ %1824, %1822 ], [ %1804, %1803 ]
  store %"class.tflite::RuntimeShape"* %1801, %"class.tflite::RuntimeShape"** %1805, align 8
  call void @_ZdlPv(i8* %1826) #12
  br label %1827

1827:                                             ; preds = %1825, %1798
  %1828 = load i8**, i8*** %1589, align 8
  %1829 = icmp eq i8** %1828, null
  br i1 %1829, label %1835, label %1830

1830:                                             ; preds = %1827
  %1831 = ptrtoint i8** %1828 to i64
  %1832 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %13, i64 0, i32 0, i32 0, i32 1
  %1833 = bitcast i8*** %1832 to i64*
  store i64 %1831, i64* %1833, align 8
  %1834 = bitcast i8** %1828 to i8*
  call void @_ZdlPv(i8* %1834) #12
  br label %1835

1835:                                             ; preds = %1827, %1830
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1544) #10
  br label %1840

1836:                                             ; preds = %62
  %1837 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %1838 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %1837, align 8
  %1839 = tail call i8* @TfLiteTypeGetName(i32 %66) #10
  tail call void (%struct.TfLiteContext*, i8*, ...) %1838(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* %1839) #10
  br label %1840

1840:                                             ; preds = %1836, %1835, %1542, %1246, %951, %655, %362, %54
  %1841 = phi i32 [ %55, %54 ], [ 1, %1836 ], [ 0, %1835 ], [ 0, %1542 ], [ 0, %1246 ], [ 0, %951 ], [ 0, %655 ], [ 0, %362 ]
  ret i32 %1841
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast float*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to float**
  %22 = getelementptr inbounds float*, float** %21, i64 %10
  %23 = ptrtoint float** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast float*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to float**
  %94 = load float*, float** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi float* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint float* %96 to i64
  %98 = load float**, float*** %62, align 8
  %99 = load float**, float*** %11, align 8
  %100 = icmp ult float** %98, %99
  %101 = ptrtoint float** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast float** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds float*, float** %98, i64 1
  %105 = ptrtoint float** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint float** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to float**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi float** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds float*, float** %134, i64 %110
  %136 = getelementptr inbounds float*, float** %134, i64 %133
  %137 = ptrtoint float** %136 to i64
  %138 = bitcast float** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds float*, float** %135, i64 1
  %140 = ptrtoint float** %139 to i64
  %141 = load float**, float*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint float** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds float*, float** %135, i64 %146
  %148 = ptrtoint float** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast float** %147 to i8*
  %152 = bitcast float** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load float**, float*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi float** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq float** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast float** %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !35
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !35
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !35
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !35
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #12, !noalias !35
  store i8* %171, i8** %70, align 8, !alias.scope !35
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #12
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #12
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIhEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.23"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.23"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.23"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.23"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.23", %"class.tflite::VectorOfTensors.23"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.23"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !38
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !38
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !38
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !38
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #12, !noalias !38
  store i8* %171, i8** %70, align 8, !alias.scope !38
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #12
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #12
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIsEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.31"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.31"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i16*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.31"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i16**
  %22 = getelementptr inbounds i16*, i16** %21, i64 %10
  %23 = ptrtoint i16** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.31"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i16*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.31", %"class.tflite::VectorOfTensors.31"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i16**
  %94 = load i16*, i16** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i16* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i16* %96 to i64
  %98 = load i16**, i16*** %62, align 8
  %99 = load i16**, i16*** %11, align 8
  %100 = icmp ult i16** %98, %99
  %101 = ptrtoint i16** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i16** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i16*, i16** %98, i64 1
  %105 = ptrtoint i16** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i16** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.31"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to i16**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i16** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i16*, i16** %134, i64 %110
  %136 = getelementptr inbounds i16*, i16** %134, i64 %133
  %137 = ptrtoint i16** %136 to i64
  %138 = bitcast i16** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i16*, i16** %135, i64 1
  %140 = ptrtoint i16** %139 to i64
  %141 = load i16**, i16*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i16** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i16*, i16** %135, i64 %146
  %148 = ptrtoint i16** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i16** %147 to i8*
  %152 = bitcast i16** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i16**, i16*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i16** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i16** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i16** %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !41
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !41
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !41
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !41
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #12, !noalias !41
  store i8* %171, i8** %70, align 8, !alias.scope !41
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #12
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #12
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.39"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.39"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.39"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i32*, i32** %21, i64 %10
  %23 = ptrtoint i32** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.39"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %220

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i32*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %217
  br i1 %59, label %77, label %220

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.39", %"class.tflite::VectorOfTensors.39"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %221

83:                                               ; preds = %217, %60
  %84 = phi i64 [ 0, %60 ], [ %218, %217 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i32* [ %93, %91 ], [ null, %83 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = load i32**, i32*** %62, align 8
  %98 = load i32**, i32*** %11, align 8
  %99 = icmp ult i32** %97, %98
  %100 = ptrtoint i32** %98 to i64
  br i1 %99, label %101, label %105

101:                                              ; preds = %94
  %102 = bitcast i32** %97 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i32*, i32** %97, i64 1
  %104 = ptrtoint i32** %103 to i64
  store i64 %104, i64* %63, align 8
  br label %158

105:                                              ; preds = %94
  %106 = ptrtoint i32** %97 to i64
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.tflite::VectorOfTensors.39"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #11
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %100, %107
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %110
  %121 = select i1 %120, i64 %110, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #11
  unreachable

126:                                              ; preds = %123, %114
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %114 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #12
  %130 = bitcast i8* %129 to i32**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32*, i32** %133, i64 %109
  %135 = getelementptr inbounds i32*, i32** %133, i64 %132
  %136 = ptrtoint i32** %135 to i64
  %137 = bitcast i32** %134 to i64*
  store i64 %96, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %134, i64 1
  %139 = ptrtoint i32** %138 to i64
  %140 = load i32**, i32*** %64, align 8
  %141 = load i64, i64* %63, align 8
  %142 = ptrtoint i32** %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32*, i32** %134, i64 %145
  %147 = ptrtoint i32** %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32** %146 to i8*
  %151 = bitcast i32** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %143, i1 false) #10
  %152 = load i32**, i32*** %64, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32** [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %13, align 8
  store i64 %139, i64* %63, align 8
  store i64 %136, i64* %12, align 8
  %155 = icmp eq i32** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast i32** %154 to i8*
  call void @_ZdlPv(i8* %157) #12
  br label %158

158:                                              ; preds = %101, %153, %156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %159, label %160

159:                                              ; preds = %158
  store i32 0, i32* %66, align 8, !alias.scope !44
  br label %176

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !44
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !44
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  store i32 %164, i32* %66, align 8, !alias.scope !44
  %166 = icmp sgt i32 %164, 5
  %167 = sext i32 %164 to i64
  %168 = shl nsw i64 %167, 2
  br i1 %166, label %169, label %172

169:                                              ; preds = %160
  %170 = call i8* @_Znam(i64 %168) #12, !noalias !44
  store i8* %170, i8** %70, align 8, !alias.scope !44
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %160, %169
  %173 = phi i32* [ %171, %169 ], [ %68, %160 ]
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #10
  br label %176

176:                                              ; preds = %159, %172
  %177 = phi i32 [ 0, %159 ], [ %164, %172 ]
  %178 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %180 = icmp ult %"class.tflite::RuntimeShape"* %178, %179
  br i1 %180, label %181, label %207

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 0
  store i32 %177, i32* %182, align 8
  %183 = icmp sgt i32 %177, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = sext i32 %177 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #12
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %177 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = load i32, i32* %66, align 8
  %201 = icmp sgt i32 %200, 5
  %202 = load i32*, i32** %73, align 8
  %203 = select i1 %201, i32* %202, i32* %68
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %204, i64 %197, i1 false) #10
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 1
  %206 = ptrtoint %"class.tflite::RuntimeShape"* %205 to i64
  store i64 %206, i64* %74, align 8
  br label %209

207:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %208 = load i32, i32* %66, align 8
  br label %209

209:                                              ; preds = %196, %207
  %210 = phi i32 [ %200, %196 ], [ %208, %207 ]
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load i32*, i32** %69, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = bitcast i32* %213 to i8*
  call void @_ZdaPv(i8* %216) #12
  br label %217

217:                                              ; preds = %209, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %218 = add nuw nsw i64 %84, 1
  %219 = icmp eq i64 %218, %75
  br i1 %219, label %76, label %83

220:                                              ; preds = %287, %58, %76
  ret void

221:                                              ; preds = %287, %77
  %222 = phi i64 [ 0, %77 ], [ %288, %287 ]
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %223, i64 %222
  %225 = ptrtoint %"class.tflite::RuntimeShape"* %224 to i64
  %226 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %228 = icmp ult %"class.tflite::RuntimeShape"** %226, %227
  %229 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  br i1 %228, label %230, label %234

230:                                              ; preds = %221
  %231 = bitcast %"class.tflite::RuntimeShape"** %226 to i64*
  store i64 %225, i64* %231, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %226, i64 1
  %233 = ptrtoint %"class.tflite::RuntimeShape"** %232 to i64
  store i64 %233, i64* %80, align 8
  br label %287

234:                                              ; preds = %221
  %235 = ptrtoint %"class.tflite::RuntimeShape"** %226 to i64
  %236 = load i64, i64* %32, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #11
  unreachable

243:                                              ; preds = %234
  %244 = sub i64 %229, %236
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %245, 1152921504606846975
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = ashr exact i64 %244, 2
  %249 = icmp ult i64 %248, %239
  %250 = select i1 %249, i64 %239, i64 %248
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %247
  %253 = icmp ugt i64 %250, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  call void @abort() #11
  unreachable

255:                                              ; preds = %252, %243
  %256 = phi i64 [ %250, %252 ], [ 2305843009213693951, %243 ]
  %257 = shl i64 %256, 3
  %258 = call i8* @_Znwm(i64 %257) #12
  %259 = bitcast i8* %258 to %"class.tflite::RuntimeShape"**
  br label %260

260:                                              ; preds = %255, %247
  %261 = phi i64 [ %256, %255 ], [ 0, %247 ]
  %262 = phi %"class.tflite::RuntimeShape"** [ %259, %255 ], [ null, %247 ]
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %238
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %261
  %265 = ptrtoint %"class.tflite::RuntimeShape"** %264 to i64
  %266 = bitcast %"class.tflite::RuntimeShape"** %263 to i64*
  store i64 %225, i64* %266, align 8
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 1
  %268 = ptrtoint %"class.tflite::RuntimeShape"** %267 to i64
  %269 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %270 = load i64, i64* %80, align 8
  %271 = ptrtoint %"class.tflite::RuntimeShape"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %274
  %276 = ptrtoint %"class.tflite::RuntimeShape"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %260
  %279 = bitcast %"class.tflite::RuntimeShape"** %275 to i8*
  %280 = bitcast %"class.tflite::RuntimeShape"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #10
  %281 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %282

282:                                              ; preds = %278, %260
  %283 = phi %"class.tflite::RuntimeShape"** [ %269, %260 ], [ %281, %278 ]
  store i64 %276, i64* %32, align 8
  store i64 %268, i64* %80, align 8
  store i64 %265, i64* %30, align 8
  %284 = icmp eq %"class.tflite::RuntimeShape"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.tflite::RuntimeShape"** %283 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %230, %282, %285
  %288 = add nuw nsw i64 %222, 1
  %289 = icmp eq i64 %288, %82
  br i1 %289, label %220, label %221
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIlEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.47"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.47"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i64*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.47"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i64**
  %22 = getelementptr inbounds i64*, i64** %21, i64 %10
  %23 = ptrtoint i64** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.47"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i64*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.47", %"class.tflite::VectorOfTensors.47"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i64**
  %94 = load i64*, i64** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i64* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i64* %96 to i64
  %98 = load i64**, i64*** %62, align 8
  %99 = load i64**, i64*** %11, align 8
  %100 = icmp ult i64** %98, %99
  %101 = ptrtoint i64** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i64** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i64*, i64** %98, i64 1
  %105 = ptrtoint i64** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i64** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.47"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to i64**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i64** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i64*, i64** %134, i64 %110
  %136 = getelementptr inbounds i64*, i64** %134, i64 %133
  %137 = ptrtoint i64** %136 to i64
  %138 = bitcast i64** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i64*, i64** %135, i64 1
  %140 = ptrtoint i64** %139 to i64
  %141 = load i64**, i64*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i64** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i64*, i64** %135, i64 %146
  %148 = ptrtoint i64** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i64** %147 to i8*
  %152 = bitcast i64** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i64**, i64*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i64** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i64** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i64** %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !47
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !47
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !47
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !47
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #12, !noalias !47
  store i8* %171, i8** %70, align 8, !alias.scope !47
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #12
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #12
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIaEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.55"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #2 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.55"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i8*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.55"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #12
  %21 = bitcast i8* %20 to i8**
  %22 = getelementptr inbounds i8*, i8** %21, i64 %10
  %23 = ptrtoint i8** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.55"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #12
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #10
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i8*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.55", %"class.tflite::VectorOfTensors.55"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi i8* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8**, i8*** %62, align 8
  %99 = load i8**, i8*** %11, align 8
  %100 = icmp ult i8** %98, %99
  %101 = ptrtoint i8** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast i8** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds i8*, i8** %98, i64 1
  %105 = ptrtoint i8** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint i8** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors.55"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #12
  %131 = bitcast i8* %130 to i8**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi i8** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds i8*, i8** %134, i64 %110
  %136 = getelementptr inbounds i8*, i8** %134, i64 %133
  %137 = ptrtoint i8** %136 to i64
  %138 = bitcast i8** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds i8*, i8** %135, i64 1
  %140 = ptrtoint i8** %139 to i64
  %141 = load i8**, i8*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint i8** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds i8*, i8** %135, i64 %146
  %148 = ptrtoint i8** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast i8** %147 to i8*
  %152 = bitcast i8** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #10
  %153 = load i8**, i8*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi i8** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq i8** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast i8** %155 to i8*
  call void @_ZdlPv(i8* %158) #12
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #10
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !50
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !50
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !50
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !50
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #12, !noalias !50
  store i8* %171, i8** %70, align 8, !alias.scope !50
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #10
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #12
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #10
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #10
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #10
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.16"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #12
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #10
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #12
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_SPLIT_VEv() local_unnamed_addr #4 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_SPLIT_VEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.9"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.tflite::RuntimeShape"*
  br i1 %10, label %12, label %93

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.tflite::RuntimeShape"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.tflite::RuntimeShape"*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %20
  %25 = ptrtoint %"class.tflite::RuntimeShape"* %24 to i64
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %1
  %27 = ptrtoint %"class.tflite::RuntimeShape"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.tflite::RuntimeShape"*
  %29 = icmp eq %"class.tflite::RuntimeShape"* %28, %11
  br i1 %29, label %69, label %30

30:                                               ; preds = %17, %50
  %31 = phi %"class.tflite::RuntimeShape"* [ %62, %50 ], [ %24, %17 ]
  %32 = phi %"class.tflite::RuntimeShape"* [ %33, %50 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = icmp sgt i32 %36, 5
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call i8* @_Znam(i64 %40) #12
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1, i32 0
  %43 = bitcast i32** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = bitcast i8* %41 to i32*
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1
  %47 = bitcast %union.anon* %46 to i32*
  %48 = sext i32 %36 to i64
  %49 = shl nsw i64 %48, 2
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi i64 [ %40, %38 ], [ %49, %45 ]
  %52 = phi i32* [ %44, %38 ], [ %47, %45 ]
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %35, align 8
  %55 = icmp sgt i32 %54, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1, i32 1
  %57 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %union.anon* %56 to i32*
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %61, i64 %51, i1 false) #10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1
  %63 = icmp eq %"class.tflite::RuntimeShape"* %33, %11
  br i1 %63, label %64, label %30

64:                                               ; preds = %50
  %65 = ptrtoint %"class.tflite::RuntimeShape"* %62 to i64
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %13, align 8
  %68 = inttoptr i64 %66 to %"class.tflite::RuntimeShape"*
  br label %69

69:                                               ; preds = %17, %64
  %70 = phi %"class.tflite::RuntimeShape"* [ %68, %64 ], [ %28, %17 ]
  %71 = phi %"class.tflite::RuntimeShape"* [ %67, %64 ], [ %11, %17 ]
  %72 = phi i64 [ %65, %64 ], [ %25, %17 ]
  %73 = phi i64 [ %66, %64 ], [ %18, %17 ]
  store i64 %72, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %74 = icmp eq %"class.tflite::RuntimeShape"* %71, %70
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %87
  %76 = phi %"class.tflite::RuntimeShape"* [ %77, %87 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1, i32 1, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdaPv(i8* %86) #12
  br label %87

87:                                               ; preds = %85, %81, %75
  %88 = icmp eq %"class.tflite::RuntimeShape"* %77, %70
  br i1 %88, label %89, label %75

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #12
  br label %93

93:                                               ; preds = %91, %89, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.9"*, %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.tflite::RuntimeShape"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tflite::RuntimeShape"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %35
  %39 = ptrtoint %"class.tflite::RuntimeShape"* %38 to i64
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = icmp sgt i32 %42, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = sext i32 %42 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #12
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = load i32, i32* %41, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = bitcast %union.anon* %62 to i32*
  %66 = select i1 %61, i32* %64, i32* %65
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %67, i64 %57, i1 false) #10
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 1
  %69 = ptrtoint %"class.tflite::RuntimeShape"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %70, align 8
  %72 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  %73 = icmp eq %"class.tflite::RuntimeShape"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %56
  %75 = ptrtoint %"class.tflite::RuntimeShape"* %71 to i64
  br label %113

76:                                               ; preds = %56, %96
  %77 = phi %"class.tflite::RuntimeShape"* [ %108, %96 ], [ %37, %56 ]
  %78 = phi %"class.tflite::RuntimeShape"* [ %79, %96 ], [ %72, %56 ]
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %91

84:                                               ; preds = %76
  %85 = sext i32 %82 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Znam(i64 %86) #12
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1, i32 0
  %89 = bitcast i32** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %87 to i32*
  br label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = sext i32 %82 to i64
  %95 = shl nsw i64 %94, 2
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i64 [ %86, %84 ], [ %95, %91 ]
  %98 = phi i32* [ %90, %84 ], [ %93, %91 ]
  %99 = bitcast i32* %98 to i8*
  %100 = load i32, i32* %81, align 8
  %101 = icmp sgt i32 %100, 5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1, i32 1
  %103 = getelementptr inbounds %union.anon, %union.anon* %102, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %union.anon* %102 to i32*
  %106 = select i1 %101, i32* %104, i32* %105
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %107, i64 %97, i1 false) #10
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1
  %109 = icmp eq %"class.tflite::RuntimeShape"* %79, %71
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = load i64, i64* %6, align 8
  %112 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  br label %113

113:                                              ; preds = %74, %110
  %114 = phi %"class.tflite::RuntimeShape"* [ %71, %74 ], [ %112, %110 ]
  %115 = phi %"class.tflite::RuntimeShape"* [ %37, %74 ], [ %108, %110 ]
  %116 = phi i64 [ %75, %74 ], [ %111, %110 ]
  %117 = ptrtoint %"class.tflite::RuntimeShape"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %69, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"class.tflite::RuntimeShape"*
  %119 = icmp eq %"class.tflite::RuntimeShape"* %114, %118
  br i1 %119, label %134, label %120

120:                                              ; preds = %113, %132
  %121 = phi %"class.tflite::RuntimeShape"* [ %122, %132 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 5
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1, i32 1, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdaPv(i8* %131) #12
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = icmp eq %"class.tflite::RuntimeShape"* %122, %118
  br i1 %133, label %134, label %120

134:                                              ; preds = %132, %113
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %137) #12
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = distinct !{!8, !3}
!9 = distinct !{!9, !3}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!12 = distinct !{!12, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !3}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = distinct !{!18, !3}
!19 = distinct !{!19, !3}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = distinct !{!23, !3}
!24 = distinct !{!24, !3}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!27 = distinct !{!27, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!28 = distinct !{!28, !3}
!29 = distinct !{!29, !3}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!32 = distinct !{!32, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !3}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!40 = distinct !{!40, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!43 = distinct !{!43, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
