; ModuleID = '../../device/vr/util/stage_utils.cc'
source_filename = "../../device/vr/util/stage_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Point3F"* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device8vr_utils22GetStageBoundsFromSizeEff(%"class.std::__1::vector"* noalias nocapture sret, float, float) local_unnamed_addr #0 {
  %4 = fcmp ugt float %1, 0.000000e+00
  %5 = fcmp ugt float %2, 0.000000e+00
  %6 = and i1 %4, %5
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #3
  br label %46

9:                                                ; preds = %3
  %10 = fmul float %1, 5.000000e-01
  %11 = fmul float %2, 5.000000e-01
  %12 = fsub float -0.000000e+00, %11
  %13 = fsub float -0.000000e+00, %10
  %14 = tail call i8* @_Znwm(i64 48) #4
  %15 = ptrtoint i8* %14 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 48
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast i8* %14 to float*
  store float %10, float* %18, align 4
  %19 = getelementptr inbounds i8, i8* %14, i64 4
  %20 = bitcast i8* %19 to float*
  store float 0.000000e+00, float* %20, align 4
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to float*
  store float %12, float* %22, align 4
  %23 = getelementptr inbounds i8, i8* %14, i64 12
  %24 = bitcast i8* %23 to float*
  store float %10, float* %24, align 4
  %25 = getelementptr inbounds i8, i8* %14, i64 16
  %26 = bitcast i8* %25 to float*
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds i8, i8* %14, i64 20
  %28 = bitcast i8* %27 to float*
  store float %11, float* %28, align 4
  %29 = getelementptr inbounds i8, i8* %14, i64 24
  %30 = bitcast i8* %29 to float*
  store float %13, float* %30, align 4
  %31 = getelementptr inbounds i8, i8* %14, i64 28
  %32 = bitcast i8* %31 to float*
  store float 0.000000e+00, float* %32, align 4
  %33 = getelementptr inbounds i8, i8* %14, i64 32
  %34 = bitcast i8* %33 to float*
  store float %11, float* %34, align 4
  %35 = getelementptr inbounds i8, i8* %14, i64 36
  %36 = bitcast i8* %35 to float*
  store float %13, float* %36, align 4
  %37 = getelementptr inbounds i8, i8* %14, i64 40
  %38 = bitcast i8* %37 to float*
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds i8, i8* %14, i64 44
  %40 = bitcast i8* %39 to float*
  store float %12, float* %40, align 4
  %41 = bitcast %"class.std::__1::vector"* %0 to i64*
  store i64 %15, i64* %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %43 = bitcast %"class.gfx::Point3F"** %42 to i64*
  store i64 %17, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.gfx::Point3F"** %44 to i64*
  store i64 %17, i64* %45, align 8
  br label %46

46:                                               ; preds = %9, %7
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
