; ModuleID = '../../chrome/browser/ui/exclusive_access/exclusive_access_controller_base.cc'
source_filename = "../../chrome/browser/ui/exclusive_access/exclusive_access_controller_base.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.ExclusiveAccessControllerBase = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32, [4 x i8] }>
%"class.content::NotificationObserver" = type { i32 (...)** }
%class.ExclusiveAccessManager = type { %class.ExclusiveAccessContext*, %class.FullscreenController, %class.KeyboardLockController, %class.MouseLockController }
%class.ExclusiveAccessContext = type opaque
%class.FullscreenController = type { %class.ExclusiveAccessControllerBase.base, %class.GURL, %class.GURL, i32, i8, i8, %"class.content::WebContents"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory" }
%class.ExclusiveAccessControllerBase.base = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32 }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %class.GURL* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.17", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.25" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.20" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i8 }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::WeakReference::Flag"* }
%class.KeyboardLockController = type { %class.ExclusiveAccessControllerBase.base, %"class.base::RepeatingCallback", %"class.base::OnceCallback", i32, i32, %"class.base::OneShotTimer", %"class.base::TimeDelta", %"class.base::TickClock"*, %"class.base::circular_deque" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.32", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.35" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.35" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%class.MouseLockController = type { %class.ExclusiveAccessControllerBase.base, i32, %"class.content::WebContents"*, i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.36" }
%"class.base::WeakPtrFactory.36" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.content::NotificationSource" = type { i8* }
%"class.content::NotificationDetails" = type { i8* }
%"struct.content::LoadCommittedDetails" = type { %"class.content::NavigationEntry"*, i32, i32, %class.GURL, i8, i8, i8, i8, i32 }
%"class.content::NavigationEntry" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"class.content::Source" = type { %"class.content::NotificationSource" }
%"class.content::NavigationController" = type { i32 (...)** }

@_ZTV29ExclusiveAccessControllerBase = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExclusiveAccessControllerBase*, i32, %"class.content::NotificationSource"*, %"class.content::NotificationDetails"*)* @_ZN29ExclusiveAccessControllerBase7ObserveEiRKN7content18NotificationSourceERKNS0_19NotificationDetailsE to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*)* @_ZN29ExclusiveAccessControllerBaseD2Ev to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*)* @_ZN29ExclusiveAccessControllerBaseD0Ev to i8*), i8* bitcast (void (%class.GURL*, %class.ExclusiveAccessControllerBase*)* @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN29ExclusiveAccessControllerBaseD1Ev = hidden unnamed_addr alias void (%class.ExclusiveAccessControllerBase*), void (%class.ExclusiveAccessControllerBase*)* @_ZN29ExclusiveAccessControllerBaseD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBaseC2EP22ExclusiveAccessManager(%class.ExclusiveAccessControllerBase*, %class.ExclusiveAccessManager*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV29ExclusiveAccessControllerBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 1
  store %class.ExclusiveAccessManager* %1, %class.ExclusiveAccessManager** %4, align 8
  %5 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  tail call void @_ZN7content21NotificationRegistrarC1Ev(%"class.content::NotificationRegistrar"* %5) #8
  %6 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 3
  store %"class.content::WebContents"* null, %"class.content::WebContents"** %6, align 8
  %7 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 4
  store i32 0, i32* %7, align 8
  ret void
}

declare void @_ZN7content21NotificationRegistrarC1Ev(%"class.content::NotificationRegistrar"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBaseD2Ev(%class.ExclusiveAccessControllerBase*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV29ExclusiveAccessControllerBase, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  tail call void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content21NotificationRegistrarD1Ev(%"class.content::NotificationRegistrar"*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBaseD0Ev(%class.ExclusiveAccessControllerBase* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29ExclusiveAccessControllerBase27GetExclusiveAccessBubbleURLEv(%class.GURL* noalias sret, %class.ExclusiveAccessControllerBase* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %1, i64 0, i32 1
  %4 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %3, align 8
  tail call void @_ZNK22ExclusiveAccessManager27GetExclusiveAccessBubbleURLEv(%class.GURL* sret %0, %class.ExclusiveAccessManager* %4) #8
  ret void
}

declare void @_ZNK22ExclusiveAccessManager27GetExclusiveAccessBubbleURLEv(%class.GURL* sret, %class.ExclusiveAccessManager*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv(%class.GURL* noalias sret, %class.ExclusiveAccessControllerBase* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %1, i64 0, i32 3
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %5 = icmp eq %"class.content::WebContents"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.content::WebContents"* %4 to %class.GURL* (%"class.content::WebContents"*)***
  %8 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %7, align 8
  %9 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %8, i64 7
  %10 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %9, align 8
  %11 = tail call dereferenceable(120) %class.GURL* %10(%"class.content::WebContents"* nonnull %4) #8
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %0, %class.GURL* dereferenceable(120) %11) #8
  br label %13

12:                                               ; preds = %2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %0) #8
  br label %13

13:                                               ; preds = %12, %6
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 3
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %5 = icmp eq %"class.content::WebContents"* %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %class.ExclusiveAccessControllerBase* %0 to void (%class.ExclusiveAccessControllerBase*)***
  %8 = load void (%class.ExclusiveAccessControllerBase*)**, void (%class.ExclusiveAccessControllerBase*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %8, i64 9
  %10 = load void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %9, align 8
  tail call void %10(%class.ExclusiveAccessControllerBase* %0) #8
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* nocapture, %"class.content::WebContents"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 3
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %5 = icmp eq %"class.content::WebContents"* %4, %1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %class.ExclusiveAccessControllerBase* %0 to void (%class.ExclusiveAccessControllerBase*)***
  %8 = load void (%class.ExclusiveAccessControllerBase*)**, void (%class.ExclusiveAccessControllerBase*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %8, i64 9
  %10 = load void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %9, align 8
  tail call void %10(%class.ExclusiveAccessControllerBase* %0) #8
  %11 = load void (%class.ExclusiveAccessControllerBase*)**, void (%class.ExclusiveAccessControllerBase*)*** %7, align 8
  %12 = getelementptr inbounds void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %11, i64 10
  %13 = load void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %12, align 8
  tail call void %13(%class.ExclusiveAccessControllerBase* %0) #8
  br label %14

14:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase7ObserveEiRKN7content18NotificationSourceERKNS0_19NotificationDetailsE(%class.ExclusiveAccessControllerBase*, i32, %"class.content::NotificationSource"* nocapture readnone dereferenceable(8), %"class.content::NotificationDetails"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.content::NotificationDetails"* %3 to %"struct.content::LoadCommittedDetails"**
  %6 = load %"struct.content::LoadCommittedDetails"*, %"struct.content::LoadCommittedDetails"** %5, align 8
  %7 = getelementptr inbounds %"struct.content::LoadCommittedDetails", %"struct.content::LoadCommittedDetails"* %6, i64 0, i32 6
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %19, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"struct.content::LoadCommittedDetails", %"struct.content::LoadCommittedDetails"* %6, i64 0, i32 5
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = bitcast %class.ExclusiveAccessControllerBase* %0 to void (%class.ExclusiveAccessControllerBase*)***
  %16 = load void (%class.ExclusiveAccessControllerBase*)**, void (%class.ExclusiveAccessControllerBase*)*** %15, align 8
  %17 = getelementptr inbounds void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %16, i64 9
  %18 = load void (%class.ExclusiveAccessControllerBase*)*, void (%class.ExclusiveAccessControllerBase*)** %17, align 8
  tail call void %18(%class.ExclusiveAccessControllerBase* %0) #8
  br label %19

19:                                               ; preds = %4, %14, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase22RecordBubbleReshownUMAEv(%class.ExclusiveAccessControllerBase* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 1
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase16RecordExitingUMAEv(%class.ExclusiveAccessControllerBase*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = bitcast %class.ExclusiveAccessControllerBase* %0 to void (%class.ExclusiveAccessControllerBase*, i32)***
  %5 = load void (%class.ExclusiveAccessControllerBase*, i32)**, void (%class.ExclusiveAccessControllerBase*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%class.ExclusiveAccessControllerBase*, i32)*, void (%class.ExclusiveAccessControllerBase*, i32)** %5, i64 11
  %7 = load void (%class.ExclusiveAccessControllerBase*, i32)*, void (%class.ExclusiveAccessControllerBase*, i32)** %6, align 8
  tail call void %7(%class.ExclusiveAccessControllerBase* %0, i32 %3) #8
  store i32 0, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase25SetTabWithExclusiveAccessEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.content::Source", align 8
  %4 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 3
  store %"class.content::WebContents"* %1, %"class.content::WebContents"** %4, align 8
  %5 = icmp eq %"class.content::WebContents"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZNK7content21NotificationRegistrar7IsEmptyEv(%"class.content::NotificationRegistrar"* %7) #8
  br i1 %8, label %9, label %20

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 0
  %11 = bitcast %"class.content::Source"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = load %"class.content::WebContents"*, %"class.content::WebContents"** %4, align 8
  %13 = bitcast %"class.content::WebContents"* %12 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %14 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %14, i64 5
  %16 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %15, align 8
  %17 = tail call dereferenceable(8) %"class.content::NavigationController"* %16(%"class.content::WebContents"* %12) #8
  %18 = bitcast %"class.content::Source"* %3 to %"class.content::NavigationController"**
  store %"class.content::NavigationController"* %17, %"class.content::NavigationController"** %18, align 8
  %19 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %3, i64 0, i32 0
  call void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"* %7, %"class.content::NotificationObserver"* %10, i32 2, %"class.content::NotificationSource"* nonnull dereferenceable(8) %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %27

20:                                               ; preds = %6
  %21 = load %"class.content::WebContents"*, %"class.content::WebContents"** %4, align 8
  %22 = icmp eq %"class.content::WebContents"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %20, %2
  %24 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  %25 = tail call zeroext i1 @_ZNK7content21NotificationRegistrar7IsEmptyEv(%"class.content::NotificationRegistrar"* %24) #8
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @_ZN7content21NotificationRegistrar9RemoveAllEv(%"class.content::NotificationRegistrar"* %24) #8
  br label %27

27:                                               ; preds = %9, %20, %23, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN29ExclusiveAccessControllerBase31UpdateNotificationRegistrationsEv(%class.ExclusiveAccessControllerBase*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.content::Source", align 8
  %3 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 3
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %5 = icmp eq %"class.content::WebContents"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  %8 = tail call zeroext i1 @_ZNK7content21NotificationRegistrar7IsEmptyEv(%"class.content::NotificationRegistrar"* %7) #8
  br i1 %8, label %9, label %20

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 0
  %11 = bitcast %"class.content::Source"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8
  %12 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %13 = bitcast %"class.content::WebContents"* %12 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %14 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %14, i64 5
  %16 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %15, align 8
  %17 = tail call dereferenceable(8) %"class.content::NavigationController"* %16(%"class.content::WebContents"* %12) #8
  %18 = bitcast %"class.content::Source"* %2 to %"class.content::NavigationController"**
  store %"class.content::NavigationController"* %17, %"class.content::NavigationController"** %18, align 8
  %19 = getelementptr inbounds %"class.content::Source", %"class.content::Source"* %2, i64 0, i32 0
  call void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"* %7, %"class.content::NotificationObserver"* %10, i32 2, %"class.content::NotificationSource"* nonnull dereferenceable(8) %19) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8
  br label %27

20:                                               ; preds = %6
  %21 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %22 = icmp eq %"class.content::WebContents"* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %1, %20
  %24 = getelementptr inbounds %class.ExclusiveAccessControllerBase, %class.ExclusiveAccessControllerBase* %0, i64 0, i32 2
  %25 = tail call zeroext i1 @_ZNK7content21NotificationRegistrar7IsEmptyEv(%"class.content::NotificationRegistrar"* %24) #8
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @_ZN7content21NotificationRegistrar9RemoveAllEv(%"class.content::NotificationRegistrar"* %24) #8
  br label %27

27:                                               ; preds = %20, %23, %26, %9
  ret void
}

declare zeroext i1 @_ZNK7content21NotificationRegistrar7IsEmptyEv(%"class.content::NotificationRegistrar"*) local_unnamed_addr #1

declare void @_ZN7content21NotificationRegistrar3AddEPNS_20NotificationObserverEiRKNS_18NotificationSourceE(%"class.content::NotificationRegistrar"*, %"class.content::NotificationObserver"*, i32, %"class.content::NotificationSource"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN7content21NotificationRegistrar9RemoveAllEv(%"class.content::NotificationRegistrar"*) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
