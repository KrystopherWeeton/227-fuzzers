; ModuleID = '../../third_party/pdfium/fxjs/cjs_result.cpp'
source_filename = "../../third_party/pdfium/fxjs/cjs_result.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CJS_Result = type { %"class.pdfium::Optional", %"class.v8::Local" }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.v8::Value" = type { i8 }

@_ZN10CJS_ResultC1Ev = hidden unnamed_addr alias void (%class.CJS_Result*), void (%class.CJS_Result*)* @_ZN10CJS_ResultC2Ev
@_ZN10CJS_ResultC1EN2v85LocalINS0_5ValueEEE = hidden unnamed_addr alias void (%class.CJS_Result*, %"class.v8::Value"*), void (%class.CJS_Result*, %"class.v8::Value"*)* @_ZN10CJS_ResultC2EN2v85LocalINS0_5ValueEEE
@_ZN10CJS_ResultC1ERKN5fxcrt10WideStringE = hidden unnamed_addr alias void (%class.CJS_Result*, %"class.fxcrt::WideString"*), void (%class.CJS_Result*, %"class.fxcrt::WideString"*)* @_ZN10CJS_ResultC2ERKN5fxcrt10WideStringE
@_ZN10CJS_ResultC1E9JSMessage = hidden unnamed_addr alias void (%class.CJS_Result*, i32), void (%class.CJS_Result*, i32)* @_ZN10CJS_ResultC2E9JSMessage
@_ZN10CJS_ResultC1ERKS_ = hidden unnamed_addr alias void (%class.CJS_Result*, %class.CJS_Result*), void (%class.CJS_Result*, %class.CJS_Result*)* @_ZN10CJS_ResultC2ERKS_
@_ZN10CJS_ResultD1Ev = hidden unnamed_addr alias void (%class.CJS_Result*), void (%class.CJS_Result*)* @_ZN10CJS_ResultD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10CJS_ResultC2Ev(%class.CJS_Result* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 1, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10CJS_ResultC2EN2v85LocalINS0_5ValueEEE(%class.CJS_Result* nocapture, %"class.v8::Value"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 1, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CJS_ResultC2ERKN5fxcrt10WideStringE(%class.CJS_Result*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #5
  %5 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 1, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CJS_ResultC2E9JSMessage(%class.CJS_Result*, i32) unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::WideString", align 8
  %4 = bitcast %"class.fxcrt::WideString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  call void @_Z17JSGetStringFromID9JSMessage(%"class.fxcrt::WideString"* nonnull sret %3, i32 %1) #5
  %5 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %6, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %3) #5
  %7 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 1, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_Z17JSGetStringFromID9JSMessage(%"class.fxcrt::WideString"* sret, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CJS_ResultC2ERKS_(%class.CJS_Result*, %class.CJS_Result* dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"* %9, %"class.fxcrt::WideString"* dereferenceable(8) %8) #5
  store i8 1, i8* %3, align 8
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 1
  %12 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %1, i64 0, i32 1
  %13 = bitcast %"class.v8::Local"* %12 to i64*
  %14 = bitcast %"class.v8::Local"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10CJS_ResultD2Ev(%class.CJS_Result*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CJS_Result, %class.CJS_Result* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %6) #5
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5fxcrt10WideStringC1ERKS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
