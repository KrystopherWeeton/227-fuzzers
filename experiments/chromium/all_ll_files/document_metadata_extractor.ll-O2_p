; ModuleID = '../../third_party/blink/renderer/modules/document_metadata/document_metadata_extractor.cc'
source_filename = "../../third_party/blink/renderer/modules/document_metadata/document_metadata_extractor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.mojo::StructPtr.755" = type { %"class.std::__1::unique_ptr.756" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::mojom::blink::WebPage"* }
%"class.blink::mojom::blink::WebPage" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector.759" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.WTF::Vector.759" = type { %"class.WTF::VectorBuffer.760" }
%"class.WTF::VectorBuffer.760" = type { %"class.WTF::VectorBufferBase.761" }
%"class.WTF::VectorBufferBase.761" = type { %"class.mojo::StructPtr.762"*, i32, i32 }
%"class.mojo::StructPtr.762" = type { %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.schema_org::mojom::blink::Entity"* }
%"class.schema_org::mojom::blink::Entity" = type { %"class.WTF::String", %"class.WTF::Vector.766" }
%"class.WTF::Vector.766" = type { %"class.WTF::VectorBuffer.767" }
%"class.WTF::VectorBuffer.767" = type { %"class.WTF::VectorBufferBase.768" }
%"class.WTF::VectorBufferBase.768" = type { %"class.mojo::StructPtr.769"*, i32, i32 }
%"class.mojo::StructPtr.769" = type { %"class.std::__1::unique_ptr.770" }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"class.schema_org::mojom::blink::Property"* }
%"class.schema_org::mojom::blink::Property" = type { %"class.WTF::String", %"class.mojo::StructPtr.773" }
%"class.mojo::StructPtr.773" = type { %"class.std::__1::unique_ptr.774" }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.schema_org::mojom::blink::Values"* }
%"class.schema_org::mojom::blink::Values" = type { i32, %"union.schema_org::mojom::blink::Values::Union_" }
%"union.schema_org::mojom::blink::Values::Union_" = type { %"class.WTF::Vector.472"* }
%"class.WTF::Vector.472" = type { %"class.WTF::VectorBuffer.473" }
%"class.WTF::VectorBuffer.473" = type { %"class.WTF::VectorBufferBase.474" }
%"class.WTF::VectorBufferBase.474" = type { i8*, i32, i32 }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.69", %"class.WTF::Vector.69", i8, i32, %"class.blink::Member.80", %"class.blink::Member.82", %"class.blink::Member.84", %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.93", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.99", %"class.blink::Member.101", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.104", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.313", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.322", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.329", i16, i8, %"class.blink::Member.336", %"class.blink::Member.338", %"class.blink::Member.340", %"class.blink::Member.342", %"class.blink::TextLinkColors", %"class.blink::Member.344", i8, [7 x i8], %"class.blink::HeapHashMap.346", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.353", %"class.blink::Member.358", %"class.blink::Member.360", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.362", %"class.blink::HeapVector.364", %"class.std::__1::unique_ptr.372", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.378", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.391", %"class.WTF::Vector.393", i8, i8, %"class.std::__1::unique_ptr.398", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.404", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.412", i8, i32, %"class.blink::Member.414", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.420", %"class.WTF::HashMap.422", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.435", i8, i32, %"class.blink::Member.442", %"class.blink::Member.444", i32, %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::Member.450", %"class.std::__1::unique_ptr.452", i64, %"class.std::__1::unique_ptr.458", i32, i32, %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.470", %"class.WTF::Vector.472", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.477", %"class.blink::Member.484", %"class.std::__1::unique_ptr.486", %"class.blink::Member.492", i8, i8, %"class.WTF::String", %"class.blink::Member.494", i8, [7 x i8], %"class.blink::HeapHashMap.496", %"class.blink::HeapObserverSet", %"class.blink::Member.510", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.512", i32, i8, i8, %"class.blink::WeakMember.514", %"class.blink::Member.515" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.62" }
%"class.blink::HeapHashMap.62" = type { %"class.WTF::HashMap.65" }
%"class.WTF::HashMap.65" = type { %"class.WTF::HashTable.66" }
%"class.WTF::HashTable.66" = type <{ %"struct.WTF::KeyValuePair.68"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.68" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.73" }
%"struct.std::__1::atomic.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__atomic_base.75" }
%"struct.std::__1::__atomic_base.75" = type { %"struct.std::__1::__cxx_atomic_impl.76" }
%"struct.std::__1::__cxx_atomic_impl.76" = type { %"struct.std::__1::__cxx_atomic_base_impl.77" }
%"struct.std::__1::__cxx_atomic_base_impl.77" = type { i32 }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.533", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.601", i32, i8, [3 x i8], %"class.blink::HeapVector.603", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.611", %"class.blink::Member.613", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.622", %"class.blink::Member.750", %"class.blink::Member.752", i8, [7 x i8] }>
%"class.blink::Supplementable.533" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.534" }
%"class.blink::HeapHashMap.534" = type { %"class.WTF::HashMap.537" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.549" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.541" }
%"class.blink::HeapObserverSet.541" = type { i32, [4 x i8], %"class.blink::HeapHashSet.542" }
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::WeakMember.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.548" = type opaque
%"class.blink::Supplementable.549" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.550" }
%"class.blink::HeapHashMap.550" = type { %"class.WTF::HashMap.553" }
%"class.WTF::HashMap.553" = type { %"class.WTF::HashTable.554" }
%"class.WTF::HashTable.554" = type <{ %"struct.WTF::KeyValuePair.556"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.556" = type { i8*, %"class.blink::Member.1244" }
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1246" }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.v8::Isolate" = type { i8 }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.557, %"class.std::__1::unique_ptr.561", %"class.std::__1::unique_ptr.561", %"class.std::__1::unique_ptr.591", %"class.std::__1::unique_ptr.591", %"class.blink::Member.82", i32, [4 x i8], %"class.WTF::HashSet.597", i32, i32 }
%class.scoped_refptr.557 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.558", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.560 }
%"class.WTF::RefCounted.558" = type { %"class.base::RefCounted.559" }
%"class.base::RefCounted.559" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.560 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.578", %"class.std::__1::map.587"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.566 }
%union.anon.566 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.570", %"class.std::__1::__compressed_pair.575" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.575" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { i64 }
%"class.std::__1::map.578" = type { %"class.std::__1::__tree.579" }
%"class.std::__1::__tree.579" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.580", %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.587" = type opaque
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.597" = type { %"class.WTF::HashTable.598" }
%"class.WTF::HashTable.598" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.601" = type { %"class.blink::MemberBase.602" }
%"class.blink::MemberBase.602" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.603" = type { %"class.WTF::Vector.606" }
%"class.WTF::Vector.606" = type { %"class.WTF::VectorBuffer.607" }
%"class.WTF::VectorBuffer.607" = type { %"class.WTF::VectorBufferBase.608" }
%"class.WTF::VectorBufferBase.608" = type { %"class.blink::Member.609"*, i32, i32 }
%"class.blink::Member.609" = type opaque
%"class.blink::Member.611" = type { %"class.blink::MemberBase.612" }
%"class.blink::MemberBase.612" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.615", i32, i32 }
%"class.blink::HeapHashMap.615" = type { %"class.WTF::HashMap.618" }
%"class.WTF::HashMap.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"struct.WTF::KeyValuePair.621"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.621" = type opaque
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.625" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.628" }
%"class.WTF::Vector.628" = type { %"class.WTF::VectorBuffer.629" }
%"class.WTF::VectorBuffer.629" = type { %"class.WTF::VectorBufferBase.630" }
%"class.WTF::VectorBufferBase.630" = type { %"class.mojo::StructPtr.631"*, i32, i32 }
%"class.mojo::StructPtr.631" = type { %"class.std::__1::unique_ptr.632" }
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.635", %"class.WTF::HashMap.642", %"class.WTF::HashMap.647", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.652", i32, %"class.mojo::StructPtr.657", %"class.WTF::Vector.652" }
%"class.mojo::StructPtr.635" = type { %"class.std::__1::unique_ptr.636" }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type opaque
%"class.WTF::HashMap.647" = type { %"class.WTF::HashTable.648" }
%"class.WTF::HashTable.648" = type <{ %"struct.WTF::KeyValuePair.651"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.651" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.657" = type { %"class.std::__1::unique_ptr.658" }
%"class.std::__1::unique_ptr.658" = type { %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.660" }
%"struct.std::__1::__compressed_pair_elem.660" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.652", i8, i8, [6 x i8] }>
%"class.WTF::Vector.652" = type { %"class.WTF::VectorBuffer.653" }
%"class.WTF::VectorBuffer.653" = type { %"class.WTF::VectorBufferBase.654" }
%"class.WTF::VectorBufferBase.654" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.741" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.672", i32 }>
%"class.std::__1::unique_ptr.672" = type { %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.674" }
%"struct.std::__1::__compressed_pair_elem.674" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.675", %"class.absl::optional.676", %"class.absl::optional.681", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.694", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.716", %"class.std::__1::map.727", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.736", i8, %class.scoped_refptr.686, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.737" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.675" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.676" = type { %"class.absl::optional_internal::optional_data.677" }
%"class.absl::optional_internal::optional_data.677" = type { %"class.absl::optional_internal::optional_data_base.678" }
%"class.absl::optional_internal::optional_data_base.678" = type { %"class.absl::optional_internal::optional_data_dtor_base.679" }
%"class.absl::optional_internal::optional_data_dtor_base.679" = type { i8, %union.anon.680 }
%union.anon.680 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.681" = type { %"class.absl::optional_internal::optional_data.682" }
%"class.absl::optional_internal::optional_data.682" = type { %"class.absl::optional_internal::optional_data_base.683" }
%"class.absl::optional_internal::optional_data_base.683" = type { %"class.absl::optional_internal::optional_data_dtor_base.684" }
%"class.absl::optional_internal::optional_data_dtor_base.684" = type { i8, %union.anon.685 }
%union.anon.685 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.686, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.687" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.687" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.305 }
%class.scoped_refptr.305 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.306", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.306" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.307" }
%"struct.std::__1::atomic.307" = type { %"struct.std::__1::__atomic_base.308" }
%"struct.std::__1::__atomic_base.308" = type { %"struct.std::__1::__atomic_base.309" }
%"struct.std::__1::__atomic_base.309" = type { %"struct.std::__1::__cxx_atomic_impl.310" }
%"struct.std::__1::__cxx_atomic_impl.310" = type { %"struct.std::__1::__cxx_atomic_base_impl.311" }
%"struct.std::__1::__cxx_atomic_base_impl.311" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.692 }
%class.scoped_refptr.692 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.754", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.686, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.754" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.693 }
%class.scoped_refptr.693 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.697", %class.scoped_refptr.698 }
%"class.base::RepeatingCallback.697" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.698 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.699", [4 x i8] }>
%"class.base::RefCountedThreadSafe.699" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.703", %"class.std::__1::unique_ptr.709", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.715" }
%"class.std::__1::unique_ptr.703" = type { %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.705" }
%"struct.std::__1::__compressed_pair_elem.705" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.709" = type { %"class.std::__1::__compressed_pair.710" }
%"class.std::__1::__compressed_pair.710" = type { %"struct.std::__1::__compressed_pair_elem.711" }
%"struct.std::__1::__compressed_pair_elem.711" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.715" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.716" = type { %"class.std::__1::__tree.717" }
%"class.std::__1::__tree.717" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.718", %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.727" = type { %"class.std::__1::__tree.728" }
%"class.std::__1::__tree.728" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.729", %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::OnceCallback.736" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.686 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.304" }>
%"class.base::RefCountedThreadSafe.304" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.737" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.750" = type { %"class.blink::MemberBase.751" }
%"class.blink::MemberBase.751" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.752" = type { %"class.blink::MemberBase.753" }
%"class.blink::MemberBase.753" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.108", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.108" = type { %"class.base::RefCounted.109" }
%"class.base::RefCounted.109" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.112" }
%"class.blink::HeapHashMap.112" = type { %"class.WTF::HashMap.115" }
%"class.WTF::HashMap.115" = type { %"class.WTF::HashTable.116" }
%"class.WTF::HashTable.116" = type <{ %"struct.WTF::KeyValuePair.118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.118" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.120", i32, [4 x i8], %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.256", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.272", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.290", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.297", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.236", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__atomic_base.158" }
%"struct.std::__1::__atomic_base.158" = type { %"struct.std::__1::__cxx_atomic_impl.159" }
%"struct.std::__1::__cxx_atomic_impl.159" = type { %"struct.std::__1::__cxx_atomic_base_impl.160" }
%"struct.std::__1::__cxx_atomic_base_impl.160" = type { i64 }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::Worklist.167"* }
%"class.blink::Worklist.167" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::Worklist.174"* }
%"class.blink::Worklist.174" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.blink::Worklist.181"* }
%"class.blink::Worklist.181" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist.188"* }
%"class.blink::Worklist.188" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.156" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.216", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.230", [4 x i8] }>
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218", %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { float }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.239", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.248" }
%"class.WTF::Vector.248" = type { %"class.WTF::VectorBuffer.249" }
%"class.WTF::VectorBuffer.249" = type { %"class.WTF::VectorBufferBase.250" }
%"class.WTF::VectorBufferBase.250" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.278" }
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.167"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.174"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.181"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.188"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.528" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.296 }
%class.scoped_refptr.296 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.315" }
%"class.blink::HeapHashMap.315" = type { %"class.WTF::HashMap.318" }
%"class.WTF::HashMap.318" = type { %"class.WTF::HashTable.319" }
%"class.WTF::HashTable.319" = type <{ %"struct.WTF::KeyValuePair.321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.321" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"class.blink::WeakMember.328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.328" = type opaque
%"class.blink::HeapHashSet.329" = type { %"class.WTF::HashSet.332" }
%"class.WTF::HashSet.332" = type { %"class.WTF::HashTable.333" }
%"class.WTF::HashTable.333" = type <{ %"class.blink::WeakMember.335"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.335" = type opaque
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.338" = type { %"class.blink::MemberBase.339" }
%"class.blink::MemberBase.339" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.344" = type { %"class.blink::MemberBase.345" }
%"class.blink::MemberBase.345" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.346" = type { %"class.WTF::HashMap.349" }
%"class.WTF::HashMap.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.WTF::KeyValuePair.352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.352" = type opaque
%"class.WTF::Vector.353" = type { %"class.WTF::VectorBuffer.354" }
%"class.WTF::VectorBuffer.354" = type { %"class.WTF::VectorBufferBase.355" }
%"class.WTF::VectorBufferBase.355" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.364" = type { %"class.WTF::Vector.367" }
%"class.WTF::Vector.367" = type { %"class.WTF::VectorBuffer.368" }
%"class.WTF::VectorBuffer.368" = type { %"class.WTF::VectorBufferBase.369" }
%"class.WTF::VectorBufferBase.369" = type { %"class.blink::Member.370"*, i32, i32 }
%"class.blink::Member.370" = type opaque
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.378" = type { %"class.WTF::HashSet.381" }
%"class.WTF::HashSet.381" = type { %"class.WTF::HashTable.382" }
%"class.WTF::HashTable.382" = type <{ %"class.blink::WeakMember.384"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.384" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.385", i32, [4 x i8] }>
%"class.WTF::Vector.385" = type { %"class.WTF::VectorBuffer.386" }
%"class.WTF::VectorBuffer.386" = type { %"class.WTF::VectorBufferBase.387" }
%"class.WTF::VectorBufferBase.387" = type { %"struct.std::__1::pair.388"*, i32, i32 }
%"struct.std::__1::pair.388" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.393" = type { %"class.WTF::VectorBuffer.394" }
%"class.WTF::VectorBuffer.394" = type { %"class.WTF::VectorBufferBase.395" }
%"class.WTF::VectorBufferBase.395" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.410"*, i32, i32 }
%"class.blink::Member.410" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"struct.WTF::KeyValuePair.426"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.426" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.312", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.303, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.303 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.312" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.435" = type { %"class.WTF::HashSet.438" }
%"class.WTF::HashSet.438" = type { %"class.WTF::HashTable.439" }
%"class.WTF::HashTable.439" = type <{ %"class.blink::Member.441"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.441" = type opaque
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.477" = type { %"class.WTF::HashMap.480" }
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.483" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.496" = type { %"class.WTF::HashMap.499" }
%"class.WTF::HashMap.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"struct.WTF::KeyValuePair.502"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.502" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.503" }
%"class.blink::HeapHashSet.503" = type { %"class.WTF::HashSet.506" }
%"class.WTF::HashSet.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"class.blink::WeakMember.509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.509" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.519", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.526", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.519" = type { %"class.WTF::HashSet.522" }
%"class.WTF::HashSet.522" = type { %"class.WTF::HashTable.523" }
%"class.WTF::HashTable.523" = type <{ %"class.blink::Member.525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.525" = type opaque
%"class.blink::HeapTaskRunnerTimer.526" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.527", { i64, i64 } }
%"class.blink::WeakMember.527" = type { %"class.blink::MemberBase.513" }
%"class.blink::WeakMember.514" = type { %"class.blink::MemberBase" }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.841", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.849", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.863", %"class.blink::FrameLoader", %"class.blink::Member.884", %"class.blink::Member.21", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.890", %"class.blink::Member.892", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.894", %class.scoped_refptr.896, %"class.blink::Member.897", %"class.blink::Member.899", %"class.blink::Member.901", %"class.blink::Member.903", %"class.blink::Member.905", %"class.blink::Member.907", %"class.blink::Member.909", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.913", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.919", %"class.std::__1::unique_ptr.920", %"class.absl::optional.829", i32, [4 x i8], %"class.std::__1::unique_ptr.926", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.934", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.939", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.944", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.947", %"class.blink::Member.949", %"class.blink::Member.951", %"class.blink::Member.953", %"class.mojo::StructPtr.956", %"class.blink::Member.965", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.967", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.802", %"class.blink::Member.804", %"class.blink::Member.806", i8, i32, i8, i32, %"class.blink::Member.808", %"class.blink::Member.810", %"class.blink::FrameLifecycle", %"class.blink::Member.800", %"class.blink::Member.800", %"class.blink::Member.800", %"class.blink::Member.800", %"class.blink::Member.800", %"class.blink::Member.800", %"class.blink::Member.812", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.822", i8, %"class.base::UnguessableToken", %"class.absl::optional.824", %"class.absl::optional.829", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.800", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.802" = type { %"class.blink::MemberBase.803" }
%"class.blink::MemberBase.803" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.808" = type { %"class.blink::MemberBase.809" }
%"class.blink::MemberBase.809" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.810" = type { %"class.blink::MemberBase.811" }
%"class.blink::MemberBase.811" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.800" = type { %"class.blink::MemberBase.801" }
%"class.blink::MemberBase.801" = type { %"class.blink::Frame"* }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.800", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.814" }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { %"struct.std::__1::pair.816"*, %"struct.std::__1::pair.816"*, %"class.std::__1::__compressed_pair.817" }
%"struct.std::__1::pair.816" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"struct.std::__1::pair.816"* }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.824" = type { %"class.absl::optional_internal::optional_data.825" }
%"class.absl::optional_internal::optional_data.825" = type { %"class.absl::optional_internal::optional_data_base.826" }
%"class.absl::optional_internal::optional_data_base.826" = type { %"class.absl::optional_internal::optional_data_dtor_base.827" }
%"class.absl::optional_internal::optional_data_dtor_base.827" = type { i8, %union.anon.828 }
%union.anon.828 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.834" }
%"class.blink::HeapHashSet.834" = type { %"class.WTF::HashSet.837" }
%"class.WTF::HashSet.837" = type { %"class.WTF::HashTable.838" }
%"class.WTF::HashTable.838" = type <{ %"class.blink::WeakMember.840"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.840" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.841" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.842" }
%"class.blink::HeapHashMap.842" = type { %"class.WTF::HashMap.845" }
%"class.WTF::HashMap.845" = type { %"class.WTF::HashTable.846" }
%"class.WTF::HashTable.846" = type <{ %"struct.WTF::KeyValuePair.848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.848" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.849" = type { %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.852", %"class.base::WeakPtrFactory.857" }
%"class.WTF::HashMap.852" = type { %"class.WTF::HashTable.853" }
%"class.WTF::HashTable.853" = type <{ %"struct.WTF::KeyValuePair.856"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.856" = type opaque
%"class.base::WeakPtrFactory.857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.861" }
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1250" }
%"class.blink::WeakMember.1250" = type { %"class.blink::MemberBase.1251" }
%"class.blink::MemberBase.1251" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.1252", i64, %"class.std::__1::map.1253", i8*, i64, %"class.base::WeakPtrFactory.1262" }
%"class.base::RepeatingCallback.1252" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1253" = type { %"class.std::__1::__tree.1254" }
%"class.std::__1::__tree.1254" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1255", %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1255" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::WeakPtrFactory.1262" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.863" = type { %"class.WTF::HashSet.866" }
%"class.WTF::HashSet.866" = type { %"class.WTF::HashTable.867" }
%"class.WTF::HashTable.867" = type <{ %"class.blink::WeakMember.869"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.869" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.812", %"class.blink::Member.870", %"class.blink::Member.872", %"class.std::__1::unique_ptr.874", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.880" }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.880" = type { %"class.WTF::HashTable.881" }
%"class.WTF::HashTable.881" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.974", %"class.blink::Member.812", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.979", i8, i32, %"class.blink::Color", %"class.absl::optional.981", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.986", %"class.blink::Member.988", %"class.blink::Member.988", %"class.std::__1::unique_ptr.991", i32, [4 x i8], %"class.WTF::HashSet.994", %"class.blink::Member.1001", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1003", %"class.blink::HeapHashSet.1010", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1018", i8, %"class.blink::Member.1024", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1036", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1050", i8, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1173", %"class.WTF::Vector.1179", i32, %class.scoped_refptr.1184, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1185", %"class.blink::Member.1187", %"class.blink::Member.1189", %"class.blink::HeapHashSet.1191", %"class.blink::HeapHashSet.1198", %"class.std::__1::unique_ptr.1205", %"class.std::__1::unique_ptr.1212", %"class.WTF::Vector.69" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.974" = type { %"class.WTF::HashTable.975" }
%"class.WTF::HashTable.975" = type <{ %class.scoped_refptr.978*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.978 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.979" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.980", { i64, i64 } }
%"class.blink::WeakMember.980" = type { %"class.blink::MemberBase.885" }
%"class.absl::optional.981" = type { %"class.absl::optional_internal::optional_data.982" }
%"class.absl::optional_internal::optional_data.982" = type { %"class.absl::optional_internal::optional_data_base.983" }
%"class.absl::optional_internal::optional_data_base.983" = type { %"class.absl::optional_internal::optional_data_dtor_base.984" }
%"class.absl::optional_internal::optional_data_dtor_base.984" = type { i8, %union.anon.985 }
%union.anon.985 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::HeapHashSet.990"* }
%"class.blink::HeapHashSet.990" = type opaque
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.WTF::HashSet.994"* }
%"class.WTF::HashSet.994" = type { %"class.WTF::HashTable.995" }
%"class.WTF::HashTable.995" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1003" = type { %"class.WTF::HashSet.1006" }
%"class.WTF::HashSet.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"class.blink::Member.1009"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1009" = type opaque
%"class.blink::HeapHashSet.1010" = type { %"class.WTF::HashSet.1013" }
%"class.WTF::HashSet.1013" = type { %"class.WTF::HashTable.1014" }
%"class.WTF::HashTable.1014" = type <{ %"class.blink::Member.1016"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1016" = type { %"class.blink::MemberBase.1017" }
%"class.blink::MemberBase.1017" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1024" = type { %"class.blink::MemberBase.1025" }
%"class.blink::MemberBase.1025" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1028", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"struct.WTF::KeyValuePair.1031"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1031" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1032", i32, i32 }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1036" = type { %"class.WTF::LinkedHashSet.1039" }
%"class.WTF::LinkedHashSet.1039" = type { %"class.WTF::HashMap.1040", %"class.WTF::VectorBackedLinkedList.1044" }
%"class.WTF::HashMap.1040" = type { %"class.WTF::HashTable.1041" }
%"class.WTF::HashTable.1041" = type <{ %"struct.WTF::KeyValuePair.1043"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1043" = type opaque
%"class.WTF::VectorBackedLinkedList.1044" = type { %"class.WTF::Vector.1045", i32, i32 }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"class.WTF::VectorBackedLinkedListNode.1048"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1048" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.1052" }
%"struct.std::__1::__compressed_pair_elem.1052" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1059, %class.scoped_refptr.1059, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1150", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1155", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1059 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1060", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1067" }
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1062", i32, [4 x i8] }>
%"class.WTF::Vector.1062" = type { %"class.WTF::VectorBuffer.1063" }
%"class.WTF::VectorBuffer.1063" = type { %"class.WTF::VectorBufferBase.1064" }
%"class.WTF::VectorBufferBase.1064" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1067" = type { %"class.WTF::VectorBuffer.1068" }
%"class.WTF::VectorBuffer.1068" = type { %"class.WTF::VectorBufferBase.1069" }
%"class.WTF::VectorBufferBase.1069" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1073", %"class.std::__1::unique_ptr.1122", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1070, %class.scoped_refptr.1071, %class.scoped_refptr.1072 }
%class.scoped_refptr.1070 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1086", i8, i8, %class.scoped_refptr.1070, i32, i32 }
%"class.WTF::RefCounted.1086" = type { %"class.base::RefCounted.1087" }
%"class.base::RefCounted.1087" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1071 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1241" }
%"class.blink::PaintPropertyNode.1241" = type { %"class.WTF::RefCounted.1242", i8, i8, %class.scoped_refptr.1071, i32, i32 }
%"class.WTF::RefCounted.1242" = type { %"class.base::RefCounted.1243" }
%"class.base::RefCounted.1243" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1072 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1238" }
%"class.blink::PaintPropertyNode.1238" = type { %"class.WTF::RefCounted.1239", i8, i8, %class.scoped_refptr.1072, i32, i32 }
%"class.WTF::RefCounted.1239" = type { %"class.base::RefCounted.1240" }
%"class.base::RefCounted.1240" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1073" = type { %"class.std::__1::__compressed_pair.1074" }
%"class.std::__1::__compressed_pair.1074" = type { %"struct.std::__1::__compressed_pair_elem.1075" }
%"struct.std::__1::__compressed_pair_elem.1075" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1076", %"class.WTF::Vector.1081", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1076" = type { %"class.WTF::VectorBuffer.1077" }
%"class.WTF::VectorBuffer.1077" = type { %"class.WTF::VectorBufferBase.1078" }
%"class.WTF::VectorBufferBase.1078" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1081" = type { %"class.WTF::VectorBuffer.1082" }
%"class.WTF::VectorBuffer.1082" = type { %"class.WTF::VectorBufferBase.1083" }
%"class.WTF::VectorBufferBase.1083" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1101" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1094, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1095", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1088" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1094 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1223", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1223" = type { %"class.WTF::RefCounted.1224", i8, i8, %class.scoped_refptr.1094, i32, i32 }
%"class.WTF::RefCounted.1224" = type { %"class.base::RefCounted.1225" }
%"class.base::RefCounted.1225" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1226" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1226" = type { %"class.absl::optional_internal::optional_data.1227" }
%"class.absl::optional_internal::optional_data.1227" = type { %"class.absl::optional_internal::optional_data_base.1228" }
%"class.absl::optional_internal::optional_data_base.1228" = type { %"class.absl::optional_internal::optional_data_dtor_base.1229" }
%"class.absl::optional_internal::optional_data_dtor_base.1229" = type { i8, %union.anon.1230 }
%union.anon.1230 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1231", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1231" = type { %"class.std::__1::__vector_base.1232" }
%"class.std::__1::__vector_base.1232" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1233" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1110", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1125", %"class.absl::optional.1125" }
%"class.absl::optional.1125" = type { %"class.absl::optional_internal::optional_data.1126" }
%"class.absl::optional_internal::optional_data.1126" = type { %"class.absl::optional_internal::optional_data_base.1127" }
%"class.absl::optional_internal::optional_data_base.1127" = type { %"class.absl::optional_internal::optional_data_dtor_base.1128" }
%"class.absl::optional_internal::optional_data_dtor_base.1128" = type { i8, [3 x i8], %union.anon.1129 }
%union.anon.1129 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1067"*, %"class.absl::optional.1135", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1135" = type { %"class.absl::optional_internal::optional_data.1136" }
%"class.absl::optional_internal::optional_data.1136" = type { %"class.absl::optional_internal::optional_data_base.1137" }
%"class.absl::optional_internal::optional_data_base.1137" = type { %"class.absl::optional_internal::optional_data_dtor_base.1138" }
%"class.absl::optional_internal::optional_data_dtor_base.1138" = type { i8, %union.anon.1139 }
%union.anon.1139 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1140", %"class.WTF::Vector.1145" }
%"class.WTF::Vector.1140" = type { %"class.WTF::VectorBuffer.1141" }
%"class.WTF::VectorBuffer.1141" = type { %"class.WTF::VectorBufferBase.1142", [128 x i8] }
%"class.WTF::VectorBufferBase.1142" = type { i32*, i32, i32 }
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1146" }
%"class.WTF::VectorBuffer.1146" = type { %"class.WTF::VectorBufferBase.1147", [128 x i8] }
%"class.WTF::VectorBufferBase.1147" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1150" = type { %"class.WTF::VectorBuffer.1151" }
%"class.WTF::VectorBuffer.1151" = type { %"class.WTF::VectorBufferBase.1152" }
%"class.WTF::VectorBufferBase.1152" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1155" = type { %"class.WTF::HashTable.1156" }
%"class.WTF::HashTable.1156" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1160", %"class.WTF::Vector.1165" }
%"class.WTF::HashMap.1160" = type { %"class.WTF::HashTable.1161" }
%"class.WTF::HashTable.1161" = type <{ %"struct.WTF::KeyValuePair.1164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1164" = type opaque
%"class.WTF::Vector.1165" = type { %"class.WTF::VectorBuffer.1166" }
%"class.WTF::VectorBuffer.1166" = type { %"class.WTF::VectorBufferBase.1167" }
%"class.WTF::VectorBufferBase.1167" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1179" = type { %"class.WTF::VectorBuffer.1180" }
%"class.WTF::VectorBuffer.1180" = type { %"class.WTF::VectorBufferBase.1181" }
%"class.WTF::VectorBufferBase.1181" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1184 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1191" = type { %"class.WTF::HashSet.1194" }
%"class.WTF::HashSet.1194" = type { %"class.WTF::HashTable.1195" }
%"class.WTF::HashTable.1195" = type <{ %"class.blink::WeakMember.1197"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1197" = type opaque
%"class.blink::HeapHashSet.1198" = type { %"class.WTF::HashSet.1201" }
%"class.WTF::HashSet.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"class.blink::WeakMember.1204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1204" = type opaque
%"class.std::__1::unique_ptr.1205" = type { %"class.std::__1::__compressed_pair.1206" }
%"class.std::__1::__compressed_pair.1206" = type { %"struct.std::__1::__compressed_pair_elem.1207" }
%"struct.std::__1::__compressed_pair_elem.1207" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1208" }
%"class.base::time_internal::TimeBase.1208" = type { i64 }
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1215", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1215" = type { %"class.absl::optional_internal::optional_data.1216" }
%"class.absl::optional_internal::optional_data.1216" = type { %"class.absl::optional_internal::optional_data_base.1217" }
%"class.absl::optional_internal::optional_data_base.1217" = type { %"class.absl::optional_internal::optional_data_dtor_base.1218" }
%"class.absl::optional_internal::optional_data_dtor_base.1218" = type { i8, %union.anon.1219 }
%union.anon.1219 = type { %"class.base::Time" }
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.890" = type { %"class.blink::MemberBase.891" }
%"class.blink::MemberBase.891" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.892" = type { %"class.blink::MemberBase.893" }
%"class.blink::MemberBase.893" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.894" = type { %"class.blink::MemberBase.895" }
%"class.blink::MemberBase.895" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.896 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.907" = type { %"class.blink::MemberBase.908" }
%"class.blink::MemberBase.908" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.909" = type { %"class.blink::MemberBase.910" }
%"class.blink::MemberBase.910" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.911" }
%"class.blink::Member.911" = type { %"class.blink::MemberBase.912" }
%"class.blink::MemberBase.912" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1357" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1265, %"class.std::__1::unique_ptr.672", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.686, i32 }>
%class.scoped_refptr.1265 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.686, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1323", %"class.absl::optional.1328", %"class.absl::optional.1282", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1348", i8, [7 x i8], %class.scoped_refptr.686, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.699" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.686, %"class.std::__1::unique_ptr.1266", %"class.absl::optional.1276", %"struct.std::__1::atomic.297", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1282", %"class.std::__1::unique_ptr.1287", i8, i64, %class.scoped_refptr.1320, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.1322" }
%"class.std::__1::unique_ptr.1266" = type { %"class.std::__1::__compressed_pair.1267" }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.686, i8, %"class.mojo::ScopedHandleBase.1269", %class.scoped_refptr.1270, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1271", i8*, %"class.base::WeakPtrFactory.1272" }
%"class.mojo::ScopedHandleBase.1269" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1270 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1271" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1272" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1276" = type { %"class.absl::optional_internal::optional_data.1277" }
%"class.absl::optional_internal::optional_data.1277" = type { %"class.absl::optional_internal::optional_data_base.1278" }
%"class.absl::optional_internal::optional_data_base.1278" = type { %"class.absl::optional_internal::optional_data_dtor_base.1279" }
%"class.absl::optional_internal::optional_data_dtor_base.1279" = type { i8, %union.anon.1280 }
%union.anon.1280 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1281", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1281" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1290", i8, i64, %class.scoped_refptr.1291, %class.scoped_refptr.1316 }
%"class.base::RepeatingCallback.1290" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1291 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1292", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1294", %"class.std::__1::map.1305", i8, [7 x i8] }>
%"class.base::RefCounted.1292" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1293 }
%class.scoped_refptr.1293 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1294" = type { %"class.std::__1::__tree.1295" }
%"class.std::__1::__tree.1295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1296", %"class.std::__1::__compressed_pair.1300" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.std::__1::map.1305" = type { %"class.std::__1::__tree.1306" }
%"class.std::__1::__tree.1306" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1307", %"class.std::__1::__compressed_pair.1311" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.1311" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%class.scoped_refptr.1316 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.1320 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1321 }
%class.scoped_refptr.1321 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.1322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1323" = type { %"class.absl::optional_internal::optional_data.1324" }
%"class.absl::optional_internal::optional_data.1324" = type { %"class.absl::optional_internal::optional_data_base.1325" }
%"class.absl::optional_internal::optional_data_base.1325" = type { %"class.absl::optional_internal::optional_data_dtor_base.1326" }
%"class.absl::optional_internal::optional_data_dtor_base.1326" = type { i8, %union.anon.1327 }
%union.anon.1327 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1328" = type { %"class.absl::optional_internal::optional_data.1329" }
%"class.absl::optional_internal::optional_data.1329" = type { %"class.absl::optional_internal::optional_data_base.1330" }
%"class.absl::optional_internal::optional_data_base.1330" = type { %"class.absl::optional_internal::optional_data_dtor_base.1331" }
%"class.absl::optional_internal::optional_data_dtor_base.1331" = type { i8, [7 x i8], %union.anon.1332 }
%union.anon.1332 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1282" = type { %"class.absl::optional_internal::optional_data.1283" }
%"class.absl::optional_internal::optional_data.1283" = type { %"class.absl::optional_internal::optional_data_base.1284" }
%"class.absl::optional_internal::optional_data_base.1284" = type { %"class.absl::optional_internal::optional_data_dtor_base.1285" }
%"class.absl::optional_internal::optional_data_dtor_base.1285" = type { i8, %union.anon.1286 }
%union.anon.1286 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1333 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1333 = type { %"class.std::__1::map.1336" }
%"class.std::__1::map.1336" = type { %"class.std::__1::__tree.1337" }
%"class.std::__1::__tree.1337" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1338", %"class.std::__1::__compressed_pair.1342" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.1342" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1347"*, i64 }
%"class.std::__1::unique_ptr.1347" = type opaque
%"class.std::__1::map.1348" = type { %"class.std::__1::__tree.1349" }
%"class.std::__1::__tree.1349" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1350", %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1357" = type { %"class.std::__1::__compressed_pair.1358" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.1359" }
%"struct.std::__1::__compressed_pair_elem.1359" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.919" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.829" = type { %"class.absl::optional_internal::optional_data.830" }
%"class.absl::optional_internal::optional_data.830" = type { %"class.absl::optional_internal::optional_data_base.831" }
%"class.absl::optional_internal::optional_data_base.831" = type { %"class.absl::optional_internal::optional_data_dtor_base.832" }
%"class.absl::optional_internal::optional_data_dtor_base.832" = type { i8, %union.anon.833 }
%union.anon.833 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.932" }
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1365" }
%"class.mojo::AssociatedRemote.1365" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1366" }
%"class.mojo::internal::AssociatedInterfacePtrState.1366" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1367" }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.934" = type { %"class.blink::Member.935" }
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1375" }
%"class.mojo::AssociatedRemote.1375" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1376" }
%"class.mojo::internal::AssociatedInterfacePtrState.1376" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1377" }
%"class.std::__1::unique_ptr.1377" = type { %"class.std::__1::__compressed_pair.1378" }
%"class.std::__1::__compressed_pair.1378" = type { %"struct.std::__1::__compressed_pair_elem.1379" }
%"struct.std::__1::__compressed_pair_elem.1379" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.937" }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.812", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1385" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.672" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1385" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.939" = type { %"class.blink::Member.940" }
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1388", %"class.blink::Member.812", %"class.mojo::AssociatedReceiver.1389" }
%"class.blink::ThreadState::PrefinalizerRegistration.1388" = type { i8 }
%"class.mojo::AssociatedReceiver.1389" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1390" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1390" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.942" }
%"class.blink::Member.942" = type { %"class.blink::MemberBase.943" }
%"class.blink::MemberBase.943" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1393", %"class.blink::Member.812", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1393" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1265, %"class.std::__1::unique_ptr.672", %"class.base::WeakPtrFactory.1394" }
%"class.base::WeakPtrFactory.1394" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.944" = type { %"class.blink::Member.945" }
%"class.blink::Member.945" = type { %"class.blink::MemberBase.946" }
%"class.blink::MemberBase.946" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1397", %"class.blink::Member.812", %"class.mojo::AssociatedReceiver.1398" }
%"class.blink::ThreadState::PrefinalizerRegistration.1397" = type { i8 }
%"class.mojo::AssociatedReceiver.1398" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1399" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1399" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.947" = type { %"class.blink::MemberBase.948" }
%"class.blink::MemberBase.948" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::HeapHashMap.955"* }
%"class.blink::HeapHashMap.955" = type opaque
%"class.mojo::StructPtr.956" = type { %"class.std::__1::unique_ptr.957" }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.960", %"class.mojo::InlinedStructPtr.961" }
%"class.mojo::InlinedStructPtr.960" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.961" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.965" = type { %"class.blink::MemberBase.966" }
%"class.blink::MemberBase.966" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.967" = type { %"class.absl::optional_internal::optional_data.968" }
%"class.absl::optional_internal::optional_data.968" = type { %"class.absl::optional_internal::optional_data_base.969" }
%"class.absl::optional_internal::optional_data_base.969" = type { %"class.absl::optional_internal::optional_data_dtor_base.970" }
%"class.absl::optional_internal::optional_data_dtor_base.970" = type { i8, %union.anon.971 }
%union.anon.971 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.30", %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436", [64 x i8] }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"struct.blink::JSONParseError" = type { i32, i32, i32, %"class.WTF::String" }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.1423" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::Vector.1423" = type { %"class.WTF::VectorBuffer.1424" }
%"class.WTF::VectorBuffer.1424" = type { %"class.WTF::VectorBufferBase.1425" }
%"class.WTF::VectorBufferBase.1425" = type { %"class.std::__1::unique_ptr.1417"*, i32, i32 }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap.1428", %"class.WTF::Vector.652" }
%"class.WTF::HashMap.1428" = type { %"class.WTF::HashTable.1429" }
%"class.WTF::HashTable.1429" = type <{ %"struct.WTF::KeyValuePair.1432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1432" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::HashTable.1442" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.777" = type { %"class.WTF::VectorBuffer.778" }
%"class.WTF::VectorBuffer.778" = type { %"class.WTF::VectorBufferBase.779" }
%"class.WTF::VectorBufferBase.779" = type { i64*, i32, i32 }
%"struct.std::__1::pair.1453" = type { %"class.WTF::String", %"class.blink::JSONValue"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_ = comdat any

$_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEmm = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [35 x i8] c"DocumentMetadataExtractor::Extract\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"CopylessPaste.ExtractionStatus\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"CopylessPaste.ExtractionFailedUs\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"CopylessPaste.ExtractionUs\00", align 1
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [20 x i8] c"application/ld+json\00", align 1
@.str.5 = private unnamed_addr constant [90 x i8] c"../../third_party/blink/renderer/modules/document_metadata/document_metadata_extractor.cc\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"Failed to parse json.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink12_GLOBAL__N_114kJSONLDKeyTypeE = internal constant [6 x i8] c"@type\00", align 1
@_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"AutoDealer\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"Hotel\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"LocalBusiness\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"Organization\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"Person\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"Place\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"PostalAddress\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"Product\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"Residence\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"Restaurant\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"SingleFamilyResidence\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Store\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"ContactPoint\00", align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"LodgingBusiness\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.25 = private unnamed_addr constant [6 x i8] c"Thing\00", align 1
@.str.26 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.27 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = bool]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv = private unnamed_addr constant [52 x i8] c"const char *WTF::GetStringWithTypeName() [T = long]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.29 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEPKcv = private unnamed_addr constant [99 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<schema_org::mojom::blink::Property>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<schema_org::mojom::blink::Entity>]\00", align 1
@_ZN5blink12_GLOBAL__N_115kJSONLDKeyGraphE = internal constant [7 x i8] c"@graph\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink25DocumentMetadataExtractor7ExtractERKNS_8DocumentE(%"class.mojo::StructPtr.755"* noalias nocapture sret, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %14 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 0) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  br label %18

18:                                               ; preds = %2, %12
  %19 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), %12 ]
  %20 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %12 ]
  %21 = phi i64 [ -6148914691236517206, %2 ], [ %17, %12 ]
  %22 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #10
  %23 = icmp eq %"class.blink::LocalFrame"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %18
  %25 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1) #10
  %26 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %25, i64 0, i32 0
  %27 = call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %26) #10
  br i1 %27, label %30, label %28

28:                                               ; preds = %18, %24
  %29 = bitcast %"class.mojo::StructPtr.755"* %0 to i64*
  store i64 0, i64* %29, align 8
  br label %372

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 47, i32 0, i32 0
  %32 = load %"class.blink::Element"*, %"class.blink::Element"** %31, align 8
  %33 = icmp eq %"class.blink::Element"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = bitcast %"class.mojo::StructPtr.755"* %0 to i64*
  store i64 0, i64* %35, align 8
  br label %372

36:                                               ; preds = %30
  %37 = call i8* @_Znwm(i64 136) #11, !noalias !3
  %38 = bitcast i8* %37 to %"class.blink::mojom::blink::WebPage"*
  call void @_ZN5blink5mojom5blink7WebPageC1Ev(%"class.blink::mojom::blink::WebPage"* nonnull %38) #10, !noalias !3
  %39 = ptrtoint i8* %37 to i64
  %40 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %41 = getelementptr inbounds i8, i8* %37, i64 120
  %42 = bitcast i8* %41 to %"class.WTF::Vector.759"*
  %43 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %32, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %32, i64 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %308, label %48

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1
  %50 = bitcast %"class.blink::Node"* %49 to %"class.blink::Node"**
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = bitcast %"class.blink::Node"* %51 to %"class.blink::Element"*
  %53 = icmp eq %"class.blink::Node"* %51, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %51, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %71, label %64

59:                                               ; preds = %64
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %67, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 12
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %54, %59
  %65 = phi %"class.blink::Node"* [ %67, %59 ], [ %51, %54 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 5, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %308, label %59

69:                                               ; preds = %59
  %70 = bitcast %"class.blink::Node"* %67 to %"class.blink::Element"*
  br label %71

71:                                               ; preds = %69, %54, %48
  %72 = phi %"class.blink::Element"* [ %52, %48 ], [ %52, %54 ], [ %70, %69 ]
  %73 = icmp eq %"class.blink::Element"* %72, null
  br i1 %73, label %308, label %74

74:                                               ; preds = %71
  %75 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE, align 8
  %76 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kTypeAttrE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %80 = bitcast %"class.WTF::StringView"* %3 to i8*
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %82 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %83 = bitcast i8** %82 to %"class.WTF::StringImpl"**
  %84 = bitcast %"class.WTF::StringView"* %3 to i64*
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %86 = bitcast %"class.WTF::StringView"* %4 to i8*
  %87 = bitcast %"class.WTF::StringView"* %4 to i64*
  %88 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %89 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %90 = bitcast %"class.WTF::String"* %6 to i8*
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %92 = bitcast %"class.WTF::String"* %5 to i8*
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %306, %74
  %95 = phi %"class.blink::Element"* [ %72, %74 ], [ %307, %306 ]
  %96 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 48
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %274

101:                                              ; preds = %94
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 1, i32 2
  %104 = bitcast %"class.blink::Member"* %103 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %107, %109
  br i1 %110, label %111, label %274

111:                                              ; preds = %101
  %112 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 3, i32 0, i32 0
  %113 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %112, align 8
  %114 = icmp eq %"class.blink::ElementData"* %113, null
  br i1 %114, label %164, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %113, i64 0, i32 0, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, 1
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %115
  %121 = bitcast %"class.blink::ElementData"* %113 to %"class.blink::UniqueElementData"*
  %122 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %113, i64 1, i32 1
  %123 = bitcast %"class.blink::Member.30"* %122 to %"class.blink::Attribute"**
  %124 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %121, i64 0, i32 2, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  br label %132

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %113, i64 1
  %129 = bitcast %"class.blink::ElementData"* %128 to %"class.blink::Attribute"*
  %130 = lshr i32 %117, 1
  %131 = and i32 %130, 268435455
  br label %132

132:                                              ; preds = %127, %120
  %133 = phi %"class.blink::Attribute"* [ %129, %127 ], [ %124, %120 ]
  %134 = phi i32 [ %131, %127 ], [ %126, %120 ]
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %133, i64 %135
  %137 = icmp eq i32 %134, 0
  br i1 %137, label %164, label %138

138:                                              ; preds = %132
  %139 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 3, i32 0, i32 0, i32 0
  %141 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %139, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %157, %138
  %143 = phi %"class.blink::Attribute"* [ %133, %138 ], [ %158, %157 ]
  %144 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %144, align 8
  %146 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %145, %139
  br i1 %146, label %160, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 3, i32 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %149, %150
  br i1 %151, label %152, label %157

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %145, i64 0, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %154, %155
  br i1 %156, label %160, label %157

157:                                              ; preds = %152, %147
  %158 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 1
  %159 = icmp eq %"class.blink::Attribute"* %158, %136
  br i1 %159, label %164, label %142

160:                                              ; preds = %152, %142
  %161 = icmp eq %"class.blink::Attribute"* %143, null
  %162 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %143, i64 0, i32 1
  %163 = select i1 %161, %"class.WTF::AtomicString"* %79, %"class.WTF::AtomicString"* %162
  br label %164

164:                                              ; preds = %157, %160, %132, %111
  %165 = phi %"class.WTF::AtomicString"* [ %79, %132 ], [ %79, %111 ], [ %163, %160 ], [ %79, %157 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #10
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %165, i64 0, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %164
  store i8* null, i8** %82, align 8
  %170 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %170, i64* %84, align 8
  br label %175

171:                                              ; preds = %164
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %81, align 8
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  store %"class.WTF::StringImpl"* %174, %"class.WTF::StringImpl"** %83, align 8
  br label %175

175:                                              ; preds = %171, %169
  %176 = phi i32 [ %173, %171 ], [ 0, %169 ]
  store i32 %176, i32* %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %177 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %177, i64* %87, align 8
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8** %88, align 8
  store i32 19, i32* %89, align 8
  %178 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #10
  br i1 %178, label %179, label %274

179:                                              ; preds = %175
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #10
  %180 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %96, i1 zeroext false) #10
  store %"class.WTF::StringImpl"* %180, %"class.WTF::StringImpl"** %91, align 8
  %181 = call %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* nonnull dereferenceable(8) %6, %"struct.blink::JSONParseError"* null) #10
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #10
  br label %197

197:                                              ; preds = %196, %193, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #10
  %198 = icmp eq %"class.blink::JSONValue"* %181, null
  br i1 %198, label %199, label %206

199:                                              ; preds = %197
  %200 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %200, label %201, label %319

201:                                              ; preds = %199
  %202 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %202) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str.5, i64 0, i64 0), i32 270, i32 2) #10
  %203 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %204 = bitcast %"class.std::__1::basic_ostringstream"* %203 to %"class.std::__1::basic_ostream"*
  %205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %204, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i64 21) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %202) #10
  br label %319

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %181, i64 0, i32 1
  %208 = load i32, i32* %207, align 8
  switch i32 %208, label %314 [
    i32 6, label %209
    i32 5, label %227
  ]

209:                                              ; preds = %206
  %210 = bitcast %"class.blink::JSONValue"* %181 to %"class.blink::JSONArray"*
  %211 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %181, i64 1, i32 2
  %212 = bitcast [4 x i8]* %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %269, label %215

215:                                              ; preds = %209, %223
  %216 = phi i32 [ %224, %223 ], [ 0, %209 ]
  %217 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %210, i32 %216) #10
  %218 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %217, i64 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = icmp eq i32 %219, 5
  br i1 %220, label %221, label %223

221:                                              ; preds = %215
  %222 = bitcast %"class.blink::JSONValue"* %217 to %"class.blink::JSONObject"*
  call fastcc void @_ZN5blink12_GLOBAL__N_121ExtractTopLevelEntityERKNS_10JSONObjectERN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::JSONObject"* dereferenceable(56) %222, %"class.WTF::Vector.759"* dereferenceable(16) %42) #10
  br label %223

223:                                              ; preds = %221, %215
  %224 = add nuw i32 %216, 1
  %225 = load i32, i32* %212, align 4
  %226 = icmp ult i32 %224, %225
  br i1 %226, label %215, label %264

227:                                              ; preds = %206
  %228 = bitcast %"class.blink::JSONValue"* %181 to %"class.blink::JSONObject"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @_ZN5blink12_GLOBAL__N_115kJSONLDKeyGraphE, i64 0, i64 0), i64 6) #10
  %229 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %228, %"class.WTF::String"* nonnull dereferenceable(8) %5) #10
  %230 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %231 = icmp eq %"class.WTF::StringImpl"* %230, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %230, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %230) #10
  br label %245

245:                                              ; preds = %244, %241, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #10
  %246 = icmp eq %"class.blink::JSONArray"* %229, null
  br i1 %246, label %263, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %229, i64 0, i32 1, i32 0, i32 0, i32 2
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %263, label %251

251:                                              ; preds = %247, %259
  %252 = phi i32 [ %260, %259 ], [ 0, %247 ]
  %253 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %229, i32 %252) #10
  %254 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %253, i64 0, i32 1
  %255 = load i32, i32* %254, align 8
  %256 = icmp eq i32 %255, 5
  br i1 %256, label %257, label %259

257:                                              ; preds = %251
  %258 = bitcast %"class.blink::JSONValue"* %253 to %"class.blink::JSONObject"*
  call fastcc void @_ZN5blink12_GLOBAL__N_121ExtractTopLevelEntityERKNS_10JSONObjectERN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::JSONObject"* dereferenceable(56) %258, %"class.WTF::Vector.759"* dereferenceable(16) %42) #10
  br label %259

259:                                              ; preds = %257, %251
  %260 = add nuw i32 %252, 1
  %261 = load i32, i32* %248, align 4
  %262 = icmp ult i32 %260, %261
  br i1 %262, label %251, label %263

263:                                              ; preds = %259, %247, %245
  call fastcc void @_ZN5blink12_GLOBAL__N_121ExtractTopLevelEntityERKNS_10JSONObjectERN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::JSONObject"* nonnull dereferenceable(56) %228, %"class.WTF::Vector.759"* dereferenceable(16) %42) #10
  br label %264

264:                                              ; preds = %223, %263
  %265 = bitcast %"class.blink::JSONValue"* %181 to void (%"class.blink::JSONValue"*)***
  %266 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %266, i64 1
  %268 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %267, align 8
  call void %268(%"class.blink::JSONValue"* nonnull %181) #10
  br label %274

269:                                              ; preds = %209
  %270 = bitcast %"class.blink::JSONValue"* %181 to void (%"class.blink::JSONValue"*)***
  %271 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %270, align 8
  %272 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %271, i64 1
  %273 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %272, align 8
  call void %273(%"class.blink::JSONValue"* nonnull %181) #10
  br label %274

274:                                              ; preds = %269, %264, %175, %101, %94
  %275 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 0, i32 1, i32 0, i32 0
  %276 = load %"class.blink::Node"*, %"class.blink::Node"** %275, align 8
  %277 = icmp eq %"class.blink::Node"* %276, null
  br i1 %277, label %278, label %287

278:                                              ; preds = %274
  %279 = icmp eq %"class.blink::Element"* %95, %32
  br i1 %279, label %308, label %280

280:                                              ; preds = %278
  %281 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %95, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %282 = load %"class.blink::Node"*, %"class.blink::Node"** %281, align 8
  %283 = icmp eq %"class.blink::Node"* %282, null
  br i1 %283, label %284, label %287

284:                                              ; preds = %280
  %285 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %96, %"class.blink::Node"* %43) #10
  %286 = icmp eq %"class.blink::Node"* %285, null
  br i1 %286, label %308, label %287

287:                                              ; preds = %284, %280, %274
  %288 = phi %"class.blink::Node"* [ %276, %274 ], [ %282, %280 ], [ %285, %284 ]
  br label %289

289:                                              ; preds = %287, %303
  %290 = phi %"class.blink::Node"* [ %304, %303 ], [ %288, %287 ]
  %291 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %290, i64 0, i32 1
  %292 = load i32, i32* %291, align 8
  %293 = and i32 %292, 12
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %289
  %296 = icmp eq %"class.blink::Node"* %290, %43
  br i1 %296, label %308, label %297

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %290, i64 0, i32 5, i32 0, i32 0
  %299 = load %"class.blink::Node"*, %"class.blink::Node"** %298, align 8
  %300 = icmp eq %"class.blink::Node"* %299, null
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  %302 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %290, %"class.blink::Node"* %43) #10
  br label %303

303:                                              ; preds = %301, %297
  %304 = phi %"class.blink::Node"* [ %302, %301 ], [ %299, %297 ]
  %305 = icmp eq %"class.blink::Node"* %304, null
  br i1 %305, label %308, label %289

306:                                              ; preds = %289
  %307 = bitcast %"class.blink::Node"* %290 to %"class.blink::Element"*
  br label %94

308:                                              ; preds = %64, %284, %278, %303, %295, %71, %36
  %309 = getelementptr inbounds i8, i8* %37, i64 132
  %310 = bitcast i8* %309 to i32*
  %311 = load i32, i32* %310, align 4
  %312 = icmp eq i32 %311, 0
  %313 = zext i1 %312 to i32
  br label %319

314:                                              ; preds = %206
  %315 = bitcast %"class.blink::JSONValue"* %181 to void (%"class.blink::JSONValue"*)***
  %316 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %315, align 8
  %317 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %316, i64 1
  %318 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %317, align 8
  call void %318(%"class.blink::JSONValue"* nonnull %181) #10
  br label %319

319:                                              ; preds = %199, %201, %308, %314
  %320 = phi i32 [ %313, %308 ], [ 2, %199 ], [ 2, %201 ], [ 3, %314 ]
  %321 = call i64 @_ZN4base9TimeTicks3NowEv() #10
  %322 = sub nsw i64 %321, %40
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i32 %320, i32 4) #10
  %323 = icmp eq i32 %320, 0
  br i1 %323, label %324, label %370

324:                                              ; preds = %319
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 %322, i64 1, i64 1000000, i32 50) #10
  %325 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 19
  %326 = bitcast i8* %37 to %"class.blink::KURL"*
  %327 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %326, %"class.blink::KURL"* dereferenceable(112) %325) #10
  %328 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 76, i32 0, i32 0
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %348, label %331

331:                                              ; preds = %324
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %348

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i33
  %340 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %339, i33 1) #10
  %341 = extractvalue { i33, i1 } %340, 1
  %342 = extractvalue { i33, i1 } %340, 0
  %343 = icmp slt i33 %342, 0
  %344 = or i1 %341, %343
  br i1 %344, label %345, label %346, !prof !6

345:                                              ; preds = %336
  call void @llvm.trap() #10
  unreachable

346:                                              ; preds = %336
  %347 = trunc i33 %342 to i32
  store i32 %347, i32* %337, align 4
  br label %348

348:                                              ; preds = %324, %331, %346
  %349 = ptrtoint %"class.WTF::StringImpl"* %329 to i64
  %350 = getelementptr inbounds i8, i8* %37, i64 112
  %351 = bitcast i8* %350 to i64*
  %352 = bitcast i8* %350 to %"class.WTF::StringImpl"**
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  store i64 %349, i64* %351, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %348
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #10
  br label %368

368:                                              ; preds = %348, %364, %367
  %369 = bitcast %"class.mojo::StructPtr.755"* %0 to i64*
  store i64 %39, i64* %369, align 8
  br label %372

370:                                              ; preds = %319
  call void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 %322, i64 1, i64 1000000, i32 50) #10
  %371 = bitcast %"class.mojo::StructPtr.755"* %0 to i64*
  store i64 0, i64* %371, align 8
  call void @_ZN5blink5mojom5blink7WebPageD1Ev(%"class.blink::mojom::blink::WebPage"* nonnull %38) #10
  call void @_ZdlPv(i8* nonnull %37) #11
  br label %372

372:                                              ; preds = %370, %368, %34, %28
  %373 = icmp eq i8* %20, null
  br i1 %373, label %378, label %374

374:                                              ; preds = %372
  %375 = load i8, i8* %20, align 1
  %376 = icmp eq i8 %375, 0
  br i1 %376, label %378, label %377

377:                                              ; preds = %374
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %20, i8* %19, i64 %21) #10
  br label %378

378:                                              ; preds = %372, %374, %377
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN4base35UmaHistogramCustomMicrosecondsTimesEPKcNS_9TimeDeltaES2_S2_i(i8*, i64, i64, i64, i32) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8), %"struct.blink::JSONParseError"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_121ExtractTopLevelEntityERKNS_10JSONObjectERN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::JSONObject"* dereferenceable(56), %"class.WTF::Vector.759"* dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca [14 x %"class.WTF::AtomicString"], align 8
  %4 = alloca %"class.mojo::StructPtr.762", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.mojo::StructPtr.762"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 24) #11, !noalias !8
  %10 = bitcast i8* %9 to %"class.schema_org::mojom::blink::Entity"*
  tail call void @_ZN10schema_org5mojom5blink6EntityC1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %10) #10, !noalias !8
  %11 = ptrtoint i8* %9 to i64
  %12 = bitcast %"class.mojo::StructPtr.762"* %4 to i64*
  store i64 %11, i64* %12, align 8, !alias.scope !8
  %13 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %14, align 8
  %15 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_114kJSONLDKeyTypeE, i64 0, i64 0), i64 5) #10
  %16 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull %5) #10
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #10
  br label %33

33:                                               ; preds = %2, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = and i32 %38, 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %57, label %41

41:                                               ; preds = %36
  %42 = load atomic i32, i32* %37 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #10
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !6

54:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %59

57:                                               ; preds = %36
  %58 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %34) #10
  br label %59

59:                                               ; preds = %33, %41, %55, %57
  %60 = phi %"class.WTF::StringImpl"* [ %58, %57 ], [ %34, %41 ], [ %34, %55 ], [ null, %33 ]
  %61 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to i8*) acquire, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %119, !prof !11

63:                                               ; preds = %59
  %64 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements) #10
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %119, label %66

66:                                               ; preds = %63
  %67 = bitcast [14 x %"class.WTF::AtomicString"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %67) #10
  %68 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 0
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %68, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i64 10) #10
  %69 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 1
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %69, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5) #10
  %70 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 2
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %70, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i64 13) #10
  %71 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 3
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %71, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i64 12) #10
  %72 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 4
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %72, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #10
  %73 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 5
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %73, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #10
  %74 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 6
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %74, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i64 13) #10
  %75 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 7
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %75, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 7) #10
  %76 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %76, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i64 9) #10
  %77 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 9
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %77, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10) #10
  %78 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %78, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i64 21) #10
  %79 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 11
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %79, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i64 5) #10
  %80 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i64 12) #10
  %81 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %81, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i64 15) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #10
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), i32 14) #10
  %82 = getelementptr inbounds [14 x %"class.WTF::AtomicString"], [14 x %"class.WTF::AtomicString"]* %3, i64 0, i64 14
  %83 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* nonnull dereferenceable(8) %68, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %68) #10
  %84 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %69, %"class.WTF::AtomicString"* dereferenceable(8) %69) #10
  %85 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %70, %"class.WTF::AtomicString"* dereferenceable(8) %70) #10
  %86 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %71, %"class.WTF::AtomicString"* dereferenceable(8) %71) #10
  %87 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %72, %"class.WTF::AtomicString"* dereferenceable(8) %72) #10
  %88 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %73, %"class.WTF::AtomicString"* dereferenceable(8) %73) #10
  %89 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %74, %"class.WTF::AtomicString"* dereferenceable(8) %74) #10
  %90 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %75, %"class.WTF::AtomicString"* dereferenceable(8) %75) #10
  %91 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %76, %"class.WTF::AtomicString"* dereferenceable(8) %76) #10
  %92 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %77, %"class.WTF::AtomicString"* dereferenceable(8) %77) #10
  %93 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %78, %"class.WTF::AtomicString"* dereferenceable(8) %78) #10
  %94 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %79, %"class.WTF::AtomicString"* dereferenceable(8) %79) #10
  %95 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %80, %"class.WTF::AtomicString"* dereferenceable(8) %80) #10
  %96 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.1442"*), %"class.WTF::AtomicString"* dereferenceable(8) %81, %"class.WTF::AtomicString"* dereferenceable(8) %81) #10
  br label %97

97:                                               ; preds = %116, %66
  %98 = phi %"class.WTF::AtomicString"* [ %82, %66 ], [ %99, %116 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 -1
  %100 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #10
  br label %116

116:                                              ; preds = %115, %112, %97
  %117 = icmp eq %"class.WTF::AtomicString"* %99, %68
  br i1 %117, label %118, label %97

118:                                              ; preds = %116
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %67) #10
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements) #10
  br label %119

119:                                              ; preds = %118, %63, %59
  %120 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %120, label %206, label %121

121:                                              ; preds = %119
  %122 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements to %"class.WTF::AtomicString"**), align 8
  %123 = icmp eq %"class.WTF::AtomicString"* %122, null
  br i1 %123, label %173, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_115IsSupportedTypeEN3WTF12AtomicStringEE10s_elements, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %126 = add i32 %125, -1
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = lshr i32 %129, 8
  %131 = and i32 %130, %126
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 %132
  %134 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %133, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %173, label %137

137:                                              ; preds = %124
  %138 = xor i32 %130, -1
  %139 = lshr i32 %129, 31
  %140 = add nsw i32 %139, %138
  %141 = shl i32 %140, 12
  %142 = xor i32 %141, %140
  %143 = lshr i32 %142, 7
  %144 = xor i32 %143, %142
  %145 = shl i32 %144, 2
  %146 = xor i32 %145, %144
  %147 = lshr i32 %146, 20
  %148 = xor i32 %147, %146
  %149 = or i32 %148, 1
  %150 = zext i32 %149 to i64
  br label %151

151:                                              ; preds = %161, %137
  %152 = phi %"class.WTF::StringImpl"* [ %135, %137 ], [ %168, %161 ]
  %153 = phi %"class.WTF::AtomicString"* [ %133, %137 ], [ %166, %161 ]
  %154 = phi i64 [ %132, %137 ], [ %165, %161 ]
  %155 = phi i64 [ 0, %137 ], [ %163, %161 ]
  %156 = bitcast %"class.WTF::AtomicString"* %153 to i8**
  %157 = load i8*, i8** %156, align 8
  %158 = icmp ne i8* %157, inttoptr (i64 -1 to i8*)
  %159 = icmp eq %"class.WTF::StringImpl"* %152, %60
  %160 = and i1 %159, %158
  br i1 %160, label %170, label %161

161:                                              ; preds = %151
  %162 = icmp eq i64 %155, 0
  %163 = select i1 %162, i64 %150, i64 %155
  %164 = add i64 %163, %154
  %165 = and i64 %164, %127
  %166 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %122, i64 %165
  %167 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %166, i64 0, i32 0, i32 0, i32 0
  %168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %170, label %151

170:                                              ; preds = %161, %151
  %171 = phi %"class.WTF::AtomicString"* [ %153, %151 ], [ null, %161 ]
  %172 = icmp ne %"class.WTF::AtomicString"* %171, null
  br label %173

173:                                              ; preds = %170, %124, %121
  %174 = phi i1 [ %172, %170 ], [ false, %124 ], [ false, %121 ]
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %173
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %173
  %184 = phi i32 [ %182, %181 ], [ %180, %173 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br i1 %174, label %188, label %206

187:                                              ; preds = %183
  br i1 %174, label %188, label %206

188:                                              ; preds = %186, %187
  %189 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %8, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113ExtractEntityERKNS_10JSONObjectERN10schema_org5mojom5blink6EntityEi(%"class.blink::JSONObject"* dereferenceable(56) %0, %"class.schema_org::mojom::blink::Entity"* dereferenceable(24) %189, i32 0)
  %190 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %1, i64 0, i32 0, i32 0, i32 2
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %1, i64 0, i32 0, i32 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %191, %193
  br i1 %194, label %205, label %195, !prof !6

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %1, i64 0, i32 0, i32 0, i32 0
  %197 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %196, align 8
  %198 = zext i32 %191 to i64
  %199 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %197, i64 %198
  %200 = bitcast %"class.mojo::StructPtr.762"* %199 to i64*
  %201 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %199, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %201, align 8
  %202 = load i64, i64* %12, align 8
  store i64 %202, i64* %200, align 8
  store i64 0, i64* %12, align 8
  %203 = load i32, i32* %190, align 4
  %204 = add i32 %203, 1
  store i32 %204, i32* %190, align 4
  br label %206

205:                                              ; preds = %188
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.759"* %1, %"class.mojo::StructPtr.762"* nonnull dereferenceable(8) %4) #10
  br label %206

206:                                              ; preds = %119, %205, %195, %186, %187
  %207 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %208 = icmp eq %"class.WTF::StringImpl"* %207, null
  br i1 %208, label %222, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %207, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %207) #10
  br label %222

222:                                              ; preds = %206, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %223 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %8, align 8
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %8, align 8
  %224 = icmp eq %"class.schema_org::mojom::blink::Entity"* %223, null
  br i1 %224, label %227, label %225

225:                                              ; preds = %222
  call void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %223) #10
  %226 = bitcast %"class.schema_org::mojom::blink::Entity"* %223 to i8*
  call void @_ZdlPv(i8* %226) #11
  br label %227

227:                                              ; preds = %222, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

declare zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_113ExtractEntityERKNS_10JSONObjectERN10schema_org5mojom5blink6EntityEi(%"class.blink::JSONObject"* dereferenceable(56), %"class.schema_org::mojom::blink::Entity"* dereferenceable(24), i32) unnamed_addr #0 {
  %4 = alloca %"class.WTF::Vector.472", align 8
  %5 = alloca %"class.WTF::Vector.777", align 8
  %6 = alloca %"class.WTF::Vector.652", align 8
  %7 = alloca %"class.WTF::Vector.652", align 8
  %8 = alloca %"class.WTF::Vector.759", align 8
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca double, align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.mojo::StructPtr.762", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.mojo::StructPtr.769", align 8
  %21 = alloca %"struct.std::__1::pair.1453", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.WTF::Vector.472", align 8
  %24 = alloca i32, align 4
  %25 = alloca %"class.WTF::Vector.777", align 8
  %26 = alloca double, align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::Vector.652", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::Vector.652", align 8
  %31 = alloca %"class.WTF::Vector.759", align 8
  %32 = alloca %"class.mojo::StructPtr.762", align 8
  %33 = icmp sgt i32 %2, 3
  br i1 %33, label %1066, label %34

34:                                               ; preds = %3
  %35 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %37 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_114kJSONLDKeyTypeE, i64 0, i64 0), i64 5) #10
  %38 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull %17) #10
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %34, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #10
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.schema_org::mojom::blink::Entity", %"class.schema_org::mojom::blink::Entity"* %1, i64 0, i32 0
  br label %105

60:                                               ; preds = %55
  %61 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.25, i64 0, i64 0), i64 5) #10
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::String"* %19 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %62, align 8
  %65 = bitcast %"class.WTF::String"* %17 to i64*
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  store i64 %64, i64* %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %60
  %69 = inttoptr i64 %64 to %"class.WTF::StringImpl"*
  br label %101

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #10
  br label %83

83:                                               ; preds = %79, %82
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %83, %95, %98
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  br label %101

101:                                              ; preds = %99, %68
  %102 = phi %"class.WTF::StringImpl"* [ %100, %99 ], [ %69, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #10
  %103 = getelementptr inbounds %"class.schema_org::mojom::blink::Entity", %"class.schema_org::mojom::blink::Entity"* %1, i64 0, i32 0
  %104 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %104, label %124, label %105

105:                                              ; preds = %58, %101
  %106 = phi %"class.WTF::String"* [ %59, %58 ], [ %103, %101 ]
  %107 = phi %"class.WTF::StringImpl"* [ %56, %58 ], [ %102, %101 ]
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #10
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !6

121:                                              ; preds = %112
  call void @llvm.trap() #10
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %122, %105, %101
  %125 = phi %"class.WTF::String"* [ %106, %122 ], [ %106, %105 ], [ %103, %101 ]
  %126 = phi %"class.WTF::StringImpl"* [ %107, %122 ], [ %107, %105 ], [ null, %101 ]
  %127 = ptrtoint %"class.WTF::StringImpl"* %126 to i64
  %128 = bitcast %"class.WTF::String"* %125 to i64*
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %125, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  store i64 %127, i64* %128, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #10
  br label %145

145:                                              ; preds = %124, %141, %144
  %146 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %0, i64 0, i32 2, i32 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %231, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.mojo::StructPtr.769"* %20 to i8*
  %151 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  %152 = bitcast %"class.mojo::StructPtr.769"* %20 to i64*
  %153 = bitcast %"struct.std::__1::pair.1453"* %21 to i8*
  %154 = getelementptr inbounds %"struct.std::__1::pair.1453", %"struct.std::__1::pair.1453"* %21, i64 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::__1::pair.1453", %"struct.std::__1::pair.1453"* %21, i64 0, i32 1
  %156 = getelementptr inbounds %"struct.std::__1::pair.1453", %"struct.std::__1::pair.1453"* %21, i64 0, i32 0
  %157 = bitcast %"class.WTF::StringView"* %15 to i8*
  %158 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  %161 = bitcast %"class.WTF::StringView"* %15 to i64*
  %162 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %163 = bitcast %"class.WTF::StringView"* %16 to i8*
  %164 = bitcast %"class.WTF::StringView"* %16 to i64*
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  %167 = bitcast %"class.WTF::Vector.472"* %4 to i8*
  %168 = bitcast %"class.WTF::Vector.777"* %5 to i8*
  %169 = bitcast %"class.WTF::Vector.652"* %6 to i8*
  %170 = bitcast %"class.WTF::Vector.652"* %7 to i8*
  %171 = bitcast %"class.WTF::Vector.759"* %8 to i8*
  %172 = icmp sgt i32 %2, 2
  %173 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %8, i64 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %8, i64 0, i32 0, i32 0, i32 2
  %175 = bitcast %"class.WTF::Vector.759"* %8 to i8**
  %176 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %7, i64 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %7, i64 0, i32 0, i32 0, i32 2
  %178 = bitcast %"class.WTF::Vector.652"* %7 to i8**
  %179 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %6, i64 0, i32 0, i32 0, i32 0
  %180 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %6, i64 0, i32 0, i32 0, i32 2
  %181 = bitcast %"class.WTF::Vector.652"* %6 to i8**
  %182 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %5, i64 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %5, i64 0, i32 0, i32 0, i32 2
  %184 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %4, i64 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %4, i64 0, i32 0, i32 0, i32 2
  %186 = bitcast %"class.mojo::StructPtr.762"* %14 to i8*
  %187 = bitcast %"class.mojo::StructPtr.762"* %14 to i64*
  %188 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = add nsw i32 %2, 1
  %190 = bitcast %"class.WTF::String"* %13 to i8*
  %191 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %192 = bitcast double* %11 to i8*
  %193 = bitcast %"class.WTF::String"* %12 to i8*
  %194 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %195 = bitcast i32* %10 to i8*
  %196 = bitcast %"class.WTF::Vector.759"* %31 to i8*
  %197 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %31, i64 0, i32 0, i32 0, i32 0
  %198 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %31, i64 0, i32 0, i32 0, i32 2
  %199 = bitcast %"class.WTF::Vector.759"* %31 to i8**
  %200 = bitcast %"class.mojo::StructPtr.762"* %32 to i8*
  %201 = bitcast %"class.mojo::StructPtr.762"* %32 to i64*
  %202 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = bitcast %"class.WTF::String"* %29 to i8*
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %30, i64 0, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %30, i64 0, i32 0, i32 0, i32 1
  %207 = bitcast %"class.WTF::Vector.652"* %30 to i64*
  %208 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %30, i64 0, i32 0, i32 0, i32 2
  %209 = bitcast %"class.WTF::Vector.652"* %30 to i8**
  %210 = bitcast double* %26 to i8*
  %211 = bitcast %"class.WTF::String"* %27 to i8*
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %213 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %28, i64 0, i32 0, i32 0, i32 0
  %214 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %28, i64 0, i32 0, i32 0, i32 1
  %215 = bitcast %"class.WTF::Vector.652"* %28 to i64*
  %216 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %28, i64 0, i32 0, i32 0, i32 2
  %217 = bitcast %"class.WTF::Vector.652"* %28 to i8**
  %218 = bitcast i32* %24 to i8*
  %219 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %25, i64 0, i32 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %25, i64 0, i32 0, i32 0, i32 1
  %221 = bitcast %"class.WTF::Vector.777"* %25 to i64*
  %222 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %25, i64 0, i32 0, i32 0, i32 2
  %223 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %23, i64 0, i32 0, i32 0, i32 0
  %224 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %23, i64 0, i32 0, i32 0, i32 1
  %225 = bitcast %"class.WTF::Vector.472"* %23 to i64*
  %226 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %23, i64 0, i32 0, i32 0, i32 2
  %227 = getelementptr inbounds %"class.schema_org::mojom::blink::Entity", %"class.schema_org::mojom::blink::Entity"* %1, i64 0, i32 1
  %228 = getelementptr inbounds %"class.schema_org::mojom::blink::Entity", %"class.schema_org::mojom::blink::Entity"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %229 = getelementptr inbounds %"class.schema_org::mojom::blink::Entity", %"class.schema_org::mojom::blink::Entity"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %230 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %227, i64 0, i32 0, i32 0, i32 0
  br label %248

231:                                              ; preds = %1060, %145
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %233 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %233, label %247, label %234

234:                                              ; preds = %231
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = load atomic i32, i32* %235 monotonic, align 4
  %237 = and i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  br i1 %238, label %241, label %243

241:                                              ; preds = %234
  %242 = add i32 %240, -1
  store i32 %242, i32* %239, align 4
  br label %243

243:                                              ; preds = %241, %234
  %244 = phi i32 [ %242, %241 ], [ %240, %234 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %243
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %232) #10
  br label %247

247:                                              ; preds = %231, %243, %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  br label %1066

248:                                              ; preds = %149, %1060
  %249 = phi i32 [ 0, %149 ], [ %1061, %1060 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #10
  %250 = call i8* @_Znwm(i64 16) #11, !noalias !12
  %251 = bitcast i8* %250 to %"class.schema_org::mojom::blink::Property"*
  call void @_ZN10schema_org5mojom5blink8PropertyC1Ev(%"class.schema_org::mojom::blink::Property"* nonnull %251) #10, !noalias !12
  %252 = ptrtoint i8* %250 to i64
  store i64 %252, i64* %152, align 8, !alias.scope !12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #10
  %253 = call { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"* %0, i32 %249) #10
  %254 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %253, 0
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %154, align 8
  %255 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %253, 1
  store %"class.blink::JSONValue"* %255, %"class.blink::JSONValue"** %155, align 8
  %256 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %257 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %257, label %275, label %258

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %275

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = zext i32 %265 to i33
  %267 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %266, i33 1) #10
  %268 = extractvalue { i33, i1 } %267, 1
  %269 = extractvalue { i33, i1 } %267, 0
  %270 = icmp slt i33 %269, 0
  %271 = or i1 %268, %270
  br i1 %271, label %272, label %273, !prof !6

272:                                              ; preds = %263
  call void @llvm.trap() #10
  unreachable

273:                                              ; preds = %263
  %274 = trunc i33 %269 to i32
  store i32 %274, i32* %264, align 4
  br label %275

275:                                              ; preds = %273, %258, %248
  %276 = ptrtoint %"class.WTF::StringImpl"* %254 to i64
  %277 = bitcast %"class.schema_org::mojom::blink::Property"* %256 to i64*
  %278 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %256, i64 0, i32 0, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  store i64 %276, i64* %277, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #10
  br label %294

294:                                              ; preds = %275, %290, %293
  %295 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #10
  %296 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %295, i64 0, i32 0, i32 0, i32 0
  %297 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %296, align 8
  %298 = icmp eq %"class.WTF::StringImpl"* %297, null
  br i1 %298, label %299, label %301

299:                                              ; preds = %294
  store i8* null, i8** %159, align 8
  %300 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %300, i64* %161, align 8
  br label %306

301:                                              ; preds = %294
  store %"class.WTF::StringImpl"* %297, %"class.WTF::StringImpl"** %158, align 8
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %297, i64 1
  store %"class.WTF::StringImpl"* %304, %"class.WTF::StringImpl"** %160, align 8
  %305 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %306

306:                                              ; preds = %301, %299
  %307 = phi i64 [ %305, %301 ], [ %300, %299 ]
  %308 = phi i32 [ %303, %301 ], [ 0, %299 ]
  store i32 %308, i32* %162, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #10
  store i64 %307, i64* %164, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @_ZN5blink12_GLOBAL__N_114kJSONLDKeyTypeE, i64 0, i64 0), i8** %165, align 8
  store i32 5, i32* %166, align 8
  %309 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #10
  br i1 %309, label %1039, label %310

310:                                              ; preds = %306
  %311 = call i8* @_Znwm(i64 16) #11, !noalias !15
  %312 = bitcast i8* %311 to %"class.schema_org::mojom::blink::Values"*
  call void @_ZN10schema_org5mojom5blink6ValuesC1Ev(%"class.schema_org::mojom::blink::Values"* nonnull %312) #10, !noalias !15
  %313 = ptrtoint i8* %311 to i64
  %314 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %315 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %314, i64 0, i32 1
  %316 = getelementptr inbounds %"class.mojo::StructPtr.773", %"class.mojo::StructPtr.773"* %315, i64 0, i32 0, i32 0, i32 0, i32 0
  %317 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %316, align 8
  store %"class.schema_org::mojom::blink::Values"* null, %"class.schema_org::mojom::blink::Values"** %316, align 8
  %318 = icmp eq %"class.schema_org::mojom::blink::Values"* %317, null
  br i1 %318, label %319, label %321

319:                                              ; preds = %310
  %320 = bitcast %"class.mojo::StructPtr.773"* %315 to i64*
  store i64 %313, i64* %320, align 8
  br label %328

321:                                              ; preds = %310
  call void @_ZN10schema_org5mojom5blink6ValuesD1Ev(%"class.schema_org::mojom::blink::Values"* nonnull %317) #10
  %322 = bitcast %"class.schema_org::mojom::blink::Values"* %317 to i8*
  call void @_ZdlPv(i8* %322) #11
  %323 = bitcast %"class.mojo::StructPtr.773"* %315 to i64*
  %324 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %316, align 8
  store i64 %313, i64* %323, align 8
  %325 = icmp eq %"class.schema_org::mojom::blink::Values"* %324, null
  br i1 %325, label %328, label %326

326:                                              ; preds = %321
  call void @_ZN10schema_org5mojom5blink6ValuesD1Ev(%"class.schema_org::mojom::blink::Values"* nonnull %324) #10
  %327 = bitcast %"class.schema_org::mojom::blink::Values"* %324 to i8*
  call void @_ZdlPv(i8* %327) #11
  br label %328

328:                                              ; preds = %319, %321, %326
  %329 = load %"class.blink::JSONValue"*, %"class.blink::JSONValue"** %155, align 8
  %330 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %329, i64 0, i32 1
  %331 = load i32, i32* %330, align 8
  switch i32 %331, label %1024 [
    i32 1, label %332
    i32 2, label %353
    i32 3, label %378
    i32 4, label %494
    i32 5, label %608
    i32 6, label %677
  ]

332:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #10
  store i8 -86, i8* %22, align 1
  %333 = call zeroext i1 @_ZNK5blink10JSONObject10GetBooleanERKN3WTF6StringEPb(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156, i8* nonnull %22) #10
  %334 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %335 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %334, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %336 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %335, align 8
  %337 = load i8, i8* %22, align 1, !range !7
  store i8* null, i8** %223, align 8
  store i32 0, i32* %224, align 8
  %338 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 1) #10
  %339 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %338, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #10
  %340 = ptrtoint i8* %339 to i64
  store atomic i64 %340, i64* %225 monotonic, align 8
  %341 = trunc i64 %338 to i32
  store i32 %341, i32* %224, align 8
  store i32 1, i32* %226, align 4
  %342 = icmp eq i8* %339, null
  br i1 %342, label %344, label %343, !prof !6

343:                                              ; preds = %332
  store i8 %337, i8* %339, align 1
  br label %344

344:                                              ; preds = %332, %343
  call void @_ZN10schema_org5mojom5blink6Values15set_bool_valuesEN3WTF6VectorIbLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %336, %"class.WTF::Vector.472"* nonnull %23) #10
  %345 = load i8*, i8** %223, align 8
  %346 = icmp eq i8* %345, null
  br i1 %346, label %352, label %347, !prof !2

347:                                              ; preds = %344
  %348 = load i32, i32* %226, align 4
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %351, label %350, !prof !6

350:                                              ; preds = %347
  store i32 0, i32* %226, align 4
  br label %351

351:                                              ; preds = %350, %347
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %345) #10
  store i8* null, i8** %223, align 8
  br label %352

352:                                              ; preds = %344, %351
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #10
  br label %1024

353:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %218) #10
  store i32 -1431655766, i32* %24, align 4
  %354 = call zeroext i1 @_ZNK5blink10JSONObject10GetIntegerERKN3WTF6StringEPi(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156, i32* nonnull %24) #10
  %355 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %356 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %355, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %357 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %356, align 8
  %358 = load i32, i32* %24, align 4
  store i64* null, i64** %219, align 8
  store i32 0, i32* %220, align 8
  %359 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #10
  %360 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %359, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv, i64 0, i64 0)) #10
  %361 = ptrtoint i8* %360 to i64
  store atomic i64 %361, i64* %221 monotonic, align 8
  %362 = lshr i64 %359, 3
  %363 = trunc i64 %362 to i32
  store i32 %363, i32* %220, align 8
  %364 = icmp eq i8* %360, null
  store i32 1, i32* %222, align 4
  br i1 %364, label %368, label %365, !prof !6

365:                                              ; preds = %353
  %366 = sext i32 %358 to i64
  %367 = bitcast i8* %360 to i64*
  store i64 %366, i64* %367, align 8
  br label %368

368:                                              ; preds = %353, %365
  call void @_ZN10schema_org5mojom5blink6Values15set_long_valuesEN3WTF6VectorIlLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %357, %"class.WTF::Vector.777"* nonnull %25) #10
  %369 = load i64*, i64** %219, align 8
  %370 = icmp eq i64* %369, null
  %371 = bitcast i64* %369 to i8*
  br i1 %370, label %377, label %372, !prof !2

372:                                              ; preds = %368
  %373 = load i32, i32* %222, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !6

375:                                              ; preds = %372
  store i32 0, i32* %222, align 4
  br label %376

376:                                              ; preds = %375, %372
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %371) #10
  store i64* null, i64** %219, align 8
  br label %377

377:                                              ; preds = %368, %376
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %218) #10
  br label %1024

378:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210) #10
  store double 0xFFFFFFFFFFFFFFFF, double* %26, align 8
  %379 = call zeroext i1 @_ZNK5blink10JSONObject9GetDoubleERKN3WTF6StringEPd(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156, double* nonnull %26) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %212, align 8
  %380 = load double, double* %26, align 8
  %381 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %380, i32 6) #10
  store %"class.WTF::StringImpl"* %381, %"class.WTF::StringImpl"** %212, align 8
  call void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nonnull %27, i32 200) #10
  %382 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %383 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %382, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %384 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %383, align 8
  %385 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %386 = icmp eq %"class.WTF::StringImpl"* %385, null
  br i1 %386, label %404, label %387

387:                                              ; preds = %378
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %404

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %394 = load i32, i32* %393, align 4
  %395 = zext i32 %394 to i33
  %396 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %395, i33 1) #10
  %397 = extractvalue { i33, i1 } %396, 1
  %398 = extractvalue { i33, i1 } %396, 0
  %399 = icmp slt i33 %398, 0
  %400 = or i1 %397, %399
  br i1 %400, label %401, label %402, !prof !6

401:                                              ; preds = %392
  call void @llvm.trap() #10
  unreachable

402:                                              ; preds = %392
  %403 = trunc i33 %398 to i32
  store i32 %403, i32* %393, align 4
  br label %404

404:                                              ; preds = %378, %387, %402
  store %"class.WTF::String"* null, %"class.WTF::String"** %213, align 8
  store i32 0, i32* %214, align 8
  %405 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #10
  %406 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %405, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %407 = ptrtoint i8* %406 to i64
  store atomic i64 %407, i64* %215 monotonic, align 8
  %408 = lshr i64 %405, 3
  %409 = trunc i64 %408 to i32
  store i32 %409, i32* %214, align 8
  store i32 1, i32* %216, align 4
  %410 = bitcast i8* %406 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %385, %"class.WTF::StringImpl"** %410, align 8
  br i1 %386, label %428, label %411

411:                                              ; preds = %404
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %413 = load atomic i32, i32* %412 monotonic, align 4
  %414 = and i32 %413, 2
  %415 = icmp eq i32 %414, 0
  br i1 %415, label %416, label %428

416:                                              ; preds = %411
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = zext i32 %418 to i33
  %420 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %419, i33 1) #10
  %421 = extractvalue { i33, i1 } %420, 1
  %422 = extractvalue { i33, i1 } %420, 0
  %423 = icmp slt i33 %422, 0
  %424 = or i1 %421, %423
  br i1 %424, label %425, label %426, !prof !6

425:                                              ; preds = %416
  call void @llvm.trap() #10
  unreachable

426:                                              ; preds = %416
  %427 = trunc i33 %422 to i32
  store i32 %427, i32* %417, align 4
  br label %428

428:                                              ; preds = %426, %411, %404
  call void @_ZN10schema_org5mojom5blink6Values17set_string_valuesEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %384, %"class.WTF::Vector.652"* nonnull %28) #10
  %429 = load %"class.WTF::String"*, %"class.WTF::String"** %213, align 8
  %430 = icmp eq %"class.WTF::String"* %429, null
  br i1 %430, label %463, label %431, !prof !2

431:                                              ; preds = %428
  %432 = bitcast %"class.WTF::String"* %429 to i8*
  %433 = load i32, i32* %216, align 4
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %461, label %435, !prof !6

435:                                              ; preds = %431
  %436 = zext i32 %433 to i64
  %437 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %429, i64 %436
  br label %438

438:                                              ; preds = %456, %435
  %439 = phi %"class.WTF::String"* [ %457, %456 ], [ %429, %435 ]
  %440 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %439, i64 0, i32 0, i32 0
  %441 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %440, align 8
  %442 = icmp eq %"class.WTF::StringImpl"* %441, null
  br i1 %442, label %456, label %443

443:                                              ; preds = %438
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  br i1 %447, label %450, label %452

450:                                              ; preds = %443
  %451 = add i32 %449, -1
  store i32 %451, i32* %448, align 4
  br label %452

452:                                              ; preds = %450, %443
  %453 = phi i32 [ %451, %450 ], [ %449, %443 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %441) #10
  br label %456

456:                                              ; preds = %455, %452, %438
  %457 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %439, i64 1
  %458 = icmp eq %"class.WTF::String"* %457, %437
  br i1 %458, label %459, label %438

459:                                              ; preds = %456
  store i32 0, i32* %216, align 4
  %460 = load i8*, i8** %217, align 8
  br label %461

461:                                              ; preds = %459, %431
  %462 = phi i8* [ %460, %459 ], [ %432, %431 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %462) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %213, align 8
  br label %463

463:                                              ; preds = %428, %461
  br i1 %386, label %477, label %464

464:                                              ; preds = %463
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %466 = load atomic i32, i32* %465 monotonic, align 4
  %467 = and i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %385, i64 0, i32 0
  %470 = load i32, i32* %469, align 4
  br i1 %468, label %471, label %473

471:                                              ; preds = %464
  %472 = add i32 %470, -1
  store i32 %472, i32* %469, align 4
  br label %473

473:                                              ; preds = %471, %464
  %474 = phi i32 [ %472, %471 ], [ %470, %464 ]
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %477

476:                                              ; preds = %473
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %385) #10
  br label %477

477:                                              ; preds = %463, %473, %476
  %478 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %479 = icmp eq %"class.WTF::StringImpl"* %478, null
  br i1 %479, label %493, label %480

480:                                              ; preds = %477
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  br i1 %484, label %487, label %489

487:                                              ; preds = %480
  %488 = add i32 %486, -1
  store i32 %488, i32* %485, align 4
  br label %489

489:                                              ; preds = %487, %480
  %490 = phi i32 [ %488, %487 ], [ %486, %480 ]
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %492, label %493

492:                                              ; preds = %489
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #10
  br label %493

493:                                              ; preds = %477, %489, %492
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210) #10
  br label %1024

494:                                              ; preds = %328
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #10
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %204, align 8
  %495 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156, %"class.WTF::String"* nonnull %29) #10
  call void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nonnull %29, i32 200) #10
  %496 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %497 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %496, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %498 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %497, align 8
  %499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %500 = icmp eq %"class.WTF::StringImpl"* %499, null
  br i1 %500, label %518, label %501

501:                                              ; preds = %494
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = and i32 %503, 2
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %518

506:                                              ; preds = %501
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %508 = load i32, i32* %507, align 4
  %509 = zext i32 %508 to i33
  %510 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %509, i33 1) #10
  %511 = extractvalue { i33, i1 } %510, 1
  %512 = extractvalue { i33, i1 } %510, 0
  %513 = icmp slt i33 %512, 0
  %514 = or i1 %511, %513
  br i1 %514, label %515, label %516, !prof !6

515:                                              ; preds = %506
  call void @llvm.trap() #10
  unreachable

516:                                              ; preds = %506
  %517 = trunc i33 %512 to i32
  store i32 %517, i32* %507, align 4
  br label %518

518:                                              ; preds = %494, %501, %516
  store %"class.WTF::String"* null, %"class.WTF::String"** %205, align 8
  store i32 0, i32* %206, align 8
  %519 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 8) #10
  %520 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %519, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %521 = ptrtoint i8* %520 to i64
  store atomic i64 %521, i64* %207 monotonic, align 8
  %522 = lshr i64 %519, 3
  %523 = trunc i64 %522 to i32
  store i32 %523, i32* %206, align 8
  store i32 1, i32* %208, align 4
  %524 = bitcast i8* %520 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %499, %"class.WTF::StringImpl"** %524, align 8
  br i1 %500, label %542, label %525

525:                                              ; preds = %518
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %527 = load atomic i32, i32* %526 monotonic, align 4
  %528 = and i32 %527, 2
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %542

530:                                              ; preds = %525
  %531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %532 = load i32, i32* %531, align 4
  %533 = zext i32 %532 to i33
  %534 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %533, i33 1) #10
  %535 = extractvalue { i33, i1 } %534, 1
  %536 = extractvalue { i33, i1 } %534, 0
  %537 = icmp slt i33 %536, 0
  %538 = or i1 %535, %537
  br i1 %538, label %539, label %540, !prof !6

539:                                              ; preds = %530
  call void @llvm.trap() #10
  unreachable

540:                                              ; preds = %530
  %541 = trunc i33 %536 to i32
  store i32 %541, i32* %531, align 4
  br label %542

542:                                              ; preds = %540, %525, %518
  call void @_ZN10schema_org5mojom5blink6Values17set_string_valuesEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %498, %"class.WTF::Vector.652"* nonnull %30) #10
  %543 = load %"class.WTF::String"*, %"class.WTF::String"** %205, align 8
  %544 = icmp eq %"class.WTF::String"* %543, null
  br i1 %544, label %577, label %545, !prof !2

545:                                              ; preds = %542
  %546 = bitcast %"class.WTF::String"* %543 to i8*
  %547 = load i32, i32* %208, align 4
  %548 = icmp eq i32 %547, 0
  br i1 %548, label %575, label %549, !prof !6

549:                                              ; preds = %545
  %550 = zext i32 %547 to i64
  %551 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %543, i64 %550
  br label %552

552:                                              ; preds = %570, %549
  %553 = phi %"class.WTF::String"* [ %571, %570 ], [ %543, %549 ]
  %554 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %553, i64 0, i32 0, i32 0
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %554, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %570, label %557

557:                                              ; preds = %552
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = load atomic i32, i32* %558 monotonic, align 4
  %560 = and i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  br i1 %561, label %564, label %566

564:                                              ; preds = %557
  %565 = add i32 %563, -1
  store i32 %565, i32* %562, align 4
  br label %566

566:                                              ; preds = %564, %557
  %567 = phi i32 [ %565, %564 ], [ %563, %557 ]
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %570

569:                                              ; preds = %566
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %555) #10
  br label %570

570:                                              ; preds = %569, %566, %552
  %571 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %553, i64 1
  %572 = icmp eq %"class.WTF::String"* %571, %551
  br i1 %572, label %573, label %552

573:                                              ; preds = %570
  store i32 0, i32* %208, align 4
  %574 = load i8*, i8** %209, align 8
  br label %575

575:                                              ; preds = %573, %545
  %576 = phi i8* [ %574, %573 ], [ %546, %545 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %576) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %205, align 8
  br label %577

577:                                              ; preds = %542, %575
  br i1 %500, label %591, label %578

578:                                              ; preds = %577
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %580 = load atomic i32, i32* %579 monotonic, align 4
  %581 = and i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %499, i64 0, i32 0
  %584 = load i32, i32* %583, align 4
  br i1 %582, label %585, label %587

585:                                              ; preds = %578
  %586 = add i32 %584, -1
  store i32 %586, i32* %583, align 4
  br label %587

587:                                              ; preds = %585, %578
  %588 = phi i32 [ %586, %585 ], [ %584, %578 ]
  %589 = icmp eq i32 %588, 0
  br i1 %589, label %590, label %591

590:                                              ; preds = %587
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %499) #10
  br label %591

591:                                              ; preds = %577, %587, %590
  %592 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %593 = icmp eq %"class.WTF::StringImpl"* %592, null
  br i1 %593, label %607, label %594

594:                                              ; preds = %591
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = load atomic i32, i32* %595 monotonic, align 4
  %597 = and i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 0
  %600 = load i32, i32* %599, align 4
  br i1 %598, label %601, label %603

601:                                              ; preds = %594
  %602 = add i32 %600, -1
  store i32 %602, i32* %599, align 4
  br label %603

603:                                              ; preds = %601, %594
  %604 = phi i32 [ %602, %601 ], [ %600, %594 ]
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %607

606:                                              ; preds = %603
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %592) #10
  br label %607

607:                                              ; preds = %591, %603, %606
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #10
  br label %1024

608:                                              ; preds = %328
  br i1 %172, label %1039, label %609

609:                                              ; preds = %608
  %610 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %611 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %610, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %612 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %611, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %196, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values17set_entity_valuesEN3WTF6VectorIN4mojo9StructPtrINS1_6EntityEEELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %612, %"class.WTF::Vector.759"* nonnull %31) #10
  %613 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %197, align 8
  %614 = icmp eq %"class.mojo::StructPtr.762"* %613, null
  br i1 %614, label %636, label %615, !prof !2

615:                                              ; preds = %609
  %616 = bitcast %"class.mojo::StructPtr.762"* %613 to i8*
  %617 = load i32, i32* %198, align 4
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %634, label %619, !prof !6

619:                                              ; preds = %615
  %620 = zext i32 %617 to i64
  %621 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %613, i64 %620
  br label %622

622:                                              ; preds = %629, %619
  %623 = phi %"class.mojo::StructPtr.762"* [ %630, %629 ], [ %613, %619 ]
  %624 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %623, i64 0, i32 0, i32 0, i32 0, i32 0
  %625 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %624, align 8
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %624, align 8
  %626 = icmp eq %"class.schema_org::mojom::blink::Entity"* %625, null
  br i1 %626, label %629, label %627

627:                                              ; preds = %622
  call void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %625) #10
  %628 = bitcast %"class.schema_org::mojom::blink::Entity"* %625 to i8*
  call void @_ZdlPv(i8* %628) #11
  br label %629

629:                                              ; preds = %627, %622
  %630 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %623, i64 1
  %631 = icmp eq %"class.mojo::StructPtr.762"* %630, %621
  br i1 %631, label %632, label %622

632:                                              ; preds = %629
  store i32 0, i32* %198, align 4
  %633 = load i8*, i8** %199, align 8
  br label %634

634:                                              ; preds = %632, %615
  %635 = phi i8* [ %633, %632 ], [ %616, %615 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %635) #10
  store %"class.mojo::StructPtr.762"* null, %"class.mojo::StructPtr.762"** %197, align 8
  br label %636

636:                                              ; preds = %609, %634
  %637 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %638 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %637, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %639 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %638, align 8
  %640 = getelementptr inbounds %"class.schema_org::mojom::blink::Values", %"class.schema_org::mojom::blink::Values"* %639, i64 0, i32 1
  %641 = bitcast %"union.schema_org::mojom::blink::Values::Union_"* %640 to %"class.WTF::Vector.759"**
  %642 = load %"class.WTF::Vector.759"*, %"class.WTF::Vector.759"** %641, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %200) #10
  %643 = call i8* @_Znwm(i64 24) #11, !noalias !18
  %644 = bitcast i8* %643 to %"class.schema_org::mojom::blink::Entity"*
  call void @_ZN10schema_org5mojom5blink6EntityC1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %644) #10, !noalias !18
  %645 = ptrtoint i8* %643 to i64
  store i64 %645, i64* %201, align 8, !alias.scope !18
  %646 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %642, i64 0, i32 0, i32 0, i32 2
  %647 = load i32, i32* %646, align 4
  %648 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %642, i64 0, i32 0, i32 0, i32 1
  %649 = load i32, i32* %648, align 8
  %650 = icmp eq i32 %647, %649
  br i1 %650, label %661, label %651, !prof !6

651:                                              ; preds = %636
  %652 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %642, i64 0, i32 0, i32 0, i32 0
  %653 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %652, align 8
  %654 = zext i32 %647 to i64
  %655 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %653, i64 %654
  %656 = bitcast %"class.mojo::StructPtr.762"* %655 to i64*
  %657 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %655, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %657, align 8
  %658 = load i64, i64* %201, align 8
  store i64 %658, i64* %656, align 8
  %659 = load i32, i32* %646, align 4
  %660 = add i32 %659, 1
  store i32 %660, i32* %646, align 4
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %202, align 8
  br label %666

661:                                              ; preds = %636
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.759"* %642, %"class.mojo::StructPtr.762"* nonnull dereferenceable(8) %32) #10
  %662 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %202, align 8
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %202, align 8
  %663 = icmp eq %"class.schema_org::mojom::blink::Entity"* %662, null
  br i1 %663, label %666, label %664

664:                                              ; preds = %661
  %665 = bitcast %"class.schema_org::mojom::blink::Entity"* %662 to i8*
  call void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %662) #10
  call void @_ZdlPv(i8* %665) #11
  br label %666

666:                                              ; preds = %651, %661, %664
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %200) #10
  %667 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156) #10
  %668 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %669 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %668, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %670 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %669, align 8
  %671 = getelementptr inbounds %"class.schema_org::mojom::blink::Values", %"class.schema_org::mojom::blink::Values"* %670, i64 0, i32 1
  %672 = bitcast %"union.schema_org::mojom::blink::Values::Union_"* %671 to %"class.WTF::Vector.759"**
  %673 = load %"class.WTF::Vector.759"*, %"class.WTF::Vector.759"** %672, align 8
  %674 = call dereferenceable(8) %"class.mojo::StructPtr.762"* @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.759"* %673, i32 0)
  %675 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %674, i64 0, i32 0, i32 0, i32 0, i32 0
  %676 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %675, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113ExtractEntityERKNS_10JSONObjectERN10schema_org5mojom5blink6EntityEi(%"class.blink::JSONObject"* dereferenceable(56) %667, %"class.schema_org::mojom::blink::Entity"* dereferenceable(24) %676, i32 %189)
  br label %1024

677:                                              ; preds = %328
  %678 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %156) #10
  %679 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %680 = getelementptr inbounds %"class.schema_org::mojom::blink::Property", %"class.schema_org::mojom::blink::Property"* %679, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %681 = load %"class.schema_org::mojom::blink::Values"*, %"class.schema_org::mojom::blink::Values"** %680, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %169)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171)
  %682 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %678, i64 0, i32 1, i32 0, i32 0, i32 2
  %683 = load i32, i32* %682, align 4
  %684 = icmp eq i32 %683, 0
  br i1 %684, label %1022, label %685

685:                                              ; preds = %677
  %686 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* %678, i32 0) #10
  %687 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %686, i64 0, i32 1
  %688 = load i32, i32* %687, align 8
  switch i32 %688, label %801 [
    i32 1, label %689
    i32 2, label %697
    i32 3, label %706
    i32 4, label %741
    i32 5, label %776
    i32 6, label %1022
  ]

689:                                              ; preds = %685
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %167, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values15set_bool_valuesEN3WTF6VectorIbLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %681, %"class.WTF::Vector.472"* nonnull %4) #10
  %690 = load i8*, i8** %184, align 8
  %691 = icmp eq i8* %690, null
  br i1 %691, label %801, label %692, !prof !2

692:                                              ; preds = %689
  %693 = load i32, i32* %185, align 4
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %696, label %695, !prof !6

695:                                              ; preds = %692
  store i32 0, i32* %185, align 4
  br label %696

696:                                              ; preds = %695, %692
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %690) #10
  store i8* null, i8** %184, align 8
  br label %801

697:                                              ; preds = %685
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values15set_long_valuesEN3WTF6VectorIlLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %681, %"class.WTF::Vector.777"* nonnull %5) #10
  %698 = load i64*, i64** %182, align 8
  %699 = icmp eq i64* %698, null
  %700 = bitcast i64* %698 to i8*
  br i1 %699, label %801, label %701, !prof !2

701:                                              ; preds = %697
  %702 = load i32, i32* %183, align 4
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %705, label %704, !prof !6

704:                                              ; preds = %701
  store i32 0, i32* %183, align 4
  br label %705

705:                                              ; preds = %704, %701
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %700) #10
  store i64* null, i64** %182, align 8
  br label %801

706:                                              ; preds = %685
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values17set_string_valuesEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %681, %"class.WTF::Vector.652"* nonnull %6) #10
  %707 = load %"class.WTF::String"*, %"class.WTF::String"** %179, align 8
  %708 = icmp eq %"class.WTF::String"* %707, null
  br i1 %708, label %801, label %709, !prof !2

709:                                              ; preds = %706
  %710 = bitcast %"class.WTF::String"* %707 to i8*
  %711 = load i32, i32* %180, align 4
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %739, label %713, !prof !6

713:                                              ; preds = %709
  %714 = zext i32 %711 to i64
  %715 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %707, i64 %714
  br label %716

716:                                              ; preds = %734, %713
  %717 = phi %"class.WTF::String"* [ %735, %734 ], [ %707, %713 ]
  %718 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %717, i64 0, i32 0, i32 0
  %719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %734, label %721

721:                                              ; preds = %716
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  %726 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %727 = load i32, i32* %726, align 4
  br i1 %725, label %728, label %730

728:                                              ; preds = %721
  %729 = add i32 %727, -1
  store i32 %729, i32* %726, align 4
  br label %730

730:                                              ; preds = %728, %721
  %731 = phi i32 [ %729, %728 ], [ %727, %721 ]
  %732 = icmp eq i32 %731, 0
  br i1 %732, label %733, label %734

733:                                              ; preds = %730
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %719) #10
  br label %734

734:                                              ; preds = %733, %730, %716
  %735 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %717, i64 1
  %736 = icmp eq %"class.WTF::String"* %735, %715
  br i1 %736, label %737, label %716

737:                                              ; preds = %734
  store i32 0, i32* %180, align 4
  %738 = load i8*, i8** %181, align 8
  br label %739

739:                                              ; preds = %737, %709
  %740 = phi i8* [ %738, %737 ], [ %710, %709 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %740) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %179, align 8
  br label %801

741:                                              ; preds = %685
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values17set_string_valuesEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %681, %"class.WTF::Vector.652"* nonnull %7) #10
  %742 = load %"class.WTF::String"*, %"class.WTF::String"** %176, align 8
  %743 = icmp eq %"class.WTF::String"* %742, null
  br i1 %743, label %801, label %744, !prof !2

744:                                              ; preds = %741
  %745 = bitcast %"class.WTF::String"* %742 to i8*
  %746 = load i32, i32* %177, align 4
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %774, label %748, !prof !6

748:                                              ; preds = %744
  %749 = zext i32 %746 to i64
  %750 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %742, i64 %749
  br label %751

751:                                              ; preds = %769, %748
  %752 = phi %"class.WTF::String"* [ %770, %769 ], [ %742, %748 ]
  %753 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %752, i64 0, i32 0, i32 0
  %754 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %753, align 8
  %755 = icmp eq %"class.WTF::StringImpl"* %754, null
  br i1 %755, label %769, label %756

756:                                              ; preds = %751
  %757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %758 = load atomic i32, i32* %757 monotonic, align 4
  %759 = and i32 %758, 2
  %760 = icmp eq i32 %759, 0
  %761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %754, i64 0, i32 0
  %762 = load i32, i32* %761, align 4
  br i1 %760, label %763, label %765

763:                                              ; preds = %756
  %764 = add i32 %762, -1
  store i32 %764, i32* %761, align 4
  br label %765

765:                                              ; preds = %763, %756
  %766 = phi i32 [ %764, %763 ], [ %762, %756 ]
  %767 = icmp eq i32 %766, 0
  br i1 %767, label %768, label %769

768:                                              ; preds = %765
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %754) #10
  br label %769

769:                                              ; preds = %768, %765, %751
  %770 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %752, i64 1
  %771 = icmp eq %"class.WTF::String"* %770, %750
  br i1 %771, label %772, label %751

772:                                              ; preds = %769
  store i32 0, i32* %177, align 4
  %773 = load i8*, i8** %178, align 8
  br label %774

774:                                              ; preds = %772, %744
  %775 = phi i8* [ %773, %772 ], [ %745, %744 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %775) #10
  store %"class.WTF::String"* null, %"class.WTF::String"** %176, align 8
  br label %801

776:                                              ; preds = %685
  br i1 %172, label %1022, label %777

777:                                              ; preds = %776
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 0, i64 16, i1 false) #10
  call void @_ZN10schema_org5mojom5blink6Values17set_entity_valuesEN3WTF6VectorIN4mojo9StructPtrINS1_6EntityEEELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"* %681, %"class.WTF::Vector.759"* nonnull %8) #10
  %778 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %173, align 8
  %779 = icmp eq %"class.mojo::StructPtr.762"* %778, null
  br i1 %779, label %801, label %780, !prof !2

780:                                              ; preds = %777
  %781 = bitcast %"class.mojo::StructPtr.762"* %778 to i8*
  %782 = load i32, i32* %174, align 4
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %799, label %784, !prof !6

784:                                              ; preds = %780
  %785 = zext i32 %782 to i64
  %786 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %778, i64 %785
  br label %787

787:                                              ; preds = %794, %784
  %788 = phi %"class.mojo::StructPtr.762"* [ %795, %794 ], [ %778, %784 ]
  %789 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %788, i64 0, i32 0, i32 0, i32 0, i32 0
  %790 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %789, align 8
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %789, align 8
  %791 = icmp eq %"class.schema_org::mojom::blink::Entity"* %790, null
  br i1 %791, label %794, label %792

792:                                              ; preds = %787
  call void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %790) #10
  %793 = bitcast %"class.schema_org::mojom::blink::Entity"* %790 to i8*
  call void @_ZdlPv(i8* %793) #11
  br label %794

794:                                              ; preds = %792, %787
  %795 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %788, i64 1
  %796 = icmp eq %"class.mojo::StructPtr.762"* %795, %786
  br i1 %796, label %797, label %787

797:                                              ; preds = %794
  store i32 0, i32* %174, align 4
  %798 = load i8*, i8** %175, align 8
  br label %799

799:                                              ; preds = %797, %780
  %800 = phi i8* [ %798, %797 ], [ %781, %780 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %800) #10
  store %"class.mojo::StructPtr.762"* null, %"class.mojo::StructPtr.762"** %173, align 8
  br label %801

801:                                              ; preds = %777, %799, %741, %774, %706, %739, %697, %705, %689, %696, %685
  %802 = load i32, i32* %682, align 4
  %803 = icmp eq i32 %802, 0
  br i1 %803, label %1023, label %804

804:                                              ; preds = %801
  %805 = getelementptr inbounds %"class.schema_org::mojom::blink::Values", %"class.schema_org::mojom::blink::Values"* %681, i64 0, i32 1
  %806 = bitcast %"union.schema_org::mojom::blink::Values::Union_"* %805 to %"class.WTF::Vector.759"**
  %807 = bitcast %"union.schema_org::mojom::blink::Values::Union_"* %805 to %"class.WTF::Vector.652"**
  %808 = bitcast %"union.schema_org::mojom::blink::Values::Union_"* %805 to %"class.WTF::Vector.777"**
  %809 = getelementptr inbounds %"class.schema_org::mojom::blink::Values", %"class.schema_org::mojom::blink::Values"* %681, i64 0, i32 1, i32 0
  br label %810

810:                                              ; preds = %804, %1016
  %811 = phi i32 [ 0, %804 ], [ %1017, %1016 ]
  %812 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* %678, i32 %811) #10
  %813 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %812, i64 0, i32 1
  %814 = load i32, i32* %813, align 8
  %815 = icmp eq i32 %814, %688
  br i1 %815, label %816, label %1038

816:                                              ; preds = %810
  switch i32 %688, label %1016 [
    i32 1, label %817
    i32 2, label %839
    i32 3, label %862
    i32 4, label %921
    i32 5, label %978
  ]

817:                                              ; preds = %816
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  store i8 -86, i8* %9, align 1
  %818 = bitcast %"class.blink::JSONValue"* %812 to i1 (%"class.blink::JSONValue"*, i8*)***
  %819 = load i1 (%"class.blink::JSONValue"*, i8*)**, i1 (%"class.blink::JSONValue"*, i8*)*** %818, align 8
  %820 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %819, i64 2
  %821 = load i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %820, align 8
  %822 = call zeroext i1 %821(%"class.blink::JSONValue"* %812, i8* nonnull %9) #10
  %823 = load %"class.WTF::Vector.472"*, %"class.WTF::Vector.472"** %809, align 8
  %824 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %823, i64 0, i32 0, i32 0, i32 2
  %825 = load i32, i32* %824, align 4
  %826 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %823, i64 0, i32 0, i32 0, i32 1
  %827 = load i32, i32* %826, align 8
  %828 = icmp eq i32 %825, %827
  br i1 %828, label %837, label %829, !prof !6

829:                                              ; preds = %817
  %830 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %823, i64 0, i32 0, i32 0, i32 0
  %831 = load i8*, i8** %830, align 8
  %832 = zext i32 %825 to i64
  %833 = getelementptr inbounds i8, i8* %831, i64 %832
  %834 = load i8, i8* %9, align 1, !range !7
  store i8 %834, i8* %833, align 1
  %835 = load i32, i32* %824, align 4
  %836 = add i32 %835, 1
  store i32 %836, i32* %824, align 4
  br label %838

837:                                              ; preds = %817
  call void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_(%"class.WTF::Vector.472"* %823, i8* nonnull dereferenceable(1) %9) #10
  br label %838

838:                                              ; preds = %837, %829
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  br label %1016

839:                                              ; preds = %816
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %195) #10
  store i32 -1431655766, i32* %10, align 4
  %840 = bitcast %"class.blink::JSONValue"* %812 to i1 (%"class.blink::JSONValue"*, i32*)***
  %841 = load i1 (%"class.blink::JSONValue"*, i32*)**, i1 (%"class.blink::JSONValue"*, i32*)*** %840, align 8
  %842 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %841, i64 4
  %843 = load i1 (%"class.blink::JSONValue"*, i32*)*, i1 (%"class.blink::JSONValue"*, i32*)** %842, align 8
  %844 = call zeroext i1 %843(%"class.blink::JSONValue"* %812, i32* nonnull %10) #10
  %845 = load %"class.WTF::Vector.777"*, %"class.WTF::Vector.777"** %808, align 8
  %846 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %845, i64 0, i32 0, i32 0, i32 2
  %847 = load i32, i32* %846, align 4
  %848 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %845, i64 0, i32 0, i32 0, i32 1
  %849 = load i32, i32* %848, align 8
  %850 = icmp eq i32 %847, %849
  br i1 %850, label %860, label %851, !prof !6

851:                                              ; preds = %839
  %852 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %845, i64 0, i32 0, i32 0, i32 0
  %853 = load i64*, i64** %852, align 8
  %854 = zext i32 %847 to i64
  %855 = getelementptr inbounds i64, i64* %853, i64 %854
  %856 = load i32, i32* %10, align 4
  %857 = sext i32 %856 to i64
  store i64 %857, i64* %855, align 8
  %858 = load i32, i32* %846, align 4
  %859 = add i32 %858, 1
  store i32 %859, i32* %846, align 4
  br label %861

860:                                              ; preds = %839
  call void @_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.777"* %845, i32* nonnull dereferenceable(4) %10) #10
  br label %861

861:                                              ; preds = %860, %851
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %195) #10
  br label %1016

862:                                              ; preds = %816
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #10
  store double 0xFFFFFFFFFFFFFFFF, double* %11, align 8
  %863 = bitcast %"class.blink::JSONValue"* %812 to i1 (%"class.blink::JSONValue"*, double*)***
  %864 = load i1 (%"class.blink::JSONValue"*, double*)**, i1 (%"class.blink::JSONValue"*, double*)*** %863, align 8
  %865 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %864, i64 3
  %866 = load i1 (%"class.blink::JSONValue"*, double*)*, i1 (%"class.blink::JSONValue"*, double*)** %865, align 8
  %867 = call zeroext i1 %866(%"class.blink::JSONValue"* %812, double* nonnull %11) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %194, align 8
  %868 = load double, double* %11, align 8
  %869 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %868, i32 6) #10
  store %"class.WTF::StringImpl"* %869, %"class.WTF::StringImpl"** %194, align 8
  call void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nonnull %12, i32 200) #10
  %870 = load %"class.WTF::Vector.652"*, %"class.WTF::Vector.652"** %807, align 8
  %871 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %870, i64 0, i32 0, i32 0, i32 2
  %872 = load i32, i32* %871, align 4
  %873 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %870, i64 0, i32 0, i32 0, i32 1
  %874 = load i32, i32* %873, align 8
  %875 = icmp eq i32 %872, %874
  br i1 %875, label %903, label %876, !prof !6

876:                                              ; preds = %862
  %877 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %870, i64 0, i32 0, i32 0, i32 0
  %878 = load %"class.WTF::String"*, %"class.WTF::String"** %877, align 8
  %879 = zext i32 %872 to i64
  %880 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %881 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %878, i64 %879, i32 0, i32 0
  store %"class.WTF::StringImpl"* %880, %"class.WTF::StringImpl"** %881, align 8
  %882 = icmp eq %"class.WTF::StringImpl"* %880, null
  br i1 %882, label %900, label %883

883:                                              ; preds = %876
  %884 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %885 = load atomic i32, i32* %884 monotonic, align 4
  %886 = and i32 %885, 2
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %888, label %900

888:                                              ; preds = %883
  %889 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 0
  %890 = load i32, i32* %889, align 4
  %891 = zext i32 %890 to i33
  %892 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %891, i33 1) #10
  %893 = extractvalue { i33, i1 } %892, 1
  %894 = extractvalue { i33, i1 } %892, 0
  %895 = icmp slt i33 %894, 0
  %896 = or i1 %893, %895
  br i1 %896, label %897, label %898, !prof !6

897:                                              ; preds = %888
  call void @llvm.trap() #10
  unreachable

898:                                              ; preds = %888
  %899 = trunc i33 %894 to i32
  store i32 %899, i32* %889, align 4
  br label %900

900:                                              ; preds = %898, %883, %876
  %901 = load i32, i32* %871, align 4
  %902 = add i32 %901, 1
  store i32 %902, i32* %871, align 4
  br label %904

903:                                              ; preds = %862
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.652"* %870, %"class.WTF::String"* nonnull dereferenceable(8) %12) #10
  br label %904

904:                                              ; preds = %903, %900
  %905 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %194, align 8
  %906 = icmp eq %"class.WTF::StringImpl"* %905, null
  br i1 %906, label %920, label %907

907:                                              ; preds = %904
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  br i1 %911, label %914, label %916

914:                                              ; preds = %907
  %915 = add i32 %913, -1
  store i32 %915, i32* %912, align 4
  br label %916

916:                                              ; preds = %914, %907
  %917 = phi i32 [ %915, %914 ], [ %913, %907 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %905) #10
  br label %920

920:                                              ; preds = %919, %916, %904
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #10
  br label %1016

921:                                              ; preds = %816
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #10
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %191, align 8
  %922 = bitcast %"class.blink::JSONValue"* %812 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %923 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %922, align 8
  %924 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %923, i64 5
  %925 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %924, align 8
  %926 = call zeroext i1 %925(%"class.blink::JSONValue"* %812, %"class.WTF::String"* nonnull %13) #10
  call void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"* nonnull %13, i32 200) #10
  %927 = load %"class.WTF::Vector.652"*, %"class.WTF::Vector.652"** %807, align 8
  %928 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %927, i64 0, i32 0, i32 0, i32 2
  %929 = load i32, i32* %928, align 4
  %930 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %927, i64 0, i32 0, i32 0, i32 1
  %931 = load i32, i32* %930, align 8
  %932 = icmp eq i32 %929, %931
  br i1 %932, label %960, label %933, !prof !6

933:                                              ; preds = %921
  %934 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %927, i64 0, i32 0, i32 0, i32 0
  %935 = load %"class.WTF::String"*, %"class.WTF::String"** %934, align 8
  %936 = zext i32 %929 to i64
  %937 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %938 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %935, i64 %936, i32 0, i32 0
  store %"class.WTF::StringImpl"* %937, %"class.WTF::StringImpl"** %938, align 8
  %939 = icmp eq %"class.WTF::StringImpl"* %937, null
  br i1 %939, label %957, label %940

940:                                              ; preds = %933
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %937, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %942 = load atomic i32, i32* %941 monotonic, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %957

945:                                              ; preds = %940
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %937, i64 0, i32 0
  %947 = load i32, i32* %946, align 4
  %948 = zext i32 %947 to i33
  %949 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %948, i33 1) #10
  %950 = extractvalue { i33, i1 } %949, 1
  %951 = extractvalue { i33, i1 } %949, 0
  %952 = icmp slt i33 %951, 0
  %953 = or i1 %950, %952
  br i1 %953, label %954, label %955, !prof !6

954:                                              ; preds = %945
  call void @llvm.trap() #10
  unreachable

955:                                              ; preds = %945
  %956 = trunc i33 %951 to i32
  store i32 %956, i32* %946, align 4
  br label %957

957:                                              ; preds = %955, %940, %933
  %958 = load i32, i32* %928, align 4
  %959 = add i32 %958, 1
  store i32 %959, i32* %928, align 4
  br label %961

960:                                              ; preds = %921
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.652"* %927, %"class.WTF::String"* nonnull dereferenceable(8) %13) #10
  br label %961

961:                                              ; preds = %960, %957
  %962 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  %963 = icmp eq %"class.WTF::StringImpl"* %962, null
  br i1 %963, label %977, label %964

964:                                              ; preds = %961
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load atomic i32, i32* %965 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 0
  %970 = load i32, i32* %969, align 4
  br i1 %968, label %971, label %973

971:                                              ; preds = %964
  %972 = add i32 %970, -1
  store i32 %972, i32* %969, align 4
  br label %973

973:                                              ; preds = %971, %964
  %974 = phi i32 [ %972, %971 ], [ %970, %964 ]
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %977

976:                                              ; preds = %973
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %962) #10
  br label %977

977:                                              ; preds = %976, %973, %961
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #10
  br label %1016

978:                                              ; preds = %816
  %979 = load %"class.WTF::Vector.759"*, %"class.WTF::Vector.759"** %806, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #10
  %980 = call i8* @_Znwm(i64 24) #11, !noalias !21
  %981 = bitcast i8* %980 to %"class.schema_org::mojom::blink::Entity"*
  call void @_ZN10schema_org5mojom5blink6EntityC1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %981) #10, !noalias !21
  %982 = ptrtoint i8* %980 to i64
  store i64 %982, i64* %187, align 8, !alias.scope !21
  %983 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %979, i64 0, i32 0, i32 0, i32 2
  %984 = load i32, i32* %983, align 4
  %985 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %979, i64 0, i32 0, i32 0, i32 1
  %986 = load i32, i32* %985, align 8
  %987 = icmp eq i32 %984, %986
  br i1 %987, label %998, label %988, !prof !6

988:                                              ; preds = %978
  %989 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %979, i64 0, i32 0, i32 0, i32 0
  %990 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %989, align 8
  %991 = zext i32 %984 to i64
  %992 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %990, i64 %991
  %993 = bitcast %"class.mojo::StructPtr.762"* %992 to i64*
  %994 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %992, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %994, align 8
  %995 = load i64, i64* %187, align 8
  store i64 %995, i64* %993, align 8
  %996 = load i32, i32* %983, align 4
  %997 = add i32 %996, 1
  store i32 %997, i32* %983, align 4
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %188, align 8
  br label %1003

998:                                              ; preds = %978
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.759"* %979, %"class.mojo::StructPtr.762"* nonnull dereferenceable(8) %14) #10
  %999 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %188, align 8
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %188, align 8
  %1000 = icmp eq %"class.schema_org::mojom::blink::Entity"* %999, null
  br i1 %1000, label %1003, label %1001

1001:                                             ; preds = %998
  %1002 = bitcast %"class.schema_org::mojom::blink::Entity"* %999 to i8*
  call void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"* nonnull %999) #10
  call void @_ZdlPv(i8* %1002) #11
  br label %1003

1003:                                             ; preds = %988, %1001, %998
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #10
  %1004 = icmp eq %"class.blink::JSONValue"* %812, null
  br i1 %1004, label %1010, label %1005

1005:                                             ; preds = %1003
  %1006 = load i32, i32* %813, align 8
  %1007 = icmp eq i32 %1006, 5
  %1008 = bitcast %"class.blink::JSONValue"* %812 to %"class.blink::JSONObject"*
  %1009 = select i1 %1007, %"class.blink::JSONObject"* %1008, %"class.blink::JSONObject"* null
  br label %1010

1010:                                             ; preds = %1003, %1005
  %1011 = phi %"class.blink::JSONObject"* [ %1009, %1005 ], [ null, %1003 ]
  %1012 = load %"class.WTF::Vector.759"*, %"class.WTF::Vector.759"** %806, align 8
  %1013 = call dereferenceable(8) %"class.mojo::StructPtr.762"* @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.759"* %1012, i32 %811) #10
  %1014 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %1013, i64 0, i32 0, i32 0, i32 0, i32 0
  %1015 = load %"class.schema_org::mojom::blink::Entity"*, %"class.schema_org::mojom::blink::Entity"** %1014, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_113ExtractEntityERKNS_10JSONObjectERN10schema_org5mojom5blink6EntityEi(%"class.blink::JSONObject"* dereferenceable(56) %1011, %"class.schema_org::mojom::blink::Entity"* dereferenceable(24) %1015, i32 %189) #10
  br label %1016

1016:                                             ; preds = %816, %1010, %977, %920, %861, %838
  %1017 = add nuw i32 %811, 1
  %1018 = load i32, i32* %682, align 4
  %1019 = icmp ult i32 %1018, 100
  %1020 = select i1 %1019, i32 %1018, i32 100
  %1021 = icmp ult i32 %1017, %1020
  br i1 %1021, label %810, label %1023

1022:                                             ; preds = %677, %685, %776
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171)
  br label %1039

1023:                                             ; preds = %1016, %801
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171)
  br label %1024

1024:                                             ; preds = %1023, %328, %352, %377, %493, %607, %666
  %1025 = load i32, i32* %228, align 4
  %1026 = load i32, i32* %229, align 8
  %1027 = icmp eq i32 %1025, %1026
  br i1 %1027, label %1037, label %1028, !prof !6

1028:                                             ; preds = %1024
  %1029 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %230, align 8
  %1030 = zext i32 %1025 to i64
  %1031 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %1029, i64 %1030
  %1032 = bitcast %"class.mojo::StructPtr.769"* %1031 to i64*
  %1033 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %1031, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %1033, align 8
  %1034 = load i64, i64* %152, align 8
  store i64 %1034, i64* %1032, align 8
  store i64 0, i64* %152, align 8
  %1035 = load i32, i32* %228, align 4
  %1036 = add i32 %1035, 1
  store i32 %1036, i32* %228, align 4
  br label %1039

1037:                                             ; preds = %1024
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.766"* %227, %"class.mojo::StructPtr.769"* nonnull dereferenceable(8) %20) #10
  br label %1039

1038:                                             ; preds = %810
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %169)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171)
  br label %1039

1039:                                             ; preds = %1038, %1037, %1028, %1022, %608, %306
  %1040 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %1041 = icmp eq %"class.WTF::StringImpl"* %1040, null
  br i1 %1041, label %1055, label %1042

1042:                                             ; preds = %1039
  %1043 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1040, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1044 = load atomic i32, i32* %1043 monotonic, align 4
  %1045 = and i32 %1044, 2
  %1046 = icmp eq i32 %1045, 0
  %1047 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1040, i64 0, i32 0
  %1048 = load i32, i32* %1047, align 4
  br i1 %1046, label %1049, label %1051

1049:                                             ; preds = %1042
  %1050 = add i32 %1048, -1
  store i32 %1050, i32* %1047, align 4
  br label %1051

1051:                                             ; preds = %1049, %1042
  %1052 = phi i32 [ %1050, %1049 ], [ %1048, %1042 ]
  %1053 = icmp eq i32 %1052, 0
  br i1 %1053, label %1054, label %1055

1054:                                             ; preds = %1051
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1040) #10
  br label %1055

1055:                                             ; preds = %1039, %1051, %1054
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #10
  %1056 = load %"class.schema_org::mojom::blink::Property"*, %"class.schema_org::mojom::blink::Property"** %151, align 8
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %151, align 8
  %1057 = icmp eq %"class.schema_org::mojom::blink::Property"* %1056, null
  br i1 %1057, label %1060, label %1058

1058:                                             ; preds = %1055
  call void @_ZN10schema_org5mojom5blink8PropertyD1Ev(%"class.schema_org::mojom::blink::Property"* nonnull %1056) #10
  %1059 = bitcast %"class.schema_org::mojom::blink::Property"* %1056 to i8*
  call void @_ZdlPv(i8* %1059) #11
  br label %1060

1060:                                             ; preds = %1055, %1058
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #10
  %1061 = add nuw i32 %249, 1
  %1062 = load i32, i32* %146, align 4
  %1063 = icmp ult i32 %1062, 20
  %1064 = select i1 %1063, i32 %1062, i32 20
  %1065 = icmp ult i32 %1061, %1064
  br i1 %1065, label %248, label %231

1066:                                             ; preds = %3, %247
  ret void
}

declare void @_ZN10schema_org5mojom5blink6EntityC1Ev(%"class.schema_org::mojom::blink::Entity"*) unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.1442"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #10
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #10
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1442"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #10
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1442"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.1442"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.1442"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #10
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #10
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #10
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.1442"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1442"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !6

91:                                               ; preds = %82
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #10
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1442"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.1442"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.1442", %"class.WTF::HashTable.1442"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #10
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i8* %22, i8* %23) #10
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #10
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #10
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #10
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.1442"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #10
  ret %"class.WTF::AtomicString"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10JSONObject10GetBooleanERKN3WTF6StringEPb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink6Values15set_bool_valuesEN3WTF6VectorIbLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"*, %"class.WTF::Vector.472"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10JSONObject10GetIntegerERKN3WTF6StringEPi(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32*) local_unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink6Values15set_long_valuesEN3WTF6VectorIlLj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"*, %"class.WTF::Vector.777"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink10JSONObject9GetDoubleERKN3WTF6StringEPd(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), double*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #2

declare void @_ZN3WTF6String8TruncateEj(%"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink6Values17set_string_valuesEN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"*, %"class.WTF::Vector.652"*) local_unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink6Values17set_entity_valuesEN3WTF6VectorIN4mojo9StructPtrINS1_6EntityEEELj0ENS3_18PartitionAllocatorEEE(%"class.schema_org::mojom::blink::Values"*, %"class.WTF::Vector.759"*) local_unnamed_addr #2

declare %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.mojo::StructPtr.762"* @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.759"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %24, i64 %25
  ret %"class.mojo::StructPtr.762"* %26
}

declare %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink8PropertyC1Ev(%"class.schema_org::mojom::blink::Property"*) unnamed_addr #2

declare void @_ZN10schema_org5mojom5blink6ValuesC1Ev(%"class.schema_org::mojom::blink::Values"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10schema_org5mojom5blink6ValuesD1Ev(%"class.schema_org::mojom::blink::Values"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #10
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIbLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRbEEvOT_(%"class.WTF::Vector.472"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #10
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.472"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #10
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #10
  %44 = bitcast %"class.WTF::Vector.472"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.472", %"class.WTF::Vector.472"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !2

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIbEEmm(i64 %62) #10
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIbEEPKcv, i64 0, i64 0)) #10
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #10
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #10
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.472"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1, !range !7
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIlLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.777"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.777", %"class.WTF::Vector.777"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq i64* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIlEEmm(i64 %20) #10
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIlEEPKcv, i64 0, i64 0)) #10
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.777"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load i64*, i64** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i64* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast i64* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #10
  %36 = bitcast %"class.WTF::Vector.777"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #10
  %40 = bitcast %"class.WTF::Vector.777"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to i64*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi i64* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i64, i64* %46, i64 %48
  %50 = load i32, i32* %1, align 4
  %51 = sext i32 %50 to i64
  store i64 %51, i64* %49, align 8
  %52 = load i32, i32* %3, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.652"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.652"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.652"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.652"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.652", %"class.WTF::Vector.652"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #10
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #10
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.652"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #10
  %87 = bitcast %"class.WTF::Vector.652"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #10
  %91 = bitcast %"class.WTF::Vector.652"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #10
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !6

122:                                              ; preds = %113
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.766"*, %"class.mojo::StructPtr.769"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.769"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.769"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.769"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.769"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.766"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.769"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.769"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.769"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.769"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.766"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.769"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.769"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.769"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.769"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.769"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10schema_org5mojom5blink8PropertyD1Ev(%"class.schema_org::mojom::blink::Property"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.766"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.769"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.769"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.769"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.769"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.769"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !24

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.769"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.769"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.769"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.769"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.769"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.769"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.769"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.769"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.769"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.769"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.769"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.769"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.769"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.769"*, %"class.mojo::StructPtr.769"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.769"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.769"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.769"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.769"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.769"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.769"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !26

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.769"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.769"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.769"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.769"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.769"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.769"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.769"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.769"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.769"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.769"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.769"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.769"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Property"* null, %"class.schema_org::mojom::blink::Property"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.769", %"class.mojo::StructPtr.769"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.769"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.766"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.766"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.766", %"class.WTF::Vector.766"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink8PropertyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.759"*, %"class.mojo::StructPtr.762"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.762"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.762"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.762"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.762"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.759"* %0, i32 %22) #10
  %36 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.762"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.762"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.762"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.762"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.759"* %0, i32 %50) #10
  %64 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.762"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.762"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.762"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.762"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.762"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN10schema_org5mojom5blink6EntityD1Ev(%"class.schema_org::mojom::blink::Entity"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.759"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.762"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.762"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.762"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.762"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.762"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !27

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.762"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.762"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.762"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.762"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.762"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.762"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.762"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.762"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.762"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.762"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.762"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.762"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.762"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #10
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEmm(i64 %73) #10
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEPKcv, i64 0, i64 0)) #10
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.762"*, %"class.mojo::StructPtr.762"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.762"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.762"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.762"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.762"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.762"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.762"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !28

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.762"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.762"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.762"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.762"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.762"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.762"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.762"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.762"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.762"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.762"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.762"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.762"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.schema_org::mojom::blink::Entity"* null, %"class.schema_org::mojom::blink::Entity"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.762", %"class.mojo::StructPtr.762"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.762"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.759"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #10
  %149 = bitcast %"class.WTF::Vector.759"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.759", %"class.WTF::Vector.759"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN10schema_org5mojom5blink6EntityEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.26, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.27, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink7WebPageD1Ev(%"class.blink::mojom::blink::WebPage"*) unnamed_addr #3

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink5mojom5blink7WebPageC1Ev(%"class.blink::mojom::blink::WebPage"*) unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink5mojom5blink7WebPage3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink5mojom5blink7WebPage3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!11 = !{!"branch_weights", i32 1, i32 1048575}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN10schema_org5mojom5blink8Property3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZN10schema_org5mojom5blink8Property3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN10schema_org5mojom5blink6Values3NewEv: argument 0"}
!17 = distinct !{!17, !"_ZN10schema_org5mojom5blink6Values3NewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!23 = distinct !{!23, !"_ZN10schema_org5mojom5blink6Entity3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !25}
