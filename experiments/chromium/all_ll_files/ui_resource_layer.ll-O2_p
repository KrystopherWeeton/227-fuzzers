; ModuleID = '../../cc/layers/ui_resource_layer.cc'
source_filename = "../../cc/layers/ui_resource_layer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::UIResourceLayer" = type { %"class.cc::Layer", i32, %class.SkBitmap, %"class.gfx::PointF", %"class.gfx::PointF", [4 x float] }
%"class.cc::Layer" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.cc::Layer"*, %"class.cc::LayerTreeHost"*, %"struct.cc::Layer::Inputs", %"class.std::__1::unique_ptr.492", i32, i32, i32, i32, i32, i32, %"class.gfx::Vector2dF", i8, i16, [5 x i8], %"class.std::__1::unique_ptr.506" }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::LayerTreeHost" = type { %"class.cc::MutatorHostClient", %"class.cc::MicroBenchmarkController", %"class.base::WeakPtr", %class.scoped_refptr.10, %"class.std::__1::unique_ptr.11", i32, %"class.std::__1::unique_ptr.15", %"class.cc::LayerTreeHostClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", i32, %"class.std::__1::unique_ptr.103", %"class.cc::SwapPromiseManager", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.125", %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeDebugState", i8, i8, i8, i32, i8, i8, i8, %"class.cc::TaskGraphRunner"*, %"class.gfx::RenderingPipeline"*, %"class.gfx::RenderingPipeline"*, i32, %class.scoped_refptr.140, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.cc::OverscrollBehavior", %"struct.cc::BrowserControlsParams", float, float, float, float, float, float, float, float, float, i8, i8, %"class.gfx::DisplayColorSpaces", i8, %"class.viz::LocalSurfaceId", i8, i32, i32, i32, %"struct.viz::Selection", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Size", i8, i8, [4 x i32], %"class.std::__1::unique_ptr.141", i8, %"class.cc::PropertyTrees", i8, i8, %"class.gfx::Vector2dF", %class.scoped_refptr.318, %"class.base::flat_map.319", %"class.base::internal::flat_tree.329", %"class.std::__1::unordered_map.337", %"class.std::__1::unordered_map.361", i8, i8, %"class.cc::MutatorHost"*, %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::vector.387", %"class.std::__1::unordered_map.395", %"class.std::__1::vector.419", %"struct.cc::LayerTreeHost::ScrollAnimationState", %"class.std::__1::unique_ptr.429", %"class.base::TimeTicks", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.450", %"class.std::__1::vector.456", %"class.base::flat_map.464", %"class.base::WeakPtrFactory.474" }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::MicroBenchmarkController" = type { %"class.cc::LayerTreeHost"*, %"class.std::__1::vector", %class.scoped_refptr.1 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::unique_ptr"* }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.4", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl.8" }
%"struct.std::__1::__cxx_atomic_impl.8" = type { %"struct.std::__1::__cxx_atomic_base_impl.9" }
%"struct.std::__1::__cxx_atomic_base_impl.9" = type { i8 }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.cc::UkmRecorderFactory"* }
%"class.cc::UkmRecorderFactory" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.cc::UIResourceManager"* }
%"class.cc::UIResourceManager" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::vector.37", %"class.std::__1::unordered_map.60" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.18", %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.34", [4 x i8] }>
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20", %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { float }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.55" }
%"class.cc::UIResourceRequest" = type { i32, i32, %"class.std::__1::unique_ptr.39" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cc::UIResourceBitmap"* }
%"class.cc::UIResourceBitmap" = type { %class.sk_sp, i32, %struct.SkImageInfo }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.42", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.47", i8, [6 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.5" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.47", [3 x i8] }
%"struct.std::__1::atomic.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.51, i32, i32 }
%class.sk_sp.51 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.cc::UIResourceRequest"* }
%"class.std::__1::unordered_map.60" = type { %"class.std::__1::__hash_table.61" }
%"class.std::__1::__hash_table.61" = type <{ %"class.std::__1::unique_ptr.62", %"class.std::__1::__compressed_pair.72", %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64", %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base.65"** }
%"struct.std::__1::__hash_node_base.65" = type { %"struct.std::__1::__hash_node_base.65"* }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.std::__1::__bucket_list_deallocator.67" }
%"class.std::__1::__bucket_list_deallocator.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.std::__1::__hash_node_base.65" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.cc::LayerTreeHostClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.cc::Proxy"* }
%"class.cc::Proxy" = type { i32 (...)** }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.cc::TaskRunnerProvider"* }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.1, %class.scoped_refptr.1 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.cc::RenderingStatsInstrumentation"* }
%"class.cc::RenderingStatsInstrumentation" = type opaque
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.109", %"class.std::__1::set" }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.std::__1::unique_ptr.111"*, %"class.std::__1::unique_ptr.111"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::unique_ptr.111"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.cc::LayerTreeFrameSink"* }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.128, %class.scoped_refptr.129, %class.scoped_refptr.1, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.130", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type opaque
%class.scoped_refptr.128 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.129 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.base::TimeDelta" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::TaskGraphRunner" = type opaque
%"class.gfx::RenderingPipeline" = type { i32 (...)** }
%class.scoped_refptr.140 = type { %"class.cc::Layer"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map", %"class.base::flat_map", %"class.base::flat_map", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.147" }
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.149" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::pair"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.161", %"class.std::__1::vector.168", %"class.std::__1::vector.175" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.154", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.156" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.161" = type { %"class.std::__1::__vector_base.162" }
%"class.std::__1::__vector_base.162" = type { i32*, i32*, %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i32* }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.170" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.177" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.182", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.247" }
%"class.cc::PropertyTree.182" = type { i32 (...)**, %"class.std::__1::vector.183", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.183" = type { %"class.std::__1::__vector_base.184" }
%"class.std::__1::__vector_base.184" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.219" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.206", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.185" }
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.201" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.187, [20 x float], i32, [4 x i8], %"class.std::__1::vector.194", i32, [4 x i8] }>
%class.sk_sp.187 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.188, i32, %"class.absl::optional.189", i8, i32 }
%class.sk_sp.188 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.206" = type { %"class.absl::optional_internal::optional_data.207" }
%"class.absl::optional_internal::optional_data.207" = type { %"class.absl::optional_internal::optional_data_base.208" }
%"class.absl::optional_internal::optional_data_base.208" = type { %"class.absl::optional_internal::optional_data_dtor_base.209" }
%"class.absl::optional_internal::optional_data_dtor_base.209" = type { i8, %union.anon.210 }
%union.anon.210 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.211" }
%"class.base::internal::flat_tree.211" = type { %"class.std::__1::vector.212" }
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { i32*, i32*, %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { i32* }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.224" }
%"class.std::__1::__hash_table.224" = type <{ %"class.std::__1::unique_ptr.225", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.243", [4 x i8] }>
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::__hash_node_base.228"** }
%"struct.std::__1::__hash_node_base.228" = type { %"struct.std::__1::__hash_node_base.228"* }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::__bucket_list_deallocator.230" }
%"class.std::__1::__bucket_list_deallocator.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.228" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.247" = type { %"class.std::__1::__vector_base.248" }
%"class.std::__1::__vector_base.248" = type { %"class.std::__1::unique_ptr.249"*, %"class.std::__1::unique_ptr.249"*, %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.252" }
%"class.cc::LayerTreeImpl" = type opaque
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::unique_ptr.249"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.266" }
%"class.cc::PropertyTree.266" = type { i32 (...)**, %"class.std::__1::vector.267", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.269" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.274", i32, %"class.base::flat_map.282", %"class.base::flat_map.292", %"class.base::WeakPtr.302" }
%"class.cc::PropertyTree.274" = type { i32 (...)**, %"class.std::__1::vector.275", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.277" }
%"struct.cc::ScrollNode" = type opaque
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.282" = type { %"class.base::internal::flat_tree.283" }
%"class.base::internal::flat_tree.283" = type { %"class.std::__1::vector.284" }
%"class.std::__1::vector.284" = type { %"class.std::__1::__vector_base.285" }
%"class.std::__1::__vector_base.285" = type { %"struct.std::__1::pair.286"*, %"struct.std::__1::pair.286"*, %"class.std::__1::__compressed_pair.287" }
%"struct.std::__1::pair.286" = type opaque
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::pair.286"* }
%"class.base::flat_map.292" = type { %"class.base::internal::flat_tree.293" }
%"class.base::internal::flat_tree.293" = type { %"class.std::__1::vector.294" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.std::__1::pair.296"*, %"struct.std::__1::pair.296"*, %"class.std::__1::__compressed_pair.297" }
%"struct.std::__1::pair.296" = type opaque
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"struct.std::__1::pair.296"* }
%"class.base::WeakPtr.302" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.303", %"class.std::__1::vector.310" }
%"class.std::__1::vector.303" = type { %"class.std::__1::__vector_base.304" }
%"class.std::__1::__vector_base.304" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.305" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"class.std::__1::vector.312"*, %"class.std::__1::vector.312"*, %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::vector.312" = type opaque
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.std::__1::vector.312"* }
%class.scoped_refptr.318 = type { %"class.cc::HeadsUpDisplayLayer"* }
%"class.cc::HeadsUpDisplayLayer" = type opaque
%"class.base::flat_map.319" = type { %"class.base::internal::flat_tree.320" }
%"class.base::internal::flat_tree.320" = type { %"class.std::__1::vector.321" }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"struct.std::__1::pair.323"*, %"struct.std::__1::pair.323"*, %"class.std::__1::__compressed_pair.324" }
%"struct.std::__1::pair.323" = type opaque
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::pair.323"* }
%"class.base::internal::flat_tree.329" = type { %"class.std::__1::vector.330" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"class.cc::Layer"**, %"class.cc::Layer"**, %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.cc::Layer"** }
%"class.std::__1::unordered_map.337" = type { %"class.std::__1::__hash_table.338" }
%"class.std::__1::__hash_table.338" = type <{ %"class.std::__1::unique_ptr.339", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.354", %"class.std::__1::__compressed_pair.357", [4 x i8] }>
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341", %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.342"** }
%"struct.std::__1::__hash_node_base.342" = type { %"struct.std::__1::__hash_node_base.342"* }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.std::__1::__bucket_list_deallocator.344" }
%"class.std::__1::__bucket_list_deallocator.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::__hash_node_base.342" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::unordered_map.361" = type { %"class.std::__1::__hash_table.362" }
%"class.std::__1::__hash_table.362" = type <{ %"class.std::__1::unique_ptr.363", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.378", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365", %"struct.std::__1::__compressed_pair_elem.367" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"struct.std::__1::__hash_node_base.366"** }
%"struct.std::__1::__hash_node_base.366" = type { %"struct.std::__1::__hash_node_base.366"* }
%"struct.std::__1::__compressed_pair_elem.367" = type { %"class.std::__1::__bucket_list_deallocator.368" }
%"class.std::__1::__bucket_list_deallocator.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.366" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::vector.387" = type { %"class.std::__1::__vector_base.388" }
%"class.std::__1::__vector_base.388" = type { %"struct.std::__1::pair.389"*, %"struct.std::__1::pair.389"*, %"class.std::__1::__compressed_pair.390" }
%"struct.std::__1::pair.389" = type opaque
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"struct.std::__1::pair.389"* }
%"class.std::__1::unordered_map.395" = type { %"class.std::__1::__hash_table.396" }
%"class.std::__1::__hash_table.396" = type <{ %"class.std::__1::unique_ptr.397", %"class.std::__1::__compressed_pair.407", %"class.std::__1::__compressed_pair.412", %"class.std::__1::__compressed_pair.415", [4 x i8] }>
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399", %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.std::__1::__hash_node_base.400"** }
%"struct.std::__1::__hash_node_base.400" = type { %"struct.std::__1::__hash_node_base.400"* }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.std::__1::__bucket_list_deallocator.402" }
%"class.std::__1::__bucket_list_deallocator.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.400" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.421" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.base::OnceCallback"* }
%"struct.cc::LayerTreeHost::ScrollAnimationState" = type { i8, %"class.base::OnceCallback.426" }
%"class.base::OnceCallback.426" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.427 }
%class.scoped_refptr.427 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.428", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.428" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"struct.cc::BeginMainFrameMetrics"* }
%"struct.cc::BeginMainFrameMetrics" = type <{ %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.435", %"class.std::__1::vector.442" }
%"class.std::__1::vector.435" = type { %"class.std::__1::__vector_base.436" }
%"class.std::__1::__vector_base.436" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.437" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::vector.442" = type { %"class.std::__1::__vector_base.443" }
%"class.std::__1::__vector_base.443" = type { %"class.std::__1::unique_ptr.444"*, %"class.std::__1::unique_ptr.444"*, %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.556", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.556" = type { %"class.absl::optional_internal::optional_data.557" }
%"class.absl::optional_internal::optional_data.557" = type { %"class.absl::optional_internal::optional_data_base.558" }
%"class.absl::optional_internal::optional_data_base.558" = type { %"class.absl::optional_internal::optional_data_dtor_base.559" }
%"class.absl::optional_internal::optional_data_dtor_base.559" = type { i8, %union.anon.560 }
%union.anon.560 = type { i32 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.std::__1::unique_ptr.444"* }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.456" = type { %"class.std::__1::__vector_base.457" }
%"class.std::__1::__vector_base.457" = type { %"class.std::__1::unique_ptr.458"*, %"class.std::__1::unique_ptr.458"*, %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::unique_ptr.458" = type opaque
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::unique_ptr.458"* }
%"class.base::flat_map.464" = type { %"class.base::internal::flat_tree.465" }
%"class.base::internal::flat_tree.465" = type { %"class.std::__1::vector.466" }
%"class.std::__1::vector.466" = type { %"class.std::__1::__vector_base.467" }
%"class.std::__1::__vector_base.467" = type { %"struct.std::__1::pair.468"*, %"struct.std::__1::pair.468"*, %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::pair.468" = type opaque
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"struct.std::__1::pair.468"* }
%"class.base::WeakPtrFactory.474" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::Layer::Inputs" = type { %"class.std::__1::vector.475", %"class.gfx::Rect", %"class.gfx::Size", i32, i8, i32, %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", %"struct.cc::ElementId" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %class.scoped_refptr.140*, %class.scoped_refptr.140*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %class.scoped_refptr.140* }
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.482" }
%"class.base::flat_map.482" = type { %"class.base::internal::flat_tree.483" }
%"class.base::internal::flat_tree.483" = type { %"class.std::__1::vector.484" }
%"class.std::__1::vector.484" = type { %"class.std::__1::__vector_base.485" }
%"class.std::__1::__vector_base.485" = type { %"struct.std::__1::pair.486"*, %"struct.std::__1::pair.486"*, %"class.std::__1::__compressed_pair.487" }
%"struct.std::__1::pair.486" = type opaque
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"struct.std::__1::pair.486"* }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"struct.cc::Layer::LayerTreeInputs"* }
%"struct.cc::Layer::LayerTreeInputs" = type { %"class.gfx::Rect", %"class.cc::PictureLayer"*, float, i32, i8, %"class.gfx::PointF", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.viz::SubtreeCaptureId", i32, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.206", float, i32, %"class.gfx::ScrollOffset", %"class.gfx::Size", %"class.gfx::RoundedCornersF", %"class.base::RepeatingCallback", %"class.std::__1::vector.495" }
%"class.cc::PictureLayer" = type opaque
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::RoundedCornersF" = type { float, float, float, float }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::vector.495" = type { %"class.std::__1::__vector_base.496" }
%"class.std::__1::__vector_base.496" = type { %"class.std::__1::unique_ptr.497"*, %"class.std::__1::unique_ptr.497"*, %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::unique_ptr.497" = type opaque
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.std::__1::unique_ptr.497"* }
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.515", %"class.std::__1::vector.515", %"class.std::__1::vector.522" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.511 }
%union.anon.511 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.515" = type { %"class.std::__1::__vector_base.516" }
%"class.std::__1::__vector_base.516" = type { i8**, i8**, %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { i8** }
%"class.std::__1::vector.522" = type { %"class.std::__1::__vector_base.523" }
%"class.std::__1::__vector_base.523" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.524" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.525" }
%"struct.std::__1::__compressed_pair_elem.525" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.532 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.532 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::PointF" = type { float, float }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.506", %"class.std::__1::unique_ptr.536", i8, [7 x i8] }>
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.536" = type { %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.cc::Region"* }
%"class.cc::UIResourceLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.gfx::Size", i32, %"class.gfx::PointF", %"class.gfx::PointF", [4 x float] }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.506", %"class.std::__1::unique_ptr.536", i8 }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::vector.551" = type opaque
%class.sk_sp.552 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.47", [7 x i8] }>
%"class.cc::MicroBenchmark" = type { i32 (...)**, %"class.base::OnceCallback.553", i8, i8, i32 }
%"class.base::OnceCallback.553" = type { %"class.base::internal::CallbackBase" }

@_ZTVN2cc15UIResourceLayerE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::Layer"*, i32)* @_ZN2cc5Layer18SetBackgroundColorEj to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*)* @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.cc::Layer"*, float)* @_ZN2cc5Layer10SetOpacityEf to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer11HitTestableEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.gfx::Rect"*, %"class.std::__1::vector.551"*)* @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%class.sk_sp.552*, %"class.cc::Layer"*)* @_ZNK2cc5Layer10GetPictureEv to i8*), i8* bitcast (void (%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*)* @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE to i8*), i8* bitcast (%"class.cc::LayerImpl"* (%"class.cc::UIResourceLayer"*, %"class.cc::LayerTreeImpl"*)* @_ZN2cc15UIResourceLayer15CreateLayerImplEPNS_13LayerTreeImplE to i8*), i8* bitcast (void (%"class.cc::UIResourceLayer"*, %"class.cc::LayerImpl"*)* @_ZN2cc15UIResourceLayer16PushPropertiesToEPNS_9LayerImplE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer6UpdateEv to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv to i8*), i8* bitcast (void (%"class.cc::UIResourceLayer"*, %"class.cc::LayerTreeHost"*)* @_ZN2cc15UIResourceLayer16SetLayerTreeHostEPNS_13LayerTreeHostE to i8*), i8* bitcast (i1 (%"class.cc::Layer"*)* @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv to i8*), i8* bitcast (void (%"class.cc::UIResourceLayer"*)* @_ZN2cc15UIResourceLayerD2Ev to i8*), i8* bitcast (void (%"class.cc::UIResourceLayer"*)* @_ZN2cc15UIResourceLayerD0Ev to i8*), i8* bitcast (i1 (%"class.cc::UIResourceLayer"*)* @_ZNK2cc15UIResourceLayer18HasDrawableContentEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"UIResourceLayer::PushPropertiesTo\00", align 1

@_ZN2cc15UIResourceLayerC1Ev = hidden unnamed_addr alias void (%"class.cc::UIResourceLayer"*), void (%"class.cc::UIResourceLayer"*)* @_ZN2cc15UIResourceLayerC2Ev
@_ZN2cc15UIResourceLayerD1Ev = hidden unnamed_addr alias void (%"class.cc::UIResourceLayer"*), void (%"class.cc::UIResourceLayer"*)* @_ZN2cc15UIResourceLayerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.cc::UIResourceLayer"* @_ZN2cc15UIResourceLayer6CreateEv() local_unnamed_addr #0 align 2 {
  %1 = tail call i8* @_Znwm(i64 328) #6
  %2 = bitcast i8* %1 to %"class.cc::UIResourceLayer"*
  %3 = bitcast i8* %1 to %"class.cc::Layer"*
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* nonnull %3) #7
  %4 = bitcast i8* %1 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc15UIResourceLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 232
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %1, i64 240
  %8 = bitcast i8* %7 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %8) #7
  %9 = getelementptr inbounds i8, i8* %1, i64 296
  %10 = bitcast i8* %9 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %10, align 4
  %11 = getelementptr inbounds i8, i8* %1, i64 312
  %12 = bitcast i8* %11 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to %"class.base::subtle::RefCountedBase"*
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #7
  ret %"class.cc::UIResourceLayer"* %2
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayerC2Ev(%"class.cc::UIResourceLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"* %2) #7
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc15UIResourceLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %5) #7
  %6 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 3, i32 0
  %7 = bitcast float* %6 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %7, align 4
  %8 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 0
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 8
  ret void
}

declare void @_ZN2cc5LayerC2Ev(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayerD2Ev(%"class.cc::UIResourceLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc15UIResourceLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayerD0Ev(%"class.cc::UIResourceLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN2cc15UIResourceLayerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5LayerD2Ev(%"class.cc::Layer"* %4) #7
  %5 = bitcast %"class.cc::UIResourceLayer"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::LayerImpl"* @_ZN2cc15UIResourceLayer15CreateLayerImplEPNS_13LayerTreeImplE(%"class.cc::UIResourceLayer"* nocapture readonly, %"class.cc::LayerTreeImpl"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 5, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = tail call i8* @_Znwm(i64 680) #6
  %6 = bitcast i8* %5 to %"class.cc::UIResourceLayerImpl"*
  tail call void @_ZN2cc19UIResourceLayerImplC1EPNS_13LayerTreeImplEi(%"class.cc::UIResourceLayerImpl"* nonnull %6, %"class.cc::LayerTreeImpl"* %1, i32 %4) #7
  %7 = bitcast i8* %5 to %"class.cc::LayerImpl"*
  ret %"class.cc::LayerImpl"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer5SetUVERKN3gfx6PointFES4_(%"class.cc::UIResourceLayer"*, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp oeq float %6, %8
  br i1 %9, label %10, label %28

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 3, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %12, %14
  br i1 %15, label %16, label %28

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 4, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %18, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 4, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %2, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp oeq float %24, %26
  br i1 %27, label %37, label %28

28:                                               ; preds = %16, %3, %22, %10
  %29 = bitcast %"class.gfx::PointF"* %1 to i64*
  %30 = bitcast %"class.gfx::PointF"* %4 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 8
  %32 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 4
  %33 = bitcast %"class.gfx::PointF"* %2 to i64*
  %34 = bitcast %"class.gfx::PointF"* %32 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %36) #7
  br label %37

37:                                               ; preds = %22, %28
  ret void
}

declare void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer16SetVertexOpacityEffff(%"class.cc::UIResourceLayer"*, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 0
  %7 = load float, float* %6, align 8
  %8 = fcmp oeq float %7, %1
  br i1 %8, label %9, label %21

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 1
  %11 = load float, float* %10, align 4
  %12 = fcmp oeq float %11, %2
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 2
  %15 = load float, float* %14, align 8
  %16 = fcmp oeq float %15, %3
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 3
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %19, %4
  br i1 %20, label %26, label %21

21:                                               ; preds = %17, %13, %9, %5
  store float %1, float* %6, align 8
  %22 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 1
  store float %2, float* %22, align 4
  %23 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 2
  store float %3, float* %23, align 8
  %24 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 3
  store float %4, float* %24, align 4
  %25 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %25) #7
  br label %26

26:                                               ; preds = %17, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::UIResourceLayer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 4
  %5 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %4, align 8
  %6 = icmp eq %"class.cc::LayerTreeHost"* %5, %1
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  tail call void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"* %3, %"class.cc::LayerTreeHost"* %1) #7
  tail call void @_ZN2cc15UIResourceLayer30RecreateUIResourceIdFromBitmapEv(%"class.cc::UIResourceLayer"* %0)
  %8 = bitcast %"class.cc::UIResourceLayer"* %0 to i1 (%"class.cc::UIResourceLayer"*)***
  %9 = load i1 (%"class.cc::UIResourceLayer"*)**, i1 (%"class.cc::UIResourceLayer"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %9, i64 16
  %11 = load i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.cc::UIResourceLayer"* %0) #7
  tail call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %3, i1 zeroext %12) #7
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN2cc5Layer16SetLayerTreeHostEPNS_13LayerTreeHostE(%"class.cc::Layer"*, %"class.cc::LayerTreeHost"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer30RecreateUIResourceIdFromBitmapEv(%"class.cc::UIResourceLayer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2, i32 1, i32 2, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2, i32 1, i32 2, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %25, label %10

10:                                               ; preds = %6
  %11 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %2, %class.SkBitmap* dereferenceable(56) %2) #7
  %12 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 4
  %14 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %13, align 8
  %15 = icmp eq %"class.cc::LayerTreeHost"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %10
  %17 = tail call %"class.cc::UIResourceManager"* @_ZNK2cc13LayerTreeHost20GetUIResourceManagerEv(%"class.cc::LayerTreeHost"* nonnull %14) #7
  %18 = tail call i32 @_ZN2cc17UIResourceManager21GetOrCreateUIResourceERK8SkBitmap(%"class.cc::UIResourceManager"* %17, %class.SkBitmap* dereferenceable(56) %2) #7
  %19 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  store i32 %18, i32* %19, align 8
  %20 = bitcast %"class.cc::UIResourceLayer"* %0 to i1 (%"class.cc::UIResourceLayer"*)***
  %21 = load i1 (%"class.cc::UIResourceLayer"*)**, i1 (%"class.cc::UIResourceLayer"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %21, i64 16
  %23 = load i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.cc::UIResourceLayer"* %0) #7
  tail call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %12, i1 zeroext %24) #7
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %12) #7
  br label %25

25:                                               ; preds = %1, %16, %10, %6
  ret void
}

declare void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer9SetBitmapERK8SkBitmap(%"class.cc::UIResourceLayer"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %3, %class.SkBitmap* dereferenceable(56) %1) #7
  %5 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 4
  %7 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %6, align 8
  %8 = icmp eq %"class.cc::LayerTreeHost"* %7, null
  br i1 %8, label %18, label %9

9:                                                ; preds = %2
  %10 = tail call %"class.cc::UIResourceManager"* @_ZNK2cc13LayerTreeHost20GetUIResourceManagerEv(%"class.cc::LayerTreeHost"* nonnull %7) #7
  %11 = tail call i32 @_ZN2cc17UIResourceManager21GetOrCreateUIResourceERK8SkBitmap(%"class.cc::UIResourceManager"* %10, %class.SkBitmap* dereferenceable(56) %1) #7
  %12 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = bitcast %"class.cc::UIResourceLayer"* %0 to i1 (%"class.cc::UIResourceLayer"*)***
  %14 = load i1 (%"class.cc::UIResourceLayer"*)**, i1 (%"class.cc::UIResourceLayer"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %14, i64 16
  %16 = load i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.cc::UIResourceLayer"* %0) #7
  tail call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %5, i1 zeroext %17) #7
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %5) #7
  br label %18

18:                                               ; preds = %2, %9
  ret void
}

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer23SetUIResourceIdInternalEi(%"class.cc::UIResourceLayer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %5 = bitcast %"class.cc::UIResourceLayer"* %0 to i1 (%"class.cc::UIResourceLayer"*)***
  %6 = load i1 (%"class.cc::UIResourceLayer"*)**, i1 (%"class.cc::UIResourceLayer"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %6, i64 16
  %8 = load i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.cc::UIResourceLayer"* %0) #7
  tail call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %4, i1 zeroext %9) #7
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %4) #7
  ret void
}

declare %"class.cc::UIResourceManager"* @_ZNK2cc13LayerTreeHost20GetUIResourceManagerEv(%"class.cc::LayerTreeHost"*) local_unnamed_addr #2

declare i32 @_ZN2cc17UIResourceManager21GetOrCreateUIResourceERK8SkBitmap(%"class.cc::UIResourceManager"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer15SetUIResourceIdEi(%"class.cc::UIResourceLayer"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmap5resetEv(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  store i32 %1, i32* %4, align 8
  %8 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %9 = bitcast %"class.cc::UIResourceLayer"* %0 to i1 (%"class.cc::UIResourceLayer"*)***
  %10 = load i1 (%"class.cc::UIResourceLayer"*)**, i1 (%"class.cc::UIResourceLayer"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %10, i64 16
  %12 = load i1 (%"class.cc::UIResourceLayer"*)*, i1 (%"class.cc::UIResourceLayer"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.cc::UIResourceLayer"* %0) #7
  tail call void @_ZN2cc5Layer18UpdateDrawsContentEb(%"class.cc::Layer"* %8, i1 zeroext %13) #7
  tail call void @_ZN2cc5Layer14SetNeedsCommitEv(%"class.cc::Layer"* %8) #7
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

declare void @_ZN8SkBitmap5resetEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc15UIResourceLayer18HasDrawableContentEv(%"class.cc::UIResourceLayer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK2cc5Layer18HasDrawableContentEv(%"class.cc::Layer"* %6) #7
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i1 [ false, %1 ], [ %7, %5 ]
  ret i1 %9
}

declare zeroext i1 @_ZNK2cc5Layer18HasDrawableContentEv(%"class.cc::Layer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15UIResourceLayer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::UIResourceLayer"*, %"class.cc::LayerImpl"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Size"*
  %6 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0
  tail call void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"* %6, %"class.cc::LayerImpl"* %1) #7
  %7 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %8 = and i8 %7, 25
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %2
  %11 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %12 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  %13 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %14 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %14, i64* %13, align 8
  %15 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %11, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  br label %16

16:                                               ; preds = %2, %10
  %17 = phi i64 [ -6148914691236517206, %2 ], [ %15, %10 ]
  %18 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %10 ]
  %19 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %10 ]
  %20 = bitcast %"class.cc::LayerImpl"* %1 to %"class.cc::UIResourceLayerImpl"*
  %21 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  call void @_ZN2cc19UIResourceLayerImpl15SetUIResourceIdEi(%"class.cc::UIResourceLayerImpl"* %20, i32 %22) #7
  %23 = load i32, i32* %21, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %16
  %26 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = bitcast i64* %4 to i32*
  store i32 -1431655766, i32* %27, align 8
  %28 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  store i32 -1431655766, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 0, i32 4
  %30 = load %"class.cc::LayerTreeHost"*, %"class.cc::LayerTreeHost"** %29, align 8
  %31 = call %"class.cc::UIResourceManager"* @_ZNK2cc13LayerTreeHost20GetUIResourceManagerEv(%"class.cc::LayerTreeHost"* %30) #7
  %32 = load i32, i32* %21, align 8
  %33 = bitcast %"class.cc::UIResourceManager"* %31 to i64 (%"class.cc::UIResourceManager"*, i32)***
  %34 = load i64 (%"class.cc::UIResourceManager"*, i32)**, i64 (%"class.cc::UIResourceManager"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.cc::UIResourceManager"*, i32)*, i64 (%"class.cc::UIResourceManager"*, i32)** %34, i64 4
  %36 = load i64 (%"class.cc::UIResourceManager"*, i32)*, i64 (%"class.cc::UIResourceManager"*, i32)** %35, align 8
  %37 = call i64 %36(%"class.cc::UIResourceManager"* %31, i32 %32) #7
  store i64 %37, i64* %4, align 8
  call void @_ZN2cc19UIResourceLayerImpl14SetImageBoundsERKN3gfx4SizeE(%"class.cc::UIResourceLayerImpl"* %20, %"class.gfx::Size"* nonnull dereferenceable(8) %5) #7
  %38 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 4
  call void @_ZN2cc19UIResourceLayerImpl5SetUVERKN3gfx6PointFES4_(%"class.cc::UIResourceLayerImpl"* %20, %"class.gfx::PointF"* dereferenceable(8) %38, %"class.gfx::PointF"* dereferenceable(8) %39) #7
  %40 = getelementptr inbounds %"class.cc::UIResourceLayer", %"class.cc::UIResourceLayer"* %0, i64 0, i32 5, i64 0
  call void @_ZN2cc19UIResourceLayerImpl16SetVertexOpacityEPKf(%"class.cc::UIResourceLayerImpl"* %20, float* %40) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  br label %41

41:                                               ; preds = %16, %25
  %42 = icmp eq i8* %19, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %41
  %44 = load i8, i8* %19, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %19, i8* %18, i64 %17) #7
  br label %47

47:                                               ; preds = %41, %43, %46
  ret void
}

declare void @_ZN2cc5Layer16PushPropertiesToEPNS_9LayerImplE(%"class.cc::Layer"*, %"class.cc::LayerImpl"*) unnamed_addr #2

declare void @_ZN2cc19UIResourceLayerImpl15SetUIResourceIdEi(%"class.cc::UIResourceLayerImpl"*, i32) local_unnamed_addr #2

declare void @_ZN2cc19UIResourceLayerImpl14SetImageBoundsERKN3gfx4SizeE(%"class.cc::UIResourceLayerImpl"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2cc19UIResourceLayerImpl5SetUVERKN3gfx6PointFES4_(%"class.cc::UIResourceLayerImpl"*, %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2cc19UIResourceLayerImpl16SetVertexOpacityEPKf(%"class.cc::UIResourceLayerImpl"*, float*) local_unnamed_addr #2

declare void @_ZN2cc5Layer18SetBackgroundColorEj(%"class.cc::Layer"*, i32) unnamed_addr #2

declare void @_ZN2cc5Layer19SetNeedsDisplayRectERKN3gfx4RectE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN2cc5Layer10SetOpacityEf(%"class.cc::Layer"*, float) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer11HitTestableEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer26IsScrollbarLayerForTestingEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer14CaptureContentERKN3gfx4RectEPNSt3__16vectorINS_8NodeInfoENS5_9allocatorIS7_EEEE(%"class.cc::Layer"*, %"class.gfx::Rect"* dereferenceable(16), %"class.std::__1::vector.551"*) unnamed_addr #2

declare void @_ZNK2cc5Layer10GetPictureEv(%class.sk_sp.552* sret, %"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc5Layer17RunMicroBenchmarkEPNS_14MicroBenchmarkE(%"class.cc::Layer"*, %"class.cc::MicroBenchmark"*) unnamed_addr #2

declare zeroext i1 @_ZN2cc5Layer6UpdateEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZN2cc5Layer28IsSnappedToPixelGridInTargetEv(%"class.cc::Layer"*) unnamed_addr #2

declare zeroext i1 @_ZNK2cc5Layer29OpacityCanAnimateOnImplThreadEv(%"class.cc::Layer"*) unnamed_addr #2

declare void @_ZN2cc19UIResourceLayerImplC1EPNS_13LayerTreeImplEi(%"class.cc::UIResourceLayerImpl"*, %"class.cc::LayerTreeImpl"*, i32) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
