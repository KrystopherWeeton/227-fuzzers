; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/upgrade_memory_model.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/upgrade_memory_model.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::UpgradeMemoryModel" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_map.910" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.930", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.942" = type { %"class.std::__1::__function::__policy_func.946" }
%"class.std::__1::__function::__policy_func.946" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.947", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.947" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::initializer_list" = type { %"struct.spvtools::opt::Operand"*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::vector.1029" = type { %"class.std::__1::__vector_base.1030" }
%"class.std::__1::__vector_base.1030" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.1031" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.1032" }
%"struct.std::__1::__compressed_pair_elem.1032" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1036" = type { %"class.std::__1::__function::__policy_func.1040" }
%"class.std::__1::__function::__policy_func.1040" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1041", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1041" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.1048" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { i32** }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::unordered_set.952" = type { %"class.std::__1::__hash_table.953" }
%"class.std::__1::__hash_table.953" = type <{ %"class.std::__1::unique_ptr.954", %"class.std::__1::__compressed_pair.964", %"class.std::__1::__compressed_pair.969", %"class.std::__1::__compressed_pair.971", [4 x i8] }>
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956", %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.std::__1::__hash_node_base.957"** }
%"struct.std::__1::__hash_node_base.957" = type { %"struct.std::__1::__hash_node_base.957"* }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.std::__1::__bucket_list_deallocator.959" }
%"class.std::__1::__bucket_list_deallocator.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"struct.std::__1::__hash_node_base.957" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.std::__1::tuple.1185" = type { %"struct.std::__1::__tuple_impl.1186" }
%"struct.std::__1::__tuple_impl.1186" = type { %"class.std::__1::__tuple_leaf.1187" }
%"class.std::__1::__tuple_leaf.1187" = type { %"struct.std::__1::pair.978"* }
%"struct.std::__1::pair.978" = type { i32, %"class.std::__1::vector.3" }
%"class.std::__1::tuple.1136" = type { i8 }
%"class.std::__1::function.1096" = type { %"class.std::__1::__function::__policy_func.1100" }
%"class.std::__1::__function::__policy_func.1100" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1101", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1101" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.982" = type { %"class.std::__1::__function::__policy_func.986" }
%"class.std::__1::__function::__policy_func.986" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.987", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.987" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"struct.std::__1::pair" = type { i8, i8 }
%"class.std::__1::function.1021" = type { %"class.std::__1::__function::__policy_func.1025" }
%"class.std::__1::__function::__policy_func.1025" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1026", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1026" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.std::__1::unordered_set.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1008", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.1011" = type { %"class.std::__1::__vector_base.1012" }
%"class.std::__1::__vector_base.1012" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.1013" }
%"class.std::__1::__compressed_pair.1013" = type { %"struct.std::__1::__compressed_pair_elem.1014" }
%"struct.std::__1::__compressed_pair_elem.1014" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::vector.1051" = type { %"class.std::__1::__vector_base.1052" }
%"class.std::__1::__vector_base.1052" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.1051", %"class.std::__1::map.1058" }
%"class.std::__1::map.1058" = type { %"class.std::__1::__tree.1059" }
%"class.std::__1::__tree.1059" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.std::__1::__tree_node.1147" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1148" }
%"struct.std::__1::__value_type.1148" = type { %"struct.std::__1::pair.1149" }
%"struct.std::__1::pair.1149" = type { i32, %"class.std::__1::vector.463" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node.1067" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1068" }
%"struct.std::__1::pair.1068" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::__tree_node.1076" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1077" }
%"struct.std::__1::pair.1077" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.1051" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::tuple.1133" = type { %"struct.std::__1::__tuple_impl.1134" }
%"struct.std::__1::__tuple_impl.1134" = type { %"class.std::__1::__tuple_leaf.1135" }
%"class.std::__1::__tuple_leaf.1135" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1120" = type { %"class.std::__1::__function::__policy_func.1124" }
%"class.std::__1::__function::__policy_func.1124" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1125", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1125" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.spvtools::opt::CacheHash" = type { i8 }
%"class.std::__1::basic_string.1163" = type { %"class.std::__1::__compressed_pair.1164" }
%"class.std::__1::__compressed_pair.1164" = type { %"struct.std::__1::__compressed_pair_elem.1165" }
%"struct.std::__1::__compressed_pair_elem.1165" = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__rep" = type { %union.anon.1166 }
%union.anon.1166 = type { %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__long" = type { i32*, i64, i64 }
%"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short" = type { [5 x i32], %struct.anon.1167 }
%struct.anon.1167 = type { %"struct.std::__1::__padding.1168", i8 }
%"struct.std::__1::__padding.1168" = type { [3 x i8] }
%"class.std::__1::__function::__default_alloc_func.1202" = type { %class.anon.988 }
%class.anon.988 = type { %"class.spvtools::opt::UpgradeMemoryModel"*, i8*, i8*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.952"** }
%class.anon.1226 = type { %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.std::__1::vector.1029"*, i8* }
%"class.std::__1::__function::__default_alloc_func.1227" = type { %class.anon.1226 }
%"struct.std::__1::__split_buffer.1236" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1044", %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.std::__1::allocator.1046"* }
%"class.std::__1::allocator.1046" = type { i8 }

$_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder19AddCompositeExtractEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE = comdat any

$_ZN8spvtools3opt18InstructionBuilder8AddStoreEjj = comdat any

$_ZN8spvtools3opt18UpgradeMemoryModelD2Ev = comdat any

$_ZN8spvtools3opt18UpgradeMemoryModelD0Ev = comdat any

$_ZNK8spvtools3opt18UpgradeMemoryModel4nameEv = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_ = comdat any

$_ZNK8spvtools3opt9CacheHashclERKNSt3__14pairIjNS2_6vectorIjNS2_9allocatorIjEEEEEE = comdat any

$_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.str = private unnamed_addr constant [28 x i8] c"SPV_KHR_vulkan_memory_model\00", align 1
@_ZTVN8spvtools3opt18UpgradeMemoryModelE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::UpgradeMemoryModel"*)* @_ZN8spvtools3opt18UpgradeMemoryModelD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::UpgradeMemoryModel"*)* @_ZN8spvtools3opt18UpgradeMemoryModelD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::UpgradeMemoryModel"*)* @_ZNK8spvtools3opt18UpgradeMemoryModel4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::UpgradeMemoryModel"*)* @_ZN8spvtools3opt18UpgradeMemoryModel7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@.str.5 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.7 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt8analysis6StructE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"upgrade-memory-model\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"GLSL.std.450\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel19UpgradeInstructionsEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS5_11InstructionEj14SpvDecoration_E3$_4FbRS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEvENK3$_5clEPNS5_11InstructionEEUlRKS8_E_FbSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEvE3$_5FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEENKUlPNS5_11InstructionEE_clESB_EUlPjE_FvSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvE3$_6FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18UpgradeMemoryModel7ProcessEv(%"class.spvtools::opt::UpgradeMemoryModel"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = alloca %"class.std::__1::function.942", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::FeatureManager"* %8, null
  br i1 %9, label %10, label %48

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 1
  %12 = tail call i8* @_Znwm(i64 48) #13
  %13 = bitcast i8* %12 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %11, %"class.spvtools::AssemblyGrammar"** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false) #14
  %15 = ptrtoint i8* %12 to i64
  %16 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.152"* %6 to i64*
  store i64 %15, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::FeatureManager"* %16, null
  %19 = bitcast i8* %12 to %"class.spvtools::opt::FeatureManager"*
  br i1 %18, label %43, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %16, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %21, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %21, align 8
  %23 = icmp eq %"class.std::__1::set.158"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %22, i64 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %22, i64 0, i32 0, i32 1, i32 0, i32 0
  %27 = bitcast %"class.std::__1::__tree_end_node"* %26 to %"class.std::__1::__tree_node"**
  %28 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %25, %"class.std::__1::__tree_node"* %28) #14
  %29 = bitcast %"class.std::__1::set.158"* %22 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %24, %20
  %31 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %16, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %31, align 8
  store %"class.std::__1::set.158"* null, %"class.std::__1::set.158"** %31, align 8
  %33 = icmp eq %"class.std::__1::set.158"* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %32, i64 0, i32 0
  %36 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %32, i64 0, i32 0, i32 1, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_node"**
  %38 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %37, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %35, %"class.std::__1::__tree_node"* %38) #14
  %39 = bitcast %"class.std::__1::set.158"* %32 to i8*
  tail call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %34, %30
  %41 = bitcast %"class.spvtools::opt::FeatureManager"* %16 to i8*
  tail call void @_ZdlPv(i8* %41) #13
  %42 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  br label %43

43:                                               ; preds = %40, %10
  %44 = phi %"class.spvtools::opt::FeatureManager"* [ %42, %40 ], [ %19, %10 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %45, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %44, %"class.spvtools::opt::Module"* %46) #14
  %47 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %7, align 8
  br label %48

48:                                               ; preds = %1, %43
  %49 = phi %"class.spvtools::opt::FeatureManager"* [ %8, %1 ], [ %47, %43 ]
  %50 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %49, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %51 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %50, align 8
  %52 = icmp eq %"class.std::__1::set.158"* %51, null
  br i1 %52, label %79, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %51, i64 0, i32 0, i32 1, i32 0, i32 0
  %55 = bitcast %"class.std::__1::__tree_end_node"* %54 to %"class.std::__1::__tree_node"**
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %79, label %58

58:                                               ; preds = %53, %58
  %59 = phi %"class.std::__1::__tree_end_node"* [ %69, %58 ], [ %54, %53 ]
  %60 = phi %"class.std::__1::__tree_node"* [ %70, %58 ], [ %56, %53 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp ult i32 %62, 5357
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 1
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %60, i64 0, i32 0, i32 0
  %67 = bitcast %"class.std::__1::__tree_node"* %60 to %"class.std::__1::__tree_node"**
  %68 = select i1 %63, %"class.std::__1::__tree_node"** %65, %"class.std::__1::__tree_node"** %67
  %69 = select i1 %63, %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"* %66
  %70 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %68, align 8
  %71 = icmp eq %"class.std::__1::__tree_node"* %70, null
  br i1 %71, label %72, label %58

72:                                               ; preds = %58
  %73 = icmp eq %"class.std::__1::__tree_end_node"* %69, %54
  br i1 %73, label %79, label %74

74:                                               ; preds = %72
  %75 = bitcast %"class.std::__1::__tree_end_node"* %69 to %"class.std::__1::__tree_node"*
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp ult i32 %77, 5358
  br i1 %78, label %141, label %79

79:                                               ; preds = %74, %72, %53, %48
  %80 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %80, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %81, align 8
  %83 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %82, i64 0, i32 6, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %83, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %84, i64 0, i32 3
  %86 = load i8, i8* %85, align 4, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %84, i64 0, i32 4
  %89 = load i8, i8* %88, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  %91 = select i1 %90, i32 1, i32 2
  %92 = xor i1 %90, true
  %93 = zext i1 %92 to i32
  %94 = select i1 %87, i32 %93, i32 %91
  %95 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %84, i32 %94) #14
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %141

97:                                               ; preds = %79
  %98 = load i8, i8* %85, align 4, !range !2
  %99 = icmp eq i8 %98, 0
  %100 = load i8, i8* %88, align 1, !range !2
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, i32 1, i32 2
  %103 = xor i1 %101, true
  %104 = zext i1 %103 to i32
  %105 = select i1 %99, i32 %104, i32 %102
  %106 = add nuw nsw i32 %105, 1
  %107 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %84, i32 %106) #14
  %108 = icmp eq i32 %107, 1
  br i1 %108, label %109, label %141

109:                                              ; preds = %97
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel29UpgradeMemoryModelInstructionEv(%"class.spvtools::opt::UpgradeMemoryModel"* %0)
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel19UpgradeInstructionsEv(%"class.spvtools::opt::UpgradeMemoryModel"* %0)
  %110 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %110, i64 0, i32 4, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %111, align 8
  %113 = bitcast %"class.std::__1::function.942"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %113) #14
  %114 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %115 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %116 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18CleanupDecorationsEvE3$_5S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %115, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEvE3$_5FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %116, align 8
  %117 = bitcast %"class.std::__1::function.942"* %2 to i64*
  store i64 %114, i64* %117, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %112, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false) #14
  %118 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %116, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %118, i64 0, i32 1
  %120 = load void (i8*)*, void (i8*)** %119, align 8
  %121 = icmp eq void (i8*)* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  call void %120(i8* %124) #14
  br label %125

125:                                              ; preds = %109, %122
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %113) #14
  call void @_ZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEv(%"class.spvtools::opt::UpgradeMemoryModel"* %0)
  %126 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %126, i64 0, i32 4, i32 0, i32 0, i32 0
  %128 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %127, align 8
  %129 = bitcast %"class.std::__1::function.942"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %129) #14
  %130 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %130, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %131, align 8
  %132 = bitcast %"class.std::__1::function.942"* %3 to i64*
  store i64 %114, i64* %132, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %128, %"class.std::__1::function.942"* nonnull dereferenceable(32) %3, i1 zeroext false) #14
  %133 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %131, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %133, i64 0, i32 1
  %135 = load void (i8*)*, void (i8*)** %134, align 8
  %136 = icmp eq void (i8*)* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %125
  %138 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 0, i32 0
  %139 = load i8*, i8** %138, align 8
  call void %135(i8* %139) #14
  br label %140

140:                                              ; preds = %125, %137
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %129) #14
  br label %141

141:                                              ; preds = %74, %140, %97, %79
  %142 = phi i32 [ 16, %140 ], [ 17, %97 ], [ 17, %79 ], [ 17, %74 ]
  ret i32 %142
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel29UpgradeMemoryModelInstructionEv(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.21", align 8
  %3 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::initializer_list", align 8
  %8 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.std::__1::vector.3", align 8
  %11 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::initializer_list", align 8
  %16 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %17 = alloca %"class.spvtools::utils::SmallVector", align 8
  %18 = alloca %"class.spvtools::utils::SmallVector", align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %20 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %22, i64 0, i32 6, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = bitcast %"class.std::__1::unique_ptr.21"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  %26 = bitcast %"class.spvtools::opt::IRContext"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  store %"class.spvtools::opt::IRContext"* %20, %"class.spvtools::opt::IRContext"** %3, align 8
  %27 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #14
  store i32 17, i32* %4, align 4
  %28 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #14
  store i32 0, i32* %5, align 4
  %29 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #14
  store i32 0, i32* %6, align 4
  %30 = bitcast %"class.std::initializer_list"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  %31 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #14
  %32 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0
  %33 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %38 = bitcast i32** %36 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %37, %"struct.std::__1::aligned_storage<4, 4>::type"** %38, align 8
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %40 = bitcast %"class.std::__1::unique_ptr.0"* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %37 to i32*
  store i64 1, i64* %35, align 8
  store i32 5345, i32* %41, align 8
  %42 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 0
  store i32 32, i32* %42, align 8
  %43 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %43, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 2
  %47 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #14
  %52 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %7, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %32, %"struct.spvtools::opt::Operand"** %52, align 8
  %53 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %7, i64 0, i32 1
  store i64 1, i64* %53, align 8
  %54 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %3, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, %"class.std::initializer_list"* nonnull dereferenceable(16) %7)
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %54, %"class.spvtools::opt::Instruction"** %55, align 8
  call void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"* %20, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %2)
  %56 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %55, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %55, align 8
  %57 = icmp eq %"class.spvtools::opt::Instruction"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %1
  %59 = bitcast %"class.spvtools::opt::Instruction"* %56 to void (%"class.spvtools::opt::Instruction"*)***
  %60 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %60, i64 1
  %62 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %61, align 8
  call void %62(%"class.spvtools::opt::Instruction"* nonnull %56) #14
  br label %63

63:                                               ; preds = %1, %58
  %64 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %8, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %65, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %65, align 8
  %67 = icmp eq %"class.std::__1::vector.3"* %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i32* %70 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast i32* %70 to i8*
  call void @_ZdlPv(i8* %76) #13
  br label %77

77:                                               ; preds = %72, %68
  %78 = bitcast %"class.std::__1::vector.3"* %66 to i8*
  call void @_ZdlPv(i8* %78) #13
  br label %79

79:                                               ; preds = %63, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %80, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %80, align 8
  %82 = icmp eq %"class.std::__1::vector.3"* %81, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %91) #13
  br label %92

92:                                               ; preds = %87, %83
  %93 = bitcast %"class.std::__1::vector.3"* %81 to i8*
  call void @_ZdlPv(i8* %93) #13
  br label %94

94:                                               ; preds = %92, %79
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  %95 = call i8* @_Znwm(i64 32) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %95, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i64 27, i1 false) #14
  %96 = getelementptr inbounds i8, i8* %95, i64 27
  store i8 0, i8* %96, align 1
  %97 = bitcast %"class.std::__1::vector.3"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  %98 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %101 = call i8* @_Znwm(i64 28) #13
  %102 = bitcast %"class.std::__1::vector.3"* %10 to i8**
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds i8, i8* %101, i64 28
  %104 = bitcast i32** %100 to i8**
  store i8* %103, i8** %104, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %101, i8 0, i64 28, i1 false)
  %105 = bitcast i32** %99 to i64*
  %106 = ptrtoint i8* %103 to i64
  store i64 %106, i64* %105, align 8
  %107 = call i8* @strncpy(i8* nonnull %101, i8* nonnull %95, i64 27) #14
  %108 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %19, align 8
  %109 = bitcast %"class.spvtools::opt::IRContext"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #14
  store %"class.spvtools::opt::IRContext"* %108, %"class.spvtools::opt::IRContext"** %11, align 8
  %110 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %110) #14
  store i32 10, i32* %12, align 4
  %111 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %111) #14
  store i32 0, i32* %13, align 4
  %112 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 0, i32* %14, align 4
  %113 = bitcast %"class.std::initializer_list"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #14
  %114 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %114) #14
  %115 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0
  %116 = bitcast %"class.spvtools::utils::SmallVector"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %116) #14
  %117 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %118 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 1
  store i64 0, i64* %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 2
  %120 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 3, i64 0
  %121 = bitcast i32** %119 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %120, %"struct.std::__1::aligned_storage<4, 4>::type"** %121, align 8
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4
  %123 = bitcast %"class.std::__1::unique_ptr.0"* %122 to i64*
  store i64 0, i64* %123, align 8
  %124 = load i64, i64* %105, align 8
  %125 = bitcast %"class.std::__1::vector.3"* %10 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 %124, %126
  %128 = ashr exact i64 %127, 2
  %129 = icmp ugt i64 %128, 2
  %130 = inttoptr i64 %126 to i32*
  %131 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %120 to i32*
  br i1 %129, label %132, label %160

132:                                              ; preds = %94
  %133 = call i8* @_Znwm(i64 24) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 0, i64 24, i1 false) #14
  %134 = icmp eq i64 %127, 0
  br i1 %134, label %158, label %135

135:                                              ; preds = %132
  %136 = icmp ugt i64 %128, 4611686018427387903
  br i1 %136, label %137, label %139

137:                                              ; preds = %135
  %138 = bitcast i8* %133 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %138) #15
  unreachable

139:                                              ; preds = %135
  %140 = call i8* @_Znwm(i64 %127) #13
  %141 = bitcast i8* %140 to i32*
  %142 = getelementptr inbounds i8, i8* %133, i64 8
  %143 = bitcast i8* %142 to i8**
  store i8* %140, i8** %143, align 8
  %144 = bitcast i8* %133 to i8**
  store i8* %140, i8** %144, align 8
  %145 = getelementptr inbounds i32, i32* %141, i64 %128
  %146 = getelementptr inbounds i8, i8* %133, i64 16
  %147 = bitcast i8* %146 to i32**
  store i32* %145, i32** %147, align 8
  %148 = bitcast i8* %142 to i64*
  %149 = ptrtoint i8* %140 to i64
  %150 = icmp sgt i64 %127, 0
  br i1 %150, label %151, label %156

151:                                              ; preds = %139
  %152 = lshr exact i64 %127, 2
  %153 = inttoptr i64 %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 4 %153, i64 %127, i1 false) #14
  %154 = getelementptr inbounds i32, i32* %141, i64 %152
  %155 = ptrtoint i32* %154 to i64
  br label %156

156:                                              ; preds = %151, %139
  %157 = phi i64 [ %155, %151 ], [ %149, %139 ]
  store i64 %157, i64* %148, align 8
  br label %158

158:                                              ; preds = %156, %132
  %159 = ptrtoint i8* %133 to i64
  store i64 %159, i64* %123, align 8
  br label %185

160:                                              ; preds = %94
  store i64 %128, i64* %118, align 8
  %161 = icmp eq i64 %127, 0
  br i1 %161, label %185, label %162

162:                                              ; preds = %160
  %163 = load i32, i32* %130, align 4
  store i32 %163, i32* %131, align 8
  %164 = icmp ugt i64 %128, 1
  br i1 %164, label %165, label %185

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 3, i64 1
  %167 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %166 to i32*
  %168 = getelementptr inbounds i32, i32* %130, i64 1
  %169 = load i32, i32* %168, align 4
  store i32 %169, i32* %167, align 4
  %170 = load i64, i64* %118, align 8
  %171 = icmp ugt i64 %170, 2
  br i1 %171, label %172, label %185

172:                                              ; preds = %165
  %173 = load i32*, i32** %98, align 8
  br label %174

174:                                              ; preds = %172, %174
  %175 = phi i64 [ %182, %174 ], [ 2, %172 ]
  %176 = phi i32 [ %181, %174 ], [ 2, %172 ]
  %177 = load i32*, i32** %119, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 %175
  %179 = getelementptr inbounds i32, i32* %173, i64 %175
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = add i32 %176, 1
  %182 = zext i32 %181 to i64
  %183 = load i64, i64* %118, align 8
  %184 = icmp ugt i64 %183, %182
  br i1 %184, label %174, label %185

185:                                              ; preds = %174, %165, %162, %158, %160
  %186 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 0
  store i32 10, i32* %186, align 8
  %187 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %187, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %188, align 8
  %189 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %189, align 8
  %190 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 2
  %191 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 3, i64 0
  %192 = bitcast i32** %190 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %191, %"struct.std::__1::aligned_storage<4, 4>::type"** %192, align 8
  %193 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 4
  %194 = bitcast %"class.std::__1::unique_ptr.0"* %193 to i64*
  store i64 0, i64* %194, align 8
  %195 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %187, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %17) #14
  %196 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %15, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %115, %"struct.spvtools::opt::Operand"** %196, align 8
  %197 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %15, i64 0, i32 1
  store i64 1, i64* %197, align 8
  %198 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %11, i32* nonnull dereferenceable(4) %12, i32* nonnull dereferenceable(4) %13, i32* nonnull dereferenceable(4) %14, %"class.std::initializer_list"* nonnull dereferenceable(16) %15)
  %199 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 11
  %200 = load i32, i32* %199, align 8
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %185
  %204 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6, i32 0, i32 0, i32 0
  %205 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %204, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %205, %"class.spvtools::opt::Instruction"* %198) #14
  br label %206

206:                                              ; preds = %203, %185
  %207 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 8, i32 0, i32 0, i32 0
  %208 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %207, align 8
  %209 = icmp eq %"class.spvtools::opt::FeatureManager"* %208, null
  br i1 %209, label %211, label %210

210:                                              ; preds = %206
  call void @_ZN8spvtools3opt14FeatureManager12AddExtensionEPNS0_11InstructionE(%"class.spvtools::opt::FeatureManager"* nonnull %208, %"class.spvtools::opt::Instruction"* %198) #14
  br label %211

211:                                              ; preds = %210, %206
  %212 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 4, i32 0, i32 0, i32 0
  %213 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %212, align 8
  %214 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %213, i64 0, i32 4, i32 0, i32 1
  %215 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 1
  %216 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %215, align 8
  %217 = icmp eq %"class.spvtools::opt::Instruction"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %211
  %219 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 2
  %220 = bitcast %"class.spvtools::opt::Instruction"** %219 to i64*
  %221 = load i64, i64* %220, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %216, i64 0, i32 0, i32 2
  %223 = bitcast %"class.spvtools::opt::Instruction"** %222 to i64*
  store i64 %221, i64* %223, align 8
  %224 = bitcast %"class.spvtools::opt::Instruction"** %215 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.spvtools::opt::Instruction"** %219 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %227 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %226, align 8
  %228 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %227, i64 0, i32 1
  %229 = bitcast %"class.spvtools::opt::Instruction"** %228 to i64*
  store i64 %225, i64* %229, align 8
  %230 = bitcast %"class.spvtools::opt::Instruction"** %215 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %230, i8 0, i64 16, i1 false) #14
  br label %231

231:                                              ; preds = %211, %218
  store %"class.spvtools::opt::Instruction"* %214, %"class.spvtools::opt::Instruction"** %215, align 8
  %232 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %213, i64 0, i32 4, i32 0, i32 1, i32 0, i32 2
  %233 = bitcast %"class.spvtools::opt::Instruction"** %232 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %198, i64 0, i32 0, i32 2
  %236 = bitcast %"class.spvtools::opt::Instruction"** %235 to i64*
  store i64 %234, i64* %236, align 8
  store %"class.spvtools::opt::Instruction"* %198, %"class.spvtools::opt::Instruction"** %232, align 8
  %237 = bitcast %"class.spvtools::opt::Instruction"** %235 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %238 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %237, align 8
  %239 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %238, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %198, %"class.spvtools::opt::Instruction"** %239, align 8
  %240 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %240, align 8
  %241 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %16, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %242 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %241, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %241, align 8
  %243 = icmp eq %"class.std::__1::vector.3"* %242, null
  br i1 %243, label %255, label %244

244:                                              ; preds = %231
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %242, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %242, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #13
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %242 to i8*
  call void @_ZdlPv(i8* %254) #13
  br label %255

255:                                              ; preds = %231, %253
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %117, align 8
  %256 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %17, i64 0, i32 4, i32 0, i32 0, i32 0
  %257 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %256, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %256, align 8
  %258 = icmp eq %"class.std::__1::vector.3"* %257, null
  br i1 %258, label %270, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %257, i64 0, i32 0, i32 0
  %261 = load i32*, i32** %260, align 8
  %262 = icmp eq i32* %261, null
  br i1 %262, label %268, label %263

263:                                              ; preds = %259
  %264 = ptrtoint i32* %261 to i64
  %265 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %257, i64 0, i32 0, i32 1
  %266 = bitcast i32** %265 to i64*
  store i64 %264, i64* %266, align 8
  %267 = bitcast i32* %261 to i8*
  call void @_ZdlPv(i8* %267) #13
  br label %268

268:                                              ; preds = %263, %259
  %269 = bitcast %"class.std::__1::vector.3"* %257 to i8*
  call void @_ZdlPv(i8* %269) #13
  br label %270

270:                                              ; preds = %255, %268
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %116) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %114) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %111) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %110) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #14
  %271 = bitcast %"class.spvtools::utils::SmallVector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %271) #14
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %272, align 8
  %273 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 1
  %274 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 2
  %275 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 3, i64 0
  %276 = bitcast i32** %274 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %275, %"struct.std::__1::aligned_storage<4, 4>::type"** %276, align 8
  %277 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4
  %278 = bitcast %"class.std::__1::unique_ptr.0"* %277 to i64*
  store i64 0, i64* %278, align 8
  %279 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %275 to i32*
  store i64 1, i64* %273, align 8
  store i32 3, i32* %279, align 8
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 3
  %281 = load i8, i8* %280, align 4, !range !2
  %282 = icmp eq i8 %281, 0
  %283 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 4
  %284 = load i8, i8* %283, align 1, !range !2
  %285 = icmp eq i8 %284, 0
  %286 = select i1 %285, i64 1, i64 2
  %287 = xor i1 %285, true
  %288 = zext i1 %287 to i64
  %289 = select i1 %282, i64 %288, i64 %286
  %290 = add nuw nsw i64 %289, 1
  %291 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %24, i64 0, i32 6, i32 0, i32 0
  %292 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %291, align 8
  %293 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %292, i64 %290, i32 1
  %294 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %293, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %18) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %272, align 8
  %295 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %296 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %295, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %295, align 8
  %297 = icmp eq %"class.std::__1::vector.3"* %296, null
  br i1 %297, label %309, label %298

298:                                              ; preds = %270
  %299 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %296, i64 0, i32 0, i32 0
  %300 = load i32*, i32** %299, align 8
  %301 = icmp eq i32* %300, null
  br i1 %301, label %307, label %302

302:                                              ; preds = %298
  %303 = ptrtoint i32* %300 to i64
  %304 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %296, i64 0, i32 0, i32 1
  %305 = bitcast i32** %304 to i64*
  store i64 %303, i64* %305, align 8
  %306 = bitcast i32* %300 to i8*
  call void @_ZdlPv(i8* %306) #13
  br label %307

307:                                              ; preds = %302, %298
  %308 = bitcast %"class.std::__1::vector.3"* %296 to i8*
  call void @_ZdlPv(i8* %308) #13
  br label %309

309:                                              ; preds = %270, %307
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %271) #14
  %310 = load i32*, i32** %98, align 8
  %311 = icmp eq i32* %310, null
  br i1 %311, label %315, label %312

312:                                              ; preds = %309
  %313 = ptrtoint i32* %310 to i64
  store i64 %313, i64* %105, align 8
  %314 = bitcast i32* %310 to i8*
  call void @_ZdlPv(i8* %314) #13
  br label %315

315:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  call void @_ZdlPv(i8* nonnull %95) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel19UpgradeInstructionsEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = alloca %"class.std::__1::function.942", align 8
  %4 = alloca %"class.std::__1::function.942", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 15, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %8, i64 0, i32 15, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.28"* %10, %12
  br i1 %13, label %79, label %14

14:                                               ; preds = %1
  %15 = bitcast %"class.std::__1::function.942"* %4 to i8*
  %16 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %17 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %4, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %4, i64 0, i32 0, i32 2
  %19 = bitcast %"class.std::__1::function.942"* %4 to i64*
  %20 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %4, i64 0, i32 0, i32 0, i32 0
  br label %80

21:                                               ; preds = %90
  %22 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %22, i64 0, i32 4, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %24, i64 0, i32 15, i32 0, i32 0
  %26 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %24, i64 0, i32 15, i32 0, i32 1
  %28 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %27, align 8
  %29 = icmp eq %"class.std::__1::unique_ptr.28"* %26, %28
  br i1 %29, label %79, label %30

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::function.942"* %2 to i8*
  %32 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %33 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  %35 = bitcast %"class.std::__1::function.942"* %2 to i64*
  %36 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  br label %37

37:                                               ; preds = %47, %30
  %38 = phi %"class.std::__1::unique_ptr.28"* [ %26, %30 ], [ %48, %47 ]
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %33, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %34, align 8
  store i64 %32, i64* %35, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %40, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false, i1 zeroext false) #14
  %41 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %34, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  %46 = load i8*, i8** %36, align 8
  call void %43(i8* %46) #14
  br label %47

47:                                               ; preds = %45, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #14
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %38, i64 1
  %49 = icmp eq %"class.std::__1::unique_ptr.28"* %48, %28
  br i1 %49, label %50, label %37

50:                                               ; preds = %47
  %51 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %51, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %53, i64 0, i32 15, i32 0, i32 0
  %55 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %54, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %53, i64 0, i32 15, i32 0, i32 1
  %57 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %56, align 8
  %58 = icmp eq %"class.std::__1::unique_ptr.28"* %55, %57
  br i1 %58, label %79, label %59

59:                                               ; preds = %50
  %60 = bitcast %"class.std::__1::function.942"* %3 to i8*
  %61 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %62 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 1, i32 0
  %63 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 2
  %64 = bitcast %"class.std::__1::function.942"* %3 to i64*
  %65 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %3, i64 0, i32 0, i32 0, i32 0
  br label %66

66:                                               ; preds = %76, %59
  %67 = phi %"class.std::__1::unique_ptr.28"* [ %55, %59 ], [ %77, %76 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %68, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %60) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %62, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %63, align 8
  store i64 %61, i64* %64, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %69, %"class.std::__1::function.942"* nonnull dereferenceable(32) %3, i1 zeroext false, i1 zeroext false) #14
  %70 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %63, align 8
  %71 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %70, i64 0, i32 1
  %72 = load void (i8*)*, void (i8*)** %71, align 8
  %73 = icmp eq void (i8*)* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = load i8*, i8** %65, align 8
  call void %72(i8* %75) #14
  br label %76

76:                                               ; preds = %74, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %60) #14
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %67, i64 1
  %78 = icmp eq %"class.std::__1::unique_ptr.28"* %77, %57
  br i1 %78, label %79, label %66

79:                                               ; preds = %76, %1, %21, %50
  ret void

80:                                               ; preds = %14, %90
  %81 = phi %"class.std::__1::unique_ptr.28"* [ %10, %14 ], [ %91, %90 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %82, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel19UpgradeInstructionsEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel19UpgradeInstructionsEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %18, align 8
  store i64 %16, i64* %19, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %83, %"class.std::__1::function.942"* nonnull dereferenceable(32) %4, i1 zeroext false, i1 zeroext false) #14
  %84 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %85 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %84, i64 0, i32 1
  %86 = load void (i8*)*, void (i8*)** %85, align 8
  %87 = icmp eq void (i8*)* %86, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %80
  %89 = load i8*, i8** %20, align 8
  call void %86(i8* %89) #14
  br label %90

90:                                               ; preds = %80, %88
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #14
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %81, i64 1
  %92 = icmp eq %"class.std::__1::unique_ptr.28"* %91, %12
  br i1 %92, label %21, label %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = bitcast %"class.std::__1::function.942"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %9 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18CleanupDecorationsEvE3$_5S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEvE3$_5FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = bitcast %"class.std::__1::function.942"* %2 to i64*
  store i64 %8, i64* %11, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %6, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false) #14
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #14
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::vector.1029", align 8
  %3 = alloca %"class.std::__1::function.1036", align 8
  %4 = alloca %"class.std::__1::queue", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::vector.1029"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::vector.1029", %"class.std::__1::vector.1029"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.1029", %"class.std::__1::vector.1029"* %2, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #14
  %10 = bitcast %"class.std::__1::function.1036"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.std::__1::function.1036", %"class.std::__1::function.1036"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::function.1036", %"class.std::__1::function.1036"* %3, i64 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::function.1036", %"class.std::__1::function.1036"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel15UpgradeBarriersEvE3$_6S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %12, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvE3$_6FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %13, align 8
  %14 = bitcast %"class.std::__1::function.1036"* %3 to %"class.spvtools::opt::UpgradeMemoryModel"**
  store %"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::UpgradeMemoryModel"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::function.1036", %"class.std::__1::function.1036"* %3, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast [8 x i8]* %15 to %"class.std::__1::vector.1029"**
  store %"class.std::__1::vector.1029"* %2, %"class.std::__1::vector.1029"** %16, align 8
  %17 = bitcast %"class.std::__1::queue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 48, i1 false) #14
  %23 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %26, i64 0, i32 7, i32 0, i32 1, i32 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %26, i64 0, i32 7, i32 0, i32 1
  %29 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = inttoptr i64 %30 to %"class.spvtools::opt::Instruction"*
  %32 = icmp eq %"class.spvtools::opt::Instruction"* %28, %31
  br i1 %32, label %77, label %33

33:                                               ; preds = %1
  %34 = bitcast i32*** %20 to i64*
  %35 = bitcast i32*** %19 to i64*
  %36 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %4, i64 0, i32 0
  %37 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  %40 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast i32** %40 to i8**
  %42 = bitcast i32** %38 to i64*
  %43 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %44 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %49 = bitcast i32** %47 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %50 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %51 = bitcast %"class.std::__1::unique_ptr.0"* %50 to i64*
  %52 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %48 to i32*
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::vector.1029"* %2 to i64*
  %55 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  br label %164

56:                                               ; preds = %409
  %57 = load i32**, i32*** %19, align 8
  %58 = load i64, i64* %21, align 8
  %59 = load i32**, i32*** %20, align 8
  %60 = lshr i64 %58, 10
  %61 = getelementptr inbounds i32*, i32** %57, i64 %60
  %62 = icmp eq i32** %59, %57
  %63 = ptrtoint i32** %59 to i64
  %64 = ptrtoint i32** %57 to i64
  br i1 %62, label %77, label %65

65:                                               ; preds = %56
  %66 = load i32*, i32** %61, align 8
  %67 = and i64 %58, 1023
  %68 = getelementptr inbounds i32, i32* %66, i64 %67
  %69 = load i64, i64* %22, align 8
  %70 = add i64 %69, %58
  %71 = lshr i64 %70, 10
  %72 = getelementptr inbounds i32*, i32** %57, i64 %71
  %73 = load i32*, i32** %72, align 8
  %74 = and i64 %70, 1023
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  %76 = icmp eq i32* %75, %68
  br i1 %76, label %77, label %86

77:                                               ; preds = %99, %1, %56, %65
  %78 = phi i64 [ %64, %65 ], [ %64, %56 ], [ 0, %1 ], [ %64, %99 ]
  %79 = phi i64 [ %63, %65 ], [ %63, %56 ], [ 0, %1 ], [ %63, %99 ]
  %80 = phi i32** [ %57, %65 ], [ %57, %56 ], [ null, %1 ], [ %57, %99 ]
  %81 = phi i32** [ %59, %65 ], [ %59, %56 ], [ null, %1 ], [ %59, %99 ]
  store i64 0, i64* %22, align 8
  %82 = bitcast i32*** %20 to i64*
  %83 = sub i64 %79, %78
  %84 = ashr exact i64 %83, 3
  %85 = icmp ugt i64 %84, 2
  br i1 %85, label %104, label %117

86:                                               ; preds = %65, %99
  %87 = phi i32* [ %102, %99 ], [ %68, %65 ]
  %88 = phi i32** [ %101, %99 ], [ %61, %65 ]
  %89 = getelementptr inbounds i32, i32* %87, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = bitcast i32** %88 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 %90, %92
  %94 = icmp eq i64 %93, 4096
  br i1 %94, label %95, label %99

95:                                               ; preds = %86
  %96 = getelementptr inbounds i32*, i32** %88, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  br label %99

99:                                               ; preds = %95, %86
  %100 = phi i64 [ %98, %95 ], [ %90, %86 ]
  %101 = phi i32** [ %96, %95 ], [ %88, %86 ]
  %102 = inttoptr i64 %100 to i32*
  %103 = icmp eq i32* %75, %102
  br i1 %103, label %77, label %86

104:                                              ; preds = %77, %104
  %105 = phi i32** [ %109, %104 ], [ %80, %77 ]
  %106 = bitcast i32** %105 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #13
  %108 = load i32**, i32*** %19, align 8
  %109 = getelementptr inbounds i32*, i32** %108, i64 1
  store i32** %109, i32*** %19, align 8
  %110 = load i64, i64* %82, align 8
  %111 = ptrtoint i32** %109 to i64
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = icmp ugt i64 %113, 2
  br i1 %114, label %104, label %115

115:                                              ; preds = %104
  %116 = inttoptr i64 %110 to i32**
  br label %117

117:                                              ; preds = %115, %77
  %118 = phi i32** [ %81, %77 ], [ %116, %115 ]
  %119 = phi i32** [ %80, %77 ], [ %109, %115 ]
  %120 = phi i64 [ %84, %77 ], [ %113, %115 ]
  switch i64 %120, label %124 [
    i64 1, label %122
    i64 2, label %121
  ]

121:                                              ; preds = %117
  br label %122

122:                                              ; preds = %117, %121
  %123 = phi i64 [ 1024, %121 ], [ 512, %117 ]
  store i64 %123, i64* %21, align 8
  br label %124

124:                                              ; preds = %122, %117
  %125 = icmp eq i32** %119, %118
  br i1 %125, label %144, label %126

126:                                              ; preds = %124, %126
  %127 = phi i32** [ %130, %126 ], [ %119, %124 ]
  %128 = bitcast i32** %127 to i8**
  %129 = load i8*, i8** %128, align 8
  call void @_ZdlPv(i8* %129) #13
  %130 = getelementptr inbounds i32*, i32** %127, i64 1
  %131 = icmp eq i32** %130, %118
  br i1 %131, label %132, label %126

132:                                              ; preds = %126
  %133 = load i32**, i32*** %19, align 8
  %134 = load i32**, i32*** %20, align 8
  %135 = icmp eq i32** %134, %133
  br i1 %135, label %144, label %136

136:                                              ; preds = %132
  %137 = ptrtoint i32** %133 to i64
  %138 = getelementptr i32*, i32** %134, i64 -1
  %139 = ptrtoint i32** %138 to i64
  %140 = sub i64 %139, %137
  %141 = lshr i64 %140, 3
  %142 = xor i64 %141, -1
  %143 = getelementptr i32*, i32** %134, i64 %142
  store i32** %143, i32*** %20, align 8
  br label %144

144:                                              ; preds = %136, %132, %124
  %145 = load i32**, i32*** %18, align 8
  %146 = icmp eq i32** %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast i32** %145 to i8*
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %144, %147
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #14
  %150 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %13, align 8
  %151 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %150, i64 0, i32 1
  %152 = load void (i8*)*, void (i8*)** %151, align 8
  %153 = icmp eq void (i8*)* %152, null
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  %155 = load i8*, i8** %11, align 8
  call void %152(i8* %155) #14
  br label %156

156:                                              ; preds = %149, %154
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #14
  %157 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %158 = icmp eq %"class.spvtools::opt::Instruction"** %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %156
  %160 = ptrtoint %"class.spvtools::opt::Instruction"** %157 to i64
  %161 = bitcast %"class.spvtools::opt::Instruction"*** %9 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"class.spvtools::opt::Instruction"** %157 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %156, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #14
  ret void

164:                                              ; preds = %33, %409
  %165 = phi %"class.spvtools::opt::Instruction"* [ %31, %33 ], [ %414, %409 ]
  %166 = phi i64 [ %30, %33 ], [ %413, %409 ]
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %165, i64 0, i32 3
  %168 = load i8, i8* %167, align 4, !range !2
  %169 = icmp eq i8 %168, 0
  %170 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %165, i64 0, i32 4
  %171 = load i8, i8* %170, align 1, !range !2
  %172 = icmp eq i8 %171, 0
  %173 = select i1 %172, i32 1, i32 2
  %174 = xor i1 %172, true
  %175 = zext i1 %174 to i32
  %176 = select i1 %169, i32 %175, i32 %173
  %177 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %165, i32 %176) #14
  %178 = icmp eq i32 %177, 1
  br i1 %178, label %179, label %409

179:                                              ; preds = %164
  %180 = load i8, i8* %167, align 4, !range !2
  %181 = icmp eq i8 %180, 0
  %182 = load i8, i8* %170, align 1, !range !2
  %183 = icmp eq i8 %182, 0
  %184 = select i1 %183, i32 1, i32 2
  %185 = xor i1 %183, true
  %186 = zext i1 %185 to i32
  %187 = select i1 %181, i32 %186, i32 %184
  %188 = add nuw nsw i32 %187, 1
  %189 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %165, i32 %188) #14
  %190 = load i64, i64* %34, align 8
  %191 = load i64, i64* %35, align 8
  %192 = sub i64 %190, %191
  %193 = icmp eq i64 %192, 0
  %194 = shl i64 %192, 7
  %195 = add i64 %194, -1
  %196 = select i1 %193, i64 0, i64 %195
  %197 = load i64, i64* %21, align 8
  %198 = load i64, i64* %22, align 8
  %199 = add i64 %198, %197
  %200 = icmp eq i64 %196, %199
  %201 = inttoptr i64 %191 to i32**
  %202 = inttoptr i64 %190 to i32**
  br i1 %200, label %203, label %209

203:                                              ; preds = %179
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %36) #14
  %204 = load i64, i64* %22, align 8
  %205 = load i64, i64* %21, align 8
  %206 = load i32**, i32*** %19, align 8
  %207 = load i32**, i32*** %20, align 8
  %208 = add i64 %205, %204
  br label %209

209:                                              ; preds = %203, %179
  %210 = phi i64 [ %208, %203 ], [ %199, %179 ]
  %211 = phi i32** [ %207, %203 ], [ %202, %179 ]
  %212 = phi i32** [ %206, %203 ], [ %201, %179 ]
  %213 = icmp eq i32** %211, %212
  br i1 %213, label %220, label %214

214:                                              ; preds = %209
  %215 = lshr i64 %210, 10
  %216 = getelementptr inbounds i32*, i32** %212, i64 %215
  %217 = load i32*, i32** %216, align 8
  %218 = and i64 %210, 1023
  %219 = getelementptr inbounds i32, i32* %217, i64 %218
  br label %220

220:                                              ; preds = %209, %214
  %221 = phi i32* [ %219, %214 ], [ null, %209 ]
  store i32 %189, i32* %221, align 4
  %222 = load i64, i64* %22, align 8
  %223 = add i64 %222, 1
  store i64 %223, i64* %22, align 8
  %224 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %225 = call zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessCallTreeFromRootsERNSt3__18functionIFbPNS0_8FunctionEEEEPNS2_5queueIjNS2_5dequeIjNS2_9allocatorIjEEEEEE(%"class.spvtools::opt::IRContext"* %224, %"class.std::__1::function.1036"* nonnull dereferenceable(32) %3, %"class.std::__1::queue"* nonnull %4) #14
  br i1 %225, label %226, label %407

226:                                              ; preds = %220
  %227 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %8, align 8
  %228 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %9, align 8
  %229 = icmp eq %"class.spvtools::opt::Instruction"** %227, %228
  br i1 %229, label %407, label %230

230:                                              ; preds = %226, %404
  %231 = phi %"class.spvtools::opt::Instruction"** [ %405, %404 ], [ %227, %226 ]
  %232 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 3
  %234 = load i8, i8* %233, align 4, !range !2
  %235 = icmp eq i8 %234, 0
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 4
  %237 = load i8, i8* %236, align 1, !range !2
  %238 = icmp eq i8 %237, 0
  %239 = select i1 %238, i32 1, i32 2
  %240 = xor i1 %238, true
  %241 = zext i1 %240 to i32
  %242 = select i1 %235, i32 %241, i32 %239
  %243 = add nuw nsw i32 %242, 2
  %244 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %232, i32 %243) #14
  %245 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %245, i64 0, i32 11
  %247 = load i32, i32* %246, align 8
  %248 = and i32 %247, 1
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %274

250:                                              ; preds = %230
  %251 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %245, i64 0, i32 4, i32 0, i32 0, i32 0
  %252 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %251, align 8
  %253 = call i8* @_Znwm(i64 104) #13
  %254 = bitcast i8* %253 to %"class.spvtools::opt::analysis::DefUseManager"*
  %255 = getelementptr inbounds i8, i8* %253, i64 32
  %256 = bitcast i8* %255 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %253, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %256, align 4
  %257 = getelementptr inbounds i8, i8* %253, i64 48
  %258 = getelementptr inbounds i8, i8* %253, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %257, i8 0, i64 16, i1 false) #14
  %259 = bitcast i8* %258 to i8**
  store i8* %257, i8** %259, align 8
  %260 = getelementptr inbounds i8, i8* %253, i64 64
  %261 = getelementptr inbounds i8, i8* %253, i64 96
  %262 = bitcast i8* %261 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %260, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %262, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %254, %"class.spvtools::opt::Module"* %252) #14
  %263 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %245, i64 0, i32 6
  %264 = ptrtoint i8* %253 to i64
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %263, i64 0, i32 0, i32 0, i32 0
  %266 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %265, align 8
  %267 = bitcast %"class.std::__1::unique_ptr.62"* %263 to i64*
  store i64 %264, i64* %267, align 8
  %268 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %266, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %250
  %270 = bitcast %"class.std::__1::unique_ptr.62"* %263 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %270, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %266) #14
  br label %271

271:                                              ; preds = %269, %250
  %272 = load i32, i32* %246, align 8
  %273 = or i32 %272, 1
  store i32 %273, i32* %246, align 8
  br label %274

274:                                              ; preds = %230, %271
  %275 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %245, i64 0, i32 6, i32 0, i32 0, i32 0
  %276 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %275, align 8
  %277 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %276, i32 %244) #14
  %278 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %279 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 11
  %280 = load i32, i32* %279, align 8
  %281 = trunc i32 %280 to i16
  %282 = icmp slt i16 %281, 0
  br i1 %282, label %298, label %283

283:                                              ; preds = %274
  %284 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 5
  %285 = call i8* @_Znwm(i64 240) #13
  %286 = bitcast i8* %285 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %286, %"class.std::__1::function"* dereferenceable(32) %284, %"class.spvtools::opt::IRContext"* %278) #14
  %287 = ptrtoint i8* %285 to i64
  %288 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 20
  %289 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %288, i64 0, i32 0, i32 0, i32 0
  %290 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %289, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.480"* %288 to i64*
  store i64 %287, i64* %291, align 8
  %292 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %290, null
  br i1 %292, label %295, label %293

293:                                              ; preds = %283
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %290) #14
  %294 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %290 to i8*
  call void @_ZdlPv(i8* %294) #13
  br label %295

295:                                              ; preds = %293, %283
  %296 = load i32, i32* %279, align 8
  %297 = or i32 %296, 32768
  store i32 %297, i32* %279, align 8
  br label %298

298:                                              ; preds = %274, %295
  %299 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %278, i64 0, i32 20, i32 0, i32 0, i32 0
  %300 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %299, align 8
  %301 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %277, i64 0, i32 3
  %302 = load i8, i8* %301, align 4, !range !2
  %303 = icmp eq i8 %302, 0
  br i1 %303, label %306, label %304

304:                                              ; preds = %298
  %305 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %277, i32 0) #14
  br label %306

306:                                              ; preds = %298, %304
  %307 = phi i32 [ %305, %304 ], [ 0, %298 ]
  %308 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %300, i32 %307) #14
  %309 = call i64 @_ZN8spvtools3opt18UpgradeMemoryModel13GetIndexValueEPNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %277)
  %310 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %311 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %310, i64 0, i32 11
  %312 = load i32, i32* %311, align 8
  %313 = and i32 %312, 16384
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %329

315:                                              ; preds = %306
  %316 = call i8* @_Znwm(i64 136) #13
  %317 = bitcast i8* %316 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %317, %"class.spvtools::opt::IRContext"* %310) #14
  %318 = ptrtoint i8* %316 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %310, i64 0, i32 19
  %320 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %319, i64 0, i32 0, i32 0, i32 0
  %321 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %320, align 8
  %322 = bitcast %"class.std::__1::unique_ptr.400"* %319 to i64*
  store i64 %318, i64* %322, align 8
  %323 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %321, null
  br i1 %323, label %326, label %324

324:                                              ; preds = %315
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %321) #14
  %325 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %321 to i8*
  call void @_ZdlPv(i8* %325) #13
  br label %326

326:                                              ; preds = %324, %315
  %327 = load i32, i32* %311, align 8
  %328 = or i32 %327, 16384
  store i32 %328, i32* %311, align 8
  br label %329

329:                                              ; preds = %306, %326
  %330 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %310, i64 0, i32 19, i32 0, i32 0, i32 0
  %331 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %330, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #14
  %332 = trunc i64 %309 to i32
  %333 = or i32 %332, 4096
  %334 = call i8* @_Znwm(i64 4) #13
  %335 = bitcast i8* %334 to i32*
  store i8* %334, i8** %39, align 8
  %336 = getelementptr inbounds i8, i8* %334, i64 4
  store i8* %336, i8** %41, align 8
  store i32 %333, i32* %335, align 4
  %337 = ptrtoint i8* %336 to i64
  store i64 %337, i64* %42, align 8
  %338 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %331, %"class.spvtools::opt::analysis::Type"* %308, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #14
  %339 = load i32*, i32** %43, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %344, label %341

341:                                              ; preds = %329
  %342 = ptrtoint i32* %339 to i64
  store i64 %342, i64* %42, align 8
  %343 = bitcast i32* %339 to i8*
  call void @_ZdlPv(i8* %343) #13
  br label %344

344:                                              ; preds = %329, %341
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #14
  %345 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %345, i64 0, i32 11
  %347 = load i32, i32* %346, align 8
  %348 = and i32 %347, 16384
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %364

350:                                              ; preds = %344
  %351 = call i8* @_Znwm(i64 136) #13
  %352 = bitcast i8* %351 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %352, %"class.spvtools::opt::IRContext"* %345) #14
  %353 = ptrtoint i8* %351 to i64
  %354 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %345, i64 0, i32 19
  %355 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %354, i64 0, i32 0, i32 0, i32 0
  %356 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %355, align 8
  %357 = bitcast %"class.std::__1::unique_ptr.400"* %354 to i64*
  store i64 %353, i64* %357, align 8
  %358 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %356, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %350
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %356) #14
  %360 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %356 to i8*
  call void @_ZdlPv(i8* %360) #13
  br label %361

361:                                              ; preds = %359, %350
  %362 = load i32, i32* %346, align 8
  %363 = or i32 %362, 16384
  store i32 %363, i32* %346, align 8
  br label %364

364:                                              ; preds = %344, %361
  %365 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %345, i64 0, i32 19, i32 0, i32 0, i32 0
  %366 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %365, align 8
  %367 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %366, %"class.spvtools::opt::analysis::Constant"* %338, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #14
  %368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 4
  %369 = load i8, i8* %368, align 1, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %376, label %371

371:                                              ; preds = %364
  %372 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 3
  %373 = load i8, i8* %372, align 4, !range !2
  %374 = zext i8 %373 to i32
  %375 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %367, i32 %374) #14
  br label %376

376:                                              ; preds = %364, %371
  %377 = phi i32 [ %375, %371 ], [ 0, %364 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %48, %"struct.std::__1::aligned_storage<4, 4>::type"** %49, align 8
  store i64 0, i64* %51, align 8
  store i64 1, i64* %46, align 8
  store i32 %377, i32* %52, align 8
  %378 = load i8, i8* %233, align 4, !range !2
  %379 = icmp eq i8 %378, 0
  %380 = load i8, i8* %236, align 1, !range !2
  %381 = icmp eq i8 %380, 0
  %382 = select i1 %381, i64 1, i64 2
  %383 = xor i1 %381, true
  %384 = zext i1 %383 to i64
  %385 = select i1 %379, i64 %384, i64 %382
  %386 = add nuw nsw i64 %385, 2
  %387 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %232, i64 0, i32 6, i32 0, i32 0
  %388 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %387, align 8
  %389 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %388, i64 %386, i32 1
  %390 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %389, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %391 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %53, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %53, align 8
  %392 = icmp eq %"class.std::__1::vector.3"* %391, null
  br i1 %392, label %404, label %393

393:                                              ; preds = %376
  %394 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %391, i64 0, i32 0, i32 0
  %395 = load i32*, i32** %394, align 8
  %396 = icmp eq i32* %395, null
  br i1 %396, label %402, label %397

397:                                              ; preds = %393
  %398 = ptrtoint i32* %395 to i64
  %399 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %391, i64 0, i32 0, i32 1
  %400 = bitcast i32** %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = bitcast i32* %395 to i8*
  call void @_ZdlPv(i8* %401) #13
  br label %402

402:                                              ; preds = %397, %393
  %403 = bitcast %"class.std::__1::vector.3"* %391 to i8*
  call void @_ZdlPv(i8* %403) #13
  br label %404

404:                                              ; preds = %376, %402
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #14
  %405 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %231, i64 1
  %406 = icmp eq %"class.spvtools::opt::Instruction"** %405, %228
  br i1 %406, label %407, label %230

407:                                              ; preds = %404, %226, %220
  %408 = load i64, i64* %54, align 8
  store i64 %408, i64* %55, align 8
  br label %409

409:                                              ; preds = %407, %164
  %410 = inttoptr i64 %166 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %411 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %410, i64 0, i32 1
  %412 = bitcast %"class.spvtools::opt::Instruction"** %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = inttoptr i64 %413 to %"class.spvtools::opt::Instruction"*
  %415 = icmp eq %"class.spvtools::opt::Instruction"* %28, %414
  br i1 %415, label %56, label %164
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel18UpgradeMemoryScopeEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = bitcast %"class.std::__1::function.942"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %9 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %9, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %10, align 8
  %11 = bitcast %"class.std::__1::function.942"* %2 to i64*
  store i64 %8, i64* %11, align 8
  call void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"* %6, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false) #14
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %10, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 1
  %14 = load void (i8*)*, void (i8*)** %13, align 8
  %15 = icmp eq void (i8*)* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void %14(i8* %18) #14
  br label %19

19:                                               ; preds = %1, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext13AddCapabilityEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = select i1 %10, i32 1, i32 2
  %12 = xor i1 %10, true
  %13 = zext i1 %12 to i32
  %14 = select i1 %7, i32 %13, i32 %11
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %14) #14
  tail call void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"* %0, i32 %15) #14
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::FeatureManager"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %2
  %20 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 3
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 4
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 1, i32 2
  %28 = xor i1 %26, true
  %29 = zext i1 %28 to i32
  %30 = select i1 %23, i32 %29, i32 %27
  %31 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %20, i32 %30) #14
  tail call void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"* nonnull %17, i32 %31) #14
  br label %32

32:                                               ; preds = %2, %19
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %39, %"class.spvtools::opt::Instruction"* %40) #14
  br label %41

41:                                               ; preds = %32, %37
  %42 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %42, align 8
  %44 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %3, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 1
  %47 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::Instruction"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %51 = bitcast %"class.spvtools::opt::Instruction"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %47, i64 0, i32 0, i32 2
  %54 = bitcast %"class.spvtools::opt::Instruction"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %50 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %58 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %58, i64 0, i32 1
  %60 = bitcast %"class.spvtools::opt::Instruction"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = bitcast %"class.spvtools::opt::Instruction"** %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #14
  br label %62

62:                                               ; preds = %41, %49
  store %"class.spvtools::opt::Instruction"* %45, %"class.spvtools::opt::Instruction"** %46, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %43, i64 0, i32 3, i32 0, i32 1, i32 0, i32 2
  %64 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %44, i64 0, i32 0, i32 2
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %65, i64* %67, align 8
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %63, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %66 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %69 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %69, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %44, %"class.spvtools::opt::Instruction"** %70, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #13
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #14
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #15
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #13
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #14
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #14
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #14
  ret %"class.spvtools::opt::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.942"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel22UpgradeMemoryAndImagesEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.28"* %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::function.942"* %2 to i8*
  %14 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %15 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::function.942"* %2 to i64*
  %18 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  br label %20

19:                                               ; preds = %30, %1
  ret void

20:                                               ; preds = %12, %30
  %21 = phi %"class.std::__1::unique_ptr.28"* [ %8, %12 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  store i64 %14, i64* %17, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %23, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false, i1 zeroext false) #14
  %24 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %24, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = icmp eq void (i8*)* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = load i8*, i8** %18, align 8
  call void %26(i8* %29) #14
  br label %30

30:                                               ; preds = %20, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #14
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %21, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.28"* %31, %10
  br i1 %32, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel14UpgradeAtomicsEv(%"class.spvtools::opt::UpgradeMemoryModel"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.942", align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %6, i64 0, i32 15, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.28"* %8, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.std::__1::function.942"* %2 to i8*
  %14 = ptrtoint %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i64
  %15 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 2
  %17 = bitcast %"class.std::__1::function.942"* %2 to i64*
  %18 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %2, i64 0, i32 0, i32 0, i32 0
  br label %20

19:                                               ; preds = %30, %1
  ret void

20:                                               ; preds = %12, %30
  %21 = phi %"class.std::__1::unique_ptr.28"* [ %8, %12 ], [ %31, %30 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %15, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %16, align 8
  store i64 %14, i64* %17, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %23, %"class.std::__1::function.942"* nonnull dereferenceable(32) %2, i1 zeroext false, i1 zeroext false) #14
  %24 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %24, i64 0, i32 1
  %26 = load void (i8*)*, void (i8*)** %25, align 8
  %27 = icmp eq void (i8*)* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %20
  %29 = load i8*, i8** %18, align 8
  call void %26(i8* %29) #14
  br label %30

30:                                               ; preds = %20, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #14
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %21, i64 1
  %32 = icmp eq %"class.std::__1::unique_ptr.28"* %31, %10
  br i1 %32, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel16UpgradeSemanticsEPNS0_11InstructionEjb(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  br i1 %3, label %7, label %230

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 1, i32 2
  %15 = xor i1 %13, true
  %16 = zext i1 %15 to i32
  %17 = select i1 %10, i32 %16, i32 %14
  %18 = add i32 %17, %2
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %18) #14
  %20 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 11
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 16384
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %40

26:                                               ; preds = %7
  %27 = tail call i8* @_Znwm(i64 136) #13
  %28 = bitcast i8* %27 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %28, %"class.spvtools::opt::IRContext"* %21) #14
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 19
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr.400"* %30 to i64*
  store i64 %29, i64* %33, align 8
  %34 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %32, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %26
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %32) #14
  %36 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %32 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %35, %26
  %38 = load i32, i32* %22, align 8
  %39 = or i32 %38, 16384
  store i32 %39, i32* %22, align 8
  br label %40

40:                                               ; preds = %7, %37
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %21, i64 0, i32 19, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %41, align 8
  %43 = zext i32 %19 to i64
  %44 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %99, label %47

47:                                               ; preds = %40
  %48 = tail call i64 @llvm.ctpop.i64(i64 %45) #14, !range !3
  %49 = icmp ugt i64 %48, 1
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = add i64 %45, 4294967295
  %52 = and i64 %51, %43
  br label %57

53:                                               ; preds = %47
  %54 = icmp ugt i64 %45, %43
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = urem i64 %43, %45
  br label %57

57:                                               ; preds = %55, %53, %50
  %58 = phi i64 [ %52, %50 ], [ %56, %55 ], [ %43, %53 ]
  %59 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %42, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %60, i64 %58
  %62 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.408"* %62, null
  br i1 %63, label %99, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %62, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.408"* %66, null
  br i1 %67, label %99, label %68

68:                                               ; preds = %64
  %69 = add i64 %45, -1
  br label %70

70:                                               ; preds = %91, %68
  %71 = phi %"struct.std::__1::__hash_node_base.408"* [ %66, %68 ], [ %93, %91 ]
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %71, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.408"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, %43
  br i1 %75, label %86, label %76

76:                                               ; preds = %70
  br i1 %49, label %79, label %77

77:                                               ; preds = %76
  %78 = and i64 %74, %69
  br label %83

79:                                               ; preds = %76
  %80 = icmp ult i64 %74, %45
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = urem i64 %74, %45
  br label %83

83:                                               ; preds = %81, %79, %77
  %84 = phi i64 [ %78, %77 ], [ %82, %81 ], [ %74, %79 ]
  %85 = icmp eq i64 %84, %58
  br i1 %85, label %91, label %99

86:                                               ; preds = %70
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %71, i64 2
  %88 = bitcast %"struct.std::__1::__hash_node_base.408"* %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, %19
  br i1 %90, label %95, label %91

91:                                               ; preds = %86, %83
  %92 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %71, i64 0, i32 0
  %93 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %92, align 8
  %94 = icmp eq %"struct.std::__1::__hash_node_base.408"* %93, null
  br i1 %94, label %99, label %70

95:                                               ; preds = %86
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %71, i64 3
  %97 = bitcast %"struct.std::__1::__hash_node_base.408"* %96 to %"class.spvtools::opt::analysis::Constant"**
  %98 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %97, align 8
  br label %99

99:                                               ; preds = %83, %91, %40, %57, %64, %95
  %100 = phi %"class.spvtools::opt::analysis::Constant"* [ %98, %95 ], [ null, %57 ], [ null, %40 ], [ null, %64 ], [ null, %91 ], [ null, %83 ]
  %101 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %100, i64 0, i32 1
  %102 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %101, align 8
  %103 = bitcast %"class.spvtools::opt::analysis::Type"* %102 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %104 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %104, i64 11
  %106 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %105, align 8
  %107 = tail call %"class.spvtools::opt::analysis::Integer"* %106(%"class.spvtools::opt::analysis::Type"* %102) #14
  %108 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %107, i64 0, i32 2
  %109 = load i8, i8* %108, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %113, label %111

111:                                              ; preds = %99
  %112 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* %100) #14
  br label %115

113:                                              ; preds = %99
  %114 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %100) #14
  br label %115

115:                                              ; preds = %113, %111
  %116 = phi i32 [ %112, %111 ], [ %114, %113 ]
  %117 = or i32 %116, 32768
  %118 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %118, i64 0, i32 11
  %120 = load i32, i32* %119, align 8
  %121 = and i32 %120, 16384
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %137

123:                                              ; preds = %115
  %124 = tail call i8* @_Znwm(i64 136) #13
  %125 = bitcast i8* %124 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %125, %"class.spvtools::opt::IRContext"* %118) #14
  %126 = ptrtoint i8* %124 to i64
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %118, i64 0, i32 19
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %127, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.400"* %127 to i64*
  store i64 %126, i64* %130, align 8
  %131 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %123
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %129) #14
  %133 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %129 to i8*
  tail call void @_ZdlPv(i8* %133) #13
  br label %134

134:                                              ; preds = %132, %123
  %135 = load i32, i32* %119, align 8
  %136 = or i32 %135, 16384
  store i32 %136, i32* %119, align 8
  br label %137

137:                                              ; preds = %115, %134
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %118, i64 0, i32 19, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %138, align 8
  %140 = bitcast %"class.spvtools::opt::analysis::Integer"* %107 to %"class.spvtools::opt::analysis::Type"*
  %141 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %141) #14
  %142 = tail call i8* @_Znwm(i64 4) #13
  %143 = bitcast i8* %142 to i32*
  %144 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %145 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %142, i8** %145, align 8
  %146 = getelementptr inbounds i8, i8* %142, i64 4
  %147 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %148 = bitcast i32** %147 to i8**
  store i8* %146, i8** %148, align 8
  %149 = bitcast i32** %144 to i64*
  store i32 %117, i32* %143, align 4
  %150 = ptrtoint i8* %146 to i64
  store i64 %150, i64* %149, align 8
  %151 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %139, %"class.spvtools::opt::analysis::Type"* %140, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #14
  %152 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp eq i32* %153, null
  br i1 %154, label %158, label %155

155:                                              ; preds = %137
  %156 = ptrtoint i32* %153 to i64
  store i64 %156, i64* %149, align 8
  %157 = bitcast i32* %153 to i8*
  call void @_ZdlPv(i8* %157) #13
  br label %158

158:                                              ; preds = %137, %155
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %141) #14
  %159 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %159, i64 0, i32 11
  %161 = load i32, i32* %160, align 8
  %162 = and i32 %161, 16384
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %178

164:                                              ; preds = %158
  %165 = call i8* @_Znwm(i64 136) #13
  %166 = bitcast i8* %165 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %166, %"class.spvtools::opt::IRContext"* %159) #14
  %167 = ptrtoint i8* %165 to i64
  %168 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %159, i64 0, i32 19
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %169, align 8
  %171 = bitcast %"class.std::__1::unique_ptr.400"* %168 to i64*
  store i64 %167, i64* %171, align 8
  %172 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %170, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %164
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %170) #14
  %174 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %170 to i8*
  call void @_ZdlPv(i8* %174) #13
  br label %175

175:                                              ; preds = %173, %164
  %176 = load i32, i32* %160, align 8
  %177 = or i32 %176, 16384
  store i32 %177, i32* %160, align 8
  br label %178

178:                                              ; preds = %158, %175
  %179 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %159, i64 0, i32 19, i32 0, i32 0, i32 0
  %180 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %179, align 8
  %181 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %180, %"class.spvtools::opt::analysis::Constant"* %151, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #14
  %182 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %182) #14
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %181, i64 0, i32 4
  %184 = load i8, i8* %183, align 1, !range !2
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %178
  %187 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %181, i64 0, i32 3
  %188 = load i8, i8* %187, align 4, !range !2
  %189 = zext i8 %188 to i32
  %190 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %181, i32 %189) #14
  br label %191

191:                                              ; preds = %178, %186
  %192 = phi i32 [ %190, %186 ], [ 0, %178 ]
  %193 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %197 = bitcast i32** %195 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %196, %"struct.std::__1::aligned_storage<4, 4>::type"** %197, align 8
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %199 = bitcast %"class.std::__1::unique_ptr.0"* %198 to i64*
  store i64 0, i64* %199, align 8
  %200 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %196 to i32*
  store i64 1, i64* %194, align 8
  store i32 %192, i32* %200, align 8
  %201 = load i8, i8* %8, align 4, !range !2
  %202 = icmp eq i8 %201, 0
  %203 = load i8, i8* %11, align 1, !range !2
  %204 = icmp eq i8 %203, 0
  %205 = select i1 %204, i32 1, i32 2
  %206 = xor i1 %204, true
  %207 = zext i1 %206 to i32
  %208 = select i1 %202, i32 %207, i32 %205
  %209 = add i32 %208, %2
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %212 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %211, align 8
  %213 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %212, i64 %210, i32 1
  %214 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %213, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %215 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %216 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %215, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %215, align 8
  %217 = icmp eq %"class.std::__1::vector.3"* %216, null
  br i1 %217, label %229, label %218

218:                                              ; preds = %191
  %219 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = icmp eq i32* %220, null
  br i1 %221, label %227, label %222

222:                                              ; preds = %218
  %223 = ptrtoint i32* %220 to i64
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %216, i64 0, i32 0, i32 1
  %225 = bitcast i32** %224 to i64*
  store i64 %223, i64* %225, align 8
  %226 = bitcast i32* %220 to i8*
  call void @_ZdlPv(i8* %226) #13
  br label %227

227:                                              ; preds = %222, %218
  %228 = bitcast %"class.std::__1::vector.3"* %216 to i8*
  call void @_ZdlPv(i8* %228) #13
  br label %229

229:                                              ; preds = %191, %227
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #14
  br label %230

230:                                              ; preds = %4, %229
  ret void
}

declare i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #4

declare i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #4

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_set.952", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #13
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #14
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #14
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #14
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %2, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %1) #14
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  %42 = trunc i32 %41 to i16
  %43 = icmp slt i16 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %35
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 5
  %46 = tail call i8* @_Znwm(i64 240) #13
  %47 = bitcast i8* %46 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %47, %"class.std::__1::function"* dereferenceable(32) %45, %"class.spvtools::opt::IRContext"* %39) #14
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 20
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.480"* %49 to i64*
  store i64 %48, i64* %52, align 8
  %53 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %51, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %44
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %51) #14
  %55 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %51 to i8*
  tail call void @_ZdlPv(i8* %55) #13
  br label %56

56:                                               ; preds = %54, %44
  %57 = load i32, i32* %40, align 8
  %58 = or i32 %57, 32768
  store i32 %58, i32* %40, align 8
  br label %59

59:                                               ; preds = %35, %56
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 20, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %59
  %66 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %38, i32 0) #14
  br label %67

67:                                               ; preds = %59, %65
  %68 = phi i32 [ %66, %65 ], [ 0, %59 ]
  %69 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %61, i32 %68) #14
  %70 = bitcast %"class.spvtools::opt::analysis::Type"* %69 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %71 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %71, i64 32
  %73 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %72, align 8
  %74 = tail call %"class.spvtools::opt::analysis::Pointer"* %73(%"class.spvtools::opt::analysis::Type"* %69) #14
  %75 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %74, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %67
  %77 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %70, align 8
  %78 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %77, i64 32
  %79 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %78, align 8
  %80 = tail call %"class.spvtools::opt::analysis::Pointer"* %79(%"class.spvtools::opt::analysis::Type"* %69) #14
  %81 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %80, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 4
  br i1 %83, label %152, label %84

84:                                               ; preds = %67, %76
  %85 = bitcast %"class.std::__1::unordered_set.952"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #14
  %86 = getelementptr inbounds %"class.std::__1::unordered_set.952", %"class.std::__1::unordered_set.952"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = getelementptr inbounds %"class.std::__1::unordered_set.952", %"class.std::__1::unordered_set.952"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"class.std::__1::unordered_set.952", %"class.std::__1::unordered_set.952"* %3, i64 0, i32 0, i32 4, i64 0
  %89 = getelementptr inbounds %"class.std::__1::unordered_set.952", %"class.std::__1::unordered_set.952"* %3, i64 0, i32 0, i32 3
  %90 = bitcast %"class.std::__1::__compressed_pair.971"* %89 to i32*
  %91 = bitcast i8* %88 to i32*
  store i32 -1431655766, i32* %91, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %90, align 8
  %92 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %92, i64 0, i32 11
  %94 = load i32, i32* %93, align 8
  %95 = and i32 %94, 1
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %121

97:                                               ; preds = %84
  %98 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %92, i64 0, i32 4, i32 0, i32 0, i32 0
  %99 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %98, align 8
  %100 = tail call i8* @_Znwm(i64 104) #13
  %101 = bitcast i8* %100 to %"class.spvtools::opt::analysis::DefUseManager"*
  %102 = getelementptr inbounds i8, i8* %100, i64 32
  %103 = bitcast i8* %102 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %103, align 4
  %104 = getelementptr inbounds i8, i8* %100, i64 48
  %105 = getelementptr inbounds i8, i8* %100, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %104, i8 0, i64 16, i1 false) #14
  %106 = bitcast i8* %105 to i8**
  store i8* %104, i8** %106, align 8
  %107 = getelementptr inbounds i8, i8* %100, i64 64
  %108 = getelementptr inbounds i8, i8* %100, i64 96
  %109 = bitcast i8* %108 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %109, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %101, %"class.spvtools::opt::Module"* %99) #14
  %110 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %92, i64 0, i32 6
  %111 = ptrtoint i8* %100 to i64
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.62"* %110 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %113, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %97
  %117 = bitcast %"class.std::__1::unique_ptr.62"* %110 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %117, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %113) #14
  br label %118

118:                                              ; preds = %116, %97
  %119 = load i32, i32* %93, align 8
  %120 = or i32 %119, 1
  store i32 %120, i32* %93, align 8
  br label %121

121:                                              ; preds = %84, %118
  %122 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %92, i64 0, i32 6, i32 0, i32 0, i32 0
  %123 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %122, align 8
  %124 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %123, i32 %1) #14
  %125 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 24, i1 false) #14
  %126 = call i16 @_ZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS0_11InstructionENSt3__16vectorIjNS4_9allocatorIjEEEEPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %124, %"class.std::__1::vector.3"* nonnull %4, %"class.std::__1::unordered_set.952"* nonnull %3)
  %127 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %121
  %131 = ptrtoint i32* %128 to i64
  %132 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %133 = bitcast i32** %132 to i64*
  store i64 %131, i64* %133, align 8
  %134 = bitcast i32* %128 to i8*
  call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %121, %130
  %136 = zext i16 %126 to i64
  %137 = or i64 %136, 21474836480
  %138 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %87, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.957"* %138, null
  br i1 %139, label %146, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::__hash_node_base.957"* [ %143, %140 ], [ %138, %135 ]
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %141, i64 0, i32 0
  %143 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %142, align 8
  %144 = bitcast %"struct.std::__1::__hash_node_base.957"* %141 to i8*
  call void @_ZdlPv(i8* %144) #13
  %145 = icmp eq %"struct.std::__1::__hash_node_base.957"* %143, null
  br i1 %145, label %146, label %140

146:                                              ; preds = %140, %135
  %147 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %86, align 8
  store %"struct.std::__1::__hash_node_base.957"** null, %"struct.std::__1::__hash_node_base.957"*** %86, align 8
  %148 = icmp eq %"struct.std::__1::__hash_node_base.957"** %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = bitcast %"struct.std::__1::__hash_node_base.957"** %147 to i8*
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #14
  br label %152

152:                                              ; preds = %76, %151
  %153 = phi i64 [ %137, %151 ], [ 8589934593, %76 ]
  ret i64 %153
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS0_11InstructionENSt3__16vectorIjNS4_9allocatorIjEEEEPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.952"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::tuple.1185", align 8
  %6 = alloca %"class.std::__1::tuple.1136", align 1
  %7 = alloca %"class.std::__1::function.1096", align 8
  %8 = alloca %"class.std::__1::unordered_set.952"*, align 8
  %9 = alloca %"struct.std::__1::pair.978", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.std::__1::pair.978", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca %"class.std::__1::function.982", align 8
  store %"class.std::__1::unordered_set.952"* %3, %"class.std::__1::unordered_set.952"** %8, align 8
  %15 = bitcast %"struct.std::__1::pair.978"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = zext i8 %21 to i32
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %22) #14
  br label %24

24:                                               ; preds = %4, %19
  %25 = phi i32 [ %23, %19 ], [ 0, %4 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 0
  store i32 %25, i32* %26, align 8, !alias.scope !4
  %27 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 1
  %28 = bitcast %"class.std::__1::vector.3"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #14, !alias.scope !4
  %29 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !4
  %32 = bitcast %"class.std::__1::vector.3"* %2 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !4
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 2
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %59, label %37

37:                                               ; preds = %24
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %41

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.3"* %27 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %40) #15
  unreachable

41:                                               ; preds = %37
  %42 = tail call i8* @_Znwm(i64 %34) #13
  %43 = bitcast i8* %42 to i32*
  %44 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 1, i32 0, i32 1
  %45 = bitcast i32** %44 to i8**
  store i8* %42, i8** %45, align 8, !alias.scope !4
  %46 = bitcast %"class.std::__1::vector.3"* %27 to i8**
  store i8* %42, i8** %46, align 8, !alias.scope !4
  %47 = getelementptr inbounds i32, i32* %43, i64 %35
  %48 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i32* %47, i32** %48, align 8, !alias.scope !4
  %49 = bitcast i32** %44 to i64*
  %50 = ptrtoint i8* %42 to i64
  %51 = icmp sgt i64 %34, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %41
  %53 = lshr exact i64 %34, 2
  %54 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %54, i64 %34, i1 false) #14
  %55 = getelementptr inbounds i32, i32* %43, i64 %53
  %56 = ptrtoint i32* %55 to i64
  br label %57

57:                                               ; preds = %52, %41
  %58 = phi i64 [ %56, %52 ], [ %50, %41 ]
  store i64 %58, i64* %49, align 8, !alias.scope !4
  br label %59

59:                                               ; preds = %24, %57
  %60 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 2, i32 0
  %61 = call %"struct.std::__1::__hash_node_base.915"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.911"* %60, %"struct.std::__1::pair.978"* nonnull dereferenceable(32) %9) #14
  %62 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 1, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = ptrtoint i32* %63 to i64
  %67 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %9, i64 0, i32 1, i32 0, i32 1
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast i32* %63 to i8*
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %59, %65
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #14
  %71 = icmp eq %"struct.std::__1::__hash_node_base.915"* %61, null
  br i1 %71, label %76, label %72

72:                                               ; preds = %70
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %61, i64 6
  %74 = bitcast %"struct.std::__1::__hash_node_base.915"* %73 to i16*
  %75 = load i16, i16* %74, align 8
  br label %475

76:                                               ; preds = %70
  %77 = load %"class.std::__1::unordered_set.952"*, %"class.std::__1::unordered_set.952"** %8, align 8
  %78 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #14
  %79 = load i8, i8* %16, align 1, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %83 = load i8, i8* %82, align 4, !range !2
  %84 = zext i8 %83 to i32
  %85 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %84) #14
  br label %86

86:                                               ; preds = %76, %81
  %87 = phi i32 [ %85, %81 ], [ 0, %76 ]
  store i32 %87, i32* %10, align 4
  %88 = getelementptr inbounds %"class.std::__1::unordered_set.952", %"class.std::__1::unordered_set.952"* %77, i64 0, i32 0
  %89 = call { %"struct.std::__1::__hash_node_base.957"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.953"* %88, i32* nonnull dereferenceable(4) %10, i32* nonnull dereferenceable(4) %10) #14
  %90 = extractvalue { %"struct.std::__1::__hash_node_base.957"*, i8 } %89, 1
  %91 = and i8 %90, 1
  %92 = icmp eq i8 %91, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #14
  br i1 %92, label %475, label %93

93:                                               ; preds = %86
  %94 = bitcast %"struct.std::__1::pair.978"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #14
  %95 = load i8, i8* %16, align 1, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %99 = load i8, i8* %98, align 4, !range !2
  %100 = zext i8 %99 to i32
  %101 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %100) #14
  br label %102

102:                                              ; preds = %93, %97
  %103 = phi i32 [ %101, %97 ], [ 0, %93 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 0
  store i32 %103, i32* %104, align 8, !alias.scope !7
  %105 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 1
  %106 = bitcast %"class.std::__1::vector.3"* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 24, i1 false) #14, !alias.scope !7
  %107 = load i64, i64* %30, align 8, !noalias !7
  %108 = load i64, i64* %32, align 8, !noalias !7
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %134, label %112

112:                                              ; preds = %102
  %113 = icmp ugt i64 %110, 4611686018427387903
  br i1 %113, label %114, label %116

114:                                              ; preds = %112
  %115 = bitcast %"class.std::__1::vector.3"* %105 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %115) #15
  unreachable

116:                                              ; preds = %112
  %117 = call i8* @_Znwm(i64 %109) #13
  %118 = bitcast i8* %117 to i32*
  %119 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 1, i32 0, i32 1
  %120 = bitcast i32** %119 to i8**
  store i8* %117, i8** %120, align 8, !alias.scope !7
  %121 = bitcast %"class.std::__1::vector.3"* %105 to i8**
  store i8* %117, i8** %121, align 8, !alias.scope !7
  %122 = getelementptr inbounds i32, i32* %118, i64 %110
  %123 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store i32* %122, i32** %123, align 8, !alias.scope !7
  %124 = bitcast i32** %119 to i64*
  %125 = ptrtoint i8* %117 to i64
  %126 = icmp sgt i64 %109, 0
  br i1 %126, label %127, label %132

127:                                              ; preds = %116
  %128 = lshr exact i64 %109, 2
  %129 = inttoptr i64 %108 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %117, i8* align 4 %129, i64 %109, i1 false) #14
  %130 = getelementptr inbounds i32, i32* %118, i64 %128
  %131 = ptrtoint i32* %130 to i64
  br label %132

132:                                              ; preds = %127, %116
  %133 = phi i64 [ %131, %127 ], [ %125, %116 ]
  store i64 %133, i64* %124, align 8, !alias.scope !7
  br label %134

134:                                              ; preds = %102, %132
  %135 = bitcast %"class.std::__1::tuple.1185"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #14
  %136 = getelementptr inbounds %"class.std::__1::tuple.1185", %"class.std::__1::tuple.1185"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::pair.978"* %11, %"struct.std::__1::pair.978"** %136, align 8
  %137 = getelementptr inbounds %"class.std::__1::tuple.1136", %"class.std::__1::tuple.1136"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %137) #14
  %138 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %60, %"struct.std::__1::pair.978"* nonnull dereferenceable(32) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1185"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1136"* nonnull dereferenceable(1) %6) #14
  %139 = extractvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %138, 0
  %140 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %139, i64 6
  %141 = bitcast %"struct.std::__1::__hash_node_base.915"* %140 to %"struct.std::__1::pair"*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %137) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #14
  %142 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 1, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %134
  %146 = ptrtoint i32* %143 to i64
  %147 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %11, i64 0, i32 1, i32 0, i32 1
  %148 = bitcast i32** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = bitcast i32* %143 to i8*
  call void @_ZdlPv(i8* %149) #13
  br label %150

150:                                              ; preds = %134, %145
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #14
  %151 = bitcast %"struct.std::__1::__hash_node_base.915"* %140 to i8*
  store i8 0, i8* %151, align 1
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 0, i32 1
  store i8 0, i8* %152, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #14
  store i8 0, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #14
  store i8 0, i8* %13, align 1
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %154 = load i32, i32* %153, align 8
  switch i32 %154, label %392 [
    i32 59, label %155
    i32 55, label %155
    i32 65, label %186
    i32 66, label %186
    i32 67, label %289
  ]

155:                                              ; preds = %150, %150
  %156 = call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %1, i32 0, i32 23)
  %157 = zext i1 %156 to i8
  %158 = load i8, i8* %12, align 1, !range !2
  %159 = or i8 %158, %157
  store i8 %159, i8* %12, align 1
  %160 = call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %1, i32 0, i32 21)
  %161 = zext i1 %160 to i32
  %162 = load i8, i8* %13, align 1, !range !2
  %163 = zext i8 %162 to i32
  %164 = or i32 %163, %161
  %165 = trunc i32 %164 to i8
  store i8 %165, i8* %13, align 1
  %166 = load i8, i8* %12, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  %168 = icmp eq i32 %164, 0
  %169 = or i1 %167, %168
  br i1 %169, label %170, label %392

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %172 = load i8, i8* %171, align 4, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %170
  %175 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #14
  br label %176

176:                                              ; preds = %170, %174
  %177 = phi i32 [ %175, %174 ], [ 0, %170 ]
  %178 = call i16 @_ZN8spvtools3opt18UpgradeMemoryModel9CheckTypeEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::UpgradeMemoryModel"* %0, i32 %177, %"class.std::__1::vector.3"* dereferenceable(24) %2)
  %179 = trunc i16 %178 to i8
  %180 = lshr i16 %178, 8
  %181 = trunc i16 %180 to i8
  %182 = load i8, i8* %12, align 1, !range !2
  %183 = or i8 %182, %179
  store i8 %183, i8* %12, align 1
  %184 = load i8, i8* %13, align 1, !range !2
  %185 = or i8 %184, %181
  store i8 %185, i8* %13, align 1
  br label %392

186:                                              ; preds = %150, %150
  %187 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %188 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %189 = bitcast %"struct.spvtools::opt::Operand"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::vector"* %187 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = sdiv exact i64 %193, 48
  %195 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %196 = load i8, i8* %195, align 4, !range !2
  %197 = icmp eq i8 %196, 0
  %198 = load i8, i8* %16, align 1, !range !2
  %199 = icmp eq i8 %198, 0
  %200 = select i1 %199, i32 1, i32 2
  %201 = xor i1 %199, true
  %202 = zext i1 %201 to i32
  %203 = select i1 %197, i32 %202, i32 %200
  %204 = trunc i64 %194 to i32
  %205 = xor i32 %203, -1
  %206 = add i32 %205, %204
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %392, label %208

208:                                              ; preds = %186
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %210 = bitcast i32** %209 to i64*
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  br label %212

212:                                              ; preds = %286, %208
  %213 = phi i8 [ %198, %208 ], [ %288, %286 ]
  %214 = phi i8 [ %196, %208 ], [ %287, %286 ]
  %215 = phi i32 [ %206, %208 ], [ %284, %286 ]
  %216 = icmp eq i8 %214, 0
  %217 = icmp eq i8 %213, 0
  %218 = select i1 %217, i32 1, i32 2
  %219 = xor i1 %217, true
  %220 = zext i1 %219 to i32
  %221 = select i1 %216, i32 %220, i32 %218
  %222 = add i32 %221, %215
  %223 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %222) #14
  %224 = load i32*, i32** %29, align 8
  %225 = load i32*, i32** %209, align 8
  %226 = icmp ult i32* %224, %225
  %227 = ptrtoint i32* %225 to i64
  br i1 %226, label %228, label %231

228:                                              ; preds = %212
  store i32 %223, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %224, i64 1
  %230 = ptrtoint i32* %229 to i64
  store i64 %230, i64* %30, align 8
  br label %283

231:                                              ; preds = %212
  %232 = ptrtoint i32* %224 to i64
  %233 = load i64, i64* %32, align 8
  %234 = sub i64 %232, %233
  %235 = ashr exact i64 %234, 2
  %236 = add nsw i64 %235, 1
  %237 = icmp ugt i64 %236, 4611686018427387903
  br i1 %237, label %238, label %240

238:                                              ; preds = %231
  %239 = bitcast %"class.std::__1::vector.3"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %239) #15
  unreachable

240:                                              ; preds = %231
  %241 = sub i64 %227, %233
  %242 = ashr exact i64 %241, 2
  %243 = icmp ult i64 %242, 2305843009213693951
  br i1 %243, label %244, label %252

244:                                              ; preds = %240
  %245 = ashr exact i64 %241, 1
  %246 = icmp ult i64 %245, %236
  %247 = select i1 %246, i64 %236, i64 %245
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %257, label %249

249:                                              ; preds = %244
  %250 = icmp ugt i64 %247, 4611686018427387903
  br i1 %250, label %251, label %252

251:                                              ; preds = %249
  call void @abort() #15
  unreachable

252:                                              ; preds = %249, %240
  %253 = phi i64 [ %247, %249 ], [ 4611686018427387903, %240 ]
  %254 = shl i64 %253, 2
  %255 = call i8* @_Znwm(i64 %254) #13
  %256 = bitcast i8* %255 to i32*
  br label %257

257:                                              ; preds = %252, %244
  %258 = phi i64 [ %253, %252 ], [ 0, %244 ]
  %259 = phi i32* [ %256, %252 ], [ null, %244 ]
  %260 = getelementptr inbounds i32, i32* %259, i64 %235
  %261 = getelementptr inbounds i32, i32* %259, i64 %258
  %262 = ptrtoint i32* %261 to i64
  store i32 %223, i32* %260, align 4
  %263 = getelementptr inbounds i32, i32* %260, i64 1
  %264 = ptrtoint i32* %263 to i64
  %265 = load i32*, i32** %211, align 8
  %266 = load i64, i64* %30, align 8
  %267 = ptrtoint i32* %265 to i64
  %268 = sub i64 %266, %267
  %269 = ashr exact i64 %268, 2
  %270 = sub nsw i64 0, %269
  %271 = getelementptr inbounds i32, i32* %260, i64 %270
  %272 = ptrtoint i32* %271 to i64
  %273 = icmp sgt i64 %268, 0
  br i1 %273, label %274, label %278

274:                                              ; preds = %257
  %275 = bitcast i32* %271 to i8*
  %276 = bitcast i32* %265 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %275, i8* align 4 %276, i64 %268, i1 false) #14
  %277 = load i32*, i32** %211, align 8
  br label %278

278:                                              ; preds = %274, %257
  %279 = phi i32* [ %265, %257 ], [ %277, %274 ]
  store i64 %272, i64* %32, align 8
  store i64 %264, i64* %30, align 8
  store i64 %262, i64* %210, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %278
  %282 = bitcast i32* %279 to i8*
  call void @_ZdlPv(i8* %282) #13
  br label %283

283:                                              ; preds = %228, %278, %281
  %284 = add i32 %215, -1
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %392, label %286

286:                                              ; preds = %283
  %287 = load i8, i8* %195, align 4, !range !2
  %288 = load i8, i8* %16, align 1, !range !2
  br label %212

289:                                              ; preds = %150
  %290 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %291 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %292 = bitcast %"struct.spvtools::opt::Operand"** %291 to i64*
  %293 = load i64, i64* %292, align 8
  %294 = bitcast %"class.std::__1::vector"* %290 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = sub i64 %293, %295
  %297 = sdiv exact i64 %296, 48
  %298 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %299 = load i8, i8* %298, align 4, !range !2
  %300 = icmp eq i8 %299, 0
  %301 = load i8, i8* %16, align 1, !range !2
  %302 = icmp eq i8 %301, 0
  %303 = select i1 %302, i32 1, i32 2
  %304 = xor i1 %302, true
  %305 = zext i1 %304 to i32
  %306 = select i1 %300, i32 %305, i32 %303
  %307 = trunc i64 %297 to i32
  %308 = xor i32 %306, -1
  %309 = add i32 %308, %307
  %310 = icmp ugt i32 %309, 1
  br i1 %310, label %311, label %392

311:                                              ; preds = %289
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %313 = bitcast i32** %312 to i64*
  %314 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 0
  br label %315

315:                                              ; preds = %389, %311
  %316 = phi i8 [ %301, %311 ], [ %391, %389 ]
  %317 = phi i8 [ %299, %311 ], [ %390, %389 ]
  %318 = phi i32 [ %309, %311 ], [ %387, %389 ]
  %319 = icmp eq i8 %317, 0
  %320 = icmp eq i8 %316, 0
  %321 = select i1 %320, i32 1, i32 2
  %322 = xor i1 %320, true
  %323 = zext i1 %322 to i32
  %324 = select i1 %319, i32 %323, i32 %321
  %325 = add i32 %324, %318
  %326 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %325) #14
  %327 = load i32*, i32** %29, align 8
  %328 = load i32*, i32** %312, align 8
  %329 = icmp ult i32* %327, %328
  %330 = ptrtoint i32* %328 to i64
  br i1 %329, label %331, label %334

331:                                              ; preds = %315
  store i32 %326, i32* %327, align 4
  %332 = getelementptr inbounds i32, i32* %327, i64 1
  %333 = ptrtoint i32* %332 to i64
  store i64 %333, i64* %30, align 8
  br label %386

334:                                              ; preds = %315
  %335 = ptrtoint i32* %327 to i64
  %336 = load i64, i64* %32, align 8
  %337 = sub i64 %335, %336
  %338 = ashr exact i64 %337, 2
  %339 = add nsw i64 %338, 1
  %340 = icmp ugt i64 %339, 4611686018427387903
  br i1 %340, label %341, label %343

341:                                              ; preds = %334
  %342 = bitcast %"class.std::__1::vector.3"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %342) #15
  unreachable

343:                                              ; preds = %334
  %344 = sub i64 %330, %336
  %345 = ashr exact i64 %344, 2
  %346 = icmp ult i64 %345, 2305843009213693951
  br i1 %346, label %347, label %355

347:                                              ; preds = %343
  %348 = ashr exact i64 %344, 1
  %349 = icmp ult i64 %348, %339
  %350 = select i1 %349, i64 %339, i64 %348
  %351 = icmp eq i64 %350, 0
  br i1 %351, label %360, label %352

352:                                              ; preds = %347
  %353 = icmp ugt i64 %350, 4611686018427387903
  br i1 %353, label %354, label %355

354:                                              ; preds = %352
  call void @abort() #15
  unreachable

355:                                              ; preds = %352, %343
  %356 = phi i64 [ %350, %352 ], [ 4611686018427387903, %343 ]
  %357 = shl i64 %356, 2
  %358 = call i8* @_Znwm(i64 %357) #13
  %359 = bitcast i8* %358 to i32*
  br label %360

360:                                              ; preds = %355, %347
  %361 = phi i64 [ %356, %355 ], [ 0, %347 ]
  %362 = phi i32* [ %359, %355 ], [ null, %347 ]
  %363 = getelementptr inbounds i32, i32* %362, i64 %338
  %364 = getelementptr inbounds i32, i32* %362, i64 %361
  %365 = ptrtoint i32* %364 to i64
  store i32 %326, i32* %363, align 4
  %366 = getelementptr inbounds i32, i32* %363, i64 1
  %367 = ptrtoint i32* %366 to i64
  %368 = load i32*, i32** %314, align 8
  %369 = load i64, i64* %30, align 8
  %370 = ptrtoint i32* %368 to i64
  %371 = sub i64 %369, %370
  %372 = ashr exact i64 %371, 2
  %373 = sub nsw i64 0, %372
  %374 = getelementptr inbounds i32, i32* %363, i64 %373
  %375 = ptrtoint i32* %374 to i64
  %376 = icmp sgt i64 %371, 0
  br i1 %376, label %377, label %381

377:                                              ; preds = %360
  %378 = bitcast i32* %374 to i8*
  %379 = bitcast i32* %368 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %378, i8* align 4 %379, i64 %371, i1 false) #14
  %380 = load i32*, i32** %314, align 8
  br label %381

381:                                              ; preds = %377, %360
  %382 = phi i32* [ %368, %360 ], [ %380, %377 ]
  store i64 %375, i64* %32, align 8
  store i64 %367, i64* %30, align 8
  store i64 %365, i64* %313, align 8
  %383 = icmp eq i32* %382, null
  br i1 %383, label %386, label %384

384:                                              ; preds = %381
  %385 = bitcast i32* %382 to i8*
  call void @_ZdlPv(i8* %385) #13
  br label %386

386:                                              ; preds = %331, %381, %384
  %387 = add i32 %318, -1
  %388 = icmp ugt i32 %387, 1
  br i1 %388, label %389, label %392

389:                                              ; preds = %386
  %390 = load i8, i8* %298, align 4, !range !2
  %391 = load i8, i8* %16, align 1, !range !2
  br label %315

392:                                              ; preds = %386, %283, %289, %186, %155, %150, %176
  %393 = load i8, i8* %12, align 1, !range !2
  %394 = icmp eq i8 %393, 0
  %395 = load i8, i8* %13, align 1
  %396 = icmp eq i8 %395, 0
  %397 = or i1 %394, %396
  br i1 %397, label %399, label %398

398:                                              ; preds = %392
  store i8 1, i8* %151, align 1
  store i8 1, i8* %152, align 1
  br label %473

399:                                              ; preds = %392
  %400 = load i32, i32* %153, align 8
  switch i32 %400, label %401 [
    i32 59, label %466
    i32 55, label %466
  ]

401:                                              ; preds = %399
  %402 = bitcast %"class.std::__1::function.982"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %402) #14
  %403 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %14, i64 0, i32 0, i32 1, i32 0
  %404 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %14, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS8_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESE_EEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %403, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %404, align 8
  %405 = call i8* @_Znwm(i64 40) #13, !noalias !10
  %406 = bitcast i8* %405 to %"class.spvtools::opt::UpgradeMemoryModel"**
  store %"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::UpgradeMemoryModel"** %406, align 8
  %407 = getelementptr inbounds i8, i8* %405, i64 8
  %408 = bitcast i8* %407 to i8**
  store i8* %12, i8** %408, align 8
  %409 = getelementptr inbounds i8, i8* %405, i64 16
  %410 = bitcast i8* %409 to i8**
  store i8* %13, i8** %410, align 8
  %411 = getelementptr inbounds i8, i8* %405, i64 24
  %412 = bitcast i8* %411 to %"class.std::__1::vector.3"**
  store %"class.std::__1::vector.3"* %2, %"class.std::__1::vector.3"** %412, align 8
  %413 = getelementptr inbounds i8, i8* %405, i64 32
  %414 = bitcast i8* %413 to %"class.std::__1::unordered_set.952"***
  store %"class.std::__1::unordered_set.952"** %8, %"class.std::__1::unordered_set.952"*** %414, align 8
  %415 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %14, i64 0, i32 0, i32 0, i32 0
  store i8* %405, i8** %415, align 8
  %416 = bitcast %"class.std::__1::function.1096"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %416) #14
  %417 = ptrtoint %"class.std::__1::function.982"* %14 to i64
  %418 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %7, i64 0, i32 0, i32 1, i32 0
  %419 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %7, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %418, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %419, align 8
  %420 = bitcast %"class.std::__1::function.1096"* %7 to i64*
  store i64 %417, i64* %420, align 8
  %421 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %422 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %421, align 8
  %423 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %424 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %423, align 8
  %425 = icmp eq %"struct.spvtools::opt::Operand"* %422, %424
  br i1 %425, label %448, label %426

426:                                              ; preds = %401
  %427 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %7, i64 0, i32 0, i32 0
  br label %428

428:                                              ; preds = %443, %426
  %429 = phi %"struct.spvtools::opt::Operand"* [ %422, %426 ], [ %444, %443 ]
  %430 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 0
  %431 = load i32, i32* %430, align 8
  %432 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %431) #14
  br i1 %432, label %433, label %443

433:                                              ; preds = %428
  %434 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %435 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %434, align 8
  %436 = icmp eq %"class.std::__1::vector.3"* %435, null
  %437 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %435, i64 0, i32 0, i32 0
  %438 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 0, i32 1, i32 2
  %439 = select i1 %436, i32** %438, i32** %437
  %440 = load i32*, i32** %439, align 8
  %441 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %418, align 8
  %442 = call zeroext i1 %441(%"union.std::__1::__function::__policy_storage"* nonnull %427, i32* %440) #14
  br i1 %442, label %443, label %446

443:                                              ; preds = %433, %428
  %444 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %429, i64 1
  %445 = icmp eq %"struct.spvtools::opt::Operand"* %444, %424
  br i1 %445, label %446, label %428

446:                                              ; preds = %443, %433
  %447 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %419, align 8
  br label %448

448:                                              ; preds = %446, %401
  %449 = phi %"struct.std::__1::__function::__policy"* [ %447, %446 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %401 ]
  %450 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %449, i64 0, i32 1
  %451 = load void (i8*)*, void (i8*)** %450, align 8
  %452 = icmp eq void (i8*)* %451, null
  br i1 %452, label %456, label %453

453:                                              ; preds = %448
  %454 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %7, i64 0, i32 0, i32 0, i32 0
  %455 = load i8*, i8** %454, align 8
  call void %451(i8* %455) #14
  br label %456

456:                                              ; preds = %448, %453
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %416) #14
  %457 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %404, align 8
  %458 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %457, i64 0, i32 1
  %459 = load void (i8*)*, void (i8*)** %458, align 8
  %460 = icmp eq void (i8*)* %459, null
  br i1 %460, label %463, label %461

461:                                              ; preds = %456
  %462 = load i8*, i8** %415, align 8
  call void %459(i8* %462) #14
  br label %463

463:                                              ; preds = %456, %461
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %402) #14
  %464 = load i8, i8* %12, align 1, !range !2
  %465 = load i8, i8* %13, align 1, !range !2
  br label %466

466:                                              ; preds = %399, %399, %463
  %467 = phi i8 [ %395, %399 ], [ %395, %399 ], [ %465, %463 ]
  %468 = phi i8 [ %393, %399 ], [ %393, %399 ], [ %464, %463 ]
  store i8 %468, i8* %151, align 1
  store i8 %467, i8* %152, align 1
  %469 = zext i8 %467 to i16
  %470 = shl nuw nsw i16 %469, 8
  %471 = zext i8 %468 to i16
  %472 = or i16 %470, %471
  br label %473

473:                                              ; preds = %466, %398
  %474 = phi i16 [ 257, %398 ], [ %472, %466 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #14
  br label %475

475:                                              ; preds = %86, %473, %72
  %476 = phi i16 [ %75, %72 ], [ %474, %473 ], [ 0, %86 ]
  ret i16 %476
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.1021", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %33

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = bitcast %"class.spvtools::opt::Module"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call i8* @_Znwm(i64 48) #13
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DecorationManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 40
  %21 = bitcast i8* %20 to i64*
  store i64 %15, i64* %21, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %17) #14
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 7
  %23 = ptrtoint i8* %16 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.122"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %12
  %29 = bitcast %"class.std::__1::unique_ptr.122"* %22 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %29, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %25) #14
  br label %30

30:                                               ; preds = %28, %12
  %31 = load i32, i32* %8, align 8
  %32 = or i32 %31, 4
  store i32 %32, i32* %8, align 8
  br label %33

33:                                               ; preds = %4, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 7, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = zext i8 %41 to i32
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %42) #14
  br label %44

44:                                               ; preds = %33, %39
  %45 = phi i32 [ %43, %39 ], [ 0, %33 ]
  %46 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %5, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %5, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel13HasDecorationEPS5_j14SpvDecoration_E3$_4S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %46, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS5_11InstructionEj14SpvDecoration_E3$_4FbRS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %47, align 8
  %48 = bitcast %"class.std::__1::function.1021"* %5 to i32*
  store i32 %2, i32* %48, align 8
  %49 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %35, i32 %45, i32 %3, %"class.std::__1::function.1021"* nonnull %5) #14
  %50 = xor i1 %49, true
  %51 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %51, i64 0, i32 1
  %53 = load void (i8*)*, void (i8*)** %52, align 8
  %54 = icmp eq void (i8*)* %53, null
  br i1 %54, label %58, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %5, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void %53(i8* %57) #14
  br label %58

58:                                               ; preds = %44, %55
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN8spvtools3opt18UpgradeMemoryModel9CheckTypeEjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, i32, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #13
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #14
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #14
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %23 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #14
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %1) #14
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %67

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %44, align 8
  %46 = tail call i8* @_Znwm(i64 104) #13
  %47 = bitcast i8* %46 to %"class.spvtools::opt::analysis::DefUseManager"*
  %48 = getelementptr inbounds i8, i8* %46, i64 32
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %46, i64 48
  %51 = getelementptr inbounds i8, i8* %46, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #14
  %52 = bitcast i8* %51 to i8**
  store i8* %50, i8** %52, align 8
  %53 = getelementptr inbounds i8, i8* %46, i64 64
  %54 = getelementptr inbounds i8, i8* %46, i64 96
  %55 = bitcast i8* %54 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %55, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %47, %"class.spvtools::opt::Module"* %45) #14
  %56 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 6
  %57 = ptrtoint i8* %46 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %56, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %58, align 8
  %60 = bitcast %"class.std::__1::unique_ptr.62"* %56 to i64*
  store i64 %57, i64* %60, align 8
  %61 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %59, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %43
  %63 = bitcast %"class.std::__1::unique_ptr.62"* %56 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %63, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %59) #14
  br label %64

64:                                               ; preds = %62, %43
  %65 = load i32, i32* %39, align 8
  %66 = or i32 %65, 1
  store i32 %66, i32* %39, align 8
  br label %67

67:                                               ; preds = %34, %64
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 6, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %68, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 3
  %71 = load i8, i8* %70, align 4, !range !2
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %37, i64 0, i32 4
  %74 = load i8, i8* %73, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i32 1, i32 2
  %77 = xor i1 %75, true
  %78 = zext i1 %77 to i32
  %79 = select i1 %72, i32 %78, i32 %76
  %80 = add nuw nsw i32 %79, 1
  %81 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %37, i32 %80) #14
  %82 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %69, i32 %81) #14
  %83 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %2, i64 0, i32 0, i32 1
  %84 = bitcast i32** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %2 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = sub i64 %85, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %303

92:                                               ; preds = %67
  %93 = shl i64 %88, 30
  %94 = ashr exact i64 %93, 32
  br label %95

95:                                               ; preds = %92, %287
  %96 = phi i64 [ %94, %92 ], [ %100, %287 ]
  %97 = phi %"class.spvtools::opt::Instruction"* [ %82, %92 ], [ %294, %287 ]
  %98 = phi i8 [ 0, %92 ], [ %291, %287 ]
  %99 = phi i8 [ 0, %92 ], [ %290, %287 ]
  %100 = add nsw i64 %96, -1
  %101 = icmp eq i8 %98, 0
  %102 = icmp eq i8 %99, 0
  %103 = or i1 %102, %101
  br i1 %103, label %104, label %296

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 2
  %106 = load i32, i32* %105, align 8
  switch i32 %106, label %245 [
    i32 32, label %107
    i32 30, label %150
  ]

107:                                              ; preds = %104
  %108 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %109 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 11
  %110 = load i32, i32* %109, align 8
  %111 = and i32 %110, 1
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %137

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 4, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %114, align 8
  %116 = tail call i8* @_Znwm(i64 104) #13
  %117 = bitcast i8* %116 to %"class.spvtools::opt::analysis::DefUseManager"*
  %118 = getelementptr inbounds i8, i8* %116, i64 32
  %119 = bitcast i8* %118 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %119, align 4
  %120 = getelementptr inbounds i8, i8* %116, i64 48
  %121 = getelementptr inbounds i8, i8* %116, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #14
  %122 = bitcast i8* %121 to i8**
  store i8* %120, i8** %122, align 8
  %123 = getelementptr inbounds i8, i8* %116, i64 64
  %124 = getelementptr inbounds i8, i8* %116, i64 96
  %125 = bitcast i8* %124 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %125, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %117, %"class.spvtools::opt::Module"* %115) #14
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6
  %127 = ptrtoint i8* %116 to i64
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %126, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %128, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.62"* %126 to i64*
  store i64 %127, i64* %130, align 8
  %131 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %129, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %113
  %133 = bitcast %"class.std::__1::unique_ptr.62"* %126 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %133, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %129) #14
  br label %134

134:                                              ; preds = %132, %113
  %135 = load i32, i32* %109, align 8
  %136 = or i32 %135, 1
  store i32 %136, i32* %109, align 8
  br label %137

137:                                              ; preds = %107, %134
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %108, i64 0, i32 6, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %140 = load i8, i8* %139, align 4, !range !2
  %141 = icmp eq i8 %140, 0
  %142 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %143 = load i8, i8* %142, align 1, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = select i1 %144, i32 1, i32 2
  %146 = xor i1 %144, true
  %147 = zext i1 %146 to i32
  %148 = select i1 %141, i32 %147, i32 %145
  %149 = add nuw nsw i32 %148, 1
  br label %287

150:                                              ; preds = %104
  %151 = load i64, i64* %84, align 8
  %152 = load i64, i64* %86, align 8
  %153 = sub i64 %151, %152
  %154 = ashr exact i64 %153, 2
  %155 = icmp ugt i64 %154, %100
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = bitcast %"class.std::__1::vector.3"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %157) #15
  unreachable

158:                                              ; preds = %150
  %159 = inttoptr i64 %152 to i32*
  %160 = getelementptr inbounds i32, i32* %159, i64 %100
  %161 = load i32, i32* %160, align 4
  %162 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 11
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %191

167:                                              ; preds = %158
  %168 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 4, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %168, align 8
  %170 = tail call i8* @_Znwm(i64 104) #13
  %171 = bitcast i8* %170 to %"class.spvtools::opt::analysis::DefUseManager"*
  %172 = getelementptr inbounds i8, i8* %170, i64 32
  %173 = bitcast i8* %172 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %173, align 4
  %174 = getelementptr inbounds i8, i8* %170, i64 48
  %175 = getelementptr inbounds i8, i8* %170, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %174, i8 0, i64 16, i1 false) #14
  %176 = bitcast i8* %175 to i8**
  store i8* %174, i8** %176, align 8
  %177 = getelementptr inbounds i8, i8* %170, i64 64
  %178 = getelementptr inbounds i8, i8* %170, i64 96
  %179 = bitcast i8* %178 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %177, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %179, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %171, %"class.spvtools::opt::Module"* %169) #14
  %180 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 6
  %181 = ptrtoint i8* %170 to i64
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %180, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %182, align 8
  %184 = bitcast %"class.std::__1::unique_ptr.62"* %180 to i64*
  store i64 %181, i64* %184, align 8
  %185 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %183, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %167
  %187 = bitcast %"class.std::__1::unique_ptr.62"* %180 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %187, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %183) #14
  br label %188

188:                                              ; preds = %186, %167
  %189 = load i32, i32* %163, align 8
  %190 = or i32 %189, 1
  store i32 %190, i32* %163, align 8
  br label %191

191:                                              ; preds = %158, %188
  %192 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 6, i32 0, i32 0, i32 0
  %193 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %192, align 8
  %194 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %193, i32 %161) #14
  %195 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel13GetIndexValueEPNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %194)
  %196 = trunc i64 %195 to i32
  %197 = tail call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %97, i32 %196, i32 23)
  %198 = zext i1 %197 to i8
  %199 = or i8 %98, %198
  %200 = tail call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %97, i32 %196, i32 21)
  %201 = zext i1 %200 to i8
  %202 = or i8 %99, %201
  %203 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %204 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %203, i64 0, i32 11
  %205 = load i32, i32* %204, align 8
  %206 = and i32 %205, 1
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %232

208:                                              ; preds = %191
  %209 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %203, i64 0, i32 4, i32 0, i32 0, i32 0
  %210 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %209, align 8
  %211 = tail call i8* @_Znwm(i64 104) #13
  %212 = bitcast i8* %211 to %"class.spvtools::opt::analysis::DefUseManager"*
  %213 = getelementptr inbounds i8, i8* %211, i64 32
  %214 = bitcast i8* %213 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %211, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %214, align 4
  %215 = getelementptr inbounds i8, i8* %211, i64 48
  %216 = getelementptr inbounds i8, i8* %211, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %215, i8 0, i64 16, i1 false) #14
  %217 = bitcast i8* %216 to i8**
  store i8* %215, i8** %217, align 8
  %218 = getelementptr inbounds i8, i8* %211, i64 64
  %219 = getelementptr inbounds i8, i8* %211, i64 96
  %220 = bitcast i8* %219 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %220, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %212, %"class.spvtools::opt::Module"* %210) #14
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %203, i64 0, i32 6
  %222 = ptrtoint i8* %211 to i64
  %223 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %221, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %223, align 8
  %225 = bitcast %"class.std::__1::unique_ptr.62"* %221 to i64*
  store i64 %222, i64* %225, align 8
  %226 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %224, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %208
  %228 = bitcast %"class.std::__1::unique_ptr.62"* %221 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %228, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %224) #14
  br label %229

229:                                              ; preds = %227, %208
  %230 = load i32, i32* %204, align 8
  %231 = or i32 %230, 1
  store i32 %231, i32* %204, align 8
  br label %232

232:                                              ; preds = %191, %229
  %233 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %203, i64 0, i32 6, i32 0, i32 0, i32 0
  %234 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %235 = load i8, i8* %234, align 4, !range !2
  %236 = icmp eq i8 %235, 0
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %238 = load i8, i8* %237, align 1, !range !2
  %239 = icmp eq i8 %238, 0
  %240 = select i1 %239, i32 1, i32 2
  %241 = xor i1 %239, true
  %242 = zext i1 %241 to i32
  %243 = select i1 %236, i32 %242, i32 %240
  %244 = add i32 %243, %196
  br label %287

245:                                              ; preds = %104
  %246 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %247 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 11
  %248 = load i32, i32* %247, align 8
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %275

251:                                              ; preds = %245
  %252 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 4, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %252, align 8
  %254 = tail call i8* @_Znwm(i64 104) #13
  %255 = bitcast i8* %254 to %"class.spvtools::opt::analysis::DefUseManager"*
  %256 = getelementptr inbounds i8, i8* %254, i64 32
  %257 = bitcast i8* %256 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %257, align 4
  %258 = getelementptr inbounds i8, i8* %254, i64 48
  %259 = getelementptr inbounds i8, i8* %254, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %258, i8 0, i64 16, i1 false) #14
  %260 = bitcast i8* %259 to i8**
  store i8* %258, i8** %260, align 8
  %261 = getelementptr inbounds i8, i8* %254, i64 64
  %262 = getelementptr inbounds i8, i8* %254, i64 96
  %263 = bitcast i8* %262 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %261, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %263, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %255, %"class.spvtools::opt::Module"* %253) #14
  %264 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 6
  %265 = ptrtoint i8* %254 to i64
  %266 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %264, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %266, align 8
  %268 = bitcast %"class.std::__1::unique_ptr.62"* %264 to i64*
  store i64 %265, i64* %268, align 8
  %269 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %267, null
  br i1 %269, label %272, label %270

270:                                              ; preds = %251
  %271 = bitcast %"class.std::__1::unique_ptr.62"* %264 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %271, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %267) #14
  br label %272

272:                                              ; preds = %270, %251
  %273 = load i32, i32* %247, align 8
  %274 = or i32 %273, 1
  store i32 %274, i32* %247, align 8
  br label %275

275:                                              ; preds = %245, %272
  %276 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %246, i64 0, i32 6, i32 0, i32 0, i32 0
  %277 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %278 = load i8, i8* %277, align 4, !range !2
  %279 = icmp eq i8 %278, 0
  %280 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %281 = load i8, i8* %280, align 1, !range !2
  %282 = icmp eq i8 %281, 0
  %283 = select i1 %282, i32 1, i32 2
  %284 = xor i1 %282, true
  %285 = zext i1 %284 to i32
  %286 = select i1 %279, i32 %285, i32 %283
  br label %287

287:                                              ; preds = %137, %275, %232
  %288 = phi i32 [ %149, %137 ], [ %286, %275 ], [ %244, %232 ]
  %289 = phi %"class.spvtools::opt::analysis::DefUseManager"** [ %138, %137 ], [ %276, %275 ], [ %233, %232 ]
  %290 = phi i8 [ %99, %137 ], [ %99, %275 ], [ %202, %232 ]
  %291 = phi i8 [ %98, %137 ], [ %98, %275 ], [ %199, %232 ]
  %292 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %289, align 8
  %293 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %288) #14
  %294 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %292, i32 %293) #14
  %295 = icmp sgt i64 %100, 0
  br i1 %295, label %95, label %296

296:                                              ; preds = %287, %95
  %297 = phi i8 [ %290, %287 ], [ %99, %95 ]
  %298 = phi i8 [ %291, %287 ], [ %98, %95 ]
  %299 = phi %"class.spvtools::opt::Instruction"* [ %294, %287 ], [ %97, %95 ]
  %300 = icmp eq i8 %298, 0
  %301 = icmp eq i8 %297, 0
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %313

303:                                              ; preds = %67, %296
  %304 = phi %"class.spvtools::opt::Instruction"* [ %299, %296 ], [ %82, %67 ]
  %305 = phi i8 [ %298, %296 ], [ 0, %67 ]
  %306 = phi i8 [ %297, %296 ], [ 0, %67 ]
  %307 = tail call i16 @_ZN8spvtools3opt18UpgradeMemoryModel13CheckAllTypesEPKNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %304)
  %308 = trunc i16 %307 to i8
  %309 = lshr i16 %307, 8
  %310 = trunc i16 %309 to i8
  %311 = or i8 %305, %308
  %312 = or i8 %306, %310
  br label %313

313:                                              ; preds = %296, %303
  %314 = phi i8 [ %312, %303 ], [ %297, %296 ]
  %315 = phi i8 [ %311, %303 ], [ %298, %296 ]
  %316 = zext i8 %314 to i16
  %317 = shl nuw nsw i16 %316, 8
  %318 = zext i8 %315 to i16
  %319 = or i16 %317, %318
  ret i16 %319
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8spvtools3opt18UpgradeMemoryModel13GetIndexValueEPNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 16384
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 136) #13
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %11, %"class.spvtools::opt::IRContext"* %4) #14
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 19
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.400"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %15) #14
  %19 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %15 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %18, %9
  %21 = load i32, i32* %5, align 8
  %22 = or i32 %21, 16384
  store i32 %22, i32* %5, align 8
  br label %23

23:                                               ; preds = %2, %20
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 19, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %24, align 8
  %26 = tail call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"* %25, %"class.spvtools::opt::Instruction"* %1) #14
  %27 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %26, i64 0, i32 1
  %28 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %27, align 8
  %29 = bitcast %"class.spvtools::opt::analysis::Type"* %28 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %30 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %30, i64 11
  %32 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %31, align 8
  %33 = tail call %"class.spvtools::opt::analysis::Integer"* %32(%"class.spvtools::opt::analysis::Type"* %28) #14
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %33, i64 0, i32 2
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %27, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Type"* %37 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %39 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %39, i64 11
  %41 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %40, align 8
  %42 = tail call %"class.spvtools::opt::analysis::Integer"* %41(%"class.spvtools::opt::analysis::Type"* %37) #14
  %43 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %42, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 32
  br i1 %36, label %52, label %46

46:                                               ; preds = %23
  br i1 %45, label %47, label %50

47:                                               ; preds = %46
  %48 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* %26) #14
  %49 = sext i32 %48 to i64
  br label %58

50:                                               ; preds = %46
  %51 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant6GetS64Ev(%"class.spvtools::opt::analysis::Constant"* %26) #14
  br label %58

52:                                               ; preds = %23
  br i1 %45, label %53, label %56

53:                                               ; preds = %52
  %54 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %26) #14
  %55 = zext i32 %54 to i64
  br label %58

56:                                               ; preds = %52
  %57 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant6GetU64Ev(%"class.spvtools::opt::analysis::Constant"* %26) #14
  br label %58

58:                                               ; preds = %56, %53, %50, %47
  %59 = phi i64 [ %49, %47 ], [ %51, %50 ], [ %55, %53 ], [ %57, %56 ]
  ret i64 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN8spvtools3opt18UpgradeMemoryModel13CheckAllTypesEPKNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unordered_set.989", align 8
  %4 = alloca %"class.std::__1::vector.1011", align 8
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.std::__1::unordered_set.989"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_set.989"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_set.989"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_set.989"* %3, i64 0, i32 0, i32 4, i64 0
  %11 = getelementptr inbounds %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_set.989"* %3, i64 0, i32 0, i32 3
  %12 = bitcast %"class.std::__1::__compressed_pair.1008"* %11 to i32*
  %13 = bitcast i8* %10 to i32*
  store i32 -1431655766, i32* %13, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1011"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.std::__1::vector.1011", %"class.std::__1::vector.1011"* %4, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::vector.1011", %"class.std::__1::vector.1011"* %4, i64 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.std::__1::vector.1011", %"class.std::__1::vector.1011"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  %19 = bitcast %"class.std::__1::vector.1011"* %4 to i64*
  %20 = bitcast %"class.spvtools::opt::Instruction"*** %17 to i64*
  %21 = tail call i8* @_Znwm(i64 8) #13
  %22 = getelementptr inbounds i8, i8* %21, i64 8
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast i8* %21 to i64*
  store i64 %6, i64* %24, align 8
  %25 = ptrtoint i8* %21 to i64
  store i64 %25, i64* %19, align 8
  store i64 %23, i64* %18, align 8
  store i64 %23, i64* %20, align 8
  %26 = bitcast i8* %22 to %"class.spvtools::opt::Instruction"**
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  %28 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  %29 = getelementptr inbounds %"class.std::__1::unordered_set.989", %"class.std::__1::unordered_set.989"* %3, i64 0, i32 0
  %30 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %31 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  %32 = bitcast %"class.std::__1::vector.1011"* %4 to i64*
  %33 = bitcast %"class.spvtools::opt::Instruction"*** %17 to i64*
  br label %34

34:                                               ; preds = %2, %406
  %35 = phi %"class.spvtools::opt::Instruction"** [ %26, %2 ], [ %410, %406 ]
  %36 = phi i8 [ 0, %2 ], [ %408, %406 ]
  %37 = phi i8 [ 0, %2 ], [ %407, %406 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %5, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, i64 -1
  %39 = bitcast %"class.spvtools::opt::Instruction"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %28, align 8
  store %"class.spvtools::opt::Instruction"** %38, %"class.spvtools::opt::Instruction"*** %16, align 8
  %41 = call { %"struct.std::__1::__hash_node_base.994"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.990"* nonnull %29, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5) #14
  %42 = extractvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } %41, 1
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %406, label %45

45:                                               ; preds = %34
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 30
  br i1 %49, label %50, label %198

50:                                               ; preds = %45
  %51 = call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %46, i32 -1, i32 23)
  %52 = zext i1 %51 to i8
  %53 = or i8 %36, %52
  %54 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %55 = call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13HasDecorationEPKNS0_11InstructionEj14SpvDecoration_(%"class.spvtools::opt::UpgradeMemoryModel"* %0, %"class.spvtools::opt::Instruction"* %54, i32 -1, i32 21)
  %56 = zext i1 %55 to i32
  %57 = zext i8 %37 to i32
  %58 = or i32 %56, %57
  %59 = trunc i32 %58 to i8
  %60 = icmp eq i8 %53, 0
  %61 = icmp eq i32 %58, 0
  %62 = or i1 %60, %61
  br i1 %62, label %69, label %63

63:                                               ; preds = %50
  %64 = trunc i32 %58 to i16
  %65 = shl nuw nsw i16 %64, 8
  %66 = zext i8 %53 to i16
  %67 = or i16 %65, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %68 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  br label %417

69:                                               ; preds = %50, %196
  %70 = phi i32 [ %197, %196 ], [ 0, %50 ]
  %71 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 6
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 6, i32 0, i32 1
  %74 = bitcast %"struct.spvtools::opt::Operand"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.std::__1::vector"* %72 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = sub i64 %75, %77
  %79 = sdiv exact i64 %78, 48
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 3
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %71, i64 0, i32 4
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, i32 1, i32 2
  %87 = xor i1 %85, true
  %88 = zext i1 %87 to i32
  %89 = select i1 %82, i32 %88, i32 %86
  %90 = trunc i64 %79 to i32
  %91 = sub i32 %90, %89
  %92 = icmp ult i32 %70, %91
  br i1 %92, label %93, label %406

93:                                               ; preds = %69
  %94 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 11
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %128

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %100, align 8
  %102 = call i8* @_Znwm(i64 104) #13
  %103 = bitcast i8* %102 to %"class.spvtools::opt::analysis::DefUseManager"*
  %104 = getelementptr inbounds i8, i8* %102, i64 32
  %105 = bitcast i8* %104 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %105, align 4
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  %107 = getelementptr inbounds i8, i8* %102, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #14
  %108 = bitcast i8* %107 to i8**
  store i8* %106, i8** %108, align 8
  %109 = getelementptr inbounds i8, i8* %102, i64 64
  %110 = getelementptr inbounds i8, i8* %102, i64 96
  %111 = bitcast i8* %110 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %111, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %103, %"class.spvtools::opt::Module"* %101) #14
  %112 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 6
  %113 = ptrtoint i8* %102 to i64
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %112, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.62"* %112 to i64*
  store i64 %113, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %99
  %119 = bitcast %"class.std::__1::unique_ptr.62"* %112 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %119, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %115) #14
  br label %120

120:                                              ; preds = %118, %99
  %121 = load i32, i32* %95, align 8
  %122 = or i32 %121, 1
  store i32 %122, i32* %95, align 8
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 3
  %125 = load i8, i8* %124, align 4, !range !2
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %123, i64 0, i32 4
  %127 = load i8, i8* %126, align 1, !range !2
  br label %128

128:                                              ; preds = %93, %120
  %129 = phi i8 [ %84, %93 ], [ %127, %120 ]
  %130 = phi i8 [ %81, %93 ], [ %125, %120 ]
  %131 = phi %"class.spvtools::opt::Instruction"* [ %71, %93 ], [ %123, %120 ]
  %132 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %94, i64 0, i32 6, i32 0, i32 0, i32 0
  %133 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %132, align 8
  %134 = icmp eq i8 %130, 0
  %135 = icmp eq i8 %129, 0
  %136 = select i1 %135, i32 1, i32 2
  %137 = xor i1 %135, true
  %138 = zext i1 %137 to i32
  %139 = select i1 %134, i32 %138, i32 %136
  %140 = add i32 %139, %70
  %141 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %131, i32 %140) #14
  %142 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %133, i32 %141) #14
  %143 = ptrtoint %"class.spvtools::opt::Instruction"* %142 to i64
  %144 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %16, align 8
  %145 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %146 = icmp ult %"class.spvtools::opt::Instruction"** %144, %145
  %147 = ptrtoint %"class.spvtools::opt::Instruction"** %145 to i64
  br i1 %146, label %148, label %152

148:                                              ; preds = %128
  %149 = bitcast %"class.spvtools::opt::Instruction"** %144 to i64*
  store i64 %143, i64* %149, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %144, i64 1
  %151 = ptrtoint %"class.spvtools::opt::Instruction"** %150 to i64
  store i64 %151, i64* %31, align 8
  br label %196

152:                                              ; preds = %128
  %153 = ptrtoint %"class.spvtools::opt::Instruction"** %144 to i64
  %154 = load i64, i64* %32, align 8
  %155 = sub i64 %153, %154
  %156 = ashr exact i64 %155, 3
  %157 = add nsw i64 %156, 1
  %158 = icmp ugt i64 %157, 2305843009213693951
  br i1 %158, label %159, label %161

159:                                              ; preds = %152
  %160 = bitcast %"class.std::__1::vector.1011"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %160) #15
  unreachable

161:                                              ; preds = %152
  %162 = sub i64 %147, %154
  %163 = ashr exact i64 %162, 3
  %164 = icmp ult i64 %163, 1152921504606846975
  br i1 %164, label %165, label %173

165:                                              ; preds = %161
  %166 = ashr exact i64 %162, 2
  %167 = icmp ult i64 %166, %157
  %168 = select i1 %167, i64 %157, i64 %166
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %178, label %170

170:                                              ; preds = %165
  %171 = icmp ugt i64 %168, 2305843009213693951
  br i1 %171, label %172, label %173

172:                                              ; preds = %170
  call void @abort() #15
  unreachable

173:                                              ; preds = %170, %161
  %174 = phi i64 [ %168, %170 ], [ 2305843009213693951, %161 ]
  %175 = shl i64 %174, 3
  %176 = call i8* @_Znwm(i64 %175) #13
  %177 = bitcast i8* %176 to %"class.spvtools::opt::Instruction"**
  br label %178

178:                                              ; preds = %173, %165
  %179 = phi i64 [ %174, %173 ], [ 0, %165 ]
  %180 = phi i8* [ %176, %173 ], [ null, %165 ]
  %181 = phi %"class.spvtools::opt::Instruction"** [ %177, %173 ], [ null, %165 ]
  %182 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %181, i64 %156
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %181, i64 %179
  %184 = ptrtoint %"class.spvtools::opt::Instruction"** %183 to i64
  %185 = bitcast %"class.spvtools::opt::Instruction"** %182 to i64*
  store i64 %143, i64* %185, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, i64 1
  %187 = ptrtoint %"class.spvtools::opt::Instruction"** %186 to i64
  %188 = ptrtoint %"class.spvtools::opt::Instruction"** %181 to i64
  %189 = icmp sgt i64 %155, 0
  br i1 %189, label %190, label %192

190:                                              ; preds = %178
  %191 = inttoptr i64 %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %191, i64 %155, i1 false) #14
  br label %192

192:                                              ; preds = %190, %178
  store i64 %188, i64* %32, align 8
  store i64 %187, i64* %31, align 8
  store i64 %184, i64* %33, align 8
  %193 = icmp eq i64 %154, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %192
  %195 = inttoptr i64 %154 to i8*
  call void @_ZdlPv(i8* %195) #13
  br label %196

196:                                              ; preds = %148, %192, %194
  %197 = add nuw i32 %70, 1
  br label %69

198:                                              ; preds = %45
  %199 = call i32 @_Z20spvOpcodeIsComposite6SpvOp_(i32 %48) #14
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %300, label %201

201:                                              ; preds = %198
  %202 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 11
  %204 = load i32, i32* %203, align 8
  %205 = and i32 %204, 1
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %231

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %208, align 8
  %210 = call i8* @_Znwm(i64 104) #13
  %211 = bitcast i8* %210 to %"class.spvtools::opt::analysis::DefUseManager"*
  %212 = getelementptr inbounds i8, i8* %210, i64 32
  %213 = bitcast i8* %212 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %210, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %213, align 4
  %214 = getelementptr inbounds i8, i8* %210, i64 48
  %215 = getelementptr inbounds i8, i8* %210, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %214, i8 0, i64 16, i1 false) #14
  %216 = bitcast i8* %215 to i8**
  store i8* %214, i8** %216, align 8
  %217 = getelementptr inbounds i8, i8* %210, i64 64
  %218 = getelementptr inbounds i8, i8* %210, i64 96
  %219 = bitcast i8* %218 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %219, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %211, %"class.spvtools::opt::Module"* %209) #14
  %220 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 6
  %221 = ptrtoint i8* %210 to i64
  %222 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %220, i64 0, i32 0, i32 0, i32 0
  %223 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %222, align 8
  %224 = bitcast %"class.std::__1::unique_ptr.62"* %220 to i64*
  store i64 %221, i64* %224, align 8
  %225 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %223, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %207
  %227 = bitcast %"class.std::__1::unique_ptr.62"* %220 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %227, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %223) #14
  br label %228

228:                                              ; preds = %226, %207
  %229 = load i32, i32* %203, align 8
  %230 = or i32 %229, 1
  store i32 %230, i32* %203, align 8
  br label %231

231:                                              ; preds = %201, %228
  %232 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %202, i64 0, i32 6, i32 0, i32 0, i32 0
  %233 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %232, align 8
  %234 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %234, i64 0, i32 3
  %236 = load i8, i8* %235, align 4, !range !2
  %237 = icmp eq i8 %236, 0
  %238 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %234, i64 0, i32 4
  %239 = load i8, i8* %238, align 1, !range !2
  %240 = icmp eq i8 %239, 0
  %241 = select i1 %240, i32 1, i32 2
  %242 = xor i1 %240, true
  %243 = zext i1 %242 to i32
  %244 = select i1 %237, i32 %243, i32 %241
  %245 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %234, i32 %244) #14
  %246 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %233, i32 %245) #14
  %247 = ptrtoint %"class.spvtools::opt::Instruction"* %246 to i64
  %248 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %16, align 8
  %249 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %250 = icmp ult %"class.spvtools::opt::Instruction"** %248, %249
  %251 = ptrtoint %"class.spvtools::opt::Instruction"** %249 to i64
  br i1 %250, label %252, label %256

252:                                              ; preds = %231
  %253 = bitcast %"class.spvtools::opt::Instruction"** %248 to i64*
  store i64 %247, i64* %253, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %248, i64 1
  %255 = ptrtoint %"class.spvtools::opt::Instruction"** %254 to i64
  store i64 %255, i64* %31, align 8
  br label %406

256:                                              ; preds = %231
  %257 = ptrtoint %"class.spvtools::opt::Instruction"** %248 to i64
  %258 = load i64, i64* %32, align 8
  %259 = sub i64 %257, %258
  %260 = ashr exact i64 %259, 3
  %261 = add nsw i64 %260, 1
  %262 = icmp ugt i64 %261, 2305843009213693951
  br i1 %262, label %263, label %265

263:                                              ; preds = %256
  %264 = bitcast %"class.std::__1::vector.1011"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %264) #15
  unreachable

265:                                              ; preds = %256
  %266 = sub i64 %251, %258
  %267 = ashr exact i64 %266, 3
  %268 = icmp ult i64 %267, 1152921504606846975
  br i1 %268, label %269, label %277

269:                                              ; preds = %265
  %270 = ashr exact i64 %266, 2
  %271 = icmp ult i64 %270, %261
  %272 = select i1 %271, i64 %261, i64 %270
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %282, label %274

274:                                              ; preds = %269
  %275 = icmp ugt i64 %272, 2305843009213693951
  br i1 %275, label %276, label %277

276:                                              ; preds = %274
  call void @abort() #15
  unreachable

277:                                              ; preds = %274, %265
  %278 = phi i64 [ %272, %274 ], [ 2305843009213693951, %265 ]
  %279 = shl i64 %278, 3
  %280 = call i8* @_Znwm(i64 %279) #13
  %281 = bitcast i8* %280 to %"class.spvtools::opt::Instruction"**
  br label %282

282:                                              ; preds = %277, %269
  %283 = phi i64 [ %278, %277 ], [ 0, %269 ]
  %284 = phi i8* [ %280, %277 ], [ null, %269 ]
  %285 = phi %"class.spvtools::opt::Instruction"** [ %281, %277 ], [ null, %269 ]
  %286 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %285, i64 %260
  %287 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %285, i64 %283
  %288 = ptrtoint %"class.spvtools::opt::Instruction"** %287 to i64
  %289 = bitcast %"class.spvtools::opt::Instruction"** %286 to i64*
  store i64 %247, i64* %289, align 8
  %290 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %286, i64 1
  %291 = ptrtoint %"class.spvtools::opt::Instruction"** %290 to i64
  %292 = ptrtoint %"class.spvtools::opt::Instruction"** %285 to i64
  %293 = icmp sgt i64 %259, 0
  br i1 %293, label %294, label %296

294:                                              ; preds = %282
  %295 = inttoptr i64 %258 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %295, i64 %259, i1 false) #14
  br label %296

296:                                              ; preds = %294, %282
  store i64 %292, i64* %32, align 8
  store i64 %291, i64* %31, align 8
  store i64 %288, i64* %33, align 8
  %297 = icmp eq i64 %258, 0
  br i1 %297, label %406, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %258 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %406

300:                                              ; preds = %198
  %301 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %301, i64 0, i32 2
  %303 = load i32, i32* %302, align 8
  %304 = icmp eq i32 %303, 32
  br i1 %304, label %305, label %406

305:                                              ; preds = %300
  %306 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 11
  %308 = load i32, i32* %307, align 8
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %336

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 4, i32 0, i32 0, i32 0
  %313 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %312, align 8
  %314 = call i8* @_Znwm(i64 104) #13
  %315 = bitcast i8* %314 to %"class.spvtools::opt::analysis::DefUseManager"*
  %316 = getelementptr inbounds i8, i8* %314, i64 32
  %317 = bitcast i8* %316 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %317, align 4
  %318 = getelementptr inbounds i8, i8* %314, i64 48
  %319 = getelementptr inbounds i8, i8* %314, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %318, i8 0, i64 16, i1 false) #14
  %320 = bitcast i8* %319 to i8**
  store i8* %318, i8** %320, align 8
  %321 = getelementptr inbounds i8, i8* %314, i64 64
  %322 = getelementptr inbounds i8, i8* %314, i64 96
  %323 = bitcast i8* %322 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %321, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %323, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %315, %"class.spvtools::opt::Module"* %313) #14
  %324 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 6
  %325 = ptrtoint i8* %314 to i64
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %324, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %326, align 8
  %328 = bitcast %"class.std::__1::unique_ptr.62"* %324 to i64*
  store i64 %325, i64* %328, align 8
  %329 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %327, null
  br i1 %329, label %332, label %330

330:                                              ; preds = %311
  %331 = bitcast %"class.std::__1::unique_ptr.62"* %324 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %331, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %327) #14
  br label %332

332:                                              ; preds = %330, %311
  %333 = load i32, i32* %307, align 8
  %334 = or i32 %333, 1
  store i32 %334, i32* %307, align 8
  %335 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8
  br label %336

336:                                              ; preds = %305, %332
  %337 = phi %"class.spvtools::opt::Instruction"* [ %301, %305 ], [ %335, %332 ]
  %338 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %306, i64 0, i32 6, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %338, align 8
  %340 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %337, i64 0, i32 3
  %341 = load i8, i8* %340, align 4, !range !2
  %342 = icmp eq i8 %341, 0
  %343 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %337, i64 0, i32 4
  %344 = load i8, i8* %343, align 1, !range !2
  %345 = icmp eq i8 %344, 0
  %346 = select i1 %345, i32 1, i32 2
  %347 = xor i1 %345, true
  %348 = zext i1 %347 to i32
  %349 = select i1 %342, i32 %348, i32 %346
  %350 = add nuw nsw i32 %349, 1
  %351 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %337, i32 %350) #14
  %352 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %339, i32 %351) #14
  %353 = ptrtoint %"class.spvtools::opt::Instruction"* %352 to i64
  %354 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %16, align 8
  %355 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %356 = icmp ult %"class.spvtools::opt::Instruction"** %354, %355
  %357 = ptrtoint %"class.spvtools::opt::Instruction"** %355 to i64
  br i1 %356, label %358, label %362

358:                                              ; preds = %336
  %359 = bitcast %"class.spvtools::opt::Instruction"** %354 to i64*
  store i64 %353, i64* %359, align 8
  %360 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %354, i64 1
  %361 = ptrtoint %"class.spvtools::opt::Instruction"** %360 to i64
  store i64 %361, i64* %31, align 8
  br label %406

362:                                              ; preds = %336
  %363 = ptrtoint %"class.spvtools::opt::Instruction"** %354 to i64
  %364 = load i64, i64* %32, align 8
  %365 = sub i64 %363, %364
  %366 = ashr exact i64 %365, 3
  %367 = add nsw i64 %366, 1
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %371

369:                                              ; preds = %362
  %370 = bitcast %"class.std::__1::vector.1011"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %370) #15
  unreachable

371:                                              ; preds = %362
  %372 = sub i64 %357, %364
  %373 = ashr exact i64 %372, 3
  %374 = icmp ult i64 %373, 1152921504606846975
  br i1 %374, label %375, label %383

375:                                              ; preds = %371
  %376 = ashr exact i64 %372, 2
  %377 = icmp ult i64 %376, %367
  %378 = select i1 %377, i64 %367, i64 %376
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %388, label %380

380:                                              ; preds = %375
  %381 = icmp ugt i64 %378, 2305843009213693951
  br i1 %381, label %382, label %383

382:                                              ; preds = %380
  call void @abort() #15
  unreachable

383:                                              ; preds = %380, %371
  %384 = phi i64 [ %378, %380 ], [ 2305843009213693951, %371 ]
  %385 = shl i64 %384, 3
  %386 = call i8* @_Znwm(i64 %385) #13
  %387 = bitcast i8* %386 to %"class.spvtools::opt::Instruction"**
  br label %388

388:                                              ; preds = %383, %375
  %389 = phi i64 [ %384, %383 ], [ 0, %375 ]
  %390 = phi i8* [ %386, %383 ], [ null, %375 ]
  %391 = phi %"class.spvtools::opt::Instruction"** [ %387, %383 ], [ null, %375 ]
  %392 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %391, i64 %366
  %393 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %391, i64 %389
  %394 = ptrtoint %"class.spvtools::opt::Instruction"** %393 to i64
  %395 = bitcast %"class.spvtools::opt::Instruction"** %392 to i64*
  store i64 %353, i64* %395, align 8
  %396 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %392, i64 1
  %397 = ptrtoint %"class.spvtools::opt::Instruction"** %396 to i64
  %398 = ptrtoint %"class.spvtools::opt::Instruction"** %391 to i64
  %399 = icmp sgt i64 %365, 0
  br i1 %399, label %400, label %402

400:                                              ; preds = %388
  %401 = inttoptr i64 %364 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %390, i8* align 8 %401, i64 %365, i1 false) #14
  br label %402

402:                                              ; preds = %400, %388
  store i64 %398, i64* %32, align 8
  store i64 %397, i64* %31, align 8
  store i64 %394, i64* %33, align 8
  %403 = icmp eq i64 %364, 0
  br i1 %403, label %406, label %404

404:                                              ; preds = %402
  %405 = inttoptr i64 %364 to i8*
  call void @_ZdlPv(i8* %405) #13
  br label %406

406:                                              ; preds = %69, %404, %402, %358, %298, %296, %252, %300, %34
  %407 = phi i8 [ %37, %34 ], [ %37, %300 ], [ %37, %252 ], [ %37, %296 ], [ %37, %298 ], [ %37, %358 ], [ %37, %402 ], [ %37, %404 ], [ %59, %69 ]
  %408 = phi i8 [ %36, %34 ], [ %36, %300 ], [ %36, %252 ], [ %36, %296 ], [ %36, %298 ], [ %36, %358 ], [ %36, %402 ], [ %36, %404 ], [ %53, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %409 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %15, align 8
  %410 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %16, align 8
  %411 = icmp eq %"class.spvtools::opt::Instruction"** %409, %410
  br i1 %411, label %412, label %34

412:                                              ; preds = %406
  %413 = zext i8 %407 to i16
  %414 = shl nuw nsw i16 %413, 8
  %415 = zext i8 %408 to i16
  %416 = or i16 %414, %415
  br label %417

417:                                              ; preds = %63, %412
  %418 = phi %"class.spvtools::opt::Instruction"** [ %409, %412 ], [ %68, %63 ]
  %419 = phi i16 [ %416, %412 ], [ %67, %63 ]
  %420 = icmp eq %"class.spvtools::opt::Instruction"** %418, null
  br i1 %420, label %425, label %421

421:                                              ; preds = %417
  %422 = ptrtoint %"class.spvtools::opt::Instruction"** %418 to i64
  %423 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  store i64 %422, i64* %423, align 8
  %424 = bitcast %"class.spvtools::opt::Instruction"** %418 to i8*
  call void @_ZdlPv(i8* %424) #13
  br label %425

425:                                              ; preds = %417, %421
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  %426 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %9, align 8
  %427 = icmp eq %"struct.std::__1::__hash_node_base.994"* %426, null
  br i1 %427, label %434, label %428

428:                                              ; preds = %425, %428
  %429 = phi %"struct.std::__1::__hash_node_base.994"* [ %431, %428 ], [ %426, %425 ]
  %430 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %429, i64 0, i32 0
  %431 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %430, align 8
  %432 = bitcast %"struct.std::__1::__hash_node_base.994"* %429 to i8*
  call void @_ZdlPv(i8* %432) #13
  %433 = icmp eq %"struct.std::__1::__hash_node_base.994"* %431, null
  br i1 %433, label %434, label %428

434:                                              ; preds = %428, %425
  %435 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %8, align 8
  store %"struct.std::__1::__hash_node_base.994"** null, %"struct.std::__1::__hash_node_base.994"*** %8, align 8
  %436 = icmp eq %"struct.std::__1::__hash_node_base.994"** %435, null
  br i1 %436, label %439, label %437

437:                                              ; preds = %434
  %438 = bitcast %"struct.std::__1::__hash_node_base.994"** %435 to i8*
  call void @_ZdlPv(i8* %438) #13
  br label %439

439:                                              ; preds = %434, %437
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #14
  ret i16 %419
}

declare i32 @_Z20spvOpcodeIsComposite6SpvOp_(i32) local_unnamed_addr #4

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager19GetConstantFromInstEPKNS0_11InstructionE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

declare i64 @_ZNK8spvtools3opt8analysis8Constant6GetS64Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #4

declare i64 @_ZNK8spvtools3opt8analysis8Constant6GetU64Ev(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #4

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager19WhileEachDecorationEjjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::function.1021"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readnone, %"class.spvtools::opt::Instruction"*, i32, i1 zeroext, i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"struct.spvtools::opt::Operand", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"struct.spvtools::opt::Operand", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = or i1 %3, %4
  br i1 %13, label %14, label %255

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %17 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = sdiv exact i64 %21, 48
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = select i1 %28, i32 1, i32 2
  %30 = xor i1 %28, true
  %31 = zext i1 %30 to i32
  %32 = select i1 %25, i32 %31, i32 %29
  %33 = trunc i64 %22 to i32
  %34 = sub i32 %33, %32
  %35 = icmp ugt i32 %34, %2
  br i1 %35, label %36, label %39

36:                                               ; preds = %14
  %37 = add i32 %32, %2
  %38 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %37) #14
  br label %39

39:                                               ; preds = %36, %14
  %40 = phi i32 [ %38, %36 ], [ 0, %14 ]
  br i1 %3, label %41, label %54

41:                                               ; preds = %39
  %42 = icmp eq i32 %6, 0
  %43 = icmp eq i32 %5, 0
  br i1 %42, label %44, label %49

44:                                               ; preds = %41
  br i1 %43, label %45, label %47

45:                                               ; preds = %44
  %46 = or i32 %40, 48
  br label %54

47:                                               ; preds = %44
  %48 = or i32 %40, 40
  br label %54

49:                                               ; preds = %41
  br i1 %43, label %50, label %52

50:                                               ; preds = %49
  %51 = or i32 %40, 1536
  br label %54

52:                                               ; preds = %49
  %53 = or i32 %40, 1280
  br label %54

54:                                               ; preds = %47, %45, %52, %50, %39
  %55 = phi i32 [ %46, %45 ], [ %48, %47 ], [ %51, %50 ], [ %53, %52 ], [ %40, %39 ]
  br i1 %4, label %56, label %62

56:                                               ; preds = %54
  %57 = icmp eq i32 %6, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = or i32 %55, 1
  br label %62

60:                                               ; preds = %56
  %61 = or i32 %55, 2048
  br label %62

62:                                               ; preds = %58, %60, %54
  %63 = phi i32 [ %59, %58 ], [ %61, %60 ], [ %55, %54 ]
  %64 = load i64, i64* %17, align 8
  %65 = load i64, i64* %19, align 8
  %66 = sub i64 %64, %65
  %67 = sdiv exact i64 %66, 48
  %68 = load i8, i8* %23, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = load i8, i8* %26, align 1, !range !2
  %71 = icmp eq i8 %70, 0
  %72 = select i1 %71, i32 1, i32 2
  %73 = xor i1 %71, true
  %74 = zext i1 %73 to i32
  %75 = select i1 %69, i32 %74, i32 %72
  %76 = trunc i64 %67 to i32
  %77 = sub i32 %76, %75
  %78 = icmp ugt i32 %77, %2
  br i1 %78, label %79, label %109

79:                                               ; preds = %62
  %80 = inttoptr i64 %65 to %"struct.spvtools::opt::Operand"*
  %81 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #14
  %82 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %86 = bitcast i32** %84 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %85, %"struct.std::__1::aligned_storage<4, 4>::type"** %86, align 8
  %87 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %88 = bitcast %"class.std::__1::unique_ptr.0"* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %85 to i32*
  store i64 1, i64* %83, align 8
  store i32 %63, i32* %89, align 8
  %90 = add i32 %75, %2
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %80, i64 %91, i32 1
  %93 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %94, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %94, align 8
  %96 = icmp eq %"class.std::__1::vector.3"* %95, null
  br i1 %96, label %108, label %97

97:                                               ; preds = %79
  %98 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %95, i64 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %97
  %102 = ptrtoint i32* %99 to i64
  %103 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %95, i64 0, i32 0, i32 1
  %104 = bitcast i32** %103 to i64*
  store i64 %102, i64* %104, align 8
  %105 = bitcast i32* %99 to i8*
  call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %101, %97
  %107 = bitcast %"class.std::__1::vector.3"* %95 to i8*
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %79, %106
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81) #14
  br label %255

109:                                              ; preds = %62
  %110 = icmp eq i32 %6, 0
  br i1 %110, label %111, label %183

111:                                              ; preds = %109
  %112 = bitcast %"struct.spvtools::opt::Operand"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %112) #14
  %113 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #14
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %116 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %117 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %118 = bitcast i32** %116 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %117, %"struct.std::__1::aligned_storage<4, 4>::type"** %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %120 = bitcast %"class.std::__1::unique_ptr.0"* %119 to i64*
  store i64 0, i64* %120, align 8
  %121 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %117 to i32*
  store i64 1, i64* %115, align 8
  store i32 %63, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 0
  store i32 46, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1
  %124 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %123, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 1
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 3, i64 0
  %128 = bitcast i32** %126 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %127, %"struct.std::__1::aligned_storage<4, 4>::type"** %128, align 8
  %129 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4
  %130 = bitcast %"class.std::__1::unique_ptr.0"* %129 to i64*
  store i64 0, i64* %130, align 8
  %131 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %123, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #14
  %132 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %134 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %133, align 8
  %135 = icmp ult %"struct.spvtools::opt::Operand"* %132, %134
  br i1 %135, label %136, label %150

136:                                              ; preds = %111
  %137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 0
  %138 = load i32, i32* %122, align 8
  store i32 %138, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 1
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %139, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 1, i32 1
  store i64 0, i64* %141, align 8
  %142 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 1, i32 2
  %143 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 1, i32 3, i64 0
  %144 = bitcast i32** %142 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %143, %"struct.std::__1::aligned_storage<4, 4>::type"** %144, align 8
  %145 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 0, i32 1, i32 4
  %146 = bitcast %"class.std::__1::unique_ptr.0"* %145 to i64*
  store i64 0, i64* %146, align 8
  %147 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %139, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %123) #14
  %148 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %132, i64 1
  %149 = ptrtoint %"struct.spvtools::opt::Operand"* %148 to i64
  store i64 %149, i64* %17, align 8
  br label %151

150:                                              ; preds = %111
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %15, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %9) #14
  br label %151

151:                                              ; preds = %136, %150
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %152, align 8
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %153, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %153, align 8
  %155 = icmp eq %"class.std::__1::vector.3"* %154, null
  br i1 %155, label %167, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %154, i64 0, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = icmp eq i32* %158, null
  br i1 %159, label %165, label %160

160:                                              ; preds = %156
  %161 = ptrtoint i32* %158 to i64
  %162 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %154, i64 0, i32 0, i32 1
  %163 = bitcast i32** %162 to i64*
  store i64 %161, i64* %163, align 8
  %164 = bitcast i32* %158 to i8*
  call void @_ZdlPv(i8* %164) #13
  br label %165

165:                                              ; preds = %160, %156
  %166 = bitcast %"class.std::__1::vector.3"* %154 to i8*
  call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %151, %165
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %168 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %169 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %168, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %168, align 8
  %170 = icmp eq %"class.std::__1::vector.3"* %169, null
  br i1 %170, label %182, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %169, i64 0, i32 0, i32 0
  %173 = load i32*, i32** %172, align 8
  %174 = icmp eq i32* %173, null
  br i1 %174, label %180, label %175

175:                                              ; preds = %171
  %176 = ptrtoint i32* %173 to i64
  %177 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %169, i64 0, i32 0, i32 1
  %178 = bitcast i32** %177 to i64*
  store i64 %176, i64* %178, align 8
  %179 = bitcast i32* %173 to i8*
  call void @_ZdlPv(i8* %179) #13
  br label %180

180:                                              ; preds = %175, %171
  %181 = bitcast %"class.std::__1::vector.3"* %169 to i8*
  call void @_ZdlPv(i8* %181) #13
  br label %182

182:                                              ; preds = %167, %180
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %112) #14
  br label %255

183:                                              ; preds = %109
  %184 = bitcast %"struct.spvtools::opt::Operand"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %184) #14
  %185 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %185) #14
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %189 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %190 = bitcast i32** %188 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %189, %"struct.std::__1::aligned_storage<4, 4>::type"** %190, align 8
  %191 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %192 = bitcast %"class.std::__1::unique_ptr.0"* %191 to i64*
  store i64 0, i64* %192, align 8
  %193 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %189 to i32*
  store i64 1, i64* %187, align 8
  store i32 %63, i32* %193, align 8
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 0
  store i32 45, i32* %194, align 8
  %195 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %195, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %196, align 8
  %197 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 1
  store i64 0, i64* %197, align 8
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 2
  %199 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 3, i64 0
  %200 = bitcast i32** %198 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %199, %"struct.std::__1::aligned_storage<4, 4>::type"** %200, align 8
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 4
  %202 = bitcast %"class.std::__1::unique_ptr.0"* %201 to i64*
  store i64 0, i64* %202, align 8
  %203 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %195, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #14
  %204 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %205 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %206 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %205, align 8
  %207 = icmp ult %"struct.spvtools::opt::Operand"* %204, %206
  br i1 %207, label %208, label %222

208:                                              ; preds = %183
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 0
  %210 = load i32, i32* %194, align 8
  store i32 %210, i32* %209, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 1
  %212 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %211, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %212, align 8
  %213 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 1, i32 1
  store i64 0, i64* %213, align 8
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 1, i32 2
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 1, i32 3, i64 0
  %216 = bitcast i32** %214 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %215, %"struct.std::__1::aligned_storage<4, 4>::type"** %216, align 8
  %217 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 0, i32 1, i32 4
  %218 = bitcast %"class.std::__1::unique_ptr.0"* %217 to i64*
  store i64 0, i64* %218, align 8
  %219 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %211, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %195) #14
  %220 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %204, i64 1
  %221 = ptrtoint %"struct.spvtools::opt::Operand"* %220 to i64
  store i64 %221, i64* %17, align 8
  br label %223

222:                                              ; preds = %183
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %15, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %11) #14
  br label %223

223:                                              ; preds = %208, %222
  %224 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %224, align 8
  %225 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %226 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %225, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %225, align 8
  %227 = icmp eq %"class.std::__1::vector.3"* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = icmp eq i32* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = ptrtoint i32* %230 to i64
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 1
  %235 = bitcast i32** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = bitcast i32* %230 to i8*
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %232, %228
  %238 = bitcast %"class.std::__1::vector.3"* %226 to i8*
  call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %223, %237
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %240 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %241 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %240, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %240, align 8
  %242 = icmp eq %"class.std::__1::vector.3"* %241, null
  br i1 %242, label %254, label %243

243:                                              ; preds = %239
  %244 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %241, i64 0, i32 0, i32 0
  %245 = load i32*, i32** %244, align 8
  %246 = icmp eq i32* %245, null
  br i1 %246, label %252, label %247

247:                                              ; preds = %243
  %248 = ptrtoint i32* %245 to i64
  %249 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %241, i64 0, i32 0, i32 1
  %250 = bitcast i32** %249 to i64*
  store i64 %248, i64* %250, align 8
  %251 = bitcast i32* %245 to i8*
  call void @_ZdlPv(i8* %251) #13
  br label %252

252:                                              ; preds = %247, %243
  %253 = bitcast %"class.std::__1::vector.3"* %241 to i8*
  call void @_ZdlPv(i8* %253) #13
  br label %254

254:                                              ; preds = %239, %252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %185) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %184) #14
  br label %255

255:                                              ; preds = %108, %254, %182, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %4 = alloca %"class.std::__1::vector.3", align 8
  %5 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector.463"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 2
  store i32 2, i32* %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 1
  store i32 32, i32* %10, align 4
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 2
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 11
  %15 = load i32, i32* %14, align 8
  %16 = trunc i32 %15 to i16
  %17 = icmp slt i16 %16, 0
  br i1 %17, label %33, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 5
  %20 = tail call i8* @_Znwm(i64 240) #13
  %21 = bitcast i8* %20 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %21, %"class.std::__1::function"* dereferenceable(32) %19, %"class.spvtools::opt::IRContext"* %13) #14
  %22 = ptrtoint i8* %20 to i64
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 20
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.480"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %18
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %25) #14
  %29 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %18
  %31 = load i32, i32* %14, align 8
  %32 = or i32 %31, 32768
  store i32 %32, i32* %14, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %13, i64 0, i32 20, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %34, align 8
  %36 = bitcast %"class.spvtools::opt::analysis::Integer"* %3 to %"class.spvtools::opt::analysis::Type"*
  %37 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %35, %"class.spvtools::opt::analysis::Type"* nonnull %36) #14
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 16384
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %60

43:                                               ; preds = %33
  %44 = call i8* @_Znwm(i64 136) #13
  %45 = bitcast i8* %44 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %45, %"class.spvtools::opt::IRContext"* %38) #14
  %46 = ptrtoint i8* %44 to i64
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 19
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.400"* %47 to i64*
  store i64 %46, i64* %50, align 8
  %51 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %43
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %49) #14
  %53 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %49 to i8*
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %52, %43
  %55 = load i32, i32* %39, align 8
  %56 = or i32 %55, 16384
  store i32 %56, i32* %39, align 8
  %57 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %57, i64 0, i32 11
  %59 = load i32, i32* %58, align 8
  br label %60

60:                                               ; preds = %33, %54
  %61 = phi i32 [ %40, %33 ], [ %59, %54 ]
  %62 = phi %"class.spvtools::opt::IRContext"* [ %38, %33 ], [ %57, %54 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 19, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 11
  %66 = trunc i32 %61 to i16
  %67 = icmp slt i16 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 5
  %70 = call i8* @_Znwm(i64 240) #13
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %71, %"class.std::__1::function"* dereferenceable(32) %69, %"class.spvtools::opt::IRContext"* %62) #14
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 20
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.480"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %68
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %75) #14
  %79 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %78, %68
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 32768
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 20, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %84, align 8
  %86 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %85, i32 %37) #14
  %87 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #14
  %88 = call i8* @_Znwm(i64 4) #13
  %89 = bitcast i8* %88 to i32*
  %90 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %91 = bitcast %"class.std::__1::vector.3"* %4 to i8**
  store i8* %88, i8** %91, align 8
  %92 = getelementptr inbounds i8, i8* %88, i64 4
  %93 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %94 = bitcast i32** %93 to i8**
  store i8* %92, i8** %94, align 8
  %95 = bitcast i32** %90 to i64*
  store i32 %1, i32* %89, align 4
  %96 = ptrtoint i8* %92 to i64
  store i64 %96, i64* %95, align 8
  %97 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %64, %"class.spvtools::opt::analysis::Type"* %86, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %4) #14
  %98 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %83
  %102 = ptrtoint i32* %99 to i64
  store i64 %102, i64* %95, align 8
  %103 = bitcast i32* %99 to i8*
  call void @_ZdlPv(i8* %103) #13
  br label %104

104:                                              ; preds = %83, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #14
  %105 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 16384
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %124

110:                                              ; preds = %104
  %111 = call i8* @_Znwm(i64 136) #13
  %112 = bitcast i8* %111 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %112, %"class.spvtools::opt::IRContext"* %105) #14
  %113 = ptrtoint i8* %111 to i64
  %114 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 19
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %114, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %115, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.400"* %114 to i64*
  store i64 %113, i64* %117, align 8
  %118 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %116, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %110
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %116) #14
  %120 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %116 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %119, %110
  %122 = load i32, i32* %106, align 8
  %123 = or i32 %122, 16384
  store i32 %123, i32* %106, align 8
  br label %124

124:                                              ; preds = %104, %121
  %125 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 19, i32 0, i32 0, i32 0
  %126 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %125, align 8
  %127 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %126, %"class.spvtools::opt::analysis::Constant"* %97, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #14
  %128 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 4
  %129 = load i8, i8* %128, align 1, !range !2
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %136, label %131

131:                                              ; preds = %124
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %127, i64 0, i32 3
  %133 = load i8, i8* %132, align 4, !range !2
  %134 = zext i8 %133 to i32
  %135 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %127, i32 %134) #14
  br label %136

136:                                              ; preds = %124, %131
  %137 = phi i32 [ %135, %131 ], [ 0, %124 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %7, i64 0, i32 0, i32 0
  %139 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %138, align 8
  %140 = icmp eq %"class.std::__1::vector.3"* %139, null
  br i1 %140, label %164, label %141

141:                                              ; preds = %136
  %142 = bitcast %"class.std::__1::vector.3"* %139 to i8*
  %143 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %144 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %143, align 8
  %145 = icmp eq %"class.std::__1::vector.3"* %144, %139
  br i1 %145, label %162, label %146

146:                                              ; preds = %141, %157
  %147 = phi %"class.std::__1::vector.3"* [ %148, %157 ], [ %144, %141 ]
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 -1
  %149 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %148, i64 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %146
  %153 = ptrtoint i32* %150 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 -1, i32 0, i32 1
  %155 = bitcast i32** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = bitcast i32* %150 to i8*
  call void @_ZdlPv(i8* %156) #13
  br label %157

157:                                              ; preds = %152, %146
  %158 = icmp eq %"class.std::__1::vector.3"* %148, %139
  br i1 %158, label %159, label %146

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.463"* %7 to i8**
  %161 = load i8*, i8** %160, align 8
  br label %162

162:                                              ; preds = %159, %141
  %163 = phi i8* [ %161, %159 ], [ %142, %141 ]
  store %"class.std::__1::vector.3"* %139, %"class.std::__1::vector.3"** %143, align 8
  call void @_ZdlPv(i8* %163) #13
  br label %164

164:                                              ; preds = %136, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #14
  ret i32 %137
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

declare void @_ZN8spvtools3opt6Module11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEb(%"class.spvtools::opt::Module"*, %"class.std::__1::function.942"* dereferenceable(32), i1 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessCallTreeFromRootsERNSt3__18functionIFbPNS0_8FunctionEEEEPNS2_5queueIjNS2_5dequeIjNS2_9allocatorIjEEEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.1036"* dereferenceable(32), %"class.std::__1::queue"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13IsDeviceScopeEj(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 16384
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %23

9:                                                ; preds = %2
  %10 = tail call i8* @_Znwm(i64 136) #13
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %11, %"class.spvtools::opt::IRContext"* %4) #14
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 19
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.400"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %9
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %15) #14
  %19 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %15 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %18, %9
  %21 = load i32, i32* %5, align 8
  %22 = or i32 %21, 16384
  store i32 %22, i32* %5, align 8
  br label %23

23:                                               ; preds = %2, %20
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 19, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %24, align 8
  %26 = zext i32 %1 to i64
  %27 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %82, label %30

30:                                               ; preds = %23
  %31 = tail call i64 @llvm.ctpop.i64(i64 %28) #14, !range !3
  %32 = icmp ugt i64 %31, 1
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = add i64 %28, 4294967295
  %35 = and i64 %34, %26
  br label %40

36:                                               ; preds = %30
  %37 = icmp ugt i64 %28, %26
  br i1 %37, label %40, label %38

38:                                               ; preds = %36
  %39 = urem i64 %26, %28
  br label %40

40:                                               ; preds = %38, %36, %33
  %41 = phi i64 [ %35, %33 ], [ %39, %38 ], [ %26, %36 ]
  %42 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %25, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %43, i64 %41
  %45 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.408"* %45, null
  br i1 %46, label %82, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %45, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.408"* %49, null
  br i1 %50, label %82, label %51

51:                                               ; preds = %47
  %52 = add i64 %28, -1
  br label %53

53:                                               ; preds = %74, %51
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %49, %51 ], [ %76, %74 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 1
  %56 = bitcast %"struct.std::__1::__hash_node_base.408"* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %26
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  br i1 %32, label %62, label %60

60:                                               ; preds = %59
  %61 = and i64 %57, %52
  br label %66

62:                                               ; preds = %59
  %63 = icmp ult i64 %57, %28
  br i1 %63, label %66, label %64

64:                                               ; preds = %62
  %65 = urem i64 %57, %28
  br label %66

66:                                               ; preds = %64, %62, %60
  %67 = phi i64 [ %61, %60 ], [ %65, %64 ], [ %57, %62 ]
  %68 = icmp eq i64 %67, %41
  br i1 %68, label %74, label %82

69:                                               ; preds = %53
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 2
  %71 = bitcast %"struct.std::__1::__hash_node_base.408"* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %1
  br i1 %73, label %78, label %74

74:                                               ; preds = %69, %66
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %76 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %75, align 8
  %77 = icmp eq %"struct.std::__1::__hash_node_base.408"* %76, null
  br i1 %77, label %82, label %53

78:                                               ; preds = %69
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 3
  %80 = bitcast %"struct.std::__1::__hash_node_base.408"* %79 to %"class.spvtools::opt::analysis::Constant"**
  %81 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %80, align 8
  br label %82

82:                                               ; preds = %66, %74, %23, %40, %47, %78
  %83 = phi %"class.spvtools::opt::analysis::Constant"* [ %81, %78 ], [ null, %40 ], [ null, %23 ], [ null, %47 ], [ null, %74 ], [ null, %66 ]
  %84 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %83, i64 0, i32 1
  %85 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %84, align 8
  %86 = bitcast %"class.spvtools::opt::analysis::Type"* %85 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %87 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %87, i64 11
  %89 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %88, align 8
  %90 = tail call %"class.spvtools::opt::analysis::Integer"* %89(%"class.spvtools::opt::analysis::Type"* %85) #14
  %91 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %90, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 32
  %94 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %90, i64 0, i32 2
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp ne i8 %95, 0
  br i1 %93, label %97, label %102

97:                                               ; preds = %82
  br i1 %96, label %98, label %100

98:                                               ; preds = %97
  %99 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetS32Ev(%"class.spvtools::opt::analysis::Constant"* %83) #14
  br label %109

100:                                              ; preds = %97
  %101 = tail call i32 @_ZNK8spvtools3opt8analysis8Constant6GetU32Ev(%"class.spvtools::opt::analysis::Constant"* %83) #14
  br label %109

102:                                              ; preds = %82
  br i1 %96, label %103, label %106

103:                                              ; preds = %102
  %104 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant6GetS64Ev(%"class.spvtools::opt::analysis::Constant"* %83) #14
  %105 = trunc i64 %104 to i32
  br label %109

106:                                              ; preds = %102
  %107 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant6GetU64Ev(%"class.spvtools::opt::analysis::Constant"* %83) #14
  %108 = trunc i64 %107 to i32
  br label %109

109:                                              ; preds = %106, %103, %100, %98
  %110 = phi i32 [ %99, %98 ], [ %101, %100 ], [ %105, %103 ], [ %108, %106 ]
  %111 = icmp eq i32 %110, 1
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt18UpgradeMemoryModel14UpgradeExtInstEPNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.std::__1::vector.1051", align 8
  %5 = alloca %"class.spvtools::opt::analysis::Struct", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %8 = alloca %"class.std::__1::vector.3", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.std::__1::vector.3", align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = select i1 %16, i32 1, i32 2
  %18 = xor i1 %16, true
  %19 = zext i1 %18 to i32
  %20 = select i1 %13, i32 %19, i32 %17
  %21 = add nuw nsw i32 %20, 1
  %22 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %21) #14
  %23 = icmp eq i32 %22, 35
  %24 = load i8, i8* %11, align 4, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = load i8, i8* %14, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32 1, i32 2
  %29 = xor i1 %27, true
  %30 = zext i1 %29 to i32
  %31 = select i1 %25, i32 %30, i32 %28
  %32 = add nuw nsw i32 %31, 3
  %33 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %32) #14
  %34 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 2
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 11
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %64

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %41, align 8
  %43 = tail call i8* @_Znwm(i64 104) #13
  %44 = bitcast i8* %43 to %"class.spvtools::opt::analysis::DefUseManager"*
  %45 = getelementptr inbounds i8, i8* %43, i64 32
  %46 = bitcast i8* %45 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %46, align 4
  %47 = getelementptr inbounds i8, i8* %43, i64 48
  %48 = getelementptr inbounds i8, i8* %43, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #14
  %49 = bitcast i8* %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = getelementptr inbounds i8, i8* %43, i64 64
  %51 = getelementptr inbounds i8, i8* %43, i64 96
  %52 = bitcast i8* %51 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %52, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %44, %"class.spvtools::opt::Module"* %42) #14
  %53 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 6
  %54 = ptrtoint i8* %43 to i64
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %53, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.62"* %53 to i64*
  store i64 %54, i64* %57, align 8
  %58 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %40
  %60 = bitcast %"class.std::__1::unique_ptr.62"* %53 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %60, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %56) #14
  br label %61

61:                                               ; preds = %59, %40
  %62 = load i32, i32* %36, align 8
  %63 = or i32 %62, 1
  store i32 %63, i32* %36, align 8
  br label %64

64:                                               ; preds = %2, %61
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 6, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %65, align 8
  %67 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %66, i32 %33) #14
  %68 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %67, i64 0, i32 3
  %69 = load i8, i8* %68, align 4, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %64
  %72 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %67, i32 0) #14
  br label %73

73:                                               ; preds = %64, %71
  %74 = phi i32 [ %72, %71 ], [ 0, %64 ]
  %75 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 11
  %77 = load i32, i32* %76, align 8
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %104

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 4, i32 0, i32 0, i32 0
  %82 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %81, align 8
  %83 = tail call i8* @_Znwm(i64 104) #13
  %84 = bitcast i8* %83 to %"class.spvtools::opt::analysis::DefUseManager"*
  %85 = getelementptr inbounds i8, i8* %83, i64 32
  %86 = bitcast i8* %85 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %83, i64 48
  %88 = getelementptr inbounds i8, i8* %83, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #14
  %89 = bitcast i8* %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %83, i64 64
  %91 = getelementptr inbounds i8, i8* %83, i64 96
  %92 = bitcast i8* %91 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %92, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %84, %"class.spvtools::opt::Module"* %82) #14
  %93 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 6
  %94 = ptrtoint i8* %83 to i64
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %93, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.62"* %93 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %96, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %80
  %100 = bitcast %"class.std::__1::unique_ptr.62"* %93 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %100, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %96) #14
  br label %101

101:                                              ; preds = %99, %80
  %102 = load i32, i32* %76, align 8
  %103 = or i32 %102, 1
  store i32 %103, i32* %76, align 8
  br label %104

104:                                              ; preds = %73, %101
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %75, i64 0, i32 6, i32 0, i32 0, i32 0
  %106 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %105, align 8
  %107 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %106, i32 %74) #14
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 3
  %109 = load i8, i8* %108, align 4, !range !2
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %107, i64 0, i32 4
  %112 = load i8, i8* %111, align 1, !range !2
  %113 = icmp eq i8 %112, 0
  %114 = select i1 %113, i32 1, i32 2
  %115 = xor i1 %113, true
  %116 = zext i1 %115 to i32
  %117 = select i1 %110, i32 %116, i32 %114
  %118 = add nuw nsw i32 %117, 1
  %119 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %107, i32 %118) #14
  %120 = load i8, i8* %11, align 4, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %104
  %123 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #14
  br label %124

124:                                              ; preds = %104, %122
  %125 = phi i32 [ %123, %122 ], [ 0, %104 ]
  %126 = bitcast %"class.std::__1::vector.1051"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #14
  %127 = getelementptr inbounds %"class.std::__1::vector.1051", %"class.std::__1::vector.1051"* %4, i64 0, i32 0, i32 0
  %128 = getelementptr inbounds %"class.std::__1::vector.1051", %"class.std::__1::vector.1051"* %4, i64 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.std::__1::vector.1051", %"class.std::__1::vector.1051"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %130 = tail call i8* @_Znwm(i64 16) #13
  %131 = bitcast %"class.std::__1::vector.1051"* %4 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 16
  %133 = bitcast %"class.spvtools::opt::analysis::Type"*** %129 to i8**
  store i8* %132, i8** %133, align 8
  %134 = bitcast %"class.spvtools::opt::analysis::Type"*** %128 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 0, i64 16, i1 false) #14
  %135 = ptrtoint i8* %132 to i64
  store i64 %135, i64* %134, align 8
  %136 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %137 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 11
  %138 = load i32, i32* %137, align 8
  %139 = trunc i32 %138 to i16
  %140 = icmp slt i16 %139, 0
  %141 = bitcast i8* %130 to %"class.spvtools::opt::analysis::Type"**
  br i1 %140, label %157, label %142

142:                                              ; preds = %124
  %143 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 5
  %144 = tail call i8* @_Znwm(i64 240) #13
  %145 = bitcast i8* %144 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %145, %"class.std::__1::function"* dereferenceable(32) %143, %"class.spvtools::opt::IRContext"* %136) #14
  %146 = ptrtoint i8* %144 to i64
  %147 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 20
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %147, i64 0, i32 0, i32 0, i32 0
  %149 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %148, align 8
  %150 = bitcast %"class.std::__1::unique_ptr.480"* %147 to i64*
  store i64 %146, i64* %150, align 8
  %151 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %149, null
  br i1 %151, label %154, label %152

152:                                              ; preds = %142
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %149) #14
  %153 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %149 to i8*
  tail call void @_ZdlPv(i8* %153) #13
  br label %154

154:                                              ; preds = %152, %142
  %155 = load i32, i32* %137, align 8
  %156 = or i32 %155, 32768
  store i32 %156, i32* %137, align 8
  br label %157

157:                                              ; preds = %124, %154
  %158 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %136, i64 0, i32 20, i32 0, i32 0, i32 0
  %159 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %158, align 8
  %160 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %159, i32 %125) #14
  store %"class.spvtools::opt::analysis::Type"* %160, %"class.spvtools::opt::analysis::Type"** %141, align 8
  %161 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 11
  %163 = load i32, i32* %162, align 8
  %164 = trunc i32 %163 to i16
  %165 = icmp slt i16 %164, 0
  br i1 %165, label %181, label %166

166:                                              ; preds = %157
  %167 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 5
  %168 = tail call i8* @_Znwm(i64 240) #13
  %169 = bitcast i8* %168 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %169, %"class.std::__1::function"* dereferenceable(32) %167, %"class.spvtools::opt::IRContext"* %161) #14
  %170 = ptrtoint i8* %168 to i64
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 20
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %171, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %172, align 8
  %174 = bitcast %"class.std::__1::unique_ptr.480"* %171 to i64*
  store i64 %170, i64* %174, align 8
  %175 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %173, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %166
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %173) #14
  %177 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %173 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %176, %166
  %179 = load i32, i32* %162, align 8
  %180 = or i32 %179, 32768
  store i32 %180, i32* %162, align 8
  br label %181

181:                                              ; preds = %157, %178
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %161, i64 0, i32 20, i32 0, i32 0, i32 0
  %183 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %182, align 8
  %184 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %183, i32 %119) #14
  %185 = getelementptr inbounds i8, i8* %130, i64 8
  %186 = bitcast i8* %185 to %"class.spvtools::opt::analysis::Type"**
  store %"class.spvtools::opt::analysis::Type"* %184, %"class.spvtools::opt::analysis::Type"** %186, align 8
  %187 = bitcast %"class.spvtools::opt::analysis::Struct"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %187) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 88, i1 false)
  call void @_ZN8spvtools3opt8analysis6StructC1ERKNSt3__16vectorIPKNS1_4TypeENS3_9allocatorIS7_EEEE(%"class.spvtools::opt::analysis::Struct"* nonnull %5, %"class.std::__1::vector.1051"* nonnull dereferenceable(24) %4) #14
  %188 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %189 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %188, i64 0, i32 11
  %190 = load i32, i32* %189, align 8
  %191 = trunc i32 %190 to i16
  %192 = icmp slt i16 %191, 0
  br i1 %192, label %208, label %193

193:                                              ; preds = %181
  %194 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %188, i64 0, i32 5
  %195 = call i8* @_Znwm(i64 240) #13
  %196 = bitcast i8* %195 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %196, %"class.std::__1::function"* dereferenceable(32) %194, %"class.spvtools::opt::IRContext"* %188) #14
  %197 = ptrtoint i8* %195 to i64
  %198 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %188, i64 0, i32 20
  %199 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %198, i64 0, i32 0, i32 0, i32 0
  %200 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %199, align 8
  %201 = bitcast %"class.std::__1::unique_ptr.480"* %198 to i64*
  store i64 %197, i64* %201, align 8
  %202 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %200, null
  br i1 %202, label %205, label %203

203:                                              ; preds = %193
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %200) #14
  %204 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %200 to i8*
  call void @_ZdlPv(i8* %204) #13
  br label %205

205:                                              ; preds = %203, %193
  %206 = load i32, i32* %189, align 8
  %207 = or i32 %206, 32768
  store i32 %207, i32* %189, align 8
  br label %208

208:                                              ; preds = %181, %205
  %209 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %188, i64 0, i32 20, i32 0, i32 0, i32 0
  %210 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %209, align 8
  %211 = bitcast %"class.spvtools::opt::analysis::Struct"* %5 to %"class.spvtools::opt::analysis::Type"*
  %212 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %210, %"class.spvtools::opt::analysis::Type"* nonnull %211) #14
  %213 = select i1 %23, i32 36, i32 52
  %214 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %214) #14
  %215 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %215, align 8
  %216 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %217 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %218 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %219 = bitcast i32** %217 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %218, %"struct.std::__1::aligned_storage<4, 4>::type"** %219, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %221 = bitcast %"class.std::__1::unique_ptr.0"* %220 to i64*
  store i64 0, i64* %221, align 8
  %222 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %218 to i32*
  store i64 1, i64* %216, align 8
  store i32 %213, i32* %222, align 8
  %223 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %223, align 8
  %225 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %224, i64 3, i32 1
  %226 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %225, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %215, align 8
  %227 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %228 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %227, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %227, align 8
  %229 = icmp eq %"class.std::__1::vector.3"* %228, null
  br i1 %229, label %241, label %230

230:                                              ; preds = %208
  %231 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 0
  %232 = load i32*, i32** %231, align 8
  %233 = icmp eq i32* %232, null
  br i1 %233, label %239, label %234

234:                                              ; preds = %230
  %235 = ptrtoint i32* %232 to i64
  %236 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %228, i64 0, i32 0, i32 1
  %237 = bitcast i32** %236 to i64*
  store i64 %235, i64* %237, align 8
  %238 = bitcast i32* %232 to i8*
  call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %234, %230
  %240 = bitcast %"class.std::__1::vector.3"* %228 to i8*
  call void @_ZdlPv(i8* %240) #13
  br label %241

241:                                              ; preds = %208, %239
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %214) #14
  %242 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %223, align 8
  %243 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %242, i64 5
  %244 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %242, i64 6
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %246 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %245, align 8
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %244, %246
  br i1 %247, label %263, label %248

248:                                              ; preds = %241, %248
  %249 = phi %"struct.spvtools::opt::Operand"* [ %258, %248 ], [ %243, %241 ]
  %250 = phi %"struct.spvtools::opt::Operand"* [ %257, %248 ], [ %244, %241 ]
  %251 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %250, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %249, i64 0, i32 0
  store i32 %252, i32* %253, align 8
  %254 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %249, i64 0, i32 1
  %255 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %250, i64 0, i32 1
  %256 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %254, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %255) #14
  %257 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %250, i64 1
  %258 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %249, i64 1
  %259 = icmp eq %"struct.spvtools::opt::Operand"* %257, %246
  br i1 %259, label %260, label %248

260:                                              ; preds = %248
  %261 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %245, align 8
  %262 = icmp eq %"struct.spvtools::opt::Operand"* %261, %258
  br i1 %262, label %286, label %263

263:                                              ; preds = %260, %241
  %264 = phi %"struct.spvtools::opt::Operand"* [ %258, %260 ], [ %243, %241 ]
  %265 = phi %"struct.spvtools::opt::Operand"* [ %261, %260 ], [ %244, %241 ]
  br label %266

266:                                              ; preds = %284, %263
  %267 = phi %"struct.spvtools::opt::Operand"* [ %268, %284 ], [ %265, %263 ]
  %268 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 -1
  %269 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %269, align 8
  %270 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %271 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %270, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %270, align 8
  %272 = icmp eq %"class.std::__1::vector.3"* %271, null
  br i1 %272, label %284, label %273

273:                                              ; preds = %266
  %274 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 0
  %275 = load i32*, i32** %274, align 8
  %276 = icmp eq i32* %275, null
  br i1 %276, label %282, label %277

277:                                              ; preds = %273
  %278 = ptrtoint i32* %275 to i64
  %279 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 1
  %280 = bitcast i32** %279 to i64*
  store i64 %278, i64* %280, align 8
  %281 = bitcast i32* %275 to i8*
  call void @_ZdlPv(i8* %281) #13
  br label %282

282:                                              ; preds = %277, %273
  %283 = bitcast %"class.std::__1::vector.3"* %271 to i8*
  call void @_ZdlPv(i8* %283) #13
  br label %284

284:                                              ; preds = %282, %266
  %285 = icmp eq %"struct.spvtools::opt::Operand"* %268, %264
  br i1 %285, label %286, label %266

286:                                              ; preds = %284, %260
  %287 = phi %"struct.spvtools::opt::Operand"* [ %258, %260 ], [ %264, %284 ]
  store %"struct.spvtools::opt::Operand"* %287, %"struct.spvtools::opt::Operand"** %245, align 8
  %288 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %288) #14
  %289 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %289, align 8
  %290 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %291 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %292 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %293 = bitcast i32** %291 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %292, %"struct.std::__1::aligned_storage<4, 4>::type"** %293, align 8
  %294 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %295 = bitcast %"class.std::__1::unique_ptr.0"* %294 to i64*
  store i64 0, i64* %295, align 8
  %296 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %292 to i32*
  store i64 1, i64* %290, align 8
  store i32 %212, i32* %296, align 8
  %297 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %223, align 8
  %298 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1
  %299 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %298, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %289, align 8
  %300 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %301 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %300, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %300, align 8
  %302 = icmp eq %"class.std::__1::vector.3"* %301, null
  br i1 %302, label %314, label %303

303:                                              ; preds = %286
  %304 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %301, i64 0, i32 0, i32 0
  %305 = load i32*, i32** %304, align 8
  %306 = icmp eq i32* %305, null
  br i1 %306, label %312, label %307

307:                                              ; preds = %303
  %308 = ptrtoint i32* %305 to i64
  %309 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %301, i64 0, i32 0, i32 1
  %310 = bitcast i32** %309 to i64*
  store i64 %308, i64* %310, align 8
  %311 = bitcast i32* %305 to i8*
  call void @_ZdlPv(i8* %311) #13
  br label %312

312:                                              ; preds = %307, %303
  %313 = bitcast %"class.std::__1::vector.3"* %301 to i8*
  call void @_ZdlPv(i8* %313) #13
  br label %314

314:                                              ; preds = %286, %312
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %288) #14
  %315 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 0, i32 1
  %316 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %315, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %316, i64 0, i32 0, i32 3
  %318 = load i8, i8* %317, align 8, !range !2
  %319 = icmp eq i8 %318, 0
  %320 = select i1 %319, %"class.spvtools::opt::Instruction"* %316, %"class.spvtools::opt::Instruction"* null
  %321 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %321) #14
  %322 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 0
  %323 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 1
  %324 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 3
  %325 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 -86, i64 32, i1 false)
  %326 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %327 = ptrtoint %"class.spvtools::opt::Instruction"* %320 to i64
  %328 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 11
  %329 = load i32, i32* %328, align 8
  %330 = and i32 %329, 2
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %314
  call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %326) #14
  br label %333

333:                                              ; preds = %332, %314
  %334 = lshr i64 %327, 32
  %335 = shl i64 %327, 3
  %336 = and i64 %335, 4294967288
  %337 = add nuw nsw i64 %336, 8
  %338 = xor i64 %337, %334
  %339 = mul i64 %338, -7070675565921424023
  %340 = lshr i64 %339, 47
  %341 = xor i64 %339, %334
  %342 = xor i64 %341, %340
  %343 = mul i64 %342, -7070675565921424023
  %344 = lshr i64 %343, 47
  %345 = xor i64 %344, %343
  %346 = mul i64 %345, -7070675565921424023
  %347 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %348 = load i64, i64* %347, align 8
  %349 = icmp eq i64 %348, 0
  br i1 %349, label %402, label %350

350:                                              ; preds = %333
  %351 = call i64 @llvm.ctpop.i64(i64 %348) #14, !range !3
  %352 = icmp ugt i64 %351, 1
  br i1 %352, label %356, label %353

353:                                              ; preds = %350
  %354 = add i64 %348, -1
  %355 = and i64 %354, %346
  br label %360

356:                                              ; preds = %350
  %357 = icmp ult i64 %346, %348
  br i1 %357, label %360, label %358

358:                                              ; preds = %356
  %359 = urem i64 %346, %348
  br label %360

360:                                              ; preds = %358, %356, %353
  %361 = phi i64 [ %355, %353 ], [ %359, %358 ], [ %346, %356 ]
  %362 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %362, align 8
  %364 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %363, i64 %361
  %365 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %364, align 8
  %366 = icmp eq %"struct.std::__1::__hash_node_base.178"* %365, null
  br i1 %366, label %402, label %367

367:                                              ; preds = %360
  %368 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %365, i64 0, i32 0
  %369 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %368, align 8
  %370 = icmp eq %"struct.std::__1::__hash_node_base.178"* %369, null
  br i1 %370, label %402, label %371

371:                                              ; preds = %367
  %372 = add i64 %348, -1
  br label %373

373:                                              ; preds = %394, %371
  %374 = phi %"struct.std::__1::__hash_node_base.178"* [ %369, %371 ], [ %396, %394 ]
  %375 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %374, i64 1
  %376 = bitcast %"struct.std::__1::__hash_node_base.178"* %375 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = icmp eq i64 %377, %346
  br i1 %378, label %389, label %379

379:                                              ; preds = %373
  br i1 %352, label %382, label %380

380:                                              ; preds = %379
  %381 = and i64 %377, %372
  br label %386

382:                                              ; preds = %379
  %383 = icmp ult i64 %377, %348
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = urem i64 %377, %348
  br label %386

386:                                              ; preds = %384, %382, %380
  %387 = phi i64 [ %381, %380 ], [ %385, %384 ], [ %377, %382 ]
  %388 = icmp eq i64 %387, %361
  br i1 %388, label %394, label %402

389:                                              ; preds = %373
  %390 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %374, i64 2
  %391 = bitcast %"struct.std::__1::__hash_node_base.178"* %390 to %"class.spvtools::opt::Instruction"**
  %392 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %391, align 8
  %393 = icmp eq %"class.spvtools::opt::Instruction"* %392, %320
  br i1 %393, label %398, label %394

394:                                              ; preds = %389, %386
  %395 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %374, i64 0, i32 0
  %396 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %395, align 8
  %397 = icmp eq %"struct.std::__1::__hash_node_base.178"* %396, null
  br i1 %397, label %402, label %373

398:                                              ; preds = %389
  %399 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %374, i64 3
  %400 = bitcast %"struct.std::__1::__hash_node_base.178"* %399 to %"class.spvtools::opt::BasicBlock"**
  %401 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %400, align 8
  br label %402

402:                                              ; preds = %394, %386, %367, %333, %360, %398
  %403 = phi %"class.spvtools::opt::BasicBlock"* [ %401, %398 ], [ null, %360 ], [ null, %333 ], [ null, %367 ], [ null, %386 ], [ null, %394 ]
  store %"class.spvtools::opt::IRContext"* %326, %"class.spvtools::opt::IRContext"** %322, align 8
  store %"class.spvtools::opt::BasicBlock"* %403, %"class.spvtools::opt::BasicBlock"** %323, align 8
  %404 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 2
  %405 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %404 to i64*
  store i64 %327, i64* %405, align 8
  store i32 3, i32* %324, align 8
  %406 = load i8, i8* %14, align 1, !range !2
  %407 = icmp eq i8 %406, 0
  br i1 %407, label %412, label %408

408:                                              ; preds = %402
  %409 = load i8, i8* %11, align 4, !range !2
  %410 = zext i8 %409 to i32
  %411 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %410) #14
  br label %412

412:                                              ; preds = %402, %408
  %413 = phi i32 [ %411, %408 ], [ 0, %402 ]
  %414 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #14
  %415 = call i8* @_Znwm(i64 4) #13
  %416 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %417 = bitcast %"class.std::__1::vector.3"* %8 to i8**
  store i8* %415, i8** %417, align 8
  %418 = getelementptr inbounds i8, i8* %415, i64 4
  %419 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %420 = bitcast i32** %419 to i8**
  store i8* %418, i8** %420, align 8
  %421 = bitcast i32** %416 to i64*
  %422 = bitcast i8* %415 to i32*
  store i32 0, i32* %422, align 4
  %423 = ptrtoint i8* %418 to i64
  store i64 %423, i64* %421, align 8
  %424 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder19AddCompositeExtractEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 %125, i32 %413, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %8)
  %425 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %426 = load i32*, i32** %425, align 8
  %427 = icmp eq i32* %426, null
  br i1 %427, label %431, label %428

428:                                              ; preds = %412
  %429 = ptrtoint i32* %426 to i64
  store i64 %429, i64* %421, align 8
  %430 = bitcast i32* %426 to i8*
  call void @_ZdlPv(i8* %430) #13
  br label %431

431:                                              ; preds = %412, %428
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #14
  %432 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %433 = load i8, i8* %14, align 1, !range !2
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %439, label %435

435:                                              ; preds = %431
  %436 = load i8, i8* %11, align 4, !range !2
  %437 = zext i8 %436 to i32
  %438 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %437) #14
  br label %439

439:                                              ; preds = %431, %435
  %440 = phi i32 [ %438, %435 ], [ 0, %431 ]
  %441 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %424, i64 0, i32 4
  %442 = load i8, i8* %441, align 1, !range !2
  %443 = icmp eq i8 %442, 0
  br i1 %443, label %449, label %444

444:                                              ; preds = %439
  %445 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %424, i64 0, i32 3
  %446 = load i8, i8* %445, align 4, !range !2
  %447 = zext i8 %446 to i32
  %448 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %424, i32 %447) #14
  br label %449

449:                                              ; preds = %439, %444
  %450 = phi i32 [ %448, %444 ], [ 0, %439 ]
  %451 = call zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"* %432, i32 %440, i32 %450) #14
  %452 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %452) #14
  %453 = load i8, i8* %14, align 1, !range !2
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %459, label %455

455:                                              ; preds = %449
  %456 = load i8, i8* %11, align 4, !range !2
  %457 = zext i8 %456 to i32
  %458 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %457) #14
  br label %459

459:                                              ; preds = %449, %455
  %460 = phi i32 [ %458, %455 ], [ 0, %449 ]
  %461 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8
  %462 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %463 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %464 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %465 = bitcast i32** %463 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %464, %"struct.std::__1::aligned_storage<4, 4>::type"** %465, align 8
  %466 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %467 = bitcast %"class.std::__1::unique_ptr.0"* %466 to i64*
  store i64 0, i64* %467, align 8
  %468 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %464 to i32*
  store i64 1, i64* %462, align 8
  store i32 %460, i32* %468, align 8
  %469 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %424, i64 0, i32 3
  %470 = load i8, i8* %469, align 4, !range !2
  %471 = icmp eq i8 %470, 0
  %472 = load i8, i8* %441, align 1, !range !2
  %473 = icmp eq i8 %472, 0
  %474 = select i1 %473, i64 1, i64 2
  %475 = xor i1 %473, true
  %476 = zext i1 %475 to i64
  %477 = select i1 %471, i64 %476, i64 %474
  %478 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %424, i64 0, i32 6, i32 0, i32 0
  %479 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %478, align 8
  %480 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %479, i64 %477, i32 1
  %481 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %480, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %461, align 8
  %482 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %483 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %482, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %482, align 8
  %484 = icmp eq %"class.std::__1::vector.3"* %483, null
  br i1 %484, label %496, label %485

485:                                              ; preds = %459
  %486 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %483, i64 0, i32 0, i32 0
  %487 = load i32*, i32** %486, align 8
  %488 = icmp eq i32* %487, null
  br i1 %488, label %494, label %489

489:                                              ; preds = %485
  %490 = ptrtoint i32* %487 to i64
  %491 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %483, i64 0, i32 0, i32 1
  %492 = bitcast i32** %491 to i64*
  store i64 %490, i64* %492, align 8
  %493 = bitcast i32* %487 to i8*
  call void @_ZdlPv(i8* %493) #13
  br label %494

494:                                              ; preds = %489, %485
  %495 = bitcast %"class.std::__1::vector.3"* %483 to i8*
  call void @_ZdlPv(i8* %495) #13
  br label %496

496:                                              ; preds = %459, %494
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %452) #14
  %497 = load i8, i8* %14, align 1, !range !2
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %503, label %499

499:                                              ; preds = %496
  %500 = load i8, i8* %11, align 4, !range !2
  %501 = zext i8 %500 to i32
  %502 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %501) #14
  br label %503

503:                                              ; preds = %496, %499
  %504 = phi i32 [ %502, %499 ], [ 0, %496 ]
  %505 = bitcast %"class.std::__1::vector.3"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %505) #14
  %506 = call i8* @_Znwm(i64 4) #13
  %507 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 1
  %508 = bitcast %"class.std::__1::vector.3"* %10 to i8**
  store i8* %506, i8** %508, align 8
  %509 = getelementptr inbounds i8, i8* %506, i64 4
  %510 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %511 = bitcast i32** %510 to i8**
  store i8* %509, i8** %511, align 8
  %512 = bitcast i32** %507 to i64*
  %513 = bitcast i8* %506 to i32*
  store i32 1, i32* %513, align 4
  %514 = ptrtoint i8* %509 to i64
  store i64 %514, i64* %512, align 8
  %515 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder19AddCompositeExtractEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 %119, i32 %504, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %10)
  %516 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %10, i64 0, i32 0, i32 0
  %517 = load i32*, i32** %516, align 8
  %518 = icmp eq i32* %517, null
  br i1 %518, label %522, label %519

519:                                              ; preds = %503
  %520 = ptrtoint i32* %517 to i64
  store i64 %520, i64* %512, align 8
  %521 = bitcast i32* %517 to i8*
  call void @_ZdlPv(i8* %521) #13
  br label %522

522:                                              ; preds = %503, %519
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %505) #14
  %523 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %515, i64 0, i32 4
  %524 = load i8, i8* %523, align 1, !range !2
  %525 = icmp eq i8 %524, 0
  br i1 %525, label %531, label %526

526:                                              ; preds = %522
  %527 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %515, i64 0, i32 3
  %528 = load i8, i8* %527, align 4, !range !2
  %529 = zext i8 %528 to i32
  %530 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %515, i32 %529) #14
  br label %531

531:                                              ; preds = %522, %526
  %532 = phi i32 [ %530, %526 ], [ 0, %522 ]
  %533 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder8AddStoreEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 %33, i32 %532)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %321) #14
  %534 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis6StructE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %534, align 8
  %535 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 2, i32 0
  %536 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %537 = bitcast %"class.std::__1::__tree_end_node"* %536 to %"class.std::__1::__tree_node.1147"**
  %538 = load %"class.std::__1::__tree_node.1147"*, %"class.std::__1::__tree_node.1147"** %537, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1059"* %535, %"class.std::__1::__tree_node.1147"* %538) #14
  %539 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 1, i32 0, i32 0
  %540 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %539, align 8
  %541 = icmp eq %"class.spvtools::opt::analysis::Type"** %540, null
  br i1 %541, label %547, label %542

542:                                              ; preds = %531
  %543 = ptrtoint %"class.spvtools::opt::analysis::Type"** %540 to i64
  %544 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 1, i32 0, i32 1
  %545 = bitcast %"class.spvtools::opt::analysis::Type"*** %544 to i64*
  store i64 %543, i64* %545, align 8
  %546 = bitcast %"class.spvtools::opt::analysis::Type"** %540 to i8*
  call void @_ZdlPv(i8* %546) #13
  br label %547

547:                                              ; preds = %542, %531
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %534, align 8
  %548 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 0, i32 1
  %549 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %548, i64 0, i32 0, i32 0
  %550 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %549, align 8
  %551 = icmp eq %"class.std::__1::vector.3"* %550, null
  br i1 %551, label %575, label %552

552:                                              ; preds = %547
  %553 = bitcast %"class.std::__1::vector.3"* %550 to i8*
  %554 = getelementptr inbounds %"class.spvtools::opt::analysis::Struct", %"class.spvtools::opt::analysis::Struct"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %555 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %554, align 8
  %556 = icmp eq %"class.std::__1::vector.3"* %555, %550
  br i1 %556, label %573, label %557

557:                                              ; preds = %552, %568
  %558 = phi %"class.std::__1::vector.3"* [ %559, %568 ], [ %555, %552 ]
  %559 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %558, i64 -1
  %560 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %559, i64 0, i32 0, i32 0
  %561 = load i32*, i32** %560, align 8
  %562 = icmp eq i32* %561, null
  br i1 %562, label %568, label %563

563:                                              ; preds = %557
  %564 = ptrtoint i32* %561 to i64
  %565 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %558, i64 -1, i32 0, i32 1
  %566 = bitcast i32** %565 to i64*
  store i64 %564, i64* %566, align 8
  %567 = bitcast i32* %561 to i8*
  call void @_ZdlPv(i8* %567) #13
  br label %568

568:                                              ; preds = %563, %557
  %569 = icmp eq %"class.std::__1::vector.3"* %559, %550
  br i1 %569, label %570, label %557

570:                                              ; preds = %568
  %571 = bitcast %"class.std::__1::vector.463"* %548 to i8**
  %572 = load i8*, i8** %571, align 8
  br label %573

573:                                              ; preds = %570, %552
  %574 = phi i8* [ %572, %570 ], [ %553, %552 ]
  store %"class.std::__1::vector.3"* %550, %"class.std::__1::vector.3"** %554, align 8
  call void @_ZdlPv(i8* %574) #13
  br label %575

575:                                              ; preds = %547, %573
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %187) #14
  %576 = load %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"*** %127, align 8
  %577 = icmp eq %"class.spvtools::opt::analysis::Type"** %576, null
  br i1 %577, label %581, label %578

578:                                              ; preds = %575
  %579 = ptrtoint %"class.spvtools::opt::analysis::Type"** %576 to i64
  store i64 %579, i64* %134, align 8
  %580 = bitcast %"class.spvtools::opt::analysis::Type"** %576 to i8*
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %575, %578
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #14
  ret void
}

declare void @_ZN8spvtools3opt8analysis6StructC1ERKNSt3__16vectorIPKNS1_4TypeENS3_9allocatorIS7_EEEE(%"class.spvtools::opt::analysis::Struct"*, %"class.std::__1::vector.1051"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder19AddCompositeExtractEjjRKNSt3__16vectorIjNS2_9allocatorIjEEEE(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.spvtools::opt::Operand", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"class.std::__1::unique_ptr.21", align 8
  %11 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #14
  %15 = bitcast %"struct.spvtools::opt::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %15) #14
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %2, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #14
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %6) #14
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %35, align 8
  %37 = bitcast %"class.std::__1::vector.3"* %36 to i8*
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %39, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %36, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %4
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %36, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %36, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %45, %41
  call void @_ZdlPv(i8* %37) #13
  br label %51

51:                                               ; preds = %4, %50
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %52, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %52, align 8
  %54 = icmp eq %"class.std::__1::vector.3"* %53, null
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 0, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %53, i64 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.std::__1::vector.3"* %53 to i8*
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %51, %64
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %15) #14
  %67 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %68 = load i32*, i32** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %68, %70
  br i1 %71, label %96, label %72

72:                                               ; preds = %66
  %73 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  %74 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %79 = bitcast i32** %77 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %81 = bitcast %"class.std::__1::unique_ptr.0"* %80 to i64*
  %82 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %78 to i32*
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  %92 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %163

96:                                               ; preds = %213, %66
  %97 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #14
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %98, align 8
  %99 = call i8* @_Znwm(i64 112) #13
  %100 = bitcast i8* %99 to %"class.spvtools::opt::Instruction"*
  %101 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %102 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %101, align 8
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %103, align 8
  %105 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %104) #14
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %96
  %108 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 2
  %109 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %109, i64 0, i32 2
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %119

113:                                              ; preds = %107
  %114 = call i8* @_Znwm(i64 48) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %114, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i64 37, i1 false) #14
  %115 = getelementptr inbounds i8, i8* %114, i64 37
  store i8 0, i8* %115, align 1
  %116 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 1, i32 0
  %117 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %102, i64 0, i32 5, i32 0, i32 0
  call void %117(%"union.std::__1::__function::__policy_storage"* %118, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.7, i8* nonnull %114) #14
  call void @_ZdlPv(i8* nonnull %114) #13
  br label %119

119:                                              ; preds = %96, %107, %113
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %100, %"class.spvtools::opt::IRContext"* %102, i32 81, i32 %1, i32 %105, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #14
  %120 = ptrtoint i8* %99 to i64
  %121 = bitcast %"class.std::__1::unique_ptr.21"* %10 to i64*
  store i64 %120, i64* %121, align 8
  %122 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %10)
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %98, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %98, align 8
  %124 = icmp eq %"class.spvtools::opt::Instruction"* %123, null
  br i1 %124, label %130, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.spvtools::opt::Instruction"* %123 to void (%"class.spvtools::opt::Instruction"*)***
  %127 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %127, i64 1
  %129 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, align 8
  call void %129(%"class.spvtools::opt::Instruction"* nonnull %123) #14
  br label %130

130:                                              ; preds = %119, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #14
  %131 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %132 = icmp eq %"struct.spvtools::opt::Operand"* %131, null
  br i1 %132, label %162, label %133

133:                                              ; preds = %130
  %134 = bitcast %"struct.spvtools::opt::Operand"* %131 to i8*
  %135 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %136 = icmp eq %"struct.spvtools::opt::Operand"* %135, %131
  br i1 %136, label %160, label %137

137:                                              ; preds = %133, %155
  %138 = phi %"struct.spvtools::opt::Operand"* [ %139, %155 ], [ %135, %133 ]
  %139 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1
  %140 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %140, align 8
  %141 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %138, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %142 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %141, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %141, align 8
  %143 = icmp eq %"class.std::__1::vector.3"* %142, null
  br i1 %143, label %155, label %144

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 0
  %146 = load i32*, i32** %145, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %144
  %149 = ptrtoint i32* %146 to i64
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %142, i64 0, i32 0, i32 1
  %151 = bitcast i32** %150 to i64*
  store i64 %149, i64* %151, align 8
  %152 = bitcast i32* %146 to i8*
  call void @_ZdlPv(i8* %152) #13
  br label %153

153:                                              ; preds = %148, %144
  %154 = bitcast %"class.std::__1::vector.3"* %142 to i8*
  call void @_ZdlPv(i8* %154) #13
  br label %155

155:                                              ; preds = %153, %137
  %156 = icmp eq %"struct.spvtools::opt::Operand"* %139, %131
  br i1 %156, label %157, label %137

157:                                              ; preds = %155
  %158 = bitcast %"class.std::__1::vector"* %5 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %133
  %161 = phi i8* [ %159, %157 ], [ %134, %133 ]
  store %"struct.spvtools::opt::Operand"* %131, %"struct.spvtools::opt::Operand"** %13, align 8
  call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %130, %160
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  ret %"class.spvtools::opt::Instruction"* %122

163:                                              ; preds = %72, %213
  %164 = phi i32* [ %68, %72 ], [ %214, %213 ]
  %165 = load i32, i32* %164, align 4
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #14
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %78, %"struct.std::__1::aligned_storage<4, 4>::type"** %79, align 8
  store i64 0, i64* %81, align 8
  store i64 1, i64* %76, align 8
  store i32 %165, i32* %82, align 8
  store i32 6, i32* %83, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  store i64 0, i64* %86, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  store i64 0, i64* %91, align 8
  %166 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %84, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #14
  %167 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %168 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %169 = icmp ult %"struct.spvtools::opt::Operand"* %167, %168
  br i1 %169, label %170, label %184

170:                                              ; preds = %163
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 0
  %172 = load i32, i32* %83, align 8
  store i32 %172, i32* %171, align 8
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1
  %174 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %173, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %174, align 8
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 1
  store i64 0, i64* %175, align 8
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 2
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 3, i64 0
  %178 = bitcast i32** %176 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %177, %"struct.std::__1::aligned_storage<4, 4>::type"** %178, align 8
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 0, i32 1, i32 4
  %180 = bitcast %"class.std::__1::unique_ptr.0"* %179 to i64*
  store i64 0, i64* %180, align 8
  %181 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %173, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %84) #14
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 1
  %183 = ptrtoint %"struct.spvtools::opt::Operand"* %182 to i64
  store i64 %183, i64* %92, align 8
  br label %185

184:                                              ; preds = %163
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #14
  br label %185

185:                                              ; preds = %170, %184
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %186 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %94, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %94, align 8
  %187 = icmp eq %"class.std::__1::vector.3"* %186, null
  br i1 %187, label %199, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 0
  %190 = load i32*, i32** %189, align 8
  %191 = icmp eq i32* %190, null
  br i1 %191, label %197, label %192

192:                                              ; preds = %188
  %193 = ptrtoint i32* %190 to i64
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %186, i64 0, i32 0, i32 1
  %195 = bitcast i32** %194 to i64*
  store i64 %193, i64* %195, align 8
  %196 = bitcast i32* %190 to i8*
  call void @_ZdlPv(i8* %196) #13
  br label %197

197:                                              ; preds = %192, %188
  %198 = bitcast %"class.std::__1::vector.3"* %186 to i8*
  call void @_ZdlPv(i8* %198) #13
  br label %199

199:                                              ; preds = %185, %197
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %200 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %95, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %95, align 8
  %201 = icmp eq %"class.std::__1::vector.3"* %200, null
  br i1 %201, label %213, label %202

202:                                              ; preds = %199
  %203 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 0
  %204 = load i32*, i32** %203, align 8
  %205 = icmp eq i32* %204, null
  br i1 %205, label %211, label %206

206:                                              ; preds = %202
  %207 = ptrtoint i32* %204 to i64
  %208 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %200, i64 0, i32 0, i32 1
  %209 = bitcast i32** %208 to i64*
  store i64 %207, i64* %209, align 8
  %210 = bitcast i32* %204 to i8*
  call void @_ZdlPv(i8* %210) #13
  br label %211

211:                                              ; preds = %206, %202
  %212 = bitcast %"class.std::__1::vector.3"* %200 to i8*
  call void @_ZdlPv(i8* %212) #13
  br label %213

213:                                              ; preds = %199, %211
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #14
  %214 = getelementptr inbounds i32, i32* %164, i64 1
  %215 = icmp eq i32* %214, %70
  br i1 %215, label %96, label %163
}

declare zeroext i1 @_ZN8spvtools3opt9IRContext18ReplaceAllUsesWithEjj(%"class.spvtools::opt::IRContext"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder8AddStoreEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #14
  %14 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #14
  %15 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %20 = bitcast i32** %18 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %19, %"struct.std::__1::aligned_storage<4, 4>::type"** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %22 = bitcast %"class.std::__1::unique_ptr.0"* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %19 to i32*
  store i64 1, i64* %17, align 8
  store i32 %1, i32* %23, align 8
  %24 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %25, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %25, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #14
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #14
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %34, align 8
  %36 = bitcast %"class.std::__1::vector.3"* %35 to i8*
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %39 = icmp eq %"class.std::__1::vector.3"* %35, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %35, i64 0, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = icmp eq i32* %42, null
  br i1 %43, label %49, label %44

44:                                               ; preds = %40
  %45 = ptrtoint i32* %42 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %35, i64 0, i32 0, i32 1
  %47 = bitcast i32** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast i32* %42 to i8*
  call void @_ZdlPv(i8* %48) #13
  br label %49

49:                                               ; preds = %44, %40
  call void @_ZdlPv(i8* %36) #13
  br label %50

50:                                               ; preds = %3, %49
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %51, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %51, align 8
  %53 = icmp eq %"class.std::__1::vector.3"* %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %52, i64 0, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = icmp eq i32* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %54
  %59 = ptrtoint i32* %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %52, i64 0, i32 0, i32 1
  %61 = bitcast i32** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = bitcast i32* %56 to i8*
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %58, %54
  %64 = bitcast %"class.std::__1::vector.3"* %52 to i8*
  call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %50, %63
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #14
  %66 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %66) #14
  %67 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %70 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %71 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %72 = bitcast i32** %70 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %71, %"struct.std::__1::aligned_storage<4, 4>::type"** %72, align 8
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %74 = bitcast %"class.std::__1::unique_ptr.0"* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %71 to i32*
  store i64 1, i64* %69, align 8
  store i32 %2, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  store i32 1, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %77, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %81 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %82 = bitcast i32** %80 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %81, %"struct.std::__1::aligned_storage<4, 4>::type"** %82, align 8
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %84 = bitcast %"class.std::__1::unique_ptr.0"* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %77, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #14
  %86 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %87 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %88 = icmp ult %"struct.spvtools::opt::Operand"* %86, %87
  br i1 %88, label %89, label %104

89:                                               ; preds = %65
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 0
  %91 = load i32, i32* %76, align 8
  store i32 %91, i32* %90, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %92, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1, i32 1
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1, i32 2
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1, i32 3, i64 0
  %97 = bitcast i32** %95 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %96, %"struct.std::__1::aligned_storage<4, 4>::type"** %97, align 8
  %98 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 0, i32 1, i32 4
  %99 = bitcast %"class.std::__1::unique_ptr.0"* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %77) #14
  %101 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %86, i64 1
  %102 = ptrtoint %"struct.spvtools::opt::Operand"* %101 to i64
  %103 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  store i64 %102, i64* %103, align 8
  br label %105

104:                                              ; preds = %65
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #14
  br label %105

105:                                              ; preds = %89, %104
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %105, %119
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %122, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %122, align 8
  %124 = icmp eq %"class.std::__1::vector.3"* %123, null
  br i1 %124, label %136, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 0, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = icmp eq i32* %127, null
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = ptrtoint i32* %127 to i64
  %131 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 0, i32 0, i32 1
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast i32* %127 to i8*
  call void @_ZdlPv(i8* %133) #13
  br label %134

134:                                              ; preds = %129, %125
  %135 = bitcast %"class.std::__1::vector.3"* %123 to i8*
  call void @_ZdlPv(i8* %135) #13
  br label %136

136:                                              ; preds = %121, %134
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %66) #14
  %137 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #14
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  %139 = call i8* @_Znwm(i64 112) #13
  %140 = bitcast i8* %139 to %"class.spvtools::opt::Instruction"*
  %141 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %142 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %141, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %140, %"class.spvtools::opt::IRContext"* %142, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #14
  %143 = ptrtoint i8* %139 to i64
  %144 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %143, i64* %144, align 8
  %145 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %138, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %138, align 8
  %147 = icmp eq %"class.spvtools::opt::Instruction"* %146, null
  br i1 %147, label %153, label %148

148:                                              ; preds = %136
  %149 = bitcast %"class.spvtools::opt::Instruction"* %146 to void (%"class.spvtools::opt::Instruction"*)***
  %150 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %150, i64 1
  %152 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %151, align 8
  call void %152(%"class.spvtools::opt::Instruction"* nonnull %146) #14
  br label %153

153:                                              ; preds = %136, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #14
  %154 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %155 = icmp eq %"struct.spvtools::opt::Operand"* %154, null
  br i1 %155, label %185, label %156

156:                                              ; preds = %153
  %157 = bitcast %"struct.spvtools::opt::Operand"* %154 to i8*
  %158 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %159 = icmp eq %"struct.spvtools::opt::Operand"* %158, %154
  br i1 %159, label %183, label %160

160:                                              ; preds = %156, %178
  %161 = phi %"struct.spvtools::opt::Operand"* [ %162, %178 ], [ %158, %156 ]
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %161, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %164, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %164, align 8
  %166 = icmp eq %"class.std::__1::vector.3"* %165, null
  br i1 %166, label %178, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint i32* %169 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast i32* %169 to i8*
  call void @_ZdlPv(i8* %175) #13
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.std::__1::vector.3"* %165 to i8*
  call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %176, %160
  %179 = icmp eq %"struct.spvtools::opt::Operand"* %162, %154
  br i1 %179, label %180, label %160

180:                                              ; preds = %178
  %181 = bitcast %"class.std::__1::vector"* %4 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %180, %156
  %184 = phi i8* [ %182, %180 ], [ %157, %156 ]
  store %"struct.spvtools::opt::Operand"* %154, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %153, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #14
  ret %"class.spvtools::opt::Instruction"* %145
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8spvtools3opt18UpgradeMemoryModel20MemoryAccessNumWordsEj(%"class.spvtools::opt::UpgradeMemoryModel"* nocapture readnone, i32) local_unnamed_addr #5 align 2 {
  %3 = and i32 %1, 2
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 1, i32 2
  %6 = lshr i32 %1, 3
  %7 = and i32 %6, 1
  %8 = lshr i32 %1, 4
  %9 = and i32 %8, 1
  %10 = add nuw nsw i32 %9, %7
  %11 = add nuw nsw i32 %10, %5
  ret i32 %11
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18UpgradeMemoryModelD2Ev(%"class.spvtools::opt::UpgradeMemoryModel"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt18UpgradeMemoryModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 4
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.915"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %22, %26
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void %32(i8* %36) #14
  br label %37

37:                                               ; preds = %28, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt18UpgradeMemoryModelD0Ev(%"class.spvtools::opt::UpgradeMemoryModel"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt18UpgradeMemoryModelE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %19 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 3
  %11 = bitcast %"struct.std::__1::__hash_node_base.915"* %10 to i32**
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 4
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  br label %19

19:                                               ; preds = %14, %6
  %20 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %21, label %22, label %6

22:                                               ; preds = %19, %1
  %23 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"** %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"struct.std::__1::__hash_node_base.915"** %24 to i8*
  tail call void @_ZdlPv(i8* %27) #13
  br label %28

28:                                               ; preds = %26, %22
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %30 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %30, i64 0, i32 1
  %32 = load void (i8*)*, void (i8*)** %31, align 8
  %33 = icmp eq void (i8*)* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void %32(i8* %36) #14
  br label %37

37:                                               ; preds = %28, %34
  %38 = bitcast %"class.spvtools::opt::UpgradeMemoryModel"* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt18UpgradeMemoryModel4nameEv(%"class.spvtools::opt::UpgradeMemoryModel"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt9IRContext27AddCombinatorsForCapabilityEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt14FeatureManager13AddCapabilityE14SpvCapability_(%"class.spvtools::opt::FeatureManager"*, i32) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #13
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #13
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  ret void
}

declare void @_ZN8spvtools3opt14FeatureManager12AddExtensionEPNS0_11InstructionE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #4

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #14
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #13
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1067"**
  %49 = load %"class.std::__1::__tree_node.1067"*, %"class.std::__1::__tree_node.1067"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1067"* %49) #14
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #13
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1067"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1067"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1067"* %1 to %"class.std::__1::__tree_node.1067"**
  %6 = load %"class.std::__1::__tree_node.1067"*, %"class.std::__1::__tree_node.1067"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1067"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1067", %"class.std::__1::__tree_node.1067"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1067"**
  %9 = load %"class.std::__1::__tree_node.1067"*, %"class.std::__1::__tree_node.1067"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1067"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.1067"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #13
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1076"**
  %34 = load %"class.std::__1::__tree_node.1076"*, %"class.std::__1::__tree_node.1076"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1076"* %34) #14
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1076"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1076"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1076"* %1 to %"class.std::__1::__tree_node.1076"**
  %6 = load %"class.std::__1::__tree_node.1076"*, %"class.std::__1::__tree_node.1076"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1076"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1076", %"class.std::__1::__tree_node.1076"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1076"**
  %9 = load %"class.std::__1::__tree_node.1076"*, %"class.std::__1::__tree_node.1076"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1076"* %9) #14
  %10 = bitcast %"class.std::__1::__tree_node.1076"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #13
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #13
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #14
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #14
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #13
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #13
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #13
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #13
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #13
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.982"**
  %4 = load %"class.std::__1::function.982"*, %"class.std::__1::function.982"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #14
  ret i1 true
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #13
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #13
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #13
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #14
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #14
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #13
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple.1133", align 8
  %3 = alloca %"class.std::__1::tuple.1136", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1120", align 8
  %6 = alloca %"class.std::__1::function.942", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #13
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !15

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.942"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.942"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1120"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.942"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1120"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple.1133"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple.1133", %"class.std::__1::tuple.1133"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1136", %"class.std::__1::tuple.1136"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #14
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #14
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #14
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #14
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1133"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1136"* nonnull dereferenceable(1) %3) #14
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #14
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #14
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #14
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #14
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #14
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #14
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.942"**
  %4 = load %"class.std::__1::function.942"*, %"class.std::__1::function.942"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #14
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1133", align 8
  %4 = alloca %"class.std::__1::tuple.1136", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple.1133"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.std::__1::tuple.1133", %"class.std::__1::tuple.1133"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1136", %"class.std::__1::tuple.1136"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #14
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1133"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1136"* nonnull dereferenceable(1) %4) #14
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1133"* dereferenceable(8), %"class.std::__1::tuple.1136"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #13, !noalias !17
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1133"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !17
  %75 = load i64, i64* %74, align 8, !noalias !17
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !17
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !17
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !17
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !17
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #14, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #14
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #14, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #14, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #2 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %50

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2)
  br label %329

9:                                                ; preds = %5
  %10 = bitcast i8* %1 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = mul i64 %11, -5435081209227447693
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 1
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -8
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = mul i64 %19, -7286425919675154353
  %21 = getelementptr inbounds i8, i8* %16, i64 -16
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 1
  %24 = mul i64 %23, -4348849565147123417
  %25 = sub i64 %12, %15
  %26 = lshr i64 %25, 43
  %27 = shl i64 %25, 21
  %28 = or i64 %27, %26
  %29 = lshr i64 %20, 30
  %30 = mul i64 %19, -4737503975807385600
  %31 = or i64 %29, %30
  %32 = add i64 %24, %28
  %33 = add i64 %32, %31
  %34 = xor i64 %15, -3942382747735136937
  %35 = lshr i64 %34, 20
  %36 = shl i64 %34, 44
  %37 = or i64 %36, %35
  %38 = add i64 %12, %2
  %39 = sub i64 %38, %20
  %40 = add i64 %39, %37
  %41 = xor i64 %33, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %329

50:                                               ; preds = %3
  %51 = icmp ult i64 %2, 65
  br i1 %51, label %52, label %132

52:                                               ; preds = %50
  %53 = getelementptr inbounds i8, i8* %1, i64 24
  %54 = bitcast i8* %53 to i64*
  %55 = load i64, i64* %54, align 1
  %56 = bitcast i8* %1 to i64*
  %57 = load i64, i64* %56, align 1
  %58 = getelementptr inbounds i8, i8* %1, i64 %2
  %59 = getelementptr inbounds i8, i8* %58, i64 -16
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 1
  %62 = add i64 %61, %2
  %63 = mul i64 %62, -4348849565147123417
  %64 = add i64 %63, %57
  %65 = add i64 %64, %55
  %66 = lshr i64 %65, 52
  %67 = shl i64 %65, 12
  %68 = or i64 %67, %66
  %69 = lshr i64 %64, 37
  %70 = shl i64 %64, 27
  %71 = or i64 %70, %69
  %72 = getelementptr inbounds i8, i8* %1, i64 8
  %73 = bitcast i8* %72 to i64*
  %74 = load i64, i64* %73, align 1
  %75 = add i64 %64, %74
  %76 = lshr i64 %75, 7
  %77 = shl i64 %75, 57
  %78 = or i64 %77, %76
  %79 = getelementptr inbounds i8, i8* %1, i64 16
  %80 = bitcast i8* %79 to i64*
  %81 = load i64, i64* %80, align 1
  %82 = add i64 %75, %81
  %83 = lshr i64 %82, 31
  %84 = shl i64 %82, 33
  %85 = or i64 %84, %83
  %86 = add i64 %78, %71
  %87 = add i64 %86, %68
  %88 = add i64 %87, %85
  %89 = getelementptr inbounds i8, i8* %58, i64 -32
  %90 = bitcast i8* %89 to i64*
  %91 = load i64, i64* %90, align 1
  %92 = add i64 %91, %81
  %93 = getelementptr inbounds i8, i8* %58, i64 -8
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 1
  %96 = add i64 %95, %55
  %97 = add i64 %96, %92
  %98 = lshr i64 %97, 52
  %99 = shl i64 %97, 12
  %100 = or i64 %99, %98
  %101 = lshr i64 %92, 37
  %102 = shl i64 %92, 27
  %103 = or i64 %102, %101
  %104 = getelementptr inbounds i8, i8* %58, i64 -24
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 1
  %107 = add i64 %106, %92
  %108 = lshr i64 %107, 7
  %109 = shl i64 %107, 57
  %110 = or i64 %109, %108
  %111 = add i64 %107, %61
  %112 = add i64 %111, %96
  %113 = lshr i64 %111, 31
  %114 = shl i64 %111, 33
  %115 = or i64 %114, %113
  %116 = add i64 %82, %55
  %117 = add i64 %116, %103
  %118 = add i64 %117, %110
  %119 = add i64 %118, %100
  %120 = add i64 %119, %115
  %121 = mul i64 %120, -7286425919675154353
  %122 = add i64 %112, %88
  %123 = mul i64 %122, -4348849565147123417
  %124 = add i64 %121, %123
  %125 = lshr i64 %124, 47
  %126 = xor i64 %125, %124
  %127 = mul i64 %126, -4348849565147123417
  %128 = add i64 %127, %88
  %129 = lshr i64 %128, 47
  %130 = xor i64 %129, %128
  %131 = mul i64 %130, -7286425919675154353
  br label %329

132:                                              ; preds = %50
  %133 = getelementptr inbounds i8, i8* %1, i64 %2
  %134 = getelementptr inbounds i8, i8* %133, i64 -40
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 1
  %137 = getelementptr inbounds i8, i8* %133, i64 -16
  %138 = bitcast i8* %137 to i64*
  %139 = load i64, i64* %138, align 1
  %140 = getelementptr inbounds i8, i8* %133, i64 -56
  %141 = bitcast i8* %140 to i64*
  %142 = load i64, i64* %141, align 1
  %143 = add i64 %142, %139
  %144 = getelementptr inbounds i8, i8* %133, i64 -48
  %145 = bitcast i8* %144 to i64*
  %146 = load i64, i64* %145, align 1
  %147 = add i64 %146, %2
  %148 = getelementptr inbounds i8, i8* %133, i64 -24
  %149 = bitcast i8* %148 to i64*
  %150 = load i64, i64* %149, align 1
  %151 = xor i64 %150, %147
  %152 = mul i64 %151, -7070675565921424023
  %153 = lshr i64 %152, 47
  %154 = xor i64 %152, %150
  %155 = xor i64 %154, %153
  %156 = mul i64 %155, -7070675565921424023
  %157 = lshr i64 %156, 47
  %158 = xor i64 %157, %156
  %159 = mul i64 %158, -7070675565921424023
  %160 = getelementptr inbounds i8, i8* %133, i64 -64
  %161 = bitcast i8* %160 to i64*
  %162 = load i64, i64* %161, align 1
  %163 = add i64 %162, %2
  %164 = add i64 %136, %163
  %165 = add i64 %164, %159
  %166 = lshr i64 %165, 21
  %167 = shl i64 %165, 43
  %168 = or i64 %167, %166
  %169 = add i64 %163, %142
  %170 = add i64 %169, %146
  %171 = lshr i64 %170, 44
  %172 = shl i64 %170, 20
  %173 = or i64 %172, %171
  %174 = add i64 %170, %136
  %175 = add i64 %173, %163
  %176 = add i64 %175, %168
  %177 = getelementptr inbounds i8, i8* %133, i64 -32
  %178 = add i64 %143, -5435081209227447693
  %179 = bitcast i8* %177 to i64*
  %180 = load i64, i64* %179, align 1
  %181 = getelementptr inbounds i8, i8* %177, i64 24
  %182 = bitcast i8* %181 to i64*
  %183 = load i64, i64* %182, align 1
  %184 = add i64 %178, %180
  %185 = add i64 %184, %136
  %186 = add i64 %185, %183
  %187 = lshr i64 %186, 21
  %188 = shl i64 %186, 43
  %189 = or i64 %188, %187
  %190 = add i64 %184, %150
  %191 = add i64 %190, %139
  %192 = lshr i64 %191, 44
  %193 = shl i64 %191, 20
  %194 = or i64 %193, %192
  %195 = add i64 %191, %183
  %196 = add i64 %194, %184
  %197 = add i64 %196, %189
  %198 = mul i64 %136, -5435081209227447693
  %199 = bitcast i8* %1 to i64*
  %200 = load i64, i64* %199, align 1
  %201 = add i64 %200, %198
  %202 = add i64 %2, -1
  %203 = and i64 %202, -64
  br label %204

204:                                              ; preds = %292, %132
  %205 = phi i64 [ %200, %132 ], [ %294, %292 ]
  %206 = phi i64 [ %197, %132 ], [ %288, %292 ]
  %207 = phi i64 [ %195, %132 ], [ %286, %292 ]
  %208 = phi i64 [ %174, %132 ], [ %264, %292 ]
  %209 = phi i64 [ %176, %132 ], [ %266, %292 ]
  %210 = phi i64 [ %159, %132 ], [ %234, %292 ]
  %211 = phi i64 [ %201, %132 ], [ %244, %292 ]
  %212 = phi i64 [ %203, %132 ], [ %290, %292 ]
  %213 = phi i8* [ %1, %132 ], [ %289, %292 ]
  %214 = phi i64 [ %143, %132 ], [ %239, %292 ]
  %215 = getelementptr inbounds i8, i8* %213, i64 8
  %216 = bitcast i8* %215 to i64*
  %217 = load i64, i64* %216, align 1
  %218 = add i64 %211, %208
  %219 = add i64 %218, %214
  %220 = add i64 %219, %217
  %221 = lshr i64 %220, 37
  %222 = shl i64 %220, 27
  %223 = or i64 %222, %221
  %224 = mul i64 %223, -5435081209227447693
  %225 = add i64 %214, %209
  %226 = getelementptr inbounds i8, i8* %213, i64 48
  %227 = bitcast i8* %226 to i64*
  %228 = load i64, i64* %227, align 1
  %229 = add i64 %225, %228
  %230 = lshr i64 %229, 42
  %231 = shl i64 %229, 22
  %232 = or i64 %231, %230
  %233 = mul i64 %232, -5435081209227447693
  %234 = xor i64 %224, %206
  %235 = getelementptr inbounds i8, i8* %213, i64 40
  %236 = bitcast i8* %235 to i64*
  %237 = load i64, i64* %236, align 1
  %238 = add i64 %237, %208
  %239 = add i64 %238, %233
  %240 = add i64 %210, %207
  %241 = lshr i64 %240, 33
  %242 = shl i64 %240, 31
  %243 = or i64 %242, %241
  %244 = mul i64 %243, -5435081209227447693
  %245 = mul i64 %209, -5435081209227447693
  %246 = getelementptr inbounds i8, i8* %213, i64 16
  %247 = bitcast i8* %246 to i64*
  %248 = load i64, i64* %247, align 1
  %249 = getelementptr inbounds i8, i8* %213, i64 24
  %250 = bitcast i8* %249 to i64*
  %251 = load i64, i64* %250, align 1
  %252 = add i64 %205, %245
  %253 = add i64 %252, %207
  %254 = add i64 %253, %251
  %255 = add i64 %254, %234
  %256 = lshr i64 %255, 21
  %257 = shl i64 %255, 43
  %258 = or i64 %257, %256
  %259 = add i64 %252, %217
  %260 = add i64 %259, %248
  %261 = lshr i64 %260, 44
  %262 = shl i64 %260, 20
  %263 = or i64 %262, %261
  %264 = add i64 %260, %251
  %265 = add i64 %263, %252
  %266 = add i64 %265, %258
  %267 = getelementptr inbounds i8, i8* %213, i64 32
  %268 = add i64 %244, %206
  %269 = add i64 %239, %248
  %270 = bitcast i8* %267 to i64*
  %271 = load i64, i64* %270, align 1
  %272 = getelementptr inbounds i8, i8* %213, i64 56
  %273 = bitcast i8* %272 to i64*
  %274 = load i64, i64* %273, align 1
  %275 = add i64 %268, %271
  %276 = add i64 %269, %275
  %277 = add i64 %276, %274
  %278 = lshr i64 %277, 21
  %279 = shl i64 %277, 43
  %280 = or i64 %279, %278
  %281 = add i64 %275, %237
  %282 = add i64 %281, %228
  %283 = lshr i64 %282, 44
  %284 = shl i64 %282, 20
  %285 = or i64 %284, %283
  %286 = add i64 %282, %274
  %287 = add i64 %285, %275
  %288 = add i64 %287, %280
  %289 = getelementptr inbounds i8, i8* %213, i64 64
  %290 = add i64 %212, -64
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %295, label %292

292:                                              ; preds = %204
  %293 = bitcast i8* %289 to i64*
  %294 = load i64, i64* %293, align 1
  br label %204

295:                                              ; preds = %204
  %296 = xor i64 %286, %264
  %297 = mul i64 %296, -7070675565921424023
  %298 = lshr i64 %297, 47
  %299 = xor i64 %297, %286
  %300 = xor i64 %299, %298
  %301 = mul i64 %300, -7070675565921424023
  %302 = lshr i64 %301, 47
  %303 = xor i64 %302, %301
  %304 = mul i64 %303, -7070675565921424023
  %305 = lshr i64 %239, 47
  %306 = xor i64 %305, %239
  %307 = mul i64 %306, -5435081209227447693
  %308 = add i64 %307, %234
  %309 = add i64 %308, %304
  %310 = xor i64 %288, %266
  %311 = mul i64 %310, -7070675565921424023
  %312 = lshr i64 %311, 47
  %313 = xor i64 %311, %288
  %314 = xor i64 %313, %312
  %315 = mul i64 %314, -7070675565921424023
  %316 = lshr i64 %315, 47
  %317 = xor i64 %316, %315
  %318 = mul i64 %317, -7070675565921424023
  %319 = add i64 %318, %244
  %320 = xor i64 %319, %309
  %321 = mul i64 %320, -7070675565921424023
  %322 = lshr i64 %321, 47
  %323 = xor i64 %321, %319
  %324 = xor i64 %323, %322
  %325 = mul i64 %324, -7070675565921424023
  %326 = lshr i64 %325, 47
  %327 = xor i64 %326, %325
  %328 = mul i64 %327, -7070675565921424023
  br label %329

329:                                              ; preds = %295, %52, %9, %7
  %330 = phi i64 [ %8, %7 ], [ %49, %9 ], [ %131, %52 ], [ %328, %295 ]
  ret i64 %330
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !20

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #11

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #11

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1133", align 8
  %4 = alloca %"class.std::__1::tuple.1136", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #14
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple.1133"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.std::__1::tuple.1133", %"class.std::__1::tuple.1133"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1136", %"class.std::__1::tuple.1136"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #14
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1133"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1136"* nonnull dereferenceable(1) %4) #14
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #14
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #14
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #4

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1059"*, %"class.std::__1::__tree_node.1147"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1147"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1147"* %1 to %"class.std::__1::__tree_node.1147"**
  %6 = load %"class.std::__1::__tree_node.1147"*, %"class.std::__1::__tree_node.1147"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1059"* %0, %"class.std::__1::__tree_node.1147"* %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1147", %"class.std::__1::__tree_node.1147"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1147"**
  %9 = load %"class.std::__1::__tree_node.1147"*, %"class.std::__1::__tree_node.1147"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjNS_6vectorINS2_IjNS_9allocatorIjEEEENS3_IS5_EEEEEENS_19__map_value_compareIjS8_NS_4lessIjEELb1EEENS3_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.1059"* %0, %"class.std::__1::__tree_node.1147"* %9) #14
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1147", %"class.std::__1::__tree_node.1147"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %11, align 8
  %13 = icmp eq %"class.std::__1::vector.3"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::vector.3"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.1147", %"class.std::__1::__tree_node.1147"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %17 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %16, align 8
  %18 = icmp eq %"class.std::__1::vector.3"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::vector.3"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %21, i64 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = ptrtoint i32* %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %20, i64 -1, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast i32* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %25, %19
  %31 = icmp eq %"class.std::__1::vector.3"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.463"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::vector.3"* %12, %"class.std::__1::vector.3"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #13
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.std::__1::__tree_node.1147"* %1 to i8*
  tail call void @_ZdlPv(i8* %38) #13
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #14
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #13
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #14
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #15
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #13
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #14
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #13
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #14
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #14
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #15
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #15
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #13
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #14
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel19UpgradeInstructionsEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"struct.spvtools::opt::Operand", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::UpgradeMemoryModel"**
  %10 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 12
  br i1 %13, label %14, label %110

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = select i1 %20, i32 1, i32 2
  %22 = xor i1 %20, true
  %23 = zext i1 %22 to i32
  %24 = select i1 %17, i32 %23, i32 %21
  %25 = add nuw nsw i32 %24, 1
  %26 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %25) #14
  %27 = or i32 %26, 16
  %28 = icmp eq i32 %27, 51
  br i1 %28, label %29, label %388

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %10, i64 0, i32 0, i32 2
  %31 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %60

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %37, align 8
  %39 = tail call i8* @_Znwm(i64 104) #13
  %40 = bitcast i8* %39 to %"class.spvtools::opt::analysis::DefUseManager"*
  %41 = getelementptr inbounds i8, i8* %39, i64 32
  %42 = bitcast i8* %41 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %42, align 4
  %43 = getelementptr inbounds i8, i8* %39, i64 48
  %44 = getelementptr inbounds i8, i8* %39, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #14
  %45 = bitcast i8* %44 to i8**
  store i8* %43, i8** %45, align 8
  %46 = getelementptr inbounds i8, i8* %39, i64 64
  %47 = getelementptr inbounds i8, i8* %39, i64 96
  %48 = bitcast i8* %47 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %48, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %40, %"class.spvtools::opt::Module"* %38) #14
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6
  %50 = ptrtoint i8* %39 to i64
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.62"* %49 to i64*
  store i64 %50, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %36
  %56 = bitcast %"class.std::__1::unique_ptr.62"* %49 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %56, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %52) #14
  br label %57

57:                                               ; preds = %55, %36
  %58 = load i32, i32* %32, align 8
  %59 = or i32 %58, 1
  store i32 %59, i32* %32, align 8
  br label %60

60:                                               ; preds = %57, %29
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %61, align 8
  %63 = load i8, i8* %15, align 4, !range !2
  %64 = icmp eq i8 %63, 0
  %65 = load i8, i8* %18, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  %67 = select i1 %66, i32 1, i32 2
  %68 = xor i1 %66, true
  %69 = zext i1 %68 to i32
  %70 = select i1 %64, i32 %69, i32 %67
  %71 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %70) #14
  %72 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %62, i32 %71) #14
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 4
  %77 = load i8, i8* %76, align 1, !range !2
  %78 = icmp eq i8 %77, 0
  %79 = select i1 %78, i64 1, i64 2
  %80 = xor i1 %78, true
  %81 = zext i1 %80 to i64
  %82 = select i1 %75, i64 %81, i64 %79
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 6, i32 0, i32 0
  %84 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %83, align 8
  %85 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 %82, i32 1, i32 4, i32 0, i32 0, i32 0
  %86 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %85, align 8
  %87 = icmp eq %"class.std::__1::vector.3"* %86, null
  %88 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %86, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 %82, i32 1, i32 2
  %90 = select i1 %87, i32** %89, i32** %88
  %91 = bitcast i32** %90 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #14
  %94 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  store i8 12, i8* %95, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i64 12, i1 false) #14
  %96 = getelementptr inbounds i8, i8* %93, i64 12
  store i8 0, i8* %96, align 4
  %97 = tail call i64 @strlen(i8* %92) #14
  %98 = icmp eq i64 %97, 12
  br i1 %98, label %100, label %99

99:                                               ; preds = %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  br label %388

100:                                              ; preds = %60
  %101 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %3, i64 0, i64 -1, i8* %92, i64 12) #14
  %102 = icmp eq i32 %101, 0
  %103 = load i8, i8* %95, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  br i1 %102, label %109, label %388

108:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #14
  br i1 %102, label %109, label %388

109:                                              ; preds = %108, %105
  call void @_ZN8spvtools3opt18UpgradeMemoryModel14UpgradeExtInstEPNS0_11InstructionE(%"class.spvtools::opt::UpgradeMemoryModel"* %10, %"class.spvtools::opt::Instruction"* %1) #14
  br label %388

110:                                              ; preds = %2
  %111 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %10, i64 0, i32 0, i32 2
  %112 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %112, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %114, i64 0, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp ugt i32 %116, 66559
  %118 = add i32 %12, -63
  %119 = icmp ult i32 %118, 2
  %120 = and i1 %119, %117
  br i1 %120, label %121, label %388

121:                                              ; preds = %110
  %122 = icmp eq i32 %12, 63
  %123 = select i1 %122, i32 2, i32 3
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %126 = bitcast %"struct.spvtools::opt::Operand"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.std::__1::vector"* %124 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = sdiv exact i64 %130, 48
  %132 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %133 = load i8, i8* %132, align 4, !range !2
  %134 = icmp eq i8 %133, 0
  %135 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %136 = load i8, i8* %135, align 1, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = select i1 %137, i32 1, i32 2
  %139 = xor i1 %137, true
  %140 = zext i1 %139 to i32
  %141 = select i1 %134, i32 %140, i32 %138
  %142 = trunc i64 %131 to i32
  %143 = sub i32 %142, %141
  %144 = icmp ugt i32 %143, %123
  br i1 %144, label %145, label %246

145:                                              ; preds = %121
  %146 = add nuw nsw i32 %141, %123
  %147 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %146) #14
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = select i1 %149, i32 1, i32 2
  %151 = lshr i32 %147, 3
  %152 = and i32 %151, 1
  %153 = lshr i32 %147, 4
  %154 = and i32 %153, 1
  %155 = add nuw nsw i32 %154, %152
  %156 = add nuw nsw i32 %155, %150
  %157 = add nuw nsw i32 %156, %123
  %158 = load i64, i64* %126, align 8
  %159 = load i64, i64* %128, align 8
  %160 = sub i64 %158, %159
  %161 = sdiv exact i64 %160, 48
  %162 = load i8, i8* %132, align 4, !range !2
  %163 = icmp eq i8 %162, 0
  %164 = load i8, i8* %135, align 1, !range !2
  %165 = icmp eq i8 %164, 0
  %166 = select i1 %165, i32 1, i32 2
  %167 = xor i1 %165, true
  %168 = zext i1 %167 to i32
  %169 = select i1 %163, i32 %168, i32 %166
  %170 = trunc i64 %161 to i32
  %171 = sub i32 %170, %169
  %172 = icmp eq i32 %157, %171
  br i1 %172, label %173, label %388

173:                                              ; preds = %145
  %174 = inttoptr i64 %159 to %"struct.spvtools::opt::Operand"*
  %175 = bitcast %"struct.spvtools::opt::Operand"* %4 to i8*
  %176 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1
  %179 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %178, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 1
  %181 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 2
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 3, i64 0
  %183 = bitcast i32** %181 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4
  %185 = bitcast %"class.std::__1::unique_ptr.0"* %184 to i64*
  %186 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 0
  %188 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %4, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  br label %189

189:                                              ; preds = %242, %173
  %190 = phi %"struct.spvtools::opt::Operand"* [ %174, %173 ], [ %245, %242 ]
  %191 = phi i8 [ %164, %173 ], [ %244, %242 ]
  %192 = phi i8 [ %162, %173 ], [ %243, %242 ]
  %193 = phi i32 [ 0, %173 ], [ %240, %242 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %175) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 48, i1 false) #14
  %194 = add nuw nsw i32 %193, %123
  %195 = icmp eq i8 %192, 0
  %196 = icmp eq i8 %191, 0
  %197 = select i1 %196, i32 1, i32 2
  %198 = xor i1 %196, true
  %199 = zext i1 %198 to i32
  %200 = select i1 %195, i32 %199, i32 %197
  %201 = add nuw i32 %194, %200
  %202 = zext i32 %201 to i64
  %203 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 %202, i32 0
  %204 = load i32, i32* %203, align 8
  store i32 %204, i32* %177, align 8
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %190, i64 %202, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %179, align 8
  store i64 0, i64* %180, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %182, %"struct.std::__1::aligned_storage<4, 4>::type"** %183, align 8
  store i64 0, i64* %185, align 8
  %206 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %178, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #14
  %207 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %125, align 8
  %208 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %186, align 8
  %209 = icmp ult %"struct.spvtools::opt::Operand"* %207, %208
  br i1 %209, label %210, label %224

210:                                              ; preds = %189
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 0
  %212 = load i32, i32* %177, align 8
  store i32 %212, i32* %211, align 8
  %213 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 1
  %214 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %213, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %214, align 8
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 1, i32 1
  store i64 0, i64* %215, align 8
  %216 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 1, i32 2
  %217 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 1, i32 3, i64 0
  %218 = bitcast i32** %216 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %217, %"struct.std::__1::aligned_storage<4, 4>::type"** %218, align 8
  %219 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 0, i32 1, i32 4
  %220 = bitcast %"class.std::__1::unique_ptr.0"* %219 to i64*
  store i64 0, i64* %220, align 8
  %221 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %213, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %178) #14
  %222 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %207, i64 1
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %222 to i64
  store i64 %223, i64* %126, align 8
  br label %225

224:                                              ; preds = %189
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %124, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %4) #14
  br label %225

225:                                              ; preds = %224, %210
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %226 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %188, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %188, align 8
  %227 = icmp eq %"class.std::__1::vector.3"* %226, null
  br i1 %227, label %239, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 0
  %230 = load i32*, i32** %229, align 8
  %231 = icmp eq i32* %230, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %228
  %233 = ptrtoint i32* %230 to i64
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %226, i64 0, i32 0, i32 1
  %235 = bitcast i32** %234 to i64*
  store i64 %233, i64* %235, align 8
  %236 = bitcast i32* %230 to i8*
  call void @_ZdlPv(i8* %236) #13
  br label %237

237:                                              ; preds = %232, %228
  %238 = bitcast %"class.std::__1::vector.3"* %226 to i8*
  call void @_ZdlPv(i8* %238) #13
  br label %239

239:                                              ; preds = %237, %225
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %175) #14
  %240 = add nuw nsw i32 %193, 1
  %241 = icmp ult i32 %240, %156
  br i1 %241, label %242, label %388

242:                                              ; preds = %239
  %243 = load i8, i8* %132, align 4, !range !2
  %244 = load i8, i8* %135, align 1, !range !2
  %245 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %176, align 8
  br label %189

246:                                              ; preds = %121
  %247 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %247) #14
  %248 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %248) #14
  %249 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  %250 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %251 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %252 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %253 = bitcast i32** %251 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %252, %"struct.std::__1::aligned_storage<4, 4>::type"** %253, align 8
  %254 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %255 = bitcast %"class.std::__1::unique_ptr.0"* %254 to i64*
  store i64 0, i64* %255, align 8
  %256 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %252 to i32*
  store i64 1, i64* %250, align 8
  store i32 0, i32* %256, align 8
  %257 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 42, i32* %257, align 8
  %258 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %259 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %258, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %259, align 8
  %260 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %260, align 8
  %261 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %262 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %263 = bitcast i32** %261 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %262, %"struct.std::__1::aligned_storage<4, 4>::type"** %263, align 8
  %264 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %265 = bitcast %"class.std::__1::unique_ptr.0"* %264 to i64*
  store i64 0, i64* %265, align 8
  %266 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %258, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #14
  %267 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %125, align 8
  %268 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %269 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %268, align 8
  %270 = icmp ult %"struct.spvtools::opt::Operand"* %267, %269
  br i1 %270, label %271, label %285

271:                                              ; preds = %246
  %272 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 0
  %273 = load i32, i32* %257, align 8
  store i32 %273, i32* %272, align 8
  %274 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1
  %275 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %274, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %275, align 8
  %276 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1, i32 1
  store i64 0, i64* %276, align 8
  %277 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1, i32 2
  %278 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1, i32 3, i64 0
  %279 = bitcast i32** %277 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %278, %"struct.std::__1::aligned_storage<4, 4>::type"** %279, align 8
  %280 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 0, i32 1, i32 4
  %281 = bitcast %"class.std::__1::unique_ptr.0"* %280 to i64*
  store i64 0, i64* %281, align 8
  %282 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %274, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %258) #14
  %283 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %267, i64 1
  %284 = ptrtoint %"struct.spvtools::opt::Operand"* %283 to i64
  store i64 %284, i64* %126, align 8
  br label %286

285:                                              ; preds = %246
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %124, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #14
  br label %286

286:                                              ; preds = %285, %271
  %287 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %287, align 8
  %288 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %289 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %288, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %288, align 8
  %290 = icmp eq %"class.std::__1::vector.3"* %289, null
  br i1 %290, label %302, label %291

291:                                              ; preds = %286
  %292 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %289, i64 0, i32 0, i32 0
  %293 = load i32*, i32** %292, align 8
  %294 = icmp eq i32* %293, null
  br i1 %294, label %300, label %295

295:                                              ; preds = %291
  %296 = ptrtoint i32* %293 to i64
  %297 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %289, i64 0, i32 0, i32 1
  %298 = bitcast i32** %297 to i64*
  store i64 %296, i64* %298, align 8
  %299 = bitcast i32* %293 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %295, %291
  %301 = bitcast %"class.std::__1::vector.3"* %289 to i8*
  call void @_ZdlPv(i8* %301) #13
  br label %302

302:                                              ; preds = %300, %286
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  %303 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %304 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %303, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %303, align 8
  %305 = icmp eq %"class.std::__1::vector.3"* %304, null
  br i1 %305, label %317, label %306

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %306
  %311 = ptrtoint i32* %308 to i64
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 1
  %313 = bitcast i32** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = bitcast i32* %308 to i8*
  call void @_ZdlPv(i8* %314) #13
  br label %315

315:                                              ; preds = %310, %306
  %316 = bitcast %"class.std::__1::vector.3"* %304 to i8*
  call void @_ZdlPv(i8* %316) #13
  br label %317

317:                                              ; preds = %315, %302
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %248) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %247) #14
  %318 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %318) #14
  %319 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %319) #14
  %320 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %320, align 8
  %321 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %322 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %323 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %324 = bitcast i32** %322 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %323, %"struct.std::__1::aligned_storage<4, 4>::type"** %324, align 8
  %325 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %326 = bitcast %"class.std::__1::unique_ptr.0"* %325 to i64*
  store i64 0, i64* %326, align 8
  %327 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %323 to i32*
  store i64 1, i64* %321, align 8
  store i32 0, i32* %327, align 8
  %328 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  store i32 42, i32* %328, align 8
  %329 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %330 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %329, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %330, align 8
  %331 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  store i64 0, i64* %331, align 8
  %332 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %334 = bitcast i32** %332 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %333, %"struct.std::__1::aligned_storage<4, 4>::type"** %334, align 8
  %335 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %336 = bitcast %"class.std::__1::unique_ptr.0"* %335 to i64*
  store i64 0, i64* %336, align 8
  %337 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %329, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #14
  %338 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %125, align 8
  %339 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %268, align 8
  %340 = icmp ult %"struct.spvtools::opt::Operand"* %338, %339
  br i1 %340, label %341, label %355

341:                                              ; preds = %317
  %342 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 0
  %343 = load i32, i32* %328, align 8
  store i32 %343, i32* %342, align 8
  %344 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 1
  %345 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %344, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %345, align 8
  %346 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 1, i32 1
  store i64 0, i64* %346, align 8
  %347 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 1, i32 2
  %348 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 1, i32 3, i64 0
  %349 = bitcast i32** %347 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %348, %"struct.std::__1::aligned_storage<4, 4>::type"** %349, align 8
  %350 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 0, i32 1, i32 4
  %351 = bitcast %"class.std::__1::unique_ptr.0"* %350 to i64*
  store i64 0, i64* %351, align 8
  %352 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %344, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %329) #14
  %353 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %338, i64 1
  %354 = ptrtoint %"struct.spvtools::opt::Operand"* %353 to i64
  store i64 %354, i64* %126, align 8
  br label %356

355:                                              ; preds = %317
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %124, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #14
  br label %356

356:                                              ; preds = %355, %341
  %357 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %357, align 8
  %358 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %359 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %358, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %358, align 8
  %360 = icmp eq %"class.std::__1::vector.3"* %359, null
  br i1 %360, label %372, label %361

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %359, i64 0, i32 0, i32 0
  %363 = load i32*, i32** %362, align 8
  %364 = icmp eq i32* %363, null
  br i1 %364, label %370, label %365

365:                                              ; preds = %361
  %366 = ptrtoint i32* %363 to i64
  %367 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %359, i64 0, i32 0, i32 1
  %368 = bitcast i32** %367 to i64*
  store i64 %366, i64* %368, align 8
  %369 = bitcast i32* %363 to i8*
  call void @_ZdlPv(i8* %369) #13
  br label %370

370:                                              ; preds = %365, %361
  %371 = bitcast %"class.std::__1::vector.3"* %359 to i8*
  call void @_ZdlPv(i8* %371) #13
  br label %372

372:                                              ; preds = %370, %356
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %320, align 8
  %373 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %374 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %373, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %373, align 8
  %375 = icmp eq %"class.std::__1::vector.3"* %374, null
  br i1 %375, label %387, label %376

376:                                              ; preds = %372
  %377 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %374, i64 0, i32 0, i32 0
  %378 = load i32*, i32** %377, align 8
  %379 = icmp eq i32* %378, null
  br i1 %379, label %385, label %380

380:                                              ; preds = %376
  %381 = ptrtoint i32* %378 to i64
  %382 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %374, i64 0, i32 0, i32 1
  %383 = bitcast i32** %382 to i64*
  store i64 %381, i64* %383, align 8
  %384 = bitcast i32* %378 to i8*
  call void @_ZdlPv(i8* %384) #13
  br label %385

385:                                              ; preds = %380, %376
  %386 = bitcast %"class.std::__1::vector.3"* %374 to i8*
  call void @_ZdlPv(i8* %386) #13
  br label %387

387:                                              ; preds = %385, %372
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %319) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %318) #14
  br label %388

388:                                              ; preds = %239, %14, %99, %105, %108, %109, %110, %145, %387
  ret void
}

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel22UpgradeMemoryAndImagesEvE3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::Operand", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"struct.spvtools::opt::Operand", align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"struct.spvtools::opt::Operand", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"struct.spvtools::opt::Operand", align 8
  %13 = alloca %"class.spvtools::utils::SmallVector", align 8
  %14 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::UpgradeMemoryModel"**
  %15 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %17 = load i32, i32* %16, align 8
  switch i32 %17, label %88 [
    i32 61, label %18
    i32 62, label %18
    i32 98, label %36
    i32 320, label %36
    i32 99, label %36
    i32 63, label %54
    i32 64, label %54
  ]

18:                                               ; preds = %2, %2
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i32 1, i32 2
  %26 = xor i1 %24, true
  %27 = zext i1 %26 to i32
  %28 = select i1 %21, i32 %27, i32 %25
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %28) #14
  %30 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %29) #14
  %31 = trunc i64 %30 to i8
  %32 = lshr i64 %30, 8
  %33 = trunc i64 %32 to i8
  %34 = lshr i64 %30, 32
  %35 = trunc i64 %34 to i32
  br label %88

36:                                               ; preds = %2, %2, %2
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %41 = load i8, i8* %40, align 1, !range !2
  %42 = icmp eq i8 %41, 0
  %43 = select i1 %42, i32 1, i32 2
  %44 = xor i1 %42, true
  %45 = zext i1 %44 to i32
  %46 = select i1 %39, i32 %45, i32 %43
  %47 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %46) #14
  %48 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %47) #14
  %49 = trunc i64 %48 to i8
  %50 = lshr i64 %48, 8
  %51 = trunc i64 %50 to i8
  %52 = lshr i64 %48, 32
  %53 = trunc i64 %52 to i32
  br label %88

54:                                               ; preds = %2, %2
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %56 = load i8, i8* %55, align 4, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = xor i1 %60, true
  %63 = zext i1 %62 to i32
  %64 = select i1 %57, i32 %63, i32 %61
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %64) #14
  %66 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %65) #14
  %67 = trunc i64 %66 to i8
  %68 = lshr i64 %66, 8
  %69 = trunc i64 %68 to i8
  %70 = lshr i64 %66, 32
  %71 = trunc i64 %70 to i32
  %72 = load i8, i8* %55, align 4, !range !2
  %73 = icmp eq i8 %72, 0
  %74 = load i8, i8* %58, align 1, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = select i1 %75, i32 1, i32 2
  %77 = xor i1 %75, true
  %78 = zext i1 %77 to i32
  %79 = select i1 %73, i32 %78, i32 %76
  %80 = add nuw nsw i32 %79, 1
  %81 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %80) #14
  %82 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %81) #14
  %83 = trunc i64 %82 to i8
  %84 = lshr i64 %82, 8
  %85 = trunc i64 %84 to i8
  %86 = lshr i64 %82, 32
  %87 = trunc i64 %86 to i32
  br label %88

88:                                               ; preds = %54, %36, %18, %2
  %89 = phi i8 [ 0, %2 ], [ %83, %54 ], [ 0, %36 ], [ 0, %18 ]
  %90 = phi i8 [ 0, %2 ], [ %85, %54 ], [ 0, %36 ], [ 0, %18 ]
  %91 = phi i32 [ 5, %2 ], [ %87, %54 ], [ 5, %36 ], [ 5, %18 ]
  %92 = phi i8 [ 0, %2 ], [ %67, %54 ], [ 0, %36 ], [ 0, %18 ]
  %93 = phi i8 [ 0, %2 ], [ %69, %54 ], [ 0, %36 ], [ 0, %18 ]
  %94 = phi i32 [ 5, %2 ], [ %71, %54 ], [ 5, %36 ], [ 5, %18 ]
  %95 = phi i8 [ 0, %2 ], [ 0, %54 ], [ %49, %36 ], [ %31, %18 ]
  %96 = phi i8 [ 0, %2 ], [ 0, %54 ], [ %51, %36 ], [ %33, %18 ]
  %97 = phi i32 [ 5, %2 ], [ 5, %54 ], [ %53, %36 ], [ %35, %18 ]
  %98 = load i32, i32* %16, align 8
  switch i32 %98, label %153 [
    i32 61, label %99
    i32 62, label %102
    i32 63, label %105
    i32 64, label %105
    i32 98, label %147
    i32 320, label %147
    i32 99, label %150
  ]

99:                                               ; preds = %88
  %100 = icmp ne i8 %95, 0
  %101 = icmp ne i8 %96, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 1, i1 zeroext %100, i1 zeroext %101, i32 0, i32 0) #14
  br label %153

102:                                              ; preds = %88
  %103 = icmp ne i8 %95, 0
  %104 = icmp ne i8 %96, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 2, i1 zeroext %103, i1 zeroext %104, i32 1, i32 0) #14
  br label %153

105:                                              ; preds = %88, %88
  %106 = icmp eq i32 %98, 63
  %107 = select i1 %106, i32 2, i32 3
  %108 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %15, i64 0, i32 0, i32 2
  %109 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %108, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %109, i64 0, i32 4, i32 0, i32 0, i32 0
  %111 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %110, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %111, i64 0, i32 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp ugt i32 %113, 66559
  br i1 %114, label %115, label %142

115:                                              ; preds = %105
  %116 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %117 = load i8, i8* %116, align 4, !range !2
  %118 = icmp eq i8 %117, 0
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  %122 = select i1 %121, i32 1, i32 2
  %123 = xor i1 %121, true
  %124 = zext i1 %123 to i32
  %125 = select i1 %118, i32 %124, i32 %122
  %126 = add nuw nsw i32 %125, %107
  %127 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %126) #14
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = select i1 %129, i32 1, i32 2
  %131 = lshr i32 %127, 3
  %132 = and i32 %131, 1
  %133 = lshr i32 %127, 4
  %134 = and i32 %133, 1
  %135 = icmp ne i8 %92, 0
  %136 = icmp ne i8 %93, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 %107, i1 zeroext %135, i1 zeroext %136, i32 1, i32 0) #14
  %137 = add nuw nsw i32 %132, %107
  %138 = add nuw nsw i32 %137, %134
  %139 = add nuw nsw i32 %138, %130
  %140 = icmp ne i8 %89, 0
  %141 = icmp ne i8 %90, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 %139, i1 zeroext %140, i1 zeroext %141, i32 0, i32 0) #14
  br label %153

142:                                              ; preds = %105
  %143 = icmp ne i8 %92, 0
  %144 = icmp ne i8 %93, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 %107, i1 zeroext %143, i1 zeroext %144, i32 1, i32 0) #14
  %145 = icmp ne i8 %89, 0
  %146 = icmp ne i8 %90, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 %107, i1 zeroext %145, i1 zeroext %146, i32 0, i32 0) #14
  br label %153

147:                                              ; preds = %88, %88
  %148 = icmp ne i8 %95, 0
  %149 = icmp ne i8 %96, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 2, i1 zeroext %148, i1 zeroext %149, i32 0, i32 1) #14
  br label %153

150:                                              ; preds = %88
  %151 = icmp ne i8 %95, 0
  %152 = icmp ne i8 %96, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel12UpgradeFlagsEPNS0_11InstructionEjbbNS1_13OperationTypeENS1_15InstructionTypeE(%"class.spvtools::opt::UpgradeMemoryModel"* undef, %"class.spvtools::opt::Instruction"* %1, i32 3, i1 zeroext %151, i1 zeroext %152, i32 1, i32 1) #14
  br label %153

153:                                              ; preds = %150, %147, %142, %115, %102, %99, %88
  %154 = icmp eq i8 %95, 0
  br i1 %154, label %231, label %155

155:                                              ; preds = %153
  %156 = bitcast %"struct.spvtools::opt::Operand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %156) #14
  %157 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %157) #14
  %158 = tail call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %97) #14
  %159 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %162 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %163 = bitcast i32** %161 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %162, %"struct.std::__1::aligned_storage<4, 4>::type"** %163, align 8
  %164 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %165 = bitcast %"class.std::__1::unique_ptr.0"* %164 to i64*
  store i64 0, i64* %165, align 8
  %166 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %162 to i32*
  store i64 1, i64* %160, align 8
  store i32 %158, i32* %166, align 8
  %167 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 0
  store i32 5, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1
  %169 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %168, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 1
  store i64 0, i64* %170, align 8
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 2
  %172 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 3, i64 0
  %173 = bitcast i32** %171 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %172, %"struct.std::__1::aligned_storage<4, 4>::type"** %173, align 8
  %174 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4
  %175 = bitcast %"class.std::__1::unique_ptr.0"* %174 to i64*
  store i64 0, i64* %175, align 8
  %176 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %168, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #14
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %178 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %177, align 8
  %179 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %180 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %179, align 8
  %181 = icmp ult %"struct.spvtools::opt::Operand"* %178, %180
  br i1 %181, label %182, label %197

182:                                              ; preds = %155
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %184 = load i32, i32* %167, align 8
  store i32 %184, i32* %183, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1
  %186 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %185, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 1
  store i64 0, i64* %187, align 8
  %188 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 2
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 3, i64 0
  %190 = bitcast i32** %188 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %189, %"struct.std::__1::aligned_storage<4, 4>::type"** %190, align 8
  %191 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 1, i32 4
  %192 = bitcast %"class.std::__1::unique_ptr.0"* %191 to i64*
  store i64 0, i64* %192, align 8
  %193 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %185, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %168) #14
  %194 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 1
  %195 = ptrtoint %"struct.spvtools::opt::Operand"* %194 to i64
  %196 = bitcast %"struct.spvtools::opt::Operand"** %177 to i64*
  store i64 %195, i64* %196, align 8
  br label %199

197:                                              ; preds = %155
  %198 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %198, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %3) #14
  br label %199

199:                                              ; preds = %197, %182
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %202 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %201, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %201, align 8
  %203 = icmp eq %"class.std::__1::vector.3"* %202, null
  br i1 %203, label %215, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = icmp eq i32* %206, null
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = ptrtoint i32* %206 to i64
  %210 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %202, i64 0, i32 0, i32 1
  %211 = bitcast i32** %210 to i64*
  store i64 %209, i64* %211, align 8
  %212 = bitcast i32* %206 to i8*
  call void @_ZdlPv(i8* %212) #13
  br label %213

213:                                              ; preds = %208, %204
  %214 = bitcast %"class.std::__1::vector.3"* %202 to i8*
  call void @_ZdlPv(i8* %214) #13
  br label %215

215:                                              ; preds = %213, %199
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %159, align 8
  %216 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %217 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %216, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %216, align 8
  %218 = icmp eq %"class.std::__1::vector.3"* %217, null
  br i1 %218, label %230, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %217, i64 0, i32 0, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = icmp eq i32* %221, null
  br i1 %222, label %228, label %223

223:                                              ; preds = %219
  %224 = ptrtoint i32* %221 to i64
  %225 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %217, i64 0, i32 0, i32 1
  %226 = bitcast i32** %225 to i64*
  store i64 %224, i64* %226, align 8
  %227 = bitcast i32* %221 to i8*
  call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %223, %219
  %229 = bitcast %"class.std::__1::vector.3"* %217 to i8*
  call void @_ZdlPv(i8* %229) #13
  br label %230

230:                                              ; preds = %228, %215
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %157) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %156) #14
  br label %231

231:                                              ; preds = %230, %153
  %232 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %15, i64 0, i32 0, i32 2
  %233 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %232, align 8
  %234 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %233, i64 0, i32 4, i32 0, i32 0, i32 0
  %235 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %234, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %235, i64 0, i32 0, i32 1
  %237 = load i32, i32* %236, align 4
  %238 = icmp ugt i32 %237, 66559
  %239 = icmp ne i8 %92, 0
  br i1 %238, label %240, label %589

240:                                              ; preds = %231
  %241 = xor i1 %239, true
  %242 = icmp eq i8 %89, 0
  %243 = and i1 %242, %241
  br i1 %243, label %744, label %244

244:                                              ; preds = %240
  %245 = load i32, i32* %16, align 8
  %246 = icmp eq i32 %245, 63
  %247 = select i1 %246, i32 2, i32 3
  %248 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %248) #14
  %249 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %250 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 0, i64 24, i1 false) #14
  %251 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %252 = load i8, i8* %251, align 4, !range !2
  %253 = icmp eq i8 %252, 0
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  %257 = select i1 %256, i32 1, i32 2
  %258 = xor i1 %256, true
  %259 = zext i1 %258 to i32
  %260 = select i1 %253, i32 %259, i32 %257
  %261 = add nuw nsw i32 %260, %247
  %262 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %261) #14
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = select i1 %264, i32 1, i32 2
  %266 = lshr i32 %262, 3
  %267 = and i32 %266, 1
  %268 = lshr i32 %262, 4
  %269 = and i32 %268, 1
  %270 = icmp eq i8 %92, 0
  %271 = xor i1 %270, true
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %273 = bitcast %"struct.spvtools::opt::Operand"** %249 to i64*
  %274 = zext i1 %271 to i32
  %275 = sub nuw nsw i32 %247, %274
  %276 = add nuw nsw i32 %275, %267
  %277 = add nuw nsw i32 %276, %269
  %278 = add nuw nsw i32 %277, %265
  br label %281

279:                                              ; preds = %315
  %280 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  br i1 %270, label %390, label %318

281:                                              ; preds = %315, %244
  %282 = phi i32 [ 0, %244 ], [ %316, %315 ]
  %283 = load i8, i8* %251, align 4, !range !2
  %284 = icmp eq i8 %283, 0
  %285 = load i8, i8* %254, align 1, !range !2
  %286 = icmp eq i8 %285, 0
  %287 = select i1 %286, i32 1, i32 2
  %288 = xor i1 %286, true
  %289 = zext i1 %288 to i32
  %290 = select i1 %284, i32 %289, i32 %287
  %291 = add nuw i32 %290, %282
  %292 = zext i32 %291 to i64
  %293 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %272, align 8
  %294 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %293, i64 %292
  %295 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %296 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %250, align 8
  %297 = icmp eq %"struct.spvtools::opt::Operand"* %295, %296
  br i1 %297, label %314, label %298

298:                                              ; preds = %281
  %299 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 0
  %300 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %294, i64 0, i32 0
  %301 = load i32, i32* %300, align 8
  store i32 %301, i32* %299, align 8
  %302 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 1
  %303 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %293, i64 %292, i32 1
  %304 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %302, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 1, i32 1
  store i64 0, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 1, i32 2
  %307 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 1, i32 3, i64 0
  %308 = bitcast i32** %306 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %307, %"struct.std::__1::aligned_storage<4, 4>::type"** %308, align 8
  %309 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 0, i32 1, i32 4
  %310 = bitcast %"class.std::__1::unique_ptr.0"* %309 to i64*
  store i64 0, i64* %310, align 8
  %311 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %302, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %303) #14
  %312 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %295, i64 1
  %313 = ptrtoint %"struct.spvtools::opt::Operand"* %312 to i64
  store i64 %313, i64* %273, align 8
  br label %315

314:                                              ; preds = %281
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %294) #14
  br label %315

315:                                              ; preds = %314, %298
  %316 = add nuw nsw i32 %282, 1
  %317 = icmp eq i32 %316, %278
  br i1 %317, label %279, label %281

318:                                              ; preds = %279
  %319 = bitcast %"struct.spvtools::opt::Operand"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %319) #14
  %320 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %320) #14
  %321 = call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %94) #14
  %322 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %322, align 8
  %323 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %324 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %325 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %326 = bitcast i32** %324 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %325, %"struct.std::__1::aligned_storage<4, 4>::type"** %326, align 8
  %327 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %328 = bitcast %"class.std::__1::unique_ptr.0"* %327 to i64*
  store i64 0, i64* %328, align 8
  %329 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %325 to i32*
  store i64 1, i64* %323, align 8
  store i32 %321, i32* %329, align 8
  %330 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 0
  store i32 5, i32* %330, align 8
  %331 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1
  %332 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %331, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %332, align 8
  %333 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 1
  store i64 0, i64* %333, align 8
  %334 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 2
  %335 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 3, i64 0
  %336 = bitcast i32** %334 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %335, %"struct.std::__1::aligned_storage<4, 4>::type"** %336, align 8
  %337 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4
  %338 = bitcast %"class.std::__1::unique_ptr.0"* %337 to i64*
  store i64 0, i64* %338, align 8
  %339 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %331, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #14
  %340 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %341 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %250, align 8
  %342 = icmp ult %"struct.spvtools::opt::Operand"* %340, %341
  br i1 %342, label %343, label %357

343:                                              ; preds = %318
  %344 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 0
  %345 = load i32, i32* %330, align 8
  store i32 %345, i32* %344, align 8
  %346 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 1
  %347 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %346, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %347, align 8
  %348 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 1, i32 1
  store i64 0, i64* %348, align 8
  %349 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 1, i32 2
  %350 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 1, i32 3, i64 0
  %351 = bitcast i32** %349 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %350, %"struct.std::__1::aligned_storage<4, 4>::type"** %351, align 8
  %352 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 0, i32 1, i32 4
  %353 = bitcast %"class.std::__1::unique_ptr.0"* %352 to i64*
  store i64 0, i64* %353, align 8
  %354 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %346, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %331) #14
  %355 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %340, i64 1
  %356 = ptrtoint %"struct.spvtools::opt::Operand"* %355 to i64
  store i64 %356, i64* %273, align 8
  br label %358

357:                                              ; preds = %318
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %6) #14
  br label %358

358:                                              ; preds = %357, %343
  %359 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %359, align 8
  %360 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %6, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %361 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %360, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %360, align 8
  %362 = icmp eq %"class.std::__1::vector.3"* %361, null
  br i1 %362, label %374, label %363

363:                                              ; preds = %358
  %364 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 0
  %365 = load i32*, i32** %364, align 8
  %366 = icmp eq i32* %365, null
  br i1 %366, label %372, label %367

367:                                              ; preds = %363
  %368 = ptrtoint i32* %365 to i64
  %369 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %361, i64 0, i32 0, i32 1
  %370 = bitcast i32** %369 to i64*
  store i64 %368, i64* %370, align 8
  %371 = bitcast i32* %365 to i8*
  call void @_ZdlPv(i8* %371) #13
  br label %372

372:                                              ; preds = %367, %363
  %373 = bitcast %"class.std::__1::vector.3"* %361 to i8*
  call void @_ZdlPv(i8* %373) #13
  br label %374

374:                                              ; preds = %372, %358
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %322, align 8
  %375 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %376 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %375, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %375, align 8
  %377 = icmp eq %"class.std::__1::vector.3"* %376, null
  br i1 %377, label %389, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %376, i64 0, i32 0, i32 0
  %380 = load i32*, i32** %379, align 8
  %381 = icmp eq i32* %380, null
  br i1 %381, label %387, label %382

382:                                              ; preds = %378
  %383 = ptrtoint i32* %380 to i64
  %384 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %376, i64 0, i32 0, i32 1
  %385 = bitcast i32** %384 to i64*
  store i64 %383, i64* %385, align 8
  %386 = bitcast i32* %380 to i8*
  call void @_ZdlPv(i8* %386) #13
  br label %387

387:                                              ; preds = %382, %378
  %388 = bitcast %"class.std::__1::vector.3"* %376 to i8*
  call void @_ZdlPv(i8* %388) #13
  br label %389

389:                                              ; preds = %387, %374
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %320) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %319) #14
  br label %390

390:                                              ; preds = %389, %279
  %391 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %392 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %393 = bitcast %"struct.spvtools::opt::Operand"** %392 to i64*
  %394 = bitcast %"class.std::__1::vector"* %391 to i64*
  br label %395

395:                                              ; preds = %440, %390
  %396 = phi i32 [ %278, %390 ], [ %441, %440 ]
  %397 = load i64, i64* %393, align 8
  %398 = load i64, i64* %394, align 8
  %399 = sub i64 %397, %398
  %400 = sdiv exact i64 %399, 48
  %401 = load i8, i8* %251, align 4, !range !2
  %402 = icmp eq i8 %401, 0
  %403 = load i8, i8* %254, align 1, !range !2
  %404 = icmp eq i8 %403, 0
  %405 = select i1 %404, i32 1, i32 2
  %406 = xor i1 %404, true
  %407 = zext i1 %406 to i32
  %408 = select i1 %402, i32 %407, i32 %405
  %409 = trunc i64 %400 to i32
  %410 = sub i32 %409, %408
  %411 = icmp ult i32 %396, %410
  %412 = inttoptr i64 %398 to %"struct.spvtools::opt::Operand"*
  br i1 %411, label %416, label %413

413:                                              ; preds = %395
  %414 = inttoptr i64 %398 to %"struct.spvtools::opt::Operand"*
  %415 = inttoptr i64 %397 to %"struct.spvtools::opt::Operand"*
  br i1 %242, label %519, label %442

416:                                              ; preds = %395
  %417 = add i32 %408, %396
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %412, i64 %418
  %420 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %421 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %250, align 8
  %422 = icmp eq %"struct.spvtools::opt::Operand"* %420, %421
  br i1 %422, label %439, label %423

423:                                              ; preds = %416
  %424 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 0
  %425 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %419, i64 0, i32 0
  %426 = load i32, i32* %425, align 8
  store i32 %426, i32* %424, align 8
  %427 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 1
  %428 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %412, i64 %418, i32 1
  %429 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %427, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %429, align 8
  %430 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 1, i32 1
  store i64 0, i64* %430, align 8
  %431 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 1, i32 2
  %432 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 1, i32 3, i64 0
  %433 = bitcast i32** %431 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %432, %"struct.std::__1::aligned_storage<4, 4>::type"** %433, align 8
  %434 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 0, i32 1, i32 4
  %435 = bitcast %"class.std::__1::unique_ptr.0"* %434 to i64*
  store i64 0, i64* %435, align 8
  %436 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %427, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %428) #14
  %437 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %420, i64 1
  %438 = ptrtoint %"struct.spvtools::opt::Operand"* %437 to i64
  store i64 %438, i64* %273, align 8
  br label %440

439:                                              ; preds = %416
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* dereferenceable(48) %419) #14
  br label %440

440:                                              ; preds = %439, %423
  %441 = add nuw i32 %396, 1
  br label %395

442:                                              ; preds = %413
  %443 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %443) #14
  %444 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %444) #14
  %445 = call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %91) #14
  %446 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %446, align 8
  %447 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %448 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %449 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %450 = bitcast i32** %448 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %449, %"struct.std::__1::aligned_storage<4, 4>::type"** %450, align 8
  %451 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %452 = bitcast %"class.std::__1::unique_ptr.0"* %451 to i64*
  store i64 0, i64* %452, align 8
  %453 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %449 to i32*
  store i64 1, i64* %447, align 8
  store i32 %445, i32* %453, align 8
  %454 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  store i32 5, i32* %454, align 8
  %455 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %456 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %455, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %456, align 8
  %457 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  store i64 0, i64* %457, align 8
  %458 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %459 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %460 = bitcast i32** %458 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %459, %"struct.std::__1::aligned_storage<4, 4>::type"** %460, align 8
  %461 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %462 = bitcast %"class.std::__1::unique_ptr.0"* %461 to i64*
  store i64 0, i64* %462, align 8
  %463 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %455, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #14
  %464 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %465 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %250, align 8
  %466 = icmp ult %"struct.spvtools::opt::Operand"* %464, %465
  br i1 %466, label %467, label %481

467:                                              ; preds = %442
  %468 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 0
  %469 = load i32, i32* %454, align 8
  store i32 %469, i32* %468, align 8
  %470 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 1
  %471 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %470, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %471, align 8
  %472 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 1, i32 1
  store i64 0, i64* %472, align 8
  %473 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 1, i32 2
  %474 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 1, i32 3, i64 0
  %475 = bitcast i32** %473 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %474, %"struct.std::__1::aligned_storage<4, 4>::type"** %475, align 8
  %476 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 0, i32 1, i32 4
  %477 = bitcast %"class.std::__1::unique_ptr.0"* %476 to i64*
  store i64 0, i64* %477, align 8
  %478 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %470, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %455) #14
  %479 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %464, i64 1
  %480 = ptrtoint %"struct.spvtools::opt::Operand"* %479 to i64
  store i64 %480, i64* %273, align 8
  br label %482

481:                                              ; preds = %442
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %5, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #14
  br label %482

482:                                              ; preds = %481, %467
  %483 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %483, align 8
  %484 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %485 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %484, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %484, align 8
  %486 = icmp eq %"class.std::__1::vector.3"* %485, null
  br i1 %486, label %498, label %487

487:                                              ; preds = %482
  %488 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %485, i64 0, i32 0, i32 0
  %489 = load i32*, i32** %488, align 8
  %490 = icmp eq i32* %489, null
  br i1 %490, label %496, label %491

491:                                              ; preds = %487
  %492 = ptrtoint i32* %489 to i64
  %493 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %485, i64 0, i32 0, i32 1
  %494 = bitcast i32** %493 to i64*
  store i64 %492, i64* %494, align 8
  %495 = bitcast i32* %489 to i8*
  call void @_ZdlPv(i8* %495) #13
  br label %496

496:                                              ; preds = %491, %487
  %497 = bitcast %"class.std::__1::vector.3"* %485 to i8*
  call void @_ZdlPv(i8* %497) #13
  br label %498

498:                                              ; preds = %496, %482
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %446, align 8
  %499 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %500 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %499, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %499, align 8
  %501 = icmp eq %"class.std::__1::vector.3"* %500, null
  br i1 %501, label %513, label %502

502:                                              ; preds = %498
  %503 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %500, i64 0, i32 0, i32 0
  %504 = load i32*, i32** %503, align 8
  %505 = icmp eq i32* %504, null
  br i1 %505, label %511, label %506

506:                                              ; preds = %502
  %507 = ptrtoint i32* %504 to i64
  %508 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %500, i64 0, i32 0, i32 1
  %509 = bitcast i32** %508 to i64*
  store i64 %507, i64* %509, align 8
  %510 = bitcast i32* %504 to i8*
  call void @_ZdlPv(i8* %510) #13
  br label %511

511:                                              ; preds = %506, %502
  %512 = bitcast %"class.std::__1::vector.3"* %500 to i8*
  call void @_ZdlPv(i8* %512) #13
  br label %513

513:                                              ; preds = %511, %498
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %444) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %443) #14
  %514 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %391, i64 0, i32 0, i32 0
  %515 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %514, align 8
  %516 = load i8, i8* %251, align 4, !range !2
  %517 = load i8, i8* %254, align 1, !range !2
  %518 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %392, align 8
  br label %519

519:                                              ; preds = %513, %413
  %520 = phi %"struct.spvtools::opt::Operand"* [ %415, %413 ], [ %518, %513 ]
  %521 = phi i8 [ %403, %413 ], [ %517, %513 ]
  %522 = phi i8 [ %401, %413 ], [ %516, %513 ]
  %523 = phi %"struct.spvtools::opt::Operand"* [ %414, %413 ], [ %515, %513 ]
  %524 = icmp eq i8 %522, 0
  %525 = icmp eq i8 %521, 0
  %526 = select i1 %525, i64 1, i64 2
  %527 = xor i1 %525, true
  %528 = zext i1 %527 to i64
  %529 = select i1 %524, i64 %528, i64 %526
  %530 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %523, i64 %529
  %531 = icmp eq %"struct.spvtools::opt::Operand"* %530, %520
  br i1 %531, label %553, label %532

532:                                              ; preds = %519, %550
  %533 = phi %"struct.spvtools::opt::Operand"* [ %534, %550 ], [ %520, %519 ]
  %534 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %533, i64 -1
  %535 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %533, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %535, align 8
  %536 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %533, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %537 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %536, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %536, align 8
  %538 = icmp eq %"class.std::__1::vector.3"* %537, null
  br i1 %538, label %550, label %539

539:                                              ; preds = %532
  %540 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %537, i64 0, i32 0, i32 0
  %541 = load i32*, i32** %540, align 8
  %542 = icmp eq i32* %541, null
  br i1 %542, label %548, label %543

543:                                              ; preds = %539
  %544 = ptrtoint i32* %541 to i64
  %545 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %537, i64 0, i32 0, i32 1
  %546 = bitcast i32** %545 to i64*
  store i64 %544, i64* %546, align 8
  %547 = bitcast i32* %541 to i8*
  call void @_ZdlPv(i8* %547) #13
  br label %548

548:                                              ; preds = %543, %539
  %549 = bitcast %"class.std::__1::vector.3"* %537 to i8*
  call void @_ZdlPv(i8* %549) #13
  br label %550

550:                                              ; preds = %548, %532
  %551 = icmp eq %"struct.spvtools::opt::Operand"* %534, %530
  br i1 %551, label %552, label %532

552:                                              ; preds = %550
  store %"struct.spvtools::opt::Operand"* %530, %"struct.spvtools::opt::Operand"** %392, align 8
  br label %553

553:                                              ; preds = %552, %519
  %554 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %280, align 8
  %555 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %556 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %391, %"struct.spvtools::opt::Operand"* %530, %"struct.spvtools::opt::Operand"* %554, %"struct.spvtools::opt::Operand"* %555) #14
  %557 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %280, align 8
  %558 = icmp eq %"struct.spvtools::opt::Operand"* %557, null
  br i1 %558, label %588, label %559

559:                                              ; preds = %553
  %560 = bitcast %"struct.spvtools::opt::Operand"* %557 to i8*
  %561 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %249, align 8
  %562 = icmp eq %"struct.spvtools::opt::Operand"* %561, %557
  br i1 %562, label %586, label %563

563:                                              ; preds = %559, %581
  %564 = phi %"struct.spvtools::opt::Operand"* [ %565, %581 ], [ %561, %559 ]
  %565 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %564, i64 -1
  %566 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %564, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8
  %567 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %564, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %568 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %567, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %567, align 8
  %569 = icmp eq %"class.std::__1::vector.3"* %568, null
  br i1 %569, label %581, label %570

570:                                              ; preds = %563
  %571 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %568, i64 0, i32 0, i32 0
  %572 = load i32*, i32** %571, align 8
  %573 = icmp eq i32* %572, null
  br i1 %573, label %579, label %574

574:                                              ; preds = %570
  %575 = ptrtoint i32* %572 to i64
  %576 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %568, i64 0, i32 0, i32 1
  %577 = bitcast i32** %576 to i64*
  store i64 %575, i64* %577, align 8
  %578 = bitcast i32* %572 to i8*
  call void @_ZdlPv(i8* %578) #13
  br label %579

579:                                              ; preds = %574, %570
  %580 = bitcast %"class.std::__1::vector.3"* %568 to i8*
  call void @_ZdlPv(i8* %580) #13
  br label %581

581:                                              ; preds = %579, %563
  %582 = icmp eq %"struct.spvtools::opt::Operand"* %565, %557
  br i1 %582, label %583, label %563

583:                                              ; preds = %581
  %584 = bitcast %"class.std::__1::vector"* %5 to i8**
  %585 = load i8*, i8** %584, align 8
  br label %586

586:                                              ; preds = %583, %559
  %587 = phi i8* [ %585, %583 ], [ %560, %559 ]
  store %"struct.spvtools::opt::Operand"* %557, %"struct.spvtools::opt::Operand"** %249, align 8
  call void @_ZdlPv(i8* %587) #13
  br label %588

588:                                              ; preds = %586, %553
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %248) #14
  br label %744

589:                                              ; preds = %231
  br i1 %239, label %590, label %666

590:                                              ; preds = %589
  %591 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %591) #14
  %592 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %592) #14
  %593 = call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %94) #14
  %594 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %594, align 8
  %595 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %596 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %597 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %598 = bitcast i32** %596 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %597, %"struct.std::__1::aligned_storage<4, 4>::type"** %598, align 8
  %599 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %600 = bitcast %"class.std::__1::unique_ptr.0"* %599 to i64*
  store i64 0, i64* %600, align 8
  %601 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %597 to i32*
  store i64 1, i64* %595, align 8
  store i32 %593, i32* %601, align 8
  %602 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 0
  store i32 5, i32* %602, align 8
  %603 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1
  %604 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %603, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %604, align 8
  %605 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 1
  store i64 0, i64* %605, align 8
  %606 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 2
  %607 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 3, i64 0
  %608 = bitcast i32** %606 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %607, %"struct.std::__1::aligned_storage<4, 4>::type"** %608, align 8
  %609 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4
  %610 = bitcast %"class.std::__1::unique_ptr.0"* %609 to i64*
  store i64 0, i64* %610, align 8
  %611 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %603, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #14
  %612 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %613 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %612, align 8
  %614 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %615 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %614, align 8
  %616 = icmp ult %"struct.spvtools::opt::Operand"* %613, %615
  br i1 %616, label %617, label %632

617:                                              ; preds = %590
  %618 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 0
  %619 = load i32, i32* %602, align 8
  store i32 %619, i32* %618, align 8
  %620 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 1
  %621 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %620, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %621, align 8
  %622 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 1, i32 1
  store i64 0, i64* %622, align 8
  %623 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 1, i32 2
  %624 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 1, i32 3, i64 0
  %625 = bitcast i32** %623 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %624, %"struct.std::__1::aligned_storage<4, 4>::type"** %625, align 8
  %626 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 0, i32 1, i32 4
  %627 = bitcast %"class.std::__1::unique_ptr.0"* %626 to i64*
  store i64 0, i64* %627, align 8
  %628 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %620, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %603) #14
  %629 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %613, i64 1
  %630 = ptrtoint %"struct.spvtools::opt::Operand"* %629 to i64
  %631 = bitcast %"struct.spvtools::opt::Operand"** %612 to i64*
  store i64 %630, i64* %631, align 8
  br label %634

632:                                              ; preds = %590
  %633 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %633, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %10) #14
  br label %634

634:                                              ; preds = %632, %617
  %635 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %635, align 8
  %636 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %637 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %636, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %636, align 8
  %638 = icmp eq %"class.std::__1::vector.3"* %637, null
  br i1 %638, label %650, label %639

639:                                              ; preds = %634
  %640 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %637, i64 0, i32 0, i32 0
  %641 = load i32*, i32** %640, align 8
  %642 = icmp eq i32* %641, null
  br i1 %642, label %648, label %643

643:                                              ; preds = %639
  %644 = ptrtoint i32* %641 to i64
  %645 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %637, i64 0, i32 0, i32 1
  %646 = bitcast i32** %645 to i64*
  store i64 %644, i64* %646, align 8
  %647 = bitcast i32* %641 to i8*
  call void @_ZdlPv(i8* %647) #13
  br label %648

648:                                              ; preds = %643, %639
  %649 = bitcast %"class.std::__1::vector.3"* %637 to i8*
  call void @_ZdlPv(i8* %649) #13
  br label %650

650:                                              ; preds = %648, %634
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %594, align 8
  %651 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %652 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %651, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %651, align 8
  %653 = icmp eq %"class.std::__1::vector.3"* %652, null
  br i1 %653, label %665, label %654

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %652, i64 0, i32 0, i32 0
  %656 = load i32*, i32** %655, align 8
  %657 = icmp eq i32* %656, null
  br i1 %657, label %663, label %658

658:                                              ; preds = %654
  %659 = ptrtoint i32* %656 to i64
  %660 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %652, i64 0, i32 0, i32 1
  %661 = bitcast i32** %660 to i64*
  store i64 %659, i64* %661, align 8
  %662 = bitcast i32* %656 to i8*
  call void @_ZdlPv(i8* %662) #13
  br label %663

663:                                              ; preds = %658, %654
  %664 = bitcast %"class.std::__1::vector.3"* %652 to i8*
  call void @_ZdlPv(i8* %664) #13
  br label %665

665:                                              ; preds = %663, %650
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %592) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %591) #14
  br label %666

666:                                              ; preds = %665, %589
  %667 = icmp eq i8 %89, 0
  br i1 %667, label %744, label %668

668:                                              ; preds = %666
  %669 = bitcast %"struct.spvtools::opt::Operand"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %669) #14
  %670 = bitcast %"class.spvtools::utils::SmallVector"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %670) #14
  %671 = call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %15, i32 %91) #14
  %672 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %672, align 8
  %673 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 1
  %674 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 2
  %675 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 3, i64 0
  %676 = bitcast i32** %674 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %675, %"struct.std::__1::aligned_storage<4, 4>::type"** %676, align 8
  %677 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4
  %678 = bitcast %"class.std::__1::unique_ptr.0"* %677 to i64*
  store i64 0, i64* %678, align 8
  %679 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %675 to i32*
  store i64 1, i64* %673, align 8
  store i32 %671, i32* %679, align 8
  %680 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 0
  store i32 5, i32* %680, align 8
  %681 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1
  %682 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %681, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %682, align 8
  %683 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 1
  store i64 0, i64* %683, align 8
  %684 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 2
  %685 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 3, i64 0
  %686 = bitcast i32** %684 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %685, %"struct.std::__1::aligned_storage<4, 4>::type"** %686, align 8
  %687 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4
  %688 = bitcast %"class.std::__1::unique_ptr.0"* %687 to i64*
  store i64 0, i64* %688, align 8
  %689 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %681, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %13) #14
  %690 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %691 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %690, align 8
  %692 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %693 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %692, align 8
  %694 = icmp ult %"struct.spvtools::opt::Operand"* %691, %693
  br i1 %694, label %695, label %710

695:                                              ; preds = %668
  %696 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 0
  %697 = load i32, i32* %680, align 8
  store i32 %697, i32* %696, align 8
  %698 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 1
  %699 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %698, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %699, align 8
  %700 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 1, i32 1
  store i64 0, i64* %700, align 8
  %701 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 1, i32 2
  %702 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 1, i32 3, i64 0
  %703 = bitcast i32** %701 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %702, %"struct.std::__1::aligned_storage<4, 4>::type"** %703, align 8
  %704 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 0, i32 1, i32 4
  %705 = bitcast %"class.std::__1::unique_ptr.0"* %704 to i64*
  store i64 0, i64* %705, align 8
  %706 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %698, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %681) #14
  %707 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %691, i64 1
  %708 = ptrtoint %"struct.spvtools::opt::Operand"* %707 to i64
  %709 = bitcast %"struct.spvtools::opt::Operand"** %690 to i64*
  store i64 %708, i64* %709, align 8
  br label %712

710:                                              ; preds = %668
  %711 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %711, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %12) #14
  br label %712

712:                                              ; preds = %710, %695
  %713 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %713, align 8
  %714 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %715 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %714, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %714, align 8
  %716 = icmp eq %"class.std::__1::vector.3"* %715, null
  br i1 %716, label %728, label %717

717:                                              ; preds = %712
  %718 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %715, i64 0, i32 0, i32 0
  %719 = load i32*, i32** %718, align 8
  %720 = icmp eq i32* %719, null
  br i1 %720, label %726, label %721

721:                                              ; preds = %717
  %722 = ptrtoint i32* %719 to i64
  %723 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %715, i64 0, i32 0, i32 1
  %724 = bitcast i32** %723 to i64*
  store i64 %722, i64* %724, align 8
  %725 = bitcast i32* %719 to i8*
  call void @_ZdlPv(i8* %725) #13
  br label %726

726:                                              ; preds = %721, %717
  %727 = bitcast %"class.std::__1::vector.3"* %715 to i8*
  call void @_ZdlPv(i8* %727) #13
  br label %728

728:                                              ; preds = %726, %712
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %672, align 8
  %729 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %730 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %729, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %729, align 8
  %731 = icmp eq %"class.std::__1::vector.3"* %730, null
  br i1 %731, label %743, label %732

732:                                              ; preds = %728
  %733 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %730, i64 0, i32 0, i32 0
  %734 = load i32*, i32** %733, align 8
  %735 = icmp eq i32* %734, null
  br i1 %735, label %741, label %736

736:                                              ; preds = %732
  %737 = ptrtoint i32* %734 to i64
  %738 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %730, i64 0, i32 0, i32 1
  %739 = bitcast i32** %738 to i64*
  store i64 %737, i64* %739, align 8
  %740 = bitcast i32* %734 to i8*
  call void @_ZdlPv(i8* %740) #13
  br label %741

741:                                              ; preds = %736, %732
  %742 = bitcast %"class.std::__1::vector.3"* %730 to i8*
  call void @_ZdlPv(i8* %742) #13
  br label %743

743:                                              ; preds = %741, %728
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %670) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %669) #14
  br label %744

744:                                              ; preds = %240, %588, %666, %743
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #14
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #14
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #13
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #14
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #14
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #14
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #14
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #15
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #13
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #14
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #14
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #14
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #13
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #13
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #13
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel14UpgradeAtomicsEvE3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::UpgradeMemoryModel"**
  %4 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = tail call zeroext i1 @_Z19spvOpcodeIsAtomicOp6SpvOp_(i32 %6) #14
  br i1 %7, label %8, label %28

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i32 1, i32 2
  %16 = xor i1 %14, true
  %17 = zext i1 %16 to i32
  %18 = select i1 %11, i32 %17, i32 %15
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %18) #14
  %20 = tail call i64 @_ZN8spvtools3opt18UpgradeMemoryModel24GetInstructionAttributesEj(%"class.spvtools::opt::UpgradeMemoryModel"* %4, i32 %19) #14
  %21 = lshr i64 %20, 8
  %22 = trunc i64 %21 to i8
  %23 = icmp ne i8 %22, 0
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel16UpgradeSemanticsEPNS0_11InstructionEjb(%"class.spvtools::opt::UpgradeMemoryModel"* %4, %"class.spvtools::opt::Instruction"* %1, i32 2, i1 zeroext %23) #14
  %24 = load i32, i32* %5, align 8
  %25 = and i32 %24, -2
  %26 = icmp eq i32 %25, 230
  br i1 %26, label %27, label %28

27:                                               ; preds = %8
  tail call void @_ZN8spvtools3opt18UpgradeMemoryModel16UpgradeSemanticsEPNS0_11InstructionEjb(%"class.spvtools::opt::UpgradeMemoryModel"* %4, %"class.spvtools::opt::Instruction"* %1, i32 3, i1 zeroext %23) #14
  br label %28

28:                                               ; preds = %2, %8, %27
  ret void
}

declare zeroext i1 @_Z19spvOpcodeIsAtomicOp6SpvOp_(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.915"* @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE4findIS7_EENS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEERKT_(%"class.std::__1::__hash_table.911"*, %"struct.std::__1::pair.978"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::__compressed_pair.927"* %3 to %"struct.spvtools::opt::CacheHash"*
  %5 = tail call i64 @_ZNK8spvtools3opt9CacheHashclERKNSt3__14pairIjNS2_6vectorIjNS2_9allocatorIjEEEEEE(%"struct.spvtools::opt::CacheHash"* %4, %"struct.std::__1::pair.978"* dereferenceable(32) %1) #14
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %90, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ult i64 %5, %7
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %90, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.915"* %28, null
  br i1 %29, label %90, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  %32 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1, i32 0, i32 1
  %36 = bitcast i32** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector.3"* %34 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = inttoptr i64 %39 to i32*
  br label %42

42:                                               ; preds = %30, %86
  %43 = phi %"struct.std::__1::__hash_node_base.915"* [ %28, %30 ], [ %88, %86 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 1
  %45 = bitcast %"struct.std::__1::__hash_node_base.915"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, %5
  br i1 %47, label %58, label %48

48:                                               ; preds = %42
  br i1 %11, label %51, label %49

49:                                               ; preds = %48
  %50 = and i64 %46, %31
  br label %55

51:                                               ; preds = %48
  %52 = icmp ult i64 %46, %7
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %46, %7
  br label %55

55:                                               ; preds = %49, %51, %53
  %56 = phi i64 [ %50, %49 ], [ %54, %53 ], [ %46, %51 ]
  %57 = icmp eq i64 %56, %20
  br i1 %57, label %86, label %90

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.915"* %59 to i32*
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, %33
  br i1 %62, label %63, label %86

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 3
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 4
  %66 = bitcast %"struct.std::__1::__hash_node_base.915"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"struct.std::__1::__hash_node_base.915"* %64 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %67, %69
  %71 = icmp eq i64 %70, %40
  %72 = inttoptr i64 %69 to i32*
  %73 = inttoptr i64 %67 to i32*
  br i1 %71, label %74, label %86

74:                                               ; preds = %63
  %75 = icmp eq i32* %72, %73
  br i1 %75, label %90, label %76

76:                                               ; preds = %74, %82
  %77 = phi i32* [ %84, %82 ], [ %41, %74 ]
  %78 = phi i32* [ %83, %82 ], [ %72, %74 ]
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* %77, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = getelementptr inbounds i32, i32* %78, i64 1
  %84 = getelementptr inbounds i32, i32* %77, i64 1
  %85 = icmp eq i32* %83, %73
  br i1 %85, label %90, label %76

86:                                               ; preds = %76, %63, %58, %55
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %43, i64 0, i32 0
  %88 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %87, align 8
  %89 = icmp eq %"struct.std::__1::__hash_node_base.915"* %88, null
  br i1 %89, label %90, label %42

90:                                               ; preds = %74, %86, %55, %82, %26, %2, %19
  %91 = phi %"struct.std::__1::__hash_node_base.915"* [ null, %19 ], [ null, %2 ], [ null, %26 ], [ %43, %82 ], [ %43, %74 ], [ null, %86 ], [ null, %55 ]
  ret %"struct.std::__1::__hash_node_base.915"* %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK8spvtools3opt9CacheHashclERKNSt3__14pairIjNS2_6vectorIjNS2_9allocatorIjEEEEEE(%"struct.spvtools::opt::CacheHash"*, %"struct.std::__1::pair.978"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = alloca %"class.std::__1::basic_string.1163", align 8
  %5 = bitcast %"class.std::__1::basic_string.1163"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #14
  %11 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.std::__1::basic_string.1163"* %4 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string.1163"* %4 to i32*
  store i8 1, i8* %14, align 1
  store i32 %12, i32* %15, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1, i32 0, i32 1
  %20 = load i32*, i32** %19, align 8
  %21 = icmp eq i32* %18, %20
  %22 = bitcast %"class.std::__1::basic_string.1163"* %4 to i32*
  br i1 %21, label %23, label %41

23:                                               ; preds = %67, %2
  %24 = load i8, i8* %14, align 1
  %25 = icmp slt i8 %24, 0
  %26 = load i32*, i32** %6, align 8
  %27 = load i64, i64* %7, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i32* %26, i32* %22
  %30 = select i1 %25, i64 %27, i64 %28
  %31 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #14
  %32 = bitcast i32* %29 to i8*
  %33 = shl nuw i64 %30, 2
  %34 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %32, i64 %33) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #14
  %35 = load i8, i8* %14, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %23
  %38 = bitcast %"class.std::__1::basic_string.1163"* %4 to i8**
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #13
  br label %40

40:                                               ; preds = %23, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret i64 %34

41:                                               ; preds = %2, %67
  %42 = phi i32* [ %71, %67 ], [ %18, %2 ]
  %43 = load i32, i32* %42, align 4
  %44 = load i8, i8* %14, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %41
  %47 = zext i8 %44 to i64
  br label %53

48:                                               ; preds = %41
  %49 = load i64, i64* %8, align 8
  %50 = and i64 %49, 9223372036854775807
  %51 = add nsw i64 %50, -1
  %52 = load i64, i64* %7, align 8
  br label %53

53:                                               ; preds = %48, %46
  %54 = phi i64 [ 4, %46 ], [ %51, %48 ]
  %55 = phi i64 [ %47, %46 ], [ %52, %48 ]
  %56 = icmp eq i64 %55, %54
  br i1 %56, label %57, label %60

57:                                               ; preds = %53
  call void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1163"* nonnull %4, i64 %54, i64 1, i64 %54, i64 %54, i64 0, i64 0) #14
  %58 = load i8, i8* %14, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %64, label %61

60:                                               ; preds = %53
  br i1 %45, label %64, label %61

61:                                               ; preds = %60, %57
  %62 = trunc i64 %55 to i8
  %63 = add i8 %62, 1
  store i8 %63, i8* %14, align 1
  br label %67

64:                                               ; preds = %60, %57
  %65 = load i32*, i32** %6, align 8
  %66 = add i64 %55, 1
  store i64 %66, i64* %7, align 8
  br label %67

67:                                               ; preds = %61, %64
  %68 = phi i32* [ %22, %61 ], [ %65, %64 ]
  %69 = getelementptr inbounds i32, i32* %68, i64 %55
  store i32 %43, i32* %69, align 4
  %70 = getelementptr inbounds i32, i32* %69, i64 1
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds i32, i32* %42, i64 1
  %72 = icmp eq i32* %71, %20
  br i1 %72, label %23, label %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDiNS_11char_traitsIDiEENS_9allocatorIDiEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string.1163"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 4611686018427387887, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string.1163"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #15
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string.1163"* %0 to %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short", %"struct.std::__1::basic_string<char32_t, std::__1::char_traits<char32_t>, std::__1::allocator<char32_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string.1163"* %0 to i32*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i32* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i32* %23 to i8*
  %25 = icmp ult i64 %1, 2305843009213693927
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 5
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 4
  %34 = and i64 %33, -4
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #15
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 4611686018427387887, %22 ], [ 5, %26 ]
  %39 = shl i64 %38, 2
  %40 = tail call i8* @_Znwm(i64 %39) #13
  %41 = bitcast i8* %40 to i32*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 8
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 2
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i32, i32* %23, i64 %4
  %49 = bitcast i32* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -8
  %55 = sub i64 %4, %54
  %56 = getelementptr i32, i32* %23, i64 %54
  %57 = getelementptr i32, i32* %41, i64 %54
  %58 = add i64 %54, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 24
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i32, i32* %23, i64 %66
  %69 = getelementptr i32, i32* %41, i64 %66
  %70 = bitcast i32* %68 to <4 x i32>*
  %71 = load <4 x i32>, <4 x i32>* %70, align 4, !alias.scope !21
  %72 = getelementptr i32, i32* %68, i64 4
  %73 = bitcast i32* %72 to <4 x i32>*
  %74 = load <4 x i32>, <4 x i32>* %73, align 4, !alias.scope !21
  %75 = bitcast i32* %69 to <4 x i32>*
  store <4 x i32> %71, <4 x i32>* %75, align 4, !alias.scope !24, !noalias !21
  %76 = getelementptr i32, i32* %69, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  store <4 x i32> %74, <4 x i32>* %77, align 4, !alias.scope !24, !noalias !21
  %78 = or i64 %66, 8
  %79 = getelementptr i32, i32* %23, i64 %78
  %80 = getelementptr i32, i32* %41, i64 %78
  %81 = bitcast i32* %79 to <4 x i32>*
  %82 = load <4 x i32>, <4 x i32>* %81, align 4, !alias.scope !21
  %83 = getelementptr i32, i32* %79, i64 4
  %84 = bitcast i32* %83 to <4 x i32>*
  %85 = load <4 x i32>, <4 x i32>* %84, align 4, !alias.scope !21
  %86 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %82, <4 x i32>* %86, align 4, !alias.scope !24, !noalias !21
  %87 = getelementptr i32, i32* %80, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  store <4 x i32> %85, <4 x i32>* %88, align 4, !alias.scope !24, !noalias !21
  %89 = or i64 %66, 16
  %90 = getelementptr i32, i32* %23, i64 %89
  %91 = getelementptr i32, i32* %41, i64 %89
  %92 = bitcast i32* %90 to <4 x i32>*
  %93 = load <4 x i32>, <4 x i32>* %92, align 4, !alias.scope !21
  %94 = getelementptr i32, i32* %90, i64 4
  %95 = bitcast i32* %94 to <4 x i32>*
  %96 = load <4 x i32>, <4 x i32>* %95, align 4, !alias.scope !21
  %97 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %93, <4 x i32>* %97, align 4, !alias.scope !24, !noalias !21
  %98 = getelementptr i32, i32* %91, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  store <4 x i32> %96, <4 x i32>* %99, align 4, !alias.scope !24, !noalias !21
  %100 = or i64 %66, 24
  %101 = getelementptr i32, i32* %23, i64 %100
  %102 = getelementptr i32, i32* %41, i64 %100
  %103 = bitcast i32* %101 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !21
  %105 = getelementptr i32, i32* %101, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4, !alias.scope !21
  %108 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %108, align 4, !alias.scope !24, !noalias !21
  %109 = getelementptr i32, i32* %102, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  store <4 x i32> %107, <4 x i32>* %110, align 4, !alias.scope !24, !noalias !21
  %111 = add i64 %66, 32
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !26

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i32, i32* %23, i64 %118
  %121 = getelementptr i32, i32* %41, i64 %118
  %122 = bitcast i32* %120 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !21
  %124 = getelementptr i32, i32* %120, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !21
  %127 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !24, !noalias !21
  %128 = getelementptr i32, i32* %121, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !24, !noalias !21
  %130 = add i64 %118, 8
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !28

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i32* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i32* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i32* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i32* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i32, i32* %144, align 4
  store i32 %147, i32* %145, align 4
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i32, i32* %145, i64 1
  %150 = getelementptr inbounds i32, i32* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !29

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i32* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i32* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i32* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i32* [ %185, %158 ], [ %156, %153 ]
  %162 = load i32, i32* %160, align 4
  store i32 %162, i32* %161, align 4
  %163 = getelementptr inbounds i32, i32* %161, i64 1
  %164 = getelementptr inbounds i32, i32* %160, i64 1
  %165 = load i32, i32* %164, align 4
  store i32 %165, i32* %163, align 4
  %166 = getelementptr inbounds i32, i32* %161, i64 2
  %167 = getelementptr inbounds i32, i32* %160, i64 2
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %166, align 4
  %169 = getelementptr inbounds i32, i32* %161, i64 3
  %170 = getelementptr inbounds i32, i32* %160, i64 3
  %171 = load i32, i32* %170, align 4
  store i32 %171, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %161, i64 4
  %173 = getelementptr inbounds i32, i32* %160, i64 4
  %174 = load i32, i32* %173, align 4
  store i32 %174, i32* %172, align 4
  %175 = getelementptr inbounds i32, i32* %161, i64 5
  %176 = getelementptr inbounds i32, i32* %160, i64 5
  %177 = load i32, i32* %176, align 4
  store i32 %177, i32* %175, align 4
  %178 = getelementptr inbounds i32, i32* %161, i64 6
  %179 = getelementptr inbounds i32, i32* %160, i64 6
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %178, align 4
  %181 = getelementptr inbounds i32, i32* %161, i64 7
  %182 = getelementptr inbounds i32, i32* %160, i64 7
  %183 = load i32, i32* %182, align 4
  store i32 %183, i32* %181, align 4
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i32, i32* %161, i64 8
  %186 = getelementptr inbounds i32, i32* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !30

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i32, i32* %41, i64 %4
  %194 = getelementptr inbounds i32, i32* %193, i64 %6
  %195 = getelementptr inbounds i32, i32* %23, i64 %4
  %196 = getelementptr inbounds i32, i32* %195, i64 %5
  %197 = icmp ult i64 %190, 8
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i32* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 2
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 2
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i32, i32* %23, i64 %3
  %208 = bitcast i32* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -8
  %214 = sub i64 %190, %213
  %215 = getelementptr i32, i32* %196, i64 %213
  %216 = getelementptr i32, i32* %194, i64 %213
  %217 = add i64 %213, -8
  %218 = lshr exact i64 %217, 3
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 24
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i32, i32* %196, i64 %225
  %228 = getelementptr i32, i32* %194, i64 %225
  %229 = bitcast i32* %227 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !31
  %231 = getelementptr i32, i32* %227, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !31
  %234 = bitcast i32* %228 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %234, align 4, !alias.scope !34, !noalias !31
  %235 = getelementptr i32, i32* %228, i64 4
  %236 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %233, <4 x i32>* %236, align 4, !alias.scope !34, !noalias !31
  %237 = or i64 %225, 8
  %238 = getelementptr i32, i32* %196, i64 %237
  %239 = getelementptr i32, i32* %194, i64 %237
  %240 = bitcast i32* %238 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !31
  %242 = getelementptr i32, i32* %238, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  %244 = load <4 x i32>, <4 x i32>* %243, align 4, !alias.scope !31
  %245 = bitcast i32* %239 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %245, align 4, !alias.scope !34, !noalias !31
  %246 = getelementptr i32, i32* %239, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %244, <4 x i32>* %247, align 4, !alias.scope !34, !noalias !31
  %248 = or i64 %225, 16
  %249 = getelementptr i32, i32* %196, i64 %248
  %250 = getelementptr i32, i32* %194, i64 %248
  %251 = bitcast i32* %249 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !31
  %253 = getelementptr i32, i32* %249, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !31
  %256 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %252, <4 x i32>* %256, align 4, !alias.scope !34, !noalias !31
  %257 = getelementptr i32, i32* %250, i64 4
  %258 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %258, align 4, !alias.scope !34, !noalias !31
  %259 = or i64 %225, 24
  %260 = getelementptr i32, i32* %196, i64 %259
  %261 = getelementptr i32, i32* %194, i64 %259
  %262 = bitcast i32* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !31
  %264 = getelementptr i32, i32* %260, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !31
  %267 = bitcast i32* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !34, !noalias !31
  %268 = getelementptr i32, i32* %261, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !34, !noalias !31
  %270 = add i64 %225, 32
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !36

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i32, i32* %196, i64 %277
  %280 = getelementptr i32, i32* %194, i64 %277
  %281 = bitcast i32* %279 to <4 x i32>*
  %282 = load <4 x i32>, <4 x i32>* %281, align 4, !alias.scope !31
  %283 = getelementptr i32, i32* %279, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !31
  %286 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %282, <4 x i32>* %286, align 4, !alias.scope !34, !noalias !31
  %287 = getelementptr i32, i32* %280, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %288, align 4, !alias.scope !34, !noalias !31
  %289 = add i64 %277, 8
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !37

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i32* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i32* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i32* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i32* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i32, i32* %303, align 4
  store i32 %306, i32* %304, align 4
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i32, i32* %304, i64 1
  %309 = getelementptr inbounds i32, i32* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !38

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i32* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i32* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i32* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i32* [ %344, %317 ], [ %315, %312 ]
  %321 = load i32, i32* %319, align 4
  store i32 %321, i32* %320, align 4
  %322 = getelementptr inbounds i32, i32* %320, i64 1
  %323 = getelementptr inbounds i32, i32* %319, i64 1
  %324 = load i32, i32* %323, align 4
  store i32 %324, i32* %322, align 4
  %325 = getelementptr inbounds i32, i32* %320, i64 2
  %326 = getelementptr inbounds i32, i32* %319, i64 2
  %327 = load i32, i32* %326, align 4
  store i32 %327, i32* %325, align 4
  %328 = getelementptr inbounds i32, i32* %320, i64 3
  %329 = getelementptr inbounds i32, i32* %319, i64 3
  %330 = load i32, i32* %329, align 4
  store i32 %330, i32* %328, align 4
  %331 = getelementptr inbounds i32, i32* %320, i64 4
  %332 = getelementptr inbounds i32, i32* %319, i64 4
  %333 = load i32, i32* %332, align 4
  store i32 %333, i32* %331, align 4
  %334 = getelementptr inbounds i32, i32* %320, i64 5
  %335 = getelementptr inbounds i32, i32* %319, i64 5
  %336 = load i32, i32* %335, align 4
  store i32 %336, i32* %334, align 4
  %337 = getelementptr inbounds i32, i32* %320, i64 6
  %338 = getelementptr inbounds i32, i32* %319, i64 6
  %339 = load i32, i32* %338, align 4
  store i32 %339, i32* %337, align 4
  %340 = getelementptr inbounds i32, i32* %320, i64 7
  %341 = getelementptr inbounds i32, i32* %319, i64 7
  %342 = load i32, i32* %341, align 4
  store i32 %342, i32* %340, align 4
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i32, i32* %320, i64 8
  %345 = getelementptr inbounds i32, i32* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !39

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 4
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #13
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string.1163"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string.1163", %"class.std::__1::basic_string.1163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.957"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.953"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.957"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.957"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.957"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.957"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.957"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #13, !noalias !40
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !40
  store i32 %58, i32* %57, align 4, !noalias !40
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !40
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.957"**
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %61, align 8, !noalias !40
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #14
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.953"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #14, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.957"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.957"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.957"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.957"* %104, %"struct.std::__1::__hash_node_base.957"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.957"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.957"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #14, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.957"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.957"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.957"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.957"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.957"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.957"*, i8 } undef, %"struct.std::__1::__hash_node_base.957"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.957"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.957"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.953"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.953"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.953"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.953"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.953"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.957"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.957"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.959", %"class.std::__1::__bucket_list_deallocator.959"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !43

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.957"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.957"* null, %"struct.std::__1::__hash_node_base.957"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.957"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.957"* %36, %"struct.std::__1::__hash_node_base.957"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.957"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.957"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.957"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.957"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.957"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.957"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.957"* %82, %"struct.std::__1::__hash_node_base.957"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.957"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.957"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.957"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.957"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.957"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.957"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.957"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.957"* %80, %"struct.std::__1::__hash_node_base.957"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.957"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.957", %"struct.std::__1::__hash_node_base.957"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.957"*, %"struct.std::__1::__hash_node_base.957"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.957"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.953", %"class.std::__1::__hash_table.953"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.957"**, %"struct.std::__1::__hash_node_base.957"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.957"** null, %"struct.std::__1::__hash_node_base.957"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.957"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.957"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.959", %"class.std::__1::__bucket_list_deallocator.959"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE25__emplace_unique_key_argsIS7_JRKNS_21piecewise_construct_tENS_5tupleIJOS7_EEENSP_IJEEEEEENS2_INS_15__hash_iteratorIPNS_11__hash_nodeIS9_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, %"struct.std::__1::pair.978"* dereferenceable(32), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1185"* dereferenceable(8), %"class.std::__1::tuple.1136"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::__compressed_pair.927"* %6 to %"struct.spvtools::opt::CacheHash"*
  %8 = tail call i64 @_ZNK8spvtools3opt9CacheHashclERKNSt3__14pairIjNS2_6vectorIjNS2_9allocatorIjEEEEEE(%"struct.spvtools::opt::CacheHash"* %7, %"struct.std::__1::pair.978"* dereferenceable(32) %1) #14
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %93, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.915"* %27, null
  br i1 %28, label %93, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %93, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  %35 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1
  %38 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %1, i64 0, i32 1, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.3"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = inttoptr i64 %42 to i32*
  br label %45

45:                                               ; preds = %33, %89
  %46 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %33 ], [ %91, %89 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %46, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.915"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %8
  br i1 %50, label %61, label %51

51:                                               ; preds = %45
  br i1 %14, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %34
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %10
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %10
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %23
  br i1 %60, label %61, label %93

61:                                               ; preds = %45, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %46, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.915"* %62 to i32*
  %64 = load i32, i32* %63, align 8
  %65 = icmp eq i32 %64, %36
  br i1 %65, label %66, label %89

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %46, i64 3
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %46, i64 4
  %69 = bitcast %"struct.std::__1::__hash_node_base.915"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"struct.std::__1::__hash_node_base.915"* %67 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = icmp eq i64 %73, %43
  %75 = inttoptr i64 %72 to i32*
  %76 = inttoptr i64 %70 to i32*
  br i1 %74, label %77, label %89

77:                                               ; preds = %66
  %78 = icmp eq i32* %75, %76
  br i1 %78, label %201, label %79

79:                                               ; preds = %77, %85
  %80 = phi i32* [ %87, %85 ], [ %44, %77 ]
  %81 = phi i32* [ %86, %85 ], [ %75, %77 ]
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* %80, align 4
  %84 = icmp eq i32 %82, %83
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = getelementptr inbounds i32, i32* %81, i64 1
  %87 = getelementptr inbounds i32, i32* %80, i64 1
  %88 = icmp eq i32* %86, %76
  br i1 %88, label %201, label %79

89:                                               ; preds = %79, %61, %66
  %90 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %46, i64 0, i32 0
  %91 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %90, align 8
  %92 = icmp eq %"struct.std::__1::__hash_node_base.915"* %91, null
  br i1 %92, label %93, label %45

93:                                               ; preds = %58, %89, %29, %22, %5
  %94 = phi i64 [ %23, %22 ], [ -6148914691236517206, %5 ], [ %23, %29 ], [ %23, %89 ], [ %23, %58 ]
  %95 = tail call i8* @_Znwm(i64 56) #13, !noalias !44
  %96 = getelementptr inbounds i8, i8* %95, i64 16
  %97 = getelementptr inbounds %"class.std::__1::tuple.1185", %"class.std::__1::tuple.1185"* %3, i64 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::pair.978"*, %"struct.std::__1::pair.978"** %97, align 8, !noalias !44
  %99 = bitcast i8* %96 to i32*
  %100 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %98, i64 0, i32 0
  %101 = load i32, i32* %100, align 8, !noalias !44
  store i32 %101, i32* %99, align 8, !noalias !44
  %102 = getelementptr inbounds i8, i8* %95, i64 24
  %103 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %98, i64 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #14, !noalias !44
  %104 = bitcast %"class.std::__1::vector.3"* %103 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !44
  %106 = bitcast i8* %102 to i64*
  store i64 %105, i64* %106, align 8, !noalias !44
  %107 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %98, i64 0, i32 1, i32 0, i32 1
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8, !noalias !44
  %110 = getelementptr inbounds i8, i8* %95, i64 32
  %111 = bitcast i8* %110 to i64*
  store i64 %109, i64* %111, align 8, !noalias !44
  %112 = getelementptr inbounds %"struct.std::__1::pair.978", %"struct.std::__1::pair.978"* %98, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !44
  %115 = getelementptr inbounds i8, i8* %95, i64 40
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8, !noalias !44
  %117 = bitcast %"class.std::__1::vector.3"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #14, !noalias !44
  %118 = getelementptr inbounds i8, i8* %95, i64 48
  store i8 0, i8* %118, align 1, !noalias !44
  %119 = getelementptr inbounds i8, i8* %95, i64 49
  store i8 0, i8* %119, align 1, !noalias !44
  %120 = getelementptr inbounds i8, i8* %95, i64 8
  %121 = bitcast i8* %120 to i64*
  store i64 %8, i64* %121, align 8, !noalias !44
  %122 = bitcast i8* %95 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %122, align 8, !noalias !44
  %123 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, 1
  %126 = uitofp i64 %125 to float
  %127 = uitofp i64 %10 to float
  %128 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %129 = load float, float* %128, align 4
  %130 = fmul float %129, %127
  %131 = fcmp olt float %130, %126
  %132 = or i1 %11, %131
  br i1 %132, label %133, label %156

133:                                              ; preds = %93
  %134 = shl i64 %10, 1
  %135 = icmp ult i64 %10, 3
  %136 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !3
  %137 = icmp ugt i64 %136, 1
  %138 = or i1 %135, %137
  %139 = zext i1 %138 to i64
  %140 = or i64 %134, %139
  %141 = fdiv float %126, %129
  %142 = tail call float @llvm.ceil.f32(float %141) #14
  %143 = fptoui float %142 to i64
  %144 = icmp ult i64 %140, %143
  %145 = select i1 %144, i64 %143, i64 %140
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %145)
  %146 = load i64, i64* %9, align 8
  %147 = tail call i64 @llvm.ctpop.i64(i64 %146) #14, !range !3
  %148 = icmp ugt i64 %147, 1
  br i1 %148, label %152, label %149

149:                                              ; preds = %133
  %150 = add i64 %146, -1
  %151 = and i64 %150, %8
  br label %156

152:                                              ; preds = %133
  %153 = icmp ult i64 %8, %146
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = urem i64 %8, %146
  br label %156

156:                                              ; preds = %154, %152, %149, %93
  %157 = phi i64 [ %10, %93 ], [ %146, %149 ], [ %146, %152 ], [ %146, %154 ]
  %158 = phi i64 [ %94, %93 ], [ %151, %149 ], [ %8, %152 ], [ %155, %154 ]
  %159 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %159, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %160, i64 %158
  %162 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.915"* %162, null
  br i1 %163, label %164, label %190

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %166 = bitcast %"struct.std::__1::__hash_node_base.915"* %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast i8* %95 to i64*
  store i64 %167, i64* %168, align 8
  %169 = bitcast %"struct.std::__1::__hash_node_base.915"* %165 to i8**
  store i8* %95, i8** %169, align 8
  store %"struct.std::__1::__hash_node_base.915"* %165, %"struct.std::__1::__hash_node_base.915"** %161, align 8
  %170 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %122, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.915"* %170, null
  br i1 %171, label %197, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %170, i64 1
  %174 = bitcast %"struct.std::__1::__hash_node_base.915"* %173 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = tail call i64 @llvm.ctpop.i64(i64 %157) #14, !range !3
  %177 = icmp ugt i64 %176, 1
  br i1 %177, label %181, label %178

178:                                              ; preds = %172
  %179 = add i64 %157, -1
  %180 = and i64 %175, %179
  br label %185

181:                                              ; preds = %172
  %182 = icmp ult i64 %175, %157
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = urem i64 %175, %157
  br label %185

185:                                              ; preds = %178, %181, %183
  %186 = phi i64 [ %180, %178 ], [ %184, %183 ], [ %175, %181 ]
  %187 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %159, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %187, i64 %186
  %189 = bitcast %"struct.std::__1::__hash_node_base.915"** %188 to i8**
  br label %195

190:                                              ; preds = %156
  %191 = bitcast %"struct.std::__1::__hash_node_base.915"* %162 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast i8* %95 to i64*
  store i64 %192, i64* %193, align 8
  %194 = bitcast %"struct.std::__1::__hash_node_base.915"* %162 to i8**
  br label %195

195:                                              ; preds = %185, %190
  %196 = phi i8** [ %194, %190 ], [ %189, %185 ]
  store i8* %95, i8** %196, align 8
  br label %197

197:                                              ; preds = %195, %164
  %198 = bitcast i8* %95 to %"struct.std::__1::__hash_node_base.915"*
  %199 = load i64, i64* %123, align 8
  %200 = add i64 %199, 1
  store i64 %200, i64* %123, align 8
  br label %201

201:                                              ; preds = %77, %85, %197
  %202 = phi i8 [ 1, %197 ], [ 0, %85 ], [ 0, %77 ]
  %203 = phi %"struct.std::__1::__hash_node_base.915"* [ %198, %197 ], [ %46, %85 ], [ %46, %77 ]
  %204 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %203, 0
  %205 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %204, i8 %202, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %205
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %172, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !47

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %180, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %180, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %166
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %170, %166 ]
  %81 = phi i64 [ %71, %77 ], [ %168, %166 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %167, %166 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %166, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %112, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 0, i32 0
  %102 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.915"* %102, null
  br i1 %103, label %152, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %106 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 3
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 4
  %110 = bitcast %"struct.std::__1::__hash_node_base.915"* %109 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %108 to i64*
  br label %113

112:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %166

113:                                              ; preds = %104, %148
  %114 = phi %"struct.std::__1::__hash_node_base.915"* [ %102, %104 ], [ %150, %148 ]
  %115 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %104 ], [ %114, %148 ]
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %114, i64 2
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %116 to i32*
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %107, %118
  br i1 %119, label %120, label %152

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %114, i64 3
  %122 = load i64, i64* %110, align 8
  %123 = load i64, i64* %111, align 8
  %124 = sub i64 %122, %123
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %114, i64 4
  %126 = bitcast %"struct.std::__1::__hash_node_base.915"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"* %121 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %127, %129
  %131 = icmp eq i64 %124, %130
  %132 = inttoptr i64 %123 to i32*
  %133 = inttoptr i64 %122 to i32*
  br i1 %131, label %134, label %152

134:                                              ; preds = %120
  %135 = icmp eq i32* %132, %133
  br i1 %135, label %148, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %129 to i32*
  br label %138

138:                                              ; preds = %144, %136
  %139 = phi i32* [ %146, %144 ], [ %137, %136 ]
  %140 = phi i32* [ %145, %144 ], [ %132, %136 ]
  %141 = load i32, i32* %140, align 4
  %142 = load i32, i32* %139, align 4
  %143 = icmp eq i32 %141, %142
  br i1 %143, label %144, label %152

144:                                              ; preds = %138
  %145 = getelementptr inbounds i32, i32* %140, i64 1
  %146 = getelementptr inbounds i32, i32* %139, i64 1
  %147 = icmp eq i32* %145, %133
  br i1 %147, label %148, label %138

148:                                              ; preds = %144, %134
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %114, i64 0, i32 0
  %150 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %149, align 8
  %151 = icmp eq %"struct.std::__1::__hash_node_base.915"* %150, null
  br i1 %151, label %152, label %113

152:                                              ; preds = %148, %113, %120, %138, %100
  %153 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %100 ], [ %115, %138 ], [ %114, %148 ], [ %115, %113 ], [ %115, %120 ]
  %154 = bitcast %"struct.std::__1::__hash_node_base.915"* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %155, i64* %156, align 8
  %157 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %158 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %157, i64 %93
  %159 = bitcast %"struct.std::__1::__hash_node_base.915"** %158 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  store i64 %161, i64* %154, align 8
  %162 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %162, i64 %93
  %164 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %164, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %165, align 8
  br label %166

166:                                              ; preds = %92, %152, %112
  %167 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %112 ], [ %82, %152 ], [ %80, %92 ]
  %168 = phi i64 [ %93, %112 ], [ %81, %152 ], [ %81, %92 ]
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %167, i64 0, i32 0
  %170 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %169, align 8
  %171 = icmp eq %"struct.std::__1::__hash_node_base.915"* %170, null
  br i1 %171, label %180, label %79

172:                                              ; preds = %2
  %173 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %173, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %173, align 8
  %175 = icmp eq %"struct.std::__1::__hash_node_base.915"** %174, null
  br i1 %175, label %178, label %176

176:                                              ; preds = %172
  %177 = bitcast %"struct.std::__1::__hash_node_base.915"** %174 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  br label %178

178:                                              ; preds = %172, %176
  %179 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %179, align 8
  br label %180

180:                                              ; preds = %166, %70, %35, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS8_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESE_EEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = alloca %"class.std::__1::vector.3", align 8
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1202"**
  %5 = load %"class.std::__1::__function::__default_alloc_func.1202"*, %"class.std::__1::__function::__default_alloc_func.1202"** %4, align 8
  %6 = bitcast %"class.std::__1::vector.3"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1202", %"class.std::__1::__function::__default_alloc_func.1202"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %8, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #13
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #14
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #14
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.62"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.62"* %28 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #14
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %36, %2
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = load i32, i32* %1, align 4
  %43 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %42) #14
  %44 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 11
  %46 = load i32, i32* %45, align 8
  %47 = trunc i32 %46 to i16
  %48 = icmp slt i16 %47, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 5
  %51 = tail call i8* @_Znwm(i64 240) #13
  %52 = bitcast i8* %51 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52, %"class.std::__1::function"* dereferenceable(32) %50, %"class.spvtools::opt::IRContext"* %44) #14
  %53 = ptrtoint i8* %51 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 20
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.480"* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %49
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %56) #14
  %60 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %56 to i8*
  tail call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %59, %49
  %62 = load i32, i32* %45, align 8
  %63 = or i32 %62, 32768
  store i32 %63, i32* %45, align 8
  br label %64

64:                                               ; preds = %61, %39
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 20, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %64
  %71 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 0) #14
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i32 [ %71, %70 ], [ 0, %64 ]
  %74 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %66, i32 %73) #14
  %75 = icmp eq %"class.spvtools::opt::analysis::Type"* %74, null
  br i1 %75, label %160, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.spvtools::opt::analysis::Type"* %74 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %78 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %77, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %78, i64 33
  %80 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %79, align 8
  %81 = tail call %"class.spvtools::opt::analysis::Pointer"* %80(%"class.spvtools::opt::analysis::Type"* nonnull %74) #14
  %82 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %81, null
  br i1 %82, label %83, label %97

83:                                               ; preds = %76
  %84 = bitcast %"class.spvtools::opt::analysis::Type"* %74 to %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)***
  %85 = load %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)*** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)** %85, i64 19
  %87 = load %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)** %86, align 8
  %88 = tail call %"class.spvtools::opt::analysis::Image"* %87(%"class.spvtools::opt::analysis::Type"* nonnull %74) #14
  %89 = icmp eq %"class.spvtools::opt::analysis::Image"* %88, null
  br i1 %89, label %90, label %97

90:                                               ; preds = %83
  %91 = bitcast %"class.spvtools::opt::analysis::Type"* %74 to %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)***
  %92 = load %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)** %92, i64 23
  %94 = load %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)** %93, align 8
  %95 = tail call %"class.spvtools::opt::analysis::SampledImage"* %94(%"class.spvtools::opt::analysis::Type"* nonnull %74) #14
  %96 = icmp eq %"class.spvtools::opt::analysis::SampledImage"* %95, null
  br i1 %96, label %160, label %97

97:                                               ; preds = %90, %83, %76
  %98 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1202", %"class.std::__1::__function::__default_alloc_func.1202"* %5, i64 0, i32 0, i32 3
  %99 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %98, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #14
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %99, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.std::__1::vector.3"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = ashr exact i64 %105, 2
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %135, label %108

108:                                              ; preds = %97
  %109 = icmp ugt i64 %106, 4611686018427387903
  br i1 %109, label %110, label %112

110:                                              ; preds = %108
  %111 = bitcast %"class.std::__1::vector.3"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %111) #15
  unreachable

112:                                              ; preds = %108
  %113 = tail call i8* @_Znwm(i64 %105) #13
  %114 = bitcast i8* %113 to i32*
  %115 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %116 = bitcast i32** %115 to i8**
  store i8* %113, i8** %116, align 8
  %117 = bitcast %"class.std::__1::vector.3"* %3 to i8**
  store i8* %113, i8** %117, align 8
  %118 = getelementptr inbounds i32, i32* %114, i64 %106
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %118, i32** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %99, i64 0, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = load i64, i64* %101, align 8
  %123 = bitcast i32** %115 to i64*
  %124 = ptrtoint i8* %113 to i64
  %125 = ptrtoint i32* %121 to i64
  %126 = sub i64 %122, %125
  %127 = icmp sgt i64 %126, 0
  br i1 %127, label %128, label %133

128:                                              ; preds = %112
  %129 = lshr exact i64 %126, 2
  %130 = bitcast i32* %121 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %113, i8* align 4 %130, i64 %126, i1 false) #14
  %131 = getelementptr inbounds i32, i32* %114, i64 %129
  %132 = ptrtoint i32* %131 to i64
  br label %133

133:                                              ; preds = %128, %112
  %134 = phi i64 [ %132, %128 ], [ %124, %112 ]
  store i64 %134, i64* %123, align 8
  br label %135

135:                                              ; preds = %133, %97
  %136 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1202", %"class.std::__1::__function::__default_alloc_func.1202"* %5, i64 0, i32 0, i32 4
  %137 = load %"class.std::__1::unordered_set.952"**, %"class.std::__1::unordered_set.952"*** %136, align 8
  %138 = load %"class.std::__1::unordered_set.952"*, %"class.std::__1::unordered_set.952"** %137, align 8
  %139 = call i16 @_ZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS0_11InstructionENSt3__16vectorIjNS4_9allocatorIjEEEEPNS4_13unordered_setIjNS4_4hashIjEENS4_8equal_toIjEES7_EE(%"class.spvtools::opt::UpgradeMemoryModel"* %8, %"class.spvtools::opt::Instruction"* %43, %"class.std::__1::vector.3"* nonnull %3, %"class.std::__1::unordered_set.952"* %138) #14
  %140 = trunc i16 %139 to i8
  %141 = lshr i16 %139, 8
  %142 = trunc i16 %141 to i8
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = icmp eq i32* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %135
  %147 = ptrtoint i32* %144 to i64
  %148 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %149 = bitcast i32** %148 to i64*
  store i64 %147, i64* %149, align 8
  %150 = bitcast i32* %144 to i8*
  call void @_ZdlPv(i8* %150) #13
  br label %151

151:                                              ; preds = %146, %135
  %152 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1202", %"class.std::__1::__function::__default_alloc_func.1202"* %5, i64 0, i32 0, i32 1
  %153 = load i8*, i8** %152, align 8
  %154 = load i8, i8* %153, align 1, !range !2
  %155 = or i8 %154, %140
  store i8 %155, i8* %153, align 1
  %156 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1202", %"class.std::__1::__function::__default_alloc_func.1202"* %5, i64 0, i32 0, i32 2
  %157 = load i8*, i8** %156, align 8
  %158 = load i8, i8* %157, align 1, !range !2
  %159 = or i8 %158, %142
  store i8 %159, i8* %157, align 1
  br label %160

160:                                              ; preds = %72, %90, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #13, !noalias !48
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.994"*, i8 } @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS5_JRKS5_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.990"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"class.spvtools::opt::Instruction"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.994"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.994"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.994"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.994"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.994"* %62 to %"class.spvtools::opt::Instruction"**
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #13, !noalias !53
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::Instruction"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !53
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !53
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !53
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.994"**
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %75, align 8, !noalias !53
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #14, !range !3
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #14
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #14, !range !3
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.994"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.994"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.994"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.994"* %118, %"struct.std::__1::__hash_node_base.994"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.994"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.994"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #14, !range !3
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.994"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.994"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.994"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.994"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.994"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } undef, %"struct.std::__1::__hash_node_base.994"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.994"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.994"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.990"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.990"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.990"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #15
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.990"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.994"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.994"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.996", %"class.std::__1::__bucket_list_deallocator.996"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !56

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.994"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.994"* null, %"struct.std::__1::__hash_node_base.994"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.994"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.994"* %36, %"struct.std::__1::__hash_node_base.994"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.994"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.994"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.994"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.994"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.994"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.994"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.994"* %82, %"struct.std::__1::__hash_node_base.994"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.994"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.994"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.994"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.994"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.994"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.994"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.994"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.994"* %80, %"struct.std::__1::__hash_node_base.994"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.994"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.994", %"struct.std::__1::__hash_node_base.994"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.994"*, %"struct.std::__1::__hash_node_base.994"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.994"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.990", %"class.std::__1::__hash_table.990"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.994"**, %"struct.std::__1::__hash_node_base.994"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.994"** null, %"struct.std::__1::__hash_node_base.994"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.994"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.994"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #13
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.996", %"class.std::__1::__bucket_list_deallocator.996"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel13HasDecorationEPS5_j14SpvDecoration_E3$_4S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %24 [
    i32 71, label %25
    i32 332, label %25
    i32 72, label %5
  ]

5:                                                ; preds = %2
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  %14 = select i1 %13, i32 1, i32 2
  %15 = xor i1 %13, true
  %16 = zext i1 %15 to i32
  %17 = select i1 %10, i32 %16, i32 %14
  %18 = add nuw nsw i32 %17, 1
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %18) #14
  %20 = icmp eq i32 %7, %19
  %21 = load i32, i32* %6, align 4
  %22 = icmp eq i32 %21, -1
  %23 = or i1 %20, %22
  br i1 %23, label %25, label %24

24:                                               ; preds = %5, %2
  br label %25

25:                                               ; preds = %2, %2, %5, %24
  %26 = phi i1 [ true, %24 ], [ false, %2 ], [ false, %5 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18CleanupDecorationsEvE3$_5S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1021", align 8
  %4 = bitcast %"class.std::__1::function.1021"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #14
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Pass"**
  %6 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 1, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = zext i8 %12 to i32
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %13) #14
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %65, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %6, i64 0, i32 2
  %18 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 11
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = bitcast %"class.spvtools::opt::Module"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = tail call i8* @_Znwm(i64 48) #13
  %28 = bitcast i8* %27 to %"class.spvtools::opt::analysis::DecorationManager"*
  %29 = getelementptr inbounds i8, i8* %27, i64 32
  %30 = bitcast i8* %29 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %27, i64 40
  %32 = bitcast i8* %31 to i64*
  store i64 %26, i64* %32, align 8
  tail call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %28) #14
  %33 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 7
  %34 = ptrtoint i8* %27 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %33, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %35, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.122"* %33 to i64*
  store i64 %34, i64* %37, align 8
  %38 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %23
  %40 = bitcast %"class.std::__1::unique_ptr.122"* %33 to %"struct.std::__1::default_delete.150"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %40, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %36) #14
  br label %41

41:                                               ; preds = %39, %23
  %42 = load i32, i32* %19, align 8
  %43 = or i32 %42, 4
  store i32 %43, i32* %19, align 8
  br label %44

44:                                               ; preds = %41, %16
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %18, i64 0, i32 7, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %45, align 8
  %47 = load i8, i8* %7, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %11, align 4, !range !2
  %51 = zext i8 %50 to i32
  %52 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %51) #14
  br label %53

53:                                               ; preds = %49, %44
  %54 = phi i32 [ %52, %49 ], [ 0, %44 ]
  %55 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %3, i64 0, i32 0, i32 1, i32 0
  %56 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_18UpgradeMemoryModel18CleanupDecorationsEvENK3$_5clEPS4_EUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %55, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel18CleanupDecorationsEvENK3$_5clEPNS5_11InstructionEEUlRKS8_E_FbSB_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %56, align 8
  %57 = call zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager21RemoveDecorationsFromEjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"* %46, i32 %54, %"class.std::__1::function.1021"* nonnull %3) #14
  %58 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %56, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %58, i64 0, i32 1
  %60 = load void (i8*)*, void (i8*)** %59, align 8
  %61 = icmp eq void (i8*)* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %53
  %63 = getelementptr inbounds %"class.std::__1::function.1021", %"class.std::__1::function.1021"* %3, i64 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void %60(i8* %64) #14
  br label %65

65:                                               ; preds = %2, %10, %53, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #14
  ret void
}

declare zeroext i1 @_ZN8spvtools3opt8analysis17DecorationManager21RemoveDecorationsFromEjNSt3__18functionIFbRKNS0_11InstructionEEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, %"class.std::__1::function.1021"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbRKN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_18UpgradeMemoryModel18CleanupDecorationsEvENK3$_5clEPS4_EUlS6_E_S7_EEEEbPKNS0_16__policy_storageES6_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.spvtools::opt::Instruction"* dereferenceable(112)) #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %57 [
    i32 71, label %5
    i32 332, label %5
    i32 72, label %31
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  %12 = select i1 %11, i32 1, i32 2
  %13 = xor i1 %11, true
  %14 = zext i1 %13 to i32
  %15 = select i1 %8, i32 %14, i32 %12
  %16 = add nuw nsw i32 %15, 1
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %16) #14
  %18 = icmp eq i32 %17, 23
  br i1 %18, label %58, label %19

19:                                               ; preds = %5
  %20 = load i8, i8* %6, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = load i8, i8* %9, align 1, !range !2
  %23 = icmp eq i8 %22, 0
  %24 = select i1 %23, i32 1, i32 2
  %25 = xor i1 %23, true
  %26 = zext i1 %25 to i32
  %27 = select i1 %21, i32 %26, i32 %24
  %28 = add nuw nsw i32 %27, 1
  %29 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %28) #14
  %30 = icmp eq i32 %29, 21
  br i1 %30, label %58, label %57

31:                                               ; preds = %2
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 1, i32 2
  %39 = xor i1 %37, true
  %40 = zext i1 %39 to i32
  %41 = select i1 %34, i32 %40, i32 %38
  %42 = add nuw nsw i32 %41, 2
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %42) #14
  %44 = icmp eq i32 %43, 23
  br i1 %44, label %58, label %45

45:                                               ; preds = %31
  %46 = load i8, i8* %32, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = load i8, i8* %35, align 1, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = select i1 %49, i32 1, i32 2
  %51 = xor i1 %49, true
  %52 = zext i1 %51 to i32
  %53 = select i1 %47, i32 %52, i32 %50
  %54 = add nuw nsw i32 %53, 2
  %55 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %54) #14
  %56 = icmp eq i32 %55, 21
  br i1 %56, label %58, label %57

57:                                               ; preds = %45, %19, %2
  br label %58

58:                                               ; preds = %5, %19, %31, %45, %57
  %59 = phi i1 [ false, %57 ], [ true, %19 ], [ true, %5 ], [ true, %45 ], [ true, %31 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel15UpgradeBarriersEvE3$_6S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = alloca %"class.std::__1::function.1120", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::function.942", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #14
  store i8 0, i8* %4, align 1
  %8 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = icmp eq %"class.std::__1::unique_ptr.40"* %9, %11
  br i1 %12, label %83, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::function.942"* %5 to i8*
  %15 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %16 = bitcast [8 x i8]* %15 to i64*
  %17 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %5, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %5, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.std::__1::function.942", %"class.std::__1::function.942"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::function.1120"* %3 to i8*
  %21 = ptrtoint %"class.std::__1::function.942"* %5 to i64
  %22 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %3, i64 0, i32 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %3, i64 0, i32 0, i32 2
  %24 = bitcast %"class.std::__1::function.1120"* %3 to i64*
  %25 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %3, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::function.1120", %"class.std::__1::function.1120"* %3, i64 0, i32 0, i32 0, i32 0
  br label %30

27:                                               ; preds = %80
  %28 = load i8, i8* %4, align 1, !range !2
  %29 = icmp ne i8 %28, 0
  br label %83

30:                                               ; preds = %80, %13
  %31 = phi %"class.std::__1::unique_ptr.40"* [ %9, %13 ], [ %81, %80 ]
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %32, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #14
  %34 = load i64, i64* %16, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS3_8FunctionEEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %17, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %18, align 8
  %35 = call i8* @_Znwm(i64 24) #13, !noalias !57
  %36 = bitcast i8* %35 to i64*
  store i64 %7, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 8
  %38 = bitcast i8* %37 to i64*
  store i64 %34, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %35, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %4, i8** %40, align 8
  store i8* %35, i8** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #14
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %22, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %23, align 8
  store i64 %21, i64* %24, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %41, align 8
  %43 = icmp eq %"class.spvtools::opt::Instruction"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %30
  %45 = bitcast i8* %35 to %class.anon.1226*
  call fastcc void @"_ZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS0_8FunctionEENKUlPNS0_11InstructionEE_clES6_"(%class.anon.1226* nonnull %45, %"class.spvtools::opt::Instruction"* nonnull %42) #14
  br label %46

46:                                               ; preds = %44, %30
  %47 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %33, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %48 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 3
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = icmp ne i8 %50, 0
  %52 = icmp eq %"class.spvtools::opt::Instruction"* %48, null
  %53 = or i1 %52, %51
  br i1 %53, label %66, label %54

54:                                               ; preds = %46, %57
  %55 = phi %"class.spvtools::opt::Instruction"* [ %63, %57 ], [ %48, %46 ]
  %56 = icmp eq %"class.spvtools::opt::Instruction"* %55, null
  br i1 %56, label %66, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %55, i64 0, i32 0, i32 1
  %59 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %59, i64 0, i32 0, i32 3
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  %63 = select i1 %62, %"class.spvtools::opt::Instruction"* %59, %"class.spvtools::opt::Instruction"* null
  %64 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %22, align 8
  %65 = call zeroext i1 %64(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.spvtools::opt::Instruction"* nonnull %55) #14
  br i1 %65, label %54, label %66

66:                                               ; preds = %57, %54, %46
  %67 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %23, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %67, i64 0, i32 1
  %69 = load void (i8*)*, void (i8*)** %68, align 8
  %70 = icmp eq void (i8*)* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %66
  %72 = load i8*, i8** %26, align 8
  call void %69(i8* %72) #14
  br label %73

73:                                               ; preds = %71, %66
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #14
  %74 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %18, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %74, i64 0, i32 1
  %76 = load void (i8*)*, void (i8*)** %75, align 8
  %77 = icmp eq void (i8*)* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  %79 = load i8*, i8** %19, align 8
  call void %76(i8* %79) #14
  br label %80

80:                                               ; preds = %78, %73
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #14
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %31, i64 1
  %82 = icmp eq %"class.std::__1::unique_ptr.40"* %81, %11
  br i1 %82, label %27, label %30

83:                                               ; preds = %2, %27
  %84 = phi i1 [ %29, %27 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #14
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZZNS3_18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS3_8FunctionEEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1227"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1227"*, %"class.std::__1::__function::__default_alloc_func.1227"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1227", %"class.std::__1::__function::__default_alloc_func.1227"* %4, i64 0, i32 0
  tail call fastcc void @"_ZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS0_8FunctionEENKUlPNS0_11InstructionEE_clES6_"(%class.anon.1226* %5, %"class.spvtools::opt::Instruction"* %1) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @"_ZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS0_8FunctionEENKUlPNS0_11InstructionEE_clES6_"(%class.anon.1226* nocapture readonly, %"class.spvtools::opt::Instruction"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::function.1096", align 8
  %4 = alloca %"class.std::__1::function.982", align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %6 = getelementptr inbounds %class.anon.1226, %class.anon.1226* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 224
  br i1 %10, label %11, label %82

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.anon.1226, %class.anon.1226* %0, i64 0, i32 1
  %13 = load %"class.std::__1::vector.1029"*, %"class.std::__1::vector.1029"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.1029", %"class.std::__1::vector.1029"* %13, i64 0, i32 0, i32 1
  %15 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.1029", %"class.std::__1::vector.1029"* %13, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::Instruction"** %15, %17
  %19 = ptrtoint %"class.spvtools::opt::Instruction"** %17 to i64
  br i1 %18, label %25, label %20

20:                                               ; preds = %11
  %21 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  store i64 %5, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, i64 1
  %23 = ptrtoint %"class.spvtools::opt::Instruction"** %22 to i64
  %24 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i64*
  store i64 %23, i64* %24, align 8
  br label %196

25:                                               ; preds = %11
  %26 = ptrtoint %"class.spvtools::opt::Instruction"** %15 to i64
  %27 = bitcast %"class.spvtools::opt::Instruction"*** %14 to i64*
  %28 = bitcast %"class.std::__1::vector.1029"* %13 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 2305843009213693951
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.1029"* %13 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #15
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"class.spvtools::opt::Instruction"*** %16 to i64*
  %38 = sub i64 %19, %29
  %39 = ashr exact i64 %38, 3
  %40 = icmp ult i64 %39, 1152921504606846975
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 2
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 2305843009213693951
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #15
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 2305843009213693951, %36 ]
  %51 = shl i64 %50, 3
  %52 = tail call i8* @_Znwm(i64 %51) #13
  %53 = bitcast i8* %52 to %"class.spvtools::opt::Instruction"**
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"class.spvtools::opt::Instruction"** [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %56, i64 %31
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %56, i64 %55
  %59 = ptrtoint %"class.spvtools::opt::Instruction"** %58 to i64
  %60 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  store i64 %5, i64* %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, i64 1
  %62 = ptrtoint %"class.spvtools::opt::Instruction"** %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::vector.1029", %"class.std::__1::vector.1029"* %13, i64 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %63, align 8
  %65 = load i64, i64* %27, align 8
  %66 = ptrtoint %"class.spvtools::opt::Instruction"** %64 to i64
  %67 = sub i64 %65, %66
  %68 = ashr exact i64 %67, 3
  %69 = sub nsw i64 0, %68
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %57, i64 %69
  %71 = ptrtoint %"class.spvtools::opt::Instruction"** %70 to i64
  %72 = icmp sgt i64 %67, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %54
  %74 = bitcast %"class.spvtools::opt::Instruction"** %70 to i8*
  %75 = bitcast %"class.spvtools::opt::Instruction"** %64 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 %67, i1 false) #14
  %76 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %63, align 8
  br label %77

77:                                               ; preds = %73, %54
  %78 = phi %"class.spvtools::opt::Instruction"** [ %64, %54 ], [ %76, %73 ]
  store i64 %71, i64* %28, align 8
  store i64 %62, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %79 = icmp eq %"class.spvtools::opt::Instruction"** %78, null
  br i1 %79, label %196, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.spvtools::opt::Instruction"** %78 to i8*
  tail call void @_ZdlPv(i8* %81) #13
  br label %196

82:                                               ; preds = %2
  %83 = getelementptr inbounds %class.anon.1226, %class.anon.1226* %0, i64 0, i32 2
  %84 = load i8*, i8** %83, align 8
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %196

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.spvtools::opt::UpgradeMemoryModel", %"class.spvtools::opt::UpgradeMemoryModel"* %7, i64 0, i32 0, i32 2
  %89 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %88, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 11
  %91 = load i32, i32* %90, align 8
  %92 = trunc i32 %91 to i16
  %93 = icmp slt i16 %92, 0
  br i1 %93, label %109, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 5
  %96 = tail call i8* @_Znwm(i64 240) #13
  %97 = bitcast i8* %96 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %97, %"class.std::__1::function"* dereferenceable(32) %95, %"class.spvtools::opt::IRContext"* %89) #14
  %98 = ptrtoint i8* %96 to i64
  %99 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 20
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %100, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.480"* %99 to i64*
  store i64 %98, i64* %102, align 8
  %103 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %101, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %94
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %101) #14
  %105 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %101 to i8*
  tail call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %104, %94
  %107 = load i32, i32* %90, align 8
  %108 = or i32 %107, 32768
  store i32 %108, i32* %90, align 8
  br label %109

109:                                              ; preds = %87, %106
  %110 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 20, i32 0, i32 0, i32 0
  %111 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %110, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %113 = load i8, i8* %112, align 4, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %117, label %115

115:                                              ; preds = %109
  %116 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #14
  br label %117

117:                                              ; preds = %109, %115
  %118 = phi i32 [ %116, %115 ], [ 0, %109 ]
  %119 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %111, i32 %118) #14
  %120 = icmp eq %"class.spvtools::opt::analysis::Type"* %119, null
  br i1 %120, label %138, label %121

121:                                              ; preds = %117
  %122 = bitcast %"class.spvtools::opt::analysis::Type"* %119 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %123 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %122, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %123, i64 32
  %125 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %124, align 8
  %126 = tail call %"class.spvtools::opt::analysis::Pointer"* %125(%"class.spvtools::opt::analysis::Type"* nonnull %119) #14
  %127 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %126, null
  br i1 %127, label %138, label %128

128:                                              ; preds = %121
  %129 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %122, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %129, i64 32
  %131 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %130, align 8
  %132 = tail call %"class.spvtools::opt::analysis::Pointer"* %131(%"class.spvtools::opt::analysis::Type"* nonnull %119) #14
  %133 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %132, i64 0, i32 3
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 3
  br i1 %135, label %136, label %138

136:                                              ; preds = %128
  %137 = load i8*, i8** %83, align 8
  store i8 1, i8* %137, align 1
  br label %196

138:                                              ; preds = %121, %117, %128
  %139 = bitcast %"class.std::__1::function.982"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #14
  %140 = bitcast i8** %83 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 1, i32 0
  %143 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS8_8FunctionEENKUlPNS8_11InstructionEE_clESE_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %142, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEENKUlPNS5_11InstructionEE_clESB_EUlPjE_FvSD_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %143, align 8
  %144 = bitcast %"class.std::__1::function.982"* %4 to %"class.spvtools::opt::UpgradeMemoryModel"**
  store %"class.spvtools::opt::UpgradeMemoryModel"* %7, %"class.spvtools::opt::UpgradeMemoryModel"** %144, align 8
  %145 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 0, i32 1
  %146 = bitcast [8 x i8]* %145 to i64*
  store i64 %141, i64* %146, align 8
  %147 = bitcast %"class.std::__1::function.1096"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147) #14
  %148 = ptrtoint %"class.std::__1::function.982"* %4 to i64
  %149 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %3, i64 0, i32 0, i32 1, i32 0
  %150 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %149, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %150, align 8
  %151 = bitcast %"class.std::__1::function.1096"* %3 to i64*
  store i64 %148, i64* %151, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %153 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %152, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %155 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %154, align 8
  %156 = icmp eq %"struct.spvtools::opt::Operand"* %153, %155
  br i1 %156, label %179, label %157

157:                                              ; preds = %138
  %158 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %3, i64 0, i32 0, i32 0
  br label %159

159:                                              ; preds = %174, %157
  %160 = phi %"struct.spvtools::opt::Operand"* [ %153, %157 ], [ %175, %174 ]
  %161 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 0
  %162 = load i32, i32* %161, align 8
  %163 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %162) #14
  br i1 %163, label %164, label %174

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %166 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %165, align 8
  %167 = icmp eq %"class.std::__1::vector.3"* %166, null
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %166, i64 0, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 0, i32 1, i32 2
  %170 = select i1 %167, i32** %169, i32** %168
  %171 = load i32*, i32** %170, align 8
  %172 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %149, align 8
  %173 = call zeroext i1 %172(%"union.std::__1::__function::__policy_storage"* nonnull %158, i32* %171) #14
  br i1 %173, label %174, label %177

174:                                              ; preds = %164, %159
  %175 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %160, i64 1
  %176 = icmp eq %"struct.spvtools::opt::Operand"* %175, %155
  br i1 %176, label %177, label %159

177:                                              ; preds = %174, %164
  %178 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %150, align 8
  br label %179

179:                                              ; preds = %177, %138
  %180 = phi %"struct.std::__1::__function::__policy"* [ %178, %177 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %138 ]
  %181 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %180, i64 0, i32 1
  %182 = load void (i8*)*, void (i8*)** %181, align 8
  %183 = icmp eq void (i8*)* %182, null
  br i1 %183, label %187, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"class.std::__1::function.1096", %"class.std::__1::function.1096"* %3, i64 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void %182(i8* %186) #14
  br label %187

187:                                              ; preds = %179, %184
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147) #14
  %188 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %143, align 8
  %189 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %188, i64 0, i32 1
  %190 = load void (i8*)*, void (i8*)** %189, align 8
  %191 = icmp eq void (i8*)* %190, null
  br i1 %191, label %195, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.std::__1::function.982", %"class.std::__1::function.982"* %4, i64 0, i32 0, i32 0, i32 0
  %194 = load i8*, i8** %193, align 8
  call void %190(i8* %194) #14
  br label %195

195:                                              ; preds = %187, %192
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #14
  br label %196

196:                                              ; preds = %80, %77, %20, %82, %195, %136
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS8_8FunctionEENKUlPNS8_11InstructionEE_clESE_EUlS2_E_S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Pass"**
  %4 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %4, i64 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %35

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 104) #13
  %15 = bitcast i8* %14 to %"class.spvtools::opt::analysis::DefUseManager"*
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = getelementptr inbounds i8, i8* %14, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 16, i1 false) #14
  %20 = bitcast i8* %19 to i8**
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %14, i64 64
  %22 = getelementptr inbounds i8, i8* %14, i64 96
  %23 = bitcast i8* %22 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %23, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %15, %"class.spvtools::opt::Module"* %13) #14
  %24 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6
  %25 = ptrtoint i8* %14 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.62"* %24 to i64*
  store i64 %25, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %11
  %31 = bitcast %"class.std::__1::unique_ptr.62"* %24 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %31, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %27) #14
  br label %32

32:                                               ; preds = %30, %11
  %33 = load i32, i32* %7, align 8
  %34 = or i32 %33, 1
  store i32 %34, i32* %7, align 8
  br label %35

35:                                               ; preds = %32, %2
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %36, align 8
  %38 = load i32, i32* %1, align 4
  %39 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %37, i32 %38) #14
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = tail call i8* @_Znwm(i64 240) #13
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #14
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #14
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  tail call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %57, %35
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  %67 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 0) #14
  br label %68

68:                                               ; preds = %66, %60
  %69 = phi i32 [ %67, %66 ], [ 0, %60 ]
  %70 = tail call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %69) #14
  %71 = icmp eq %"class.spvtools::opt::analysis::Type"* %70, null
  br i1 %71, label %91, label %72

72:                                               ; preds = %68
  %73 = bitcast %"class.spvtools::opt::analysis::Type"* %70 to %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)***
  %74 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %74, i64 32
  %76 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %75, align 8
  %77 = tail call %"class.spvtools::opt::analysis::Pointer"* %76(%"class.spvtools::opt::analysis::Type"* nonnull %70) #14
  %78 = icmp eq %"class.spvtools::opt::analysis::Pointer"* %77, null
  br i1 %78, label %91, label %79

79:                                               ; preds = %72
  %80 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*** %73, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %80, i64 32
  %82 = load %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)** %81, align 8
  %83 = tail call %"class.spvtools::opt::analysis::Pointer"* %82(%"class.spvtools::opt::analysis::Type"* nonnull %70) #14
  %84 = getelementptr inbounds %"class.spvtools::opt::analysis::Pointer", %"class.spvtools::opt::analysis::Pointer"* %83, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = icmp eq i32 %85, 3
  br i1 %86, label %87, label %91

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %89 = bitcast [8 x i8]* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  store i8 1, i8* %90, align 1
  br label %91

91:                                               ; preds = %68, %72, %79, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #13, !noalias !62
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #14
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1236", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #14
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #15
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #13
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !67

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #13
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #14
  %186 = tail call i8* @_Znwm(i64 4096) #13
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #14
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #14
  %190 = tail call i8* @_Znwm(i64 4096) #13
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #14
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #14
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #15
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #13
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !68

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #13
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #14
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1046"** %342 to %"class.std::__1::__compressed_pair.1043"**
  store %"class.std::__1::__compressed_pair.1043"* %346, %"class.std::__1::__compressed_pair.1043"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #15
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #13
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #13
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #15
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #13
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #13
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1236"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #13
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #14
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1236"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #14
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !69

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !70

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.1236"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1236", %"struct.std::__1::__split_buffer.1236"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #14
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1236"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #15
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #13
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !71

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #13
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_18UpgradeMemoryModel18UpgradeMemoryScopeEvE3$_7S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"class.spvtools::utils::SmallVector", align 8
  %6 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::UpgradeMemoryModel"**
  %7 = load %"class.spvtools::opt::UpgradeMemoryModel"*, %"class.spvtools::opt::UpgradeMemoryModel"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = tail call zeroext i1 @_Z19spvOpcodeIsAtomicOp6SpvOp_(i32 %9) #14
  br i1 %10, label %11, label %64

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  %18 = select i1 %17, i32 1, i32 2
  %19 = xor i1 %17, true
  %20 = zext i1 %19 to i32
  %21 = select i1 %14, i32 %20, i32 %18
  %22 = add nuw nsw i32 %21, 1
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %22) #14
  %24 = tail call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13IsDeviceScopeEj(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 %23) #14
  br i1 %24, label %25, label %170

25:                                               ; preds = %11
  %26 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %26) #14
  %27 = tail call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 5) #14
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %32 = bitcast i32** %30 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %31, %"struct.std::__1::aligned_storage<4, 4>::type"** %32, align 8
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %34 = bitcast %"class.std::__1::unique_ptr.0"* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %31 to i32*
  store i64 1, i64* %29, align 8
  store i32 %27, i32* %35, align 8
  %36 = load i8, i8* %12, align 4, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = load i8, i8* %15, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = select i1 %39, i64 1, i64 2
  %41 = xor i1 %39, true
  %42 = zext i1 %41 to i64
  %43 = select i1 %37, i64 %42, i64 %40
  %44 = add nuw nsw i64 %43, 1
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %46 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %45, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %46, i64 %44, i32 1
  %48 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %47, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %49, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %49, align 8
  %51 = icmp eq %"class.std::__1::vector.3"* %50, null
  br i1 %51, label %63, label %52

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = icmp eq i32* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = ptrtoint i32* %54 to i64
  %58 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %50, i64 0, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast i32* %54 to i8*
  call void @_ZdlPv(i8* %60) #13
  br label %61

61:                                               ; preds = %56, %52
  %62 = bitcast %"class.std::__1::vector.3"* %50 to i8*
  call void @_ZdlPv(i8* %62) #13
  br label %63

63:                                               ; preds = %61, %25
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %26) #14
  br label %170

64:                                               ; preds = %2
  %65 = load i32, i32* %8, align 8
  switch i32 %65, label %170 [
    i32 224, label %66
    i32 225, label %119
  ]

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %72, i32 1, i32 2
  %74 = xor i1 %72, true
  %75 = zext i1 %74 to i32
  %76 = select i1 %69, i32 %75, i32 %73
  %77 = add nuw nsw i32 %76, 1
  %78 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %77) #14
  %79 = tail call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13IsDeviceScopeEj(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 %78) #14
  br i1 %79, label %80, label %170

80:                                               ; preds = %66
  %81 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %81) #14
  %82 = tail call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 5) #14
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %87 = bitcast i32** %85 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %86, %"struct.std::__1::aligned_storage<4, 4>::type"** %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %89 = bitcast %"class.std::__1::unique_ptr.0"* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %86 to i32*
  store i64 1, i64* %84, align 8
  store i32 %82, i32* %90, align 8
  %91 = load i8, i8* %67, align 4, !range !2
  %92 = icmp eq i8 %91, 0
  %93 = load i8, i8* %70, align 1, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = select i1 %94, i64 1, i64 2
  %96 = xor i1 %94, true
  %97 = zext i1 %96 to i64
  %98 = select i1 %92, i64 %97, i64 %95
  %99 = add nuw nsw i64 %98, 1
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %101 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %100, align 8
  %102 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %101, i64 %99, i32 1
  %103 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %102, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %104 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %105 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %104, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %104, align 8
  %106 = icmp eq %"class.std::__1::vector.3"* %105, null
  br i1 %106, label %118, label %107

107:                                              ; preds = %80
  %108 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  %112 = ptrtoint i32* %109 to i64
  %113 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %105, i64 0, i32 0, i32 1
  %114 = bitcast i32** %113 to i64*
  store i64 %112, i64* %114, align 8
  %115 = bitcast i32* %109 to i8*
  call void @_ZdlPv(i8* %115) #13
  br label %116

116:                                              ; preds = %111, %107
  %117 = bitcast %"class.std::__1::vector.3"* %105 to i8*
  call void @_ZdlPv(i8* %117) #13
  br label %118

118:                                              ; preds = %116, %80
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %81) #14
  br label %170

119:                                              ; preds = %64
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %121 = load i8, i8* %120, align 4, !range !2
  %122 = icmp eq i8 %121, 0
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %124 = load i8, i8* %123, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  %126 = select i1 %125, i32 1, i32 2
  %127 = xor i1 %125, true
  %128 = zext i1 %127 to i32
  %129 = select i1 %122, i32 %128, i32 %126
  %130 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %129) #14
  %131 = tail call zeroext i1 @_ZN8spvtools3opt18UpgradeMemoryModel13IsDeviceScopeEj(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 %130) #14
  br i1 %131, label %132, label %170

132:                                              ; preds = %119
  %133 = bitcast %"class.spvtools::utils::SmallVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %133) #14
  %134 = tail call i32 @_ZN8spvtools3opt18UpgradeMemoryModel16GetScopeConstantE9SpvScope_(%"class.spvtools::opt::UpgradeMemoryModel"* %7, i32 5) #14
  %135 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 1
  %137 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 2
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 3, i64 0
  %139 = bitcast i32** %137 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %138, %"struct.std::__1::aligned_storage<4, 4>::type"** %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4
  %141 = bitcast %"class.std::__1::unique_ptr.0"* %140 to i64*
  store i64 0, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %138 to i32*
  store i64 1, i64* %136, align 8
  store i32 %134, i32* %142, align 8
  %143 = load i8, i8* %120, align 4, !range !2
  %144 = icmp eq i8 %143, 0
  %145 = load i8, i8* %123, align 1, !range !2
  %146 = icmp eq i8 %145, 0
  %147 = select i1 %146, i64 1, i64 2
  %148 = xor i1 %146, true
  %149 = zext i1 %148 to i64
  %150 = select i1 %144, i64 %149, i64 %147
  %151 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 0
  %152 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %151, align 8
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %152, i64 %150, i32 1
  %154 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %153, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %5) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %155 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %155, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %155, align 8
  %157 = icmp eq %"class.std::__1::vector.3"* %156, null
  br i1 %157, label %169, label %158

158:                                              ; preds = %132
  %159 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 0
  %160 = load i32*, i32** %159, align 8
  %161 = icmp eq i32* %160, null
  br i1 %161, label %167, label %162

162:                                              ; preds = %158
  %163 = ptrtoint i32* %160 to i64
  %164 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %156, i64 0, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  store i64 %163, i64* %165, align 8
  %166 = bitcast i32* %160 to i8*
  call void @_ZdlPv(i8* %166) #13
  br label %167

167:                                              ; preds = %162, %158
  %168 = bitcast %"class.std::__1::vector.3"* %156 to i8*
  call void @_ZdlPv(i8* %168) #13
  br label %169

169:                                              ; preds = %167, %132
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %133) #14
  br label %170

170:                                              ; preds = %11, %63, %64, %66, %118, %119, %169
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__19make_pairIjRNS_6vectorIjNS_9allocatorIjEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__19make_pairIjRNS_6vectorIjNS_9allocatorIjEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__19make_pairIjRNS_6vectorIjNS_9allocatorIjEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__19make_pairIjRNS_6vectorIjNS_9allocatorIjEEEEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS7_IT0_E4typeEEEOS8_OSB_"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!13 = distinct !{!13, !14, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!20 = distinct !{!20, !16}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !16}
!29 = distinct !{!29, !16}
!30 = distinct !{!30, !27}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !27}
!37 = distinct !{!37, !16}
!38 = distinct !{!38, !16}
!39 = distinct !{!39, !27}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!43 = distinct !{!43, !16}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS4_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!46 = distinct !{!46, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeINS_4pairIjNS_6vectorIjNS_9allocatorIjEEEEEENS2_IbbEEEENS_22__unordered_map_hasherIS7_S9_N8spvtools3opt9CacheHashENS_8equal_toIS7_EELb1EEENS_21__unordered_map_equalIS7_S9_SF_SD_Lb1EEENS4_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS7_EEENSP_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS4_ISW_EEEEEEmOT_DpOT0_"}
!47 = distinct !{!47, !16}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!50 = distinct !{!50, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!51 = distinct !{!51, !52, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt18UpgradeMemoryModel16TraceInstructionEPNS5_11InstructionENS_6vectorIjNS_9allocatorIjEEEEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEESB_EEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_: argument 0"}
!55 = distinct !{!55, !"_ZNSt3__112__hash_tableIPKN8spvtools3opt11InstructionENS_4hashIS5_EENS_8equal_toIS5_EENS_9allocatorIS5_EEE21__construct_node_hashIRKS5_JEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSA_ISJ_EEEEEEmOT_DpOT0_"}
!56 = distinct !{!56, !16}
!57 = !{!58, !60}
!58 = distinct !{!58, !59, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!59 = distinct !{!59, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!60 = distinct !{!60, !61, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!61 = distinct !{!61, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!62 = !{!63, !65}
!63 = distinct !{!63, !64, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!64 = distinct !{!64, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!65 = distinct !{!65, !66, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!66 = distinct !{!66, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZZN8spvtools3opt18UpgradeMemoryModel15UpgradeBarriersEvENK3$_6clEPNS5_8FunctionEEUlPNS5_11InstructionEE_FvSB_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!67 = distinct !{!67, !16}
!68 = distinct !{!68, !16}
!69 = distinct !{!69, !16}
!70 = distinct !{!70, !16}
!71 = distinct !{!71, !16}
