; ModuleID = '../../third_party/leveldatabase/src/db/db_iter.cc'
source_filename = "../../third_party/leveldatabase/src/db/db_iter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.leveldb::DBImpl" = type { %"class.leveldb::DB", %"class.leveldb::Env"*, %"class.leveldb::InternalKeyComparator", %"class.leveldb::InternalFilterPolicy", %"struct.leveldb::Options", i8, i8, %"class.std::__1::basic_string", %"class.leveldb::TableCache"*, %"class.leveldb::FileLock"*, %"class.leveldb::port::Mutex", %"struct.std::__1::atomic", [7 x i8], %"class.leveldb::port::CondVar", %"class.leveldb::MemTable"*, %"class.leveldb::MemTable"*, %"struct.std::__1::atomic", %"class.leveldb::WritableFile"*, i64, %"class.leveldb::log::Writer"*, i32, %"class.std::__1::deque", %"class.leveldb::WriteBatch"*, %"class.leveldb::SnapshotList", %"class.std::__1::set", i8, %"struct.leveldb::DBImpl::ManualCompaction"*, %"class.leveldb::VersionSet"*, %"class.leveldb::Status", [7 x %"struct.leveldb::DBImpl::CompactionStats"] }
%"class.leveldb::DB" = type { i32 (...)** }
%"class.leveldb::Env" = type { i32 (...)** }
%"class.leveldb::InternalKeyComparator" = type { %"class.leveldb::Comparator", %"class.leveldb::Comparator"* }
%"class.leveldb::Comparator" = type { i32 (...)** }
%"class.leveldb::InternalFilterPolicy" = type { %"class.leveldb::FilterPolicy", %"class.leveldb::FilterPolicy"* }
%"class.leveldb::FilterPolicy" = type { i32 (...)** }
%"struct.leveldb::Options" = type { %"class.leveldb::Comparator"*, i8, i8, i8, %"class.leveldb::Env"*, %"class.leveldb::Logger"*, i64, i32, %"class.leveldb::Cache"*, i64, i32, i64, i32, i8, %"class.leveldb::FilterPolicy"* }
%"class.leveldb::Logger" = type { i32 (...)** }
%"class.leveldb::Cache" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.leveldb::TableCache" = type opaque
%"class.leveldb::FileLock" = type { i32 (...)** }
%"class.leveldb::port::Mutex" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.leveldb::port::CondVar" = type { %"class.base::ConditionVariable" }
%"class.base::ConditionVariable" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t*, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.3, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.3 = type { i64 }
%"class.leveldb::MemTable" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.leveldb::WritableFile" = type { i32 (...)** }
%"class.leveldb::log::Writer" = type { %"class.leveldb::WritableFile"*, i32, [5 x i32] }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.10" }
%"struct.std::__1::__split_buffer" = type { %"struct.leveldb::DBImpl::Writer"***, %"struct.leveldb::DBImpl::Writer"***, %"struct.leveldb::DBImpl::Writer"***, %"class.std::__1::__compressed_pair.5" }
%"struct.leveldb::DBImpl::Writer" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.leveldb::DBImpl::Writer"*** }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i64 }
%"class.leveldb::WriteBatch" = type opaque
%"class.leveldb::SnapshotList" = type { %"class.leveldb::SnapshotImpl" }
%"class.leveldb::SnapshotImpl" = type { %"class.leveldb::Snapshot", %"class.leveldb::SnapshotImpl"*, %"class.leveldb::SnapshotImpl"*, i64 }
%"class.leveldb::Snapshot" = type { i32 (...)** }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.leveldb::DBImpl::ManualCompaction" = type { i32, i8, %"class.leveldb::InternalKey"*, %"class.leveldb::InternalKey"*, %"class.leveldb::InternalKey" }
%"class.leveldb::InternalKey" = type { %"class.std::__1::basic_string" }
%"class.leveldb::VersionSet" = type opaque
%"class.leveldb::Status" = type { i8* }
%"struct.leveldb::DBImpl::CompactionStats" = type { i64, i64, i64 }
%"class.leveldb::Iterator" = type { i32 (...)**, %"struct.leveldb::Iterator::CleanupNode" }
%"struct.leveldb::Iterator::CleanupNode" = type { void (i8*, i8*)*, i8*, i8*, %"struct.leveldb::Iterator::CleanupNode"* }
%"class.leveldb::(anonymous namespace)::DBIter" = type { %"class.leveldb::Iterator", %"class.leveldb::DBImpl"*, %"class.leveldb::Comparator"*, %"class.leveldb::Iterator"*, i64, %"class.leveldb::Status", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i8, %"class.leveldb::Random", i64 }
%"class.leveldb::Random" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.leveldb::Slice" = type { i8*, i64 }
%"struct.leveldb::ParsedInternalKey" = type <{ %"class.leveldb::Slice", i64, i32, [4 x i8] }>

@_ZTVN7leveldb12_GLOBAL__N_16DBIterE = internal unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIterD2Ev to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIterD0Ev to i8*), i8* bitcast (i1 (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZNK7leveldb12_GLOBAL__N_16DBIter5ValidEv to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIter11SeekToFirstEv to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIter10SeekToLastEv to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*, %"class.leveldb::Slice"*)* @_ZN7leveldb12_GLOBAL__N_16DBIter4SeekERKNS_5SliceE to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIter4NextEv to i8*), i8* bitcast (void (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZN7leveldb12_GLOBAL__N_16DBIter4PrevEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZNK7leveldb12_GLOBAL__N_16DBIter3keyEv to i8*), i8* bitcast ({ i8*, i64 } (%"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZNK7leveldb12_GLOBAL__N_16DBIter5valueEv to i8*), i8* bitcast (void (%"class.leveldb::Status"*, %"class.leveldb::(anonymous namespace)::DBIter"*)* @_ZNK7leveldb12_GLOBAL__N_16DBIter6statusEv to i8*)] }, align 8
@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"corrupted internal key in DBIter\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.leveldb::Iterator"* @_ZN7leveldb13NewDBIteratorEPNS_6DBImplEPKNS_10ComparatorEPNS_8IteratorEmj(%"class.leveldb::DBImpl"*, %"class.leveldb::Comparator"*, %"class.leveldb::Iterator"*, i64, i32) local_unnamed_addr #0 {
  %6 = tail call i8* @_Znwm(i64 152) #9
  %7 = bitcast i8* %6 to %"class.leveldb::Iterator"*
  tail call void @_ZN7leveldb8IteratorC2Ev(%"class.leveldb::Iterator"* nonnull %7) #10
  %8 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb12_GLOBAL__N_16DBIterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %6, i64 40
  %10 = bitcast i8* %9 to %"class.leveldb::DBImpl"**
  store %"class.leveldb::DBImpl"* %0, %"class.leveldb::DBImpl"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 48
  %12 = bitcast i8* %11 to %"class.leveldb::Comparator"**
  store %"class.leveldb::Comparator"* %1, %"class.leveldb::Comparator"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %6, i64 56
  %14 = bitcast i8* %13 to %"class.leveldb::Iterator"**
  store %"class.leveldb::Iterator"* %2, %"class.leveldb::Iterator"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 64
  %16 = bitcast i8* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 72
  %18 = getelementptr inbounds i8, i8* %6, i64 136
  %19 = bitcast i8* %18 to i32*
  %20 = and i32 %4, 2147483647
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 61, i1 false) #10
  store i32 %20, i32* %19, align 4
  switch i32 %20, label %22 [
    i32 0, label %21
    i32 2147483647, label %21
  ]

21:                                               ; preds = %5, %5
  store i32 1, i32* %19, align 4
  br label %22

22:                                               ; preds = %5, %21
  %23 = phi i32 [ %20, %5 ], [ 1, %21 ]
  %24 = getelementptr inbounds i8, i8* %6, i64 144
  %25 = bitcast i8* %24 to i64*
  %26 = zext i32 %23 to i64
  %27 = mul nuw nsw i64 %26, 16807
  %28 = lshr i64 %27, 31
  %29 = and i64 %27, 2147483647
  %30 = add nuw nsw i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = icmp slt i32 %31, 0
  %33 = add i32 %31, -2147483647
  %34 = select i1 %32, i32 %33, i32 %31
  store i32 %34, i32* %19, align 4
  %35 = and i32 %34, 2097151
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %25, align 8
  ret %"class.leveldb::Iterator"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN7leveldb8IteratorC2Ev(%"class.leveldb::Iterator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIterD2Ev(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb12_GLOBAL__N_16DBIterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %4 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %3, align 8
  %5 = icmp eq %"class.leveldb::Iterator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.leveldb::Iterator"* %4 to void (%"class.leveldb::Iterator"*)***
  %8 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %8, i64 1
  %10 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %9, align 8
  tail call void %10(%"class.leveldb::Iterator"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 5, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZdaPv(i8* nonnull %31) #9
  br label %34

34:                                               ; preds = %29, %33
  %35 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 0
  tail call void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"* %35) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIterD0Ev(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN7leveldb12_GLOBAL__N_16DBIterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %4 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %3, align 8
  %5 = icmp eq %"class.leveldb::Iterator"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.leveldb::Iterator"* %4 to void (%"class.leveldb::Iterator"*)***
  %8 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %8, i64 1
  %10 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %9, align 8
  tail call void %10(%"class.leveldb::Iterator"* nonnull %4) #10
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %17, %11
  %21 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %26, %20
  %30 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 5, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  tail call void @_ZdaPv(i8* nonnull %31) #9
  br label %34

34:                                               ; preds = %29, %33
  %35 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 0
  tail call void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"* %35) #10
  %36 = bitcast %"class.leveldb::(anonymous namespace)::DBIter"* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #9
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK7leveldb12_GLOBAL__N_16DBIter5ValidEv(%"class.leveldb::(anonymous namespace)::DBIter"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIter11SeekToFirstEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  %13 = icmp ugt i64 %12, 1048576
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  br i1 %13, label %16, label %22

16:                                               ; preds = %8
  %17 = lshr i64 %10, 56
  %18 = trunc i64 %17 to i8
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  br i1 %19, label %21, label %26

21:                                               ; preds = %16
  tail call void @_ZdlPv(i8* %15) #9
  br label %26

22:                                               ; preds = %8
  store i8 0, i8* %15, align 1
  %23 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %26

24:                                               ; preds = %1
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  store i8 0, i8* %25, align 1
  store i8 0, i8* %5, align 1
  br label %26

26:                                               ; preds = %16, %21, %22, %24
  %27 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %28 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %27, align 8
  %29 = bitcast %"class.leveldb::Iterator"* %28 to void (%"class.leveldb::Iterator"*)***
  %30 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %30, i64 3
  %32 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %31, align 8
  tail call void %32(%"class.leveldb::Iterator"* %28) #10
  %33 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %27, align 8
  %34 = bitcast %"class.leveldb::Iterator"* %33 to i1 (%"class.leveldb::Iterator"*)***
  %35 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %35, i64 2
  %37 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.leveldb::Iterator"* %33) #10
  br i1 %38, label %39, label %41

39:                                               ; preds = %26
  %40 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  tail call fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindNextUserEntryEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.leveldb::(anonymous namespace)::DBIter"* %0, i1 zeroext false, %"class.std::__1::basic_string"* %40)
  br label %43

41:                                               ; preds = %26
  %42 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %42, align 4
  br label %43

43:                                               ; preds = %41, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIter10SeekToLastEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %24

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = and i64 %10, 9223372036854775807
  %12 = add nsw i64 %11, -1
  %13 = icmp ugt i64 %12, 1048576
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  br i1 %13, label %16, label %22

16:                                               ; preds = %8
  %17 = lshr i64 %10, 56
  %18 = trunc i64 %17 to i8
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  br i1 %19, label %21, label %26

21:                                               ; preds = %16
  tail call void @_ZdlPv(i8* %15) #9
  br label %26

22:                                               ; preds = %8
  store i8 0, i8* %15, align 1
  %23 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %23, align 8
  br label %26

24:                                               ; preds = %1
  %25 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  store i8 0, i8* %25, align 1
  store i8 0, i8* %5, align 1
  br label %26

26:                                               ; preds = %16, %21, %22, %24
  %27 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %28 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %27, align 8
  %29 = bitcast %"class.leveldb::Iterator"* %28 to void (%"class.leveldb::Iterator"*)***
  %30 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %30, i64 4
  %32 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %31, align 8
  tail call void %32(%"class.leveldb::Iterator"* %28) #10
  tail call fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindPrevUserEntryEv(%"class.leveldb::(anonymous namespace)::DBIter"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIter4SeekERKNS_5SliceE(%"class.leveldb::(anonymous namespace)::DBIter"*, %"class.leveldb::Slice"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.leveldb::ParsedInternalKey", align 8
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 9223372036854775807
  %15 = add nsw i64 %14, -1
  %16 = icmp ugt i64 %15, 1048576
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br i1 %16, label %19, label %25

19:                                               ; preds = %11
  %20 = lshr i64 %13, 56
  %21 = trunc i64 %20 to i8
  %22 = icmp slt i8 %21, 0
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #10
  br i1 %22, label %24, label %29

24:                                               ; preds = %19
  tail call void @_ZdlPv(i8* %18) #9
  br label %29

25:                                               ; preds = %11
  store i8 0, i8* %18, align 1
  %26 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %26, align 8
  br label %29

27:                                               ; preds = %2
  %28 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  store i8 0, i8* %28, align 1
  store i8 0, i8* %8, align 1
  br label %29

29:                                               ; preds = %19, %24, %25, %27
  %30 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %38, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  br label %42

40:                                               ; preds = %29
  %41 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  store i8 0, i8* %41, align 1
  store i8 0, i8* %32, align 1
  br label %42

42:                                               ; preds = %35, %40
  %43 = phi i8* [ %39, %35 ], [ %41, %40 ]
  %44 = bitcast %"struct.leveldb::ParsedInternalKey"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #10
  %45 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 4
  %46 = bitcast %"class.leveldb::Slice"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %46, i64 16, i1 false) #10
  %47 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %3, i64 0, i32 1
  %48 = load i64, i64* %45, align 8
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %3, i64 0, i32 2
  store i32 1, i32* %49, align 8
  call void @_ZN7leveldb17AppendInternalKeyEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_17ParsedInternalKeyE(%"class.std::__1::basic_string"* %30, %"struct.leveldb::ParsedInternalKey"* nonnull dereferenceable(32) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #10
  %50 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %51 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %50, align 8
  %52 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  %54 = load i8, i8* %32, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = select i1 %55, i8* %57, i8* %43
  store i8* %58, i8** %53, align 8
  %59 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  %60 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = zext i8 %54 to i64
  %63 = select i1 %55, i64 %61, i64 %62
  store i64 %63, i64* %59, align 8
  %64 = bitcast %"class.leveldb::Iterator"* %51 to void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)***
  %65 = load void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)**, void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)** %65, i64 5
  %67 = load void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)*, void (%"class.leveldb::Iterator"*, %"class.leveldb::Slice"*)** %66, align 8
  call void %67(%"class.leveldb::Iterator"* %51, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #10
  %68 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %50, align 8
  %69 = bitcast %"class.leveldb::Iterator"* %68 to i1 (%"class.leveldb::Iterator"*)***
  %70 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %70, i64 2
  %72 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %71, align 8
  %73 = call zeroext i1 %72(%"class.leveldb::Iterator"* %68) #10
  br i1 %73, label %74, label %75

74:                                               ; preds = %42
  call fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindNextUserEntryEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.leveldb::(anonymous namespace)::DBIter"* %0, i1 zeroext false, %"class.std::__1::basic_string"* %30)
  br label %77

75:                                               ; preds = %42
  %76 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %76, align 4
  br label %77

77:                                               ; preds = %75, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIter4NextEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %42

5:                                                ; preds = %1
  store i32 0, i32* %2, align 8
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %7 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %8 = bitcast %"class.leveldb::Iterator"* %7 to i1 (%"class.leveldb::Iterator"*)***
  %9 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %9, i64 2
  %11 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.leveldb::Iterator"* %7) #10
  %13 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %14 = bitcast %"class.leveldb::Iterator"* %13 to void (%"class.leveldb::Iterator"*)***
  %15 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %14, align 8
  br i1 %12, label %19, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %15, i64 3
  %18 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %17, align 8
  tail call void %18(%"class.leveldb::Iterator"* %13) #10
  br label %22

19:                                               ; preds = %5
  %20 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %15, i64 6
  %21 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %20, align 8
  tail call void %21(%"class.leveldb::Iterator"* %13) #10
  br label %22

22:                                               ; preds = %19, %16
  %23 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %24 = bitcast %"class.leveldb::Iterator"* %23 to i1 (%"class.leveldb::Iterator"*)***
  %25 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %25, i64 2
  %27 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.leveldb::Iterator"* %23) #10
  br i1 %28, label %101, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %30, align 4
  %31 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %39, align 8
  br label %103

40:                                               ; preds = %29
  %41 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  store i8 0, i8* %41, align 1
  store i8 0, i8* %33, align 1
  br label %103

42:                                               ; preds = %1
  %43 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %44 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %43, align 8
  %45 = bitcast %"class.leveldb::Iterator"* %44 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %46 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %45, align 8
  %47 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %46, i64 8
  %48 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %47, align 8
  %49 = tail call { i8*, i64 } %48(%"class.leveldb::Iterator"* %44) #10
  %50 = extractvalue { i8*, i64 } %49, 1
  %51 = add i64 %50, -8
  %52 = extractvalue { i8*, i64 } %49, 0
  %53 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %54 = tail call i1 @llvm.is.constant.i64(i64 %51) #10
  %55 = icmp ult i64 %51, 23
  %56 = and i1 %54, %55
  br i1 %56, label %57, label %75

57:                                               ; preds = %42
  %58 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %51, i64* %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  br label %69

66:                                               ; preds = %57
  %67 = trunc i64 %51 to i8
  store i8 %67, i8* %59, align 1
  %68 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  br label %69

69:                                               ; preds = %66, %62
  %70 = phi i8* [ %65, %62 ], [ %68, %66 ]
  %71 = icmp eq i64 %51, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %70, i8* align 1 %52, i64 %51, i1 false) #10
  br label %73

73:                                               ; preds = %72, %69
  %74 = getelementptr inbounds i8, i8* %70, i64 %51
  store i8 0, i8* %74, align 1
  br label %77

75:                                               ; preds = %42
  %76 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %53, i8* %52, i64 %51) #10
  br label %77

77:                                               ; preds = %73, %75
  %78 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %43, align 8
  %79 = bitcast %"class.leveldb::Iterator"* %78 to void (%"class.leveldb::Iterator"*)***
  %80 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %80, i64 6
  %82 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %81, align 8
  tail call void %82(%"class.leveldb::Iterator"* %78) #10
  %83 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %43, align 8
  %84 = bitcast %"class.leveldb::Iterator"* %83 to i1 (%"class.leveldb::Iterator"*)***
  %85 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %85, i64 2
  %87 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.leveldb::Iterator"* %83) #10
  br i1 %88, label %101, label %89

89:                                               ; preds = %77
  %90 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %90, align 4
  %91 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  store i8 0, i8* %97, align 1
  %98 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %98, align 8
  br label %103

99:                                               ; preds = %89
  %100 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  store i8 0, i8* %100, align 1
  store i8 0, i8* %92, align 1
  br label %103

101:                                              ; preds = %77, %22
  %102 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  tail call fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindNextUserEntryEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.leveldb::(anonymous namespace)::DBIter"* %0, i1 zeroext true, %"class.std::__1::basic_string"* %102)
  br label %103

103:                                              ; preds = %99, %95, %40, %36, %101
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7leveldb12_GLOBAL__N_16DBIter4PrevEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.leveldb::Slice", align 8
  %3 = alloca %"class.leveldb::Slice", align 8
  %4 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %124

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %9 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %8, align 8
  %10 = bitcast %"class.leveldb::Iterator"* %9 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %11 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %10, align 8
  %12 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %11, i64 8
  %13 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %12, align 8
  %14 = tail call { i8*, i64 } %13(%"class.leveldb::Iterator"* %9) #10
  %15 = extractvalue { i8*, i64 } %14, 1
  %16 = add i64 %15, -8
  %17 = extractvalue { i8*, i64 } %14, 0
  %18 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %19 = tail call i1 @llvm.is.constant.i64(i64 %16) #10
  %20 = icmp ult i64 %16, 23
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %7
  %23 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %16, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  br label %34

31:                                               ; preds = %22
  %32 = trunc i64 %16 to i8
  store i8 %32, i8* %24, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi i8* [ %30, %27 ], [ %33, %31 ]
  %36 = icmp eq i64 %16, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 %17, i64 %16, i1 false) #10
  br label %38

38:                                               ; preds = %37, %34
  %39 = getelementptr inbounds i8, i8* %35, i64 %16
  store i8 0, i8* %39, align 1
  br label %43

40:                                               ; preds = %7
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %17, i64 %16) #10
  %42 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %43

43:                                               ; preds = %38, %40
  %44 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %38 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 2
  %46 = bitcast %"class.leveldb::Slice"* %2 to i8*
  %47 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 0
  %48 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %2, i64 0, i32 1
  %49 = bitcast %"class.leveldb::Slice"* %3 to i8*
  %50 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %54 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 1
  %55 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %56

56:                                               ; preds = %99, %43
  %57 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %8, align 8
  %58 = bitcast %"class.leveldb::Iterator"* %57 to void (%"class.leveldb::Iterator"*)***
  %59 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %59, i64 7
  %61 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %60, align 8
  call void %61(%"class.leveldb::Iterator"* %57) #10
  %62 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %8, align 8
  %63 = bitcast %"class.leveldb::Iterator"* %62 to i1 (%"class.leveldb::Iterator"*)***
  %64 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %63, align 8
  %65 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %64, i64 2
  %66 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %65, align 8
  %67 = call zeroext i1 %66(%"class.leveldb::Iterator"* %62) #10
  br i1 %67, label %99, label %68

68:                                               ; preds = %56
  %69 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %69, align 4
  %70 = load i8, i8* %51, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = load i8*, i8** %52, align 8
  store i8 0, i8* %73, align 1
  store i64 0, i64* %55, align 8
  br label %75

74:                                               ; preds = %68
  store i8 0, i8* %53, align 1
  store i8 0, i8* %51, align 1
  br label %75

75:                                               ; preds = %72, %74
  %76 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %77 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %97

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, 9223372036854775807
  %85 = add nsw i64 %84, -1
  %86 = icmp ugt i64 %85, 1048576
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  br i1 %86, label %89, label %95

89:                                               ; preds = %81
  %90 = lshr i64 %83, 56
  %91 = trunc i64 %90 to i8
  %92 = icmp slt i8 %91, 0
  %93 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #10
  br i1 %92, label %94, label %125

94:                                               ; preds = %89
  call void @_ZdlPv(i8* %88) #9
  br label %125

95:                                               ; preds = %81
  store i8 0, i8* %88, align 1
  %96 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %96, align 8
  br label %125

97:                                               ; preds = %75
  %98 = bitcast %"class.std::__1::basic_string"* %76 to i8*
  store i8 0, i8* %98, align 1
  store i8 0, i8* %78, align 1
  br label %125

99:                                               ; preds = %56
  %100 = load %"class.leveldb::Comparator"*, %"class.leveldb::Comparator"** %45, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #10
  %101 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %8, align 8
  %102 = bitcast %"class.leveldb::Iterator"* %101 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %103 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %102, align 8
  %104 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %103, i64 8
  %105 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %104, align 8
  %106 = call { i8*, i64 } %105(%"class.leveldb::Iterator"* %101) #10
  %107 = extractvalue { i8*, i64 } %106, 1
  %108 = add i64 %107, -8
  %109 = extractvalue { i8*, i64 } %106, 0
  store i8* %109, i8** %47, align 8
  store i64 %108, i64* %48, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #10
  %110 = load i8, i8* %51, align 1
  %111 = icmp slt i8 %110, 0
  %112 = load i8*, i8** %52, align 8
  %113 = select i1 %111, i8* %112, i8* %53
  store i8* %113, i8** %50, align 8
  %114 = load i64, i64* %55, align 8
  %115 = zext i8 %110 to i64
  %116 = select i1 %111, i64 %114, i64 %115
  store i64 %116, i64* %54, align 8
  %117 = bitcast %"class.leveldb::Comparator"* %100 to i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %118 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %118, i64 2
  %120 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %119, align 8
  %121 = call i32 %120(%"class.leveldb::Comparator"* %100, %"class.leveldb::Slice"* nonnull dereferenceable(16) %2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %3) #10
  %122 = icmp slt i32 %121, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #10
  br i1 %122, label %123, label %56

123:                                              ; preds = %99
  store i32 1, i32* %4, align 8
  br label %124

124:                                              ; preds = %123, %1
  call fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindPrevUserEntryEv(%"class.leveldb::(anonymous namespace)::DBIter"* %0)
  br label %125

125:                                              ; preds = %97, %95, %94, %89, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal { i8*, i64 } @_ZNK7leveldb12_GLOBAL__N_16DBIter3keyEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %16

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %7 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %8 = bitcast %"class.leveldb::Iterator"* %7 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %9 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %9, i64 8
  %11 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %10, align 8
  %12 = tail call { i8*, i64 } %11(%"class.leveldb::Iterator"* %7) #10
  %13 = extractvalue { i8*, i64 } %12, 1
  %14 = add i64 %13, -8
  %15 = extractvalue { i8*, i64 } %12, 0
  br label %30

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = select i1 %21, i8* %23, i8* %24
  %26 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %20 to i64
  %29 = select i1 %21, i64 %27, i64 %28
  br label %30

30:                                               ; preds = %16, %5
  %31 = phi i8* [ %15, %5 ], [ %25, %16 ]
  %32 = phi i64 [ %14, %5 ], [ %29, %16 ]
  %33 = insertvalue { i8*, i64 } undef, i8* %31, 0
  %34 = insertvalue { i8*, i64 } %33, i64 %32, 1
  ret { i8*, i64 } %34
}

; Function Attrs: nounwind ssp uwtable
define internal { i8*, i64 } @_ZNK7leveldb12_GLOBAL__N_16DBIter5valueEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %7 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %8 = bitcast %"class.leveldb::Iterator"* %7 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %9 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %9, i64 9
  %11 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %10, align 8
  %12 = tail call { i8*, i64 } %11(%"class.leveldb::Iterator"* %7) #10
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = extractvalue { i8*, i64 } %12, 1
  br label %29

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  br label %29

29:                                               ; preds = %15, %5
  %30 = phi i64 [ %14, %5 ], [ %28, %15 ]
  %31 = phi i8* [ %13, %5 ], [ %24, %15 ]
  %32 = insertvalue { i8*, i64 } undef, i8* %31, 0
  %33 = insertvalue { i8*, i64 } %32, i64 %30, 1
  ret { i8*, i64 } %33
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK7leveldb12_GLOBAL__N_16DBIter6statusEv(%"class.leveldb::Status"* noalias sret, %"class.leveldb::(anonymous namespace)::DBIter"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %1, i64 0, i32 5, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %1, i64 0, i32 3
  %8 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %7, align 8
  %9 = bitcast %"class.leveldb::Iterator"* %8 to void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)***
  %10 = load void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)**, void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)*, void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)** %10, i64 10
  %12 = load void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)*, void (%"class.leveldb::Status"*, %"class.leveldb::Iterator"*)** %11, align 8
  tail call void %12(%"class.leveldb::Status"* sret %0, %"class.leveldb::Iterator"* %8) #10
  br label %16

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7leveldb6Status9CopyStateEPKc(i8* nonnull %4) #10
  %15 = getelementptr inbounds %"class.leveldb::Status", %"class.leveldb::Status"* %0, i64 0, i32 0
  store i8* %14, i8** %15, align 8
  br label %16

16:                                               ; preds = %13, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind
declare void @_ZN7leveldb8IteratorD2Ev(%"class.leveldb::Iterator"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindNextUserEntryEbPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.leveldb::(anonymous namespace)::DBIter"* nocapture, i1 zeroext, %"class.std::__1::basic_string"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.leveldb::ParsedInternalKey", align 8
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = zext i1 %1 to i8
  %7 = bitcast %"struct.leveldb::ParsedInternalKey"* %4 to i8*
  %8 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 0
  %9 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 2
  %13 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 4
  %14 = bitcast %"class.leveldb::Slice"* %5 to i8*
  %15 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %4, i64 0, i32 1
  %25 = bitcast i64* %24 to i8*
  br label %26

26:                                               ; preds = %89, %3
  %27 = phi i8 [ %6, %3 ], [ %90, %89 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  store i64 0, i64* %10, align 8
  %28 = call fastcc zeroext i1 @_ZN7leveldb12_GLOBAL__N_16DBIter8ParseKeyEPNS_17ParsedInternalKeyE(%"class.leveldb::(anonymous namespace)::DBIter"* %0, %"struct.leveldb::ParsedInternalKey"* nonnull %4)
  br i1 %28, label %29, label %89

29:                                               ; preds = %26
  %30 = load i64, i64* %11, align 8
  %31 = load i64, i64* %13, align 8
  %32 = icmp ugt i64 %30, %31
  br i1 %32, label %89, label %33

33:                                               ; preds = %29
  %34 = load i32, i32* %12, align 8
  switch i32 %34, label %89 [
    i32 0, label %35
    i32 1, label %56
  ]

35:                                               ; preds = %33
  %36 = load i8*, i8** %9, align 8
  %37 = load i64, i64* %10, align 8
  %38 = call i1 @llvm.is.constant.i64(i64 %37) #10
  %39 = icmp ult i64 %37, 23
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %54

41:                                               ; preds = %35
  %42 = load i8, i8* %18, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  store i64 %37, i64* %22, align 8
  %45 = load i8*, i8** %19, align 8
  br label %48

46:                                               ; preds = %41
  %47 = trunc i64 %37 to i8
  store i8 %47, i8* %18, align 1
  br label %48

48:                                               ; preds = %46, %44
  %49 = phi i8* [ %45, %44 ], [ %20, %46 ]
  %50 = icmp eq i64 %37, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %48
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %36, i64 %37, i1 false) #10
  br label %52

52:                                               ; preds = %51, %48
  %53 = getelementptr inbounds i8, i8* %49, i64 %37
  store i8 0, i8* %53, align 1
  br label %89

54:                                               ; preds = %35
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %2, i8* %36, i64 %37) #10
  br label %89

56:                                               ; preds = %33
  %57 = and i8 %27, 1
  %58 = icmp eq i8 %57, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  br i1 %58, label %74, label %59

59:                                               ; preds = %56
  %60 = load %"class.leveldb::Comparator"*, %"class.leveldb::Comparator"** %15, align 8
  %61 = load i8, i8* %18, align 1
  %62 = icmp slt i8 %61, 0
  %63 = load i8*, i8** %19, align 8
  %64 = select i1 %62, i8* %63, i8* %20
  store i8* %64, i8** %16, align 8
  %65 = load i64, i64* %22, align 8
  %66 = zext i8 %61 to i64
  %67 = select i1 %62, i64 %65, i64 %66
  store i64 %67, i64* %21, align 8
  %68 = bitcast %"class.leveldb::Comparator"* %60 to i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %69 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %69, i64 2
  %71 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %70, align 8
  %72 = call i32 %71(%"class.leveldb::Comparator"* %60, %"class.leveldb::Slice"* nonnull dereferenceable(16) %8, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5) #10
  %73 = icmp slt i32 %72, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br i1 %73, label %89, label %75

74:                                               ; preds = %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %75

75:                                               ; preds = %59, %74
  %76 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 1, i8* %76, align 4
  %77 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %78 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  store i8 0, i8* %84, align 1
  %85 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %85, align 8
  br label %88

86:                                               ; preds = %75
  %87 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  store i8 0, i8* %87, align 1
  store i8 0, i8* %79, align 1
  br label %88

88:                                               ; preds = %82, %86
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  br label %116

89:                                               ; preds = %54, %52, %29, %33, %59, %26
  %90 = phi i8 [ %27, %33 ], [ %27, %59 ], [ %27, %29 ], [ %27, %26 ], [ 1, %52 ], [ 1, %54 ]
  %91 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %23, align 8
  %92 = bitcast %"class.leveldb::Iterator"* %91 to void (%"class.leveldb::Iterator"*)***
  %93 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %93, i64 6
  %95 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %94, align 8
  call void %95(%"class.leveldb::Iterator"* %91) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  %96 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %23, align 8
  %97 = bitcast %"class.leveldb::Iterator"* %96 to i1 (%"class.leveldb::Iterator"*)***
  %98 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %98, i64 2
  %100 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %99, align 8
  %101 = call zeroext i1 %100(%"class.leveldb::Iterator"* %96) #10
  br i1 %101, label %26, label %102

102:                                              ; preds = %89
  %103 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  store i8 0, i8* %110, align 1
  %111 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %111, align 8
  br label %114

112:                                              ; preds = %102
  %113 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  store i8 0, i8* %113, align 1
  store i8 0, i8* %105, align 1
  br label %114

114:                                              ; preds = %108, %112
  %115 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  store i8 0, i8* %115, align 4
  br label %116

116:                                              ; preds = %88, %114
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN7leveldb12_GLOBAL__N_16DBIter8ParseKeyEPNS_17ParsedInternalKeyE(%"class.leveldb::(anonymous namespace)::DBIter"* nocapture, %"struct.leveldb::ParsedInternalKey"* nocapture) unnamed_addr #7 align 2 {
  %3 = alloca %"class.leveldb::Status", align 8
  %4 = alloca %"class.leveldb::Slice", align 8
  %5 = alloca %"class.leveldb::Slice", align 8
  %6 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %7 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %8 = bitcast %"class.leveldb::Iterator"* %7 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %9 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %8, align 8
  %10 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %9, i64 8
  %11 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %10, align 8
  %12 = tail call { i8*, i64 } %11(%"class.leveldb::Iterator"* %7) #10
  %13 = extractvalue { i8*, i64 } %12, 0
  %14 = ptrtoint i8* %13 to i64
  %15 = extractvalue { i8*, i64 } %12, 1
  %16 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %6, align 8
  %17 = bitcast %"class.leveldb::Iterator"* %16 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %18 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %17, align 8
  %19 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %18, i64 9
  %20 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %19, align 8
  %21 = tail call { i8*, i64 } %20(%"class.leveldb::Iterator"* %16) #10
  %22 = extractvalue { i8*, i64 } %21, 1
  %23 = add i64 %22, %15
  %24 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 11
  %25 = load i64, i64* %24, align 8
  %26 = icmp ult i64 %25, %23
  br i1 %26, label %27, label %48

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 10, i32 0
  %29 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 1
  br label %30

30:                                               ; preds = %27, %30
  %31 = phi i64 [ %25, %27 ], [ %46, %30 ]
  %32 = load i32, i32* %28, align 4
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 16807
  %35 = lshr i64 %34, 31
  %36 = and i64 %34, 2147483647
  %37 = add nuw nsw i64 %35, %36
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %38, 0
  %40 = add i32 %38, -2147483647
  %41 = select i1 %39, i32 %40, i32 %38
  store i32 %41, i32* %28, align 4
  %42 = and i32 %41, 2097151
  %43 = zext i32 %42 to i64
  %44 = add i64 %31, %43
  store i64 %44, i64* %24, align 8
  %45 = load %"class.leveldb::DBImpl"*, %"class.leveldb::DBImpl"** %29, align 8
  tail call void @_ZN7leveldb6DBImpl16RecordReadSampleENS_5SliceE(%"class.leveldb::DBImpl"* %45, i8* %13, i64 %15) #10
  %46 = load i64, i64* %24, align 8
  %47 = icmp ult i64 %46, %23
  br i1 %47, label %30, label %48

48:                                               ; preds = %30, %2
  %49 = phi i64 [ %25, %2 ], [ %46, %30 ]
  %50 = sub i64 %49, %23
  store i64 %50, i64* %24, align 8
  %51 = icmp ult i64 %15, 8
  br i1 %51, label %96, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds i8, i8* %13, i64 %15
  %54 = getelementptr inbounds i8, i8* %53, i64 -8
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds i8, i8* %54, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds i8, i8* %54, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %58
  %64 = getelementptr inbounds i8, i8* %54, i64 3
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i64
  %67 = shl nuw nsw i64 %66, 16
  %68 = or i64 %63, %67
  %69 = getelementptr inbounds i8, i8* %54, i64 4
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i64
  %72 = shl nuw nsw i64 %71, 24
  %73 = or i64 %68, %72
  %74 = getelementptr inbounds i8, i8* %54, i64 5
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = shl nuw nsw i64 %76, 32
  %78 = or i64 %73, %77
  %79 = getelementptr inbounds i8, i8* %54, i64 6
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i64
  %82 = shl nuw nsw i64 %81, 40
  %83 = or i64 %78, %82
  %84 = getelementptr inbounds i8, i8* %54, i64 7
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i64
  %87 = shl nuw nsw i64 %86, 48
  %88 = or i64 %83, %87
  %89 = zext i8 %55 to i32
  %90 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %1, i64 0, i32 1
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %1, i64 0, i32 2
  store i32 %89, i32* %91, align 8
  %92 = add i64 %15, -8
  %93 = bitcast %"struct.leveldb::ParsedInternalKey"* %1 to i64*
  store i64 %14, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %1, i64 0, i32 0, i32 1
  store i64 %92, i64* %94, align 8
  %95 = icmp ult i8 %55, 2
  br i1 %95, label %113, label %96

96:                                               ; preds = %48, %52
  %97 = bitcast %"class.leveldb::Status"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #10
  %98 = bitcast %"class.leveldb::Slice"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  %99 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %4, i64 0, i32 1
  store i64 32, i64* %100, align 8
  %101 = bitcast %"class.leveldb::Slice"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %102, align 8
  %103 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %5, i64 0, i32 1
  store i64 0, i64* %103, align 8
  call void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"* nonnull %3, i32 2, %"class.leveldb::Slice"* nonnull dereferenceable(16) %4, %"class.leveldb::Slice"* nonnull dereferenceable(16) %5) #10
  %104 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 5
  %105 = bitcast %"class.leveldb::Status"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.leveldb::Status"* %3 to i64*
  %108 = load i64, i64* %107, align 8
  store i64 %108, i64* %105, align 8
  store i64 %106, i64* %107, align 8
  %109 = icmp eq i64 %106, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %96
  %111 = inttoptr i64 %106 to i8*
  call void @_ZdaPv(i8* nonnull %111) #9
  br label %112

112:                                              ; preds = %96, %110
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #10
  br label %113

113:                                              ; preds = %52, %112
  %114 = phi i1 [ false, %112 ], [ true, %52 ]
  ret i1 %114
}

declare void @_ZN7leveldb6DBImpl16RecordReadSampleENS_5SliceE(%"class.leveldb::DBImpl"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7leveldb6StatusC1ENS0_4CodeERKNS_5SliceES4_(%"class.leveldb::Status"*, i32, %"class.leveldb::Slice"* dereferenceable(16), %"class.leveldb::Slice"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN7leveldb12_GLOBAL__N_16DBIter17FindPrevUserEntryEv(%"class.leveldb::(anonymous namespace)::DBIter"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.leveldb::ParsedInternalKey", align 8
  %3 = alloca %"class.leveldb::Slice", align 8
  %4 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 3
  %5 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %4, align 8
  %6 = bitcast %"class.leveldb::Iterator"* %5 to i1 (%"class.leveldb::Iterator"*)***
  %7 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %7, i64 2
  %9 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.leveldb::Iterator"* %5) #10
  br i1 %10, label %11, label %39

11:                                               ; preds = %1
  %12 = bitcast %"struct.leveldb::ParsedInternalKey"* %2 to i8*
  %13 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 2
  %18 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 4
  %19 = bitcast %"class.leveldb::Slice"* %3 to i8*
  %20 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %22 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %27 = getelementptr inbounds %"class.leveldb::Slice", %"class.leveldb::Slice"* %3, i64 0, i32 1
  %28 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %36 = getelementptr inbounds %"struct.leveldb::ParsedInternalKey", %"struct.leveldb::ParsedInternalKey"* %2, i64 0, i32 1
  %37 = bitcast i64* %36 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  br label %41

39:                                               ; preds = %1
  %40 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  br label %182

41:                                               ; preds = %11, %166
  %42 = phi i32 [ %167, %166 ], [ 0, %11 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 16, i1 false)
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %14, align 8
  store i64 0, i64* %15, align 8
  %43 = call fastcc zeroext i1 @_ZN7leveldb12_GLOBAL__N_16DBIter8ParseKeyEPNS_17ParsedInternalKeyE(%"class.leveldb::(anonymous namespace)::DBIter"* %0, %"struct.leveldb::ParsedInternalKey"* nonnull %2)
  br i1 %43, label %44, label %166

44:                                               ; preds = %41
  %45 = load i64, i64* %16, align 8
  %46 = load i64, i64* %18, align 8
  %47 = icmp ugt i64 %45, %46
  br i1 %47, label %166, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %42, 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  br i1 %49, label %65, label %50

50:                                               ; preds = %48
  %51 = load %"class.leveldb::Comparator"*, %"class.leveldb::Comparator"** %20, align 8
  %52 = load i8, i8* %24, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %25, align 8
  %55 = select i1 %53, i8* %54, i8* %26
  store i8* %55, i8** %22, align 8
  %56 = load i64, i64* %28, align 8
  %57 = zext i8 %52 to i64
  %58 = select i1 %53, i64 %56, i64 %57
  store i64 %58, i64* %27, align 8
  %59 = bitcast %"class.leveldb::Comparator"* %51 to i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)***
  %60 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)**, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %60, i64 2
  %62 = load i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)*, i32 (%"class.leveldb::Comparator"*, %"class.leveldb::Slice"*, %"class.leveldb::Slice"*)** %61, align 8
  %63 = call i32 %62(%"class.leveldb::Comparator"* %51, %"class.leveldb::Slice"* nonnull dereferenceable(16) %13, %"class.leveldb::Slice"* nonnull dereferenceable(16) %3) #10
  %64 = icmp slt i32 %63, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br i1 %64, label %164, label %66

65:                                               ; preds = %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  br label %66

66:                                               ; preds = %65, %50
  %67 = load i32, i32* %17, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %91

69:                                               ; preds = %66
  %70 = load i8, i8* %24, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = load i8*, i8** %25, align 8
  store i8 0, i8* %73, align 1
  store i64 0, i64* %28, align 8
  br label %75

74:                                               ; preds = %69
  store i8 0, i8* %26, align 1
  store i8 0, i8* %24, align 1
  br label %75

75:                                               ; preds = %72, %74
  %76 = load i8, i8* %31, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %90

78:                                               ; preds = %75
  %79 = load i64, i64* %32, align 8
  %80 = and i64 %79, 9223372036854775807
  %81 = add nsw i64 %80, -1
  %82 = icmp ugt i64 %81, 1048576
  %83 = load i8*, i8** %33, align 8
  br i1 %82, label %84, label %89

84:                                               ; preds = %78
  %85 = lshr i64 %79, 56
  %86 = trunc i64 %85 to i8
  %87 = icmp slt i8 %86, 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #10
  br i1 %87, label %88, label %166

88:                                               ; preds = %84
  call void @_ZdlPv(i8* %83) #9
  br label %166

89:                                               ; preds = %78
  store i8 0, i8* %83, align 1
  store i64 0, i64* %34, align 8
  br label %166

90:                                               ; preds = %75
  store i8 0, i8* %35, align 1
  store i8 0, i8* %31, align 1
  br label %166

91:                                               ; preds = %66
  %92 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %4, align 8
  %93 = bitcast %"class.leveldb::Iterator"* %92 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %94 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %93, align 8
  %95 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %94, i64 9
  %96 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %95, align 8
  %97 = call { i8*, i64 } %96(%"class.leveldb::Iterator"* %92) #10
  %98 = extractvalue { i8*, i64 } %97, 0
  %99 = extractvalue { i8*, i64 } %97, 1
  %100 = load i8, i8* %31, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %91
  %103 = load i64, i64* %32, align 8
  %104 = and i64 %103, 9223372036854775807
  %105 = add nsw i64 %104, -1
  br label %106

106:                                              ; preds = %91, %102
  %107 = phi i64 [ %105, %102 ], [ 22, %91 ]
  %108 = add i64 %99, 1048576
  %109 = icmp ugt i64 %107, %108
  br i1 %109, label %110, label %117

110:                                              ; preds = %106
  %111 = load i8*, i8** %33, align 8
  %112 = load i64, i64* %32, align 8
  %113 = lshr i64 %112, 56
  %114 = trunc i64 %113 to i8
  %115 = icmp slt i8 %114, 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false)
  br i1 %115, label %116, label %117

116:                                              ; preds = %110
  call void @_ZdlPv(i8* %111) #9
  br label %117

117:                                              ; preds = %116, %110, %106
  %118 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %4, align 8
  %119 = bitcast %"class.leveldb::Iterator"* %118 to { i8*, i64 } (%"class.leveldb::Iterator"*)***
  %120 = load { i8*, i64 } (%"class.leveldb::Iterator"*)**, { i8*, i64 } (%"class.leveldb::Iterator"*)*** %119, align 8
  %121 = getelementptr inbounds { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %120, i64 8
  %122 = load { i8*, i64 } (%"class.leveldb::Iterator"*)*, { i8*, i64 } (%"class.leveldb::Iterator"*)** %121, align 8
  %123 = call { i8*, i64 } %122(%"class.leveldb::Iterator"* %118) #10
  %124 = extractvalue { i8*, i64 } %123, 1
  %125 = add i64 %124, -8
  %126 = extractvalue { i8*, i64 } %123, 0
  %127 = call i1 @llvm.is.constant.i64(i64 %125) #10
  %128 = icmp ult i64 %125, 23
  %129 = and i1 %127, %128
  br i1 %129, label %130, label %143

130:                                              ; preds = %117
  %131 = load i8, i8* %24, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %135

133:                                              ; preds = %130
  store i64 %125, i64* %28, align 8
  %134 = load i8*, i8** %25, align 8
  br label %137

135:                                              ; preds = %130
  %136 = trunc i64 %125 to i8
  store i8 %136, i8* %24, align 1
  br label %137

137:                                              ; preds = %135, %133
  %138 = phi i8* [ %134, %133 ], [ %26, %135 ]
  %139 = icmp eq i64 %125, 0
  br i1 %139, label %141, label %140

140:                                              ; preds = %137
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %138, i8* align 1 %126, i64 %125, i1 false) #10
  br label %141

141:                                              ; preds = %140, %137
  %142 = getelementptr inbounds i8, i8* %138, i64 %125
  store i8 0, i8* %142, align 1
  br label %145

143:                                              ; preds = %117
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %126, i64 %125) #10
  br label %145

145:                                              ; preds = %141, %143
  %146 = call i1 @llvm.is.constant.i64(i64 %99) #10
  %147 = icmp ult i64 %99, 23
  %148 = and i1 %147, %146
  br i1 %148, label %149, label %162

149:                                              ; preds = %145
  %150 = load i8, i8* %31, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %149
  store i64 %99, i64* %34, align 8
  %153 = load i8*, i8** %33, align 8
  br label %156

154:                                              ; preds = %149
  %155 = trunc i64 %99 to i8
  store i8 %155, i8* %31, align 1
  br label %156

156:                                              ; preds = %154, %152
  %157 = phi i8* [ %153, %152 ], [ %35, %154 ]
  %158 = icmp eq i64 %99, 0
  br i1 %158, label %160, label %159

159:                                              ; preds = %156
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %157, i8* align 1 %98, i64 %99, i1 false) #10
  br label %160

160:                                              ; preds = %159, %156
  %161 = getelementptr inbounds i8, i8* %157, i64 %99
  store i8 0, i8* %161, align 1
  br label %166

162:                                              ; preds = %145
  %163 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %29, i8* %98, i64 %99) #10
  br label %166

164:                                              ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  %165 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  br label %221

166:                                              ; preds = %41, %44, %84, %88, %89, %90, %160, %162
  %167 = phi i32 [ %42, %44 ], [ %42, %41 ], [ 0, %84 ], [ 0, %88 ], [ 0, %89 ], [ 0, %90 ], [ %67, %160 ], [ %67, %162 ]
  %168 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %4, align 8
  %169 = bitcast %"class.leveldb::Iterator"* %168 to void (%"class.leveldb::Iterator"*)***
  %170 = load void (%"class.leveldb::Iterator"*)**, void (%"class.leveldb::Iterator"*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %170, i64 7
  %172 = load void (%"class.leveldb::Iterator"*)*, void (%"class.leveldb::Iterator"*)** %171, align 8
  call void %172(%"class.leveldb::Iterator"* %168) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #10
  %173 = load %"class.leveldb::Iterator"*, %"class.leveldb::Iterator"** %4, align 8
  %174 = bitcast %"class.leveldb::Iterator"* %173 to i1 (%"class.leveldb::Iterator"*)***
  %175 = load i1 (%"class.leveldb::Iterator"*)**, i1 (%"class.leveldb::Iterator"*)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %175, i64 2
  %177 = load i1 (%"class.leveldb::Iterator"*)*, i1 (%"class.leveldb::Iterator"*)** %176, align 8
  %178 = call zeroext i1 %177(%"class.leveldb::Iterator"* %173) #10
  br i1 %178, label %41, label %179

179:                                              ; preds = %166
  %180 = icmp eq i32 %167, 0
  %181 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 9
  br i1 %180, label %182, label %221

182:                                              ; preds = %39, %179
  %183 = phi i8* [ %40, %39 ], [ %181, %179 ]
  store i8 0, i8* %183, align 4
  %184 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6
  %185 = bitcast %"class.std::__1::basic_string"* %184 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %186 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %185, i64 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1
  %188 = icmp slt i8 %187, 0
  br i1 %188, label %189, label %193

189:                                              ; preds = %182
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  store i8 0, i8* %191, align 1
  %192 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %192, align 8
  br label %195

193:                                              ; preds = %182
  %194 = bitcast %"class.std::__1::basic_string"* %184 to i8*
  store i8 0, i8* %194, align 1
  store i8 0, i8* %186, align 1
  br label %195

195:                                              ; preds = %189, %193
  %196 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7
  %197 = bitcast %"class.std::__1::basic_string"* %196 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %198 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %197, i64 0, i32 1, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = icmp slt i8 %199, 0
  br i1 %200, label %201, label %217

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %203 = load i64, i64* %202, align 8
  %204 = and i64 %203, 9223372036854775807
  %205 = add nsw i64 %204, -1
  %206 = icmp ugt i64 %205, 1048576
  %207 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load i8*, i8** %207, align 8
  br i1 %206, label %209, label %215

209:                                              ; preds = %201
  %210 = lshr i64 %203, 56
  %211 = trunc i64 %210 to i8
  %212 = icmp slt i8 %211, 0
  %213 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %213, i8 0, i64 24, i1 false) #10
  br i1 %212, label %214, label %219

214:                                              ; preds = %209
  call void @_ZdlPv(i8* %208) #9
  br label %219

215:                                              ; preds = %201
  store i8 0, i8* %208, align 1
  %216 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %216, align 8
  br label %219

217:                                              ; preds = %195
  %218 = bitcast %"class.std::__1::basic_string"* %196 to i8*
  store i8 0, i8* %218, align 1
  store i8 0, i8* %198, align 1
  br label %219

219:                                              ; preds = %209, %214, %215, %217
  %220 = getelementptr inbounds %"class.leveldb::(anonymous namespace)::DBIter", %"class.leveldb::(anonymous namespace)::DBIter"* %0, i64 0, i32 8
  store i32 0, i32* %220, align 8
  br label %223

221:                                              ; preds = %164, %179
  %222 = phi i8* [ %165, %164 ], [ %181, %179 ]
  store i8 1, i8* %222, align 4
  br label %223

223:                                              ; preds = %221, %219
  ret void
}

declare void @_ZN7leveldb17AppendInternalKeyEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_17ParsedInternalKeyE(%"class.std::__1::basic_string"*, %"struct.leveldb::ParsedInternalKey"* dereferenceable(32)) local_unnamed_addr #2

declare i8* @_ZN7leveldb6Status9CopyStateEPKc(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
