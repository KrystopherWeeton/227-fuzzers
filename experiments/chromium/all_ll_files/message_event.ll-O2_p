; ModuleID = '../../third_party/blink/renderer/core/events/message_event.cc'
source_filename = "../../third_party/blink/renderer/core/events/message_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::V8PrivateProperty::SymbolKey" = type { i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.141", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.182", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.102", %"class.std::__1::unique_ptr.125", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i64 }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::Worklist.98"* }
%"class.blink::Worklist.98" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.45" }
%"class.std::__1::unique_ptr.102" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.105", %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.117", %"class.std::__1::__compressed_pair.119", [4 x i8] }>
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107", %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { i64 }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { float }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.128", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.163" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.84"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.420" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.181 }
%class.scoped_refptr.181 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.191" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.186", %"class.WTF::String", %"class.blink::Member.286", %"class.blink::Member.293", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.blink::Member.295", i8, [7 x i8], %"class.WTF::Vector.409", %"class.blink::Member.414", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member.3", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Event"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.5", %class.scoped_refptr.8 }
%"class.blink::TraceWrapperV8Reference.5" = type { %"class.v8::TracedReference.6" }
%"class.v8::TracedReference.6" = type { %"class.v8::BasicTracedReference.7" }
%"class.v8::BasicTracedReference.7" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.8 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.190, %"class.blink::HeapVector", %"class.blink::HeapVector.278" }
%class.scoped_refptr.190 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.196", i64, %"class.WTF::Vector.200", %"class.WTF::Vector.205", %"class.WTF::Vector.211", %"class.WTF::Vector.229", %class.scoped_refptr.241, %"class.WTF::HashMap.250", %"class.WTF::Vector.255", %"class.WTF::Vector.200", %"class.WTF::Vector.260", %"class.WTF::HashMap.265", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.191" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { i8* }
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207", [8 x i8] }
%"class.WTF::VectorBufferBase.207" = type { %class.scoped_refptr.208*, i32, i32 }
%class.scoped_refptr.208 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.214 }
%class.scoped_refptr.214 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.229" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231" }
%"class.WTF::VectorBufferBase.231" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.232", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.232" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.235 }
%union.anon.235 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.241 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.242", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.244", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.249 }
%"class.WTF::RefCounted.242" = type { %"class.base::RefCounted.243" }
%"class.base::RefCounted.243" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, %union.anon.248 }
%union.anon.248 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.249 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.250" = type { %"class.WTF::HashTable.251" }
%"class.WTF::HashTable.251" = type <{ %"struct.WTF::KeyValuePair.254"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.254" = type opaque
%"class.WTF::Vector.255" = type { %"class.WTF::VectorBuffer.256" }
%"class.WTF::VectorBuffer.256" = type { %"class.WTF::VectorBufferBase.257" }
%"class.WTF::VectorBufferBase.257" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202", [16 x i8] }
%"class.WTF::VectorBufferBase.202" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.260" = type { %"class.WTF::VectorBuffer.261" }
%"class.WTF::VectorBuffer.261" = type { %"class.WTF::VectorBufferBase.262" }
%"class.WTF::VectorBufferBase.262" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type { i8**, %"class.std::__1::unique_ptr.526" }
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.272" }
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.blink::Member.275"*, i32, i32 }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.284"*, i32, i32 }
%"class.blink::Member.284" = type opaque
%"class.blink::Member.286" = type { %"class.blink::MemberBase.287" }
%"class.blink::MemberBase.287" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.288 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.288 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.289", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.291", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.289" = type { %"class.base::RefCountedThreadSafe.290" }
%"class.base::RefCountedThreadSafe.290" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.291" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.292", i32 }
%"class.mojo::ScopedHandleBase.292" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::HeapVector.297"* }
%"class.blink::HeapVector.297" = type { %"class.WTF::Vector.300" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::Member.303"*, i32, i32 }
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.333", i8, i8, %class.scoped_refptr.407, %"class.blink::MessagePortDescriptor" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.319" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.307" }
%"class.blink::HeapVector.307" = type { %"class.WTF::Vector.310" }
%"class.WTF::Vector.310" = type { %"class.WTF::VectorBuffer.311" }
%"class.WTF::VectorBuffer.311" = type { %"class.WTF::VectorBufferBase.312", [32 x i8] }
%"class.WTF::VectorBufferBase.312" = type { %"struct.std::__1::pair.313"*, i32, i32 }
%"struct.std::__1::pair.313" = type { %"class.WTF::AtomicString", %"class.blink::Member.314" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::HeapVector.316"* }
%"class.blink::HeapVector.316" = type opaque
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.WTF::Vector.322"* }
%"class.WTF::Vector.322" = type opaque
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.326" }
%"class.blink::WeakMember.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.330" }
%"class.WTF::HashTable.330" = type <{ %"class.blink::WeakMember.332"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.332" = type opaque
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase.292", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.338, %"class.std::__1::unique_ptr.340", %"class.absl::optional.355", %"struct.std::__1::atomic.182", i8, i8, i8, i8, i32, i32, %"class.absl::optional.365", %"class.std::__1::unique_ptr.370", i8, i64, %class.scoped_refptr.400, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.403" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.336 }
%class.scoped_refptr.336 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.337", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.337" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.338 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.339" }>
%"class.base::RefCountedThreadSafe.339" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.338, i8, %"class.mojo::ScopedHandleBase.343", %class.scoped_refptr.344, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%"class.mojo::ScopedHandleBase.343" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.344 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.346", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.346" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.347" }
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__atomic_base.349" }
%"struct.std::__1::__atomic_base.349" = type { %"struct.std::__1::__cxx_atomic_impl.350" }
%"struct.std::__1::__cxx_atomic_impl.350" = type { %"struct.std::__1::__cxx_atomic_base_impl.351" }
%"struct.std::__1::__cxx_atomic_base_impl.351" = type { i8 }
%"class.absl::optional.355" = type { %"class.absl::optional_internal::optional_data.356" }
%"class.absl::optional_internal::optional_data.356" = type { %"class.absl::optional_internal::optional_data_base.357" }
%"class.absl::optional_internal::optional_data_base.357" = type { %"class.absl::optional_internal::optional_data_dtor_base.358" }
%"class.absl::optional_internal::optional_data_dtor_base.358" = type { i8, %union.anon.359 }
%union.anon.359 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.360", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.360" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.365" = type { %"class.absl::optional_internal::optional_data.366" }
%"class.absl::optional_internal::optional_data.366" = type { %"class.absl::optional_internal::optional_data_base.367" }
%"class.absl::optional_internal::optional_data_base.367" = type { %"class.absl::optional_internal::optional_data_dtor_base.368" }
%"class.absl::optional_internal::optional_data_dtor_base.368" = type { i8, %union.anon.369 }
%union.anon.369 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.370" = type { %"class.std::__1::__compressed_pair.371" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.373", i8, i64, %class.scoped_refptr.374, %class.scoped_refptr.396 }
%"class.base::RepeatingCallback.373" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.374 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.375", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.385", i8, [7 x i8] }>
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.376 }
%class.scoped_refptr.376 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.385" = type { %"class.std::__1::__tree.386" }
%"class.std::__1::__tree.386" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%class.scoped_refptr.396 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.400 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.418", [4 x i8], %"class.base::RepeatingCallback.419", %class.scoped_refptr.338, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.418" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.419" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.402 }
%class.scoped_refptr.402 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.403" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.407 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase.292", %"class.base::UnguessableToken", i64 }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::UserActivation"* }
%"class.blink::UserActivation" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.416", i8, i8, [6 x i8] }>
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessageEventInit" = type { %"class.blink::EventInit.base", i8, i8, i8, %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector.297", %"class.blink::Member", %"class.blink::Member.414" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::EventInit" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.540", %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.546", i8, %"class.WTF::Vector.548" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.661", %"class.blink::Member.663", %"class.blink::Member.665", i8, i32, i8, i32, %"class.blink::Member.667", %"class.blink::Member.542", %"class.blink::FrameLifecycle", %"class.blink::Member.540", %"class.blink::Member.540", %"class.blink::Member.540", %"class.blink::Member.540", %"class.blink::Member.540", %"class.blink::Member.540", %"class.blink::Member.669", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.679", i8, %"class.base::UnguessableToken", %"class.absl::optional.681", %"class.absl::optional.686", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.540", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.661" = type { %"class.blink::MemberBase.662" }
%"class.blink::MemberBase.662" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.669" = type { %"class.blink::MemberBase.670" }
%"class.blink::MemberBase.670" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.540", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.671" }
%"class.std::__1::vector.671" = type { %"class.std::__1::__vector_base.672" }
%"class.std::__1::__vector_base.672" = type { %"struct.std::__1::pair.673"*, %"struct.std::__1::pair.673"*, %"class.std::__1::__compressed_pair.674" }
%"struct.std::__1::pair.673" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"struct.std::__1::pair.673"* }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.681" = type { %"class.absl::optional_internal::optional_data.682" }
%"class.absl::optional_internal::optional_data.682" = type { %"class.absl::optional_internal::optional_data_base.683" }
%"class.absl::optional_internal::optional_data_base.683" = type { %"class.absl::optional_internal::optional_data_dtor_base.684" }
%"class.absl::optional_internal::optional_data_dtor_base.684" = type { i8, %union.anon.685 }
%union.anon.685 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.686" = type { %"class.absl::optional_internal::optional_data.687" }
%"class.absl::optional_internal::optional_data.687" = type { %"class.absl::optional_internal::optional_data_base.688" }
%"class.absl::optional_internal::optional_data_base.688" = type { %"class.absl::optional_internal::optional_data_dtor_base.689" }
%"class.absl::optional_internal::optional_data_dtor_base.689" = type { i8, %union.anon.690 }
%union.anon.690 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.692" }
%"class.blink::HeapHashSet.692" = type { %"class.WTF::HashSet.695" }
%"class.WTF::HashSet.695" = type { %"class.WTF::HashTable.696" }
%"class.WTF::HashTable.696" = type <{ %"class.blink::WeakMember.698"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.698" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType.551", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType.551" = type { %"class.base::StrongAlias.552" }
%"class.base::StrongAlias.552" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.651" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.553, %"class.std::__1::unique_ptr.602", %"class.mojo::ScopedHandleBase.292", [4 x i8], %class.scoped_refptr.338, i32 }>
%class.scoped_refptr.553 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.338, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase.292", [4 x i8], %"class.absl::optional.568", %"class.absl::optional.573", %"class.absl::optional.365", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.593", i8, [7 x i8], %class.scoped_refptr.338, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.554" }>
%"class.base::RefCountedThreadSafe.554" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.555", %"class.std::__1::unique_ptr.561", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.567" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.567" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.568" = type { %"class.absl::optional_internal::optional_data.569" }
%"class.absl::optional_internal::optional_data.569" = type { %"class.absl::optional_internal::optional_data_base.570" }
%"class.absl::optional_internal::optional_data_base.570" = type { %"class.absl::optional_internal::optional_data_dtor_base.571" }
%"class.absl::optional_internal::optional_data_dtor_base.571" = type { i8, %union.anon.572 }
%union.anon.572 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.573" = type { %"class.absl::optional_internal::optional_data.574" }
%"class.absl::optional_internal::optional_data.574" = type { %"class.absl::optional_internal::optional_data_base.575" }
%"class.absl::optional_internal::optional_data_base.575" = type { %"class.absl::optional_internal::optional_data_dtor_base.576" }
%"class.absl::optional_internal::optional_data_dtor_base.576" = type { i8, [7 x i8], %union.anon.577 }
%union.anon.577 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.578 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.578 = type { %"class.std::__1::map.581" }
%"class.std::__1::map.581" = type { %"class.std::__1::__tree.582" }
%"class.std::__1::__tree.582" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.592"*, i64 }
%"class.std::__1::unique_ptr.592" = type opaque
%"class.std::__1::map.593" = type { %"class.std::__1::__tree.594" }
%"class.std::__1::__tree.594" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.419", %"class.base::OnceCallback.605", %"class.absl::optional.606", %"class.absl::optional.611", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.618", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.626", %"class.std::__1::map.637", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.646", i8, %class.scoped_refptr.338, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.647" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.605" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.606" = type { %"class.absl::optional_internal::optional_data.607" }
%"class.absl::optional_internal::optional_data.607" = type { %"class.absl::optional_internal::optional_data_base.608" }
%"class.absl::optional_internal::optional_data_base.608" = type { %"class.absl::optional_internal::optional_data_dtor_base.609" }
%"class.absl::optional_internal::optional_data_dtor_base.609" = type { i8, %union.anon.610 }
%union.anon.610 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.611" = type { %"class.absl::optional_internal::optional_data.612" }
%"class.absl::optional_internal::optional_data.612" = type { %"class.absl::optional_internal::optional_data_base.613" }
%"class.absl::optional_internal::optional_data_base.613" = type { %"class.absl::optional_internal::optional_data_dtor_base.614" }
%"class.absl::optional_internal::optional_data_dtor_base.614" = type { i8, %union.anon.615 }
%union.anon.615 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.338, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.616" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type opaque
%"class.base::WeakPtrFactory.616" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.617 }
%class.scoped_refptr.617 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.621", %class.scoped_refptr.622 }
%"class.base::RepeatingCallback.621" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.622 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.554", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.637" = type { %"class.std::__1::__tree.638" }
%"class.std::__1::__tree.638" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.base::OnceCallback.646" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.647" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.699", %"class.blink::Member.701", %"class.blink::Member.699", %"class.blink::Member.699", %"class.blink::Member.703" }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.707", %"class.blink::Member.709", %"class.blink::Member.701", %"class.blink::Member.711", %"class.blink::Member.711", %"class.blink::Member.754", %"class.blink::Member.756", %"class.blink::Member.758", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.763", %"class.blink::HeapVector.765" }
%"class.blink::Member.707" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.699", %"class.blink::Member.699" }
%"class.blink::Member.709" = type { %"class.blink::MemberBase.710" }
%"class.blink::MemberBase.710" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.774", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.782", %"class.WTF::Vector.782", i8, i32, %"class.blink::Member.416", %"class.blink::Member.485", %"class.blink::Member.787", %"class.blink::Member.789", %"class.blink::Member.791", %"class.blink::Member.793", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.801", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.807", %"class.blink::Member.809", %"class.blink::Member.771", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.811", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.747", %"class.blink::Member.726", %"class.blink::Member.818", %"class.blink::Member.726", %"class.blink::Member.726", %"class.blink::Member.726", %"class.blink::UserActionElementSet", %"class.blink::Member.827", double, double, i64, i64, %"class.blink::HeapHashSet.829", %"class.blink::HeapHashSet.836", i16, i8, %"class.blink::Member.843", %"class.blink::Member.845", %"class.blink::Member.847", %"class.blink::Member.849", %"class.blink::TextLinkColors", %"class.blink::Member.851", i8, [7 x i8], %"class.blink::HeapHashMap.853", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.726", %"class.WTF::Vector.860", %"class.blink::Member.865", %"class.blink::Member.867", i8, %"class.blink::Member.726", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.869", %"class.blink::HeapVector.871", %"class.std::__1::unique_ptr.879", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.885", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.898", %"class.WTF::Vector.900", i8, i8, %"class.std::__1::unique_ptr.905", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.747", %"class.blink::HeapVector.911", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.919", i8, i32, %"class.blink::Member.921", %"class.blink::Member.923", %"class.blink::Member.925", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.927", %"class.WTF::HashMap.929", %"class.blink::Member.934", %"class.blink::Member.936", %"class.blink::Member.938", %"class.blink::Member.940", %"class.blink::Member.709", %"class.blink::Member.709", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.942", i8, i32, %"class.blink::Member.949", %"class.blink::Member.951", i32, %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.957", %"class.std::__1::unique_ptr.959", i64, %"class.std::__1::unique_ptr.965", i32, i32, %"class.blink::Member.971", %"class.blink::Member.973", %"class.blink::Member.975", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.977", %"class.WTF::Vector.979", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.984", %"class.blink::Member.991", %"class.std::__1::unique_ptr.993", %"class.blink::Member.999", i8, i8, %"class.WTF::String", %"class.blink::Member.1001", i8, [7 x i8], %"class.blink::HeapHashMap.1003", %"class.blink::HeapObserverSet.1010", %"class.blink::Member.1018", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1020", i32, i8, i8, %"class.blink::WeakMember.1022", %"class.blink::Member.1023" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.774" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.775" }
%"class.blink::HeapHashMap.775" = type { %"class.WTF::HashMap.778" }
%"class.WTF::HashMap.778" = type { %"class.WTF::HashTable.779" }
%"class.WTF::HashTable.779" = type <{ %"struct.WTF::KeyValuePair.781"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.781" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.782" = type { %"class.WTF::VectorBuffer.783" }
%"class.WTF::VectorBuffer.783" = type { %"class.WTF::VectorBufferBase.784" }
%"class.WTF::VectorBufferBase.784" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.485" = type { %"class.blink::MemberBase.486" }
%"class.blink::MemberBase.486" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.491", i32, i8, [3 x i8], %"class.blink::HeapVector.493", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.501", %"class.blink::Member.503", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.512", %"class.blink::Member.518", %"class.blink::Member.520", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.437" }
%"class.blink::HeapHashMap.437" = type { %"class.WTF::HashMap.440" }
%"class.WTF::HashMap.440" = type { %"class.WTF::HashTable.441" }
%"class.WTF::HashTable.441" = type <{ %"struct.WTF::KeyValuePair.443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.443" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.444" }
%"class.blink::Supplementable.444" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.445" }
%"class.blink::HeapHashMap.445" = type { %"class.WTF::HashMap.448" }
%"class.WTF::HashMap.448" = type { %"class.WTF::HashTable.449" }
%"class.WTF::HashTable.449" = type <{ %"struct.WTF::KeyValuePair.451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.451" = type { i8*, %"class.blink::Member.532" }
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.534" }
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.241, %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.479", %"class.blink::Member.485", i32, [4 x i8], %"class.WTF::HashSet.487", i32, i32 }
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.455", %"class.std::__1::map.466", %"class.std::__1::map.475"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.244" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.455" = type { %"class.std::__1::__tree.456" }
%"class.std::__1::__tree.456" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.457", %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.466" = type { %"class.std::__1::__tree.467" }
%"class.std::__1::__tree.467" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.468", %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::map.475" = type opaque
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.487" = type { %"class.WTF::HashTable.488" }
%"class.WTF::HashTable.488" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.493" = type { %"class.WTF::Vector.496" }
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"class.blink::Member.499"*, i32, i32 }
%"class.blink::Member.499" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.505", i32, i32 }
%"class.blink::HeapHashMap.505" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type opaque
%"class.std::__1::unique_ptr.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.518" = type { %"class.blink::MemberBase.519" }
%"class.blink::MemberBase.519" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.520" = type { %"class.blink::MemberBase.521" }
%"class.blink::MemberBase.521" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.787" = type { %"class.blink::MemberBase.788" }
%"class.blink::MemberBase.788" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.789" = type { %"class.blink::MemberBase.790" }
%"class.blink::MemberBase.790" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.795" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.blink::KURL"* }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.771" = type { %"class.blink::MemberBase.772" }
%"class.blink::MemberBase.772" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.WTF::Vector.811" = type { %"class.WTF::VectorBuffer.812" }
%"class.WTF::VectorBuffer.812" = type { %"class.WTF::VectorBufferBase.813" }
%"class.WTF::VectorBufferBase.813" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.8 }
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.820" }
%"class.blink::HeapHashMap.820" = type { %"class.WTF::HashMap.823" }
%"class.WTF::HashMap.823" = type { %"class.WTF::HashTable.824" }
%"class.WTF::HashTable.824" = type <{ %"struct.WTF::KeyValuePair.826"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.826" = type opaque
%"class.blink::Member.827" = type { %"class.blink::MemberBase.828" }
%"class.blink::MemberBase.828" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.829" = type { %"class.WTF::HashSet.832" }
%"class.WTF::HashSet.832" = type { %"class.WTF::HashTable.833" }
%"class.WTF::HashTable.833" = type <{ %"class.blink::WeakMember.835"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.835" = type opaque
%"class.blink::HeapHashSet.836" = type { %"class.WTF::HashSet.839" }
%"class.WTF::HashSet.839" = type { %"class.WTF::HashTable.840" }
%"class.WTF::HashTable.840" = type <{ %"class.blink::WeakMember.842"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.842" = type opaque
%"class.blink::Member.843" = type { %"class.blink::MemberBase.844" }
%"class.blink::MemberBase.844" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.845" = type { %"class.blink::MemberBase.846" }
%"class.blink::MemberBase.846" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.847" = type { %"class.blink::MemberBase.848" }
%"class.blink::MemberBase.848" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.849" = type { %"class.blink::MemberBase.850" }
%"class.blink::MemberBase.850" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.851" = type { %"class.blink::MemberBase.852" }
%"class.blink::MemberBase.852" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.853" = type { %"class.WTF::HashMap.856" }
%"class.WTF::HashMap.856" = type { %"class.WTF::HashTable.857" }
%"class.WTF::HashTable.857" = type <{ %"struct.WTF::KeyValuePair.859"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.859" = type opaque
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.865" = type { %"class.blink::MemberBase.866" }
%"class.blink::MemberBase.866" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.726" = type { %"class.blink::MemberBase.727" }
%"class.blink::MemberBase.727" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.731" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.728 }
%class.scoped_refptr.728 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.729", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.735", %"class.blink::Member.737", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.735" = type { %"class.WTF::SingleThreadedBitField.736" }
%"class.WTF::SingleThreadedBitField.736" = type { i32 }
%"class.blink::Member.737" = type { %"class.blink::MemberBase.738" }
%"class.blink::MemberBase.738" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.739 }
%class.scoped_refptr.739 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.740", %"class.WTF::AtomicString", %"class.WTF::Vector.742" }
%"class.WTF::RefCounted.740" = type { %"class.base::RefCounted.741" }
%"class.base::RefCounted.741" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.742" = type { %"class.WTF::VectorBuffer.743" }
%"class.WTF::VectorBuffer.743" = type { %"class.WTF::VectorBufferBase.744", [32 x i8] }
%"class.WTF::VectorBufferBase.744" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.871" = type { %"class.WTF::Vector.874" }
%"class.WTF::Vector.874" = type { %"class.WTF::VectorBuffer.875" }
%"class.WTF::VectorBuffer.875" = type { %"class.WTF::VectorBufferBase.876" }
%"class.WTF::VectorBufferBase.876" = type { %"class.blink::Member.877"*, i32, i32 }
%"class.blink::Member.877" = type opaque
%"class.std::__1::unique_ptr.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.881" }
%"struct.std::__1::__compressed_pair_elem.881" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.885" = type { %"class.WTF::HashSet.888" }
%"class.WTF::HashSet.888" = type { %"class.WTF::HashTable.889" }
%"class.WTF::HashTable.889" = type <{ %"class.blink::WeakMember.891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.891" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.892", i32, [4 x i8] }>
%"class.WTF::Vector.892" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { %"struct.std::__1::pair.895"*, i32, i32 }
%"struct.std::__1::pair.895" = type opaque
%"class.blink::Member.898" = type { %"class.blink::MemberBase.899" }
%"class.blink::MemberBase.899" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.900" = type { %"class.WTF::VectorBuffer.901" }
%"class.WTF::VectorBuffer.901" = type { %"class.WTF::VectorBufferBase.902" }
%"class.WTF::VectorBufferBase.902" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.747" = type { %"class.WTF::Vector.750" }
%"class.WTF::Vector.750" = type { %"class.WTF::VectorBuffer.751" }
%"class.WTF::VectorBuffer.751" = type { %"class.WTF::VectorBufferBase.752" }
%"class.WTF::VectorBufferBase.752" = type { %"class.blink::Member.726"*, i32, i32 }
%"class.blink::HeapVector.911" = type { %"class.WTF::Vector.914" }
%"class.WTF::Vector.914" = type { %"class.WTF::VectorBuffer.915" }
%"class.WTF::VectorBuffer.915" = type { %"class.WTF::VectorBufferBase.916" }
%"class.WTF::VectorBufferBase.916" = type { %"class.blink::Member.917"*, i32, i32 }
%"class.blink::Member.917" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.709" }
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.927" = type { %"class.blink::MemberBase.928" }
%"class.blink::MemberBase.928" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.929" = type { %"class.WTF::HashTable.930" }
%"class.WTF::HashTable.930" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.938" = type { %"class.blink::MemberBase.939" }
%"class.blink::MemberBase.939" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.940" = type { %"class.blink::MemberBase.941" }
%"class.blink::MemberBase.941" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.817", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.407, %"class.base::WeakPtrFactory.816" }
%"class.base::WeakPtrFactory.816" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.817" = type { %"class.blink::MemberBase.710" }
%"class.blink::HeapHashSet.942" = type { %"class.WTF::HashSet.945" }
%"class.WTF::HashSet.945" = type { %"class.WTF::HashTable.946" }
%"class.WTF::HashTable.946" = type <{ %"class.blink::Member.948"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.948" = type opaque
%"class.blink::Member.949" = type { %"class.blink::MemberBase.950" }
%"class.blink::MemberBase.950" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.951" = type { %"class.blink::MemberBase.952" }
%"class.blink::MemberBase.952" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.957" = type { %"class.blink::MemberBase.958" }
%"class.blink::MemberBase.958" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.959" = type { %"class.std::__1::__compressed_pair.960" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.971" = type { %"class.blink::MemberBase.972" }
%"class.blink::MemberBase.972" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.973" = type { %"class.blink::MemberBase.974" }
%"class.blink::MemberBase.974" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.977" = type { %"class.blink::MemberBase.978" }
%"class.blink::MemberBase.978" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.979" = type { %"class.WTF::VectorBuffer.980" }
%"class.WTF::VectorBuffer.980" = type { %"class.WTF::VectorBufferBase.981" }
%"class.WTF::VectorBufferBase.981" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.984" = type { %"class.WTF::HashMap.987" }
%"class.WTF::HashMap.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"struct.WTF::KeyValuePair.990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.990" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.999" = type { %"class.blink::MemberBase.1000" }
%"class.blink::MemberBase.1000" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1003" = type { %"class.WTF::HashMap.1006" }
%"class.WTF::HashMap.1006" = type { %"class.WTF::HashTable.1007" }
%"class.WTF::HashTable.1007" = type <{ %"struct.WTF::KeyValuePair.1009"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1009" = type opaque
%"class.blink::HeapObserverSet.1010" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1011" }
%"class.blink::HeapHashSet.1011" = type { %"class.WTF::HashSet.1014" }
%"class.WTF::HashSet.1014" = type { %"class.WTF::HashTable.1015" }
%"class.WTF::HashTable.1015" = type <{ %"class.blink::WeakMember.1017"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1017" = type opaque
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.709", %"class.blink::HeapHashSet.1027", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1034", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1027" = type { %"class.WTF::HashSet.1030" }
%"class.WTF::HashSet.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"class.blink::Member.1033"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1033" = type opaque
%"class.blink::HeapTaskRunnerTimer.1034" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1035", { i64, i64 } }
%"class.blink::WeakMember.1035" = type { %"class.blink::MemberBase.1021" }
%"class.blink::WeakMember.1022" = type { %"class.blink::MemberBase.700" }
%"class.blink::MemberBase.700" = type { %"class.blink::Node"* }
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.711" = type { %"class.blink::MemberBase.712" }
%"class.blink::MemberBase.712" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.715" }
%"class.blink::HeapHashMap.715" = type { %"class.WTF::HashMap.718" }
%"class.WTF::HashMap.718" = type { %"class.WTF::HashTable.719" }
%"class.WTF::HashTable.719" = type <{ %"struct.WTF::KeyValuePair.721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.721" = type { %"class.WTF::AtomicString", %"class.blink::Member.722" }
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.726", i32, %"class.blink::HeapVector.747" }
%"class.blink::Member.754" = type { %"class.blink::MemberBase.755" }
%"class.blink::MemberBase.755" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.756" = type { %"class.blink::MemberBase.757" }
%"class.blink::MemberBase.757" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.758" = type { %"class.blink::MemberBase.759" }
%"class.blink::MemberBase.759" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.760" }
%"class.blink::Member.760" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::HeapHashMap.762"* }
%"class.blink::HeapHashMap.762" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.765" = type { %"class.WTF::Vector.768" }
%"class.WTF::Vector.768" = type { %"class.WTF::VectorBuffer.769" }
%"class.WTF::VectorBuffer.769" = type { %"class.WTF::VectorBufferBase.770" }
%"class.WTF::VectorBufferBase.770" = type { %"class.blink::Member.771"*, i32, i32 }
%"class.blink::Member.699" = type { %"class.blink::MemberBase.700" }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.429, %"class.blink::Member.430", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.429 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.432" }
%"class.blink::Persistent.432" = type { %"class.blink::PersistentBase.433" }
%"class.blink::PersistentBase.433" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.v8::internal::Isolate" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.5" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"struct.blink::SerializedScriptValue::DeserializeOptions" = type { %"class.blink::HeapVector.297"*, %"class.WTF::Vector.435"* }
%"class.WTF::Vector.435" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::String" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.1055", %"class.WTF::HashMap.1055", %"class.WTF::HashMap.1060", %"class.std::__1::unique_ptr.1065", %"class.std::__1::unique_ptr.1112", %"class.blink::Persistent.432", i8, i8, i8, %"class.WTF::Vector.782", %"class.std::__1::unique_ptr.1126", %"class.blink::Persistent.1132", %"class.blink::Persistent.1136", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.1037", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.1043", %"class.std::__1::unique_ptr.1049", i32, i32 }
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.1055" = type { %"class.WTF::HashTable.1056" }
%"class.WTF::HashTable.1056" = type <{ %"struct.WTF::KeyValuePair.1059"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1059" = type opaque
%"class.WTF::HashMap.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.1073", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1068", i8* }
%"class.WTF::HashMap.1068" = type { %"class.WTF::HashTable.1069" }
%"class.WTF::HashTable.1069" = type <{ %"struct.WTF::KeyValuePair.1072"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1072" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.1073" = type { %"class.v8::PersistentValueMapBase.1074" }
%"class.v8::PersistentValueMapBase.1074" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.1075", i8* }
%"class.WTF::HashMap.1075" = type { %"class.WTF::HashTable.1076" }
%"class.WTF::HashTable.1076" = type <{ %"struct.WTF::KeyValuePair.1079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1079" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1080", %"class.WTF::String", %"class.std::__1::unique_ptr.1082" }
%"class.WTF::RefCounted.1080" = type { %"class.base::RefCounted.1081" }
%"class.base::RefCounted.1081" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1082" = type { %"class.std::__1::__compressed_pair.1083" }
%"class.std::__1::__compressed_pair.1083" = type { %"struct.std::__1::__compressed_pair_elem.1084" }
%"struct.std::__1::__compressed_pair_elem.1084" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1085", %"class.std::__1::unique_ptr.1096", %"class.WTF::Vector.1102", i8, i32 }
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.WTF::Vector.1088"* }
%"class.WTF::Vector.1088" = type { %"class.WTF::VectorBuffer.1089" }
%"class.WTF::VectorBuffer.1089" = type { %"class.WTF::VectorBufferBase.1090" }
%"class.WTF::VectorBufferBase.1090" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1090", [32 x i8] }
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent.1115", %"class.WTF::HashMap.1118" }
%"class.blink::ScopedPersistent.1115" = type { %"class.v8::Persistent.1116" }
%"class.v8::Persistent.1116" = type { %"class.v8::PersistentBase.1117" }
%"class.v8::PersistentBase.1117" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.1132" = type { %"class.blink::PersistentBase.1133" }
%"class.blink::PersistentBase.1133" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.1136" = type { %"class.blink::PersistentBase.1137" }
%"class.blink::PersistentBase.1137" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.1140", i64 }
%"class.blink::HeapVector.1140" = type { %"class.WTF::Vector.1143" }
%"class.WTF::Vector.1143" = type { %"class.WTF::VectorBuffer.1144" }
%"class.WTF::VectorBuffer.1144" = type { %"class.WTF::VectorBufferBase.1145" }
%"class.WTF::VectorBufferBase.1145" = type { %"struct.std::__1::pair.1146"*, i32, i32 }
%"struct.std::__1::pair.1146" = type { %"class.blink::UntracedMember", %"class.blink::Member.1148" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1147" }
%"class.blink::MemberBase.1147" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::Member.1148" = type { %"class.blink::MemberBase.1149" }
%"class.blink::MemberBase.1149" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.blink::EventDispatcher" = type opaque
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEE3SetEPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_11MessagePortEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_ = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink12MessageEvent18GetWrapperTypeInfoEv = comdat any

$_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv = comdat any

$_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE = comdat any

$_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14UserActivationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [33 x i8] c"amount_of_external_memory_ == 0u\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"../../third_party/blink/renderer/core/events/message_event.cc\00", align 1
@_ZTVN5blink12MessageEventE = hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MessageEvent"*)* @_ZN5blink12MessageEventD2Ev to i8*), i8* bitcast (void (%"class.blink::MessageEvent"*)* @_ZN5blink12MessageEventD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MessageEvent"*, %"class.blink::Visitor"*)* @_ZNK5blink12MessageEvent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MessageEvent"*)* @_ZNK5blink12MessageEvent18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::MessageEvent"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink12MessageEvent20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::MessageEvent"*)* @_ZNK5blink12MessageEvent13InterfaceNameEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event9IsUIEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsMouseEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsFocusEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event15IsKeyboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsTouchEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsGestureEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsWheelEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsPointerEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsInputEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event18IsCompositionEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event11IsDragEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event16IsClipboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeTextInsertedEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event19IsBeforeUnloadEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsErrorEventEv to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14preventDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"*)* @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv to i8*), i8* bitcast (i32 (%"class.blink::Event"*, %"class.blink::EventDispatcher"*)* @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14ReceivedTargetEv to i8*)] }, align 8
@_ZN5blink16event_type_names8kMessageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16event_type_names13kMessageerrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [68 x i8] c"The optional 'source' property is neither a Window nor MessagePort.\00", align 1
@_ZN5blink21event_interface_names13kMessageEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blinkL38kPrivatePropertyMessageEventCachedDataE = internal constant %"class.blink::V8PrivateProperty::SymbolKey" zeroinitializer, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.3 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink12MessageEvent18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/bindings/core/v8/world_safe_v8_reference.h\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"isolate->InContext()\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"v8_reference_.IsEmpty() || world_.get() == &new_world\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_11MessagePortEEELj0EEEEEPKcv = private unnamed_addr constant [103 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::MessagePort>, 0>]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [7 x i8] c"world_\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.16 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [163 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::MessagePort>, WTF::VectorTraits<blink::Member<blink::MessagePort> > >]\00", align 1

@_ZN5blink12MessageEventC1Ev = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*), void (%"class.blink::MessageEvent"*)* @_ZN5blink12MessageEventC2Ev
@_ZN5blink12MessageEventC1ERKN3WTF12AtomicStringEPKNS_16MessageEventInitE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"*, %"class.blink::MessageEventInit"*), void (%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"*, %"class.blink::MessageEventInit"*)* @_ZN5blink12MessageEventC2ERKN3WTF12AtomicStringEPKNS_16MessageEventInitE
@_ZN5blink12MessageEventC1ERKN3WTF6StringES4_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*), void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*)* @_ZN5blink12MessageEventC2ERKN3WTF6StringES4_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE
@_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*, %"class.blink::UserActivation"*), void (%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*, %"class.blink::UserActivation"*)* @_ZN5blink12MessageEventC2E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationE
@_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.WTF::Vector.409"*, %"class.blink::UserActivation"*, i1), void (%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::EventTarget"*, %"class.WTF::Vector.409"*, %"class.blink::UserActivation"*, i1)* @_ZN5blink12MessageEventC2E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb
@_ZN5blink12MessageEventC1ERKN3WTF6StringEPNS_11EventTargetE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.blink::EventTarget"*), void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.blink::EventTarget"*)* @_ZN5blink12MessageEventC2ERKN3WTF6StringEPNS_11EventTargetE
@_ZN5blink12MessageEventC1ERKN3WTF6StringES4_ = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.WTF::String"*), void (%"class.blink::MessageEvent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink12MessageEventC2ERKN3WTF6StringES4_
@_ZN5blink12MessageEventC1EPNS_4BlobERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.blink::Blob"*, %"class.WTF::String"*), void (%"class.blink::MessageEvent"*, %"class.blink::Blob"*, %"class.WTF::String"*)* @_ZN5blink12MessageEventC2EPNS_4BlobERKN3WTF6StringE
@_ZN5blink12MessageEventC1EPNS_14DOMArrayBufferERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*, %"class.blink::DOMArrayBuffer"*, %"class.WTF::String"*), void (%"class.blink::MessageEvent"*, %"class.blink::DOMArrayBuffer"*, %"class.WTF::String"*)* @_ZN5blink12MessageEventC2EPNS_14DOMArrayBufferERKN3WTF6StringE
@_ZN5blink12MessageEventD1Ev = hidden unnamed_addr alias void (%"class.blink::MessageEvent"*), void (%"class.blink::MessageEvent"*)* @_ZN5blink12MessageEventD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink12MessageEvent27SizeOfExternalMemoryInBytesEv(%"class.blink::MessageEvent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %54 [
    i32 0, label %55
    i32 1, label %55
    i32 2, label %4
    i32 3, label %29
    i32 4, label %37
    i32 5, label %45
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %6 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Member.275"*, %"class.blink::Member.275"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %4, %24
  %15 = phi %"class.blink::Member.275"* [ %27, %24 ], [ %8, %4 ]
  %16 = phi i64 [ %26, %24 ], [ 0, %4 ]
  %17 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %15, i64 0, i32 0, i32 0
  %18 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %19, align 8
  %21 = icmp eq %"class.v8::BackingStore"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %14
  %23 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %20) #9
  br label %24

24:                                               ; preds = %14, %22
  %25 = phi i64 [ %23, %22 ], [ 0, %14 ]
  %26 = add i64 %25, %16
  %27 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %15, i64 1
  %28 = icmp eq %"class.blink::Member.275"* %27, %12
  br i1 %28, label %55, label %14

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %55, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  br label %55

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Blob"*, %"class.blink::Blob"** %38, align 8
  %40 = bitcast %"class.blink::Blob"* %39 to i64 (%"class.blink::Blob"*)***
  %41 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %41, i64 9
  %43 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %42, align 8
  %44 = tail call i64 %43(%"class.blink::Blob"* %39) #9
  br label %55

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7, i32 0, i32 0
  %47 = bitcast %"class.blink::DOMArrayBuffer"** %46 to %"class.blink::DOMArrayBufferBase"**
  %48 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %49, align 8
  %51 = icmp eq %"class.v8::BackingStore"* %50, null
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %50) #9
  br label %55

54:                                               ; preds = %1
  unreachable

55:                                               ; preds = %24, %4, %33, %29, %52, %45, %1, %1, %37
  %56 = phi i64 [ %44, %37 ], [ 0, %1 ], [ 0, %1 ], [ %53, %52 ], [ 0, %45 ], [ %36, %33 ], [ 0, %29 ], [ 0, %4 ], [ %26, %24 ]
  ret i64 %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %8) #9
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %13, i8* %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %16, i8** %6, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 76, %"class.logging::CheckOpResult"* nonnull %3) #9
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %21

21:                                               ; preds = %11, %12, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %22 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  switch i32 %23, label %74 [
    i32 0, label %75
    i32 1, label %75
    i32 2, label %24
    i32 3, label %49
    i32 4, label %57
    i32 5, label %65
  ]

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %26 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.275"*, %"class.blink::Member.275"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %26, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %75, label %34

34:                                               ; preds = %24, %44
  %35 = phi %"class.blink::Member.275"* [ %47, %44 ], [ %28, %24 ]
  %36 = phi i64 [ %46, %44 ], [ 0, %24 ]
  %37 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %35, i64 0, i32 0, i32 0
  %38 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %38, i64 0, i32 1, i32 0, i32 0
  %40 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %39, align 8
  %41 = icmp eq %"class.v8::BackingStore"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %40) #9
  br label %44

44:                                               ; preds = %42, %34
  %45 = phi i64 [ %43, %42 ], [ 0, %34 ]
  %46 = add i64 %45, %36
  %47 = getelementptr inbounds %"class.blink::Member.275", %"class.blink::Member.275"* %35, i64 1
  %48 = icmp eq %"class.blink::Member.275"* %47, %32
  br i1 %48, label %75, label %34

49:                                               ; preds = %21
  %50 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %75, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  br label %75

57:                                               ; preds = %21
  %58 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Blob"*, %"class.blink::Blob"** %58, align 8
  %60 = bitcast %"class.blink::Blob"* %59 to i64 (%"class.blink::Blob"*)***
  %61 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %60, align 8
  %62 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %61, i64 9
  %63 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %62, align 8
  %64 = call i64 %63(%"class.blink::Blob"* %59) #9
  br label %75

65:                                               ; preds = %21
  %66 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7, i32 0, i32 0
  %67 = bitcast %"class.blink::DOMArrayBuffer"** %66 to %"class.blink::DOMArrayBufferBase"**
  %68 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %69, align 8
  %71 = icmp eq %"class.v8::BackingStore"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %70) #9
  br label %75

74:                                               ; preds = %21
  unreachable

75:                                               ; preds = %44, %21, %21, %24, %49, %53, %57, %65, %72
  %76 = phi i64 [ %64, %57 ], [ 0, %21 ], [ 0, %21 ], [ %73, %72 ], [ 0, %65 ], [ %56, %53 ], [ 0, %49 ], [ 0, %24 ], [ %46, %44 ]
  %77 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %78 = call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %77, i64 %76) #9
  store i64 %76, i64* %7, align 8
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #2

declare i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent43UnregisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %7 = load i64, i64* %2, align 8
  %8 = sub nsw i64 0, %7
  %9 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %6, i64 %8) #9
  store i64 0, i64* %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2Ev(%"class.blink::MessageEvent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5EventC2Ev(%"class.blink::Event"* %2) #9
  %3 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false)
  store i8 1, i8* %6, align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  %10 = bitcast %"class.WTF::StringImpl"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  store i8 1, i8* %9, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %13, align 8
  %14 = bitcast %"class.WTF::Vector.409"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN5blink5EventC2Ev(%"class.blink::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2ERKN3WTF12AtomicStringEPKNS_16MessageEventInitE(%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MessageEventInit"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ScriptValue", align 8
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %7 = bitcast %"class.blink::MessageEventInit"* %2 to %"class.blink::EventInit"*
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringEPKNS_9EventInitEN4base9TimeTicksE(%"class.blink::Event"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::EventInit"* %7, i64 %8) #9
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %13 = bitcast %"class.blink::WorldSafeV8Reference"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 48, i1 false)
  store i8 1, i8* %12, align 8
  %14 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12
  %19 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %20 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  %21 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false)
  store i8 1, i8* %20, align 8
  %22 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %23 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 17
  %24 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.WTF::Vector.409"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 25, i1 false)
  %28 = load i64*, i64** %26, align 8
  %29 = icmp eq i64* %28, null
  br i1 %29, label %139, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 4
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %31) #9
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %30
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp eq i32 %54, 10
  br i1 %55, label %139, label %56

56:                                               ; preds = %50, %39, %34, %30
  %57 = bitcast %"class.blink::ScriptValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #9
  %58 = bitcast %"class.blink::ScriptValue"* %31 to i64*
  %59 = load i64, i64* %58, align 8, !noalias !2
  %60 = bitcast %"class.blink::ScriptValue"* %4 to i64*
  store i64 %59, i64* %60, align 8, !alias.scope !2
  %61 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1
  %62 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %63, align 8, !alias.scope !2
  %64 = icmp eq %"class.blink::ScriptValue"* %31, %4
  br i1 %64, label %69, label %65

65:                                               ; preds = %56
  %66 = load i64*, i64** %26, align 8, !noalias !2
  %67 = icmp eq i64* %66, null
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %26, i64** %63) #9
  br label %69

69:                                               ; preds = %68, %65, %56
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %62) #9
  %70 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 4, i32 1, i32 1, i32 0
  %71 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %70, align 8, !noalias !2
  %72 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %71, %"class.blink::DOMWrapperWorld"** %72, align 8, !alias.scope !2
  %73 = icmp eq %"class.blink::DOMWrapperWorld"* %71, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %71, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %75) #9
  br label %76

76:                                               ; preds = %69, %74
  %77 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %4) #9
  %78 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %72, align 8
  %79 = icmp eq %"class.blink::DOMWrapperWorld"* %78, null
  br i1 %79, label %87, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %78, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %81) #9
  %82 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %80
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %78) #9
  %86 = bitcast %"class.blink::DOMWrapperWorld"* %78 to i8*
  call void @free(i8* %86) #9
  br label %87

87:                                               ; preds = %76, %80, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #9
  %88 = bitcast %"class.v8::Value"* %77 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = and i64 %89, 3
  %91 = icmp eq i64 %90, 1
  br i1 %91, label %92, label %108

92:                                               ; preds = %87
  %93 = add i64 %89, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = and i64 %89, -4294967296
  %97 = zext i32 %95 to i64
  %98 = or i64 %96, %97
  %99 = add i64 %98, 7
  %100 = inttoptr i64 %99 to i16*
  %101 = load i16, i16* %100, align 2
  %102 = icmp eq i16 %101, 67
  br i1 %102, label %103, label %108

103:                                              ; preds = %92
  %104 = add i64 %89, 23
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = ashr i32 %106, 1
  switch i32 %107, label %108 [
    i32 5, label %139
    i32 3, label %139
  ]

108:                                              ; preds = %103, %92, %87
  %109 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #9
  %110 = load i64, i64* %58, align 8, !noalias !5
  %111 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %110, i64* %111, align 8, !alias.scope !5
  %112 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %113 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %112, i64 0, i32 0
  %114 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %112, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %114, align 8, !alias.scope !5
  %115 = icmp eq %"class.blink::ScriptValue"* %31, %5
  br i1 %115, label %120, label %116

116:                                              ; preds = %108
  %117 = load i64*, i64** %26, align 8, !noalias !5
  %118 = icmp eq i64* %117, null
  br i1 %118, label %120, label %119

119:                                              ; preds = %116
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %26, i64** %114) #9
  br label %120

120:                                              ; preds = %119, %116, %108
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %113) #9
  %121 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %70, align 8, !noalias !5
  %122 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %121, %"class.blink::DOMWrapperWorld"** %122, align 8, !alias.scope !5
  %123 = icmp eq %"class.blink::DOMWrapperWorld"* %121, null
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %121, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %125) #9
  br label %126

126:                                              ; preds = %120, %124
  %127 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 0
  %128 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %127, align 8
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEE3SetEPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %11, %"class.v8::Isolate"* %128, %"class.v8::Value"* %77)
  %129 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %122, align 8
  %130 = icmp eq %"class.blink::DOMWrapperWorld"* %129, null
  br i1 %130, label %138, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %129, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %132) #9
  %133 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %129, i64 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %131
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %129) #9
  %137 = bitcast %"class.blink::DOMWrapperWorld"* %129 to i8*
  call void @free(i8* %137) #9
  br label %138

138:                                              ; preds = %126, %131, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #9
  br label %139

139:                                              ; preds = %50, %103, %103, %3, %138
  %140 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 6, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %178, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = zext i32 %150 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #9
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !8

157:                                              ; preds = %148
  call void @llvm.trap() #9
  unreachable

158:                                              ; preds = %148
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %149, align 4
  br label %160

160:                                              ; preds = %158, %143
  %161 = ptrtoint %"class.WTF::StringImpl"* %141 to i64
  %162 = bitcast %"class.WTF::String"* %14 to i64*
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %161, i64* %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #9
  br label %178

178:                                              ; preds = %139, %177, %174, %160
  %179 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 5, i32 0, i32 0
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %217, label %182

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #9
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !8

196:                                              ; preds = %187
  call void @llvm.trap() #9
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %197, %182
  %200 = ptrtoint %"class.WTF::StringImpl"* %180 to i64
  %201 = bitcast %"class.WTF::String"* %16 to i64*
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %200, i64* %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %202) #9
  br label %217

217:                                              ; preds = %178, %216, %213, %199
  %218 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 2
  %219 = load i8, i8* %218, align 1, !range !9
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %281, label %221

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 8, i32 0, i32 0
  %223 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %222, align 8
  %224 = icmp eq %"class.blink::EventTarget"* %223, null
  br i1 %224, label %272, label %225

225:                                              ; preds = %221
  %226 = bitcast %"class.blink::EventTarget"* %223 to %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)***
  %227 = load %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)**, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*** %226, align 8
  %228 = getelementptr inbounds %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)** %227, i64 12
  %229 = load %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)** %228, align 8
  %230 = call %"class.blink::DOMWindow"* %229(%"class.blink::EventTarget"* nonnull %223) #9
  %231 = icmp eq %"class.blink::DOMWindow"* %230, null
  br i1 %231, label %232, label %272

232:                                              ; preds = %225
  %233 = bitcast %"class.blink::EventTarget"* %223 to %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)***
  %234 = load %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)**, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*** %233, align 8
  %235 = getelementptr inbounds %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)** %234, i64 15
  %236 = load %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)** %235, align 8
  %237 = call %"class.blink::MessagePort"* %236(%"class.blink::EventTarget"* nonnull %223) #9
  %238 = icmp eq %"class.blink::MessagePort"* %237, null
  br i1 %238, label %239, label %272

239:                                              ; preds = %232
  %240 = bitcast %"class.blink::EventTarget"* %223 to %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)***
  %241 = load %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)**, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*** %240, align 8
  %242 = getelementptr inbounds %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)** %241, i64 16
  %243 = load %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)** %242, align 8
  %244 = call %"class.blink::ServiceWorker"* %243(%"class.blink::EventTarget"* nonnull %223) #9
  %245 = icmp eq %"class.blink::ServiceWorker"* %244, null
  br i1 %245, label %246, label %272

246:                                              ; preds = %239
  %247 = bitcast %"class.blink::EventTarget"* %223 to %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)***
  %248 = load %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)**, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*** %247, align 8
  %249 = getelementptr inbounds %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)** %248, i64 17
  %250 = load %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)** %249, align 8
  %251 = call %"class.blink::PortalHost"* %250(%"class.blink::EventTarget"* nonnull %223) #9
  %252 = icmp eq %"class.blink::PortalHost"* %251, null
  br i1 %252, label %253, label %272

253:                                              ; preds = %246
  %254 = bitcast %"class.blink::EventTarget"* %223 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %255 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %254, align 8
  %256 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %255, i64 11
  %257 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %256, align 8
  %258 = call %"class.blink::Node"* %257(%"class.blink::EventTarget"* nonnull %223) #9
  %259 = icmp eq %"class.blink::Node"* %258, null
  br i1 %259, label %281, label %260

260:                                              ; preds = %253
  %261 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %258, i64 0, i32 1
  %262 = load i32, i32* %261, align 8
  %263 = and i32 %262, 48
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %281

265:                                              ; preds = %260
  %266 = bitcast %"class.blink::Node"* %258 to %"class.blink::HTMLElement"*
  %267 = bitcast %"class.blink::Node"* %258 to i1 (%"class.blink::HTMLElement"*)***
  %268 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %267, align 8
  %269 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %268, i64 163
  %270 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %269, align 8
  %271 = call zeroext i1 %270(%"class.blink::HTMLElement"* nonnull %266) #9
  br i1 %271, label %272, label %281

272:                                              ; preds = %221, %225, %232, %239, %246, %265
  %273 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %222, align 8
  %274 = ptrtoint %"class.blink::EventTarget"* %273 to i64
  %275 = bitcast %"class.blink::Member"* %18 to i64*
  store atomic i64 %274, i64* %275 monotonic, align 8
  %276 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %281, label %278

278:                                              ; preds = %272
  %279 = bitcast %"class.blink::EventTarget"* %273 to i8*
  %280 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %279) #9
  br label %281

281:                                              ; preds = %217, %260, %253, %278, %272, %265
  %282 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 1
  %283 = load i8, i8* %282, align 2, !range !9
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %299, label %285

285:                                              ; preds = %281
  %286 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEEEPhm(i64 16) #9
  %287 = bitcast i8* %286 to %"class.WTF::Vector.300"*
  %288 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 7, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.300"* %287, %"class.WTF::Vector.300"* dereferenceable(16) %288) #9
  %289 = getelementptr inbounds i8, i8* %286, i64 -4
  %290 = bitcast i8* %289 to i16*
  %291 = load atomic i16, i16* %290 monotonic, align 2
  %292 = or i16 %291, 1
  store atomic i16 %292, i16* %290 release, align 2
  %293 = ptrtoint i8* %286 to i64
  %294 = bitcast %"class.blink::Member.295"* %19 to i64*
  store atomic i64 %293, i64* %294 monotonic, align 8
  %295 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %299, label %297

297:                                              ; preds = %285
  %298 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %286) #9
  br label %299

299:                                              ; preds = %281, %297, %285
  %300 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 3
  %301 = load i8, i8* %300, align 8, !range !9
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %313, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %2, i64 0, i32 9, i32 0, i32 0
  %305 = load %"class.blink::UserActivation"*, %"class.blink::UserActivation"** %304, align 8
  %306 = ptrtoint %"class.blink::UserActivation"* %305 to i64
  %307 = bitcast %"class.blink::Member.414"* %23 to i64*
  store atomic i64 %306, i64* %307 monotonic, align 8
  %308 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %313, label %310

310:                                              ; preds = %303
  %311 = bitcast %"class.blink::UserActivation"* %305 to i8*
  %312 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %311) #9
  br label %313

313:                                              ; preds = %299, %310, %303
  ret void
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEE3SetEPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #9
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #9
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %10

10:                                               ; preds = %3, %7
  %11 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %12 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %11) #9
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 2, i32 0
  %14 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %13, align 8
  call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %14, %"class.v8::Value"* %2) #9
  %15 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1, i32 0
  %21 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %20, align 8
  %22 = icmp eq %"class.blink::DOMWrapperWorld"* %21, %14
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  %26 = load i64*, i64** %16, align 8
  %27 = icmp eq i64* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %19, %23
  %29 = phi i64* [ %26, %23 ], [ %17, %19 ]
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %29) #9
  %30 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  br label %31

31:                                               ; preds = %10, %28, %23
  %32 = icmp eq %"class.v8::Value"* %2, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.v8::Value"* %2 to i64*
  %35 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %36 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %37 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %35, i64* nonnull %34, i64* %36, i1 zeroext false) #9
  %38 = ptrtoint i64* %37 to i64
  store atomic i64 %38, i64* %36 monotonic, align 8
  br label %39

39:                                               ; preds = %31, %33
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %15) #9
  %40 = icmp eq %"class.blink::DOMWrapperWorld"* %14, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #9
  br label %43

43:                                               ; preds = %39, %41
  %44 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %45 = ptrtoint %"class.blink::DOMWrapperWorld"* %14 to i64
  %46 = bitcast %class.scoped_refptr.8* %44 to i64*
  %47 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %44, i64 0, i32 0
  %48 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %47, align 8
  store i64 %45, i64* %46, align 8
  %49 = icmp eq %"class.blink::DOMWrapperWorld"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #9
  %52 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %48) #9
  %56 = bitcast %"class.blink::DOMWrapperWorld"* %48 to i8*
  call void @free(i8* %56) #9
  br label %57

57:                                               ; preds = %43, %50, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2ERKN3WTF6StringES4_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE(%"class.blink::MessageEvent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %7 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %6, %"class.WTF::AtomicString"* dereferenceable(8) %7, i32 1, i32 1, i32 1) #9
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 48, i1 false)
  store i8 1, i8* %11, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !8

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %5, %17, %32
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #9
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !8

53:                                               ; preds = %44
  tail call void @llvm.trap() #9
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %34, %39, %54
  %57 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::EventTarget"* %3, %"class.blink::EventTarget"** %57, align 8
  %58 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.blink::HeapVector.297"* %4, %"class.blink::HeapVector.297"** %58, align 8
  %59 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %59, align 8
  %60 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %61 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %62, align 8
  %63 = bitcast %"class.WTF::Vector.409"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 25, i1 false)
  ret void
}

declare void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationE(%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*, %"class.blink::UserActivation"*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %9, i32 1, i32 1, i32 1) #9
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 2, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %13 = bitcast %"class.blink::WorldSafeV8Reference"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #9
  %14 = tail call %"class.blink::UnpackedSerializedScriptValue"* @_ZN5blink21SerializedScriptValue6UnpackE13scoped_refptrIS0_E(%"class.blink::SerializedScriptValue"* %1) #9
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::UnpackedSerializedScriptValue"* %14, %"class.blink::UnpackedSerializedScriptValue"** %15, align 8
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %18 = bitcast %"class.WTF::StringImpl"** %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false)
  store i8 1, i8* %17, align 8
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %40

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #9
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !8

37:                                               ; preds = %28
  tail call void @llvm.trap() #9
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %40

40:                                               ; preds = %7, %23, %38
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %43, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %44, label %62, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i33
  %54 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #9
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !8

59:                                               ; preds = %50
  tail call void @llvm.trap() #9
  unreachable

60:                                               ; preds = %50
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %51, align 4
  br label %62

62:                                               ; preds = %60, %45, %40
  %63 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::EventTarget"* %4, %"class.blink::EventTarget"** %63, align 8
  %64 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.blink::HeapVector.297"* %5, %"class.blink::HeapVector.297"** %64, align 8
  %65 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %65, align 8
  %66 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %67 = bitcast %"class.WTF::Vector.409"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #9
  %68 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 17, i32 0, i32 0
  store %"class.blink::UserActivation"* %6, %"class.blink::UserActivation"** %68, align 8
  %69 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 18
  store i8 0, i8* %69, align 8
  %70 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %71, align 8
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  ret void
}

declare %"class.blink::UnpackedSerializedScriptValue"* @_ZN5blink21SerializedScriptValue6UnpackE13scoped_refptrIS0_E(%"class.blink::SerializedScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetENS4_6VectorINS_18MessagePortChannelELj0ENS4_18PartitionAllocatorEEEPNS_14UserActivationEb(%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.WTF::Vector.409"* nocapture, %"class.blink::UserActivation"*, i1 zeroext) unnamed_addr #0 align 2 {
  %9 = zext i1 %7 to i8
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %11, i32 1, i32 1, i32 1) #9
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %15 = bitcast %"class.blink::WorldSafeV8Reference"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #9
  %16 = tail call %"class.blink::UnpackedSerializedScriptValue"* @_ZN5blink21SerializedScriptValue6UnpackE13scoped_refptrIS0_E(%"class.blink::SerializedScriptValue"* %1) #9
  %17 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::UnpackedSerializedScriptValue"* %16, %"class.blink::UnpackedSerializedScriptValue"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %20 = bitcast %"class.WTF::StringImpl"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false)
  store i8 1, i8* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %23, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #9
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !8

39:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %8, %25, %40
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !8

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::EventTarget"* %4, %"class.blink::EventTarget"** %65, align 8
  %66 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.blink::HeapVector.297"* null, %"class.blink::HeapVector.297"** %66, align 8
  %67 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %67, align 8
  %68 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %69 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16, i32 0, i32 0, i32 2
  %71 = bitcast %"class.WTF::Vector.409"* %5 to i64*
  %72 = bitcast %"class.WTF::Vector.409"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #9
  %73 = load i64, i64* %71, align 8
  %74 = bitcast %"class.WTF::Vector.409"* %68 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %69, align 4
  %77 = load i32, i32* %75, align 4
  store i32 %77, i32* %69, align 4
  store i32 %76, i32* %75, align 4
  %78 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %70, align 4
  %80 = load i32, i32* %78, align 4
  store i32 %80, i32* %70, align 4
  store i32 %79, i32* %78, align 4
  %81 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 17, i32 0, i32 0
  store %"class.blink::UserActivation"* %6, %"class.blink::UserActivation"** %81, align 8
  %82 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 18
  store i8 %9, i8* %82, align 8
  %83 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %84, align 8
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2ERKN3WTF6StringEPNS_11EventTargetE(%"class.blink::MessageEvent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names13kMessageerrorE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, i32 1, i32 1, i32 1) #9
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false)
  store i8 1, i8* %9, align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #9
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !8

29:                                               ; preds = %20
  tail call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %3, %15, %30
  %33 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::EventTarget"* %2, %"class.blink::EventTarget"** %34, align 8
  %35 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.blink::HeapVector.297"* null, %"class.blink::HeapVector.297"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %36, align 8
  %37 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %38 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %39, align 8
  %40 = bitcast %"class.WTF::Vector.409"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2ERKN3WTF6StringES4_(%"class.blink::MessageEvent"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, i32 1, i32 1, i32 1) #9
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 3, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %12, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #9
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !8

28:                                               ; preds = %19
  tail call void @llvm.trap() #9
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %3, %14, %29
  %32 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  %34 = bitcast %"class.blink::Blob"** %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false)
  store i8 1, i8* %33, align 8
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #9
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !8

53:                                               ; preds = %44
  tail call void @llvm.trap() #9
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %31, %39, %54
  %57 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  %59 = bitcast %"class.WTF::StringImpl"** %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false)
  store i8 1, i8* %58, align 8
  %60 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %61 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %62, align 8
  %63 = bitcast %"class.WTF::Vector.409"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 25, i1 false)
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2EPNS_4BlobERKN3WTF6StringE(%"class.blink::MessageEvent"*, %"class.blink::Blob"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, i32 1, i32 1, i32 1) #9
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 4, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false)
  store %"class.blink::Blob"* %1, %"class.blink::Blob"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::DOMArrayBuffer"* null, %"class.blink::DOMArrayBuffer"** %11, align 8
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %15, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %16, label %34, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i33
  %26 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %25, i33 1) #9
  %27 = extractvalue { i33, i1 } %26, 1
  %28 = extractvalue { i33, i1 } %26, 0
  %29 = icmp slt i33 %28, 0
  %30 = or i1 %27, %29
  br i1 %30, label %31, label %32, !prof !8

31:                                               ; preds = %22
  tail call void @llvm.trap() #9
  unreachable

32:                                               ; preds = %22
  %33 = trunc i33 %28 to i32
  store i32 %33, i32* %23, align 4
  br label %34

34:                                               ; preds = %3, %17, %32
  %35 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  %37 = bitcast %"class.WTF::StringImpl"** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false)
  store i8 1, i8* %36, align 8
  %38 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %39 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %40, align 8
  %41 = bitcast %"class.WTF::Vector.409"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 25, i1 false)
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventC2EPNS_14DOMArrayBufferERKN3WTF6StringE(%"class.blink::MessageEvent"*, %"class.blink::DOMArrayBuffer"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kMessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, i32 1, i32 1, i32 1) #9
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 5, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7, i32 0, i32 0
  %10 = bitcast %"class.blink::WorldSafeV8Reference"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false)
  store %"class.blink::DOMArrayBuffer"* %1, %"class.blink::DOMArrayBuffer"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %14, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #9
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !8

30:                                               ; preds = %21
  tail call void @llvm.trap() #9
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %3, %16, %31
  %34 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  %36 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false)
  store i8 1, i8* %35, align 8
  %37 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %38 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 0, i8* %39, align 8
  %40 = bitcast %"class.WTF::Vector.409"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 25, i1 false)
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventD2Ev(%"class.blink::MessageEvent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink12MessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 20
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %8 = load i64, i64* %3, align 8
  %9 = sub nsw i64 0, %8
  %10 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %7, i64 %9) #9
  store i64 0, i64* %3, align 8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %13 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %13, align 8
  %15 = icmp eq %"class.blink::MessagePortChannel"* %14, null
  br i1 %15, label %33, label %16, !prof !10

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::MessagePortChannel"* %14 to i8*
  %18 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21, !prof !8

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %14, i64 %22
  br label %24

24:                                               ; preds = %24, %21
  %25 = phi %"class.blink::MessagePortChannel"* [ %26, %24 ], [ %14, %21 ]
  tail call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %25) #9
  %26 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %25, i64 1
  %27 = icmp eq %"class.blink::MessagePortChannel"* %26, %23
  br i1 %27, label %28, label %24

28:                                               ; preds = %24
  store i32 0, i32* %18, align 4
  %29 = bitcast %"class.WTF::Vector.409"* %12 to i8**
  %30 = load i8*, i8** %29, align 8
  br label %31

31:                                               ; preds = %28, %16
  %32 = phi i8* [ %30, %28 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %32) #9
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %13, align 8
  br label %33

33:                                               ; preds = %11, %31
  %34 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %50

50:                                               ; preds = %33, %46, %49
  %51 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %50, %63, %66
  %68 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %84

84:                                               ; preds = %67, %80, %83
  %85 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3, i32 1, i32 0
  %86 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %85, align 8
  %87 = icmp eq %"class.blink::DOMWrapperWorld"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %86, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %89) #9
  %90 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %86, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %86) #9
  %94 = bitcast %"class.blink::DOMWrapperWorld"* %86 to i8*
  tail call void @free(i8* %94) #9
  br label %95

95:                                               ; preds = %84, %88, %93
  %96 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5EventD2Ev(%"class.blink::Event"* %96) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink5EventD2Ev(%"class.blink::Event"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEventD0Ev(%"class.blink::MessageEvent"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12MessageEventD2Ev(%"class.blink::MessageEvent"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MessageEvent"* @_ZN5blink12MessageEvent6CreateERKN3WTF12AtomicStringEPKNS_16MessageEventInitERNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MessageEventInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MessageEventInit", %"class.blink::MessageEventInit"* %1, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %4, align 8
  %6 = icmp eq %"class.blink::EventTarget"* %5, null
  br i1 %6, label %55, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::EventTarget"* %5 to %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)***
  %9 = load %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)**, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)** %9, i64 12
  %11 = load %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)*, %"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)** %10, align 8
  %12 = tail call %"class.blink::DOMWindow"* %11(%"class.blink::EventTarget"* nonnull %5) #9
  %13 = icmp eq %"class.blink::DOMWindow"* %12, null
  br i1 %13, label %14, label %55

14:                                               ; preds = %7
  %15 = bitcast %"class.blink::EventTarget"* %5 to %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)***
  %16 = load %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)**, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)** %16, i64 15
  %18 = load %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)*, %"class.blink::MessagePort"* (%"class.blink::EventTarget"*)** %17, align 8
  %19 = tail call %"class.blink::MessagePort"* %18(%"class.blink::EventTarget"* nonnull %5) #9
  %20 = icmp eq %"class.blink::MessagePort"* %19, null
  br i1 %20, label %21, label %55

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::EventTarget"* %5 to %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)***
  %23 = load %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)**, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)** %23, i64 16
  %25 = load %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)*, %"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)** %24, align 8
  %26 = tail call %"class.blink::ServiceWorker"* %25(%"class.blink::EventTarget"* nonnull %5) #9
  %27 = icmp eq %"class.blink::ServiceWorker"* %26, null
  br i1 %27, label %28, label %55

28:                                               ; preds = %21
  %29 = bitcast %"class.blink::EventTarget"* %5 to %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)***
  %30 = load %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)**, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)** %30, i64 17
  %32 = load %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)*, %"class.blink::PortalHost"* (%"class.blink::EventTarget"*)** %31, align 8
  %33 = tail call %"class.blink::PortalHost"* %32(%"class.blink::EventTarget"* nonnull %5) #9
  %34 = icmp eq %"class.blink::PortalHost"* %33, null
  br i1 %34, label %35, label %55

35:                                               ; preds = %28
  %36 = bitcast %"class.blink::EventTarget"* %5 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %37 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %37, i64 11
  %39 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %38, align 8
  %40 = tail call %"class.blink::Node"* %39(%"class.blink::EventTarget"* nonnull %5) #9
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 48
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %42
  %48 = bitcast %"class.blink::Node"* %40 to %"class.blink::HTMLElement"*
  %49 = bitcast %"class.blink::Node"* %40 to i1 (%"class.blink::HTMLElement"*)***
  %50 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %50, i64 163
  %52 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::HTMLElement"* nonnull %48) #9
  br i1 %53, label %55, label %54

54:                                               ; preds = %42, %35, %47
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %62

55:                                               ; preds = %7, %14, %21, %28, %3, %47
  %56 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #9
  %57 = bitcast i8* %56 to %"class.blink::MessageEvent"*
  tail call void @_ZN5blink12MessageEventC2ERKN3WTF12AtomicStringEPKNS_16MessageEventInitE(%"class.blink::MessageEvent"* %57, %"class.WTF::AtomicString"* dereferenceable(8) %0, %"class.blink::MessageEventInit"* %1) #9
  %58 = getelementptr inbounds i8, i8* %56, i64 -4
  %59 = bitcast i8* %58 to i16*
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  br label %62

62:                                               ; preds = %55, %54
  %63 = phi %"class.blink::MessageEvent"* [ %57, %55 ], [ null, %54 ]
  ret %"class.blink::MessageEvent"* %63
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent16initMessageEventERKN3WTF12AtomicStringEbbRKNS_11ScriptValueERKNS1_6StringESA_PNS_11EventTargetERNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE(%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.blink::ScriptValue"* dereferenceable(24), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 4
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %138

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5Event9initEventERKN3WTF12AtomicStringEbb(%"class.blink::Event"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %2, i1 zeroext %3) #9
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %4, i64 0, i32 0
  %18 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %17, align 8
  %19 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %4) #9
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEE3SetEPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %16, %"class.v8::Isolate"* %18, %"class.v8::Value"* %19)
  %20 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  store i8 1, i8* %20, align 8
  %21 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %42, label %25

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i33
  %34 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %33, i33 1) #9
  %35 = extractvalue { i33, i1 } %34, 1
  %36 = extractvalue { i33, i1 } %34, 0
  %37 = icmp slt i33 %36, 0
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %40, !prof !8

39:                                               ; preds = %30
  tail call void @llvm.trap() #9
  unreachable

40:                                               ; preds = %30
  %41 = trunc i33 %36 to i32
  store i32 %41, i32* %31, align 4
  br label %42

42:                                               ; preds = %40, %25, %13
  %43 = ptrtoint %"class.WTF::StringImpl"* %23 to i64
  %44 = bitcast %"class.WTF::String"* %21 to i64*
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  store i64 %43, i64* %44, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #9
  br label %61

61:                                               ; preds = %42, %57, %60
  %62 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #9
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !8

80:                                               ; preds = %71
  tail call void @llvm.trap() #9
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %81, %66, %61
  %84 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  %85 = bitcast %"class.WTF::String"* %62 to i64*
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  store i64 %84, i64* %85, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #9
  br label %102

102:                                              ; preds = %83, %98, %101
  %103 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12
  %104 = ptrtoint %"class.blink::EventTarget"* %7 to i64
  %105 = bitcast %"class.blink::Member"* %103 to i64*
  store atomic i64 %104, i64* %105 monotonic, align 8
  %106 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.blink::EventTarget"* %7 to i8*
  %110 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #9
  br label %111

111:                                              ; preds = %102, %108
  %112 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %117 = bitcast %"class.blink::Member.295"* %116 to i64*
  store atomic i64 0, i64* %117 monotonic, align 8
  br label %136

118:                                              ; preds = %111
  %119 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEEEPhm(i64 16) #9
  %120 = getelementptr inbounds i8, i8* %119, i64 -4
  %121 = bitcast i8* %120 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #9
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = or i16 %122, 1
  store atomic i16 %123, i16* %121 release, align 2
  %124 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %125 = ptrtoint i8* %119 to i64
  %126 = bitcast %"class.blink::Member.295"* %124 to i64*
  store atomic i64 %125, i64* %126 monotonic, align 8
  %127 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %128 = icmp eq i32 %127, 0
  %129 = bitcast i8* %119 to %"class.blink::HeapVector.297"*
  br i1 %128, label %134, label %130

130:                                              ; preds = %118
  %131 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %119) #9
  %132 = getelementptr inbounds %"class.blink::Member.295", %"class.blink::Member.295"* %124, i64 0, i32 0, i32 0
  %133 = load %"class.blink::HeapVector.297"*, %"class.blink::HeapVector.297"** %132, align 8
  br label %134

134:                                              ; preds = %118, %130
  %135 = phi %"class.blink::HeapVector.297"* [ %129, %118 ], [ %133, %130 ]
  tail call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_11MessagePortEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector.297"* dereferenceable(16) %135, %"class.blink::HeapVector.297"* dereferenceable(16) %8) #9
  br label %136

136:                                              ; preds = %134, %115
  %137 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %137, align 8
  br label %138

138:                                              ; preds = %9, %136
  ret void
}

declare void @_ZN5blink5Event9initEventERKN3WTF12AtomicStringEbb(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_11MessagePortEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector.297"* dereferenceable(16), %"class.blink::HeapVector.297"* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %3 = bitcast %"class.blink::HeapVector.297"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #9
  br label %14

14:                                               ; preds = %11, %2
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::HeapVector.297"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #9
  br label %21

21:                                               ; preds = %14, %17
  %22 = bitcast %"class.blink::HeapVector.297"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %3, align 8
  store atomic i64 %24, i64* %22 monotonic, align 8
  store atomic i64 %23, i64* %3 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %5, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %7, align 4
  store i32 %29, i32* %28, align 4
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::HeapVector.297"* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #9
  br label %37

37:                                               ; preds = %33, %21
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = bitcast %"class.blink::HeapVector.297"* %1 to i8**
  br i1 %39, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %40, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #9
  br label %44

44:                                               ; preds = %37, %41
  %45 = load i8*, i8** %40, align 8
  store atomic i64 %4, i64* %22 monotonic, align 8
  store i32 %6, i32* %25, align 4
  store i32 %8, i32* %28, align 4
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %4 to i8*
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #9
  br label %51

51:                                               ; preds = %48, %44
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #9
  br label %56

56:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent16initMessageEventERKN3WTF12AtomicStringEbb13scoped_refptrINS_21SerializedScriptValueEERKNS1_6StringESA_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationEb(%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*, %"class.blink::UserActivation"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %12 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 4
  %13 = load i8, i8* %12, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %141

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  %17 = zext i1 %10 to i8
  tail call void @_ZN5blink5Event9initEventERKN3WTF12AtomicStringEbb(%"class.blink::Event"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %2, i1 zeroext %3) #9
  %18 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 2, i32* %18, align 8
  %19 = tail call %"class.blink::UnpackedSerializedScriptValue"* @_ZN5blink21SerializedScriptValue6UnpackE13scoped_refptrIS0_E(%"class.blink::SerializedScriptValue"* %4) #9
  %20 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4
  %21 = ptrtoint %"class.blink::UnpackedSerializedScriptValue"* %19 to i64
  %22 = bitcast %"class.blink::Member.186"* %20 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  %26 = bitcast %"class.blink::UnpackedSerializedScriptValue"* %19 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #9
  br label %28

28:                                               ; preds = %15, %25
  %29 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #9
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !8

48:                                               ; preds = %39
  tail call void @llvm.trap() #9
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %49, %34, %28
  %52 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %53 = bitcast %"class.WTF::String"* %30 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 %52, i64* %53, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #9
  br label %70

70:                                               ; preds = %51, %66, %69
  %71 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #9
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !8

89:                                               ; preds = %80
  tail call void @llvm.trap() #9
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %90, %75, %70
  %93 = ptrtoint %"class.WTF::StringImpl"* %73 to i64
  %94 = bitcast %"class.WTF::String"* %71 to i64*
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %71, i64 0, i32 0, i32 0
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  store i64 %93, i64* %94, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #9
  br label %111

111:                                              ; preds = %92, %107, %110
  %112 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12
  %113 = ptrtoint %"class.blink::EventTarget"* %7 to i64
  %114 = bitcast %"class.blink::Member"* %112 to i64*
  store atomic i64 %113, i64* %114 monotonic, align 8
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = bitcast %"class.blink::EventTarget"* %7 to i8*
  %119 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %118) #9
  br label %120

120:                                              ; preds = %111, %117
  %121 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %122 = ptrtoint %"class.blink::HeapVector.297"* %8 to i64
  %123 = bitcast %"class.blink::Member.295"* %121 to i64*
  store atomic i64 %122, i64* %123 monotonic, align 8
  %124 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %129, label %126

126:                                              ; preds = %120
  %127 = bitcast %"class.blink::HeapVector.297"* %8 to i8*
  %128 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %127) #9
  br label %129

129:                                              ; preds = %120, %126
  %130 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %130, align 8
  %131 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 17
  %132 = ptrtoint %"class.blink::UserActivation"* %9 to i64
  %133 = bitcast %"class.blink::Member.414"* %131 to i64*
  store atomic i64 %132, i64* %133 monotonic, align 8
  %134 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.blink::UserActivation"* %9 to i8*
  %138 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %137) #9
  br label %139

139:                                              ; preds = %136, %129
  %140 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 18
  store i8 %17, i8* %140, align 8
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  br label %149

141:                                              ; preds = %11
  %142 = icmp eq %"class.blink::SerializedScriptValue"* %4, null
  br i1 %142, label %149, label %143

143:                                              ; preds = %141
  %144 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = atomicrmw sub i32* %144, i32 1 acq_rel
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %149

147:                                              ; preds = %143
  tail call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %4) #9
  %148 = bitcast %"class.blink::SerializedScriptValue"* %4 to i8*
  tail call void @free(i8* %148) #9
  br label %149

149:                                              ; preds = %139, %141, %143, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent16initMessageEventERKN3WTF12AtomicStringEbbRKNS1_6StringES7_S7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEE(%"class.blink::MessageEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, i1 zeroext, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.297"*) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 4
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %159

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5Event9initEventERKN3WTF12AtomicStringEbb(%"class.blink::Event"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %1, i1 zeroext %2, i1 zeroext %3) #9
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  store i32 3, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %37, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #9
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !8

34:                                               ; preds = %25
  tail call void @llvm.trap() #9
  unreachable

35:                                               ; preds = %25
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %26, align 4
  br label %37

37:                                               ; preds = %35, %20, %13
  %38 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  %39 = bitcast %"class.WTF::String"* %16 to i64*
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #9
  br label %56

56:                                               ; preds = %37, %52, %55
  %57 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 8
  store i8 1, i8* %57, align 8
  %58 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 10
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #9
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !8

76:                                               ; preds = %67
  tail call void @llvm.trap() #9
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %77, %62, %56
  %80 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %81 = bitcast %"class.WTF::String"* %58 to i64*
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  store i64 %80, i64* %81, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %83, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  br i1 %89, label %92, label %94

92:                                               ; preds = %85
  %93 = add i32 %91, -1
  store i32 %93, i32* %90, align 4
  br label %94

94:                                               ; preds = %92, %85
  %95 = phi i32 [ %93, %92 ], [ %91, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %83) #9
  br label %98

98:                                               ; preds = %79, %94, %97
  %99 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 11
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #9
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !8

117:                                              ; preds = %108
  tail call void @llvm.trap() #9
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %118, %103, %98
  %121 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %122 = bitcast %"class.WTF::String"* %99 to i64*
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %99, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  store i64 %121, i64* %122, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #9
  br label %139

139:                                              ; preds = %120, %135, %138
  %140 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12
  %141 = ptrtoint %"class.blink::EventTarget"* %7 to i64
  %142 = bitcast %"class.blink::Member"* %140 to i64*
  store atomic i64 %141, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::EventTarget"* %7 to i8*
  %147 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %146) #9
  br label %148

148:                                              ; preds = %139, %145
  %149 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %150 = ptrtoint %"class.blink::HeapVector.297"* %8 to i64
  %151 = bitcast %"class.blink::Member.295"* %149 to i64*
  store atomic i64 %150, i64* %151 monotonic, align 8
  %152 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %148
  %155 = bitcast %"class.blink::HeapVector.297"* %8 to i8*
  %156 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %155) #9
  br label %157

157:                                              ; preds = %148, %154
  %158 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %158, align 8
  tail call void @_ZN5blink12MessageEvent41RegisterAmountOfExternallyAllocatedMemoryEv(%"class.blink::MessageEvent"* %0)
  br label %159

159:                                              ; preds = %9, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent4dataEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::MessageEvent"*, %"class.blink::ScriptState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.blink::HeapVector.297", align 8
  %6 = alloca %"struct.blink::SerializedScriptValue::DeserializeOptions", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 8
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = bitcast %"class.v8::Isolate"* %10 to %"class.v8::internal::Isolate"*
  switch i32 %12, label %166 [
    i32 0, label %14
    i32 1, label %17
    i32 2, label %38
    i32 3, label %73
    i32 4, label %94
    i32 5, label %130
  ]

14:                                               ; preds = %3
  %15 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %16 = add i64 %15, 176
  br label %166

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = icmp eq i64* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %24 = add i64 %23, 176
  br label %166

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 3, i32 1, i32 0
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.6, i64 0, i64 0), i32 93, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0)) #9
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  %32 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %26, align 8
  br label %33

33:                                               ; preds = %25, %29
  %34 = phi %"class.blink::DOMWrapperWorld"* [ %27, %25 ], [ %32, %29 ]
  %35 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %18, i64 0, i32 0
  %36 = call %"class.v8::Value"* @_ZN5blink28WorldSafeV8ReferenceInternal16ToWorldSafeValueEPNS_11ScriptStateERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEERKNS_15DOMWrapperWorldE(%"class.blink::ScriptState"* %2, %"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %35, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %34) #9
  %37 = ptrtoint %"class.v8::Value"* %36 to i64
  br label %166

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 4, i32 0, i32 0
  %40 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %39, align 8
  %41 = icmp eq %"class.blink::UnpackedSerializedScriptValue"* %40, null
  br i1 %41, label %70, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 20
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  %48 = load i64, i64* %43, align 8
  %49 = sub nsw i64 0, %48
  %50 = tail call i64 @_ZN2v87Isolate37AdjustAmountOfExternalAllocatedMemoryEl(%"class.v8::Isolate"* %47, i64 %49) #9
  store i64 0, i64* %43, align 8
  br label %51

51:                                               ; preds = %42, %46
  %52 = bitcast %"class.blink::HeapVector.297"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #9
  %53 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 14
  %54 = bitcast %"class.blink::HeapVector.297"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 16, i1 false)
  store i8 0, i8* %53, align 8, !noalias !11
  %55 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 13, i32 0, i32 0
  %56 = load %"class.blink::HeapVector.297"*, %"class.blink::HeapVector.297"** %55, align 8, !noalias !11
  %57 = icmp eq %"class.blink::HeapVector.297"* %56, null
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %5, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %56, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.300"* nonnull %59, %"class.WTF::Vector.300"* dereferenceable(16) %60) #9
  br label %62

61:                                               ; preds = %51
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #9, !alias.scope !11
  br label %62

62:                                               ; preds = %58, %61
  %63 = bitcast %"struct.blink::SerializedScriptValue::DeserializeOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #9
  %64 = getelementptr inbounds %"struct.blink::SerializedScriptValue::DeserializeOptions", %"struct.blink::SerializedScriptValue::DeserializeOptions"* %6, i64 0, i32 0
  %65 = getelementptr inbounds %"struct.blink::SerializedScriptValue::DeserializeOptions", %"struct.blink::SerializedScriptValue::DeserializeOptions"* %6, i64 0, i32 1
  %66 = bitcast %"class.WTF::Vector.435"** %65 to i64*
  store i64 0, i64* %66, align 8
  store %"class.blink::HeapVector.297"* %5, %"class.blink::HeapVector.297"** %64, align 8
  %67 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %39, align 8
  %68 = call %"class.v8::Value"* @_ZN5blink29UnpackedSerializedScriptValue11DeserializeEPN2v87IsolateERKNS_21SerializedScriptValue18DeserializeOptionsE(%"class.blink::UnpackedSerializedScriptValue"* %67, %"class.v8::Isolate"* %10, %"struct.blink::SerializedScriptValue::DeserializeOptions"* nonnull dereferenceable(16) %6) #9
  %69 = ptrtoint %"class.v8::Value"* %68 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #9
  br label %166

70:                                               ; preds = %38
  %71 = ptrtoint %"class.v8::Isolate"* %10 to i64
  %72 = add i64 %71, 176
  br label %166

73:                                               ; preds = %3
  %74 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #9
  %75 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 5, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %78, label %82

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %79, align 8
  %80 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %81 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %80, i64* %81, align 8
  br label %89

82:                                               ; preds = %73
  %83 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %83, align 8
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 1
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %88 = bitcast i8** %87 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %86, %"class.WTF::StringImpl"** %88, align 8
  br label %89

89:                                               ; preds = %78, %82
  %90 = phi i32 [ %85, %82 ], [ 0, %78 ]
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %90, i32* %91, align 8
  %92 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  %93 = ptrtoint %"class.v8::String"* %92 to i64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #9
  br label %166

94:                                               ; preds = %3
  %95 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 6, i32 0, i32 0
  %96 = load %"class.blink::Blob"*, %"class.blink::Blob"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %96, i64 0, i32 0
  %98 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.v8::Context"*, %"class.v8::Context"** %98, align 8
  %100 = icmp eq %"class.v8::Context"* %99, null
  br i1 %100, label %106, label %101

101:                                              ; preds = %94
  %102 = bitcast %"class.v8::Context"* %99 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %103) #9
  %105 = bitcast i64* %104 to %"class.v8::Context"*
  br label %106

106:                                              ; preds = %101, %94
  %107 = phi %"class.v8::Context"* [ %105, %101 ], [ null, %94 ]
  %108 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %107) #9
  %109 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %110 = icmp eq %"class.blink::Blob"* %96, null
  br i1 %110, label %111, label %114, !prof !8

111:                                              ; preds = %106
  %112 = ptrtoint %"class.v8::Isolate"* %109 to i64
  %113 = add i64 %112, 176
  br label %166

114:                                              ; preds = %106
  %115 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %97, %"class.v8::Isolate"* %109) #9
  %116 = ptrtoint %"class.v8::Object"* %115 to i64
  %117 = icmp eq %"class.v8::Object"* %115, null
  br i1 %117, label %118, label %166

118:                                              ; preds = %114
  %119 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %108) #9
  %120 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %119) #9
  %121 = bitcast %"class.blink::Blob"* %96 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %122 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %121, align 8
  %123 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %122, i64 7
  %124 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %123, align 8
  %125 = tail call %"class.v8::Value"* %124(%"class.blink::ScriptWrappable"* nonnull %97, %"class.blink::ScriptState"* %120) #9
  %126 = icmp eq %"class.v8::Value"* %125, null
  br i1 %126, label %127, label %128, !prof !8

127:                                              ; preds = %118
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %128

128:                                              ; preds = %127, %118
  %129 = ptrtoint %"class.v8::Value"* %125 to i64
  br label %166

130:                                              ; preds = %3
  %131 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 7, i32 0, i32 0
  %132 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %132, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.v8::Context"*, %"class.v8::Context"** %134, align 8
  %136 = icmp eq %"class.v8::Context"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %130
  %138 = bitcast %"class.v8::Context"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %13, i64 %139) #9
  %141 = bitcast i64* %140 to %"class.v8::Context"*
  br label %142

142:                                              ; preds = %137, %130
  %143 = phi %"class.v8::Context"* [ %141, %137 ], [ null, %130 ]
  %144 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %143) #9
  %145 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %146 = icmp eq %"class.blink::DOMArrayBuffer"* %132, null
  br i1 %146, label %147, label %150, !prof !8

147:                                              ; preds = %142
  %148 = ptrtoint %"class.v8::Isolate"* %145 to i64
  %149 = add i64 %148, 176
  br label %166

150:                                              ; preds = %142
  %151 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %133, %"class.v8::Isolate"* %145) #9
  %152 = ptrtoint %"class.v8::Object"* %151 to i64
  %153 = icmp eq %"class.v8::Object"* %151, null
  br i1 %153, label %154, label %166

154:                                              ; preds = %150
  %155 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %144) #9
  %156 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %155) #9
  %157 = bitcast %"class.blink::DOMArrayBuffer"* %132 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %158 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %157, align 8
  %159 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %158, i64 7
  %160 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %159, align 8
  %161 = tail call %"class.v8::Value"* %160(%"class.blink::ScriptWrappable"* nonnull %133, %"class.blink::ScriptState"* %156) #9
  %162 = icmp eq %"class.v8::Value"* %161, null
  br i1 %162, label %163, label %164, !prof !8

163:                                              ; preds = %154
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %164

164:                                              ; preds = %163, %154
  %165 = ptrtoint %"class.v8::Value"* %161 to i64
  br label %166

166:                                              ; preds = %164, %150, %147, %128, %114, %111, %62, %70, %22, %33, %3, %89, %14
  %167 = phi i64 [ 0, %3 ], [ %93, %89 ], [ %69, %62 ], [ %72, %70 ], [ %24, %22 ], [ %37, %33 ], [ %16, %14 ], [ %113, %111 ], [ %129, %128 ], [ %116, %114 ], [ %149, %147 ], [ %165, %164 ], [ %152, %150 ]
  %168 = inttoptr i64 %167 to %"class.v8::Value"*
  %169 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %10, %"class.v8::Isolate"** %169, align 8
  %170 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %170, %"class.v8::Isolate"* %10, %"class.v8::Value"* %168) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent5portsEv(%"class.blink::HeapVector.297"* noalias sret, %"class.blink::MessageEvent"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 14
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %1, i64 0, i32 13, i32 0, i32 0
  %5 = load %"class.blink::HeapVector.297"*, %"class.blink::HeapVector.297"** %4, align 8
  %6 = icmp eq %"class.blink::HeapVector.297"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapVector.297", %"class.blink::HeapVector.297"* %5, i64 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.300"* %8, %"class.WTF::Vector.300"* dereferenceable(16) %9) #9
  br label %12

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::HeapVector.297"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %12

12:                                               ; preds = %10, %7
  ret void
}

declare %"class.v8::Value"* @_ZN5blink29UnpackedSerializedScriptValue11DeserializeEPN2v87IsolateERKNS_21SerializedScriptValue18DeserializeOptionsE(%"class.blink::UnpackedSerializedScriptValue"*, %"class.v8::Isolate"*, %"struct.blink::SerializedScriptValue::DeserializeOptions"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #9
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #9
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #9
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !8

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #9
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !8

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink12MessageEvent13InterfaceNameEv(%"class.blink::MessageEvent"* nocapture readnone) unnamed_addr #5 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink21event_interface_names13kMessageEventE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12MessageEvent33IsOriginCheckRequiredToAccessDataEv(%"class.blink::MessageEvent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %8, align 8
  %10 = tail call zeroext i1 @_ZNK5blink21SerializedScriptValue21IsOriginCheckRequiredEv(%"class.blink::SerializedScriptValue"* %9) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ %10, %5 ], [ false, %1 ]
  ret i1 %12
}

declare zeroext i1 @_ZNK5blink21SerializedScriptValue21IsOriginCheckRequiredEv(%"class.blink::SerializedScriptValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink12MessageEvent22IsLockedToAgentClusterEv(%"class.blink::MessageEvent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  %3 = load i8, i8* %2, align 8, !range !9
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %64

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %9, label %64

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::UnpackedSerializedScriptValue"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::UnpackedSerializedScriptValue", %"class.blink::UnpackedSerializedScriptValue"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 7, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %64

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 11, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %64

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 13, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 13, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.269"*, %"struct.WTF::KeyValuePair.269"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %13, i64 0, i32 13, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.269", %"struct.WTF::KeyValuePair.269"* %26, i64 %29
  br i1 %24, label %64, label %31

31:                                               ; preds = %21
  %32 = icmp eq i32 %28, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %31, %37
  %34 = phi %"struct.WTF::KeyValuePair.269"* [ %38, %37 ], [ %26, %31 ]
  %35 = bitcast %"struct.WTF::KeyValuePair.269"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  switch i64 %36, label %40 [
    i64 -1, label %37
    i64 0, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.269", %"struct.WTF::KeyValuePair.269"* %34, i64 1
  %39 = icmp eq %"struct.WTF::KeyValuePair.269"* %38, %30
  br i1 %39, label %64, label %33

40:                                               ; preds = %33, %31
  %41 = phi %"struct.WTF::KeyValuePair.269"* [ %26, %31 ], [ %34, %33 ]
  %42 = icmp eq %"struct.WTF::KeyValuePair.269"* %41, %30
  br i1 %42, label %64, label %43

43:                                               ; preds = %40, %62
  %44 = phi %"struct.WTF::KeyValuePair.269"* [ %56, %62 ], [ %41, %40 ]
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.269", %"struct.WTF::KeyValuePair.269"* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %46 = load %"class.blink::SerializedScriptValue::Attachment"*, %"class.blink::SerializedScriptValue::Attachment"** %45, align 8
  %47 = bitcast %"class.blink::SerializedScriptValue::Attachment"* %46 to i1 (%"class.blink::SerializedScriptValue::Attachment"*)***
  %48 = load i1 (%"class.blink::SerializedScriptValue::Attachment"*)**, i1 (%"class.blink::SerializedScriptValue::Attachment"*)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::SerializedScriptValue::Attachment"*)*, i1 (%"class.blink::SerializedScriptValue::Attachment"*)** %48, i64 2
  %50 = load i1 (%"class.blink::SerializedScriptValue::Attachment"*)*, i1 (%"class.blink::SerializedScriptValue::Attachment"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::SerializedScriptValue::Attachment"* %46) #9
  br i1 %51, label %64, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.269", %"struct.WTF::KeyValuePair.269"* %44, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.269"* %53, %30
  br i1 %54, label %64, label %55

55:                                               ; preds = %52, %59
  %56 = phi %"struct.WTF::KeyValuePair.269"* [ %60, %59 ], [ %53, %52 ]
  %57 = bitcast %"struct.WTF::KeyValuePair.269"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  switch i64 %58, label %62 [
    i64 -1, label %59
    i64 0, label %59
  ]

59:                                               ; preds = %55, %55
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.269", %"struct.WTF::KeyValuePair.269"* %56, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair.269"* %60, %30
  br i1 %61, label %64, label %55

62:                                               ; preds = %55
  %63 = icmp eq %"struct.WTF::KeyValuePair.269"* %56, %30
  br i1 %63, label %64, label %43

64:                                               ; preds = %37, %62, %52, %43, %59, %40, %21, %17, %9, %5, %1
  %65 = phi i1 [ true, %1 ], [ false, %5 ], [ true, %17 ], [ true, %9 ], [ false, %40 ], [ false, %21 ], [ false, %59 ], [ false, %62 ], [ true, %43 ], [ false, %52 ], [ false, %37 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12MessageEvent20EntangleMessagePortsEPNS_16ExecutionContextE(%"class.blink::MessageEvent"* nocapture, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.409", align 8
  %4 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16
  %5 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %3, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.409"* %4 to i64*
  %8 = bitcast %"class.WTF::Vector.409"* %3 to i64*
  store i64 0, i64* %8, align 8
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"class.WTF::Vector.409"* %3 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  store atomic i64 %9, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %5, align 8
  store i32 0, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 16, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %6, align 4
  store i32 0, i32* %13, align 4
  %15 = call %"class.blink::HeapVector.297"* @_ZN5blink11MessagePort13EntanglePortsERNS_16ExecutionContextEN3WTF6VectorINS_18MessagePortChannelELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* dereferenceable(376) %1, %"class.WTF::Vector.409"* nonnull %3) #9
  %16 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %17 = ptrtoint %"class.blink::HeapVector.297"* %15 to i64
  %18 = bitcast %"class.blink::Member.295"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %2
  %22 = bitcast %"class.blink::HeapVector.297"* %15 to i8*
  %23 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #9
  br label %24

24:                                               ; preds = %2, %21
  %25 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %3, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %25, align 8
  %27 = icmp eq %"class.blink::MessagePortChannel"* %26, null
  br i1 %27, label %44, label %28, !prof !10

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::MessagePortChannel"* %26 to i8*
  %30 = load i32, i32* %6, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %42, label %32, !prof !8

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  %34 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %26, i64 %33
  br label %35

35:                                               ; preds = %35, %32
  %36 = phi %"class.blink::MessagePortChannel"* [ %37, %35 ], [ %26, %32 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %36) #9
  %37 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %36, i64 1
  %38 = icmp eq %"class.blink::MessagePortChannel"* %37, %34
  br i1 %38, label %39, label %35

39:                                               ; preds = %35
  store i32 0, i32* %6, align 4
  %40 = bitcast %"class.WTF::Vector.409"* %3 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %28
  %43 = phi i8* [ %41, %39 ], [ %29, %28 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #9
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %25, align 8
  br label %44

44:                                               ; preds = %24, %42
  %45 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 14
  store i8 1, i8* %45, align 8
  ret void
}

declare %"class.blink::HeapVector.297"* @_ZN5blink11MessagePort13EntanglePortsERNS_16ExecutionContextEN3WTF6VectorINS_18MessagePortChannelELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* dereferenceable(376), %"class.WTF::Vector.409"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink12MessageEvent5TraceEPNS_7VisitorE(%"class.blink::MessageEvent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 3, i32 0
  %4 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)***
  %5 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)** %5, i64 7
  %7 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.5"*)** %6, align 8
  tail call void %7(%"class.blink::Visitor"* %1, %"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %3) #9
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::Member.186"* %8 to i64*
  %10 = load atomic i64, i64* %9 monotonic, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %10 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv) #9
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 6
  %20 = bitcast %"class.blink::Member.286"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv) #9
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7
  %31 = bitcast %"class.blink::Member.293"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = inttoptr i64 %32 to i8*
  %36 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %37, i64 5
  %39 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %38, align 8
  tail call void %39(%"class.blink::Visitor"* %1, i8* nonnull %35, i8* nonnull %35, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv) #9
  br label %40

40:                                               ; preds = %29, %34
  %41 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 12
  %42 = bitcast %"class.blink::Member"* %41 to i64*
  %43 = load atomic i64, i64* %42 monotonic, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %40
  %46 = inttoptr i64 %43 to i8*
  %47 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, i64 5
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %49, align 8
  tail call void %50(%"class.blink::Visitor"* %1, i8* nonnull %46, i8* nonnull %46, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv) #9
  br label %51

51:                                               ; preds = %40, %45
  %52 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 13
  %53 = bitcast %"class.blink::Member.295"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %62, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5TraceEPNS_7VisitorEPKv) #9
  br label %62

62:                                               ; preds = %51, %56
  %63 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 17
  %64 = bitcast %"class.blink::Member.414"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to i8*
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %68, i8* nonnull %68, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14UserActivationEE5TraceEPNS_7VisitorEPKv) #9
  br label %73

73:                                               ; preds = %62, %67
  %74 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0
  tail call void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"* %74, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12MessageEvent18LockToAgentClusterEv(%"class.blink::MessageEvent"* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 21
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN5blink12MessageEvent20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::MessageEvent"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 0, i32 0
  %7 = tail call %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"* %6, %"class.v8::Isolate"* %1, %"struct.blink::WrapperTypeInfo"* %2, %"class.v8::Object"* %3) #9
  %8 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  switch i32 %9, label %75 [
    i32 5, label %40
    i32 3, label %10
  ]

10:                                               ; preds = %4
  %11 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %1, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZN5blinkL38kPrivatePropertyMessageEventCachedDataE) #9
  %12 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %11, 0
  %13 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %11, 1
  %14 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %19, align 8
  %20 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %21 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %20, i64* %21, align 8
  br label %29

22:                                               ; preds = %10
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %28 = bitcast i8** %27 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %28, align 8
  br label %29

29:                                               ; preds = %18, %22
  %30 = phi i32 [ %25, %22 ], [ 0, %18 ]
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %1, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  %33 = bitcast %"class.v8::String"* %32 to %"class.v8::Value"*
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %13) #9
  %35 = call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %7, %"class.v8::Context"* %34, %"class.v8::Private"* %12, %"class.v8::Value"* %33) #9
  %36 = trunc i16 %35 to i8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39, !prof !8

38:                                               ; preds = %29
  call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %39

39:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br label %75

40:                                               ; preds = %4
  %41 = tail call { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"* %1, %"class.blink::V8PrivateProperty::SymbolKey"* nonnull dereferenceable(1) @_ZN5blinkL38kPrivatePropertyMessageEventCachedDataE) #9
  %42 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %41, 0
  %43 = extractvalue { %"class.v8::Private"*, %"class.v8::Isolate"* } %41, 1
  %44 = getelementptr inbounds %"class.blink::MessageEvent", %"class.blink::MessageEvent"* %0, i64 0, i32 7, i32 0, i32 0
  %45 = load %"class.blink::DOMArrayBuffer"*, %"class.blink::DOMArrayBuffer"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %45, i64 0, i32 0, i32 0
  %47 = icmp eq %"class.blink::DOMArrayBuffer"* %45, null
  br i1 %47, label %48, label %51, !prof !8

48:                                               ; preds = %40
  %49 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %50 = add i64 %49, 176
  br label %67

51:                                               ; preds = %40
  %52 = tail call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %46, %"class.v8::Isolate"* %1) #9
  %53 = ptrtoint %"class.v8::Object"* %52 to i64
  %54 = icmp eq %"class.v8::Object"* %52, null
  br i1 %54, label %55, label %67

55:                                               ; preds = %51
  %56 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %7) #9
  %57 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %56) #9
  %58 = bitcast %"class.blink::DOMArrayBuffer"* %45 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %59 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %59, i64 7
  %61 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %60, align 8
  %62 = tail call %"class.v8::Value"* %61(%"class.blink::ScriptWrappable"* nonnull %46, %"class.blink::ScriptState"* %57) #9
  %63 = icmp eq %"class.v8::Value"* %62, null
  br i1 %63, label %64, label %65, !prof !8

64:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #9
  br label %65

65:                                               ; preds = %64, %55
  %66 = ptrtoint %"class.v8::Value"* %62 to i64
  br label %67

67:                                               ; preds = %48, %51, %65
  %68 = phi i64 [ %50, %48 ], [ %66, %65 ], [ %53, %51 ]
  %69 = inttoptr i64 %68 to %"class.v8::Value"*
  %70 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %43) #9
  %71 = tail call i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"* %7, %"class.v8::Context"* %70, %"class.v8::Private"* %42, %"class.v8::Value"* %69) #9
  %72 = trunc i16 %71 to i8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %75, !prof !8

74:                                               ; preds = %67
  tail call void @_ZN2v82V817FromJustIsNothingEv() #9
  br label %75

75:                                               ; preds = %74, %67, %4, %39
  ret %"class.v8::Object"* %7
}

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #2

declare { %"class.v8::Private"*, %"class.v8::Isolate"* } @_ZN5blink17V8PrivateProperty9GetSymbolEPN2v87IsolateERKNS0_9SymbolKeyE(%"class.v8::Isolate"*, %"class.blink::V8PrivateProperty::SymbolKey"* dereferenceable(1)) local_unnamed_addr #2

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink12MessageEvent18GetWrapperTypeInfoEv(%"class.blink::MessageEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink12MessageEvent18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink5Event9IsUIEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsMouseEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsFocusEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event15IsKeyboardEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsTouchEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event14IsGestureEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsWheelEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event14IsPointerEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsInputEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event18IsCompositionEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event11IsDragEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event16IsClipboardEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event25IsBeforeTextInsertedEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event19IsBeforeUnloadEventEv(%"class.blink::Event"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink5Event12IsErrorEventEv(%"class.blink::Event"*) unnamed_addr #2

declare void @_ZN5blink5Event14preventDefaultEv(%"class.blink::Event"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE(%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE(%"class.blink::Event"*, %"class.blink::EventDispatcher"*) unnamed_addr #2

declare void @_ZN5blink5Event14ReceivedTargetEv(%"class.blink::Event"*) unnamed_addr #2

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN5blink5EventC2ERKN3WTF12AtomicStringEPKNS_9EventInitEN4base9TimeTicksE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventInit"*, i64) unnamed_addr #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #2

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.8, %class.scoped_refptr.8* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #9
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8) %9) #9
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #9
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #9
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.8* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #9
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #9
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #9
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #9
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #9
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #9
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #9
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.8* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #9
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #9
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #9
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #9
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #9
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0)) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #9
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i16 @_ZN2v86Object10SetPrivateENS_5LocalINS_7ContextEEENS1_INS_7PrivateEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Private"*, %"class.v8::Value"*) local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #9
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #9
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #9
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !9
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #9
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #9
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #9
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_11MessagePortEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #9
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #9
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.303"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.303", %"class.blink::Member.303"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.303"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv) #9
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MessagePortEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MessagePort"*
  %4 = bitcast i8* %1 to void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)**, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)*, void (%"class.blink::MessagePort"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::MessagePort"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.v8::Value"* @_ZN5blink28WorldSafeV8ReferenceInternal16ToWorldSafeValueEPNS_11ScriptStateERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEERKNS_15DOMWrapperWorldE(%"class.blink::ScriptState"*, %"class.blink::TraceWrapperV8Reference.5"* dereferenceable(8), %"class.blink::DOMWrapperWorld"* dereferenceable(32)) local_unnamed_addr #2

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_11MessagePortEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.300"*, %"class.WTF::Vector.300"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.303"* null, %"class.blink::Member.303"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64 %9) #9
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #9
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.300"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.303"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #9
  %22 = load %"class.blink::Member.303"*, %"class.blink::Member.303"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.303"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.300", %"class.WTF::Vector.300"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.303"*, %"class.blink::Member.303"** %28, align 8
  %30 = icmp ne %"class.blink::Member.303"* %24, null
  %31 = icmp ne %"class.blink::Member.303"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !10

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.303"* %24 to i8*
  %37 = bitcast %"class.blink::Member.303"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #9
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.303"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.303"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #9
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.303", %"class.blink::Member.303"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_11MessagePortEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.14, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.16, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([163 x i8], [163 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_11MessagePortEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_11MessagePortEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_29UnpackedSerializedScriptValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::UnpackedSerializedScriptValue"*
  tail call void @_ZNK5blink29UnpackedSerializedScriptValue5TraceEPNS_7VisitorE(%"class.blink::UnpackedSerializedScriptValue"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink29UnpackedSerializedScriptValue5TraceEPNS_7VisitorE(%"class.blink::UnpackedSerializedScriptValue"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4BlobEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14DOMArrayBufferEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EventTargetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14UserActivationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::UserActivation"*
  tail call void @_ZNK5blink14UserActivation5TraceEPNS_7VisitorE(%"class.blink::UserActivation"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

declare void @_ZNK5blink14UserActivation5TraceEPNS_7VisitorE(%"class.blink::UserActivation"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink16MessageEventInit4dataEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink16MessageEventInit4dataEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink16MessageEventInit4dataEv: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink16MessageEventInit4dataEv"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{i8 0, i8 2}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN5blink12MessageEvent5portsEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink12MessageEvent5portsEv"}
