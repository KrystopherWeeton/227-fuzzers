; ModuleID = '../../third_party/ots/src/src/fvar.cc'
source_filename = "../../third_party/ots/src/src/fvar.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeFVAR" = type <{ %"class.ots::Table.base", i8, i16, i16, i16, i16, i16, i16, i16, i16, [6 x i8], %"class.std::__1::vector", %"class.std::__1::vector.29", i8, [7 x i8] }>
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"class.std::__1::__compressed_pair.24" }
%"struct.ots::OpenTypeFVAR::VariationAxisRecord" = type { i32, i32, i32, i32, i16, i16 }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"class.std::__1::__compressed_pair.38" }
%"struct.ots::OpenTypeFVAR::InstanceRecord" = type <{ i16, i16, [4 x i8], %"class.std::__1::vector.31", i16, [6 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.ots::OpenTypeFVAR::InstanceRecord"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots12OpenTypeFVARD2Ev = comdat any

$_ZN3ots12OpenTypeFVARD0Ev = comdat any

$_ZNSt3__16vectorIN3ots12OpenTypeFVAR14InstanceRecordENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Unknown table version\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"Downgrading minor version to 0\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Bad axesArrayOffset\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Expected reserved=2\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"No variation axes\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"Invalid axisSize\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Invalid instanceSize\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Failed to read axis record\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"Bad axis tag\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"Bad axis value range\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Discarding unknown axis flags\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"Axis nameID out of range\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"Failed to read instance record\00", align 1
@.str.14 = private unnamed_addr constant [36 x i8] c"Failed to read instance coordinates\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"Failed to read instance psname ID\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"%zu bytes unparsed\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"Failed to write table\00", align 1
@_ZTVN3ots12OpenTypeFVARE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypeFVAR"*)* @_ZN3ots12OpenTypeFVARD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeFVAR"*)* @_ZN3ots12OpenTypeFVARD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeFVAR"*, i8*, i64)* @_ZN3ots12OpenTypeFVAR5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeFVAR"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeFVAR9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeFVAR5ParseEPKhm(%"class.ots::OpenTypeFVAR"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 2
  br i1 %4, label %54, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 2
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #9
  store i16 %9, i16* %6, align 2
  %10 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 3
  %11 = icmp ult i64 %2, 4
  br i1 %11, label %54, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds i8, i8* %1, i64 2
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #9
  store i16 %16, i16* %10, align 2
  %17 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 4
  %18 = icmp ult i64 %2, 6
  br i1 %18, label %54, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #9
  store i16 %23, i16* %17, align 2
  %24 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 5
  %25 = icmp ult i64 %2, 8
  br i1 %25, label %54, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds i8, i8* %1, i64 6
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #9
  store i16 %30, i16* %24, align 2
  %31 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 6
  %32 = icmp ult i64 %2, 10
  br i1 %32, label %54, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds i8, i8* %1, i64 8
  %35 = bitcast i8* %34 to i16*
  %36 = load i16, i16* %35, align 1
  %37 = tail call i16 @llvm.bswap.i16(i16 %36) #9
  store i16 %37, i16* %31, align 2
  %38 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 7
  %39 = icmp ult i64 %2, 12
  br i1 %39, label %54, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %1, i64 10
  %42 = bitcast i8* %41 to i16*
  %43 = load i16, i16* %42, align 1
  %44 = tail call i16 @llvm.bswap.i16(i16 %43) #9
  store i16 %44, i16* %38, align 2
  %45 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 8
  %46 = icmp ult i64 %2, 14
  br i1 %46, label %54, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %1, i64 12
  %49 = bitcast i8* %48 to i16*
  %50 = load i16, i16* %49, align 1
  %51 = tail call i16 @llvm.bswap.i16(i16 %50) #9
  store i16 %51, i16* %45, align 2
  %52 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 9
  %53 = icmp ult i64 %2, 16
  br i1 %53, label %54, label %57

54:                                               ; preds = %47, %40, %33, %26, %19, %12, %5, %3
  %55 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %56 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %55, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0)) #9
  br label %457

57:                                               ; preds = %47
  %58 = getelementptr inbounds i8, i8* %1, i64 14
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = tail call i16 @llvm.bswap.i16(i16 %60) #9
  store i16 %61, i16* %52, align 2
  %62 = icmp eq i16 %8, 256
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %65 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %457

66:                                               ; preds = %57
  %67 = icmp eq i16 %15, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %70 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %69, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0)) #9
  store i16 0, i16* %10, align 4
  %71 = load i16, i16* %17, align 2
  br label %72

72:                                               ; preds = %66, %68
  %73 = phi i16 [ %23, %66 ], [ %71, %68 ]
  %74 = zext i16 %73 to i64
  %75 = icmp ugt i64 %74, %2
  %76 = icmp ult i16 %73, 16
  %77 = or i1 %76, %75
  br i1 %77, label %78, label %81

78:                                               ; preds = %72
  %79 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %80 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %79, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %457

81:                                               ; preds = %72
  %82 = load i16, i16* %24, align 8
  %83 = icmp eq i16 %82, 2
  br i1 %83, label %87, label %84

84:                                               ; preds = %81
  %85 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %86 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %85, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0)) #9
  store i16 2, i16* %24, align 8
  br label %87

87:                                               ; preds = %81, %84
  %88 = load i16, i16* %31, align 2
  %89 = icmp eq i16 %88, 0
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %92 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %91, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)) #9
  br label %457

93:                                               ; preds = %87
  %94 = load i16, i16* %38, align 4
  %95 = icmp eq i16 %94, 20
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %98 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %97, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0)) #9
  br label %457

99:                                               ; preds = %93
  %100 = load i16, i16* %52, align 8
  %101 = zext i16 %100 to i64
  %102 = zext i16 %88 to i64
  %103 = shl nuw nsw i64 %102, 2
  %104 = add nuw nsw i64 %103, 6
  %105 = icmp eq i64 %104, %101
  br i1 %105, label %112, label %106

106:                                              ; preds = %99
  %107 = add nuw nsw i64 %103, 4
  %108 = icmp eq i64 %107, %101
  br i1 %108, label %112, label %109

109:                                              ; preds = %106
  %110 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %111 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %110, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0)) #9
  br label %457

112:                                              ; preds = %106, %99
  %113 = phi i8 [ 1, %99 ], [ 0, %106 ]
  %114 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 13
  store i8 %113, i8* %114, align 8
  %115 = load i16, i16* %17, align 2
  store i16 16, i16* %17, align 2
  %116 = zext i16 %115 to i64
  %117 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11
  %118 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 1
  %119 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 2, i32 0, i32 0
  %120 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %118 to i64*
  %121 = bitcast %"class.std::__1::vector"* %117 to i64*
  %122 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %119 to i64*
  %123 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %117, i64 0, i32 0, i32 0
  %124 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  br label %135

125:                                              ; preds = %273
  %126 = load i16, i16* %45, align 2
  %127 = icmp eq i16 %126, 0
  br i1 %127, label %450, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12
  %130 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12, i32 0, i32 1
  %131 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"** %130 to i64*
  %133 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %129, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 13
  br label %278

135:                                              ; preds = %112, %273
  %136 = phi i64 [ 0, %112 ], [ %274, %273 ]
  %137 = phi i64 [ %116, %112 ], [ %238, %273 ]
  %138 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %118, align 8
  %139 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %119, align 8
  %140 = icmp ult %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %138, %139
  %141 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %139 to i64
  br i1 %140, label %142, label %146

142:                                              ; preds = %135
  %143 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %138 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %143, i8 0, i64 20, i1 false) #9
  %144 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %138, i64 1
  %145 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %144 to i64
  store i64 %145, i64* %120, align 8
  br label %195

146:                                              ; preds = %135
  %147 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %138 to i64
  %148 = load i64, i64* %121, align 8
  %149 = sub i64 %147, %148
  %150 = sdiv exact i64 %149, 20
  %151 = add nsw i64 %150, 1
  %152 = icmp ugt i64 %151, 922337203685477580
  br i1 %152, label %153, label %155

153:                                              ; preds = %146
  %154 = bitcast %"class.std::__1::vector"* %117 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %154) #10
  unreachable

155:                                              ; preds = %146
  %156 = sub i64 %141, %148
  %157 = sdiv exact i64 %156, 20
  %158 = icmp ult i64 %157, 461168601842738790
  br i1 %158, label %159, label %164

159:                                              ; preds = %155
  %160 = shl nsw i64 %157, 1
  %161 = icmp ult i64 %160, %151
  %162 = select i1 %161, i64 %151, i64 %160
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %169, label %164

164:                                              ; preds = %159, %155
  %165 = phi i64 [ %162, %159 ], [ 922337203685477580, %155 ]
  %166 = mul i64 %165, 20
  %167 = tail call i8* @_Znwm(i64 %166) #11
  %168 = bitcast i8* %167 to %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*
  br label %169

169:                                              ; preds = %164, %159
  %170 = phi i64 [ %165, %164 ], [ 0, %159 ]
  %171 = phi %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* [ %168, %164 ], [ null, %159 ]
  %172 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %171, i64 %150
  %173 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %171, i64 %170
  %174 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %173 to i64
  %175 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %172 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %175, i8 0, i64 20, i1 false) #9
  %176 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %172, i64 1
  %177 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %176 to i64
  %178 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %123, align 8
  %179 = load i64, i64* %120, align 8
  %180 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %178 to i64
  %181 = sub i64 %179, %180
  %182 = sdiv exact i64 %181, -20
  %183 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %172, i64 %182
  %184 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %183 to i64
  %185 = icmp sgt i64 %181, 0
  br i1 %185, label %186, label %190

186:                                              ; preds = %169
  %187 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %183 to i8*
  %188 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %178 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 %181, i1 false) #9
  %189 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %123, align 8
  br label %190

190:                                              ; preds = %186, %169
  %191 = phi %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* [ %178, %169 ], [ %189, %186 ]
  store i64 %184, i64* %121, align 8
  store i64 %177, i64* %120, align 8
  store i64 %174, i64* %122, align 8
  %192 = icmp eq %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %190
  %194 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %191 to i8*
  tail call void @_ZdlPv(i8* %194) #11
  br label %195

195:                                              ; preds = %142, %190, %193
  %196 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %123, align 8
  %197 = add nuw nsw i64 %137, 4
  %198 = icmp ugt i64 %197, %2
  br i1 %198, label %240, label %199

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 0
  %201 = getelementptr inbounds i8, i8* %1, i64 %137
  %202 = bitcast i8* %201 to i32*
  %203 = load i32, i32* %202, align 1
  %204 = tail call i32 @llvm.bswap.i32(i32 %203) #9
  store i32 %204, i32* %200, align 4
  %205 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 1
  %206 = add nuw nsw i64 %137, 8
  %207 = icmp ugt i64 %206, %2
  br i1 %207, label %240, label %208

208:                                              ; preds = %199
  %209 = getelementptr inbounds i8, i8* %1, i64 %197
  %210 = bitcast i8* %209 to i32*
  %211 = load i32, i32* %210, align 1
  %212 = tail call i32 @llvm.bswap.i32(i32 %211) #9
  store i32 %212, i32* %205, align 4
  %213 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 2
  %214 = add nuw nsw i64 %137, 12
  %215 = icmp ugt i64 %214, %2
  br i1 %215, label %240, label %216

216:                                              ; preds = %208
  %217 = getelementptr inbounds i8, i8* %1, i64 %206
  %218 = bitcast i8* %217 to i32*
  %219 = load i32, i32* %218, align 1
  %220 = tail call i32 @llvm.bswap.i32(i32 %219) #9
  store i32 %220, i32* %213, align 4
  %221 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 3
  %222 = add nuw nsw i64 %137, 16
  %223 = icmp ugt i64 %222, %2
  br i1 %223, label %240, label %224

224:                                              ; preds = %216
  %225 = getelementptr inbounds i8, i8* %1, i64 %214
  %226 = bitcast i8* %225 to i32*
  %227 = load i32, i32* %226, align 1
  %228 = tail call i32 @llvm.bswap.i32(i32 %227) #9
  store i32 %228, i32* %221, align 4
  %229 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 4
  %230 = add nuw nsw i64 %137, 18
  %231 = icmp ugt i64 %230, %2
  br i1 %231, label %240, label %232

232:                                              ; preds = %224
  %233 = getelementptr inbounds i8, i8* %1, i64 %222
  %234 = bitcast i8* %233 to i16*
  %235 = load i16, i16* %234, align 1
  %236 = tail call i16 @llvm.bswap.i16(i16 %235) #9
  store i16 %236, i16* %229, align 2
  %237 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %196, i64 %136, i32 5
  %238 = add nuw nsw i64 %137, 20
  %239 = icmp ugt i64 %238, %2
  br i1 %239, label %240, label %242

240:                                              ; preds = %232, %224, %216, %208, %199, %195
  %241 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %124, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %457

242:                                              ; preds = %232
  %243 = getelementptr inbounds i8, i8* %1, i64 %230
  %244 = bitcast i8* %243 to i16*
  %245 = load i16, i16* %244, align 1
  %246 = tail call i16 @llvm.bswap.i16(i16 %245) #9
  store i16 %246, i16* %237, align 2
  %247 = tail call zeroext i1 @_ZN3ots8CheckTagEj(i32 %204) #9
  br i1 %247, label %250, label %248

248:                                              ; preds = %242
  %249 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %124, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0)) #9
  br label %457

250:                                              ; preds = %242
  %251 = load i32, i32* %205, align 4
  %252 = load i32, i32* %213, align 4
  %253 = icmp sgt i32 %251, %252
  %254 = load i32, i32* %221, align 4
  %255 = icmp sgt i32 %252, %254
  %256 = or i1 %253, %255
  br i1 %256, label %257, label %259

257:                                              ; preds = %250
  %258 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %124, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %457

259:                                              ; preds = %250
  %260 = load i16, i16* %229, align 4
  %261 = icmp ugt i16 %260, 1
  br i1 %261, label %262, label %266

262:                                              ; preds = %259
  %263 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %124, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #9
  %264 = load i16, i16* %229, align 4
  %265 = and i16 %264, 1
  store i16 %265, i16* %229, align 4
  br label %266

266:                                              ; preds = %262, %259
  %267 = load i16, i16* %237, align 2
  %268 = icmp ult i16 %267, 256
  %269 = icmp slt i16 %267, 0
  %270 = or i1 %268, %269
  br i1 %270, label %271, label %273

271:                                              ; preds = %266
  %272 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %124, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %273

273:                                              ; preds = %266, %271
  %274 = add nuw nsw i64 %136, 1
  %275 = load i16, i16* %31, align 2
  %276 = zext i16 %275 to i64
  %277 = icmp ult i64 %274, %276
  br i1 %277, label %135, label %125

278:                                              ; preds = %128, %444
  %279 = phi i64 [ 0, %128 ], [ %446, %444 ]
  %280 = phi i64 [ %238, %128 ], [ %445, %444 ]
  %281 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %130, align 8
  %282 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %131, align 8
  %283 = icmp ult %"struct.ots::OpenTypeFVAR::InstanceRecord"* %281, %282
  br i1 %283, label %284, label %288

284:                                              ; preds = %278
  %285 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %281 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %285, i8 0, i64 40, i1 false) #9
  %286 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %281, i64 1
  %287 = ptrtoint %"struct.ots::OpenTypeFVAR::InstanceRecord"* %286 to i64
  store i64 %287, i64* %132, align 8
  br label %289

288:                                              ; preds = %278
  tail call void @_ZNSt3__16vectorIN3ots12OpenTypeFVAR14InstanceRecordENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.29"* %129) #9
  br label %289

289:                                              ; preds = %284, %288
  %290 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %133, align 8
  %291 = add i64 %280, 2
  %292 = icmp ugt i64 %291, %2
  br i1 %292, label %301, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 0
  %295 = getelementptr inbounds i8, i8* %1, i64 %280
  %296 = bitcast i8* %295 to i16*
  %297 = load i16, i16* %296, align 1
  %298 = tail call i16 @llvm.bswap.i16(i16 %297) #9
  store i16 %298, i16* %294, align 2
  %299 = add i64 %280, 4
  %300 = icmp ugt i64 %299, %2
  br i1 %300, label %301, label %304

301:                                              ; preds = %293, %289
  %302 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %303 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %302, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %457

304:                                              ; preds = %293
  %305 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 1
  %306 = getelementptr inbounds i8, i8* %1, i64 %291
  %307 = bitcast i8* %306 to i16*
  %308 = load i16, i16* %307, align 1
  %309 = tail call i16 @llvm.bswap.i16(i16 %308) #9
  store i16 %309, i16* %305, align 2
  %310 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 3
  %311 = load i16, i16* %31, align 2
  %312 = zext i16 %311 to i64
  %313 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 3, i32 0, i32 2, i32 0, i32 0
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.std::__1::vector.31"* %310 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 %315, %317
  %319 = ashr exact i64 %318, 2
  %320 = icmp ult i64 %319, %312
  br i1 %320, label %321, label %342

321:                                              ; preds = %304
  %322 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 3, i32 0, i32 1
  %323 = bitcast i32** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %324, %317
  %326 = ashr exact i64 %325, 2
  %327 = shl nuw nsw i64 %312, 2
  %328 = tail call i8* @_Znwm(i64 %327) #11
  %329 = bitcast i8* %328 to i32*
  %330 = getelementptr inbounds i32, i32* %329, i64 %326
  %331 = ptrtoint i32* %330 to i64
  %332 = getelementptr inbounds i32, i32* %329, i64 %312
  %333 = ptrtoint i32* %332 to i64
  %334 = ptrtoint i8* %328 to i64
  %335 = icmp sgt i64 %325, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %321
  %337 = inttoptr i64 %317 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %328, i8* align 4 %337, i64 %325, i1 false) #9
  br label %338

338:                                              ; preds = %336, %321
  store i64 %334, i64* %316, align 8
  store i64 %331, i64* %323, align 8
  store i64 %333, i64* %314, align 8
  %339 = icmp eq i64 %317, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %338
  %341 = inttoptr i64 %317 to i8*
  tail call void @_ZdlPv(i8* %341) #11
  br label %342

342:                                              ; preds = %304, %338, %340
  %343 = load i16, i16* %31, align 2
  %344 = icmp eq i16 %343, 0
  br i1 %344, label %428, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 3, i32 0, i32 1
  %347 = bitcast i32** %346 to i64*
  %348 = getelementptr inbounds %"class.std::__1::vector.31", %"class.std::__1::vector.31"* %310, i64 0, i32 0, i32 0
  br label %349

349:                                              ; preds = %345, %414
  %350 = phi i64 [ 0, %345 ], [ %421, %414 ]
  %351 = phi i64 [ %299, %345 ], [ %412, %414 ]
  %352 = load i32*, i32** %346, align 8
  %353 = load i32*, i32** %313, align 8
  %354 = icmp ult i32* %352, %353
  %355 = ptrtoint i32* %353 to i64
  br i1 %354, label %356, label %359

356:                                              ; preds = %349
  store i32 0, i32* %352, align 4
  %357 = getelementptr inbounds i32, i32* %352, i64 1
  %358 = ptrtoint i32* %357 to i64
  store i64 %358, i64* %347, align 8
  br label %411

359:                                              ; preds = %349
  %360 = ptrtoint i32* %352 to i64
  %361 = load i64, i64* %316, align 8
  %362 = sub i64 %360, %361
  %363 = ashr exact i64 %362, 2
  %364 = add nsw i64 %363, 1
  %365 = icmp ugt i64 %364, 4611686018427387903
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.31"* %310 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #10
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %355, %361
  %370 = ashr exact i64 %369, 2
  %371 = icmp ult i64 %370, 2305843009213693951
  br i1 %371, label %372, label %380

372:                                              ; preds = %368
  %373 = ashr exact i64 %369, 1
  %374 = icmp ult i64 %373, %364
  %375 = select i1 %374, i64 %364, i64 %373
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %385, label %377

377:                                              ; preds = %372
  %378 = icmp ugt i64 %375, 4611686018427387903
  br i1 %378, label %379, label %380

379:                                              ; preds = %377
  tail call void @abort() #10
  unreachable

380:                                              ; preds = %377, %368
  %381 = phi i64 [ %375, %377 ], [ 4611686018427387903, %368 ]
  %382 = shl i64 %381, 2
  %383 = tail call i8* @_Znwm(i64 %382) #11
  %384 = bitcast i8* %383 to i32*
  br label %385

385:                                              ; preds = %380, %372
  %386 = phi i64 [ %381, %380 ], [ 0, %372 ]
  %387 = phi i32* [ %384, %380 ], [ null, %372 ]
  %388 = getelementptr inbounds i32, i32* %387, i64 %363
  %389 = getelementptr inbounds i32, i32* %387, i64 %386
  %390 = ptrtoint i32* %389 to i64
  store i32 0, i32* %388, align 4
  %391 = getelementptr inbounds i32, i32* %388, i64 1
  %392 = ptrtoint i32* %391 to i64
  %393 = load i32*, i32** %348, align 8
  %394 = load i64, i64* %347, align 8
  %395 = ptrtoint i32* %393 to i64
  %396 = sub i64 %394, %395
  %397 = ashr exact i64 %396, 2
  %398 = sub nsw i64 0, %397
  %399 = getelementptr inbounds i32, i32* %388, i64 %398
  %400 = ptrtoint i32* %399 to i64
  %401 = icmp sgt i64 %396, 0
  br i1 %401, label %402, label %406

402:                                              ; preds = %385
  %403 = bitcast i32* %399 to i8*
  %404 = bitcast i32* %393 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %403, i8* align 4 %404, i64 %396, i1 false) #9
  %405 = load i32*, i32** %348, align 8
  br label %406

406:                                              ; preds = %402, %385
  %407 = phi i32* [ %393, %385 ], [ %405, %402 ]
  store i64 %400, i64* %316, align 8
  store i64 %392, i64* %347, align 8
  store i64 %390, i64* %314, align 8
  %408 = icmp eq i32* %407, null
  br i1 %408, label %411, label %409

409:                                              ; preds = %406
  %410 = bitcast i32* %407 to i8*
  tail call void @_ZdlPv(i8* %410) #11
  br label %411

411:                                              ; preds = %356, %406, %409
  %412 = add i64 %351, 4
  %413 = icmp ugt i64 %412, %2
  br i1 %413, label %425, label %414

414:                                              ; preds = %411
  %415 = load i32*, i32** %348, align 8
  %416 = getelementptr inbounds i32, i32* %415, i64 %350
  %417 = getelementptr inbounds i8, i8* %1, i64 %351
  %418 = bitcast i8* %417 to i32*
  %419 = load i32, i32* %418, align 1
  %420 = tail call i32 @llvm.bswap.i32(i32 %419) #9
  store i32 %420, i32* %416, align 4
  %421 = add nuw nsw i64 %350, 1
  %422 = load i16, i16* %31, align 2
  %423 = zext i16 %422 to i64
  %424 = icmp ult i64 %421, %423
  br i1 %424, label %349, label %428

425:                                              ; preds = %411
  %426 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %427 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %426, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0)) #9
  br label %457

428:                                              ; preds = %414, %342
  %429 = phi i64 [ %299, %342 ], [ %412, %414 ]
  %430 = load i8, i8* %134, align 8, !range !2
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %444, label %432

432:                                              ; preds = %428
  %433 = add i64 %429, 2
  %434 = icmp ugt i64 %433, %2
  br i1 %434, label %441, label %435

435:                                              ; preds = %432
  %436 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %290, i64 %279, i32 4
  %437 = getelementptr inbounds i8, i8* %1, i64 %429
  %438 = bitcast i8* %437 to i16*
  %439 = load i16, i16* %438, align 1
  %440 = tail call i16 @llvm.bswap.i16(i16 %439) #9
  store i16 %440, i16* %436, align 2
  br label %444

441:                                              ; preds = %432
  %442 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %443 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"* %442, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0)) #9
  br label %457

444:                                              ; preds = %428, %435
  %445 = phi i64 [ %429, %428 ], [ %433, %435 ]
  %446 = add nuw nsw i64 %279, 1
  %447 = load i16, i16* %45, align 2
  %448 = zext i16 %447 to i64
  %449 = icmp ult i64 %446, %448
  br i1 %449, label %278, label %450

450:                                              ; preds = %444, %125
  %451 = phi i64 [ %238, %125 ], [ %445, %444 ]
  %452 = sub i64 %2, %451
  %453 = icmp eq i64 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %450
  %455 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %456 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %455, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i64 %452) #9
  br label %457

457:                                              ; preds = %257, %248, %240, %301, %425, %441, %454, %450, %109, %96, %90, %78, %63, %54
  %458 = phi i1 [ %65, %63 ], [ %80, %78 ], [ %92, %90 ], [ %98, %96 ], [ %111, %109 ], [ %56, %54 ], [ %456, %454 ], [ true, %450 ], [ %303, %301 ], [ %427, %425 ], [ %443, %441 ], [ %241, %240 ], [ %249, %248 ], [ %258, %257 ]
  ret i1 %458
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table14DropVariationsEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots8CheckTagEj(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeFVAR9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeFVAR"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i16, align 2
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i16, align 2
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i16, align 2
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i16, align 2
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i16, align 2
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i16, align 2
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i16, align 2
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i16, align 2
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i16, align 2
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i16, align 2
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i16, align 2
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i16, align 2
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i16, align 2
  %57 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 2
  %58 = load i16, i16* %57, align 2
  %59 = bitcast i16* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %59)
  %60 = tail call i16 @llvm.bswap.i16(i16 %58) #9
  store i16 %60, i16* %56, align 2
  %61 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %62 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %63 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %62, i64 4
  %64 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %63, align 8
  %65 = tail call i64 %64(%"class.ots::OTSStream"* %1) #9
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %2
  %69 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 8
  br label %83

71:                                               ; preds = %2
  %72 = sub nuw nsw i64 4, %66
  %73 = icmp ult i64 %72, 2
  %74 = select i1 %73, i64 %72, i64 2
  %75 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #9
  store i32 0, i32* %54, align 4
  %76 = getelementptr inbounds i8, i8* %75, i64 %66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %76, i8* nonnull align 2 %59, i64 %74, i1 false) #9
  %77 = load i32, i32* %54, align 4
  %78 = tail call i32 @llvm.bswap.i32(i32 %77) #9
  %79 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %80 = load i32, i32* %79, align 8
  %81 = add i32 %80, %78
  store i32 %81, i32* %79, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #9
  %82 = icmp eq i64 %66, 3
  br i1 %82, label %83, label %93

83:                                               ; preds = %71, %68
  %84 = phi i32 [ %81, %71 ], [ %70, %68 ]
  %85 = phi i64 [ %74, %71 ], [ 0, %68 ]
  %86 = phi i64 [ 1, %71 ], [ 2, %68 ]
  %87 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %87)
  store i32 0, i32* %55, align 4
  %88 = getelementptr inbounds i8, i8* %59, i64 %85
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 1 %88, i64 %86, i1 false) #9
  %89 = load i32, i32* %55, align 4
  %90 = tail call i32 @llvm.bswap.i32(i32 %89) #9
  %91 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %92 = add i32 %90, %84
  store i32 %92, i32* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %87)
  br label %93

93:                                               ; preds = %71, %83
  %94 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %95 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %95, i64 2
  %97 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %96, align 8
  %98 = call zeroext i1 %97(%"class.ots::OTSStream"* %1, i8* nonnull %59, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %59)
  br i1 %98, label %99, label %410

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 3
  %101 = load i16, i16* %100, align 4
  %102 = bitcast i16* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %102)
  %103 = call i16 @llvm.bswap.i16(i16 %101) #9
  store i16 %103, i16* %53, align 2
  %104 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %105 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %104, i64 4
  %106 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %105, align 8
  %107 = call i64 %106(%"class.ots::OTSStream"* %1) #9
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %99
  %111 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  br label %125

113:                                              ; preds = %99
  %114 = sub nuw nsw i64 4, %108
  %115 = icmp ult i64 %114, 2
  %116 = select i1 %115, i64 %114, i64 2
  %117 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #9
  store i32 0, i32* %51, align 4
  %118 = getelementptr inbounds i8, i8* %117, i64 %108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %118, i8* nonnull align 2 %102, i64 %116, i1 false) #9
  %119 = load i32, i32* %51, align 4
  %120 = call i32 @llvm.bswap.i32(i32 %119) #9
  %121 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %122 = load i32, i32* %121, align 8
  %123 = add i32 %122, %120
  store i32 %123, i32* %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #9
  %124 = icmp eq i64 %108, 3
  br i1 %124, label %125, label %135

125:                                              ; preds = %113, %110
  %126 = phi i32 [ %123, %113 ], [ %112, %110 ]
  %127 = phi i64 [ %116, %113 ], [ 0, %110 ]
  %128 = phi i64 [ 1, %113 ], [ 2, %110 ]
  %129 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %129)
  store i32 0, i32* %52, align 4
  %130 = getelementptr inbounds i8, i8* %102, i64 %127
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %129, i8* align 1 %130, i64 %128, i1 false) #9
  %131 = load i32, i32* %52, align 4
  %132 = call i32 @llvm.bswap.i32(i32 %131) #9
  %133 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %134 = add i32 %132, %126
  store i32 %134, i32* %133, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %129)
  br label %135

135:                                              ; preds = %113, %125
  %136 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %137 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %136, i64 2
  %138 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %137, align 8
  %139 = call zeroext i1 %138(%"class.ots::OTSStream"* %1, i8* nonnull %102, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %102)
  br i1 %139, label %140, label %410

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 4
  %142 = load i16, i16* %141, align 2
  %143 = bitcast i16* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %143)
  %144 = call i16 @llvm.bswap.i16(i16 %142) #9
  store i16 %144, i16* %50, align 2
  %145 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %146 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %145, i64 4
  %147 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %146, align 8
  %148 = call i64 %147(%"class.ots::OTSStream"* %1) #9
  %149 = and i64 %148, 3
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %153 = load i32, i32* %152, align 8
  br label %166

154:                                              ; preds = %140
  %155 = sub nuw nsw i64 4, %149
  %156 = icmp ult i64 %155, 2
  %157 = select i1 %156, i64 %155, i64 2
  %158 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #9
  store i32 0, i32* %48, align 4
  %159 = getelementptr inbounds i8, i8* %158, i64 %149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %159, i8* nonnull align 2 %143, i64 %157, i1 false) #9
  %160 = load i32, i32* %48, align 4
  %161 = call i32 @llvm.bswap.i32(i32 %160) #9
  %162 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %163 = load i32, i32* %162, align 8
  %164 = add i32 %163, %161
  store i32 %164, i32* %162, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #9
  %165 = icmp eq i64 %149, 3
  br i1 %165, label %166, label %176

166:                                              ; preds = %154, %151
  %167 = phi i32 [ %164, %154 ], [ %153, %151 ]
  %168 = phi i64 [ %157, %154 ], [ 0, %151 ]
  %169 = phi i64 [ 1, %154 ], [ 2, %151 ]
  %170 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170)
  store i32 0, i32* %49, align 4
  %171 = getelementptr inbounds i8, i8* %143, i64 %168
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %170, i8* align 1 %171, i64 %169, i1 false) #9
  %172 = load i32, i32* %49, align 4
  %173 = call i32 @llvm.bswap.i32(i32 %172) #9
  %174 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %175 = add i32 %173, %167
  store i32 %175, i32* %174, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170)
  br label %176

176:                                              ; preds = %154, %166
  %177 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %178 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %177, i64 2
  %179 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %178, align 8
  %180 = call zeroext i1 %179(%"class.ots::OTSStream"* %1, i8* nonnull %143, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %143)
  br i1 %180, label %181, label %410

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 5
  %183 = load i16, i16* %182, align 8
  %184 = bitcast i16* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %184)
  %185 = call i16 @llvm.bswap.i16(i16 %183) #9
  store i16 %185, i16* %47, align 2
  %186 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %187 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %186, i64 4
  %188 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %187, align 8
  %189 = call i64 %188(%"class.ots::OTSStream"* %1) #9
  %190 = and i64 %189, 3
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %181
  %193 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %194 = load i32, i32* %193, align 8
  br label %207

195:                                              ; preds = %181
  %196 = sub nuw nsw i64 4, %190
  %197 = icmp ult i64 %196, 2
  %198 = select i1 %197, i64 %196, i64 2
  %199 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #9
  store i32 0, i32* %45, align 4
  %200 = getelementptr inbounds i8, i8* %199, i64 %190
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %200, i8* nonnull align 2 %184, i64 %198, i1 false) #9
  %201 = load i32, i32* %45, align 4
  %202 = call i32 @llvm.bswap.i32(i32 %201) #9
  %203 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = add i32 %204, %202
  store i32 %205, i32* %203, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #9
  %206 = icmp eq i64 %190, 3
  br i1 %206, label %207, label %217

207:                                              ; preds = %195, %192
  %208 = phi i32 [ %205, %195 ], [ %194, %192 ]
  %209 = phi i64 [ %198, %195 ], [ 0, %192 ]
  %210 = phi i64 [ 1, %195 ], [ 2, %192 ]
  %211 = bitcast i32* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %211)
  store i32 0, i32* %46, align 4
  %212 = getelementptr inbounds i8, i8* %184, i64 %209
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %211, i8* align 1 %212, i64 %210, i1 false) #9
  %213 = load i32, i32* %46, align 4
  %214 = call i32 @llvm.bswap.i32(i32 %213) #9
  %215 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %216 = add i32 %214, %208
  store i32 %216, i32* %215, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %211)
  br label %217

217:                                              ; preds = %195, %207
  %218 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %219 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %218, i64 2
  %220 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %219, align 8
  %221 = call zeroext i1 %220(%"class.ots::OTSStream"* %1, i8* nonnull %184, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %184)
  br i1 %221, label %222, label %410

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 6
  %224 = load i16, i16* %223, align 2
  %225 = bitcast i16* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %225)
  %226 = call i16 @llvm.bswap.i16(i16 %224) #9
  store i16 %226, i16* %44, align 2
  %227 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %228 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %227, i64 4
  %229 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %228, align 8
  %230 = call i64 %229(%"class.ots::OTSStream"* %1) #9
  %231 = and i64 %230, 3
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %222
  %234 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %235 = load i32, i32* %234, align 8
  br label %248

236:                                              ; preds = %222
  %237 = sub nuw nsw i64 4, %231
  %238 = icmp ult i64 %237, 2
  %239 = select i1 %238, i64 %237, i64 2
  %240 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %240) #9
  store i32 0, i32* %42, align 4
  %241 = getelementptr inbounds i8, i8* %240, i64 %231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %241, i8* nonnull align 2 %225, i64 %239, i1 false) #9
  %242 = load i32, i32* %42, align 4
  %243 = call i32 @llvm.bswap.i32(i32 %242) #9
  %244 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %245 = load i32, i32* %244, align 8
  %246 = add i32 %245, %243
  store i32 %246, i32* %244, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %240) #9
  %247 = icmp eq i64 %231, 3
  br i1 %247, label %248, label %258

248:                                              ; preds = %236, %233
  %249 = phi i32 [ %246, %236 ], [ %235, %233 ]
  %250 = phi i64 [ %239, %236 ], [ 0, %233 ]
  %251 = phi i64 [ 1, %236 ], [ 2, %233 ]
  %252 = bitcast i32* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %252)
  store i32 0, i32* %43, align 4
  %253 = getelementptr inbounds i8, i8* %225, i64 %250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %252, i8* align 1 %253, i64 %251, i1 false) #9
  %254 = load i32, i32* %43, align 4
  %255 = call i32 @llvm.bswap.i32(i32 %254) #9
  %256 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %257 = add i32 %255, %249
  store i32 %257, i32* %256, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %252)
  br label %258

258:                                              ; preds = %236, %248
  %259 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %260 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %259, i64 2
  %261 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %260, align 8
  %262 = call zeroext i1 %261(%"class.ots::OTSStream"* %1, i8* nonnull %225, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %225)
  br i1 %262, label %263, label %410

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 7
  %265 = load i16, i16* %264, align 4
  %266 = bitcast i16* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %266)
  %267 = call i16 @llvm.bswap.i16(i16 %265) #9
  store i16 %267, i16* %41, align 2
  %268 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %269 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %268, i64 4
  %270 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %269, align 8
  %271 = call i64 %270(%"class.ots::OTSStream"* %1) #9
  %272 = and i64 %271, 3
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %263
  %275 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %276 = load i32, i32* %275, align 8
  br label %289

277:                                              ; preds = %263
  %278 = sub nuw nsw i64 4, %272
  %279 = icmp ult i64 %278, 2
  %280 = select i1 %279, i64 %278, i64 2
  %281 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281) #9
  store i32 0, i32* %39, align 4
  %282 = getelementptr inbounds i8, i8* %281, i64 %272
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %282, i8* nonnull align 2 %266, i64 %280, i1 false) #9
  %283 = load i32, i32* %39, align 4
  %284 = call i32 @llvm.bswap.i32(i32 %283) #9
  %285 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %286 = load i32, i32* %285, align 8
  %287 = add i32 %286, %284
  store i32 %287, i32* %285, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281) #9
  %288 = icmp eq i64 %272, 3
  br i1 %288, label %289, label %299

289:                                              ; preds = %277, %274
  %290 = phi i32 [ %287, %277 ], [ %276, %274 ]
  %291 = phi i64 [ %280, %277 ], [ 0, %274 ]
  %292 = phi i64 [ 1, %277 ], [ 2, %274 ]
  %293 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293)
  store i32 0, i32* %40, align 4
  %294 = getelementptr inbounds i8, i8* %266, i64 %291
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %293, i8* align 1 %294, i64 %292, i1 false) #9
  %295 = load i32, i32* %40, align 4
  %296 = call i32 @llvm.bswap.i32(i32 %295) #9
  %297 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %298 = add i32 %296, %290
  store i32 %298, i32* %297, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293)
  br label %299

299:                                              ; preds = %277, %289
  %300 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %301 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %300, i64 2
  %302 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %301, align 8
  %303 = call zeroext i1 %302(%"class.ots::OTSStream"* %1, i8* nonnull %266, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %266)
  br i1 %303, label %304, label %410

304:                                              ; preds = %299
  %305 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 8
  %306 = load i16, i16* %305, align 2
  %307 = bitcast i16* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %307)
  %308 = call i16 @llvm.bswap.i16(i16 %306) #9
  store i16 %308, i16* %38, align 2
  %309 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %310 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %309, i64 4
  %311 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %310, align 8
  %312 = call i64 %311(%"class.ots::OTSStream"* %1) #9
  %313 = and i64 %312, 3
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %315, label %318

315:                                              ; preds = %304
  %316 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %317 = load i32, i32* %316, align 8
  br label %330

318:                                              ; preds = %304
  %319 = sub nuw nsw i64 4, %313
  %320 = icmp ult i64 %319, 2
  %321 = select i1 %320, i64 %319, i64 2
  %322 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %322) #9
  store i32 0, i32* %36, align 4
  %323 = getelementptr inbounds i8, i8* %322, i64 %313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %323, i8* nonnull align 2 %307, i64 %321, i1 false) #9
  %324 = load i32, i32* %36, align 4
  %325 = call i32 @llvm.bswap.i32(i32 %324) #9
  %326 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %327 = load i32, i32* %326, align 8
  %328 = add i32 %327, %325
  store i32 %328, i32* %326, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %322) #9
  %329 = icmp eq i64 %313, 3
  br i1 %329, label %330, label %340

330:                                              ; preds = %318, %315
  %331 = phi i32 [ %328, %318 ], [ %317, %315 ]
  %332 = phi i64 [ %321, %318 ], [ 0, %315 ]
  %333 = phi i64 [ 1, %318 ], [ 2, %315 ]
  %334 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %334)
  store i32 0, i32* %37, align 4
  %335 = getelementptr inbounds i8, i8* %307, i64 %332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %334, i8* align 1 %335, i64 %333, i1 false) #9
  %336 = load i32, i32* %37, align 4
  %337 = call i32 @llvm.bswap.i32(i32 %336) #9
  %338 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %339 = add i32 %337, %331
  store i32 %339, i32* %338, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %334)
  br label %340

340:                                              ; preds = %318, %330
  %341 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %342 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %341, i64 2
  %343 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %342, align 8
  %344 = call zeroext i1 %343(%"class.ots::OTSStream"* %1, i8* nonnull %307, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %307)
  br i1 %344, label %345, label %410

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 9
  %347 = load i16, i16* %346, align 8
  %348 = bitcast i16* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %348)
  %349 = call i16 @llvm.bswap.i16(i16 %347) #9
  store i16 %349, i16* %35, align 2
  %350 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %351 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %350, i64 4
  %352 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %351, align 8
  %353 = call i64 %352(%"class.ots::OTSStream"* %1) #9
  %354 = and i64 %353, 3
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %359

356:                                              ; preds = %345
  %357 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %358 = load i32, i32* %357, align 8
  br label %371

359:                                              ; preds = %345
  %360 = sub nuw nsw i64 4, %354
  %361 = icmp ult i64 %360, 2
  %362 = select i1 %361, i64 %360, i64 2
  %363 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %363) #9
  store i32 0, i32* %33, align 4
  %364 = getelementptr inbounds i8, i8* %363, i64 %354
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %364, i8* nonnull align 2 %348, i64 %362, i1 false) #9
  %365 = load i32, i32* %33, align 4
  %366 = call i32 @llvm.bswap.i32(i32 %365) #9
  %367 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %368 = load i32, i32* %367, align 8
  %369 = add i32 %368, %366
  store i32 %369, i32* %367, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %363) #9
  %370 = icmp eq i64 %354, 3
  br i1 %370, label %371, label %381

371:                                              ; preds = %359, %356
  %372 = phi i32 [ %369, %359 ], [ %358, %356 ]
  %373 = phi i64 [ %362, %359 ], [ 0, %356 ]
  %374 = phi i64 [ 1, %359 ], [ 2, %356 ]
  %375 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %375)
  store i32 0, i32* %34, align 4
  %376 = getelementptr inbounds i8, i8* %348, i64 %373
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %375, i8* align 1 %376, i64 %374, i1 false) #9
  %377 = load i32, i32* %34, align 4
  %378 = call i32 @llvm.bswap.i32(i32 %377) #9
  %379 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %380 = add i32 %378, %372
  store i32 %380, i32* %379, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %375)
  br label %381

381:                                              ; preds = %359, %371
  %382 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %383 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %382, i64 2
  %384 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %383, align 8
  %385 = call zeroext i1 %384(%"class.ots::OTSStream"* %1, i8* nonnull %348, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %348)
  br i1 %385, label %386, label %410

386:                                              ; preds = %381
  %387 = load i16, i16* %223, align 2
  %388 = icmp eq i16 %387, 0
  br i1 %388, label %417, label %389

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 0
  %391 = bitcast i32* %32 to i8*
  %392 = bitcast i32* %30 to i8*
  %393 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %394 = bitcast i32* %31 to i8*
  %395 = bitcast i32* %29 to i8*
  %396 = bitcast i32* %27 to i8*
  %397 = bitcast i32* %28 to i8*
  %398 = bitcast i32* %26 to i8*
  %399 = bitcast i32* %24 to i8*
  %400 = bitcast i32* %25 to i8*
  %401 = bitcast i32* %23 to i8*
  %402 = bitcast i32* %21 to i8*
  %403 = bitcast i32* %22 to i8*
  %404 = bitcast i16* %20 to i8*
  %405 = bitcast i32* %18 to i8*
  %406 = bitcast i32* %19 to i8*
  %407 = bitcast i16* %17 to i8*
  %408 = bitcast i32* %15 to i8*
  %409 = bitcast i32* %16 to i8*
  br label %436

410:                                              ; preds = %381, %340, %299, %258, %217, %176, %135, %93
  %411 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %412 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %411, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %853

413:                                              ; preds = %667
  %414 = load i16, i16* %223, align 2
  %415 = zext i16 %414 to i64
  %416 = icmp ult i64 %672, %415
  br i1 %416, label %436, label %417

417:                                              ; preds = %413, %386
  %418 = load i16, i16* %305, align 2
  %419 = icmp eq i16 %418, 0
  br i1 %419, label %853, label %420

420:                                              ; preds = %417
  %421 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12, i32 0, i32 0
  %422 = bitcast i16* %14 to i8*
  %423 = bitcast i32* %12 to i8*
  %424 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %425 = bitcast i32* %13 to i8*
  %426 = bitcast i16* %11 to i8*
  %427 = bitcast i32* %9 to i8*
  %428 = bitcast i32* %10 to i8*
  %429 = bitcast i32* %8 to i8*
  %430 = bitcast i32* %6 to i8*
  %431 = bitcast i32* %7 to i8*
  %432 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 13
  %433 = bitcast i16* %5 to i8*
  %434 = bitcast i32* %3 to i8*
  %435 = bitcast i32* %4 to i8*
  br label %676

436:                                              ; preds = %389, %413
  %437 = phi i64 [ 0, %389 ], [ %672, %413 ]
  %438 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %390, align 8
  %439 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 0
  %440 = load i32, i32* %439, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %391)
  %441 = call i32 @llvm.bswap.i32(i32 %440) #9
  store i32 %441, i32* %32, align 4
  %442 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %443 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %442, i64 4
  %444 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %443, align 8
  %445 = call i64 %444(%"class.ots::OTSStream"* %1) #9
  %446 = and i64 %445, 3
  %447 = icmp eq i64 %446, 0
  br i1 %447, label %448, label %450

448:                                              ; preds = %436
  %449 = load i32, i32* %393, align 8
  br label %460

450:                                              ; preds = %436
  %451 = sub nuw nsw i64 4, %446
  %452 = icmp ult i64 %451, 4
  %453 = select i1 %452, i64 %451, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %392) #9
  store i32 0, i32* %30, align 4
  %454 = getelementptr inbounds i8, i8* %392, i64 %446
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %454, i8* nonnull align 4 %391, i64 %453, i1 false) #9
  %455 = load i32, i32* %30, align 4
  %456 = call i32 @llvm.bswap.i32(i32 %455) #9
  %457 = load i32, i32* %393, align 8
  %458 = add i32 %457, %456
  store i32 %458, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %392) #9
  %459 = icmp eq i64 %453, 0
  br i1 %459, label %460, label %468

460:                                              ; preds = %450, %448
  %461 = phi i32 [ %458, %450 ], [ %449, %448 ]
  %462 = phi i64 [ %451, %450 ], [ 0, %448 ]
  %463 = getelementptr inbounds i8, i8* %391, i64 %462
  %464 = bitcast i8* %463 to i32*
  %465 = load i32, i32* %464, align 1
  %466 = call i32 @llvm.bswap.i32(i32 %465) #9
  %467 = add i32 %466, %461
  store i32 %467, i32* %393, align 8
  br label %474

468:                                              ; preds = %450
  %469 = sub nuw nsw i64 4, %453
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %394)
  store i32 0, i32* %31, align 4
  %470 = getelementptr inbounds i8, i8* %391, i64 %451
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %394, i8* align 1 %470, i64 %469, i1 false) #9
  %471 = load i32, i32* %31, align 4
  %472 = call i32 @llvm.bswap.i32(i32 %471) #9
  %473 = add i32 %472, %458
  store i32 %473, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %394)
  br label %474

474:                                              ; preds = %460, %468
  %475 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %476 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %475, i64 2
  %477 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %476, align 8
  %478 = call zeroext i1 %477(%"class.ots::OTSStream"* %1, i8* nonnull %391, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %391)
  br i1 %478, label %479, label %673

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 1
  %481 = load i32, i32* %480, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %395)
  %482 = call i32 @llvm.bswap.i32(i32 %481) #9
  store i32 %482, i32* %29, align 4
  %483 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %484 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %483, i64 4
  %485 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %484, align 8
  %486 = call i64 %485(%"class.ots::OTSStream"* %1) #9
  %487 = and i64 %486, 3
  %488 = icmp eq i64 %487, 0
  br i1 %488, label %489, label %491

489:                                              ; preds = %479
  %490 = load i32, i32* %393, align 8
  br label %501

491:                                              ; preds = %479
  %492 = sub nuw nsw i64 4, %487
  %493 = icmp ult i64 %492, 4
  %494 = select i1 %493, i64 %492, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %396) #9
  store i32 0, i32* %27, align 4
  %495 = getelementptr inbounds i8, i8* %396, i64 %487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %495, i8* nonnull align 4 %395, i64 %494, i1 false) #9
  %496 = load i32, i32* %27, align 4
  %497 = call i32 @llvm.bswap.i32(i32 %496) #9
  %498 = load i32, i32* %393, align 8
  %499 = add i32 %498, %497
  store i32 %499, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %396) #9
  %500 = icmp eq i64 %494, 0
  br i1 %500, label %501, label %509

501:                                              ; preds = %491, %489
  %502 = phi i32 [ %499, %491 ], [ %490, %489 ]
  %503 = phi i64 [ %492, %491 ], [ 0, %489 ]
  %504 = getelementptr inbounds i8, i8* %395, i64 %503
  %505 = bitcast i8* %504 to i32*
  %506 = load i32, i32* %505, align 1
  %507 = call i32 @llvm.bswap.i32(i32 %506) #9
  %508 = add i32 %507, %502
  store i32 %508, i32* %393, align 8
  br label %515

509:                                              ; preds = %491
  %510 = sub nuw nsw i64 4, %494
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %397)
  store i32 0, i32* %28, align 4
  %511 = getelementptr inbounds i8, i8* %395, i64 %492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %397, i8* align 1 %511, i64 %510, i1 false) #9
  %512 = load i32, i32* %28, align 4
  %513 = call i32 @llvm.bswap.i32(i32 %512) #9
  %514 = add i32 %513, %499
  store i32 %514, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %397)
  br label %515

515:                                              ; preds = %501, %509
  %516 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %517 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %516, i64 2
  %518 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %517, align 8
  %519 = call zeroext i1 %518(%"class.ots::OTSStream"* %1, i8* nonnull %395, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %395)
  br i1 %519, label %520, label %673

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 2
  %522 = load i32, i32* %521, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %398)
  %523 = call i32 @llvm.bswap.i32(i32 %522) #9
  store i32 %523, i32* %26, align 4
  %524 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %525 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %524, i64 4
  %526 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %525, align 8
  %527 = call i64 %526(%"class.ots::OTSStream"* %1) #9
  %528 = and i64 %527, 3
  %529 = icmp eq i64 %528, 0
  br i1 %529, label %530, label %532

530:                                              ; preds = %520
  %531 = load i32, i32* %393, align 8
  br label %542

532:                                              ; preds = %520
  %533 = sub nuw nsw i64 4, %528
  %534 = icmp ult i64 %533, 4
  %535 = select i1 %534, i64 %533, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %399) #9
  store i32 0, i32* %24, align 4
  %536 = getelementptr inbounds i8, i8* %399, i64 %528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %536, i8* nonnull align 4 %398, i64 %535, i1 false) #9
  %537 = load i32, i32* %24, align 4
  %538 = call i32 @llvm.bswap.i32(i32 %537) #9
  %539 = load i32, i32* %393, align 8
  %540 = add i32 %539, %538
  store i32 %540, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %399) #9
  %541 = icmp eq i64 %535, 0
  br i1 %541, label %542, label %550

542:                                              ; preds = %532, %530
  %543 = phi i32 [ %540, %532 ], [ %531, %530 ]
  %544 = phi i64 [ %533, %532 ], [ 0, %530 ]
  %545 = getelementptr inbounds i8, i8* %398, i64 %544
  %546 = bitcast i8* %545 to i32*
  %547 = load i32, i32* %546, align 1
  %548 = call i32 @llvm.bswap.i32(i32 %547) #9
  %549 = add i32 %548, %543
  store i32 %549, i32* %393, align 8
  br label %556

550:                                              ; preds = %532
  %551 = sub nuw nsw i64 4, %535
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %400)
  store i32 0, i32* %25, align 4
  %552 = getelementptr inbounds i8, i8* %398, i64 %533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %400, i8* align 1 %552, i64 %551, i1 false) #9
  %553 = load i32, i32* %25, align 4
  %554 = call i32 @llvm.bswap.i32(i32 %553) #9
  %555 = add i32 %554, %540
  store i32 %555, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %400)
  br label %556

556:                                              ; preds = %542, %550
  %557 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %558 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %557, i64 2
  %559 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %558, align 8
  %560 = call zeroext i1 %559(%"class.ots::OTSStream"* %1, i8* nonnull %398, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %398)
  br i1 %560, label %561, label %673

561:                                              ; preds = %556
  %562 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 3
  %563 = load i32, i32* %562, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %401)
  %564 = call i32 @llvm.bswap.i32(i32 %563) #9
  store i32 %564, i32* %23, align 4
  %565 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %566 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %565, i64 4
  %567 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %566, align 8
  %568 = call i64 %567(%"class.ots::OTSStream"* %1) #9
  %569 = and i64 %568, 3
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %571, label %573

571:                                              ; preds = %561
  %572 = load i32, i32* %393, align 8
  br label %583

573:                                              ; preds = %561
  %574 = sub nuw nsw i64 4, %569
  %575 = icmp ult i64 %574, 4
  %576 = select i1 %575, i64 %574, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %402) #9
  store i32 0, i32* %21, align 4
  %577 = getelementptr inbounds i8, i8* %402, i64 %569
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %577, i8* nonnull align 4 %401, i64 %576, i1 false) #9
  %578 = load i32, i32* %21, align 4
  %579 = call i32 @llvm.bswap.i32(i32 %578) #9
  %580 = load i32, i32* %393, align 8
  %581 = add i32 %580, %579
  store i32 %581, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %402) #9
  %582 = icmp eq i64 %576, 0
  br i1 %582, label %583, label %591

583:                                              ; preds = %573, %571
  %584 = phi i32 [ %581, %573 ], [ %572, %571 ]
  %585 = phi i64 [ %574, %573 ], [ 0, %571 ]
  %586 = getelementptr inbounds i8, i8* %401, i64 %585
  %587 = bitcast i8* %586 to i32*
  %588 = load i32, i32* %587, align 1
  %589 = call i32 @llvm.bswap.i32(i32 %588) #9
  %590 = add i32 %589, %584
  store i32 %590, i32* %393, align 8
  br label %597

591:                                              ; preds = %573
  %592 = sub nuw nsw i64 4, %576
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %403)
  store i32 0, i32* %22, align 4
  %593 = getelementptr inbounds i8, i8* %401, i64 %574
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %403, i8* align 1 %593, i64 %592, i1 false) #9
  %594 = load i32, i32* %22, align 4
  %595 = call i32 @llvm.bswap.i32(i32 %594) #9
  %596 = add i32 %595, %581
  store i32 %596, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %403)
  br label %597

597:                                              ; preds = %583, %591
  %598 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %599 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %598, i64 2
  %600 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %599, align 8
  %601 = call zeroext i1 %600(%"class.ots::OTSStream"* %1, i8* nonnull %401, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %401)
  br i1 %601, label %602, label %673

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 4
  %604 = load i16, i16* %603, align 4
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %404)
  %605 = call i16 @llvm.bswap.i16(i16 %604) #9
  store i16 %605, i16* %20, align 2
  %606 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %607 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %606, i64 4
  %608 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %607, align 8
  %609 = call i64 %608(%"class.ots::OTSStream"* %1) #9
  %610 = and i64 %609, 3
  %611 = icmp eq i64 %610, 0
  br i1 %611, label %612, label %614

612:                                              ; preds = %602
  %613 = load i32, i32* %393, align 8
  br label %624

614:                                              ; preds = %602
  %615 = sub nuw nsw i64 4, %610
  %616 = icmp ult i64 %615, 2
  %617 = select i1 %616, i64 %615, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %405) #9
  store i32 0, i32* %18, align 4
  %618 = getelementptr inbounds i8, i8* %405, i64 %610
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %618, i8* nonnull align 2 %404, i64 %617, i1 false) #9
  %619 = load i32, i32* %18, align 4
  %620 = call i32 @llvm.bswap.i32(i32 %619) #9
  %621 = load i32, i32* %393, align 8
  %622 = add i32 %621, %620
  store i32 %622, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %405) #9
  %623 = icmp eq i64 %610, 3
  br i1 %623, label %624, label %632

624:                                              ; preds = %614, %612
  %625 = phi i32 [ %622, %614 ], [ %613, %612 ]
  %626 = phi i64 [ %617, %614 ], [ 0, %612 ]
  %627 = phi i64 [ 1, %614 ], [ 2, %612 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %406)
  store i32 0, i32* %19, align 4
  %628 = getelementptr inbounds i8, i8* %404, i64 %626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %406, i8* align 1 %628, i64 %627, i1 false) #9
  %629 = load i32, i32* %19, align 4
  %630 = call i32 @llvm.bswap.i32(i32 %629) #9
  %631 = add i32 %630, %625
  store i32 %631, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %406)
  br label %632

632:                                              ; preds = %614, %624
  %633 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %634 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %633, i64 2
  %635 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %634, align 8
  %636 = call zeroext i1 %635(%"class.ots::OTSStream"* %1, i8* nonnull %404, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %404)
  br i1 %636, label %637, label %673

637:                                              ; preds = %632
  %638 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::VariationAxisRecord", %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %438, i64 %437, i32 5
  %639 = load i16, i16* %638, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %407)
  %640 = call i16 @llvm.bswap.i16(i16 %639) #9
  store i16 %640, i16* %17, align 2
  %641 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %642 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %641, i64 4
  %643 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %642, align 8
  %644 = call i64 %643(%"class.ots::OTSStream"* %1) #9
  %645 = and i64 %644, 3
  %646 = icmp eq i64 %645, 0
  br i1 %646, label %647, label %649

647:                                              ; preds = %637
  %648 = load i32, i32* %393, align 8
  br label %659

649:                                              ; preds = %637
  %650 = sub nuw nsw i64 4, %645
  %651 = icmp ult i64 %650, 2
  %652 = select i1 %651, i64 %650, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %408) #9
  store i32 0, i32* %15, align 4
  %653 = getelementptr inbounds i8, i8* %408, i64 %645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %653, i8* nonnull align 2 %407, i64 %652, i1 false) #9
  %654 = load i32, i32* %15, align 4
  %655 = call i32 @llvm.bswap.i32(i32 %654) #9
  %656 = load i32, i32* %393, align 8
  %657 = add i32 %656, %655
  store i32 %657, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %408) #9
  %658 = icmp eq i64 %645, 3
  br i1 %658, label %659, label %667

659:                                              ; preds = %649, %647
  %660 = phi i32 [ %657, %649 ], [ %648, %647 ]
  %661 = phi i64 [ %652, %649 ], [ 0, %647 ]
  %662 = phi i64 [ 1, %649 ], [ 2, %647 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %409)
  store i32 0, i32* %16, align 4
  %663 = getelementptr inbounds i8, i8* %407, i64 %661
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %409, i8* align 1 %663, i64 %662, i1 false) #9
  %664 = load i32, i32* %16, align 4
  %665 = call i32 @llvm.bswap.i32(i32 %664) #9
  %666 = add i32 %665, %660
  store i32 %666, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %409)
  br label %667

667:                                              ; preds = %649, %659
  %668 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %669 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %668, i64 2
  %670 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %669, align 8
  %671 = call zeroext i1 %670(%"class.ots::OTSStream"* %1, i8* nonnull %407, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %407)
  %672 = add nuw nsw i64 %437, 1
  br i1 %671, label %413, label %673

673:                                              ; preds = %667, %632, %597, %556, %515, %474
  %674 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %675 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %674, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %853

676:                                              ; preds = %420, %848
  %677 = phi i64 [ 0, %420 ], [ %849, %848 ]
  %678 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %421, align 8
  %679 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %678, i64 %677, i32 0
  %680 = load i16, i16* %679, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %422)
  %681 = call i16 @llvm.bswap.i16(i16 %680) #9
  store i16 %681, i16* %14, align 2
  %682 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %683 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %682, i64 4
  %684 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %683, align 8
  %685 = call i64 %684(%"class.ots::OTSStream"* %1) #9
  %686 = and i64 %685, 3
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %690

688:                                              ; preds = %676
  %689 = load i32, i32* %424, align 8
  br label %700

690:                                              ; preds = %676
  %691 = sub nuw nsw i64 4, %686
  %692 = icmp ult i64 %691, 2
  %693 = select i1 %692, i64 %691, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %423) #9
  store i32 0, i32* %12, align 4
  %694 = getelementptr inbounds i8, i8* %423, i64 %686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %694, i8* nonnull align 2 %422, i64 %693, i1 false) #9
  %695 = load i32, i32* %12, align 4
  %696 = call i32 @llvm.bswap.i32(i32 %695) #9
  %697 = load i32, i32* %424, align 8
  %698 = add i32 %697, %696
  store i32 %698, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %423) #9
  %699 = icmp eq i64 %686, 3
  br i1 %699, label %700, label %708

700:                                              ; preds = %690, %688
  %701 = phi i32 [ %698, %690 ], [ %689, %688 ]
  %702 = phi i64 [ %693, %690 ], [ 0, %688 ]
  %703 = phi i64 [ 1, %690 ], [ 2, %688 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %425)
  store i32 0, i32* %13, align 4
  %704 = getelementptr inbounds i8, i8* %422, i64 %702
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %425, i8* align 1 %704, i64 %703, i1 false) #9
  %705 = load i32, i32* %13, align 4
  %706 = call i32 @llvm.bswap.i32(i32 %705) #9
  %707 = add i32 %706, %701
  store i32 %707, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %425)
  br label %708

708:                                              ; preds = %690, %700
  %709 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %710 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %709, i64 2
  %711 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %710, align 8
  %712 = call zeroext i1 %711(%"class.ots::OTSStream"* %1, i8* nonnull %422, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %422)
  br i1 %712, label %713, label %753

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %678, i64 %677, i32 1
  %715 = load i16, i16* %714, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %426)
  %716 = call i16 @llvm.bswap.i16(i16 %715) #9
  store i16 %716, i16* %11, align 2
  %717 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %718 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %717, i64 4
  %719 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %718, align 8
  %720 = call i64 %719(%"class.ots::OTSStream"* %1) #9
  %721 = and i64 %720, 3
  %722 = icmp eq i64 %721, 0
  br i1 %722, label %723, label %725

723:                                              ; preds = %713
  %724 = load i32, i32* %424, align 8
  br label %735

725:                                              ; preds = %713
  %726 = sub nuw nsw i64 4, %721
  %727 = icmp ult i64 %726, 2
  %728 = select i1 %727, i64 %726, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %427) #9
  store i32 0, i32* %9, align 4
  %729 = getelementptr inbounds i8, i8* %427, i64 %721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %729, i8* nonnull align 2 %426, i64 %728, i1 false) #9
  %730 = load i32, i32* %9, align 4
  %731 = call i32 @llvm.bswap.i32(i32 %730) #9
  %732 = load i32, i32* %424, align 8
  %733 = add i32 %732, %731
  store i32 %733, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %427) #9
  %734 = icmp eq i64 %721, 3
  br i1 %734, label %735, label %743

735:                                              ; preds = %725, %723
  %736 = phi i32 [ %733, %725 ], [ %724, %723 ]
  %737 = phi i64 [ %728, %725 ], [ 0, %723 ]
  %738 = phi i64 [ 1, %725 ], [ 2, %723 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %428)
  store i32 0, i32* %10, align 4
  %739 = getelementptr inbounds i8, i8* %426, i64 %737
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %428, i8* align 1 %739, i64 %738, i1 false) #9
  %740 = load i32, i32* %10, align 4
  %741 = call i32 @llvm.bswap.i32(i32 %740) #9
  %742 = add i32 %741, %736
  store i32 %742, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %428)
  br label %743

743:                                              ; preds = %725, %735
  %744 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %745 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %744, i64 2
  %746 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %745, align 8
  %747 = call zeroext i1 %746(%"class.ots::OTSStream"* %1, i8* nonnull %426, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %426)
  br i1 %747, label %748, label %753

748:                                              ; preds = %743
  %749 = load i16, i16* %223, align 2
  %750 = icmp eq i16 %749, 0
  br i1 %750, label %807, label %751

751:                                              ; preds = %748
  %752 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %678, i64 %677, i32 3, i32 0, i32 0
  br label %760

753:                                              ; preds = %743, %708
  %754 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %755 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %754, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %853

756:                                              ; preds = %798
  %757 = load i16, i16* %223, align 2
  %758 = zext i16 %757 to i64
  %759 = icmp ult i64 %803, %758
  br i1 %759, label %760, label %807

760:                                              ; preds = %751, %756
  %761 = phi i64 [ 0, %751 ], [ %803, %756 ]
  %762 = load i32*, i32** %752, align 8
  %763 = getelementptr inbounds i32, i32* %762, i64 %761
  %764 = load i32, i32* %763, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %429)
  %765 = call i32 @llvm.bswap.i32(i32 %764) #9
  store i32 %765, i32* %8, align 4
  %766 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %767 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %766, i64 4
  %768 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %767, align 8
  %769 = call i64 %768(%"class.ots::OTSStream"* %1) #9
  %770 = and i64 %769, 3
  %771 = icmp eq i64 %770, 0
  br i1 %771, label %772, label %774

772:                                              ; preds = %760
  %773 = load i32, i32* %424, align 8
  br label %784

774:                                              ; preds = %760
  %775 = sub nuw nsw i64 4, %770
  %776 = icmp ult i64 %775, 4
  %777 = select i1 %776, i64 %775, i64 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %430) #9
  store i32 0, i32* %6, align 4
  %778 = getelementptr inbounds i8, i8* %430, i64 %770
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %778, i8* nonnull align 4 %429, i64 %777, i1 false) #9
  %779 = load i32, i32* %6, align 4
  %780 = call i32 @llvm.bswap.i32(i32 %779) #9
  %781 = load i32, i32* %424, align 8
  %782 = add i32 %781, %780
  store i32 %782, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %430) #9
  %783 = icmp eq i64 %777, 0
  br i1 %783, label %784, label %792

784:                                              ; preds = %774, %772
  %785 = phi i32 [ %782, %774 ], [ %773, %772 ]
  %786 = phi i64 [ %775, %774 ], [ 0, %772 ]
  %787 = getelementptr inbounds i8, i8* %429, i64 %786
  %788 = bitcast i8* %787 to i32*
  %789 = load i32, i32* %788, align 1
  %790 = call i32 @llvm.bswap.i32(i32 %789) #9
  %791 = add i32 %790, %785
  store i32 %791, i32* %424, align 8
  br label %798

792:                                              ; preds = %774
  %793 = sub nuw nsw i64 4, %777
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %431)
  store i32 0, i32* %7, align 4
  %794 = getelementptr inbounds i8, i8* %429, i64 %775
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %431, i8* align 1 %794, i64 %793, i1 false) #9
  %795 = load i32, i32* %7, align 4
  %796 = call i32 @llvm.bswap.i32(i32 %795) #9
  %797 = add i32 %796, %782
  store i32 %797, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %431)
  br label %798

798:                                              ; preds = %784, %792
  %799 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %800 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %799, i64 2
  %801 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %800, align 8
  %802 = call zeroext i1 %801(%"class.ots::OTSStream"* %1, i8* nonnull %429, i64 4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %429)
  %803 = add nuw nsw i64 %761, 1
  br i1 %802, label %756, label %804

804:                                              ; preds = %798
  %805 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %806 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %805, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %853

807:                                              ; preds = %756, %748
  %808 = load i8, i8* %432, align 8, !range !2
  %809 = icmp eq i8 %808, 0
  br i1 %809, label %848, label %810

810:                                              ; preds = %807
  %811 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %678, i64 %677, i32 4
  %812 = load i16, i16* %811, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %433)
  %813 = call i16 @llvm.bswap.i16(i16 %812) #9
  store i16 %813, i16* %5, align 2
  %814 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %61, align 8
  %815 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %814, i64 4
  %816 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %815, align 8
  %817 = call i64 %816(%"class.ots::OTSStream"* %1) #9
  %818 = and i64 %817, 3
  %819 = icmp eq i64 %818, 0
  br i1 %819, label %820, label %822

820:                                              ; preds = %810
  %821 = load i32, i32* %424, align 8
  br label %832

822:                                              ; preds = %810
  %823 = sub nuw nsw i64 4, %818
  %824 = icmp ult i64 %823, 2
  %825 = select i1 %824, i64 %823, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %434) #9
  store i32 0, i32* %3, align 4
  %826 = getelementptr inbounds i8, i8* %434, i64 %818
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %826, i8* nonnull align 2 %433, i64 %825, i1 false) #9
  %827 = load i32, i32* %3, align 4
  %828 = call i32 @llvm.bswap.i32(i32 %827) #9
  %829 = load i32, i32* %424, align 8
  %830 = add i32 %829, %828
  store i32 %830, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %434) #9
  %831 = icmp eq i64 %818, 3
  br i1 %831, label %832, label %840

832:                                              ; preds = %822, %820
  %833 = phi i32 [ %830, %822 ], [ %821, %820 ]
  %834 = phi i64 [ %825, %822 ], [ 0, %820 ]
  %835 = phi i64 [ 1, %822 ], [ 2, %820 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %435)
  store i32 0, i32* %4, align 4
  %836 = getelementptr inbounds i8, i8* %433, i64 %834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %435, i8* align 1 %836, i64 %835, i1 false) #9
  %837 = load i32, i32* %4, align 4
  %838 = call i32 @llvm.bswap.i32(i32 %837) #9
  %839 = add i32 %838, %833
  store i32 %839, i32* %424, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %435)
  br label %840

840:                                              ; preds = %822, %832
  %841 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %94, align 8
  %842 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %841, i64 2
  %843 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %842, align 8
  %844 = call zeroext i1 %843(%"class.ots::OTSStream"* %1, i8* nonnull %433, i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %433)
  br i1 %844, label %848, label %845

845:                                              ; preds = %840
  %846 = bitcast %"class.ots::OpenTypeFVAR"* %0 to %"class.ots::Table"*
  %847 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %846, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0)) #9
  br label %853

848:                                              ; preds = %807, %840
  %849 = add nuw nsw i64 %677, 1
  %850 = load i16, i16* %305, align 2
  %851 = zext i16 %850 to i64
  %852 = icmp ult i64 %849, %851
  br i1 %852, label %676, label %853

853:                                              ; preds = %848, %417, %410, %673, %753, %804, %845
  %854 = phi i1 [ %755, %753 ], [ %806, %804 ], [ %847, %845 ], [ %412, %410 ], [ %675, %673 ], [ true, %417 ], [ true, %848 ]
  ret i1 %854
}

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeFVARD2Ev(%"class.ots::OpenTypeFVAR"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeFVARE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1, i32 3, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1, i32 3, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 0
  %32 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %31, align 8
  %33 = icmp eq %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32 to i64
  %36 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 1
  %37 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %30, %34
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeFVARD0Ev(%"class.ots::OpenTypeFVAR"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypeFVARE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %4, align 8
  %6 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 12, i32 0, i32 1
  %10 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %9, align 8
  %11 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1, i32 3, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %13, i64 -1, i32 3, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"struct.ots::OpenTypeFVAR::InstanceRecord"* %5, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #11
  br label %30

30:                                               ; preds = %28, %1
  %31 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 0
  %32 = load %"struct.ots::OpenTypeFVAR::VariationAxisRecord"*, %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %31, align 8
  %33 = icmp eq %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32 to i64
  %36 = getelementptr inbounds %"class.ots::OpenTypeFVAR", %"class.ots::OpenTypeFVAR"* %0, i64 0, i32 11, i32 0, i32 1
  %37 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast %"struct.ots::OpenTypeFVAR::VariationAxisRecord"* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #11
  br label %39

39:                                               ; preds = %30, %34
  %40 = bitcast %"class.ots::OpenTypeFVAR"* %0 to i8*
  tail call void @_ZdlPv(i8* %40) #11
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3ots12OpenTypeFVAR14InstanceRecordENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector.29"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 40
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 461168601842738790
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #10
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 40
  %19 = icmp ult i64 %18, 230584300921369395
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 461168601842738790, %13 ]
  %27 = mul i64 %26, 40
  %28 = tail call i8* @_Znwm(i64 %27) #11
  %29 = bitcast i8* %28 to %"struct.ots::OpenTypeFVAR::InstanceRecord"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %32, i64 %8
  %34 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %32, i64 %31
  %35 = ptrtoint %"struct.ots::OpenTypeFVAR::InstanceRecord"* %34 to i64
  %36 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 40, i1 false) #9
  %37 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %33, i64 1
  %38 = ptrtoint %"struct.ots::OpenTypeFVAR::InstanceRecord"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %39, align 8
  %41 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %2, align 8
  %42 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %30
  %44 = ptrtoint %"struct.ots::OpenTypeFVAR::InstanceRecord"* %40 to i64
  br label %77

45:                                               ; preds = %30, %45
  %46 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %48, %45 ], [ %33, %30 ]
  %47 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %49, %45 ], [ %41, %30 ]
  %48 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %47, i64 -1
  %50 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %49 to i32*
  %51 = bitcast %"struct.ots::OpenTypeFVAR::InstanceRecord"* %48 to i32*
  %52 = load i32, i32* %50, align 8
  store i32 %52, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %46, i64 -1, i32 3
  %54 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %47, i64 -1, i32 3
  %55 = bitcast %"class.std::__1::vector.31"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #9
  %56 = bitcast %"class.std::__1::vector.31"* %54 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.31"* %53 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %47, i64 -1, i32 3, i32 0, i32 1
  %60 = bitcast i32** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %46, i64 -1, i32 3, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %47, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast i32** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %46, i64 -1, i32 3, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast i32** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.std::__1::vector.31"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #9
  %70 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %46, i64 -1, i32 4
  %71 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %47, i64 -1, i32 4
  %72 = load i16, i16* %71, align 8
  store i16 %72, i16* %70, align 8
  %73 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %49, %40
  br i1 %73, label %74, label %45

74:                                               ; preds = %45
  %75 = load i64, i64* %5, align 8
  %76 = load %"struct.ots::OpenTypeFVAR::InstanceRecord"*, %"struct.ots::OpenTypeFVAR::InstanceRecord"** %2, align 8
  br label %77

77:                                               ; preds = %43, %74
  %78 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %40, %43 ], [ %76, %74 ]
  %79 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %33, %43 ], [ %48, %74 ]
  %80 = phi i64 [ %44, %43 ], [ %75, %74 ]
  %81 = ptrtoint %"struct.ots::OpenTypeFVAR::InstanceRecord"* %79 to i64
  store i64 %81, i64* %5, align 8
  store i64 %38, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %82 = inttoptr i64 %80 to %"struct.ots::OpenTypeFVAR::InstanceRecord"*
  %83 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %78, %82
  br i1 %83, label %97, label %84

84:                                               ; preds = %77, %95
  %85 = phi %"struct.ots::OpenTypeFVAR::InstanceRecord"* [ %86, %95 ], [ %78, %77 ]
  %86 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %85, i64 -1
  %87 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %85, i64 -1, i32 3, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = icmp eq i32* %88, null
  br i1 %89, label %95, label %90

90:                                               ; preds = %84
  %91 = ptrtoint i32* %88 to i64
  %92 = getelementptr inbounds %"struct.ots::OpenTypeFVAR::InstanceRecord", %"struct.ots::OpenTypeFVAR::InstanceRecord"* %85, i64 -1, i32 3, i32 0, i32 1
  %93 = bitcast i32** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast i32* %88 to i8*
  tail call void @_ZdlPv(i8* %94) #11
  br label %95

95:                                               ; preds = %90, %84
  %96 = icmp eq %"struct.ots::OpenTypeFVAR::InstanceRecord"* %86, %82
  br i1 %96, label %97, label %84

97:                                               ; preds = %95, %77
  %98 = icmp eq i64 %80, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %100) #11
  br label %101

101:                                              ; preds = %97, %99
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #8

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
