; ModuleID = '../../media/filters/stream_parser_factory.cc'
source_filename = "../../media/filters/stream_parser_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::SupportedTypeInfo" = type { i8*, %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)*, %"struct.media::CodecInfo"** }
%"class.media::StreamParser" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.media::MediaLog" = type { i32 (...)**, %class.scoped_refptr }
%class.scoped_refptr = type { %"struct.media::MediaLog::ParentLogRecord"* }
%"struct.media::MediaLog::ParentLogRecord" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i32, %"class.base::Lock", %"class.media::MediaLog"* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.media::CodecInfo" = type { i8*, i32, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)*, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.media::NullMediaLog" = type { %"class.media::MediaLog" }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { i32*, i32*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i32* }
%"class.media::LogHelper" = type { i32, %"class.media::MediaLog"*, %"class.std::__1::basic_stringstream" }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.22", [4 x i8] }>
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.media::AudioDecoderConfig" = type <{ i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.30", i32, i32, i32, i32, %"class.base::TimeDelta", i32, i8, [3 x i8] }>
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i8*, i8*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.media::WebCodecsEncodedChunkStreamParser" = type { %"class.media::StreamParser", i32, %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.43", %"class.base::OnceCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.52", %"class.base::RepeatingCallback.53", %"class.base::RepeatingCallback.53", %"class.media::MediaLog"* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.media::AudioDecoderConfig"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.media::VideoDecoderConfig"* }
%"class.media::VideoDecoderConfig" = type <{ i32, i32, i32, i32, %"struct.media::VideoTransformation", %"class.gfx::Size", %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.30", i32, %"class.media::VideoColorSpace", %"class.absl::optional", i8, [3 x i8] }>
%"struct.media::VideoTransformation" = type <{ i32, i8, [3 x i8] }>
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.media::VideoColorSpace" = type { i8, i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.46 }
%union.anon.46 = type { %"struct.gfx::HDRMetadata" }
%"struct.gfx::HDRMetadata" = type { %"struct.gfx::MasteringMetadata", i32, i32 }
%"struct.gfx::MasteringMetadata" = type { %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.51", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.52" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.53" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.media::MediaLogRecord" = type { i32, i32, %"class.base::DictionaryValue", %"class.base::TimeTicks" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.66" }
%"union.absl::variant_internal::DestructibleUnionImpl.66" = type { %"union.absl::variant_internal::DestructibleUnionImpl.67" }
%"union.absl::variant_internal::DestructibleUnionImpl.67" = type { %"union.absl::variant_internal::DestructibleUnionImpl.68" }
%"union.absl::variant_internal::DestructibleUnionImpl.68" = type { %"union.absl::variant_internal::DestructibleUnionImpl.69" }
%"union.absl::variant_internal::DestructibleUnionImpl.69" = type { %"class.std::__1::basic_string" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.media::WebMStreamParser" = type { %"class.media::StreamParser", i32, %"class.base::OnceCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.52", i8, %"class.base::RepeatingCallback.91", %"class.base::RepeatingCallback.53", %"class.base::RepeatingCallback.53", %"class.media::MediaLog"*, i8, %"class.std::__1::unique_ptr.92", %"class.media::ByteQueue" }
%"class.base::RepeatingCallback.91" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.media::WebMClusterParser"* }
%"class.media::WebMClusterParser" = type opaque
%"class.media::ByteQueue" = type { i64, i64, i32, %"class.std::__1::unique_ptr.98" }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.media::MPEG1AudioStreamParser" = type { %"class.media::MPEGAudioStreamParserBase", i64 }
%"class.media::MPEGAudioStreamParserBase" = type { %"class.media::StreamParser", i32, %"class.base::OnceCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.52", %"class.base::RepeatingCallback.53", %"class.base::RepeatingCallback.53", %"class.media::MediaLog"*, %"class.media::ByteQueue", %"class.media::AudioDecoderConfig", %"class.std::__1::unique_ptr.103", i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.media::AudioTimestampHelper"* }
%"class.media::AudioTimestampHelper" = type { double, %"class.base::TimeDelta", i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { i64 }
%"class.media::mp4::MP4StreamParser" = type { %"class.media::StreamParser", i32, %"class.base::OnceCallback", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.52", %"class.base::RepeatingCallback.91", %"class.base::RepeatingCallback.53", %"class.base::RepeatingCallback.53", %"class.media::MediaLog"*, %"class.media::OffsetByteQueue", i64, i64, i64, %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.184", i8, i8, %"class.std::__1::set.198", %"class.std::__1::set.198", %"class.std::__1::set", i8, i8, i32, i32, i32 }
%"class.media::OffsetByteQueue" = type { %"class.media::ByteQueue", i8*, i32, i64 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.media::mp4::Movie"* }
%"struct.media::mp4::Movie" = type { %"struct.media::mp4::Box", i8, %"struct.media::mp4::MovieHeader", %"struct.media::mp4::MovieExtends", %"class.std::__1::vector.127", %"class.std::__1::vector.174" }
%"struct.media::mp4::Box" = type { i32 (...)** }
%"struct.media::mp4::MovieHeader" = type { %"struct.media::mp4::Box", i8, i64, i64, i32, i64, i32, i16, [9 x i32], i32 }
%"struct.media::mp4::MovieExtends" = type { %"struct.media::mp4::Box", %"struct.media::mp4::MovieExtendsHeader", %"class.std::__1::vector.120" }
%"struct.media::mp4::MovieExtendsHeader" = type { %"struct.media::mp4::Box", i64 }
%"class.std::__1::vector.120" = type { %"class.std::__1::__vector_base.121" }
%"class.std::__1::__vector_base.121" = type { %"struct.media::mp4::TrackExtends"*, %"struct.media::mp4::TrackExtends"*, %"class.std::__1::__compressed_pair.122" }
%"struct.media::mp4::TrackExtends" = type <{ %"struct.media::mp4::Box", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.media::mp4::TrackExtends"* }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"struct.media::mp4::Track"*, %"struct.media::mp4::Track"*, %"class.std::__1::__compressed_pair.169" }
%"struct.media::mp4::Track" = type { %"struct.media::mp4::Box", %"struct.media::mp4::TrackHeader", %"struct.media::mp4::Media", %"struct.media::mp4::Edit" }
%"struct.media::mp4::TrackHeader" = type <{ %"struct.media::mp4::Box", i64, i64, i32, [4 x i8], i64, i16, i16, i16, [2 x i8], [9 x i32], i32, i32, [4 x i8] }>
%"struct.media::mp4::Media" = type { %"struct.media::mp4::Box", %"struct.media::mp4::MediaHeader", %"struct.media::mp4::HandlerReference", %"struct.media::mp4::MediaInformation" }
%"struct.media::mp4::MediaHeader" = type <{ %"struct.media::mp4::Box", i64, i64, i32, [4 x i8], i64, i16, [6 x i8] }>
%"struct.media::mp4::HandlerReference" = type { %"struct.media::mp4::Box", i32, %"class.std::__1::basic_string" }
%"struct.media::mp4::MediaInformation" = type { %"struct.media::mp4::Box", %"struct.media::mp4::SampleTable" }
%"struct.media::mp4::SampleTable" = type { %"struct.media::mp4::Box", %"struct.media::mp4::SampleDescription", %"struct.media::mp4::SampleGroupDescription" }
%"struct.media::mp4::SampleDescription" = type { %"struct.media::mp4::Box", i32, %"class.std::__1::vector.129", %"class.std::__1::vector.148" }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.media::mp4::VideoSampleEntry"*, %"struct.media::mp4::VideoSampleEntry"*, %"class.std::__1::__compressed_pair.143" }
%"struct.media::mp4::VideoSampleEntry" = type { %"struct.media::mp4::Box", i32, i16, i16, i16, %"struct.media::mp4::PixelAspectRatioBox", %"struct.media::mp4::ProtectionSchemeInfo", i32, i32, i32, %"class.media::VideoColorSpace", %"class.absl::optional.131", %"class.absl::optional.136", %class.scoped_refptr.141 }
%"struct.media::mp4::PixelAspectRatioBox" = type { %"struct.media::mp4::Box", i32, i32 }
%"struct.media::mp4::ProtectionSchemeInfo" = type { %"struct.media::mp4::Box", %"struct.media::mp4::OriginalFormat", %"struct.media::mp4::SchemeType", %"struct.media::mp4::SchemeInfo" }
%"struct.media::mp4::OriginalFormat" = type <{ %"struct.media::mp4::Box", i32, [4 x i8] }>
%"struct.media::mp4::SchemeType" = type { %"struct.media::mp4::Box", i32, i32 }
%"struct.media::mp4::SchemeInfo" = type { %"struct.media::mp4::Box", %"struct.media::mp4::TrackEncryption" }
%"struct.media::mp4::TrackEncryption" = type <{ %"struct.media::mp4::Box", i8, i8, [6 x i8], %"class.std::__1::vector.30", i8, i8, i8, [16 x i8], [5 x i8] }>
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"struct.media::mp4::MasteringDisplayColorVolume" }
%"struct.media::mp4::MasteringDisplayColorVolume" = type { %"struct.media::mp4::Box", float, float, float, float, float, float, float, float, float, float }
%"class.absl::optional.136" = type { %"class.absl::optional_internal::optional_data.137" }
%"class.absl::optional_internal::optional_data.137" = type { %"class.absl::optional_internal::optional_data_base.138" }
%"class.absl::optional_internal::optional_data_base.138" = type { %"class.absl::optional_internal::optional_data_dtor_base.139" }
%"class.absl::optional_internal::optional_data_dtor_base.139" = type { i8, [7 x i8], %union.anon.140 }
%union.anon.140 = type { %"struct.media::mp4::ContentLightLevelInformation" }
%"struct.media::mp4::ContentLightLevelInformation" = type <{ %"struct.media::mp4::Box", i16, i16, [4 x i8] }>
%class.scoped_refptr.141 = type { %"class.media::mp4::BitstreamConverter"* }
%"class.media::mp4::BitstreamConverter" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142", [4 x i8] }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.media::mp4::VideoSampleEntry"* }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"struct.media::mp4::AudioSampleEntry"*, %"struct.media::mp4::AudioSampleEntry"*, %"class.std::__1::__compressed_pair.150" }
%"struct.media::mp4::AudioSampleEntry" = type { %"struct.media::mp4::Box", i32, i16, i16, i16, i32, %"struct.media::mp4::ProtectionSchemeInfo", %"struct.media::mp4::ElementaryStreamDescriptor", %"struct.media::mp4::FlacSpecificBox", %"struct.media::mp4::OpusSpecificBox" }
%"struct.media::mp4::ElementaryStreamDescriptor" = type <{ %"struct.media::mp4::Box", i8, [7 x i8] }>
%"struct.media::mp4::FlacSpecificBox" = type <{ %"struct.media::mp4::Box", %"class.std::__1::vector.30", i32, i8, i8, [2 x i8] }>
%"struct.media::mp4::OpusSpecificBox" = type { %"struct.media::mp4::Box", %"class.std::__1::vector.30", %"class.base::TimeDelta", i16, i8, i32 }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.media::mp4::AudioSampleEntry"* }
%"struct.media::mp4::SampleGroupDescription" = type { %"struct.media::mp4::Box", i32, %"class.std::__1::vector.155" }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.media::mp4::CencSampleEncryptionInfoEntry"*, %"struct.media::mp4::CencSampleEncryptionInfoEntry"*, %"class.std::__1::__compressed_pair.157" }
%"struct.media::mp4::CencSampleEncryptionInfoEntry" = type <{ i8, i8, [6 x i8], %"class.std::__1::vector.30", i8, i8, i8, [16 x i8], [5 x i8] }>
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.media::mp4::CencSampleEncryptionInfoEntry"* }
%"struct.media::mp4::Edit" = type { %"struct.media::mp4::Box", %"struct.media::mp4::EditList" }
%"struct.media::mp4::EditList" = type { %"struct.media::mp4::Box", %"class.std::__1::vector.162" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.media::mp4::EditListEntry"*, %"struct.media::mp4::EditListEntry"*, %"class.std::__1::__compressed_pair.164" }
%"struct.media::mp4::EditListEntry" = type { i64, i64, i16, i16 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.media::mp4::EditListEntry"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.media::mp4::Track"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"struct.media::mp4::ProtectionSystemSpecificHeader"*, %"class.std::__1::__compressed_pair.176" }
%"struct.media::mp4::ProtectionSystemSpecificHeader" = type { %"struct.media::mp4::Box", %"class.std::__1::vector.30" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.media::mp4::ProtectionSystemSpecificHeader"* }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.media::mp4::TrackRunIterator"* }
%"class.media::mp4::TrackRunIterator" = type { %"struct.media::mp4::Movie"*, %"class.media::MediaLog"*, %"class.std::__1::vector.187", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter.194", i64, i64, i64 }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.media::mp4::TrackRunInfo"*, %"struct.media::mp4::TrackRunInfo"*, %"class.std::__1::__compressed_pair.189" }
%"struct.media::mp4::TrackRunInfo" = type opaque
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.media::mp4::TrackRunInfo"* }
%"class.std::__1::__wrap_iter" = type { %"struct.media::mp4::TrackRunInfo"* }
%"class.std::__1::__wrap_iter.194" = type { %"struct.media::mp4::SampleInfo"* }
%"struct.media::mp4::SampleInfo" = type opaque
%"class.std::__1::set.198" = type { %"class.std::__1::__tree.199" }
%"class.std::__1::__tree.199" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.200", %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN5media12NullMediaLogD0Ev = comdat any

$_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN5media12NullMediaLogE = comdat any

@.str = private unnamed_addr constant [21 x i8] c"Media.MSE.AudioCodec\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Media.MSE.VideoCodec\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"video/mp4\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Media.MSE.VideoCodec.MP4\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"video/webm\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Media.MSE.VideoCodec.WebM\00", align 1
@_ZTVN5media12NullMediaLogE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::MediaLog"*)* @_ZN5media8MediaLogD2Ev to i8*), i8* bitcast (void (%"class.media::NullMediaLog"*)* @_ZN5media12NullMediaLogD0Ev to i8*), i8* bitcast (%"class.media::MediaLog"* (%"class.media::MediaLog"*)* @_ZN5media8MediaLog5CloneEv to i8*), i8* bitcast (void (%"class.media::NullMediaLog"*, %"struct.media::MediaLogRecord"*)* @_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE to i8*), i8* bitcast (void (%"class.media::MediaLog"*)* @_ZN5media8MediaLog31OnWebMediaPlayerDestroyedLockedEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* @_ZN5media8MediaLog21GetErrorMessageLockedEv to i8*)] }, comdat, align 8
@_ZN5mediaL18kSupportedTypeInfoE = internal unnamed_addr constant [5 x %"struct.media::SupportedTypeInfo"] [%"struct.media::SupportedTypeInfo" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* @_ZN5mediaL15BuildWebMParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE, %"struct.media::CodecInfo"** getelementptr inbounds ([7 x %"struct.media::CodecInfo"*], [7 x %"struct.media::CodecInfo"*]* @_ZN5mediaL16kVideoWebMCodecsE, i32 0, i32 0) }, %"struct.media::SupportedTypeInfo" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* @_ZN5mediaL15BuildWebMParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE, %"struct.media::CodecInfo"** getelementptr inbounds ([3 x %"struct.media::CodecInfo"*], [3 x %"struct.media::CodecInfo"*]* @_ZN5mediaL16kAudioWebMCodecsE, i32 0, i32 0) }, %"struct.media::SupportedTypeInfo" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i32 0, i32 0), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* @_ZN5mediaL14BuildMP3ParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE, %"struct.media::CodecInfo"** getelementptr inbounds ([2 x %"struct.media::CodecInfo"*], [2 x %"struct.media::CodecInfo"*]* @_ZN5mediaL15kAudioMP3CodecsE, i32 0, i32 0) }, %"struct.media::SupportedTypeInfo" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* @_ZN5mediaL14BuildMP4ParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE, %"struct.media::CodecInfo"** getelementptr inbounds ([5 x %"struct.media::CodecInfo"*], [5 x %"struct.media::CodecInfo"*]* @_ZN5mediaL15kVideoMP4CodecsE, i32 0, i32 0) }, %"struct.media::SupportedTypeInfo" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i32 0, i32 0), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* @_ZN5mediaL14BuildMP4ParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE, %"struct.media::CodecInfo"** getelementptr inbounds ([3 x %"struct.media::CodecInfo"*], [3 x %"struct.media::CodecInfo"*]* @_ZN5mediaL15kAudioMP4CodecsE, i32 0, i32 0) }], align 16
@.str.6 = private unnamed_addr constant [42 x i8] c"A codecs parameter must be provided for '\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"' to determine definitive support proactively.\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Codec '\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"' is not supported for '\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@_ZN5mediaL16kVideoWebMCodecsE = internal constant [7 x %"struct.media::CodecInfo"*] [%"struct.media::CodecInfo"* @_ZN5mediaL13kVP8CodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL19kLegacyVP9CodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL13kVP9CodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL16kVorbisCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL14kOpusCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL13kAV1CodecInfoE, %"struct.media::CodecInfo"* null], align 16
@.str.11 = private unnamed_addr constant [11 x i8] c"audio/webm\00", align 1
@_ZN5mediaL16kAudioWebMCodecsE = internal constant [3 x %"struct.media::CodecInfo"*] [%"struct.media::CodecInfo"* @_ZN5mediaL16kVorbisCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL14kOpusCodecInfoE, %"struct.media::CodecInfo"* null], align 16
@.str.12 = private unnamed_addr constant [11 x i8] c"audio/mpeg\00", align 1
@_ZN5mediaL15kAudioMP3CodecsE = internal constant [2 x %"struct.media::CodecInfo"*] [%"struct.media::CodecInfo"* @_ZN5mediaL13kMP3CodecInfoE, %"struct.media::CodecInfo"* null], align 16
@_ZN5mediaL15kVideoMP4CodecsE = internal constant [5 x %"struct.media::CodecInfo"*] [%"struct.media::CodecInfo"* @_ZN5mediaL19kMPEG4FLACCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL14kOpusCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL19kMPEG4VP09CodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL13kAV1CodecInfoE, %"struct.media::CodecInfo"* null], align 16
@.str.13 = private unnamed_addr constant [10 x i8] c"audio/mp4\00", align 1
@_ZN5mediaL15kAudioMP4CodecsE = internal constant [3 x %"struct.media::CodecInfo"*] [%"struct.media::CodecInfo"* @_ZN5mediaL19kMPEG4FLACCodecInfoE, %"struct.media::CodecInfo"* @_ZN5mediaL14kOpusCodecInfoE, %"struct.media::CodecInfo"* null], align 16
@_ZN5mediaL13kVP8CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i32 0, i32 0), i32 2, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 1 }, align 8
@_ZN5mediaL19kLegacyVP9CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i32 0, i32 0), i32 2, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 2 }, align 8
@_ZN5mediaL13kVP9CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 2, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 2 }, align 8
@_ZN5mediaL16kVorbisCodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i32 1, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 3 }, align 8
@_ZN5mediaL14kOpusCodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i32 0, i32 0), i32 1, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 9 }, align 8
@_ZN5mediaL13kAV1CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i32 2, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 14 }, align 8
@.str.14 = private unnamed_addr constant [4 x i8] c"vp8\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"vp9\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"vp09.*\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"vorbis\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"opus\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"av01.*\00", align 1
@_ZN5mediaL13kMP3CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* null, i32 1, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 8 }, align 8
@_ZN5mediaL19kMPEG4FLACCodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 1, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 13 }, align 8
@.str.20 = private unnamed_addr constant [5 x i8] c"flac\00", align 1
@_ZN5mediaL19kMPEG4VP09CodecInfoE = internal constant %"struct.media::CodecInfo" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 2, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* null, i32 2 }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media19StreamParserFactory15IsTypeSupportedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.media::NullMediaLog", align 8
  %4 = bitcast %"class.media::NullMediaLog"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #9
  %5 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %3, i64 0, i32 0
  %7 = bitcast %"class.media::NullMediaLog"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZN5media8MediaLogC2Ev(%"class.media::MediaLog"* nonnull %6) #9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5media12NullMediaLogE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = call fastcc i32 @_ZN5mediaL18CheckTypeAndCodecsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS_8MediaLogEPPFPNS_12StreamParserESD_SF_EPNS9_INS_9CodecInfo12HistogramTagENS4_ISM_EEEESP_(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.media::MediaLog"* nonnull %6, %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** null, %"class.std::__1::vector.7"* null, %"class.std::__1::vector.7"* null)
  call void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #9
  ret i32 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5mediaL18CheckTypeAndCodecsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS_8MediaLogEPPFPNS_12StreamParserESD_SF_EPNS9_INS_9CodecInfo12HistogramTagENS4_ISM_EEEESP_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.media::MediaLog"*, %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)**, %"class.std::__1::vector.7"*, %"class.std::__1::vector.7"*) unnamed_addr #0 {
  %7 = alloca %"class.media::LogHelper", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.media::LogHelper", align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  %15 = load i64, i64* %12, align 8
  %16 = zext i8 %13 to i64
  %17 = select i1 %14, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 10
  br i1 %18, label %19, label %466

19:                                               ; preds = %6
  %20 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10) #9
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %19
  %23 = load i8, i8* %11, align 1
  %24 = load i64, i64* %12, align 8
  %25 = zext i8 %23 to i64
  br label %466

26:                                               ; preds = %517, %503, %489, %475, %19
  %27 = phi i64 [ 0, %19 ], [ 1, %475 ], [ 2, %489 ], [ 3, %503 ], [ 4, %517 ]
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %29 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = icmp eq %"class.std::__1::basic_string"* %29, %31
  br i1 %32, label %62, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.std::__1::basic_string"** %30 to i64*
  %35 = bitcast %"class.std::__1::vector"* %1 to i64*
  %36 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = getelementptr inbounds [5 x %"struct.media::SupportedTypeInfo"], [5 x %"struct.media::SupportedTypeInfo"]* @_ZN5mediaL18kSupportedTypeInfoE, i64 0, i64 %27, i32 2
  %40 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = icmp eq %"class.std::__1::vector.7"* %5, null
  %43 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast i32** %43 to i64*
  %46 = bitcast %"class.std::__1::vector.7"* %5 to i64*
  %47 = bitcast i32** %44 to i64*
  %48 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 0
  %49 = icmp eq %"class.std::__1::vector.7"* %4, null
  %50 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast i32** %50 to i64*
  %53 = bitcast %"class.std::__1::vector.7"* %4 to i64*
  %54 = bitcast i32** %51 to i64*
  %55 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 0
  %56 = bitcast %"class.media::LogHelper"* %9 to i8*
  %57 = getelementptr inbounds %"class.media::LogHelper", %"class.media::LogHelper"* %9, i64 0, i32 2, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_ostream.base"* %57 to %"class.std::__1::basic_ostream"*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %248

62:                                               ; preds = %26
  %63 = getelementptr inbounds [5 x %"struct.media::SupportedTypeInfo"], [5 x %"struct.media::SupportedTypeInfo"]* @_ZN5mediaL18kSupportedTypeInfoE, i64 0, i64 %27, i32 2
  %64 = load %"struct.media::CodecInfo"**, %"struct.media::CodecInfo"*** %63, align 8
  %65 = load %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %64, align 8
  %66 = icmp eq %"struct.media::CodecInfo"* %65, null
  br i1 %66, label %225, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %65, i64 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %71, label %225

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %65, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  switch i32 %73, label %225 [
    i32 1, label %74
    i32 2, label %146
  ]

74:                                               ; preds = %71
  %75 = icmp eq %"class.std::__1::vector.7"* %4, null
  br i1 %75, label %218, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %65, i64 0, i32 3
  %78 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %79, %81
  %83 = ptrtoint i32* %81 to i64
  br i1 %82, label %89, label %84

84:                                               ; preds = %76
  %85 = load i32, i32* %77, align 4
  store i32 %85, i32* %79, align 4
  %86 = getelementptr inbounds i32, i32* %79, i64 1
  %87 = ptrtoint i32* %86 to i64
  %88 = bitcast i32** %78 to i64*
  store i64 %87, i64* %88, align 8
  br label %218

89:                                               ; preds = %76
  %90 = ptrtoint i32* %79 to i64
  %91 = bitcast i32** %78 to i64*
  %92 = bitcast %"class.std::__1::vector.7"* %4 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %90, %93
  %95 = ashr exact i64 %94, 2
  %96 = add nsw i64 %95, 1
  %97 = icmp ugt i64 %96, 4611686018427387903
  br i1 %97, label %98, label %100

98:                                               ; preds = %89
  %99 = bitcast %"class.std::__1::vector.7"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %99) #10
  unreachable

100:                                              ; preds = %89
  %101 = bitcast i32** %80 to i64*
  %102 = sub i64 %83, %93
  %103 = ashr exact i64 %102, 2
  %104 = icmp ult i64 %103, 2305843009213693951
  br i1 %104, label %105, label %113

105:                                              ; preds = %100
  %106 = ashr exact i64 %102, 1
  %107 = icmp ult i64 %106, %96
  %108 = select i1 %107, i64 %96, i64 %106
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %118, label %110

110:                                              ; preds = %105
  %111 = icmp ugt i64 %108, 4611686018427387903
  br i1 %111, label %112, label %113

112:                                              ; preds = %110
  tail call void @abort() #10
  unreachable

113:                                              ; preds = %110, %100
  %114 = phi i64 [ %108, %110 ], [ 4611686018427387903, %100 ]
  %115 = shl i64 %114, 2
  %116 = tail call i8* @_Znwm(i64 %115) #11
  %117 = bitcast i8* %116 to i32*
  br label %118

118:                                              ; preds = %113, %105
  %119 = phi i64 [ %114, %113 ], [ 0, %105 ]
  %120 = phi i32* [ %117, %113 ], [ null, %105 ]
  %121 = getelementptr inbounds i32, i32* %120, i64 %95
  %122 = getelementptr inbounds i32, i32* %120, i64 %119
  %123 = ptrtoint i32* %122 to i64
  %124 = load i32, i32* %77, align 4
  store i32 %124, i32* %121, align 4
  %125 = getelementptr inbounds i32, i32* %121, i64 1
  %126 = ptrtoint i32* %125 to i64
  %127 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = load i64, i64* %91, align 8
  %130 = ptrtoint i32* %128 to i64
  %131 = sub i64 %129, %130
  %132 = ashr exact i64 %131, 2
  %133 = sub nsw i64 0, %132
  %134 = getelementptr inbounds i32, i32* %121, i64 %133
  %135 = ptrtoint i32* %134 to i64
  %136 = icmp sgt i64 %131, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %118
  %138 = bitcast i32* %134 to i8*
  %139 = bitcast i32* %128 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 %131, i1 false) #9
  %140 = load i32*, i32** %127, align 8
  br label %141

141:                                              ; preds = %137, %118
  %142 = phi i32* [ %128, %118 ], [ %140, %137 ]
  store i64 %135, i64* %92, align 8
  store i64 %126, i64* %91, align 8
  store i64 %123, i64* %101, align 8
  %143 = icmp eq i32* %142, null
  br i1 %143, label %218, label %144

144:                                              ; preds = %141
  %145 = bitcast i32* %142 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  br label %218

146:                                              ; preds = %71
  %147 = icmp eq %"class.std::__1::vector.7"* %5, null
  br i1 %147, label %218, label %148

148:                                              ; preds = %146
  %149 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %65, i64 0, i32 3
  %150 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 1
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp eq i32* %151, %153
  %155 = ptrtoint i32* %153 to i64
  br i1 %154, label %161, label %156

156:                                              ; preds = %148
  %157 = load i32, i32* %149, align 4
  store i32 %157, i32* %151, align 4
  %158 = getelementptr inbounds i32, i32* %151, i64 1
  %159 = ptrtoint i32* %158 to i64
  %160 = bitcast i32** %150 to i64*
  store i64 %159, i64* %160, align 8
  br label %218

161:                                              ; preds = %148
  %162 = ptrtoint i32* %151 to i64
  %163 = bitcast i32** %150 to i64*
  %164 = bitcast %"class.std::__1::vector.7"* %5 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = sub i64 %162, %165
  %167 = ashr exact i64 %166, 2
  %168 = add nsw i64 %167, 1
  %169 = icmp ugt i64 %168, 4611686018427387903
  br i1 %169, label %170, label %172

170:                                              ; preds = %161
  %171 = bitcast %"class.std::__1::vector.7"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %171) #10
  unreachable

172:                                              ; preds = %161
  %173 = bitcast i32** %152 to i64*
  %174 = sub i64 %155, %165
  %175 = ashr exact i64 %174, 2
  %176 = icmp ult i64 %175, 2305843009213693951
  br i1 %176, label %177, label %185

177:                                              ; preds = %172
  %178 = ashr exact i64 %174, 1
  %179 = icmp ult i64 %178, %168
  %180 = select i1 %179, i64 %168, i64 %178
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %190, label %182

182:                                              ; preds = %177
  %183 = icmp ugt i64 %180, 4611686018427387903
  br i1 %183, label %184, label %185

184:                                              ; preds = %182
  tail call void @abort() #10
  unreachable

185:                                              ; preds = %182, %172
  %186 = phi i64 [ %180, %182 ], [ 4611686018427387903, %172 ]
  %187 = shl i64 %186, 2
  %188 = tail call i8* @_Znwm(i64 %187) #11
  %189 = bitcast i8* %188 to i32*
  br label %190

190:                                              ; preds = %185, %177
  %191 = phi i64 [ %186, %185 ], [ 0, %177 ]
  %192 = phi i32* [ %189, %185 ], [ null, %177 ]
  %193 = getelementptr inbounds i32, i32* %192, i64 %167
  %194 = getelementptr inbounds i32, i32* %192, i64 %191
  %195 = ptrtoint i32* %194 to i64
  %196 = load i32, i32* %149, align 4
  store i32 %196, i32* %193, align 4
  %197 = getelementptr inbounds i32, i32* %193, i64 1
  %198 = ptrtoint i32* %197 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = load i64, i64* %163, align 8
  %202 = ptrtoint i32* %200 to i64
  %203 = sub i64 %201, %202
  %204 = ashr exact i64 %203, 2
  %205 = sub nsw i64 0, %204
  %206 = getelementptr inbounds i32, i32* %193, i64 %205
  %207 = ptrtoint i32* %206 to i64
  %208 = icmp sgt i64 %203, 0
  br i1 %208, label %209, label %213

209:                                              ; preds = %190
  %210 = bitcast i32* %206 to i8*
  %211 = bitcast i32* %200 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %211, i64 %203, i1 false) #9
  %212 = load i32*, i32** %199, align 8
  br label %213

213:                                              ; preds = %209, %190
  %214 = phi i32* [ %200, %190 ], [ %212, %209 ]
  store i64 %207, i64* %164, align 8
  store i64 %198, i64* %163, align 8
  store i64 %195, i64* %173, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  tail call void @_ZdlPv(i8* %217) #11
  br label %218

218:                                              ; preds = %74, %146, %84, %141, %144, %156, %213, %216
  %219 = icmp eq %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %3, null
  br i1 %219, label %473, label %220

220:                                              ; preds = %218
  %221 = getelementptr inbounds [5 x %"struct.media::SupportedTypeInfo"], [5 x %"struct.media::SupportedTypeInfo"]* @_ZN5mediaL18kSupportedTypeInfoE, i64 0, i64 %27, i32 1
  %222 = bitcast %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %3 to i64*
  store i64 %223, i64* %224, align 8
  br label %473

225:                                              ; preds = %71, %67, %62
  %226 = bitcast %"class.media::LogHelper"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %226) #9
  call void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"* nonnull %7, i32 3, %"class.media::MediaLog"* %2) #9
  %227 = getelementptr inbounds %"class.media::LogHelper", %"class.media::LogHelper"* %7, i64 0, i32 2, i32 0, i32 1
  %228 = bitcast %"class.std::__1::basic_ostream.base"* %227 to %"class.std::__1::basic_ostream"*
  %229 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %228, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i64 41) #9
  %230 = load i8, i8* %11, align 1
  %231 = icmp slt i8 %230, 0
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load i8*, i8** %232, align 8
  %234 = load i64, i64* %12, align 8
  %235 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %236 = zext i8 %230 to i64
  %237 = select i1 %231, i8* %233, i8* %235
  %238 = select i1 %231, i64 %234, i64 %236
  %239 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %229, i8* %237, i64 %238) #9
  %240 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %239, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0), i64 46) #9
  call void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %226) #9
  br label %473

241:                                              ; preds = %456
  %242 = load i64, i64* %34, align 8
  %243 = load i64, i64* %35, align 8
  %244 = sub i64 %242, %243
  %245 = sdiv exact i64 %244, 24
  %246 = icmp ult i64 %458, %245
  %247 = inttoptr i64 %243 to %"class.std::__1::basic_string"*
  br i1 %246, label %248, label %459

248:                                              ; preds = %33, %241
  %249 = phi %"class.std::__1::basic_string"* [ %29, %33 ], [ %247, %241 ]
  %250 = phi i64 [ 0, %33 ], [ %458, %241 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %251 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 %250
  %252 = bitcast %"class.std::__1::basic_string"* %251 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  %254 = load i8, i8* %253, align 1
  %255 = icmp slt i8 %254, 0
  br i1 %255, label %258, label %256

256:                                              ; preds = %248
  %257 = bitcast %"class.std::__1::basic_string"* %251 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %257, i64 24, i1 false) #9
  br label %263

258:                                              ; preds = %248
  %259 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i8*, i8** %259, align 8
  %261 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %249, i64 %250, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %262 = load i64, i64* %261, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %8, i8* %260, i64 %262) #9
  br label %263

263:                                              ; preds = %256, %258
  %264 = load %"struct.media::CodecInfo"**, %"struct.media::CodecInfo"*** %39, align 8
  %265 = load %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %264, align 8
  %266 = icmp eq %"struct.media::CodecInfo"* %265, null
  br i1 %266, label %430, label %267

267:                                              ; preds = %263, %425
  %268 = phi i64 [ %426, %425 ], [ 0, %263 ]
  %269 = phi %"struct.media::CodecInfo"* [ %428, %425 ], [ %265, %263 ]
  %270 = phi %"struct.media::CodecInfo"** [ %427, %425 ], [ %264, %263 ]
  %271 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %269, i64 0, i32 0
  %272 = load i8*, i8** %271, align 8
  %273 = icmp eq i8* %272, null
  br i1 %273, label %430, label %274

274:                                              ; preds = %267
  %275 = load i8, i8* %41, align 1
  %276 = icmp slt i8 %275, 0
  %277 = load i8*, i8** %37, align 8
  %278 = select i1 %276, i8* %277, i8* %36
  %279 = load i64, i64* %38, align 8
  %280 = zext i8 %275 to i64
  %281 = select i1 %276, i64 %279, i64 %280
  %282 = call i64 @strlen(i8* nonnull %272) #9
  %283 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %278, i64 %281, i8* nonnull %272, i64 %282) #9
  br i1 %283, label %284, label %425

284:                                              ; preds = %274
  %285 = load %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %270, align 8
  %286 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %285, i64 0, i32 2
  %287 = load i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)*, i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)** %286, align 8
  %288 = icmp eq i1 (%"class.std::__1::basic_string"*, %"class.media::MediaLog"*)* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %284
  %290 = call zeroext i1 %287(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.media::MediaLog"* %2) #9
  br i1 %290, label %291, label %425

291:                                              ; preds = %289
  %292 = load %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %270, align 8
  br label %293

293:                                              ; preds = %284, %291
  %294 = phi %"struct.media::CodecInfo"* [ %292, %291 ], [ %285, %284 ]
  %295 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %294, i64 0, i32 1
  %296 = load i32, i32* %295, align 8
  switch i32 %296, label %430 [
    i32 1, label %297
    i32 2, label %361
  ]

297:                                              ; preds = %293
  br i1 %49, label %450, label %298

298:                                              ; preds = %297
  %299 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %294, i64 0, i32 3
  %300 = load i32*, i32** %50, align 8
  %301 = load i32*, i32** %51, align 8
  %302 = icmp eq i32* %300, %301
  %303 = ptrtoint i32* %301 to i64
  br i1 %302, label %308, label %304

304:                                              ; preds = %298
  %305 = load i32, i32* %299, align 4
  store i32 %305, i32* %300, align 4
  %306 = getelementptr inbounds i32, i32* %300, i64 1
  %307 = ptrtoint i32* %306 to i64
  store i64 %307, i64* %52, align 8
  br label %450

308:                                              ; preds = %298
  %309 = ptrtoint i32* %300 to i64
  %310 = load i64, i64* %53, align 8
  %311 = sub i64 %309, %310
  %312 = ashr exact i64 %311, 2
  %313 = add nsw i64 %312, 1
  %314 = icmp ugt i64 %313, 4611686018427387903
  br i1 %314, label %315, label %317

315:                                              ; preds = %308
  %316 = bitcast %"class.std::__1::vector.7"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %316) #10
  unreachable

317:                                              ; preds = %308
  %318 = sub i64 %303, %310
  %319 = ashr exact i64 %318, 2
  %320 = icmp ult i64 %319, 2305843009213693951
  br i1 %320, label %321, label %329

321:                                              ; preds = %317
  %322 = ashr exact i64 %318, 1
  %323 = icmp ult i64 %322, %313
  %324 = select i1 %323, i64 %313, i64 %322
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %334, label %326

326:                                              ; preds = %321
  %327 = icmp ugt i64 %324, 4611686018427387903
  br i1 %327, label %328, label %329

328:                                              ; preds = %326
  call void @abort() #10
  unreachable

329:                                              ; preds = %326, %317
  %330 = phi i64 [ %324, %326 ], [ 4611686018427387903, %317 ]
  %331 = shl i64 %330, 2
  %332 = call i8* @_Znwm(i64 %331) #11
  %333 = bitcast i8* %332 to i32*
  br label %334

334:                                              ; preds = %329, %321
  %335 = phi i64 [ %330, %329 ], [ 0, %321 ]
  %336 = phi i32* [ %333, %329 ], [ null, %321 ]
  %337 = getelementptr inbounds i32, i32* %336, i64 %312
  %338 = getelementptr inbounds i32, i32* %336, i64 %335
  %339 = ptrtoint i32* %338 to i64
  %340 = load i32, i32* %299, align 4
  store i32 %340, i32* %337, align 4
  %341 = getelementptr inbounds i32, i32* %337, i64 1
  %342 = ptrtoint i32* %341 to i64
  %343 = load i32*, i32** %55, align 8
  %344 = load i64, i64* %52, align 8
  %345 = ptrtoint i32* %343 to i64
  %346 = sub i64 %344, %345
  %347 = ashr exact i64 %346, 2
  %348 = sub nsw i64 0, %347
  %349 = getelementptr inbounds i32, i32* %337, i64 %348
  %350 = ptrtoint i32* %349 to i64
  %351 = icmp sgt i64 %346, 0
  br i1 %351, label %352, label %356

352:                                              ; preds = %334
  %353 = bitcast i32* %349 to i8*
  %354 = bitcast i32* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %353, i8* align 4 %354, i64 %346, i1 false) #9
  %355 = load i32*, i32** %55, align 8
  br label %356

356:                                              ; preds = %352, %334
  %357 = phi i32* [ %343, %334 ], [ %355, %352 ]
  store i64 %350, i64* %53, align 8
  store i64 %342, i64* %52, align 8
  store i64 %339, i64* %54, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %450, label %359

359:                                              ; preds = %356
  %360 = bitcast i32* %357 to i8*
  call void @_ZdlPv(i8* %360) #11
  br label %450

361:                                              ; preds = %293
  br i1 %42, label %450, label %362

362:                                              ; preds = %361
  %363 = getelementptr inbounds %"struct.media::CodecInfo", %"struct.media::CodecInfo"* %294, i64 0, i32 3
  %364 = load i32*, i32** %43, align 8
  %365 = load i32*, i32** %44, align 8
  %366 = icmp eq i32* %364, %365
  %367 = ptrtoint i32* %365 to i64
  br i1 %366, label %372, label %368

368:                                              ; preds = %362
  %369 = load i32, i32* %363, align 4
  store i32 %369, i32* %364, align 4
  %370 = getelementptr inbounds i32, i32* %364, i64 1
  %371 = ptrtoint i32* %370 to i64
  store i64 %371, i64* %45, align 8
  br label %450

372:                                              ; preds = %362
  %373 = ptrtoint i32* %364 to i64
  %374 = load i64, i64* %46, align 8
  %375 = sub i64 %373, %374
  %376 = ashr exact i64 %375, 2
  %377 = add nsw i64 %376, 1
  %378 = icmp ugt i64 %377, 4611686018427387903
  br i1 %378, label %379, label %381

379:                                              ; preds = %372
  %380 = bitcast %"class.std::__1::vector.7"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %380) #10
  unreachable

381:                                              ; preds = %372
  %382 = sub i64 %367, %374
  %383 = ashr exact i64 %382, 2
  %384 = icmp ult i64 %383, 2305843009213693951
  br i1 %384, label %385, label %393

385:                                              ; preds = %381
  %386 = ashr exact i64 %382, 1
  %387 = icmp ult i64 %386, %377
  %388 = select i1 %387, i64 %377, i64 %386
  %389 = icmp eq i64 %388, 0
  br i1 %389, label %398, label %390

390:                                              ; preds = %385
  %391 = icmp ugt i64 %388, 4611686018427387903
  br i1 %391, label %392, label %393

392:                                              ; preds = %390
  call void @abort() #10
  unreachable

393:                                              ; preds = %390, %381
  %394 = phi i64 [ %388, %390 ], [ 4611686018427387903, %381 ]
  %395 = shl i64 %394, 2
  %396 = call i8* @_Znwm(i64 %395) #11
  %397 = bitcast i8* %396 to i32*
  br label %398

398:                                              ; preds = %393, %385
  %399 = phi i64 [ %394, %393 ], [ 0, %385 ]
  %400 = phi i32* [ %397, %393 ], [ null, %385 ]
  %401 = getelementptr inbounds i32, i32* %400, i64 %376
  %402 = getelementptr inbounds i32, i32* %400, i64 %399
  %403 = ptrtoint i32* %402 to i64
  %404 = load i32, i32* %363, align 4
  store i32 %404, i32* %401, align 4
  %405 = getelementptr inbounds i32, i32* %401, i64 1
  %406 = ptrtoint i32* %405 to i64
  %407 = load i32*, i32** %48, align 8
  %408 = load i64, i64* %45, align 8
  %409 = ptrtoint i32* %407 to i64
  %410 = sub i64 %408, %409
  %411 = ashr exact i64 %410, 2
  %412 = sub nsw i64 0, %411
  %413 = getelementptr inbounds i32, i32* %401, i64 %412
  %414 = ptrtoint i32* %413 to i64
  %415 = icmp sgt i64 %410, 0
  br i1 %415, label %416, label %420

416:                                              ; preds = %398
  %417 = bitcast i32* %413 to i8*
  %418 = bitcast i32* %407 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %417, i8* align 4 %418, i64 %410, i1 false) #9
  %419 = load i32*, i32** %48, align 8
  br label %420

420:                                              ; preds = %416, %398
  %421 = phi i32* [ %407, %398 ], [ %419, %416 ]
  store i64 %414, i64* %46, align 8
  store i64 %406, i64* %45, align 8
  store i64 %403, i64* %47, align 8
  %422 = icmp eq i32* %421, null
  br i1 %422, label %450, label %423

423:                                              ; preds = %420
  %424 = bitcast i32* %421 to i8*
  call void @_ZdlPv(i8* %424) #11
  br label %450

425:                                              ; preds = %289, %274
  %426 = add nuw i64 %268, 1
  %427 = getelementptr inbounds %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %264, i64 %426
  %428 = load %"struct.media::CodecInfo"*, %"struct.media::CodecInfo"** %427, align 8
  %429 = icmp eq %"struct.media::CodecInfo"* %428, null
  br i1 %429, label %430, label %267

430:                                              ; preds = %425, %267, %263, %293
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %56) #9
  call void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"* nonnull %9, i32 3, %"class.media::MediaLog"* %2) #9
  %431 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %58, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #9
  %432 = load i8, i8* %41, align 1
  %433 = icmp slt i8 %432, 0
  %434 = load i8*, i8** %37, align 8
  %435 = load i64, i64* %38, align 8
  %436 = zext i8 %432 to i64
  %437 = select i1 %433, i8* %434, i8* %36
  %438 = select i1 %433, i64 %435, i64 %436
  %439 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %431, i8* %437, i64 %438) #9
  %440 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %439, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i64 24) #9
  %441 = load i8, i8* %11, align 1
  %442 = icmp slt i8 %441, 0
  %443 = load i8*, i8** %59, align 8
  %444 = load i64, i64* %12, align 8
  %445 = zext i8 %441 to i64
  %446 = select i1 %442, i8* %443, i8* %60
  %447 = select i1 %442, i64 %444, i64 %445
  %448 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %440, i8* %446, i64 %447) #9
  %449 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %448, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 1) #9
  call void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %56) #9
  br label %450

450:                                              ; preds = %423, %420, %368, %359, %356, %304, %361, %297, %430
  %451 = phi i32 [ 1, %430 ], [ 0, %297 ], [ 0, %361 ], [ 0, %304 ], [ 0, %356 ], [ 0, %359 ], [ 0, %368 ], [ 0, %420 ], [ 0, %423 ]
  %452 = load i8, i8* %41, align 1
  %453 = icmp slt i8 %452, 0
  br i1 %453, label %454, label %456

454:                                              ; preds = %450
  %455 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %455) #11
  br label %456

456:                                              ; preds = %450, %454
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  %457 = icmp eq i32 %451, 0
  %458 = add nuw i64 %250, 1
  br i1 %457, label %241, label %473

459:                                              ; preds = %241
  %460 = icmp eq %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %3, null
  br i1 %460, label %473, label %461

461:                                              ; preds = %459
  %462 = getelementptr inbounds [5 x %"struct.media::SupportedTypeInfo"], [5 x %"struct.media::SupportedTypeInfo"]* @_ZN5mediaL18kSupportedTypeInfoE, i64 0, i64 %27, i32 1
  %463 = bitcast %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = bitcast %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %3 to i64*
  store i64 %464, i64* %465, align 8
  br label %473

466:                                              ; preds = %22, %6
  %467 = phi i64 [ %25, %22 ], [ %16, %6 ]
  %468 = phi i64 [ %24, %22 ], [ %15, %6 ]
  %469 = phi i8 [ %23, %22 ], [ %13, %6 ]
  %470 = icmp slt i8 %469, 0
  %471 = select i1 %470, i64 %468, i64 %467
  %472 = icmp eq i64 %471, 10
  br i1 %472, label %475, label %482

473:                                              ; preds = %456, %510, %517, %461, %459, %225, %218, %220
  %474 = phi i32 [ 1, %461 ], [ 1, %459 ], [ 1, %220 ], [ 1, %218 ], [ 2, %225 ], [ 0, %517 ], [ 0, %510 ], [ 0, %456 ]
  ret i32 %474

475:                                              ; preds = %466
  %476 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 10) #9
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %26, label %478

478:                                              ; preds = %475
  %479 = load i8, i8* %11, align 1
  %480 = load i64, i64* %12, align 8
  %481 = zext i8 %479 to i64
  br label %482

482:                                              ; preds = %478, %466
  %483 = phi i64 [ %481, %478 ], [ %467, %466 ]
  %484 = phi i64 [ %480, %478 ], [ %468, %466 ]
  %485 = phi i8 [ %479, %478 ], [ %469, %466 ]
  %486 = icmp slt i8 %485, 0
  %487 = select i1 %486, i64 %484, i64 %483
  %488 = icmp eq i64 %487, 10
  br i1 %488, label %489, label %496

489:                                              ; preds = %482
  %490 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i64 10) #9
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %26, label %492

492:                                              ; preds = %489
  %493 = load i8, i8* %11, align 1
  %494 = load i64, i64* %12, align 8
  %495 = zext i8 %493 to i64
  br label %496

496:                                              ; preds = %492, %482
  %497 = phi i64 [ %495, %492 ], [ %483, %482 ]
  %498 = phi i64 [ %494, %492 ], [ %484, %482 ]
  %499 = phi i8 [ %493, %492 ], [ %485, %482 ]
  %500 = icmp slt i8 %499, 0
  %501 = select i1 %500, i64 %498, i64 %497
  %502 = icmp eq i64 %501, 9
  br i1 %502, label %503, label %510

503:                                              ; preds = %496
  %504 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #9
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %26, label %506

506:                                              ; preds = %503
  %507 = load i8, i8* %11, align 1
  %508 = load i64, i64* %12, align 8
  %509 = zext i8 %507 to i64
  br label %510

510:                                              ; preds = %506, %496
  %511 = phi i64 [ %509, %506 ], [ %497, %496 ]
  %512 = phi i64 [ %508, %506 ], [ %498, %496 ]
  %513 = phi i8 [ %507, %506 ], [ %499, %496 ]
  %514 = icmp slt i8 %513, 0
  %515 = select i1 %514, i64 %512, i64 %511
  %516 = icmp eq i64 %515, 9
  br i1 %516, label %517, label %473

517:                                              ; preds = %510
  %518 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i64 9) #9
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %26, label %473
}

; Function Attrs: nounwind
declare void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::StreamParser"* @_ZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.media::MediaLog"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)*, align 8
  %5 = alloca %"class.std::__1::vector.7", align 8
  %6 = alloca %"class.std::__1::vector.7", align 8
  %7 = bitcast %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  store %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)* inttoptr (i64 -6148914691236517206 to %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)*), %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %4, align 8
  %8 = bitcast %"class.std::__1::vector.7"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %11 = bitcast %"class.std::__1::vector.7"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %6, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #9
  %14 = call fastcc i32 @_ZN5mediaL18CheckTypeAndCodecsERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS0_6vectorIS6_NS4_IS6_EEEEPNS_8MediaLogEPPFPNS_12StreamParserESD_SF_EPNS9_INS_9CodecInfo12HistogramTagENS4_ISM_EEEESP_(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::vector"* dereferenceable(24) %1, %"class.media::MediaLog"* %2, %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** nonnull %4, %"class.std::__1::vector.7"* nonnull %5, %"class.std::__1::vector.7"* nonnull %6)
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %137

16:                                               ; preds = %3
  %17 = bitcast i32** %10 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector.7"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %18, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %40, %16
  %23 = bitcast i32** %13 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.7"* %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %24, %26
  br i1 %27, label %55, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  br label %58

32:                                               ; preds = %16, %40
  %33 = phi i64 [ %49, %40 ], [ 0, %16 ]
  %34 = load atomic i64, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %35 = inttoptr i64 %34 to %"class.base::HistogramBase"*
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 1, i32 16, i32 17, i32 1) #9
  %39 = ptrtoint %"class.base::HistogramBase"* %38 to i64
  store atomic i64 %39, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"class.base::HistogramBase"* [ %35, %32 ], [ %38, %37 ]
  %42 = load i32*, i32** %9, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 %33
  %44 = load i32, i32* %43, align 4
  %45 = bitcast %"class.base::HistogramBase"* %41 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  call void %48(%"class.base::HistogramBase"* %41, i32 %44) #9
  %49 = add nuw i64 %33, 1
  %50 = load i64, i64* %17, align 8
  %51 = load i64, i64* %19, align 8
  %52 = sub i64 %50, %51
  %53 = ashr exact i64 %52, 2
  %54 = icmp ult i64 %49, %53
  br i1 %54, label %32, label %22

55:                                               ; preds = %130, %22
  %56 = load %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)*, %"class.media::StreamParser"* (%"class.std::__1::vector"*, %"class.media::MediaLog"*)** %4, align 8
  %57 = call %"class.media::StreamParser"* %56(%"class.std::__1::vector"* dereferenceable(24) %1, %"class.media::MediaLog"* %2) #9
  br label %137

58:                                               ; preds = %28, %130
  %59 = phi i64 [ 0, %28 ], [ %131, %130 ]
  %60 = load atomic i64, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %61 = inttoptr i64 %60 to %"class.base::HistogramBase"*
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 16, i32 17, i32 1) #9
  %65 = ptrtoint %"class.base::HistogramBase"* %64 to i64
  store atomic i64 %65, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %66

66:                                               ; preds = %58, %63
  %67 = phi %"class.base::HistogramBase"* [ %61, %58 ], [ %64, %63 ]
  %68 = load i32*, i32** %12, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 %59
  %70 = load i32, i32* %69, align 4
  %71 = bitcast %"class.base::HistogramBase"* %67 to void (%"class.base::HistogramBase"*, i32)***
  %72 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %72, i64 6
  %74 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %73, align 8
  call void %74(%"class.base::HistogramBase"* %67, i32 %70) #9
  %75 = load i8, i8* %30, align 1
  %76 = icmp slt i8 %75, 0
  %77 = load i64, i64* %31, align 8
  %78 = zext i8 %75 to i64
  %79 = select i1 %76, i64 %77, i64 %78
  %80 = icmp eq i64 %79, 9
  br i1 %80, label %81, label %104

81:                                               ; preds = %66
  %82 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %30, align 1
  %86 = load i64, i64* %31, align 8
  %87 = zext i8 %85 to i64
  br label %104

88:                                               ; preds = %81
  %89 = load atomic i64, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %90 = inttoptr i64 %89 to %"class.base::HistogramBase"*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 16, i32 17, i32 1) #9
  %94 = ptrtoint %"class.base::HistogramBase"* %93 to i64
  store atomic i64 %94, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %95

95:                                               ; preds = %88, %92
  %96 = phi %"class.base::HistogramBase"* [ %90, %88 ], [ %93, %92 ]
  %97 = load i32*, i32** %12, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %59
  %99 = load i32, i32* %98, align 4
  %100 = bitcast %"class.base::HistogramBase"* %96 to void (%"class.base::HistogramBase"*, i32)***
  %101 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %101, i64 6
  %103 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %102, align 8
  call void %103(%"class.base::HistogramBase"* %96, i32 %99) #9
  br label %130

104:                                              ; preds = %84, %66
  %105 = phi i64 [ %87, %84 ], [ %78, %66 ]
  %106 = phi i64 [ %86, %84 ], [ %77, %66 ]
  %107 = phi i8 [ %85, %84 ], [ %75, %66 ]
  %108 = icmp slt i8 %107, 0
  %109 = select i1 %108, i64 %106, i64 %105
  %110 = icmp eq i64 %109, 10
  br i1 %110, label %111, label %130

111:                                              ; preds = %104
  %112 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i64 10) #9
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %130

114:                                              ; preds = %111
  %115 = load atomic i64, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %116 = inttoptr i64 %115 to %"class.base::HistogramBase"*
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  %119 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 16, i32 17, i32 1) #9
  %120 = ptrtoint %"class.base::HistogramBase"* %119 to i64
  store atomic i64 %120, i64* @_ZZN5media19StreamParserFactory6CreateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS1_6vectorIS7_NS5_IS7_EEEEPNS_8MediaLogEE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %121

121:                                              ; preds = %114, %118
  %122 = phi %"class.base::HistogramBase"* [ %116, %114 ], [ %119, %118 ]
  %123 = load i32*, i32** %12, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 %59
  %125 = load i32, i32* %124, align 4
  %126 = bitcast %"class.base::HistogramBase"* %122 to void (%"class.base::HistogramBase"*, i32)***
  %127 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %126, align 8
  %128 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %127, i64 6
  %129 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %128, align 8
  call void %129(%"class.base::HistogramBase"* %122, i32 %125) #9
  br label %130

130:                                              ; preds = %104, %95, %121, %111
  %131 = add nuw i64 %59, 1
  %132 = load i64, i64* %23, align 8
  %133 = load i64, i64* %25, align 8
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 2
  %136 = icmp ult i64 %131, %135
  br i1 %136, label %58, label %55

137:                                              ; preds = %55, %3
  %138 = phi %"class.media::StreamParser"* [ %57, %55 ], [ null, %3 ]
  %139 = load i32*, i32** %12, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = ptrtoint i32* %139 to i64
  %143 = bitcast i32** %13 to i64*
  store i64 %142, i64* %143, align 8
  %144 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %144) #11
  br label %145

145:                                              ; preds = %137, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %146 = load i32*, i32** %9, align 8
  %147 = icmp eq i32* %146, null
  br i1 %147, label %152, label %148

148:                                              ; preds = %145
  %149 = ptrtoint i32* %146 to i64
  %150 = bitcast i32** %10 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast i32* %146 to i8*
  call void @_ZdlPv(i8* %151) #11
  br label %152

152:                                              ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  ret %"class.media::StreamParser"* %138
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::StreamParser"* @_ZN5media19StreamParserFactory6CreateENSt3__110unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::AudioDecoderConfig"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #11
  %3 = bitcast i8* %2 to %"class.media::WebCodecsEncodedChunkStreamParser"*
  tail call void @_ZN5media33WebCodecsEncodedChunkStreamParserC1ENSt3__110unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::WebCodecsEncodedChunkStreamParser"* nonnull %3, %"class.media::AudioDecoderConfig"* %0) #9
  %4 = bitcast i8* %2 to %"class.media::StreamParser"*
  ret %"class.media::StreamParser"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.media::StreamParser"* @_ZN5media19StreamParserFactory6CreateENSt3__110unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::VideoDecoderConfig"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #11
  %3 = bitcast i8* %2 to %"class.media::WebCodecsEncodedChunkStreamParser"*
  tail call void @_ZN5media33WebCodecsEncodedChunkStreamParserC1ENSt3__110unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::WebCodecsEncodedChunkStreamParser"* nonnull %3, %"class.media::VideoDecoderConfig"* %0) #9
  %4 = bitcast i8* %2 to %"class.media::StreamParser"*
  ret %"class.media::StreamParser"* %4
}

declare void @_ZN5media8MediaLogC2Ev(%"class.media::MediaLog"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media12NullMediaLogD0Ev(%"class.media::NullMediaLog"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.media::NullMediaLog", %"class.media::NullMediaLog"* %0, i64 0, i32 0
  tail call void @_ZN5media8MediaLogD2Ev(%"class.media::MediaLog"* %2) #9
  %3 = bitcast %"class.media::NullMediaLog"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

declare %"class.media::MediaLog"* @_ZN5media8MediaLog5CloneEv(%"class.media::MediaLog"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media12NullMediaLog18AddLogRecordLockedENSt3__110unique_ptrINS_14MediaLogRecordENS1_14default_deleteIS3_EEEE(%"class.media::NullMediaLog"*, %"struct.media::MediaLogRecord"*) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.media::MediaLogRecord"* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.media::MediaLogRecord", %"struct.media::MediaLogRecord"* %1, i64 0, i32 2, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* %5) #9
  %6 = bitcast %"struct.media::MediaLogRecord"* %1 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %2, %4
  ret void
}

declare void @_ZN5media8MediaLog31OnWebMediaPlayerDestroyedLockedEv(%"class.media::MediaLog"*) unnamed_addr #3

declare void @_ZN5media8MediaLog21GetErrorMessageLockedEv(%"class.std::__1::basic_string"* sret, %"class.media::MediaLog"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN5media9LogHelperC1ENS_20MediaLogMessageLevelEPNS_8MediaLogE(%"class.media::LogHelper"*, i32, %"class.media::MediaLog"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5media9LogHelperD1Ev(%"class.media::LogHelper"*) unnamed_addr #2

declare zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.media::StreamParser"* @_ZN5mediaL15BuildWebMParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE(%"class.std::__1::vector"* nocapture readnone dereferenceable(24), %"class.media::MediaLog"* nocapture readnone) #0 {
  %3 = tail call i8* @_Znwm(i64 128) #11
  %4 = bitcast i8* %3 to %"class.media::WebMStreamParser"*
  tail call void @_ZN5media16WebMStreamParserC1Ev(%"class.media::WebMStreamParser"* nonnull %4) #9
  %5 = bitcast i8* %3 to %"class.media::StreamParser"*
  ret %"class.media::StreamParser"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.media::StreamParser"* @_ZN5mediaL14BuildMP3ParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE(%"class.std::__1::vector"* nocapture readnone dereferenceable(24), %"class.media::MediaLog"* nocapture readnone) #0 {
  %3 = tail call i8* @_Znwm(i64 208) #11
  %4 = bitcast i8* %3 to %"class.media::MPEG1AudioStreamParser"*
  tail call void @_ZN5media22MPEG1AudioStreamParserC1Ev(%"class.media::MPEG1AudioStreamParser"* nonnull %4) #9
  %5 = bitcast i8* %3 to %"class.media::StreamParser"*
  ret %"class.media::StreamParser"* %5
}

; Function Attrs: nounwind ssp uwtable
define internal nonnull %"class.media::StreamParser"* @_ZN5mediaL14BuildMP4ParserERKNSt3__16vectorINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS5_IS7_EEEEPNS_8MediaLogE(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.media::MediaLog"* nocapture readnone) #0 {
  %3 = alloca %"class.std::__1::set", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::set"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %6, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  br i1 %15, label %26, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %34

23:                                               ; preds = %65
  %24 = and i8 %60, 1
  %25 = icmp ne i8 %24, 0
  br label %26

26:                                               ; preds = %23, %2
  %27 = phi i1 [ false, %2 ], [ %25, %23 ]
  %28 = call i8* @_Znwm(i64 264) #11
  %29 = bitcast i8* %28 to %"class.media::mp4::MP4StreamParser"*
  call void @_ZN5media3mp415MP4StreamParserC1ERKNSt3__13setIiNS2_4lessIiEENS2_9allocatorIiEEEEbb(%"class.media::mp4::MP4StreamParser"* nonnull %29, %"class.std::__1::set"* nonnull dereferenceable(24) %3, i1 zeroext false, i1 zeroext %27) #9
  %30 = bitcast i8* %28 to %"class.media::StreamParser"*
  %31 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %3, i64 0, i32 0
  %32 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* nonnull %31, %"class.std::__1::__tree_node"* %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret %"class.media::StreamParser"* %30

34:                                               ; preds = %16, %65
  %35 = phi i64 [ %14, %16 ], [ %68, %65 ]
  %36 = phi i64 [ 0, %16 ], [ %66, %65 ]
  %37 = phi i8 [ 0, %16 ], [ %60, %65 ]
  %38 = inttoptr i64 %35 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #9
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 %36
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %34
  %45 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %45, i64 24, i1 false) #9
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 %36, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %48, i64 %50) #9
  br label %51

51:                                               ; preds = %44, %46
  %52 = load i8, i8* %21, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %18, align 8
  %55 = select i1 %53, i8* %54, i8* %17
  %56 = load i64, i64* %19, align 8
  %57 = zext i8 %52 to i64
  %58 = select i1 %53, i64 %56, i64 %57
  %59 = call zeroext i1 @_ZN4base12MatchPatternENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %55, i64 %58, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i64 4) #9
  %60 = select i1 %59, i8 1, i8 %37
  %61 = load i8, i8* %21, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %51
  %64 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %64) #11
  br label %65

65:                                               ; preds = %51, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #9
  %66 = add nuw i64 %36, 1
  %67 = load i64, i64* %11, align 8
  %68 = load i64, i64* %13, align 8
  %69 = sub i64 %67, %68
  %70 = sdiv exact i64 %69, 24
  %71 = icmp ult i64 %66, %70
  br i1 %71, label %34, label %23
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5media16WebMStreamParserC1Ev(%"class.media::WebMStreamParser"*) unnamed_addr #3

declare void @_ZN5media22MPEG1AudioStreamParserC1Ev(%"class.media::MPEG1AudioStreamParser"*) unnamed_addr #3

declare void @_ZN5media3mp415MP4StreamParserC1ERKNSt3__13setIiNS2_4lessIiEENS2_9allocatorIiEEEEbb(%"class.media::mp4::MP4StreamParser"*, %"class.std::__1::set"* dereferenceable(24), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #3

declare void @_ZN5media33WebCodecsEncodedChunkStreamParserC1ENSt3__110unique_ptrINS_18AudioDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::WebCodecsEncodedChunkStreamParser"*, %"class.media::AudioDecoderConfig"*) unnamed_addr #3

declare void @_ZN5media33WebCodecsEncodedChunkStreamParserC1ENSt3__110unique_ptrINS_18VideoDecoderConfigENS1_14default_deleteIS3_EEEE(%"class.media::WebCodecsEncodedChunkStreamParser"*, %"class.media::VideoDecoderConfig"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
