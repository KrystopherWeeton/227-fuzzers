; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkDeviceMemory.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkDeviceMemory.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.vk::DeviceMemory" = type { i8*, i64, i32, %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"* }
%"class.vk::DeviceMemory::ExternalBase" = type { i32 (...)** }
%struct.VkMemoryAllocateInfo = type { i32, i8*, i64, i32 }
%"class.vk::Device" = type { %"class.vk::PhysicalDevice"*, %"class.vk::Queue"*, i32, %"class.std::__1::unique_ptr", i32, [256 x i8]*, %struct.VkPhysicalDeviceFeatures, %"class.std::__1::shared_ptr", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.85", %"class.marl::mutex", %"class.std::__1::unordered_set.99" }
%"class.vk::PhysicalDevice" = type opaque
%"class.vk::Queue" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.sw::Blitter"* }
%"class.sw::Blitter" = type opaque
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.marl::Scheduler"*, %"class.std::__1::__shared_weak_count"* }
%"class.marl::Scheduler" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.vk::Device::SamplingRoutineCache"* }
%"class.vk::Device::SamplingRoutineCache" = type { i8, [7 x i8], %"class.std::__1::unordered_map", %"class.marl::mutex", %"class.sw::LRUCache" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.40", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.54", [4 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42", %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { float }
%"class.sw::LRUCache" = type { %"class.std::__1::vector", %"class.std::__1::unordered_set", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.62" }
%"class.std::__1::__hash_table.62" = type <{ %"class.std::__1::unique_ptr.63", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.80", [4 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65", %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.std::__1::__hash_node_base.66"** }
%"struct.std::__1::__hash_node_base.66" = type { %"struct.std::__1::__hash_node_base.66"* }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::__bucket_list_deallocator.68" }
%"class.std::__1::__bucket_list_deallocator.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.std::__1::__hash_node_base.66" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry" = type { %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed", %"class.std::__1::shared_ptr.123", %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"*, %"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Entry"* }
%"struct.sw::LRUCache<vk::Device::SamplingRoutineCache::Key, std::__1::shared_ptr<rr::Routine>, vk::Device::SamplingRoutineCache::Key::Hash>::Keyed" = type { %"struct.vk::Device::SamplingRoutineCache::Key" }
%"struct.vk::Device::SamplingRoutineCache::Key" = type { i32, i32, i32 }
%"class.std::__1::shared_ptr.123" = type { %"class.rr::Routine"*, %"class.std::__1::__shared_weak_count"* }
%"class.rr::Routine" = type { i32 (...)** }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.vk::Device::SamplerIndexer"* }
%"class.vk::Device::SamplerIndexer" = type <{ %"class.marl::mutex", %"class.std::__1::map", i32, [4 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.marl::mutex" = type { %"class.std::__1::mutex" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unordered_set.99" = type { %"class.std::__1::__hash_table.100" }
%"class.std::__1::__hash_table.100" = type <{ %"class.std::__1::unique_ptr.101", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.118", [4 x i8] }>
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103", %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::__hash_node_base.104"** }
%"struct.std::__1::__hash_node_base.104" = type { %"struct.std::__1::__hash_node_base.104"* }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.std::__1::__bucket_list_deallocator.106" }
%"class.std::__1::__bucket_list_deallocator.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.std::__1::__hash_node_base.104" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%"class.vk::ExternalMemoryTraits" = type { i32, i64, void (i8*, %struct.VkMemoryAllocateInfo*)* }
%"struct.ExternalMemoryHost::AllocateInfo" = type { i8, i8* }
%struct.OpaqueFdAllocateInfo = type { i8, i8, i32 }
%struct.VkAllocationCallbacks = type { i8*, i8* (i8*, i64, i64, i32)*, i8* (i8*, i8*, i64, i64, i32)*, void (i8*, i8*)*, void (i8*, i64, i32, i32)*, void (i8*, i64, i32, i32)* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.VkBaseInStructure = type { i32, %struct.VkBaseInStructure* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.VkImportMemoryFdInfoKHR = type { i32, i8*, i32, i32 }
%class.OpaqueFdExternalMemory = type <{ %"class.vk::DeviceMemory::ExternalBase", %class.LinuxMemFd, %struct.OpaqueFdAllocateInfo, [4 x i8] }>
%class.LinuxMemFd = type { i32 }
%class.ExternalMemoryHost = type { %"class.vk::DeviceMemory::ExternalBase", %"struct.ExternalMemoryHost::AllocateInfo" }
%"class.vk::DeviceMemoryHostExternalBase" = type { %"class.vk::DeviceMemory::ExternalBase", i8* }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

$_ZN20OpaqueFdAllocateInfoC2EPK20VkMemoryAllocateInfo = comdat any

$_ZN22OpaqueFdExternalMemoryD2Ev = comdat any

$_ZN22OpaqueFdExternalMemoryD0Ev = comdat any

$_ZN22OpaqueFdExternalMemory8allocateEmPPv = comdat any

$_ZN22OpaqueFdExternalMemory10deallocateEPvm = comdat any

$_ZNK22OpaqueFdExternalMemory10getFlagBitEv = comdat any

$_ZN2vk12DeviceMemory12ExternalBase12setDevicePtrEPNS_6DeviceE = comdat any

$_ZNK22OpaqueFdExternalMemory8exportFdEPi = comdat any

$_ZNK2vk12DeviceMemory12ExternalBase26hasExternalImagePropertiesEv = comdat any

$_ZNK2vk12DeviceMemory12ExternalBase26externalImageRowPitchBytesE21VkImageAspectFlagBits = comdat any

$_ZNK2vk12DeviceMemory12ExternalBase25externalImageMemoryOffsetE21VkImageAspectFlagBits = comdat any

$_ZNK2vk12DeviceMemory12ExternalBase8exportFdEPi = comdat any

$_ZN18ExternalMemoryHost12AllocateInfoC2EPK20VkMemoryAllocateInfo = comdat any

$_ZN2vk12DeviceMemory12ExternalBaseD2Ev = comdat any

$_ZN18ExternalMemoryHostD0Ev = comdat any

$_ZN18ExternalMemoryHost8allocateEmPPv = comdat any

$_ZN18ExternalMemoryHost10deallocateEPvm = comdat any

$_ZNK18ExternalMemoryHost10getFlagBitEv = comdat any

$_ZN2vk28DeviceMemoryHostExternalBaseD0Ev = comdat any

$_ZN2vk28DeviceMemoryHostExternalBase8allocateEmPPv = comdat any

$_ZN2vk28DeviceMemoryHostExternalBase10deallocateEPvm = comdat any

$_ZNK2vk28DeviceMemoryHostExternalBase10getFlagBitEv = comdat any

$_ZTV22OpaqueFdExternalMemory = comdat any

$_ZZN22OpaqueFdExternalMemory8allocateEmPPvE7counter = comdat any

$_ZTV18ExternalMemoryHost = comdat any

$_ZTVN2vk28DeviceMemoryHostExternalBaseE = comdat any

@.str = private unnamed_addr constant [68 x i8] c"%s:%d WARNING: UNSUPPORTED: VkImportMemoryFdInfoKHR::handleType %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"../../third_party/swiftshader/src/Vulkan/VkDeviceMemory.cpp\00", align 1
@.str.2 = private unnamed_addr constant [72 x i8] c"%s:%d WARNING: UNSUPPORTED: VkExportMemoryAllocateInfo::handleTypes %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"%s:%d WARNING: VkMemoryAllocateInfo->pNext sType = %s\0A\00", align 1
@_ZTV22OpaqueFdExternalMemory = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.OpaqueFdExternalMemory*)* @_ZN22OpaqueFdExternalMemoryD2Ev to i8*), i8* bitcast (void (%class.OpaqueFdExternalMemory*)* @_ZN22OpaqueFdExternalMemoryD0Ev to i8*), i8* bitcast (i32 (%class.OpaqueFdExternalMemory*, i64, i8**)* @_ZN22OpaqueFdExternalMemory8allocateEmPPv to i8*), i8* bitcast (void (%class.OpaqueFdExternalMemory*, i8*, i64)* @_ZN22OpaqueFdExternalMemory10deallocateEPvm to i8*), i8* bitcast (i32 (%class.OpaqueFdExternalMemory*)* @_ZNK22OpaqueFdExternalMemory10getFlagBitEv to i8*), i8* bitcast (void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)* @_ZN2vk12DeviceMemory12ExternalBase12setDevicePtrEPNS_6DeviceE to i8*), i8* bitcast (i32 (%class.OpaqueFdExternalMemory*, i32*)* @_ZNK22OpaqueFdExternalMemory8exportFdEPi to i8*), i8* bitcast (i1 (%"class.vk::DeviceMemory::ExternalBase"*)* @_ZNK2vk12DeviceMemory12ExternalBase26hasExternalImagePropertiesEv to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase26externalImageRowPitchBytesE21VkImageAspectFlagBits to i8*), i8* bitcast (i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase25externalImageMemoryOffsetE21VkImageAspectFlagBits to i8*)] }, comdat, align 8
@_ZZN22OpaqueFdExternalMemory8allocateEmPPvE7counter = linkonce_odr hidden local_unnamed_addr global i32 0, comdat, align 4
@.str.4 = private unnamed_addr constant [22 x i8] c"SwiftShader.Memory.%d\00", align 1
@.str.5 = private unnamed_addr constant [43 x i8] c"%s:%d TRACE: memfd.allocate() returned %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [73 x i8] c"../../third_party/swiftshader/src/Vulkan/VkDeviceMemoryExternalLinux.hpp\00", align 1
@.str.7 = private unnamed_addr constant [52 x i8] c"%s:%d WARNING: UNSUPPORTED: importInfo->handleType\0A\00", align 1
@_ZTV18ExternalMemoryHost = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.vk::DeviceMemory::ExternalBase"*)* @_ZN2vk12DeviceMemory12ExternalBaseD2Ev to i8*), i8* bitcast (void (%class.ExternalMemoryHost*)* @_ZN18ExternalMemoryHostD0Ev to i8*), i8* bitcast (i32 (%class.ExternalMemoryHost*, i64, i8**)* @_ZN18ExternalMemoryHost8allocateEmPPv to i8*), i8* bitcast (void (%class.ExternalMemoryHost*, i8*, i64)* @_ZN18ExternalMemoryHost10deallocateEPvm to i8*), i8* bitcast (i32 (%class.ExternalMemoryHost*)* @_ZNK18ExternalMemoryHost10getFlagBitEv to i8*), i8* bitcast (void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)* @_ZN2vk12DeviceMemory12ExternalBase12setDevicePtrEPNS_6DeviceE to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)* @_ZNK2vk12DeviceMemory12ExternalBase8exportFdEPi to i8*), i8* bitcast (i1 (%"class.vk::DeviceMemory::ExternalBase"*)* @_ZNK2vk12DeviceMemory12ExternalBase26hasExternalImagePropertiesEv to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase26externalImageRowPitchBytesE21VkImageAspectFlagBits to i8*), i8* bitcast (i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase25externalImageMemoryOffsetE21VkImageAspectFlagBits to i8*)] }, comdat, align 8
@_ZTVN2vk28DeviceMemoryHostExternalBaseE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.vk::DeviceMemory::ExternalBase"*)* @_ZN2vk12DeviceMemory12ExternalBaseD2Ev to i8*), i8* bitcast (void (%"class.vk::DeviceMemoryHostExternalBase"*)* @_ZN2vk28DeviceMemoryHostExternalBaseD0Ev to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemoryHostExternalBase"*, i64, i8**)* @_ZN2vk28DeviceMemoryHostExternalBase8allocateEmPPv to i8*), i8* bitcast (void (%"class.vk::DeviceMemoryHostExternalBase"*, i8*, i64)* @_ZN2vk28DeviceMemoryHostExternalBase10deallocateEPvm to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemoryHostExternalBase"*)* @_ZNK2vk28DeviceMemoryHostExternalBase10getFlagBitEv to i8*), i8* bitcast (void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)* @_ZN2vk12DeviceMemory12ExternalBase12setDevicePtrEPNS_6DeviceE to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)* @_ZNK2vk12DeviceMemory12ExternalBase8exportFdEPi to i8*), i8* bitcast (i1 (%"class.vk::DeviceMemory::ExternalBase"*)* @_ZNK2vk12DeviceMemory12ExternalBase26hasExternalImagePropertiesEv to i8*), i8* bitcast (i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase26externalImageRowPitchBytesE21VkImageAspectFlagBits to i8*), i8* bitcast (i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)* @_ZNK2vk12DeviceMemory12ExternalBase25externalImageMemoryOffsetE21VkImageAspectFlagBits to i8*)] }, comdat, align 8

@_ZN2vk12DeviceMemoryC1EPK20VkMemoryAllocateInfoPvPNS_6DeviceE = hidden unnamed_addr alias void (%"class.vk::DeviceMemory"*, %struct.VkMemoryAllocateInfo*, i8*, %"class.vk::Device"*), void (%"class.vk::DeviceMemory"*, %struct.VkMemoryAllocateInfo*, i8*, %"class.vk::Device"*)* @_ZN2vk12DeviceMemoryC2EPK20VkMemoryAllocateInfoPvPNS_6DeviceE

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk12DeviceMemoryC2EPK20VkMemoryAllocateInfoPvPNS_6DeviceE(%"class.vk::DeviceMemory"* nocapture, %struct.VkMemoryAllocateInfo*, i8*, %"class.vk::Device"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.vk::ExternalMemoryTraits", align 8
  %6 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 0
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %1, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %1, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  store i32 %12, i32* %10, align 8
  %13 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  store %"class.vk::DeviceMemory::ExternalBase"* null, %"class.vk::DeviceMemory::ExternalBase"** %13, align 8
  %14 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 4
  store %"class.vk::Device"* %3, %"class.vk::Device"** %14, align 8
  %15 = bitcast %"class.vk::ExternalMemoryTraits"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN2vkL10findTraitsEPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsE(%struct.VkMemoryAllocateInfo* %1, %"class.vk::ExternalMemoryTraits"* nonnull %5) #12
  %16 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %5, i64 0, i32 2
  %17 = load void (i8*, %struct.VkMemoryAllocateInfo*)*, void (i8*, %struct.VkMemoryAllocateInfo*)** %16, align 8
  tail call void %17(i8* %2, %struct.VkMemoryAllocateInfo* %1) #13
  %18 = bitcast i8* %2 to %"class.vk::DeviceMemory::ExternalBase"*
  %19 = bitcast %"class.vk::DeviceMemory::ExternalBase"** %13 to i8**
  store i8* %2, i8** %19, align 8
  %20 = load %"class.vk::Device"*, %"class.vk::Device"** %14, align 8
  %21 = bitcast i8* %2 to void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)***
  %22 = load void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)**, void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)*, void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)** %22, i64 5
  %24 = load void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)*, void (%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*)** %23, align 8
  tail call void %24(%"class.vk::DeviceMemory::ExternalBase"* %18, %"class.vk::Device"* %20) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN2vkL10findTraitsEPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsE(%struct.VkMemoryAllocateInfo*, %"class.vk::ExternalMemoryTraits"* nocapture) unnamed_addr #0 {
  %3 = alloca %"struct.ExternalMemoryHost::AllocateInfo", align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %struct.OpaqueFdAllocateInfo*
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  store i64 -6148914691236517206, i64* %4, align 8
  call void @_ZN20OpaqueFdAllocateInfoC2EPK20VkMemoryAllocateInfo(%struct.OpaqueFdAllocateInfo* nonnull %5, %struct.VkMemoryAllocateInfo* %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = getelementptr inbounds %struct.OpaqueFdAllocateInfo, %struct.OpaqueFdAllocateInfo* %5, i64 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = and i8 %9, 1
  %11 = or i8 %10, %7
  %12 = icmp eq i8 %11, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %1, i64 0, i32 0
  store i32 1, i32* %14, align 8
  br label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.ExternalMemoryHost::AllocateInfo", %"struct.ExternalMemoryHost::AllocateInfo"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #11
  call void @_ZN18ExternalMemoryHost12AllocateInfoC2EPK20VkMemoryAllocateInfo(%"struct.ExternalMemoryHost::AllocateInfo"* nonnull %3, %struct.VkMemoryAllocateInfo* %0) #13
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  %19 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %1, i64 0, i32 0
  br i1 %18, label %21, label %20

20:                                               ; preds = %15
  store i32 384, i32* %19, align 8
  br label %22

21:                                               ; preds = %15
  store i32 0, i32* %19, align 8
  br label %22

22:                                               ; preds = %20, %13, %21
  %23 = phi i64 [ 24, %20 ], [ 24, %13 ], [ 16, %21 ]
  %24 = phi void (i8*, %struct.VkMemoryAllocateInfo*)* [ @_ZZN2vkL15parseCreateInfoI18ExternalMemoryHostEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_, %20 ], [ @_ZZN2vkL15parseCreateInfoI22OpaqueFdExternalMemoryEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_, %13 ], [ @_ZZN2vkL15parseCreateInfoINS_28DeviceMemoryHostExternalBaseEEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_, %21 ]
  %25 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %1, i64 0, i32 1
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %1, i64 0, i32 2
  store void (i8*, %struct.VkMemoryAllocateInfo*)* %24, void (i8*, %struct.VkMemoryAllocateInfo*)** %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2vk12DeviceMemory7destroyEPK21VkAllocationCallbacks(%"class.vk::DeviceMemory"* nocapture, %struct.VkAllocationCallbacks*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %8 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %7, align 8
  %9 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %8 to void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)***
  %12 = load void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)**, void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)*, void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)** %12, i64 3
  %14 = load void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)*, void (%"class.vk::DeviceMemory::ExternalBase"*, i8*, i64)** %13, align 8
  tail call void %14(%"class.vk::DeviceMemory::ExternalBase"* %8, i8* nonnull %4, i64 %10) #13
  store i8* null, i8** %3, align 8
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %17 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %16, align 8
  %18 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %17 to void (%"class.vk::DeviceMemory::ExternalBase"*)***
  %19 = load void (%"class.vk::DeviceMemory::ExternalBase"*)**, void (%"class.vk::DeviceMemory::ExternalBase"*)*** %18, align 8
  %20 = load void (%"class.vk::DeviceMemory::ExternalBase"*)*, void (%"class.vk::DeviceMemory::ExternalBase"*)** %19, align 8
  tail call void %20(%"class.vk::DeviceMemory::ExternalBase"* %17) #13
  %21 = bitcast %"class.vk::DeviceMemory::ExternalBase"** %16 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %22, %struct.VkAllocationCallbacks* %1) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8*, %struct.VkAllocationCallbacks*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN2vk12DeviceMemory29ComputeRequiredAllocationSizeEPK20VkMemoryAllocateInfo(%struct.VkMemoryAllocateInfo*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.vk::ExternalMemoryTraits", align 8
  %3 = bitcast %"class.vk::ExternalMemoryTraits"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN2vkL10findTraitsEPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsE(%struct.VkMemoryAllocateInfo* %0, %"class.vk::ExternalMemoryTraits"* nonnull %2) #12
  %4 = getelementptr inbounds %"class.vk::ExternalMemoryTraits", %"class.vk::ExternalMemoryTraits"* %2, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret i64 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk12DeviceMemory8allocateEv(%"class.vk::DeviceMemory"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = icmp ugt i64 %3, 1073741824
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %11 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %10, align 8
  %12 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %11 to i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)***
  %13 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)**, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)** %13, i64 2
  %15 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i64, i8**)** %14, align 8
  %16 = tail call i32 %15(%"class.vk::DeviceMemory::ExternalBase"* %11, i64 %3, i8** %6) #13
  br label %17

17:                                               ; preds = %9, %5, %1
  %18 = phi i32 [ -2, %1 ], [ 0, %5 ], [ %16, %9 ]
  ret i32 %18
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden i32 @_ZN2vk12DeviceMemory3mapEmmPPv(%"class.vk::DeviceMemory"* nocapture readonly, i64, i64, i8** nocapture) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 %1
  store i8* %7, i8** %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i8* @_ZNK2vk12DeviceMemory16getOffsetPointerEm(%"class.vk::DeviceMemory"* nocapture readonly, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 %1
  ret i8* %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK2vk12DeviceMemory25getCommittedMemoryInBytesEv(%"class.vk::DeviceMemory"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk12DeviceMemory29checkExternalMemoryHandleTypeEj(%"class.vk::DeviceMemory"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %16, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %6 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %5, align 8
  %7 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %6 to i32 (%"class.vk::DeviceMemory::ExternalBase"*)***
  %8 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*)**, i32 (%"class.vk::DeviceMemory::ExternalBase"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.vk::DeviceMemory::ExternalBase"*)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*)** %8, i64 4
  %10 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*)** %9, align 8
  %11 = tail call i32 %10(%"class.vk::DeviceMemory::ExternalBase"* %6) #13
  %12 = icmp eq i32 %11, 0
  %13 = and i32 %11, %1
  %14 = icmp ne i32 %13, 0
  %15 = or i1 %12, %14
  br label %16

16:                                               ; preds = %4, %2
  %17 = phi i1 [ true, %2 ], [ %15, %4 ]
  ret i1 %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk12DeviceMemory26hasExternalImagePropertiesEv(%"class.vk::DeviceMemory"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %3 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %2, align 8
  %4 = icmp eq %"class.vk::DeviceMemory::ExternalBase"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %3 to i1 (%"class.vk::DeviceMemory::ExternalBase"*)***
  %7 = load i1 (%"class.vk::DeviceMemory::ExternalBase"*)**, i1 (%"class.vk::DeviceMemory::ExternalBase"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.vk::DeviceMemory::ExternalBase"*)*, i1 (%"class.vk::DeviceMemory::ExternalBase"*)** %7, i64 7
  %9 = load i1 (%"class.vk::DeviceMemory::ExternalBase"*)*, i1 (%"class.vk::DeviceMemory::ExternalBase"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.vk::DeviceMemory::ExternalBase"* nonnull %3) #13
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk12DeviceMemory26externalImageRowPitchBytesE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %4 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %3, align 8
  %5 = icmp eq %"class.vk::DeviceMemory::ExternalBase"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %4 to i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)***
  %8 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)**, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)** %8, i64 8
  %10 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32)** %9, align 8
  %11 = tail call i32 %10(%"class.vk::DeviceMemory::ExternalBase"* nonnull %4, i32 %1) #13
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i32 [ %11, %6 ], [ -1, %2 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZNK2vk12DeviceMemory25externalImageMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::DeviceMemory"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %4 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %3, align 8
  %5 = icmp eq %"class.vk::DeviceMemory::ExternalBase"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %4 to i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)***
  %8 = load i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)**, i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*, i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)** %8, i64 9
  %10 = load i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)*, i64 (%"class.vk::DeviceMemory::ExternalBase"*, i32)** %9, align 8
  %11 = tail call i64 %10(%"class.vk::DeviceMemory::ExternalBase"* nonnull %4, i32 %1) #13
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i64 [ %11, %6 ], [ -1, %2 ]
  ret i64 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk12DeviceMemory8exportFdEPi(%"class.vk::DeviceMemory"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::DeviceMemory", %"class.vk::DeviceMemory"* %0, i64 0, i32 3
  %4 = load %"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::DeviceMemory::ExternalBase"** %3, align 8
  %5 = bitcast %"class.vk::DeviceMemory::ExternalBase"* %4 to i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)***
  %6 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)**, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)** %6, i64 6
  %8 = load i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)*, i32 (%"class.vk::DeviceMemory::ExternalBase"*, i32*)** %7, align 8
  %9 = tail call i32 %8(%"class.vk::DeviceMemory::ExternalBase"* %4, i32* %1) #13
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN20OpaqueFdAllocateInfoC2EPK20VkMemoryAllocateInfo(%struct.OpaqueFdAllocateInfo*, %struct.VkMemoryAllocateInfo*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %struct.OpaqueFdAllocateInfo, %struct.OpaqueFdAllocateInfo* %0, i64 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %struct.OpaqueFdAllocateInfo, %struct.OpaqueFdAllocateInfo* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %struct.OpaqueFdAllocateInfo, %struct.OpaqueFdAllocateInfo* %0, i64 0, i32 2
  store i32 -1, i32* %6, align 4
  %7 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %1, i64 0, i32 1
  %8 = bitcast i8** %7 to %struct.VkBaseInStructure**
  %9 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %8, align 8
  %10 = icmp eq %struct.VkBaseInStructure* %9, null
  br i1 %10, label %49, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %11, %45
  %17 = phi %struct.VkBaseInStructure* [ %9, %11 ], [ %47, %45 ]
  %18 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %35 [
    i32 1000074000, label %20
    i32 1000072002, label %29
    i32 1000127001, label %45
    i32 1000178000, label %45
  ]

20:                                               ; preds = %16
  %21 = bitcast %struct.VkBaseInStructure* %17 to %struct.VkImportMemoryFdInfoKHR*
  %22 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 1, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 212, i32 %23) #13
  br label %26

26:                                               ; preds = %20, %25
  store i8 1, i8* %4, align 4
  %27 = getelementptr inbounds %struct.VkImportMemoryFdInfoKHR, %struct.VkImportMemoryFdInfoKHR* %21, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %6, align 4
  br label %45

29:                                               ; preds = %16
  %30 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 1, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %34, label %33

33:                                               ; preds = %29
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 224, i32 %31) #13
  br label %34

34:                                               ; preds = %29, %33
  store i8 1, i8* %5, align 1
  br label %45

35:                                               ; preds = %16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* nonnull sret %3, i32 %19) #13
  %36 = load i8, i8* %14, align 1
  %37 = icmp slt i8 %36, 0
  %38 = load i8*, i8** %15, align 8
  %39 = select i1 %37, i8* %38, i8* %12
  call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 239, i8* %39) #13
  %40 = load i8, i8* %14, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %35, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  br label %45

45:                                               ; preds = %44, %16, %16, %34, %26
  %46 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %17, i64 0, i32 1
  %47 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %46, align 8
  %48 = icmp eq %struct.VkBaseInStructure* %47, null
  br i1 %48, label %49, label %16

49:                                               ; preds = %45, %2
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2vk9StringifyE15VkStructureType(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN2vkL15parseCreateInfoI22OpaqueFdExternalMemoryEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_(i8*, %struct.VkMemoryAllocateInfo*) #6 align 2 {
  %3 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV22OpaqueFdExternalMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %0, i64 12
  %7 = bitcast i8* %6 to %struct.OpaqueFdAllocateInfo*
  tail call void @_ZN20OpaqueFdAllocateInfoC2EPK20VkMemoryAllocateInfo(%struct.OpaqueFdAllocateInfo* %7, %struct.VkMemoryAllocateInfo* %1) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN22OpaqueFdExternalMemoryD2Ev(%class.OpaqueFdExternalMemory*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV22OpaqueFdExternalMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  tail call void @_ZN10LinuxMemFd5closeEv(%class.LinuxMemFd* %3) #13
  tail call void @_ZN10LinuxMemFdD1Ev(%class.LinuxMemFd* %3) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN22OpaqueFdExternalMemoryD0Ev(%class.OpaqueFdExternalMemory*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV22OpaqueFdExternalMemory, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  tail call void @_ZN10LinuxMemFd5closeEv(%class.LinuxMemFd* %3) #13
  tail call void @_ZN10LinuxMemFdD1Ev(%class.LinuxMemFd* %3) #13
  %4 = bitcast %class.OpaqueFdExternalMemory* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN22OpaqueFdExternalMemory8allocateEmPPv(%class.OpaqueFdExternalMemory*, i64, i8**) unnamed_addr #0 comdat align 2 {
  %4 = alloca [40 x i8], align 16
  %5 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 2, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 2, i32 2
  %11 = load i32, i32* %10, align 4
  tail call void @_ZN10LinuxMemFd8importFdEi(%class.LinuxMemFd* %9, i32 %11) #13
  %12 = getelementptr inbounds %class.LinuxMemFd, %class.LinuxMemFd* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %27, label %32

15:                                               ; preds = %3
  %16 = getelementptr inbounds [40 x i8], [40 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 40, i1 false)
  %17 = load i32, i32* @_ZZN22OpaqueFdExternalMemory8allocateEmPPvE7counter, align 4
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* @_ZZN22OpaqueFdExternalMemory8allocateEmPPvE7counter, align 4
  %19 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %16, i64 40, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i32 %18) #13
  %20 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  %21 = call zeroext i1 @_ZN10LinuxMemFd8allocateEPKcm(%class.LinuxMemFd* %20, i8* nonnull %16, i64 %1) #13
  br i1 %21, label %26, label %22

22:                                               ; preds = %15
  %23 = tail call i32* @__errno_location() #15
  %24 = load i32, i32* %23, align 4
  %25 = call i8* @strerror(i32 %24) #13
  call void (i8*, ...) @_ZN2sw5traceEPKcz(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.6, i64 0, i64 0), i32 61, i8* %25) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  br label %32

26:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  br label %27

27:                                               ; preds = %26, %8
  %28 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  %29 = call i8* @_ZN10LinuxMemFd12mapReadWriteEmm(%class.LinuxMemFd* %28, i64 0, i64 %1) #13
  %30 = icmp eq i8* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  store i8* %29, i8** %2, align 8
  br label %32

32:                                               ; preds = %31, %27, %22, %8
  %33 = phi i32 [ -1000072003, %8 ], [ -2, %22 ], [ 0, %31 ], [ -5, %27 ]
  ret i32 %33
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN22OpaqueFdExternalMemory10deallocateEPvm(%class.OpaqueFdExternalMemory*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZN10LinuxMemFd5unmapEPvm(%class.LinuxMemFd* %4, i8* %1, i64 %2) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK22OpaqueFdExternalMemory10getFlagBitEv(%class.OpaqueFdExternalMemory*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk12DeviceMemory12ExternalBase12setDevicePtrEPNS_6DeviceE(%"class.vk::DeviceMemory::ExternalBase"*, %"class.vk::Device"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK22OpaqueFdExternalMemory8exportFdEPi(%class.OpaqueFdExternalMemory*, i32*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.OpaqueFdExternalMemory, %class.OpaqueFdExternalMemory* %0, i64 0, i32 1
  %4 = tail call i32 @_ZNK10LinuxMemFd8exportFdEv(%class.LinuxMemFd* %3) #13
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %4, i32* %1, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i32 [ 0, %6 ], [ -1000072003, %2 ]
  ret i32 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2vk12DeviceMemory12ExternalBase26hasExternalImagePropertiesEv(%"class.vk::DeviceMemory::ExternalBase"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK2vk12DeviceMemory12ExternalBase26externalImageRowPitchBytesE21VkImageAspectFlagBits(%"class.vk::DeviceMemory::ExternalBase"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNK2vk12DeviceMemory12ExternalBase25externalImageMemoryOffsetE21VkImageAspectFlagBits(%"class.vk::DeviceMemory::ExternalBase"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK2vk12DeviceMemory12ExternalBase8exportFdEPi(%"class.vk::DeviceMemory::ExternalBase"*, i32*) unnamed_addr #0 comdat align 2 {
  ret i32 -1000072003
}

; Function Attrs: optsize
declare void @_ZN10LinuxMemFd5closeEv(%class.LinuxMemFd*) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare void @_ZN10LinuxMemFdD1Ev(%class.LinuxMemFd*) unnamed_addr #7

; Function Attrs: optsize
declare void @_ZN10LinuxMemFd8importFdEi(%class.LinuxMemFd*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind optsize
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #8

; Function Attrs: optsize
declare zeroext i1 @_ZN10LinuxMemFd8allocateEPKcm(%class.LinuxMemFd*, i8*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN2sw5traceEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind optsize
declare i8* @strerror(i32) local_unnamed_addr #7

; Function Attrs: nounwind optsize readnone
declare i32* @__errno_location() local_unnamed_addr #9

; Function Attrs: optsize
declare i8* @_ZN10LinuxMemFd12mapReadWriteEmm(%class.LinuxMemFd*, i64, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare zeroext i1 @_ZN10LinuxMemFd5unmapEPvm(%class.LinuxMemFd*, i8*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare i32 @_ZNK10LinuxMemFd8exportFdEv(%class.LinuxMemFd*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN18ExternalMemoryHost12AllocateInfoC2EPK20VkMemoryAllocateInfo(%"struct.ExternalMemoryHost::AllocateInfo"*, %struct.VkMemoryAllocateInfo*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.ExternalMemoryHost::AllocateInfo", %"struct.ExternalMemoryHost::AllocateInfo"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.ExternalMemoryHost::AllocateInfo", %"struct.ExternalMemoryHost::AllocateInfo"* %0, i64 0, i32 1
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %struct.VkMemoryAllocateInfo, %struct.VkMemoryAllocateInfo* %1, i64 0, i32 1
  %6 = bitcast i8** %5 to %struct.VkBaseInStructure**
  %7 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %6, align 8
  %8 = icmp eq %struct.VkBaseInStructure* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %2
  %10 = bitcast i8** %4 to i64*
  br label %11

11:                                               ; preds = %9, %24
  %12 = phi %struct.VkBaseInStructure* [ %7, %9 ], [ %26, %24 ]
  %13 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 1000178000
  br i1 %15, label %16, label %24

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %12, i64 1, i32 0
  %18 = load i32, i32* %17, align 8
  switch i32 %18, label %19 [
    i32 128, label %20
    i32 256, label %20
  ]

19:                                               ; preds = %16
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0), i32 136) #13
  br label %20

20:                                               ; preds = %16, %16, %19
  %21 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %12, i64 1, i32 1
  %22 = bitcast %struct.VkBaseInStructure** %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %10, align 8
  store i8 1, i8* %3, align 8
  br label %24

24:                                               ; preds = %11, %20
  %25 = getelementptr inbounds %struct.VkBaseInStructure, %struct.VkBaseInStructure* %12, i64 0, i32 1
  %26 = load %struct.VkBaseInStructure*, %struct.VkBaseInStructure** %25, align 8
  %27 = icmp eq %struct.VkBaseInStructure* %26, null
  br i1 %27, label %28, label %11

28:                                               ; preds = %24, %2
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define internal void @_ZZN2vkL15parseCreateInfoI18ExternalMemoryHostEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_(i8*, %struct.VkMemoryAllocateInfo*) #6 align 2 {
  %3 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTV18ExternalMemoryHost, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to %"struct.ExternalMemoryHost::AllocateInfo"*
  tail call void @_ZN18ExternalMemoryHost12AllocateInfoC2EPK20VkMemoryAllocateInfo(%"struct.ExternalMemoryHost::AllocateInfo"* %5, %struct.VkMemoryAllocateInfo* %1) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk12DeviceMemory12ExternalBaseD2Ev(%"class.vk::DeviceMemory::ExternalBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN18ExternalMemoryHostD0Ev(%class.ExternalMemoryHost*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.ExternalMemoryHost* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN18ExternalMemoryHost8allocateEmPPv(%class.ExternalMemoryHost*, i64, i8**) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.ExternalMemoryHost, %class.ExternalMemoryHost* %0, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.ExternalMemoryHost, %class.ExternalMemoryHost* %0, i64 0, i32 1, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast i8** %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i32 [ 0, %7 ], [ -1000072003, %3 ]
  ret i32 %13
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN18ExternalMemoryHost10deallocateEPvm(%class.ExternalMemoryHost*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK18ExternalMemoryHost10getFlagBitEv(%class.ExternalMemoryHost*) unnamed_addr #0 comdat align 2 {
  ret i32 384
}

; Function Attrs: inlinehint nofree norecurse nounwind optsize ssp uwtable writeonly
define internal void @_ZZN2vkL15parseCreateInfoINS_28DeviceMemoryHostExternalBaseEEEbPK20VkMemoryAllocateInfoPNS_20ExternalMemoryTraitsEENUlPvS4_E_8__invokeES7_S4_(i8* nocapture, %struct.VkMemoryAllocateInfo* nocapture readnone) #10 align 2 {
  %3 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2vk28DeviceMemoryHostExternalBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %0, i64 8
  %5 = bitcast i8* %4 to i8**
  store i8* null, i8** %5, align 8
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk28DeviceMemoryHostExternalBaseD0Ev(%"class.vk::DeviceMemoryHostExternalBase"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.vk::DeviceMemoryHostExternalBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN2vk28DeviceMemoryHostExternalBase8allocateEmPPv(%"class.vk::DeviceMemoryHostExternalBase"*, i64, i8**) unnamed_addr #0 comdat align 2 {
  %4 = tail call i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64 %1, i64 16, %struct.VkAllocationCallbacks* null, i32 1) #13
  %5 = getelementptr inbounds %"class.vk::DeviceMemoryHostExternalBase", %"class.vk::DeviceMemoryHostExternalBase"* %0, i64 0, i32 1
  store i8* %4, i8** %5, align 8
  %6 = icmp eq i8* %4, null
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  store i8* %4, i8** %2, align 8
  br label %8

8:                                                ; preds = %3, %7
  %9 = phi i32 [ 0, %7 ], [ -2, %3 ]
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2vk28DeviceMemoryHostExternalBase10deallocateEPvm(%"class.vk::DeviceMemoryHostExternalBase"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.vk::DeviceMemoryHostExternalBase", %"class.vk::DeviceMemoryHostExternalBase"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  tail call void @_ZN2vk10deallocateEPvPK21VkAllocationCallbacks(i8* %5, %struct.VkAllocationCallbacks* null) #13
  store i8* null, i8** %4, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZNK2vk28DeviceMemoryHostExternalBase10getFlagBitEv(%"class.vk::DeviceMemoryHostExternalBase"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: optsize
declare i8* @_ZN2vk8allocateEmmPK21VkAllocationCallbacks23VkSystemAllocationScope(i64, i64, %struct.VkAllocationCallbacks*, i32) local_unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind optsize readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { optsize }
attributes #13 = { nounwind optsize }
attributes #14 = { builtin nounwind optsize }
attributes #15 = { nounwind optsize readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
