; ModuleID = 'gen/third_party/blink/renderer/bindings/core/v8/v8_request_init.cc'
source_filename = "gen/third_party/blink/renderer/bindings/core/v8/v8_request_init.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.450" }
%"struct.std::__1::atomic.450" = type { %"struct.std::__1::__atomic_base.451" }
%"struct.std::__1::__atomic_base.451" = type { %"struct.std::__1::__atomic_base.452" }
%"struct.std::__1::__atomic_base.452" = type { %"struct.std::__1::__cxx_atomic_impl.453" }
%"struct.std::__1::__cxx_atomic_impl.453" = type { %"struct.std::__1::__cxx_atomic_base_impl.454" }
%"struct.std::__1::__cxx_atomic_base_impl.454" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.173", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.116", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::Worklist.47"* }
%"class.blink::Worklist.47" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.96", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.110", [4 x i8] }>
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98", %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { i64 }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { float }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.119", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.154" }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.47"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.304" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__cxx_atomic_impl.175" }
%"struct.std::__1::__cxx_atomic_impl.175" = type { %"struct.std::__1::__cxx_atomic_base_impl.176" }
%"struct.std::__1::__cxx_atomic_base_impl.176" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.6" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.6" = type { %"class.v8::TracedReference.7" }
%"class.v8::TracedReference.7" = type { %"class.v8::BasicTracedReference.8" }
%"class.v8::BasicTracedReference.8" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::RequestInit" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, %"class.blink::ScriptValue", %"class.WTF::String", %"class.WTF::String", %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member", %"class.blink::Member.234" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord" = type { i32, %"class.WTF::Vector.183", %"class.WTF::Vector.189" }
%"class.WTF::Vector.183" = type { %"class.WTF::VectorBuffer.184" }
%"class.WTF::VectorBuffer.184" = type { %"class.WTF::VectorBufferBase.185" }
%"class.WTF::VectorBufferBase.185" = type { %"struct.std::__1::pair.186"*, i32, i32 }
%"struct.std::__1::pair.186" = type opaque
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.WTF::Vector.192"*, i32, i32 }
%"class.WTF::Vector.192" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::AbortSignal"* }
%"class.blink::AbortSignal" = type { %"class.blink::EventTargetWithInlineData", i8, %"class.WTF::Vector.220", %"class.blink::HeapVector.225", %"class.blink::Member.232" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.213" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206", [32 x i8] }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair.207"*, i32, i32 }
%"struct.std::__1::pair.207" = type { %"class.WTF::AtomicString", %"class.blink::Member.208" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::HeapVector.210"* }
%"class.blink::HeapVector.210" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.WTF::Vector.216"* }
%"class.WTF::Vector.216" = type opaque
%"class.WTF::Vector.220" = type { %"class.WTF::VectorBuffer.221" }
%"class.WTF::VectorBuffer.221" = type { %"class.WTF::VectorBufferBase.222" }
%"class.WTF::VectorBufferBase.222" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.blink::HeapVector.225" = type { %"class.WTF::Vector.228" }
%"class.WTF::Vector.228" = type { %"class.WTF::VectorBuffer.229" }
%"class.WTF::VectorBuffer.229" = type { %"class.WTF::VectorBufferBase.230" }
%"class.WTF::VectorBufferBase.230" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.273", i32, i8, [3 x i8], %"class.blink::HeapVector.275", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.294", %"class.blink::Member.300", %"class.blink::Member.302", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.236" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.236" = type { %"class.WTF::HashMap.239" }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.248" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.245" }
%"class.WTF::HashTable.245" = type <{ %"class.blink::WeakMember.247"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.247" = type opaque
%"class.blink::Supplementable.248" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.249" }
%"class.blink::HeapHashMap.249" = type { %"class.WTF::HashMap.252" }
%"class.WTF::HashMap.252" = type { %"class.WTF::HashTable.253" }
%"class.WTF::HashTable.253" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type { i8*, %"class.blink::Member.319" }
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.321" }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.256, %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.263", %"class.std::__1::unique_ptr.263", %"class.blink::Member.232", i32, [4 x i8], %"class.WTF::HashSet.269", i32, i32 }
%class.scoped_refptr.256 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.273" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.275" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"class.blink::Member.281"*, i32, i32 }
%"class.blink::Member.281" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.287", i32, i32 }
%"class.blink::HeapHashMap.287" = type { %"class.WTF::HashMap.290" }
%"class.WTF::HashMap.290" = type { %"class.WTF::HashTable.291" }
%"class.WTF::HashTable.291" = type <{ %"struct.WTF::KeyValuePair.293"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.293" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.302" = type { %"class.blink::MemberBase.303" }
%"class.blink::MemberBase.303" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::TrustToken"* }
%"class.blink::TrustToken" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, %"class.WTF::Vector.192", %"class.WTF::String", i8, %"class.WTF::Vector.192", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { i8* }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.341", %"class.WTF::HashMap.341", %"class.WTF::HashMap.346", %"class.std::__1::unique_ptr.351", %"class.std::__1::unique_ptr.398", %"class.blink::Persistent.404", i8, i8, i8, %"class.WTF::Vector.220", %"class.std::__1::unique_ptr.406", %"class.blink::Persistent.412", %"class.blink::Persistent.416", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.323", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.329", %"class.std::__1::unique_ptr.335", i32, i32 }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.341" = type { %"class.WTF::HashTable.342" }
%"class.WTF::HashTable.342" = type <{ %"struct.WTF::KeyValuePair.345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.345" = type opaque
%"class.WTF::HashMap.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"struct.WTF::KeyValuePair.350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.350" = type opaque
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.359", %class.scoped_refptr.177 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.354", i8* }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.358"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.358" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.359" = type { %"class.v8::PersistentValueMapBase.360" }
%"class.v8::PersistentValueMapBase.360" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.361", i8* }
%"class.WTF::HashMap.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"struct.WTF::KeyValuePair.365"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.365" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.366", %"class.WTF::String", %"class.std::__1::unique_ptr.368" }
%"class.WTF::RefCounted.366" = type { %"class.base::RefCounted.367" }
%"class.base::RefCounted.367" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.368" = type { %"class.std::__1::__compressed_pair.369" }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.382", %"class.WTF::Vector.388", i8, i32 }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.WTF::Vector.374"* }
%"class.WTF::Vector.374" = type { %"class.WTF::VectorBuffer.375" }
%"class.WTF::VectorBuffer.375" = type { %"class.WTF::VectorBufferBase.376" }
%"class.WTF::VectorBufferBase.376" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.376", [32 x i8] }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.404" = type { %"class.blink::PersistentBase.405" }
%"class.blink::PersistentBase.405" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.433, %"class.blink::Member.434", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.433 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.434" = type { %"class.blink::MemberBase.435" }
%"class.blink::MemberBase.435" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.404" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.412" = type { %"class.blink::PersistentBase.413" }
%"class.blink::PersistentBase.413" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.416" = type { %"class.blink::PersistentBase.417" }
%"class.blink::PersistentBase.417" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.420", i64 }
%"class.blink::HeapVector.420" = type { %"class.WTF::Vector.423" }
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"struct.std::__1::pair.426"*, i32, i32 }
%"struct.std::__1::pair.426" = type { %"class.blink::UntracedMember", %"class.blink::Member.428" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.436" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_17IDLByteStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues = internal constant [6 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"no-store\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"reload\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"no-cache\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"force-cache\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"only-if-cached\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"RequestCache\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_0 = internal constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0)], align 16
@.str.8 = private unnamed_addr constant [5 x i8] c"omit\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"same-origin\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"RequestCredentials\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_1 = internal constant [4 x i8*] [i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i32 0, i32 0)], align 16
@.str.12 = private unnamed_addr constant [9 x i8] c"navigate\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"no-cors\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"cors\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"RequestMode\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_2 = internal constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0)], align 16
@.str.16 = private unnamed_addr constant [7 x i8] c"follow\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"manual\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"RequestRedirect\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_3 = internal constant [9 x i8*] [i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0)], align 16
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"no-referrer\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"no-referrer-when-downgrade\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"strict-origin\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"origin-when-cross-origin\00", align 1
@.str.26 = private unnamed_addr constant [32 x i8] c"strict-origin-when-cross-origin\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"unsafe-url\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"ReferrerPolicy\00", align 1
@.str.29 = private unnamed_addr constant [42 x i8] c"member signal is not of type AbortSignal.\00", align 1
@_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_4 = internal constant [3 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0)], align 16
@.str.30 = private unnamed_addr constant [4 x i8] c"low\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"high\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"RequestImportance\00", align 1
@_ZZN5blinkL24eternalV8RequestInitKeysEPN2v87IsolateEE5kKeys = internal constant [15 x i8*] [i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i32 0, i32 0)], align 16
@.str.34 = private unnamed_addr constant [29 x i8] c"allowHTTP1ForStreamingUpload\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"cache\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"credentials\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"headers\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"importance\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"integrity\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"keepalive\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"redirect\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"referrer\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"referrerPolicy\00", align 1
@.str.47 = private unnamed_addr constant [7 x i8] c"signal\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"trustToken\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 15, i8** getelementptr inbounds ([15 x i8*], [15 x i8*]* @_ZZN5blinkL24eternalV8RequestInitKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@.str.49 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.51 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.53 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.54 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.55 = private unnamed_addr constant [33 x i8] c"Value is not a valid ByteString.\00", align 1
@_ZN5blink13V8AbortSignal18wrapper_type_info_E = external global %"struct.blink::WrapperTypeInfo", align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::RequestInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = alloca %"class.blink::ScriptValue", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::V8StringResource", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord", align 8
  %15 = alloca %"class.blink::V8StringResource", align 8
  %16 = alloca %"class.blink::V8StringResource", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.blink::V8StringResource", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.blink::V8StringResource", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.blink::V8StringResource", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = icmp eq %"class.v8::Value"* %1, null
  br i1 %28, label %2347, label %29

29:                                               ; preds = %4
  %30 = bitcast %"class.v8::Value"* %1 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 1
  br i1 %33, label %34, label %50

34:                                               ; preds = %29
  %35 = add i64 %31, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i64 %31, -4294967296
  %39 = zext i32 %37 to i64
  %40 = or i64 %38, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load i16, i16* %42, align 2
  %44 = icmp eq i16 %43, 67
  br i1 %44, label %45, label %50

45:                                               ; preds = %34
  %46 = add i64 %31, 23
  %47 = inttoptr i64 %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = ashr i32 %48, 1
  switch i32 %49, label %50 [
    i32 5, label %2347
    i32 3, label %2347
  ]

50:                                               ; preds = %45, %34, %29
  %51 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #7
  br label %2347

53:                                               ; preds = %50
  %54 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %55 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %56 = add i64 %55, 8
  %57 = inttoptr i64 %56 to %"class.blink::V8PerIsolateData"**
  %58 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %57, align 8
  %59 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %58, i8* bitcast ([15 x i8*]* @_ZZN5blinkL24eternalV8RequestInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.436"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.436"*)) #7
  %60 = extractvalue { i64, %"class.v8::Eternal"* } %59, 1
  %61 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %62 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %63 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %62) #7
  %64 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 1, i32 0
  %65 = bitcast %"class.v8::Name"** %64 to %"class.v8::Value"**
  %66 = load %"class.v8::Value"*, %"class.v8::Value"** %65, align 8
  %67 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %66) #7
  %68 = icmp eq %"class.v8::Value"* %67, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %53
  %70 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %71 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %72 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %72, i64 5
  %74 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %73, align 8
  call void %74(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %70) #7
  br label %2346

75:                                               ; preds = %53
  %76 = bitcast %"class.v8::Value"* %67 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = and i64 %77, 3
  %79 = icmp eq i64 %78, 1
  br i1 %79, label %80, label %97

80:                                               ; preds = %75
  %81 = add i64 %77, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = and i64 %77, -4294967296
  %85 = zext i32 %83 to i64
  %86 = or i64 %84, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 67
  br i1 %90, label %91, label %97

91:                                               ; preds = %80
  %92 = add i64 %77, 23
  %93 = inttoptr i64 %92 to i32*
  %94 = load i32, i32* %93, align 4
  %95 = and i32 %94, -2
  %96 = icmp eq i32 %95, 10
  br i1 %96, label %141, label %97

97:                                               ; preds = %80, %75, %91
  %98 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #7
  %99 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 0
  %100 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %102 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  %103 = bitcast %"class.blink::WorldSafeV8Reference"* %102 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %103, i8 -86, i64 16, i1 false)
  store %"class.v8::Isolate"* %0, %"class.v8::Isolate"** %99, align 8
  %104 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %104, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %67) #7
  %105 = bitcast %"class.blink::ScriptValue"* %6 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::ScriptValue"* %7 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1
  %109 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %108, i64 0, i32 0
  %110 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %110, align 8
  %111 = load i64*, i64** %100, align 8
  %112 = icmp eq i64* %111, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %97
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %100, i64** %110) #7
  br label %114

114:                                              ; preds = %113, %97
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %109) #7
  %115 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %101, align 8
  %116 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %7, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %115, %"class.blink::DOMWrapperWorld"** %116, align 8
  %117 = icmp eq %"class.blink::DOMWrapperWorld"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %115, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %119) #7
  br label %120

120:                                              ; preds = %114, %118
  call void @_ZN5blink11RequestInit7setBodyENS_11ScriptValueE(%"class.blink::RequestInit"* %2, %"class.blink::ScriptValue"* nonnull %7) #7
  %121 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %116, align 8
  %122 = icmp eq %"class.blink::DOMWrapperWorld"* %121, null
  br i1 %122, label %130, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %121, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %124) #7
  %125 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %121) #7
  %129 = bitcast %"class.blink::DOMWrapperWorld"* %121 to i8*
  call void @free(i8* %129) #7
  br label %130

130:                                              ; preds = %120, %123, %128
  %131 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %101, align 8
  %132 = icmp eq %"class.blink::DOMWrapperWorld"* %131, null
  br i1 %132, label %140, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %131, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #7
  %135 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %131) #7
  %139 = bitcast %"class.blink::DOMWrapperWorld"* %131 to i8*
  call void @free(i8* %139) #7
  br label %140

140:                                              ; preds = %130, %133, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #7
  br label %141

141:                                              ; preds = %91, %140
  %142 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 2, i32 0
  %143 = bitcast %"class.v8::Name"** %142 to %"class.v8::Value"**
  %144 = load %"class.v8::Value"*, %"class.v8::Value"** %143, align 8
  %145 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %144) #7
  %146 = icmp eq %"class.v8::Value"* %145, null
  br i1 %146, label %147, label %153

147:                                              ; preds = %141
  %148 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %149 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %150 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %150, i64 5
  %152 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %151, align 8
  call void %152(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %148) #7
  br label %2346

153:                                              ; preds = %141
  %154 = bitcast %"class.v8::Value"* %145 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 3
  %157 = icmp eq i64 %156, 1
  br i1 %157, label %158, label %175

158:                                              ; preds = %153
  %159 = add i64 %155, -1
  %160 = inttoptr i64 %159 to i32*
  %161 = load i32, i32* %160, align 4
  %162 = and i64 %155, -4294967296
  %163 = zext i32 %161 to i64
  %164 = or i64 %162, %163
  %165 = add i64 %164, 7
  %166 = inttoptr i64 %165 to i16*
  %167 = load i16, i16* %166, align 2
  %168 = icmp eq i16 %167, 67
  br i1 %168, label %169, label %175

169:                                              ; preds = %158
  %170 = add i64 %155, 23
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i32 %172, -2
  %174 = icmp eq i32 %173, 10
  br i1 %174, label %381, label %175

175:                                              ; preds = %158, %153, %169
  %176 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %176) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 -86, i64 152, i1 false)
  %177 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %145, %"class.v8::Value"** %177, align 8
  %178 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %178, align 8
  %179 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %179, align 8
  %180 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %181 = bitcast %"class.std::__1::unique_ptr.312"* %180 to i64*
  store i64 0, i64* %181, align 8
  %182 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %182, label %183, label %359

183:                                              ; preds = %175
  %184 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #7
  %185 = load %"class.v8::Value"*, %"class.v8::Value"** %177, align 8
  %186 = icmp eq %"class.v8::Value"* %185, null
  br i1 %186, label %191, label %187, !prof !2

187:                                              ; preds = %183
  %188 = bitcast %"class.v8::Value"* %185 to %"class.v8::String"*
  %189 = load i32, i32* %178, align 8
  %190 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %188, i32 %189) #7
  br label %211

191:                                              ; preds = %183
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #7
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !2

208:                                              ; preds = %199
  call void @llvm.trap() #7
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %187, %191, %194, %209
  %212 = phi %"class.WTF::StringImpl"* [ %190, %187 ], [ null, %191 ], [ %192, %194 ], [ %192, %209 ]
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %213, align 8
  %214 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i64 12) #7
  %215 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %9, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 6, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %211
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #7
  br label %232

232:                                              ; preds = %211, %228, %231
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #7
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #7
  br label %248

248:                                              ; preds = %232, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #7
  br i1 %215, label %249, label %359

249:                                              ; preds = %248
  %250 = load %"class.v8::Value"*, %"class.v8::Value"** %177, align 8
  %251 = icmp eq %"class.v8::Value"* %250, null
  br i1 %251, label %252, label %276, !prof !2

252:                                              ; preds = %249
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %255, label %257

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 6
  br label %301

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %257
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #7
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !2

271:                                              ; preds = %262
  call void @llvm.trap() #7
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %257, %272
  %275 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 6
  br label %282

276:                                              ; preds = %249
  %277 = bitcast %"class.v8::Value"* %250 to %"class.v8::String"*
  %278 = load i32, i32* %178, align 8
  %279 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %277, i32 %278) #7
  %280 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 6
  %281 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %281, label %301, label %282

282:                                              ; preds = %274, %276
  %283 = phi %"class.WTF::String"* [ %275, %274 ], [ %280, %276 ]
  %284 = phi %"class.WTF::StringImpl"* [ %253, %274 ], [ %279, %276 ]
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %282
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i33
  %293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #7
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !2

298:                                              ; preds = %289
  call void @llvm.trap() #7
  unreachable

299:                                              ; preds = %289
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %290, align 4
  br label %301

301:                                              ; preds = %255, %299, %282, %276
  %302 = phi i1 [ false, %299 ], [ false, %282 ], [ true, %276 ], [ true, %255 ]
  %303 = phi %"class.WTF::String"* [ %283, %299 ], [ %283, %282 ], [ %280, %276 ], [ %256, %255 ]
  %304 = phi %"class.WTF::StringImpl"* [ %284, %299 ], [ %284, %282 ], [ null, %276 ], [ null, %255 ]
  %305 = ptrtoint %"class.WTF::StringImpl"* %304 to i64
  %306 = bitcast %"class.WTF::String"* %303 to i64*
  %307 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %303, i64 0, i32 0, i32 0
  %308 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %307, align 8
  store i64 %305, i64* %306, align 8
  %309 = icmp eq %"class.WTF::StringImpl"* %308, null
  br i1 %309, label %323, label %310

310:                                              ; preds = %301
  %311 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = load atomic i32, i32* %311 monotonic, align 4
  %313 = and i32 %312, 2
  %314 = icmp eq i32 %313, 0
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %308, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  br i1 %314, label %317, label %319

317:                                              ; preds = %310
  %318 = add i32 %316, -1
  store i32 %318, i32* %315, align 4
  br label %319

319:                                              ; preds = %317, %310
  %320 = phi i32 [ %318, %317 ], [ %316, %310 ]
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %323

322:                                              ; preds = %319
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %308) #7
  br label %323

323:                                              ; preds = %301, %319, %322
  br i1 %302, label %337, label %324

324:                                              ; preds = %323
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %304, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %324
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %324
  %334 = phi i32 [ %332, %331 ], [ %330, %324 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %337

336:                                              ; preds = %333
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %304) #7
  br label %337

337:                                              ; preds = %323, %333, %336
  %338 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %339 = load i8*, i8** %338, align 8
  store i8* null, i8** %338, align 8
  %340 = icmp eq i8* %339, null
  br i1 %340, label %342, label %341

341:                                              ; preds = %337
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %339) #7
  br label %342

342:                                              ; preds = %341, %337
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %358, label %345

345:                                              ; preds = %342
  %346 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %347 = load atomic i32, i32* %346 monotonic, align 4
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 0
  %351 = load i32, i32* %350, align 4
  br i1 %349, label %352, label %354

352:                                              ; preds = %345
  %353 = add i32 %351, -1
  store i32 %353, i32* %350, align 4
  br label %354

354:                                              ; preds = %352, %345
  %355 = phi i32 [ %353, %352 ], [ %351, %345 ]
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %357, label %358

357:                                              ; preds = %354
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %343) #7
  br label %358

358:                                              ; preds = %342, %354, %357
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %176) #7
  br label %381

359:                                              ; preds = %248, %175
  %360 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %361 = load i8*, i8** %360, align 8
  store i8* null, i8** %360, align 8
  %362 = icmp eq i8* %361, null
  br i1 %362, label %364, label %363

363:                                              ; preds = %359
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %361) #7
  br label %364

364:                                              ; preds = %363, %359
  %365 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %366 = icmp eq %"class.WTF::StringImpl"* %365, null
  br i1 %366, label %380, label %367

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = load atomic i32, i32* %368 monotonic, align 4
  %370 = and i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %365, i64 0, i32 0
  %373 = load i32, i32* %372, align 4
  br i1 %371, label %374, label %376

374:                                              ; preds = %367
  %375 = add i32 %373, -1
  store i32 %375, i32* %372, align 4
  br label %376

376:                                              ; preds = %374, %367
  %377 = phi i32 [ %375, %374 ], [ %373, %367 ]
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %379, label %380

379:                                              ; preds = %376
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %365) #7
  br label %380

380:                                              ; preds = %364, %376, %379
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %176) #7
  br label %2346

381:                                              ; preds = %358, %169
  %382 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 3, i32 0
  %383 = bitcast %"class.v8::Name"** %382 to %"class.v8::Value"**
  %384 = load %"class.v8::Value"*, %"class.v8::Value"** %383, align 8
  %385 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %384) #7
  %386 = icmp eq %"class.v8::Value"* %385, null
  br i1 %386, label %387, label %393

387:                                              ; preds = %381
  %388 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %389 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %390 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %389, align 8
  %391 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %390, i64 5
  %392 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %391, align 8
  call void %392(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %388) #7
  br label %2346

393:                                              ; preds = %381
  %394 = bitcast %"class.v8::Value"* %385 to i64*
  %395 = load i64, i64* %394, align 8
  %396 = and i64 %395, 3
  %397 = icmp eq i64 %396, 1
  br i1 %397, label %398, label %415

398:                                              ; preds = %393
  %399 = add i64 %395, -1
  %400 = inttoptr i64 %399 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = and i64 %395, -4294967296
  %403 = zext i32 %401 to i64
  %404 = or i64 %402, %403
  %405 = add i64 %404, 7
  %406 = inttoptr i64 %405 to i16*
  %407 = load i16, i16* %406, align 2
  %408 = icmp eq i16 %407, 67
  br i1 %408, label %409, label %415

409:                                              ; preds = %398
  %410 = add i64 %395, 23
  %411 = inttoptr i64 %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = and i32 %412, -2
  %414 = icmp eq i32 %413, 10
  br i1 %414, label %621, label %415

415:                                              ; preds = %398, %393, %409
  %416 = bitcast %"class.blink::V8StringResource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %416) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %416, i8 -86, i64 152, i1 false)
  %417 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %385, %"class.v8::Value"** %417, align 8
  %418 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 1
  store i32 0, i32* %418, align 8
  %419 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %419, align 8
  %420 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1
  %421 = bitcast %"class.std::__1::unique_ptr.312"* %420 to i64*
  store i64 0, i64* %421, align 8
  %422 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %11, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %422, label %423, label %599

423:                                              ; preds = %415
  %424 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %424) #7
  %425 = load %"class.v8::Value"*, %"class.v8::Value"** %417, align 8
  %426 = icmp eq %"class.v8::Value"* %425, null
  br i1 %426, label %431, label %427, !prof !2

427:                                              ; preds = %423
  %428 = bitcast %"class.v8::Value"* %425 to %"class.v8::String"*
  %429 = load i32, i32* %418, align 8
  %430 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %428, i32 %429) #7
  br label %451

431:                                              ; preds = %423
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %419, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %432, null
  br i1 %433, label %451, label %434

434:                                              ; preds = %431
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  br i1 %438, label %439, label %451

439:                                              ; preds = %434
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  %442 = zext i32 %441 to i33
  %443 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %442, i33 1) #7
  %444 = extractvalue { i33, i1 } %443, 1
  %445 = extractvalue { i33, i1 } %443, 0
  %446 = icmp slt i33 %445, 0
  %447 = or i1 %444, %446
  br i1 %447, label %448, label %449, !prof !2

448:                                              ; preds = %439
  call void @llvm.trap() #7
  unreachable

449:                                              ; preds = %439
  %450 = trunc i33 %445 to i32
  store i32 %450, i32* %440, align 4
  br label %451

451:                                              ; preds = %427, %431, %434, %449
  %452 = phi %"class.WTF::StringImpl"* [ %430, %427 ], [ null, %431 ], [ %432, %434 ], [ %432, %449 ]
  %453 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %452, %"class.WTF::StringImpl"** %453, align 8
  %454 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i64 18) #7
  %455 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %12, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %456 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %451
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #7
  br label %472

472:                                              ; preds = %451, %468, %471
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #7
  %473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8
  %474 = icmp eq %"class.WTF::StringImpl"* %473, null
  br i1 %474, label %488, label %475

475:                                              ; preds = %472
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = load atomic i32, i32* %476 monotonic, align 4
  %478 = and i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  br i1 %479, label %482, label %484

482:                                              ; preds = %475
  %483 = add i32 %481, -1
  store i32 %483, i32* %480, align 4
  br label %484

484:                                              ; preds = %482, %475
  %485 = phi i32 [ %483, %482 ], [ %481, %475 ]
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %473) #7
  br label %488

488:                                              ; preds = %472, %484, %487
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %424) #7
  br i1 %455, label %489, label %599

489:                                              ; preds = %488
  %490 = load %"class.v8::Value"*, %"class.v8::Value"** %417, align 8
  %491 = icmp eq %"class.v8::Value"* %490, null
  br i1 %491, label %492, label %516, !prof !2

492:                                              ; preds = %489
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %419, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %495, label %497

495:                                              ; preds = %492
  %496 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 7
  br label %541

497:                                              ; preds = %492
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %499 = load atomic i32, i32* %498 monotonic, align 4
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  br i1 %501, label %502, label %514

502:                                              ; preds = %497
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  %505 = zext i32 %504 to i33
  %506 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %505, i33 1) #7
  %507 = extractvalue { i33, i1 } %506, 1
  %508 = extractvalue { i33, i1 } %506, 0
  %509 = icmp slt i33 %508, 0
  %510 = or i1 %507, %509
  br i1 %510, label %511, label %512, !prof !2

511:                                              ; preds = %502
  call void @llvm.trap() #7
  unreachable

512:                                              ; preds = %502
  %513 = trunc i33 %508 to i32
  store i32 %513, i32* %503, align 4
  br label %514

514:                                              ; preds = %497, %512
  %515 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 7
  br label %522

516:                                              ; preds = %489
  %517 = bitcast %"class.v8::Value"* %490 to %"class.v8::String"*
  %518 = load i32, i32* %418, align 8
  %519 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %517, i32 %518) #7
  %520 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 7
  %521 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %521, label %541, label %522

522:                                              ; preds = %514, %516
  %523 = phi %"class.WTF::String"* [ %515, %514 ], [ %520, %516 ]
  %524 = phi %"class.WTF::StringImpl"* [ %493, %514 ], [ %519, %516 ]
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %524, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %526 = load atomic i32, i32* %525 monotonic, align 4
  %527 = and i32 %526, 2
  %528 = icmp eq i32 %527, 0
  br i1 %528, label %529, label %541

529:                                              ; preds = %522
  %530 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %524, i64 0, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = zext i32 %531 to i33
  %533 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %532, i33 1) #7
  %534 = extractvalue { i33, i1 } %533, 1
  %535 = extractvalue { i33, i1 } %533, 0
  %536 = icmp slt i33 %535, 0
  %537 = or i1 %534, %536
  br i1 %537, label %538, label %539, !prof !2

538:                                              ; preds = %529
  call void @llvm.trap() #7
  unreachable

539:                                              ; preds = %529
  %540 = trunc i33 %535 to i32
  store i32 %540, i32* %530, align 4
  br label %541

541:                                              ; preds = %495, %539, %522, %516
  %542 = phi i1 [ false, %539 ], [ false, %522 ], [ true, %516 ], [ true, %495 ]
  %543 = phi %"class.WTF::String"* [ %523, %539 ], [ %523, %522 ], [ %520, %516 ], [ %496, %495 ]
  %544 = phi %"class.WTF::StringImpl"* [ %524, %539 ], [ %524, %522 ], [ null, %516 ], [ null, %495 ]
  %545 = ptrtoint %"class.WTF::StringImpl"* %544 to i64
  %546 = bitcast %"class.WTF::String"* %543 to i64*
  %547 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %543, i64 0, i32 0, i32 0
  %548 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %547, align 8
  store i64 %545, i64* %546, align 8
  %549 = icmp eq %"class.WTF::StringImpl"* %548, null
  br i1 %549, label %563, label %550

550:                                              ; preds = %541
  %551 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %552 = load atomic i32, i32* %551 monotonic, align 4
  %553 = and i32 %552, 2
  %554 = icmp eq i32 %553, 0
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 0
  %556 = load i32, i32* %555, align 4
  br i1 %554, label %557, label %559

557:                                              ; preds = %550
  %558 = add i32 %556, -1
  store i32 %558, i32* %555, align 4
  br label %559

559:                                              ; preds = %557, %550
  %560 = phi i32 [ %558, %557 ], [ %556, %550 ]
  %561 = icmp eq i32 %560, 0
  br i1 %561, label %562, label %563

562:                                              ; preds = %559
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %548) #7
  br label %563

563:                                              ; preds = %541, %559, %562
  br i1 %542, label %577, label %564

564:                                              ; preds = %563
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %566 = load atomic i32, i32* %565 monotonic, align 4
  %567 = and i32 %566, 2
  %568 = icmp eq i32 %567, 0
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %544, i64 0, i32 0
  %570 = load i32, i32* %569, align 4
  br i1 %568, label %571, label %573

571:                                              ; preds = %564
  %572 = add i32 %570, -1
  store i32 %572, i32* %569, align 4
  br label %573

573:                                              ; preds = %571, %564
  %574 = phi i32 [ %572, %571 ], [ %570, %564 ]
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %577

576:                                              ; preds = %573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %544) #7
  br label %577

577:                                              ; preds = %563, %573, %576
  %578 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %579 = load i8*, i8** %578, align 8
  store i8* null, i8** %578, align 8
  %580 = icmp eq i8* %579, null
  br i1 %580, label %582, label %581

581:                                              ; preds = %577
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %579) #7
  br label %582

582:                                              ; preds = %581, %577
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %419, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %598, label %585

585:                                              ; preds = %582
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  br i1 %589, label %592, label %594

592:                                              ; preds = %585
  %593 = add i32 %591, -1
  store i32 %593, i32* %590, align 4
  br label %594

594:                                              ; preds = %592, %585
  %595 = phi i32 [ %593, %592 ], [ %591, %585 ]
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %598

597:                                              ; preds = %594
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %583) #7
  br label %598

598:                                              ; preds = %582, %594, %597
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %416) #7
  br label %621

599:                                              ; preds = %488, %415
  %600 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %11, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %601 = load i8*, i8** %600, align 8
  store i8* null, i8** %600, align 8
  %602 = icmp eq i8* %601, null
  br i1 %602, label %604, label %603

603:                                              ; preds = %599
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %601) #7
  br label %604

604:                                              ; preds = %603, %599
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %419, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %605, null
  br i1 %606, label %620, label %607

607:                                              ; preds = %604
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = load atomic i32, i32* %608 monotonic, align 4
  %610 = and i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 0
  %613 = load i32, i32* %612, align 4
  br i1 %611, label %614, label %616

614:                                              ; preds = %607
  %615 = add i32 %613, -1
  store i32 %615, i32* %612, align 4
  br label %616

616:                                              ; preds = %614, %607
  %617 = phi i32 [ %615, %614 ], [ %613, %607 ]
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %616
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %605) #7
  br label %620

620:                                              ; preds = %604, %616, %619
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %416) #7
  br label %2346

621:                                              ; preds = %598, %409
  %622 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 4, i32 0
  %623 = bitcast %"class.v8::Name"** %622 to %"class.v8::Value"**
  %624 = load %"class.v8::Value"*, %"class.v8::Value"** %623, align 8
  %625 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %624) #7
  %626 = icmp eq %"class.v8::Value"* %625, null
  br i1 %626, label %627, label %633

627:                                              ; preds = %621
  %628 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %629 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %630 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %629, align 8
  %631 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %630, i64 5
  %632 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %631, align 8
  call void %632(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %628) #7
  br label %2346

633:                                              ; preds = %621
  %634 = bitcast %"class.v8::Value"* %625 to i64*
  %635 = load i64, i64* %634, align 8
  %636 = and i64 %635, 3
  %637 = icmp eq i64 %636, 1
  br i1 %637, label %638, label %655

638:                                              ; preds = %633
  %639 = add i64 %635, -1
  %640 = inttoptr i64 %639 to i32*
  %641 = load i32, i32* %640, align 4
  %642 = and i64 %635, -4294967296
  %643 = zext i32 %641 to i64
  %644 = or i64 %642, %643
  %645 = add i64 %644, 7
  %646 = inttoptr i64 %645 to i16*
  %647 = load i16, i16* %646, align 2
  %648 = icmp eq i16 %647, 67
  br i1 %648, label %649, label %655

649:                                              ; preds = %638
  %650 = add i64 %635, 23
  %651 = inttoptr i64 %650 to i32*
  %652 = load i32, i32* %651, align 4
  %653 = and i32 %652, -2
  %654 = icmp eq i32 %653, 10
  br i1 %654, label %662, label %655

655:                                              ; preds = %638, %633, %649
  %656 = bitcast %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %656) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %656, i8 -86, i64 40, i1 false)
  call void @_ZN5blink54ByteStringSequenceSequenceOrByteStringByteStringRecordC1Ev(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* nonnull %14) #7
  call void @_ZN5blink56V8ByteStringSequenceSequenceOrByteStringByteStringRecord6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %625, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* nonnull dereferenceable(40) %14, i32 1, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %657 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %658 = load i32, i32* %657, align 8
  %659 = icmp eq i32 %658, 0
  br i1 %659, label %660, label %661

660:                                              ; preds = %655
  call void @_ZN5blink11RequestInit10setHeadersERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordE(%"class.blink::RequestInit"* %2, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* nonnull dereferenceable(40) %14) #7
  call void @_ZN5blink54ByteStringSequenceSequenceOrByteStringByteStringRecordD1Ev(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %656) #7
  br label %662

661:                                              ; preds = %655
  call void @_ZN5blink54ByteStringSequenceSequenceOrByteStringByteStringRecordD1Ev(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %656) #7
  br label %2346

662:                                              ; preds = %660, %649
  %663 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 6, i32 0
  %664 = bitcast %"class.v8::Name"** %663 to %"class.v8::Value"**
  %665 = load %"class.v8::Value"*, %"class.v8::Value"** %664, align 8
  %666 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %665) #7
  %667 = icmp eq %"class.v8::Value"* %666, null
  br i1 %667, label %668, label %674

668:                                              ; preds = %662
  %669 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %670 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %671 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %670, align 8
  %672 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %671, i64 5
  %673 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %672, align 8
  call void %673(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %669) #7
  br label %2346

674:                                              ; preds = %662
  %675 = bitcast %"class.v8::Value"* %666 to i64*
  %676 = load i64, i64* %675, align 8
  %677 = and i64 %676, 3
  %678 = icmp eq i64 %677, 1
  br i1 %678, label %679, label %696

679:                                              ; preds = %674
  %680 = add i64 %676, -1
  %681 = inttoptr i64 %680 to i32*
  %682 = load i32, i32* %681, align 4
  %683 = and i64 %676, -4294967296
  %684 = zext i32 %682 to i64
  %685 = or i64 %683, %684
  %686 = add i64 %685, 7
  %687 = inttoptr i64 %686 to i16*
  %688 = load i16, i16* %687, align 2
  %689 = icmp eq i16 %688, 67
  br i1 %689, label %690, label %696

690:                                              ; preds = %679
  %691 = add i64 %676, 23
  %692 = inttoptr i64 %691 to i32*
  %693 = load i32, i32* %692, align 4
  %694 = and i32 %693, -2
  %695 = icmp eq i32 %694, 10
  br i1 %695, label %836, label %696

696:                                              ; preds = %679, %674, %690
  %697 = bitcast %"class.blink::V8StringResource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %697) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %697, i8 -86, i64 152, i1 false)
  %698 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %666, %"class.v8::Value"** %698, align 8
  %699 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 1
  store i32 0, i32* %699, align 8
  %700 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %700, align 8
  %701 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1
  %702 = bitcast %"class.std::__1::unique_ptr.312"* %701 to i64*
  store i64 0, i64* %702, align 8
  %703 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %703, label %704, label %814

704:                                              ; preds = %696
  %705 = load %"class.v8::Value"*, %"class.v8::Value"** %698, align 8
  %706 = icmp eq %"class.v8::Value"* %705, null
  br i1 %706, label %707, label %731, !prof !2

707:                                              ; preds = %704
  %708 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %700, align 8
  %709 = icmp eq %"class.WTF::StringImpl"* %708, null
  br i1 %709, label %710, label %712

710:                                              ; preds = %707
  %711 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 10
  br label %756

712:                                              ; preds = %707
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %714 = load atomic i32, i32* %713 monotonic, align 4
  %715 = and i32 %714, 2
  %716 = icmp eq i32 %715, 0
  br i1 %716, label %717, label %729

717:                                              ; preds = %712
  %718 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %708, i64 0, i32 0
  %719 = load i32, i32* %718, align 4
  %720 = zext i32 %719 to i33
  %721 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %720, i33 1) #7
  %722 = extractvalue { i33, i1 } %721, 1
  %723 = extractvalue { i33, i1 } %721, 0
  %724 = icmp slt i33 %723, 0
  %725 = or i1 %722, %724
  br i1 %725, label %726, label %727, !prof !2

726:                                              ; preds = %717
  call void @llvm.trap() #7
  unreachable

727:                                              ; preds = %717
  %728 = trunc i33 %723 to i32
  store i32 %728, i32* %718, align 4
  br label %729

729:                                              ; preds = %712, %727
  %730 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 10
  br label %737

731:                                              ; preds = %704
  %732 = bitcast %"class.v8::Value"* %705 to %"class.v8::String"*
  %733 = load i32, i32* %699, align 8
  %734 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %732, i32 %733) #7
  %735 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 10
  %736 = icmp eq %"class.WTF::StringImpl"* %734, null
  br i1 %736, label %756, label %737

737:                                              ; preds = %729, %731
  %738 = phi %"class.WTF::String"* [ %730, %729 ], [ %735, %731 ]
  %739 = phi %"class.WTF::StringImpl"* [ %708, %729 ], [ %734, %731 ]
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  br i1 %743, label %744, label %756

744:                                              ; preds = %737
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %739, i64 0, i32 0
  %746 = load i32, i32* %745, align 4
  %747 = zext i32 %746 to i33
  %748 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %747, i33 1) #7
  %749 = extractvalue { i33, i1 } %748, 1
  %750 = extractvalue { i33, i1 } %748, 0
  %751 = icmp slt i33 %750, 0
  %752 = or i1 %749, %751
  br i1 %752, label %753, label %754, !prof !2

753:                                              ; preds = %744
  call void @llvm.trap() #7
  unreachable

754:                                              ; preds = %744
  %755 = trunc i33 %750 to i32
  store i32 %755, i32* %745, align 4
  br label %756

756:                                              ; preds = %710, %754, %737, %731
  %757 = phi i1 [ false, %754 ], [ false, %737 ], [ true, %731 ], [ true, %710 ]
  %758 = phi %"class.WTF::String"* [ %738, %754 ], [ %738, %737 ], [ %735, %731 ], [ %711, %710 ]
  %759 = phi %"class.WTF::StringImpl"* [ %739, %754 ], [ %739, %737 ], [ null, %731 ], [ null, %710 ]
  %760 = ptrtoint %"class.WTF::StringImpl"* %759 to i64
  %761 = bitcast %"class.WTF::String"* %758 to i64*
  %762 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %758, i64 0, i32 0, i32 0
  %763 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %762, align 8
  store i64 %760, i64* %761, align 8
  %764 = icmp eq %"class.WTF::StringImpl"* %763, null
  br i1 %764, label %778, label %765

765:                                              ; preds = %756
  %766 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %767 = load atomic i32, i32* %766 monotonic, align 4
  %768 = and i32 %767, 2
  %769 = icmp eq i32 %768, 0
  %770 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %763, i64 0, i32 0
  %771 = load i32, i32* %770, align 4
  br i1 %769, label %772, label %774

772:                                              ; preds = %765
  %773 = add i32 %771, -1
  store i32 %773, i32* %770, align 4
  br label %774

774:                                              ; preds = %772, %765
  %775 = phi i32 [ %773, %772 ], [ %771, %765 ]
  %776 = icmp eq i32 %775, 0
  br i1 %776, label %777, label %778

777:                                              ; preds = %774
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %763) #7
  br label %778

778:                                              ; preds = %756, %774, %777
  br i1 %757, label %792, label %779

779:                                              ; preds = %778
  %780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %781 = load atomic i32, i32* %780 monotonic, align 4
  %782 = and i32 %781, 2
  %783 = icmp eq i32 %782, 0
  %784 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %759, i64 0, i32 0
  %785 = load i32, i32* %784, align 4
  br i1 %783, label %786, label %788

786:                                              ; preds = %779
  %787 = add i32 %785, -1
  store i32 %787, i32* %784, align 4
  br label %788

788:                                              ; preds = %786, %779
  %789 = phi i32 [ %787, %786 ], [ %785, %779 ]
  %790 = icmp eq i32 %789, 0
  br i1 %790, label %791, label %792

791:                                              ; preds = %788
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %759) #7
  br label %792

792:                                              ; preds = %778, %788, %791
  %793 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %794 = load i8*, i8** %793, align 8
  store i8* null, i8** %793, align 8
  %795 = icmp eq i8* %794, null
  br i1 %795, label %797, label %796

796:                                              ; preds = %792
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %794) #7
  br label %797

797:                                              ; preds = %796, %792
  %798 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %700, align 8
  %799 = icmp eq %"class.WTF::StringImpl"* %798, null
  br i1 %799, label %813, label %800

800:                                              ; preds = %797
  %801 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %798, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %802 = load atomic i32, i32* %801 monotonic, align 4
  %803 = and i32 %802, 2
  %804 = icmp eq i32 %803, 0
  %805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %798, i64 0, i32 0
  %806 = load i32, i32* %805, align 4
  br i1 %804, label %807, label %809

807:                                              ; preds = %800
  %808 = add i32 %806, -1
  store i32 %808, i32* %805, align 4
  br label %809

809:                                              ; preds = %807, %800
  %810 = phi i32 [ %808, %807 ], [ %806, %800 ]
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %812, label %813

812:                                              ; preds = %809
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %798) #7
  br label %813

813:                                              ; preds = %797, %809, %812
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %697) #7
  br label %836

814:                                              ; preds = %696
  %815 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %816 = load i8*, i8** %815, align 8
  store i8* null, i8** %815, align 8
  %817 = icmp eq i8* %816, null
  br i1 %817, label %819, label %818

818:                                              ; preds = %814
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %816) #7
  br label %819

819:                                              ; preds = %818, %814
  %820 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %700, align 8
  %821 = icmp eq %"class.WTF::StringImpl"* %820, null
  br i1 %821, label %835, label %822

822:                                              ; preds = %819
  %823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %824 = load atomic i32, i32* %823 monotonic, align 4
  %825 = and i32 %824, 2
  %826 = icmp eq i32 %825, 0
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %820, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  br i1 %826, label %829, label %831

829:                                              ; preds = %822
  %830 = add i32 %828, -1
  store i32 %830, i32* %827, align 4
  br label %831

831:                                              ; preds = %829, %822
  %832 = phi i32 [ %830, %829 ], [ %828, %822 ]
  %833 = icmp eq i32 %832, 0
  br i1 %833, label %834, label %835

834:                                              ; preds = %831
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %820) #7
  br label %835

835:                                              ; preds = %819, %831, %834
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %697) #7
  br label %2346

836:                                              ; preds = %813, %690
  %837 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 7, i32 0
  %838 = bitcast %"class.v8::Name"** %837 to %"class.v8::Value"**
  %839 = load %"class.v8::Value"*, %"class.v8::Value"** %838, align 8
  %840 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %839) #7
  %841 = icmp eq %"class.v8::Value"* %840, null
  br i1 %841, label %842, label %848

842:                                              ; preds = %836
  %843 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %844 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %845 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %844, align 8
  %846 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %845, i64 5
  %847 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %846, align 8
  call void %847(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %843) #7
  br label %2346

848:                                              ; preds = %836
  %849 = bitcast %"class.v8::Value"* %840 to i64*
  %850 = load i64, i64* %849, align 8
  %851 = and i64 %850, 3
  %852 = icmp eq i64 %851, 1
  br i1 %852, label %853, label %870

853:                                              ; preds = %848
  %854 = add i64 %850, -1
  %855 = inttoptr i64 %854 to i32*
  %856 = load i32, i32* %855, align 4
  %857 = and i64 %850, -4294967296
  %858 = zext i32 %856 to i64
  %859 = or i64 %857, %858
  %860 = add i64 %859, 7
  %861 = inttoptr i64 %860 to i16*
  %862 = load i16, i16* %861, align 2
  %863 = icmp eq i16 %862, 67
  br i1 %863, label %864, label %870

864:                                              ; preds = %853
  %865 = add i64 %850, 23
  %866 = inttoptr i64 %865 to i32*
  %867 = load i32, i32* %866, align 4
  %868 = and i32 %867, -2
  %869 = icmp eq i32 %868, 10
  br i1 %869, label %886, label %870

870:                                              ; preds = %853, %848, %864
  %871 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %840) #7
  br i1 %871, label %872, label %875, !prof !3

872:                                              ; preds = %870
  %873 = bitcast %"class.v8::Value"* %840 to %"class.v8::Boolean"*
  %874 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %873) #7
  br label %877

875:                                              ; preds = %870
  %876 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %840, %"class.v8::Isolate"* %0) #7
  br label %877

877:                                              ; preds = %872, %875
  %878 = phi i1 [ %874, %872 ], [ %876, %875 ]
  %879 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %880 = load i32, i32* %879, align 8
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %2346

882:                                              ; preds = %877
  %883 = zext i1 %878 to i8
  %884 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 11
  store i8 %883, i8* %884, align 8
  %885 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 2
  store i8 1, i8* %885, align 1
  br label %886

886:                                              ; preds = %882, %864
  %887 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 8, i32 0
  %888 = bitcast %"class.v8::Name"** %887 to %"class.v8::Value"**
  %889 = load %"class.v8::Value"*, %"class.v8::Value"** %888, align 8
  %890 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %889) #7
  %891 = icmp eq %"class.v8::Value"* %890, null
  br i1 %891, label %892, label %898

892:                                              ; preds = %886
  %893 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %894 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %895 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %894, align 8
  %896 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %895, i64 5
  %897 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %896, align 8
  call void %897(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %893) #7
  br label %2346

898:                                              ; preds = %886
  %899 = bitcast %"class.v8::Value"* %890 to i64*
  %900 = load i64, i64* %899, align 8
  %901 = and i64 %900, 3
  %902 = icmp eq i64 %901, 1
  br i1 %902, label %903, label %920

903:                                              ; preds = %898
  %904 = add i64 %900, -1
  %905 = inttoptr i64 %904 to i32*
  %906 = load i32, i32* %905, align 4
  %907 = and i64 %900, -4294967296
  %908 = zext i32 %906 to i64
  %909 = or i64 %907, %908
  %910 = add i64 %909, 7
  %911 = inttoptr i64 %910 to i16*
  %912 = load i16, i16* %911, align 2
  %913 = icmp eq i16 %912, 67
  br i1 %913, label %914, label %920

914:                                              ; preds = %903
  %915 = add i64 %900, 23
  %916 = inttoptr i64 %915 to i32*
  %917 = load i32, i32* %916, align 4
  %918 = and i32 %917, -2
  %919 = icmp eq i32 %918, 10
  br i1 %919, label %1056, label %920

920:                                              ; preds = %903, %898, %914
  %921 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_17IDLByteStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %890, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %922 = icmp eq %"class.WTF::StringImpl"* %921, null
  br i1 %922, label %952, label %923

923:                                              ; preds = %920
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %925 = load atomic i32, i32* %924 monotonic, align 4
  %926 = and i32 %925, 2
  %927 = icmp eq i32 %926, 0
  %928 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %929 = load i32, i32* %928, align 4
  br i1 %927, label %930, label %940

930:                                              ; preds = %923
  %931 = zext i32 %929 to i33
  %932 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %931, i33 1) #7
  %933 = extractvalue { i33, i1 } %932, 1
  %934 = extractvalue { i33, i1 } %932, 0
  %935 = icmp slt i33 %934, 0
  %936 = or i1 %933, %935
  br i1 %936, label %937, label %938, !prof !2

937:                                              ; preds = %930
  call void @llvm.trap() #7
  unreachable

938:                                              ; preds = %930
  %939 = trunc i33 %934 to i32
  store i32 %939, i32* %928, align 4
  br label %940

940:                                              ; preds = %923, %938
  %941 = phi i32 [ %939, %938 ], [ %929, %923 ]
  %942 = load atomic i32, i32* %924 monotonic, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %945, label %948

945:                                              ; preds = %940
  %946 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %947 = add i32 %941, -1
  store i32 %947, i32* %946, align 4
  br label %948

948:                                              ; preds = %945, %940
  %949 = phi i32 [ %947, %945 ], [ %941, %940 ]
  %950 = icmp eq i32 %949, 0
  br i1 %950, label %951, label %952

951:                                              ; preds = %948
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #7
  br label %952

952:                                              ; preds = %920, %948, %951
  %953 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %954 = load i32, i32* %953, align 8
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %1042

956:                                              ; preds = %952
  br i1 %922, label %974, label %957

957:                                              ; preds = %956
  %958 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %959 = load atomic i32, i32* %958 monotonic, align 4
  %960 = and i32 %959, 2
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %976

962:                                              ; preds = %957
  %963 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %964 = load i32, i32* %963, align 4
  %965 = zext i32 %964 to i33
  %966 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %965, i33 1) #7
  %967 = extractvalue { i33, i1 } %966, 1
  %968 = extractvalue { i33, i1 } %966, 0
  %969 = icmp slt i33 %968, 0
  %970 = or i1 %967, %969
  br i1 %970, label %971, label %972, !prof !2

971:                                              ; preds = %962
  call void @llvm.trap() #7
  unreachable

972:                                              ; preds = %962
  %973 = trunc i33 %968 to i32
  store i32 %973, i32* %963, align 4
  br label %976

974:                                              ; preds = %956
  %975 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 12
  br label %993

976:                                              ; preds = %957, %972
  %977 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 12
  %978 = load atomic i32, i32* %958 monotonic, align 4
  %979 = and i32 %978, 2
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %981, label %993

981:                                              ; preds = %976
  %982 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %983 = load i32, i32* %982, align 4
  %984 = zext i32 %983 to i33
  %985 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %984, i33 1) #7
  %986 = extractvalue { i33, i1 } %985, 1
  %987 = extractvalue { i33, i1 } %985, 0
  %988 = icmp slt i33 %987, 0
  %989 = or i1 %986, %988
  br i1 %989, label %990, label %991, !prof !2

990:                                              ; preds = %981
  call void @llvm.trap() #7
  unreachable

991:                                              ; preds = %981
  %992 = trunc i33 %987 to i32
  store i32 %992, i32* %982, align 4
  br label %993

993:                                              ; preds = %974, %991, %976
  %994 = phi i1 [ false, %991 ], [ false, %976 ], [ true, %974 ]
  %995 = phi %"class.WTF::String"* [ %977, %991 ], [ %977, %976 ], [ %975, %974 ]
  %996 = ptrtoint %"class.WTF::StringImpl"* %921 to i64
  %997 = bitcast %"class.WTF::String"* %995 to i64*
  %998 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 12, i32 0, i32 0
  %999 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %998, align 8
  store i64 %996, i64* %997, align 8
  %1000 = icmp eq %"class.WTF::StringImpl"* %999, null
  br i1 %1000, label %1014, label %1001

1001:                                             ; preds = %993
  %1002 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1003 = load atomic i32, i32* %1002 monotonic, align 4
  %1004 = and i32 %1003, 2
  %1005 = icmp eq i32 %1004, 0
  %1006 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %999, i64 0, i32 0
  %1007 = load i32, i32* %1006, align 4
  br i1 %1005, label %1008, label %1010

1008:                                             ; preds = %1001
  %1009 = add i32 %1007, -1
  store i32 %1009, i32* %1006, align 4
  br label %1010

1010:                                             ; preds = %1008, %1001
  %1011 = phi i32 [ %1009, %1008 ], [ %1007, %1001 ]
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1014

1013:                                             ; preds = %1010
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %999) #7
  br label %1014

1014:                                             ; preds = %993, %1010, %1013
  br i1 %994, label %1028, label %1015

1015:                                             ; preds = %1014
  %1016 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1017 = load atomic i32, i32* %1016 monotonic, align 4
  %1018 = and i32 %1017, 2
  %1019 = icmp eq i32 %1018, 0
  %1020 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %1021 = load i32, i32* %1020, align 4
  br i1 %1019, label %1022, label %1024

1022:                                             ; preds = %1015
  %1023 = add i32 %1021, -1
  store i32 %1023, i32* %1020, align 4
  br label %1024

1024:                                             ; preds = %1022, %1015
  %1025 = phi i32 [ %1023, %1022 ], [ %1021, %1015 ]
  %1026 = icmp eq i32 %1025, 0
  br i1 %1026, label %1027, label %1028

1027:                                             ; preds = %1024
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #7
  br label %1028

1028:                                             ; preds = %1027, %1024, %1014
  br i1 %922, label %1056, label %1029

1029:                                             ; preds = %1028
  %1030 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1031 = load atomic i32, i32* %1030 monotonic, align 4
  %1032 = and i32 %1031, 2
  %1033 = icmp eq i32 %1032, 0
  %1034 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %1035 = load i32, i32* %1034, align 4
  br i1 %1033, label %1036, label %1038

1036:                                             ; preds = %1029
  %1037 = add i32 %1035, -1
  store i32 %1037, i32* %1034, align 4
  br label %1038

1038:                                             ; preds = %1036, %1029
  %1039 = phi i32 [ %1037, %1036 ], [ %1035, %1029 ]
  %1040 = icmp eq i32 %1039, 0
  br i1 %1040, label %1041, label %1056

1041:                                             ; preds = %1038
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #7
  br label %1056

1042:                                             ; preds = %952
  br i1 %922, label %2346, label %1043

1043:                                             ; preds = %1042
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load atomic i32, i32* %1044 monotonic, align 4
  %1046 = and i32 %1045, 2
  %1047 = icmp eq i32 %1046, 0
  %1048 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %921, i64 0, i32 0
  %1049 = load i32, i32* %1048, align 4
  br i1 %1047, label %1050, label %1052

1050:                                             ; preds = %1043
  %1051 = add i32 %1049, -1
  store i32 %1051, i32* %1048, align 4
  br label %1052

1052:                                             ; preds = %1050, %1043
  %1053 = phi i32 [ %1051, %1050 ], [ %1049, %1043 ]
  %1054 = icmp eq i32 %1053, 0
  br i1 %1054, label %1055, label %2346

1055:                                             ; preds = %1052
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %921) #7
  br label %2346

1056:                                             ; preds = %1041, %1038, %1028, %914
  %1057 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 9, i32 0
  %1058 = bitcast %"class.v8::Name"** %1057 to %"class.v8::Value"**
  %1059 = load %"class.v8::Value"*, %"class.v8::Value"** %1058, align 8
  %1060 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %1059) #7
  %1061 = icmp eq %"class.v8::Value"* %1060, null
  br i1 %1061, label %1062, label %1068

1062:                                             ; preds = %1056
  %1063 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1064 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1065 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1064, align 8
  %1066 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1065, i64 5
  %1067 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1066, align 8
  call void %1067(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1063) #7
  br label %2346

1068:                                             ; preds = %1056
  %1069 = bitcast %"class.v8::Value"* %1060 to i64*
  %1070 = load i64, i64* %1069, align 8
  %1071 = and i64 %1070, 3
  %1072 = icmp eq i64 %1071, 1
  br i1 %1072, label %1073, label %1090

1073:                                             ; preds = %1068
  %1074 = add i64 %1070, -1
  %1075 = inttoptr i64 %1074 to i32*
  %1076 = load i32, i32* %1075, align 4
  %1077 = and i64 %1070, -4294967296
  %1078 = zext i32 %1076 to i64
  %1079 = or i64 %1077, %1078
  %1080 = add i64 %1079, 7
  %1081 = inttoptr i64 %1080 to i16*
  %1082 = load i16, i16* %1081, align 2
  %1083 = icmp eq i16 %1082, 67
  br i1 %1083, label %1084, label %1090

1084:                                             ; preds = %1073
  %1085 = add i64 %1070, 23
  %1086 = inttoptr i64 %1085 to i32*
  %1087 = load i32, i32* %1086, align 4
  %1088 = and i32 %1087, -2
  %1089 = icmp eq i32 %1088, 10
  br i1 %1089, label %1296, label %1090

1090:                                             ; preds = %1073, %1068, %1084
  %1091 = bitcast %"class.blink::V8StringResource"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1091) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1091, i8 -86, i64 152, i1 false)
  %1092 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1060, %"class.v8::Value"** %1092, align 8
  %1093 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 1
  store i32 0, i32* %1093, align 8
  %1094 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1094, align 8
  %1095 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1
  %1096 = bitcast %"class.std::__1::unique_ptr.312"* %1095 to i64*
  store i64 0, i64* %1096, align 8
  %1097 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %16, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1097, label %1098, label %1274

1098:                                             ; preds = %1090
  %1099 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1099) #7
  %1100 = load %"class.v8::Value"*, %"class.v8::Value"** %1092, align 8
  %1101 = icmp eq %"class.v8::Value"* %1100, null
  br i1 %1101, label %1106, label %1102, !prof !2

1102:                                             ; preds = %1098
  %1103 = bitcast %"class.v8::Value"* %1100 to %"class.v8::String"*
  %1104 = load i32, i32* %1093, align 8
  %1105 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1103, i32 %1104) #7
  br label %1126

1106:                                             ; preds = %1098
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  %1108 = icmp eq %"class.WTF::StringImpl"* %1107, null
  br i1 %1108, label %1126, label %1109

1109:                                             ; preds = %1106
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1111 = load atomic i32, i32* %1110 monotonic, align 4
  %1112 = and i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1114, label %1126

1114:                                             ; preds = %1109
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  %1117 = zext i32 %1116 to i33
  %1118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1117, i33 1) #7
  %1119 = extractvalue { i33, i1 } %1118, 1
  %1120 = extractvalue { i33, i1 } %1118, 0
  %1121 = icmp slt i33 %1120, 0
  %1122 = or i1 %1119, %1121
  br i1 %1122, label %1123, label %1124, !prof !2

1123:                                             ; preds = %1114
  call void @llvm.trap() #7
  unreachable

1124:                                             ; preds = %1114
  %1125 = trunc i33 %1120 to i32
  store i32 %1125, i32* %1115, align 4
  br label %1126

1126:                                             ; preds = %1102, %1106, %1109, %1124
  %1127 = phi %"class.WTF::StringImpl"* [ %1105, %1102 ], [ null, %1106 ], [ %1107, %1109 ], [ %1107, %1124 ]
  %1128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1127, %"class.WTF::StringImpl"** %1128, align 8
  %1129 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1129) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i64 11) #7
  %1130 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %17, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 4, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %1132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1131, align 8
  %1133 = icmp eq %"class.WTF::StringImpl"* %1132, null
  br i1 %1133, label %1147, label %1134

1134:                                             ; preds = %1126
  %1135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1136 = load atomic i32, i32* %1135 monotonic, align 4
  %1137 = and i32 %1136, 2
  %1138 = icmp eq i32 %1137, 0
  %1139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1132, i64 0, i32 0
  %1140 = load i32, i32* %1139, align 4
  br i1 %1138, label %1141, label %1143

1141:                                             ; preds = %1134
  %1142 = add i32 %1140, -1
  store i32 %1142, i32* %1139, align 4
  br label %1143

1143:                                             ; preds = %1141, %1134
  %1144 = phi i32 [ %1142, %1141 ], [ %1140, %1134 ]
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1147

1146:                                             ; preds = %1143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1132) #7
  br label %1147

1147:                                             ; preds = %1126, %1143, %1146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1129) #7
  %1148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1128, align 8
  %1149 = icmp eq %"class.WTF::StringImpl"* %1148, null
  br i1 %1149, label %1163, label %1150

1150:                                             ; preds = %1147
  %1151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1152 = load atomic i32, i32* %1151 monotonic, align 4
  %1153 = and i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 0
  %1156 = load i32, i32* %1155, align 4
  br i1 %1154, label %1157, label %1159

1157:                                             ; preds = %1150
  %1158 = add i32 %1156, -1
  store i32 %1158, i32* %1155, align 4
  br label %1159

1159:                                             ; preds = %1157, %1150
  %1160 = phi i32 [ %1158, %1157 ], [ %1156, %1150 ]
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1162, label %1163

1162:                                             ; preds = %1159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1148) #7
  br label %1163

1163:                                             ; preds = %1147, %1159, %1162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1099) #7
  br i1 %1130, label %1164, label %1274

1164:                                             ; preds = %1163
  %1165 = load %"class.v8::Value"*, %"class.v8::Value"** %1092, align 8
  %1166 = icmp eq %"class.v8::Value"* %1165, null
  br i1 %1166, label %1167, label %1191, !prof !2

1167:                                             ; preds = %1164
  %1168 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  %1169 = icmp eq %"class.WTF::StringImpl"* %1168, null
  br i1 %1169, label %1170, label %1172

1170:                                             ; preds = %1167
  %1171 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 13
  br label %1216

1172:                                             ; preds = %1167
  %1173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1168, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1174 = load atomic i32, i32* %1173 monotonic, align 4
  %1175 = and i32 %1174, 2
  %1176 = icmp eq i32 %1175, 0
  br i1 %1176, label %1177, label %1189

1177:                                             ; preds = %1172
  %1178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1168, i64 0, i32 0
  %1179 = load i32, i32* %1178, align 4
  %1180 = zext i32 %1179 to i33
  %1181 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1180, i33 1) #7
  %1182 = extractvalue { i33, i1 } %1181, 1
  %1183 = extractvalue { i33, i1 } %1181, 0
  %1184 = icmp slt i33 %1183, 0
  %1185 = or i1 %1182, %1184
  br i1 %1185, label %1186, label %1187, !prof !2

1186:                                             ; preds = %1177
  call void @llvm.trap() #7
  unreachable

1187:                                             ; preds = %1177
  %1188 = trunc i33 %1183 to i32
  store i32 %1188, i32* %1178, align 4
  br label %1189

1189:                                             ; preds = %1172, %1187
  %1190 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 13
  br label %1197

1191:                                             ; preds = %1164
  %1192 = bitcast %"class.v8::Value"* %1165 to %"class.v8::String"*
  %1193 = load i32, i32* %1093, align 8
  %1194 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1192, i32 %1193) #7
  %1195 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 13
  %1196 = icmp eq %"class.WTF::StringImpl"* %1194, null
  br i1 %1196, label %1216, label %1197

1197:                                             ; preds = %1189, %1191
  %1198 = phi %"class.WTF::String"* [ %1190, %1189 ], [ %1195, %1191 ]
  %1199 = phi %"class.WTF::StringImpl"* [ %1168, %1189 ], [ %1194, %1191 ]
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1201 = load atomic i32, i32* %1200 monotonic, align 4
  %1202 = and i32 %1201, 2
  %1203 = icmp eq i32 %1202, 0
  br i1 %1203, label %1204, label %1216

1204:                                             ; preds = %1197
  %1205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1199, i64 0, i32 0
  %1206 = load i32, i32* %1205, align 4
  %1207 = zext i32 %1206 to i33
  %1208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1207, i33 1) #7
  %1209 = extractvalue { i33, i1 } %1208, 1
  %1210 = extractvalue { i33, i1 } %1208, 0
  %1211 = icmp slt i33 %1210, 0
  %1212 = or i1 %1209, %1211
  br i1 %1212, label %1213, label %1214, !prof !2

1213:                                             ; preds = %1204
  call void @llvm.trap() #7
  unreachable

1214:                                             ; preds = %1204
  %1215 = trunc i33 %1210 to i32
  store i32 %1215, i32* %1205, align 4
  br label %1216

1216:                                             ; preds = %1170, %1214, %1197, %1191
  %1217 = phi i1 [ false, %1214 ], [ false, %1197 ], [ true, %1191 ], [ true, %1170 ]
  %1218 = phi %"class.WTF::String"* [ %1198, %1214 ], [ %1198, %1197 ], [ %1195, %1191 ], [ %1171, %1170 ]
  %1219 = phi %"class.WTF::StringImpl"* [ %1199, %1214 ], [ %1199, %1197 ], [ null, %1191 ], [ null, %1170 ]
  %1220 = ptrtoint %"class.WTF::StringImpl"* %1219 to i64
  %1221 = bitcast %"class.WTF::String"* %1218 to i64*
  %1222 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1218, i64 0, i32 0, i32 0
  %1223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1222, align 8
  store i64 %1220, i64* %1221, align 8
  %1224 = icmp eq %"class.WTF::StringImpl"* %1223, null
  br i1 %1224, label %1238, label %1225

1225:                                             ; preds = %1216
  %1226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1227 = load atomic i32, i32* %1226 monotonic, align 4
  %1228 = and i32 %1227, 2
  %1229 = icmp eq i32 %1228, 0
  %1230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1223, i64 0, i32 0
  %1231 = load i32, i32* %1230, align 4
  br i1 %1229, label %1232, label %1234

1232:                                             ; preds = %1225
  %1233 = add i32 %1231, -1
  store i32 %1233, i32* %1230, align 4
  br label %1234

1234:                                             ; preds = %1232, %1225
  %1235 = phi i32 [ %1233, %1232 ], [ %1231, %1225 ]
  %1236 = icmp eq i32 %1235, 0
  br i1 %1236, label %1237, label %1238

1237:                                             ; preds = %1234
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1223) #7
  br label %1238

1238:                                             ; preds = %1216, %1234, %1237
  br i1 %1217, label %1252, label %1239

1239:                                             ; preds = %1238
  %1240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1241 = load atomic i32, i32* %1240 monotonic, align 4
  %1242 = and i32 %1241, 2
  %1243 = icmp eq i32 %1242, 0
  %1244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1219, i64 0, i32 0
  %1245 = load i32, i32* %1244, align 4
  br i1 %1243, label %1246, label %1248

1246:                                             ; preds = %1239
  %1247 = add i32 %1245, -1
  store i32 %1247, i32* %1244, align 4
  br label %1248

1248:                                             ; preds = %1246, %1239
  %1249 = phi i32 [ %1247, %1246 ], [ %1245, %1239 ]
  %1250 = icmp eq i32 %1249, 0
  br i1 %1250, label %1251, label %1252

1251:                                             ; preds = %1248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1219) #7
  br label %1252

1252:                                             ; preds = %1238, %1248, %1251
  %1253 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1254 = load i8*, i8** %1253, align 8
  store i8* null, i8** %1253, align 8
  %1255 = icmp eq i8* %1254, null
  br i1 %1255, label %1257, label %1256

1256:                                             ; preds = %1252
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1254) #7
  br label %1257

1257:                                             ; preds = %1256, %1252
  %1258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  %1259 = icmp eq %"class.WTF::StringImpl"* %1258, null
  br i1 %1259, label %1273, label %1260

1260:                                             ; preds = %1257
  %1261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1262 = load atomic i32, i32* %1261 monotonic, align 4
  %1263 = and i32 %1262, 2
  %1264 = icmp eq i32 %1263, 0
  %1265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1258, i64 0, i32 0
  %1266 = load i32, i32* %1265, align 4
  br i1 %1264, label %1267, label %1269

1267:                                             ; preds = %1260
  %1268 = add i32 %1266, -1
  store i32 %1268, i32* %1265, align 4
  br label %1269

1269:                                             ; preds = %1267, %1260
  %1270 = phi i32 [ %1268, %1267 ], [ %1266, %1260 ]
  %1271 = icmp eq i32 %1270, 0
  br i1 %1271, label %1272, label %1273

1272:                                             ; preds = %1269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1258) #7
  br label %1273

1273:                                             ; preds = %1257, %1269, %1272
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1091) #7
  br label %1296

1274:                                             ; preds = %1163, %1090
  %1275 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1276 = load i8*, i8** %1275, align 8
  store i8* null, i8** %1275, align 8
  %1277 = icmp eq i8* %1276, null
  br i1 %1277, label %1279, label %1278

1278:                                             ; preds = %1274
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1276) #7
  br label %1279

1279:                                             ; preds = %1278, %1274
  %1280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1094, align 8
  %1281 = icmp eq %"class.WTF::StringImpl"* %1280, null
  br i1 %1281, label %1295, label %1282

1282:                                             ; preds = %1279
  %1283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load atomic i32, i32* %1283 monotonic, align 4
  %1285 = and i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1280, i64 0, i32 0
  %1288 = load i32, i32* %1287, align 4
  br i1 %1286, label %1289, label %1291

1289:                                             ; preds = %1282
  %1290 = add i32 %1288, -1
  store i32 %1290, i32* %1287, align 4
  br label %1291

1291:                                             ; preds = %1289, %1282
  %1292 = phi i32 [ %1290, %1289 ], [ %1288, %1282 ]
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1295

1294:                                             ; preds = %1291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1280) #7
  br label %1295

1295:                                             ; preds = %1279, %1291, %1294
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1091) #7
  br label %2346

1296:                                             ; preds = %1273, %1084
  %1297 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 10, i32 0
  %1298 = bitcast %"class.v8::Name"** %1297 to %"class.v8::Value"**
  %1299 = load %"class.v8::Value"*, %"class.v8::Value"** %1298, align 8
  %1300 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %1299) #7
  %1301 = icmp eq %"class.v8::Value"* %1300, null
  br i1 %1301, label %1302, label %1308

1302:                                             ; preds = %1296
  %1303 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1304 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1305 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1304, align 8
  %1306 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1305, i64 5
  %1307 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1306, align 8
  call void %1307(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1303) #7
  br label %2346

1308:                                             ; preds = %1296
  %1309 = bitcast %"class.v8::Value"* %1300 to i64*
  %1310 = load i64, i64* %1309, align 8
  %1311 = and i64 %1310, 3
  %1312 = icmp eq i64 %1311, 1
  br i1 %1312, label %1313, label %1330

1313:                                             ; preds = %1308
  %1314 = add i64 %1310, -1
  %1315 = inttoptr i64 %1314 to i32*
  %1316 = load i32, i32* %1315, align 4
  %1317 = and i64 %1310, -4294967296
  %1318 = zext i32 %1316 to i64
  %1319 = or i64 %1317, %1318
  %1320 = add i64 %1319, 7
  %1321 = inttoptr i64 %1320 to i16*
  %1322 = load i16, i16* %1321, align 2
  %1323 = icmp eq i16 %1322, 67
  br i1 %1323, label %1324, label %1330

1324:                                             ; preds = %1313
  %1325 = add i64 %1310, 23
  %1326 = inttoptr i64 %1325 to i32*
  %1327 = load i32, i32* %1326, align 4
  %1328 = and i32 %1327, -2
  %1329 = icmp eq i32 %1328, 10
  br i1 %1329, label %1536, label %1330

1330:                                             ; preds = %1313, %1308, %1324
  %1331 = bitcast %"class.blink::V8StringResource"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1331) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1331, i8 -86, i64 152, i1 false)
  %1332 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1300, %"class.v8::Value"** %1332, align 8
  %1333 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 1
  store i32 0, i32* %1333, align 8
  %1334 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1334, align 8
  %1335 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1
  %1336 = bitcast %"class.std::__1::unique_ptr.312"* %1335 to i64*
  store i64 0, i64* %1336, align 8
  %1337 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %19, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1337, label %1338, label %1514

1338:                                             ; preds = %1330
  %1339 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1339) #7
  %1340 = load %"class.v8::Value"*, %"class.v8::Value"** %1332, align 8
  %1341 = icmp eq %"class.v8::Value"* %1340, null
  br i1 %1341, label %1346, label %1342, !prof !2

1342:                                             ; preds = %1338
  %1343 = bitcast %"class.v8::Value"* %1340 to %"class.v8::String"*
  %1344 = load i32, i32* %1333, align 8
  %1345 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1343, i32 %1344) #7
  br label %1366

1346:                                             ; preds = %1338
  %1347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1334, align 8
  %1348 = icmp eq %"class.WTF::StringImpl"* %1347, null
  br i1 %1348, label %1366, label %1349

1349:                                             ; preds = %1346
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1351 = load atomic i32, i32* %1350 monotonic, align 4
  %1352 = and i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1366

1354:                                             ; preds = %1349
  %1355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1347, i64 0, i32 0
  %1356 = load i32, i32* %1355, align 4
  %1357 = zext i32 %1356 to i33
  %1358 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1357, i33 1) #7
  %1359 = extractvalue { i33, i1 } %1358, 1
  %1360 = extractvalue { i33, i1 } %1358, 0
  %1361 = icmp slt i33 %1360, 0
  %1362 = or i1 %1359, %1361
  br i1 %1362, label %1363, label %1364, !prof !2

1363:                                             ; preds = %1354
  call void @llvm.trap() #7
  unreachable

1364:                                             ; preds = %1354
  %1365 = trunc i33 %1360 to i32
  store i32 %1365, i32* %1355, align 4
  br label %1366

1366:                                             ; preds = %1342, %1346, %1349, %1364
  %1367 = phi %"class.WTF::StringImpl"* [ %1345, %1342 ], [ null, %1346 ], [ %1347, %1349 ], [ %1347, %1364 ]
  %1368 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1367, %"class.WTF::StringImpl"** %1368, align 8
  %1369 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1369) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i64 15) #7
  %1370 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %20, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_2, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1371 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %1372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1371, align 8
  %1373 = icmp eq %"class.WTF::StringImpl"* %1372, null
  br i1 %1373, label %1387, label %1374

1374:                                             ; preds = %1366
  %1375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1376 = load atomic i32, i32* %1375 monotonic, align 4
  %1377 = and i32 %1376, 2
  %1378 = icmp eq i32 %1377, 0
  %1379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1372, i64 0, i32 0
  %1380 = load i32, i32* %1379, align 4
  br i1 %1378, label %1381, label %1383

1381:                                             ; preds = %1374
  %1382 = add i32 %1380, -1
  store i32 %1382, i32* %1379, align 4
  br label %1383

1383:                                             ; preds = %1381, %1374
  %1384 = phi i32 [ %1382, %1381 ], [ %1380, %1374 ]
  %1385 = icmp eq i32 %1384, 0
  br i1 %1385, label %1386, label %1387

1386:                                             ; preds = %1383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1372) #7
  br label %1387

1387:                                             ; preds = %1366, %1383, %1386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1369) #7
  %1388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1368, align 8
  %1389 = icmp eq %"class.WTF::StringImpl"* %1388, null
  br i1 %1389, label %1403, label %1390

1390:                                             ; preds = %1387
  %1391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1392 = load atomic i32, i32* %1391 monotonic, align 4
  %1393 = and i32 %1392, 2
  %1394 = icmp eq i32 %1393, 0
  %1395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1388, i64 0, i32 0
  %1396 = load i32, i32* %1395, align 4
  br i1 %1394, label %1397, label %1399

1397:                                             ; preds = %1390
  %1398 = add i32 %1396, -1
  store i32 %1398, i32* %1395, align 4
  br label %1399

1399:                                             ; preds = %1397, %1390
  %1400 = phi i32 [ %1398, %1397 ], [ %1396, %1390 ]
  %1401 = icmp eq i32 %1400, 0
  br i1 %1401, label %1402, label %1403

1402:                                             ; preds = %1399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1388) #7
  br label %1403

1403:                                             ; preds = %1387, %1399, %1402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1339) #7
  br i1 %1370, label %1404, label %1514

1404:                                             ; preds = %1403
  %1405 = load %"class.v8::Value"*, %"class.v8::Value"** %1332, align 8
  %1406 = icmp eq %"class.v8::Value"* %1405, null
  br i1 %1406, label %1407, label %1431, !prof !2

1407:                                             ; preds = %1404
  %1408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1334, align 8
  %1409 = icmp eq %"class.WTF::StringImpl"* %1408, null
  br i1 %1409, label %1410, label %1412

1410:                                             ; preds = %1407
  %1411 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 14
  br label %1456

1412:                                             ; preds = %1407
  %1413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1414 = load atomic i32, i32* %1413 monotonic, align 4
  %1415 = and i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  br i1 %1416, label %1417, label %1429

1417:                                             ; preds = %1412
  %1418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1408, i64 0, i32 0
  %1419 = load i32, i32* %1418, align 4
  %1420 = zext i32 %1419 to i33
  %1421 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1420, i33 1) #7
  %1422 = extractvalue { i33, i1 } %1421, 1
  %1423 = extractvalue { i33, i1 } %1421, 0
  %1424 = icmp slt i33 %1423, 0
  %1425 = or i1 %1422, %1424
  br i1 %1425, label %1426, label %1427, !prof !2

1426:                                             ; preds = %1417
  call void @llvm.trap() #7
  unreachable

1427:                                             ; preds = %1417
  %1428 = trunc i33 %1423 to i32
  store i32 %1428, i32* %1418, align 4
  br label %1429

1429:                                             ; preds = %1412, %1427
  %1430 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 14
  br label %1437

1431:                                             ; preds = %1404
  %1432 = bitcast %"class.v8::Value"* %1405 to %"class.v8::String"*
  %1433 = load i32, i32* %1333, align 8
  %1434 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1432, i32 %1433) #7
  %1435 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 14
  %1436 = icmp eq %"class.WTF::StringImpl"* %1434, null
  br i1 %1436, label %1456, label %1437

1437:                                             ; preds = %1429, %1431
  %1438 = phi %"class.WTF::String"* [ %1430, %1429 ], [ %1435, %1431 ]
  %1439 = phi %"class.WTF::StringImpl"* [ %1408, %1429 ], [ %1434, %1431 ]
  %1440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1439, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1441 = load atomic i32, i32* %1440 monotonic, align 4
  %1442 = and i32 %1441, 2
  %1443 = icmp eq i32 %1442, 0
  br i1 %1443, label %1444, label %1456

1444:                                             ; preds = %1437
  %1445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1439, i64 0, i32 0
  %1446 = load i32, i32* %1445, align 4
  %1447 = zext i32 %1446 to i33
  %1448 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1447, i33 1) #7
  %1449 = extractvalue { i33, i1 } %1448, 1
  %1450 = extractvalue { i33, i1 } %1448, 0
  %1451 = icmp slt i33 %1450, 0
  %1452 = or i1 %1449, %1451
  br i1 %1452, label %1453, label %1454, !prof !2

1453:                                             ; preds = %1444
  call void @llvm.trap() #7
  unreachable

1454:                                             ; preds = %1444
  %1455 = trunc i33 %1450 to i32
  store i32 %1455, i32* %1445, align 4
  br label %1456

1456:                                             ; preds = %1410, %1454, %1437, %1431
  %1457 = phi i1 [ false, %1454 ], [ false, %1437 ], [ true, %1431 ], [ true, %1410 ]
  %1458 = phi %"class.WTF::String"* [ %1438, %1454 ], [ %1438, %1437 ], [ %1435, %1431 ], [ %1411, %1410 ]
  %1459 = phi %"class.WTF::StringImpl"* [ %1439, %1454 ], [ %1439, %1437 ], [ null, %1431 ], [ null, %1410 ]
  %1460 = ptrtoint %"class.WTF::StringImpl"* %1459 to i64
  %1461 = bitcast %"class.WTF::String"* %1458 to i64*
  %1462 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1458, i64 0, i32 0, i32 0
  %1463 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1462, align 8
  store i64 %1460, i64* %1461, align 8
  %1464 = icmp eq %"class.WTF::StringImpl"* %1463, null
  br i1 %1464, label %1478, label %1465

1465:                                             ; preds = %1456
  %1466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1463, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1467 = load atomic i32, i32* %1466 monotonic, align 4
  %1468 = and i32 %1467, 2
  %1469 = icmp eq i32 %1468, 0
  %1470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1463, i64 0, i32 0
  %1471 = load i32, i32* %1470, align 4
  br i1 %1469, label %1472, label %1474

1472:                                             ; preds = %1465
  %1473 = add i32 %1471, -1
  store i32 %1473, i32* %1470, align 4
  br label %1474

1474:                                             ; preds = %1472, %1465
  %1475 = phi i32 [ %1473, %1472 ], [ %1471, %1465 ]
  %1476 = icmp eq i32 %1475, 0
  br i1 %1476, label %1477, label %1478

1477:                                             ; preds = %1474
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1463) #7
  br label %1478

1478:                                             ; preds = %1456, %1474, %1477
  br i1 %1457, label %1492, label %1479

1479:                                             ; preds = %1478
  %1480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1459, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1481 = load atomic i32, i32* %1480 monotonic, align 4
  %1482 = and i32 %1481, 2
  %1483 = icmp eq i32 %1482, 0
  %1484 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1459, i64 0, i32 0
  %1485 = load i32, i32* %1484, align 4
  br i1 %1483, label %1486, label %1488

1486:                                             ; preds = %1479
  %1487 = add i32 %1485, -1
  store i32 %1487, i32* %1484, align 4
  br label %1488

1488:                                             ; preds = %1486, %1479
  %1489 = phi i32 [ %1487, %1486 ], [ %1485, %1479 ]
  %1490 = icmp eq i32 %1489, 0
  br i1 %1490, label %1491, label %1492

1491:                                             ; preds = %1488
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1459) #7
  br label %1492

1492:                                             ; preds = %1478, %1488, %1491
  %1493 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1494 = load i8*, i8** %1493, align 8
  store i8* null, i8** %1493, align 8
  %1495 = icmp eq i8* %1494, null
  br i1 %1495, label %1497, label %1496

1496:                                             ; preds = %1492
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1494) #7
  br label %1497

1497:                                             ; preds = %1496, %1492
  %1498 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1334, align 8
  %1499 = icmp eq %"class.WTF::StringImpl"* %1498, null
  br i1 %1499, label %1513, label %1500

1500:                                             ; preds = %1497
  %1501 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1498, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1502 = load atomic i32, i32* %1501 monotonic, align 4
  %1503 = and i32 %1502, 2
  %1504 = icmp eq i32 %1503, 0
  %1505 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1498, i64 0, i32 0
  %1506 = load i32, i32* %1505, align 4
  br i1 %1504, label %1507, label %1509

1507:                                             ; preds = %1500
  %1508 = add i32 %1506, -1
  store i32 %1508, i32* %1505, align 4
  br label %1509

1509:                                             ; preds = %1507, %1500
  %1510 = phi i32 [ %1508, %1507 ], [ %1506, %1500 ]
  %1511 = icmp eq i32 %1510, 0
  br i1 %1511, label %1512, label %1513

1512:                                             ; preds = %1509
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1498) #7
  br label %1513

1513:                                             ; preds = %1497, %1509, %1512
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1331) #7
  br label %1536

1514:                                             ; preds = %1403, %1330
  %1515 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %19, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1516 = load i8*, i8** %1515, align 8
  store i8* null, i8** %1515, align 8
  %1517 = icmp eq i8* %1516, null
  br i1 %1517, label %1519, label %1518

1518:                                             ; preds = %1514
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1516) #7
  br label %1519

1519:                                             ; preds = %1518, %1514
  %1520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1334, align 8
  %1521 = icmp eq %"class.WTF::StringImpl"* %1520, null
  br i1 %1521, label %1535, label %1522

1522:                                             ; preds = %1519
  %1523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1520, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1524 = load atomic i32, i32* %1523 monotonic, align 4
  %1525 = and i32 %1524, 2
  %1526 = icmp eq i32 %1525, 0
  %1527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1520, i64 0, i32 0
  %1528 = load i32, i32* %1527, align 4
  br i1 %1526, label %1529, label %1531

1529:                                             ; preds = %1522
  %1530 = add i32 %1528, -1
  store i32 %1530, i32* %1527, align 4
  br label %1531

1531:                                             ; preds = %1529, %1522
  %1532 = phi i32 [ %1530, %1529 ], [ %1528, %1522 ]
  %1533 = icmp eq i32 %1532, 0
  br i1 %1533, label %1534, label %1535

1534:                                             ; preds = %1531
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1520) #7
  br label %1535

1535:                                             ; preds = %1519, %1531, %1534
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1331) #7
  br label %2346

1536:                                             ; preds = %1513, %1324
  %1537 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 11, i32 0
  %1538 = bitcast %"class.v8::Name"** %1537 to %"class.v8::Value"**
  %1539 = load %"class.v8::Value"*, %"class.v8::Value"** %1538, align 8
  %1540 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %1539) #7
  %1541 = icmp eq %"class.v8::Value"* %1540, null
  br i1 %1541, label %1542, label %1548

1542:                                             ; preds = %1536
  %1543 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1544 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1545 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1544, align 8
  %1546 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1545, i64 5
  %1547 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1546, align 8
  call void %1547(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1543) #7
  br label %2346

1548:                                             ; preds = %1536
  %1549 = bitcast %"class.v8::Value"* %1540 to i64*
  %1550 = load i64, i64* %1549, align 8
  %1551 = and i64 %1550, 3
  %1552 = icmp eq i64 %1551, 1
  br i1 %1552, label %1553, label %1570

1553:                                             ; preds = %1548
  %1554 = add i64 %1550, -1
  %1555 = inttoptr i64 %1554 to i32*
  %1556 = load i32, i32* %1555, align 4
  %1557 = and i64 %1550, -4294967296
  %1558 = zext i32 %1556 to i64
  %1559 = or i64 %1557, %1558
  %1560 = add i64 %1559, 7
  %1561 = inttoptr i64 %1560 to i16*
  %1562 = load i16, i16* %1561, align 2
  %1563 = icmp eq i16 %1562, 67
  br i1 %1563, label %1564, label %1570

1564:                                             ; preds = %1553
  %1565 = add i64 %1550, 23
  %1566 = inttoptr i64 %1565 to i32*
  %1567 = load i32, i32* %1566, align 4
  %1568 = and i32 %1567, -2
  %1569 = icmp eq i32 %1568, 10
  br i1 %1569, label %1706, label %1570

1570:                                             ; preds = %1553, %1548, %1564
  %1571 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1540, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1572 = icmp eq %"class.WTF::StringImpl"* %1571, null
  br i1 %1572, label %1602, label %1573

1573:                                             ; preds = %1570
  %1574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1575 = load atomic i32, i32* %1574 monotonic, align 4
  %1576 = and i32 %1575, 2
  %1577 = icmp eq i32 %1576, 0
  %1578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1579 = load i32, i32* %1578, align 4
  br i1 %1577, label %1580, label %1590

1580:                                             ; preds = %1573
  %1581 = zext i32 %1579 to i33
  %1582 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1581, i33 1) #7
  %1583 = extractvalue { i33, i1 } %1582, 1
  %1584 = extractvalue { i33, i1 } %1582, 0
  %1585 = icmp slt i33 %1584, 0
  %1586 = or i1 %1583, %1585
  br i1 %1586, label %1587, label %1588, !prof !2

1587:                                             ; preds = %1580
  call void @llvm.trap() #7
  unreachable

1588:                                             ; preds = %1580
  %1589 = trunc i33 %1584 to i32
  store i32 %1589, i32* %1578, align 4
  br label %1590

1590:                                             ; preds = %1573, %1588
  %1591 = phi i32 [ %1589, %1588 ], [ %1579, %1573 ]
  %1592 = load atomic i32, i32* %1574 monotonic, align 4
  %1593 = and i32 %1592, 2
  %1594 = icmp eq i32 %1593, 0
  br i1 %1594, label %1595, label %1598

1595:                                             ; preds = %1590
  %1596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1597 = add i32 %1591, -1
  store i32 %1597, i32* %1596, align 4
  br label %1598

1598:                                             ; preds = %1595, %1590
  %1599 = phi i32 [ %1597, %1595 ], [ %1591, %1590 ]
  %1600 = icmp eq i32 %1599, 0
  br i1 %1600, label %1601, label %1602

1601:                                             ; preds = %1598
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1571) #7
  br label %1602

1602:                                             ; preds = %1570, %1598, %1601
  %1603 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1604 = load i32, i32* %1603, align 8
  %1605 = icmp eq i32 %1604, 0
  br i1 %1605, label %1606, label %1692

1606:                                             ; preds = %1602
  br i1 %1572, label %1624, label %1607

1607:                                             ; preds = %1606
  %1608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1609 = load atomic i32, i32* %1608 monotonic, align 4
  %1610 = and i32 %1609, 2
  %1611 = icmp eq i32 %1610, 0
  br i1 %1611, label %1612, label %1626

1612:                                             ; preds = %1607
  %1613 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1614 = load i32, i32* %1613, align 4
  %1615 = zext i32 %1614 to i33
  %1616 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1615, i33 1) #7
  %1617 = extractvalue { i33, i1 } %1616, 1
  %1618 = extractvalue { i33, i1 } %1616, 0
  %1619 = icmp slt i33 %1618, 0
  %1620 = or i1 %1617, %1619
  br i1 %1620, label %1621, label %1622, !prof !2

1621:                                             ; preds = %1612
  call void @llvm.trap() #7
  unreachable

1622:                                             ; preds = %1612
  %1623 = trunc i33 %1618 to i32
  store i32 %1623, i32* %1613, align 4
  br label %1626

1624:                                             ; preds = %1606
  %1625 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 15
  br label %1643

1626:                                             ; preds = %1607, %1622
  %1627 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 15
  %1628 = load atomic i32, i32* %1608 monotonic, align 4
  %1629 = and i32 %1628, 2
  %1630 = icmp eq i32 %1629, 0
  br i1 %1630, label %1631, label %1643

1631:                                             ; preds = %1626
  %1632 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1633 = load i32, i32* %1632, align 4
  %1634 = zext i32 %1633 to i33
  %1635 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1634, i33 1) #7
  %1636 = extractvalue { i33, i1 } %1635, 1
  %1637 = extractvalue { i33, i1 } %1635, 0
  %1638 = icmp slt i33 %1637, 0
  %1639 = or i1 %1636, %1638
  br i1 %1639, label %1640, label %1641, !prof !2

1640:                                             ; preds = %1631
  call void @llvm.trap() #7
  unreachable

1641:                                             ; preds = %1631
  %1642 = trunc i33 %1637 to i32
  store i32 %1642, i32* %1632, align 4
  br label %1643

1643:                                             ; preds = %1624, %1641, %1626
  %1644 = phi i1 [ false, %1641 ], [ false, %1626 ], [ true, %1624 ]
  %1645 = phi %"class.WTF::String"* [ %1627, %1641 ], [ %1627, %1626 ], [ %1625, %1624 ]
  %1646 = ptrtoint %"class.WTF::StringImpl"* %1571 to i64
  %1647 = bitcast %"class.WTF::String"* %1645 to i64*
  %1648 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 15, i32 0, i32 0
  %1649 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1648, align 8
  store i64 %1646, i64* %1647, align 8
  %1650 = icmp eq %"class.WTF::StringImpl"* %1649, null
  br i1 %1650, label %1664, label %1651

1651:                                             ; preds = %1643
  %1652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1649, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1653 = load atomic i32, i32* %1652 monotonic, align 4
  %1654 = and i32 %1653, 2
  %1655 = icmp eq i32 %1654, 0
  %1656 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1649, i64 0, i32 0
  %1657 = load i32, i32* %1656, align 4
  br i1 %1655, label %1658, label %1660

1658:                                             ; preds = %1651
  %1659 = add i32 %1657, -1
  store i32 %1659, i32* %1656, align 4
  br label %1660

1660:                                             ; preds = %1658, %1651
  %1661 = phi i32 [ %1659, %1658 ], [ %1657, %1651 ]
  %1662 = icmp eq i32 %1661, 0
  br i1 %1662, label %1663, label %1664

1663:                                             ; preds = %1660
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1649) #7
  br label %1664

1664:                                             ; preds = %1643, %1660, %1663
  br i1 %1644, label %1678, label %1665

1665:                                             ; preds = %1664
  %1666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1667 = load atomic i32, i32* %1666 monotonic, align 4
  %1668 = and i32 %1667, 2
  %1669 = icmp eq i32 %1668, 0
  %1670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1671 = load i32, i32* %1670, align 4
  br i1 %1669, label %1672, label %1674

1672:                                             ; preds = %1665
  %1673 = add i32 %1671, -1
  store i32 %1673, i32* %1670, align 4
  br label %1674

1674:                                             ; preds = %1672, %1665
  %1675 = phi i32 [ %1673, %1672 ], [ %1671, %1665 ]
  %1676 = icmp eq i32 %1675, 0
  br i1 %1676, label %1677, label %1678

1677:                                             ; preds = %1674
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1571) #7
  br label %1678

1678:                                             ; preds = %1677, %1674, %1664
  br i1 %1572, label %1706, label %1679

1679:                                             ; preds = %1678
  %1680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1681 = load atomic i32, i32* %1680 monotonic, align 4
  %1682 = and i32 %1681, 2
  %1683 = icmp eq i32 %1682, 0
  %1684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1685 = load i32, i32* %1684, align 4
  br i1 %1683, label %1686, label %1688

1686:                                             ; preds = %1679
  %1687 = add i32 %1685, -1
  store i32 %1687, i32* %1684, align 4
  br label %1688

1688:                                             ; preds = %1686, %1679
  %1689 = phi i32 [ %1687, %1686 ], [ %1685, %1679 ]
  %1690 = icmp eq i32 %1689, 0
  br i1 %1690, label %1691, label %1706

1691:                                             ; preds = %1688
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1571) #7
  br label %1706

1692:                                             ; preds = %1602
  br i1 %1572, label %2346, label %1693

1693:                                             ; preds = %1692
  %1694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1695 = load atomic i32, i32* %1694 monotonic, align 4
  %1696 = and i32 %1695, 2
  %1697 = icmp eq i32 %1696, 0
  %1698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1571, i64 0, i32 0
  %1699 = load i32, i32* %1698, align 4
  br i1 %1697, label %1700, label %1702

1700:                                             ; preds = %1693
  %1701 = add i32 %1699, -1
  store i32 %1701, i32* %1698, align 4
  br label %1702

1702:                                             ; preds = %1700, %1693
  %1703 = phi i32 [ %1701, %1700 ], [ %1699, %1693 ]
  %1704 = icmp eq i32 %1703, 0
  br i1 %1704, label %1705, label %2346

1705:                                             ; preds = %1702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1571) #7
  br label %2346

1706:                                             ; preds = %1691, %1688, %1678, %1564
  %1707 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 12, i32 0
  %1708 = bitcast %"class.v8::Name"** %1707 to %"class.v8::Value"**
  %1709 = load %"class.v8::Value"*, %"class.v8::Value"** %1708, align 8
  %1710 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %1709) #7
  %1711 = icmp eq %"class.v8::Value"* %1710, null
  br i1 %1711, label %1712, label %1718

1712:                                             ; preds = %1706
  %1713 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1714 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1715 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1714, align 8
  %1716 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1715, i64 5
  %1717 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1716, align 8
  call void %1717(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1713) #7
  br label %2346

1718:                                             ; preds = %1706
  %1719 = bitcast %"class.v8::Value"* %1710 to i64*
  %1720 = load i64, i64* %1719, align 8
  %1721 = and i64 %1720, 3
  %1722 = icmp eq i64 %1721, 1
  br i1 %1722, label %1723, label %1740

1723:                                             ; preds = %1718
  %1724 = add i64 %1720, -1
  %1725 = inttoptr i64 %1724 to i32*
  %1726 = load i32, i32* %1725, align 4
  %1727 = and i64 %1720, -4294967296
  %1728 = zext i32 %1726 to i64
  %1729 = or i64 %1727, %1728
  %1730 = add i64 %1729, 7
  %1731 = inttoptr i64 %1730 to i16*
  %1732 = load i16, i16* %1731, align 2
  %1733 = icmp eq i16 %1732, 67
  br i1 %1733, label %1734, label %1740

1734:                                             ; preds = %1723
  %1735 = add i64 %1720, 23
  %1736 = inttoptr i64 %1735 to i32*
  %1737 = load i32, i32* %1736, align 4
  %1738 = and i32 %1737, -2
  %1739 = icmp eq i32 %1738, 10
  br i1 %1739, label %1946, label %1740

1740:                                             ; preds = %1723, %1718, %1734
  %1741 = bitcast %"class.blink::V8StringResource"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1741) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1741, i8 -86, i64 152, i1 false)
  %1742 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1710, %"class.v8::Value"** %1742, align 8
  %1743 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 1
  store i32 0, i32* %1743, align 8
  %1744 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1744, align 8
  %1745 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1
  %1746 = bitcast %"class.std::__1::unique_ptr.312"* %1745 to i64*
  store i64 0, i64* %1746, align 8
  %1747 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1747, label %1748, label %1924

1748:                                             ; preds = %1740
  %1749 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1749) #7
  %1750 = load %"class.v8::Value"*, %"class.v8::Value"** %1742, align 8
  %1751 = icmp eq %"class.v8::Value"* %1750, null
  br i1 %1751, label %1756, label %1752, !prof !2

1752:                                             ; preds = %1748
  %1753 = bitcast %"class.v8::Value"* %1750 to %"class.v8::String"*
  %1754 = load i32, i32* %1743, align 8
  %1755 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1753, i32 %1754) #7
  br label %1776

1756:                                             ; preds = %1748
  %1757 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1744, align 8
  %1758 = icmp eq %"class.WTF::StringImpl"* %1757, null
  br i1 %1758, label %1776, label %1759

1759:                                             ; preds = %1756
  %1760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1757, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1761 = load atomic i32, i32* %1760 monotonic, align 4
  %1762 = and i32 %1761, 2
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1776

1764:                                             ; preds = %1759
  %1765 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1757, i64 0, i32 0
  %1766 = load i32, i32* %1765, align 4
  %1767 = zext i32 %1766 to i33
  %1768 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1767, i33 1) #7
  %1769 = extractvalue { i33, i1 } %1768, 1
  %1770 = extractvalue { i33, i1 } %1768, 0
  %1771 = icmp slt i33 %1770, 0
  %1772 = or i1 %1769, %1771
  br i1 %1772, label %1773, label %1774, !prof !2

1773:                                             ; preds = %1764
  call void @llvm.trap() #7
  unreachable

1774:                                             ; preds = %1764
  %1775 = trunc i33 %1770 to i32
  store i32 %1775, i32* %1765, align 4
  br label %1776

1776:                                             ; preds = %1752, %1756, %1759, %1774
  %1777 = phi %"class.WTF::StringImpl"* [ %1755, %1752 ], [ null, %1756 ], [ %1757, %1759 ], [ %1757, %1774 ]
  %1778 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1777, %"class.WTF::StringImpl"** %1778, align 8
  %1779 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1779) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i64 14) #7
  %1780 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %23, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_3, i64 0, i64 0), i64 9, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %1781 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %1782 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1781, align 8
  %1783 = icmp eq %"class.WTF::StringImpl"* %1782, null
  br i1 %1783, label %1797, label %1784

1784:                                             ; preds = %1776
  %1785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1782, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1786 = load atomic i32, i32* %1785 monotonic, align 4
  %1787 = and i32 %1786, 2
  %1788 = icmp eq i32 %1787, 0
  %1789 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1782, i64 0, i32 0
  %1790 = load i32, i32* %1789, align 4
  br i1 %1788, label %1791, label %1793

1791:                                             ; preds = %1784
  %1792 = add i32 %1790, -1
  store i32 %1792, i32* %1789, align 4
  br label %1793

1793:                                             ; preds = %1791, %1784
  %1794 = phi i32 [ %1792, %1791 ], [ %1790, %1784 ]
  %1795 = icmp eq i32 %1794, 0
  br i1 %1795, label %1796, label %1797

1796:                                             ; preds = %1793
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1782) #7
  br label %1797

1797:                                             ; preds = %1776, %1793, %1796
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1779) #7
  %1798 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1778, align 8
  %1799 = icmp eq %"class.WTF::StringImpl"* %1798, null
  br i1 %1799, label %1813, label %1800

1800:                                             ; preds = %1797
  %1801 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1798, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1802 = load atomic i32, i32* %1801 monotonic, align 4
  %1803 = and i32 %1802, 2
  %1804 = icmp eq i32 %1803, 0
  %1805 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1798, i64 0, i32 0
  %1806 = load i32, i32* %1805, align 4
  br i1 %1804, label %1807, label %1809

1807:                                             ; preds = %1800
  %1808 = add i32 %1806, -1
  store i32 %1808, i32* %1805, align 4
  br label %1809

1809:                                             ; preds = %1807, %1800
  %1810 = phi i32 [ %1808, %1807 ], [ %1806, %1800 ]
  %1811 = icmp eq i32 %1810, 0
  br i1 %1811, label %1812, label %1813

1812:                                             ; preds = %1809
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1798) #7
  br label %1813

1813:                                             ; preds = %1797, %1809, %1812
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1749) #7
  br i1 %1780, label %1814, label %1924

1814:                                             ; preds = %1813
  %1815 = load %"class.v8::Value"*, %"class.v8::Value"** %1742, align 8
  %1816 = icmp eq %"class.v8::Value"* %1815, null
  br i1 %1816, label %1817, label %1841, !prof !2

1817:                                             ; preds = %1814
  %1818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1744, align 8
  %1819 = icmp eq %"class.WTF::StringImpl"* %1818, null
  br i1 %1819, label %1820, label %1822

1820:                                             ; preds = %1817
  %1821 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 16
  br label %1866

1822:                                             ; preds = %1817
  %1823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1824 = load atomic i32, i32* %1823 monotonic, align 4
  %1825 = and i32 %1824, 2
  %1826 = icmp eq i32 %1825, 0
  br i1 %1826, label %1827, label %1839

1827:                                             ; preds = %1822
  %1828 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1818, i64 0, i32 0
  %1829 = load i32, i32* %1828, align 4
  %1830 = zext i32 %1829 to i33
  %1831 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1830, i33 1) #7
  %1832 = extractvalue { i33, i1 } %1831, 1
  %1833 = extractvalue { i33, i1 } %1831, 0
  %1834 = icmp slt i33 %1833, 0
  %1835 = or i1 %1832, %1834
  br i1 %1835, label %1836, label %1837, !prof !2

1836:                                             ; preds = %1827
  call void @llvm.trap() #7
  unreachable

1837:                                             ; preds = %1827
  %1838 = trunc i33 %1833 to i32
  store i32 %1838, i32* %1828, align 4
  br label %1839

1839:                                             ; preds = %1822, %1837
  %1840 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 16
  br label %1847

1841:                                             ; preds = %1814
  %1842 = bitcast %"class.v8::Value"* %1815 to %"class.v8::String"*
  %1843 = load i32, i32* %1743, align 8
  %1844 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1842, i32 %1843) #7
  %1845 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 16
  %1846 = icmp eq %"class.WTF::StringImpl"* %1844, null
  br i1 %1846, label %1866, label %1847

1847:                                             ; preds = %1839, %1841
  %1848 = phi %"class.WTF::String"* [ %1840, %1839 ], [ %1845, %1841 ]
  %1849 = phi %"class.WTF::StringImpl"* [ %1818, %1839 ], [ %1844, %1841 ]
  %1850 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1849, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1851 = load atomic i32, i32* %1850 monotonic, align 4
  %1852 = and i32 %1851, 2
  %1853 = icmp eq i32 %1852, 0
  br i1 %1853, label %1854, label %1866

1854:                                             ; preds = %1847
  %1855 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1849, i64 0, i32 0
  %1856 = load i32, i32* %1855, align 4
  %1857 = zext i32 %1856 to i33
  %1858 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1857, i33 1) #7
  %1859 = extractvalue { i33, i1 } %1858, 1
  %1860 = extractvalue { i33, i1 } %1858, 0
  %1861 = icmp slt i33 %1860, 0
  %1862 = or i1 %1859, %1861
  br i1 %1862, label %1863, label %1864, !prof !2

1863:                                             ; preds = %1854
  call void @llvm.trap() #7
  unreachable

1864:                                             ; preds = %1854
  %1865 = trunc i33 %1860 to i32
  store i32 %1865, i32* %1855, align 4
  br label %1866

1866:                                             ; preds = %1820, %1864, %1847, %1841
  %1867 = phi i1 [ false, %1864 ], [ false, %1847 ], [ true, %1841 ], [ true, %1820 ]
  %1868 = phi %"class.WTF::String"* [ %1848, %1864 ], [ %1848, %1847 ], [ %1845, %1841 ], [ %1821, %1820 ]
  %1869 = phi %"class.WTF::StringImpl"* [ %1849, %1864 ], [ %1849, %1847 ], [ null, %1841 ], [ null, %1820 ]
  %1870 = ptrtoint %"class.WTF::StringImpl"* %1869 to i64
  %1871 = bitcast %"class.WTF::String"* %1868 to i64*
  %1872 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1868, i64 0, i32 0, i32 0
  %1873 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1872, align 8
  store i64 %1870, i64* %1871, align 8
  %1874 = icmp eq %"class.WTF::StringImpl"* %1873, null
  br i1 %1874, label %1888, label %1875

1875:                                             ; preds = %1866
  %1876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1873, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1877 = load atomic i32, i32* %1876 monotonic, align 4
  %1878 = and i32 %1877, 2
  %1879 = icmp eq i32 %1878, 0
  %1880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1873, i64 0, i32 0
  %1881 = load i32, i32* %1880, align 4
  br i1 %1879, label %1882, label %1884

1882:                                             ; preds = %1875
  %1883 = add i32 %1881, -1
  store i32 %1883, i32* %1880, align 4
  br label %1884

1884:                                             ; preds = %1882, %1875
  %1885 = phi i32 [ %1883, %1882 ], [ %1881, %1875 ]
  %1886 = icmp eq i32 %1885, 0
  br i1 %1886, label %1887, label %1888

1887:                                             ; preds = %1884
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1873) #7
  br label %1888

1888:                                             ; preds = %1866, %1884, %1887
  br i1 %1867, label %1902, label %1889

1889:                                             ; preds = %1888
  %1890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1869, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1891 = load atomic i32, i32* %1890 monotonic, align 4
  %1892 = and i32 %1891, 2
  %1893 = icmp eq i32 %1892, 0
  %1894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1869, i64 0, i32 0
  %1895 = load i32, i32* %1894, align 4
  br i1 %1893, label %1896, label %1898

1896:                                             ; preds = %1889
  %1897 = add i32 %1895, -1
  store i32 %1897, i32* %1894, align 4
  br label %1898

1898:                                             ; preds = %1896, %1889
  %1899 = phi i32 [ %1897, %1896 ], [ %1895, %1889 ]
  %1900 = icmp eq i32 %1899, 0
  br i1 %1900, label %1901, label %1902

1901:                                             ; preds = %1898
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1869) #7
  br label %1902

1902:                                             ; preds = %1888, %1898, %1901
  %1903 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1904 = load i8*, i8** %1903, align 8
  store i8* null, i8** %1903, align 8
  %1905 = icmp eq i8* %1904, null
  br i1 %1905, label %1907, label %1906

1906:                                             ; preds = %1902
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1904) #7
  br label %1907

1907:                                             ; preds = %1906, %1902
  %1908 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1744, align 8
  %1909 = icmp eq %"class.WTF::StringImpl"* %1908, null
  br i1 %1909, label %1923, label %1910

1910:                                             ; preds = %1907
  %1911 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1908, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1912 = load atomic i32, i32* %1911 monotonic, align 4
  %1913 = and i32 %1912, 2
  %1914 = icmp eq i32 %1913, 0
  %1915 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1908, i64 0, i32 0
  %1916 = load i32, i32* %1915, align 4
  br i1 %1914, label %1917, label %1919

1917:                                             ; preds = %1910
  %1918 = add i32 %1916, -1
  store i32 %1918, i32* %1915, align 4
  br label %1919

1919:                                             ; preds = %1917, %1910
  %1920 = phi i32 [ %1918, %1917 ], [ %1916, %1910 ]
  %1921 = icmp eq i32 %1920, 0
  br i1 %1921, label %1922, label %1923

1922:                                             ; preds = %1919
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1908) #7
  br label %1923

1923:                                             ; preds = %1907, %1919, %1922
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1741) #7
  br label %1946

1924:                                             ; preds = %1813, %1740
  %1925 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %22, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1926 = load i8*, i8** %1925, align 8
  store i8* null, i8** %1925, align 8
  %1927 = icmp eq i8* %1926, null
  br i1 %1927, label %1929, label %1928

1928:                                             ; preds = %1924
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1926) #7
  br label %1929

1929:                                             ; preds = %1928, %1924
  %1930 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1744, align 8
  %1931 = icmp eq %"class.WTF::StringImpl"* %1930, null
  br i1 %1931, label %1945, label %1932

1932:                                             ; preds = %1929
  %1933 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1930, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1934 = load atomic i32, i32* %1933 monotonic, align 4
  %1935 = and i32 %1934, 2
  %1936 = icmp eq i32 %1935, 0
  %1937 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1930, i64 0, i32 0
  %1938 = load i32, i32* %1937, align 4
  br i1 %1936, label %1939, label %1941

1939:                                             ; preds = %1932
  %1940 = add i32 %1938, -1
  store i32 %1940, i32* %1937, align 4
  br label %1941

1941:                                             ; preds = %1939, %1932
  %1942 = phi i32 [ %1940, %1939 ], [ %1938, %1932 ]
  %1943 = icmp eq i32 %1942, 0
  br i1 %1943, label %1944, label %1945

1944:                                             ; preds = %1941
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1930) #7
  br label %1945

1945:                                             ; preds = %1929, %1941, %1944
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1741) #7
  br label %2346

1946:                                             ; preds = %1923, %1734
  %1947 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 13, i32 0
  %1948 = bitcast %"class.v8::Name"** %1947 to %"class.v8::Value"**
  %1949 = load %"class.v8::Value"*, %"class.v8::Value"** %1948, align 8
  %1950 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %1949) #7
  %1951 = icmp eq %"class.v8::Value"* %1950, null
  br i1 %1951, label %1952, label %1958

1952:                                             ; preds = %1946
  %1953 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %1954 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1955 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1954, align 8
  %1956 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1955, i64 5
  %1957 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1956, align 8
  call void %1957(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1953) #7
  br label %2346

1958:                                             ; preds = %1946
  %1959 = bitcast %"class.v8::Value"* %1950 to i64*
  %1960 = load i64, i64* %1959, align 8
  %1961 = and i64 %1960, 3
  %1962 = icmp eq i64 %1961, 1
  br i1 %1962, label %1963, label %1993

1963:                                             ; preds = %1958
  %1964 = add i64 %1960, -1
  %1965 = inttoptr i64 %1964 to i32*
  %1966 = load i32, i32* %1965, align 4
  %1967 = and i64 %1960, -4294967296
  %1968 = zext i32 %1966 to i64
  %1969 = or i64 %1967, %1968
  %1970 = add i64 %1969, 7
  %1971 = inttoptr i64 %1970 to i16*
  %1972 = load i16, i16* %1971, align 2
  %1973 = icmp eq i16 %1972, 67
  br i1 %1973, label %1974, label %1993

1974:                                             ; preds = %1963
  %1975 = add i64 %1960, 23
  %1976 = inttoptr i64 %1975 to i32*
  %1977 = load i32, i32* %1976, align 4
  %1978 = and i32 %1977, -2
  %1979 = icmp eq i32 %1978, 10
  br i1 %1979, label %2028, label %1980

1980:                                             ; preds = %1974
  %1981 = add i64 %1960, 23
  %1982 = inttoptr i64 %1981 to i32*
  %1983 = load i32, i32* %1982, align 4
  %1984 = and i32 %1983, -2
  %1985 = icmp eq i32 %1984, 6
  br i1 %1985, label %1986, label %1993

1986:                                             ; preds = %1980
  %1987 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 17
  %1988 = bitcast %"class.blink::Member"* %1987 to i64*
  store atomic i64 0, i64* %1988 monotonic, align 8
  %1989 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1990 = icmp eq i32 %1989, 0
  br i1 %1990, label %2026, label %1991

1991:                                             ; preds = %1986
  %1992 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #7
  br label %2026

1993:                                             ; preds = %1963, %1958, %1980
  %1994 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %57, align 8
  %1995 = call zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"* %1994, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink13V8AbortSignal18wrapper_type_info_E, %"class.v8::Value"* nonnull %1950) #7
  br i1 %1995, label %1996, label %2017

1996:                                             ; preds = %1993
  %1997 = load i64, i64* %1959, align 8
  %1998 = add i64 %1997, -1
  %1999 = inttoptr i64 %1998 to i32*
  %2000 = load i32, i32* %1999, align 4
  %2001 = and i64 %1997, -4294967296
  %2002 = zext i32 %2000 to i64
  %2003 = or i64 %2001, %2002
  %2004 = add i64 %2003, 7
  %2005 = inttoptr i64 %2004 to i16*
  %2006 = load i16, i16* %2005, align 2
  switch i16 %2006, label %2011 [
    i16 1057, label %2007
    i16 1056, label %2007
    i16 1040, label %2007
  ]

2007:                                             ; preds = %1996, %1996, %1996
  %2008 = add i64 %1997, 19
  %2009 = inttoptr i64 %2008 to i8**
  %2010 = load i8*, i8** %2009, align 1
  br label %2014

2011:                                             ; preds = %1996
  %2012 = bitcast %"class.v8::Value"* %1950 to %"class.v8::Object"*
  %2013 = call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* nonnull %2012, i32 1) #7
  br label %2014

2014:                                             ; preds = %2007, %2011
  %2015 = phi i8* [ %2010, %2007 ], [ %2013, %2011 ]
  %2016 = icmp eq i8* %2015, null
  br i1 %2016, label %2017, label %2018

2017:                                             ; preds = %1993, %2014
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.29, i64 0, i64 0)) #7
  br label %2346

2018:                                             ; preds = %2014
  %2019 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 17
  %2020 = ptrtoint i8* %2015 to i64
  %2021 = bitcast %"class.blink::Member"* %2019 to i64*
  store atomic i64 %2020, i64* %2021 monotonic, align 8
  %2022 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %2023 = icmp eq i32 %2022, 0
  br i1 %2023, label %2026, label %2024

2024:                                             ; preds = %2018
  %2025 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %2015) #7
  br label %2026

2026:                                             ; preds = %2024, %2018, %1991, %1986
  %2027 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 3
  store i8 1, i8* %2027, align 2
  br label %2028

2028:                                             ; preds = %2026, %1974
  %2029 = icmp eq %"class.blink::ExecutionContext"* %63, null
  %2030 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %63, i64 0, i32 4
  %2031 = select i1 %2029, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %2030
  %2032 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27FetchUploadStreamingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %2031) #7
  br i1 %2032, label %2033, label %2082

2033:                                             ; preds = %2028
  %2034 = bitcast %"class.v8::Eternal"* %60 to %"class.v8::Value"**
  %2035 = load %"class.v8::Value"*, %"class.v8::Value"** %2034, align 8
  %2036 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %2035) #7
  %2037 = icmp eq %"class.v8::Value"* %2036, null
  br i1 %2037, label %2038, label %2044

2038:                                             ; preds = %2033
  %2039 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %2040 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2041 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2040, align 8
  %2042 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2041, i64 5
  %2043 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2042, align 8
  call void %2043(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2039) #7
  br label %2346

2044:                                             ; preds = %2033
  %2045 = bitcast %"class.v8::Value"* %2036 to i64*
  %2046 = load i64, i64* %2045, align 8
  %2047 = and i64 %2046, 3
  %2048 = icmp eq i64 %2047, 1
  br i1 %2048, label %2049, label %2066

2049:                                             ; preds = %2044
  %2050 = add i64 %2046, -1
  %2051 = inttoptr i64 %2050 to i32*
  %2052 = load i32, i32* %2051, align 4
  %2053 = and i64 %2046, -4294967296
  %2054 = zext i32 %2052 to i64
  %2055 = or i64 %2053, %2054
  %2056 = add i64 %2055, 7
  %2057 = inttoptr i64 %2056 to i16*
  %2058 = load i16, i16* %2057, align 2
  %2059 = icmp eq i16 %2058, 67
  br i1 %2059, label %2060, label %2066

2060:                                             ; preds = %2049
  %2061 = add i64 %2046, 23
  %2062 = inttoptr i64 %2061 to i32*
  %2063 = load i32, i32* %2062, align 4
  %2064 = and i32 %2063, -2
  %2065 = icmp eq i32 %2064, 10
  br i1 %2065, label %2082, label %2066

2066:                                             ; preds = %2049, %2044, %2060
  %2067 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %2036) #7
  br i1 %2067, label %2068, label %2071, !prof !3

2068:                                             ; preds = %2066
  %2069 = bitcast %"class.v8::Value"* %2036 to %"class.v8::Boolean"*
  %2070 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %2069) #7
  br label %2073

2071:                                             ; preds = %2066
  %2072 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %2036, %"class.v8::Isolate"* %0) #7
  br label %2073

2073:                                             ; preds = %2068, %2071
  %2074 = phi i1 [ %2070, %2068 ], [ %2072, %2071 ]
  %2075 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2076 = load i32, i32* %2075, align 8
  %2077 = icmp eq i32 %2076, 0
  br i1 %2077, label %2078, label %2346

2078:                                             ; preds = %2073
  %2079 = zext i1 %2074 to i8
  %2080 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 4
  store i8 %2079, i8* %2080, align 1
  %2081 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 1
  store i8 1, i8* %2081, align 8
  br label %2082

2082:                                             ; preds = %2060, %2078, %2028
  %2083 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %2031) #7
  br i1 %2083, label %2084, label %2304

2084:                                             ; preds = %2082
  %2085 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 5, i32 0
  %2086 = bitcast %"class.v8::Name"** %2085 to %"class.v8::Value"**
  %2087 = load %"class.v8::Value"*, %"class.v8::Value"** %2086, align 8
  %2088 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %2087) #7
  %2089 = icmp eq %"class.v8::Value"* %2088, null
  br i1 %2089, label %2090, label %2096

2090:                                             ; preds = %2084
  %2091 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %2092 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2093 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2092, align 8
  %2094 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2093, i64 5
  %2095 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2094, align 8
  call void %2095(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2091) #7
  br label %2346

2096:                                             ; preds = %2084
  %2097 = bitcast %"class.v8::Value"* %2088 to i64*
  %2098 = load i64, i64* %2097, align 8
  %2099 = and i64 %2098, 3
  %2100 = icmp eq i64 %2099, 1
  br i1 %2100, label %2101, label %2118

2101:                                             ; preds = %2096
  %2102 = add i64 %2098, -1
  %2103 = inttoptr i64 %2102 to i32*
  %2104 = load i32, i32* %2103, align 4
  %2105 = and i64 %2098, -4294967296
  %2106 = zext i32 %2104 to i64
  %2107 = or i64 %2105, %2106
  %2108 = add i64 %2107, 7
  %2109 = inttoptr i64 %2108 to i16*
  %2110 = load i16, i16* %2109, align 2
  %2111 = icmp eq i16 %2110, 67
  br i1 %2111, label %2112, label %2118

2112:                                             ; preds = %2101
  %2113 = add i64 %2098, 23
  %2114 = inttoptr i64 %2113 to i32*
  %2115 = load i32, i32* %2114, align 4
  %2116 = and i32 %2115, -2
  %2117 = icmp eq i32 %2116, 10
  br i1 %2117, label %2304, label %2118

2118:                                             ; preds = %2101, %2096, %2112
  %2119 = bitcast %"class.blink::V8StringResource"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2119) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2119, i8 -86, i64 152, i1 false)
  %2120 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %25, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2088, %"class.v8::Value"** %2120, align 8
  %2121 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %25, i64 0, i32 1
  store i32 0, i32* %2121, align 8
  %2122 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %25, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2122, align 8
  %2123 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %25, i64 0, i32 3, i32 1
  %2124 = bitcast %"class.std::__1::unique_ptr.312"* %2123 to i64*
  store i64 0, i64* %2124, align 8
  %2125 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %25, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2125, label %2126, label %2280

2126:                                             ; preds = %2118
  %2127 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2127) #7
  %2128 = load %"class.v8::Value"*, %"class.v8::Value"** %2120, align 8
  %2129 = icmp eq %"class.v8::Value"* %2128, null
  br i1 %2129, label %2134, label %2130, !prof !2

2130:                                             ; preds = %2126
  %2131 = bitcast %"class.v8::Value"* %2128 to %"class.v8::String"*
  %2132 = load i32, i32* %2121, align 8
  %2133 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2131, i32 %2132) #7
  br label %2154

2134:                                             ; preds = %2126
  %2135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2122, align 8
  %2136 = icmp eq %"class.WTF::StringImpl"* %2135, null
  br i1 %2136, label %2154, label %2137

2137:                                             ; preds = %2134
  %2138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2139 = load atomic i32, i32* %2138 monotonic, align 4
  %2140 = and i32 %2139, 2
  %2141 = icmp eq i32 %2140, 0
  br i1 %2141, label %2142, label %2154

2142:                                             ; preds = %2137
  %2143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2135, i64 0, i32 0
  %2144 = load i32, i32* %2143, align 4
  %2145 = zext i32 %2144 to i33
  %2146 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2145, i33 1) #7
  %2147 = extractvalue { i33, i1 } %2146, 1
  %2148 = extractvalue { i33, i1 } %2146, 0
  %2149 = icmp slt i33 %2148, 0
  %2150 = or i1 %2147, %2149
  br i1 %2150, label %2151, label %2152, !prof !2

2151:                                             ; preds = %2142
  call void @llvm.trap() #7
  unreachable

2152:                                             ; preds = %2142
  %2153 = trunc i33 %2148 to i32
  store i32 %2153, i32* %2143, align 4
  br label %2154

2154:                                             ; preds = %2130, %2134, %2137, %2152
  %2155 = phi %"class.WTF::StringImpl"* [ %2133, %2130 ], [ null, %2134 ], [ %2135, %2137 ], [ %2135, %2152 ]
  %2156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2155, %"class.WTF::StringImpl"** %2156, align 8
  %2157 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2157) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i64 17) #7
  %2158 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %26, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateEE12kValidValues_4, i64 0, i64 0), i64 3, %"class.WTF::String"* nonnull dereferenceable(8) %27, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %2159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %2160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2159, align 8
  %2161 = icmp eq %"class.WTF::StringImpl"* %2160, null
  br i1 %2161, label %2175, label %2162

2162:                                             ; preds = %2154
  %2163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2164 = load atomic i32, i32* %2163 monotonic, align 4
  %2165 = and i32 %2164, 2
  %2166 = icmp eq i32 %2165, 0
  %2167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2160, i64 0, i32 0
  %2168 = load i32, i32* %2167, align 4
  br i1 %2166, label %2169, label %2171

2169:                                             ; preds = %2162
  %2170 = add i32 %2168, -1
  store i32 %2170, i32* %2167, align 4
  br label %2171

2171:                                             ; preds = %2169, %2162
  %2172 = phi i32 [ %2170, %2169 ], [ %2168, %2162 ]
  %2173 = icmp eq i32 %2172, 0
  br i1 %2173, label %2174, label %2175

2174:                                             ; preds = %2171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2160) #7
  br label %2175

2175:                                             ; preds = %2154, %2171, %2174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2157) #7
  %2176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2156, align 8
  %2177 = icmp eq %"class.WTF::StringImpl"* %2176, null
  br i1 %2177, label %2191, label %2178

2178:                                             ; preds = %2175
  %2179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2180 = load atomic i32, i32* %2179 monotonic, align 4
  %2181 = and i32 %2180, 2
  %2182 = icmp eq i32 %2181, 0
  %2183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2176, i64 0, i32 0
  %2184 = load i32, i32* %2183, align 4
  br i1 %2182, label %2185, label %2187

2185:                                             ; preds = %2178
  %2186 = add i32 %2184, -1
  store i32 %2186, i32* %2183, align 4
  br label %2187

2187:                                             ; preds = %2185, %2178
  %2188 = phi i32 [ %2186, %2185 ], [ %2184, %2178 ]
  %2189 = icmp eq i32 %2188, 0
  br i1 %2189, label %2190, label %2191

2190:                                             ; preds = %2187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2176) #7
  br label %2191

2191:                                             ; preds = %2175, %2187, %2190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2127) #7
  br i1 %2158, label %2192, label %2280

2192:                                             ; preds = %2191
  %2193 = load %"class.v8::Value"*, %"class.v8::Value"** %2120, align 8
  %2194 = icmp eq %"class.v8::Value"* %2193, null
  br i1 %2194, label %2195, label %2219, !prof !2

2195:                                             ; preds = %2192
  %2196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2122, align 8
  %2197 = icmp eq %"class.WTF::StringImpl"* %2196, null
  br i1 %2197, label %2198, label %2200

2198:                                             ; preds = %2195
  %2199 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 9
  br label %2244

2200:                                             ; preds = %2195
  %2201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2202 = load atomic i32, i32* %2201 monotonic, align 4
  %2203 = and i32 %2202, 2
  %2204 = icmp eq i32 %2203, 0
  br i1 %2204, label %2205, label %2217

2205:                                             ; preds = %2200
  %2206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2196, i64 0, i32 0
  %2207 = load i32, i32* %2206, align 4
  %2208 = zext i32 %2207 to i33
  %2209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2208, i33 1) #7
  %2210 = extractvalue { i33, i1 } %2209, 1
  %2211 = extractvalue { i33, i1 } %2209, 0
  %2212 = icmp slt i33 %2211, 0
  %2213 = or i1 %2210, %2212
  br i1 %2213, label %2214, label %2215, !prof !2

2214:                                             ; preds = %2205
  call void @llvm.trap() #7
  unreachable

2215:                                             ; preds = %2205
  %2216 = trunc i33 %2211 to i32
  store i32 %2216, i32* %2206, align 4
  br label %2217

2217:                                             ; preds = %2200, %2215
  %2218 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 9
  br label %2225

2219:                                             ; preds = %2192
  %2220 = bitcast %"class.v8::Value"* %2193 to %"class.v8::String"*
  %2221 = load i32, i32* %2121, align 8
  %2222 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2220, i32 %2221) #7
  %2223 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %2, i64 0, i32 9
  %2224 = icmp eq %"class.WTF::StringImpl"* %2222, null
  br i1 %2224, label %2244, label %2225

2225:                                             ; preds = %2217, %2219
  %2226 = phi %"class.WTF::String"* [ %2218, %2217 ], [ %2223, %2219 ]
  %2227 = phi %"class.WTF::StringImpl"* [ %2196, %2217 ], [ %2222, %2219 ]
  %2228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2229 = load atomic i32, i32* %2228 monotonic, align 4
  %2230 = and i32 %2229, 2
  %2231 = icmp eq i32 %2230, 0
  br i1 %2231, label %2232, label %2244

2232:                                             ; preds = %2225
  %2233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2227, i64 0, i32 0
  %2234 = load i32, i32* %2233, align 4
  %2235 = zext i32 %2234 to i33
  %2236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2235, i33 1) #7
  %2237 = extractvalue { i33, i1 } %2236, 1
  %2238 = extractvalue { i33, i1 } %2236, 0
  %2239 = icmp slt i33 %2238, 0
  %2240 = or i1 %2237, %2239
  br i1 %2240, label %2241, label %2242, !prof !2

2241:                                             ; preds = %2232
  call void @llvm.trap() #7
  unreachable

2242:                                             ; preds = %2232
  %2243 = trunc i33 %2238 to i32
  store i32 %2243, i32* %2233, align 4
  br label %2244

2244:                                             ; preds = %2198, %2242, %2225, %2219
  %2245 = phi i1 [ false, %2242 ], [ false, %2225 ], [ true, %2219 ], [ true, %2198 ]
  %2246 = phi %"class.WTF::String"* [ %2226, %2242 ], [ %2226, %2225 ], [ %2223, %2219 ], [ %2199, %2198 ]
  %2247 = phi %"class.WTF::StringImpl"* [ %2227, %2242 ], [ %2227, %2225 ], [ null, %2219 ], [ null, %2198 ]
  %2248 = ptrtoint %"class.WTF::StringImpl"* %2247 to i64
  %2249 = bitcast %"class.WTF::String"* %2246 to i64*
  %2250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2246, i64 0, i32 0, i32 0
  %2251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2250, align 8
  store i64 %2248, i64* %2249, align 8
  %2252 = icmp eq %"class.WTF::StringImpl"* %2251, null
  br i1 %2252, label %2266, label %2253

2253:                                             ; preds = %2244
  %2254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2255 = load atomic i32, i32* %2254 monotonic, align 4
  %2256 = and i32 %2255, 2
  %2257 = icmp eq i32 %2256, 0
  %2258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2251, i64 0, i32 0
  %2259 = load i32, i32* %2258, align 4
  br i1 %2257, label %2260, label %2262

2260:                                             ; preds = %2253
  %2261 = add i32 %2259, -1
  store i32 %2261, i32* %2258, align 4
  br label %2262

2262:                                             ; preds = %2260, %2253
  %2263 = phi i32 [ %2261, %2260 ], [ %2259, %2253 ]
  %2264 = icmp eq i32 %2263, 0
  br i1 %2264, label %2265, label %2266

2265:                                             ; preds = %2262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2251) #7
  br label %2266

2266:                                             ; preds = %2244, %2262, %2265
  br i1 %2245, label %2280, label %2267

2267:                                             ; preds = %2266
  %2268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2247, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2269 = load atomic i32, i32* %2268 monotonic, align 4
  %2270 = and i32 %2269, 2
  %2271 = icmp eq i32 %2270, 0
  %2272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2247, i64 0, i32 0
  %2273 = load i32, i32* %2272, align 4
  br i1 %2271, label %2274, label %2276

2274:                                             ; preds = %2267
  %2275 = add i32 %2273, -1
  store i32 %2275, i32* %2272, align 4
  br label %2276

2276:                                             ; preds = %2274, %2267
  %2277 = phi i32 [ %2275, %2274 ], [ %2273, %2267 ]
  %2278 = icmp eq i32 %2277, 0
  br i1 %2278, label %2279, label %2280

2279:                                             ; preds = %2276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2247) #7
  br label %2280

2280:                                             ; preds = %2279, %2276, %2266, %2191, %2118
  %2281 = phi i32 [ 1, %2118 ], [ 1, %2191 ], [ 0, %2266 ], [ 0, %2276 ], [ 0, %2279 ]
  %2282 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %25, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2283 = load i8*, i8** %2282, align 8
  store i8* null, i8** %2282, align 8
  %2284 = icmp eq i8* %2283, null
  br i1 %2284, label %2286, label %2285

2285:                                             ; preds = %2280
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2283) #7
  br label %2286

2286:                                             ; preds = %2285, %2280
  %2287 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2122, align 8
  %2288 = icmp eq %"class.WTF::StringImpl"* %2287, null
  br i1 %2288, label %2302, label %2289

2289:                                             ; preds = %2286
  %2290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2287, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2291 = load atomic i32, i32* %2290 monotonic, align 4
  %2292 = and i32 %2291, 2
  %2293 = icmp eq i32 %2292, 0
  %2294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2287, i64 0, i32 0
  %2295 = load i32, i32* %2294, align 4
  br i1 %2293, label %2296, label %2298

2296:                                             ; preds = %2289
  %2297 = add i32 %2295, -1
  store i32 %2297, i32* %2294, align 4
  br label %2298

2298:                                             ; preds = %2296, %2289
  %2299 = phi i32 [ %2297, %2296 ], [ %2295, %2289 ]
  %2300 = icmp eq i32 %2299, 0
  br i1 %2300, label %2301, label %2302

2301:                                             ; preds = %2298
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2287) #7
  br label %2302

2302:                                             ; preds = %2286, %2298, %2301
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2119) #7
  %2303 = icmp eq i32 %2281, 0
  br i1 %2303, label %2304, label %2346

2304:                                             ; preds = %2302, %2112, %2082
  %2305 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase18TrustTokensEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %2031) #7
  br i1 %2305, label %2306, label %2346

2306:                                             ; preds = %2304
  %2307 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %60, i64 14, i32 0
  %2308 = bitcast %"class.v8::Name"** %2307 to %"class.v8::Value"**
  %2309 = load %"class.v8::Value"*, %"class.v8::Value"** %2308, align 8
  %2310 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %54, %"class.v8::Context"* %62, %"class.v8::Value"* %2309) #7
  %2311 = icmp eq %"class.v8::Value"* %2310, null
  br i1 %2311, label %2312, label %2318

2312:                                             ; preds = %2306
  %2313 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %2314 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2315 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2314, align 8
  %2316 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2315, i64 5
  %2317 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2316, align 8
  call void %2317(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2313) #7
  br label %2346

2318:                                             ; preds = %2306
  %2319 = bitcast %"class.v8::Value"* %2310 to i64*
  %2320 = load i64, i64* %2319, align 8
  %2321 = and i64 %2320, 3
  %2322 = icmp eq i64 %2321, 1
  br i1 %2322, label %2323, label %2340

2323:                                             ; preds = %2318
  %2324 = add i64 %2320, -1
  %2325 = inttoptr i64 %2324 to i32*
  %2326 = load i32, i32* %2325, align 4
  %2327 = and i64 %2320, -4294967296
  %2328 = zext i32 %2326 to i64
  %2329 = or i64 %2327, %2328
  %2330 = add i64 %2329, 7
  %2331 = inttoptr i64 %2330 to i16*
  %2332 = load i16, i16* %2331, align 2
  %2333 = icmp eq i16 %2332, 67
  br i1 %2333, label %2334, label %2340

2334:                                             ; preds = %2323
  %2335 = add i64 %2320, 23
  %2336 = inttoptr i64 %2335 to i32*
  %2337 = load i32, i32* %2336, align 4
  %2338 = and i32 %2337, -2
  %2339 = icmp eq i32 %2338, 10
  br i1 %2339, label %2346, label %2340

2340:                                             ; preds = %2323, %2318, %2334
  %2341 = call %"class.blink::TrustToken"* @_ZN5blink17NativeValueTraitsINS_10TrustTokenEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2310, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %2342 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2343 = load i32, i32* %2342, align 8
  %2344 = icmp eq i32 %2343, 0
  br i1 %2344, label %2345, label %2346

2345:                                             ; preds = %2340
  call void @_ZN5blink11RequestInit13setTrustTokenEPNS_10TrustTokenE(%"class.blink::RequestInit"* %2, %"class.blink::TrustToken"* %2341) #7
  br label %2346

2346:                                             ; preds = %1705, %1702, %1692, %1055, %1052, %1042, %2073, %2340, %877, %2302, %2090, %147, %380, %627, %661, %842, %1062, %1295, %1542, %1952, %2017, %2304, %2038, %2345, %2334, %2312, %1945, %1712, %1535, %1302, %892, %835, %668, %620, %387, %69
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #7
  br label %2347

2347:                                             ; preds = %45, %45, %4, %2346, %52
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

declare void @_ZN5blink11RequestInit7setBodyENS_11ScriptValueE(%"class.blink::RequestInit"*, %"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink54ByteStringSequenceSequenceOrByteStringByteStringRecordC1Ev(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"*) unnamed_addr #1

declare void @_ZN5blink56V8ByteStringSequenceSequenceOrByteStringByteStringRecord6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEERNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordENS_23UnionTypeConversionModeERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40), i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink11RequestInit10setHeadersERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordE(%"class.blink::RequestInit"*, %"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink54ByteStringSequenceSequenceOrByteStringByteStringRecordD1Ev(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_17IDLByteStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.312"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #7
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #7
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #7
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #7
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #7
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #7
  br label %173

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %31, label %53, !prof !2

31:                                               ; preds = %28
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %173, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #7
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %39
  call void @llvm.trap() #7
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %34, %49
  %52 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  br label %59

53:                                               ; preds = %28
  %54 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %55 = load i32, i32* %8, align 8
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %54, i32 %55) #7
  %57 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  %58 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %58, label %173, label %59

59:                                               ; preds = %51, %53
  %60 = phi i64 [ %52, %51 ], [ %57, %53 ]
  %61 = phi %"class.WTF::StringImpl"* [ %32, %51 ], [ %56, %53 ]
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %173, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %173

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 1
  %72 = bitcast %"class.WTF::StringImpl"* %71 to i16*
  %73 = zext i32 %63 to i64
  %74 = icmp ult i32 %63, 8
  br i1 %74, label %141, label %75

75:                                               ; preds = %70
  %76 = and i64 %73, 4294967288
  %77 = add nsw i64 %76, -8
  %78 = lshr exact i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 1
  %81 = icmp eq i64 %77, 0
  br i1 %81, label %113, label %82

82:                                               ; preds = %75
  %83 = sub nuw nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %110, %84 ]
  %86 = phi <4 x i32> [ zeroinitializer, %82 ], [ %108, %84 ]
  %87 = phi <4 x i32> [ zeroinitializer, %82 ], [ %109, %84 ]
  %88 = phi i64 [ %83, %82 ], [ %111, %84 ]
  %89 = getelementptr inbounds i16, i16* %72, i64 %85
  %90 = bitcast i16* %89 to <4 x i16>*
  %91 = load <4 x i16>, <4 x i16>* %90, align 2
  %92 = getelementptr inbounds i16, i16* %89, i64 4
  %93 = bitcast i16* %92 to <4 x i16>*
  %94 = load <4 x i16>, <4 x i16>* %93, align 2
  %95 = zext <4 x i16> %91 to <4 x i32>
  %96 = zext <4 x i16> %94 to <4 x i32>
  %97 = or <4 x i32> %86, %95
  %98 = or <4 x i32> %87, %96
  %99 = or i64 %85, 8
  %100 = getelementptr inbounds i16, i16* %72, i64 %99
  %101 = bitcast i16* %100 to <4 x i16>*
  %102 = load <4 x i16>, <4 x i16>* %101, align 2
  %103 = getelementptr inbounds i16, i16* %100, i64 4
  %104 = bitcast i16* %103 to <4 x i16>*
  %105 = load <4 x i16>, <4 x i16>* %104, align 2
  %106 = zext <4 x i16> %102 to <4 x i32>
  %107 = zext <4 x i16> %105 to <4 x i32>
  %108 = or <4 x i32> %97, %106
  %109 = or <4 x i32> %98, %107
  %110 = add i64 %85, 16
  %111 = add i64 %88, -2
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %84, !llvm.loop !4

113:                                              ; preds = %84, %75
  %114 = phi <4 x i32> [ undef, %75 ], [ %108, %84 ]
  %115 = phi <4 x i32> [ undef, %75 ], [ %109, %84 ]
  %116 = phi i64 [ 0, %75 ], [ %110, %84 ]
  %117 = phi <4 x i32> [ zeroinitializer, %75 ], [ %108, %84 ]
  %118 = phi <4 x i32> [ zeroinitializer, %75 ], [ %109, %84 ]
  %119 = icmp eq i64 %80, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds i16, i16* %72, i64 %116
  %122 = getelementptr inbounds i16, i16* %121, i64 4
  %123 = bitcast i16* %122 to <4 x i16>*
  %124 = load <4 x i16>, <4 x i16>* %123, align 2
  %125 = zext <4 x i16> %124 to <4 x i32>
  %126 = or <4 x i32> %118, %125
  %127 = bitcast i16* %121 to <4 x i16>*
  %128 = load <4 x i16>, <4 x i16>* %127, align 2
  %129 = zext <4 x i16> %128 to <4 x i32>
  %130 = or <4 x i32> %117, %129
  br label %131

131:                                              ; preds = %113, %120
  %132 = phi <4 x i32> [ %114, %113 ], [ %130, %120 ]
  %133 = phi <4 x i32> [ %115, %113 ], [ %126, %120 ]
  %134 = or <4 x i32> %133, %132
  %135 = shufflevector <4 x i32> %134, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %136 = or <4 x i32> %134, %135
  %137 = shufflevector <4 x i32> %136, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %138 = or <4 x i32> %136, %137
  %139 = extractelement <4 x i32> %138, i32 0
  %140 = icmp eq i64 %76, %73
  br i1 %140, label %153, label %141

141:                                              ; preds = %131, %70
  %142 = phi i64 [ 0, %70 ], [ %76, %131 ]
  %143 = phi i32 [ 0, %70 ], [ %139, %131 ]
  br label %144

144:                                              ; preds = %141, %144
  %145 = phi i64 [ %151, %144 ], [ %142, %141 ]
  %146 = phi i32 [ %150, %144 ], [ %143, %141 ]
  %147 = getelementptr inbounds i16, i16* %72, i64 %145
  %148 = load i16, i16* %147, align 2
  %149 = zext i16 %148 to i32
  %150 = or i32 %146, %149
  %151 = add nuw nsw i64 %145, 1
  %152 = icmp eq i64 %151, %73
  br i1 %152, label %153, label %144, !llvm.loop !6

153:                                              ; preds = %144, %131
  %154 = phi i32 [ %139, %131 ], [ %150, %144 ]
  %155 = and i32 %154, 65280
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %153
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.55, i64 0, i64 0)) #7
  %158 = inttoptr i64 %60 to %"class.WTF::StringImpl"*
  %159 = icmp eq i64 %60, 0
  br i1 %159, label %173, label %160

160:                                              ; preds = %157
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %158, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %169

167:                                              ; preds = %160
  %168 = add i32 %166, -1
  store i32 %168, i32* %165, align 4
  br label %169

169:                                              ; preds = %167, %160
  %170 = phi i32 [ %168, %167 ], [ %166, %160 ]
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %173

172:                                              ; preds = %169
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %158) #7
  br label %173

173:                                              ; preds = %31, %53, %65, %59, %153, %172, %169, %157, %22
  %174 = phi i64 [ 0, %22 ], [ 0, %157 ], [ 0, %169 ], [ 0, %172 ], [ %60, %153 ], [ %57, %53 ], [ %60, %65 ], [ %60, %59 ], [ 0, %31 ]
  %175 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %176 = load i8*, i8** %175, align 8
  store i8* null, i8** %175, align 8
  %177 = icmp eq i8* %176, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %173
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %176) #7
  br label %179

179:                                              ; preds = %178, %173
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #7
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #7
  %196 = inttoptr i64 %174 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %196
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_16IDLUSVStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.312"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #7
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #7
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #7
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #7
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #7
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #7
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #7
  br label %58

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !2

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #7
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #7
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  call void @llvm.trap() #7
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %31, %35, %38, %53
  %56 = phi %"class.WTF::StringImpl"* [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = call %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"* %56) #7
  br label %58

58:                                               ; preds = %55, %22
  %59 = phi %"class.WTF::StringImpl"* [ %57, %55 ], [ null, %22 ]
  %60 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  store i8* null, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %61) #7
  br label %64

64:                                               ; preds = %63, %58
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #7
  br label %80

80:                                               ; preds = %64, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #7
  ret %"class.WTF::StringImpl"* %59
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27FetchUploadStreamingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase18TrustTokensEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare %"class.blink::TrustToken"* @_ZN5blink17NativeValueTraitsINS_10TrustTokenEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink11RequestInit13setTrustTokenEPNS_10TrustTokenE(%"class.blink::RequestInit"*, %"class.blink::TrustToken"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink11RequestInit8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::RequestInit"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink15toV8RequestInitEPKNS_11RequestInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::RequestInit"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15toV8RequestInitEPKNS_11RequestInitEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::RequestInit"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %16 = add i64 %15, 8
  %17 = inttoptr i64 %16 to %"class.blink::V8PerIsolateData"**
  %18 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %17, align 8
  %19 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %18, i8* bitcast ([15 x i8*]* @_ZZN5blinkL24eternalV8RequestInitKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.436"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.436"*)) #7
  %20 = extractvalue { i64, %"class.v8::Eternal"* } %19, 1
  %21 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %22 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %21) #7
  %23 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %24, null
  br i1 %25, label %91, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 5
  %28 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %27) #7
  %29 = icmp eq %"class.v8::Value"* %28, null
  br i1 %29, label %52, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.v8::Value"* %28 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 3
  %34 = icmp eq i64 %33, 1
  br i1 %34, label %35, label %52

35:                                               ; preds = %30
  %36 = add i64 %32, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = and i64 %32, -4294967296
  %40 = zext i32 %38 to i64
  %41 = or i64 %39, %40
  %42 = add i64 %41, 7
  %43 = inttoptr i64 %42 to i16*
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 67
  br i1 %45, label %46, label %52

46:                                               ; preds = %35
  %47 = add i64 %32, 23
  %48 = inttoptr i64 %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, -2
  %51 = icmp eq i32 %50, 10
  br i1 %51, label %91, label %52

52:                                               ; preds = %46, %35, %30, %26
  %53 = bitcast %"class.blink::ScriptValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #7
  %54 = bitcast %"class.blink::ScriptValue"* %27 to i64*
  %55 = load i64, i64* %54, align 8, !noalias !8
  %56 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %55, i64* %56, align 8, !alias.scope !8
  %57 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %58 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %59, align 8, !alias.scope !8
  %60 = icmp eq %"class.blink::ScriptValue"* %27, %5
  br i1 %60, label %65, label %61

61:                                               ; preds = %52
  %62 = load i64*, i64** %23, align 8, !noalias !8
  %63 = icmp eq i64* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %23, i64** %59) #7
  br label %65

65:                                               ; preds = %64, %61, %52
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %58) #7
  %66 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 5, i32 1, i32 1, i32 0
  %67 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %66, align 8, !noalias !8
  %68 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %67, %"class.blink::DOMWrapperWorld"** %68, align 8, !alias.scope !8
  %69 = icmp eq %"class.blink::DOMWrapperWorld"* %67, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %67, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #7
  br label %72

72:                                               ; preds = %65, %70
  %73 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %5) #7
  %74 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %68, align 8
  %75 = icmp eq %"class.blink::DOMWrapperWorld"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %74, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #7
  %78 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %74) #7
  %82 = bitcast %"class.blink::DOMWrapperWorld"* %74 to i8*
  call void @free(i8* %82) #7
  br label %83

83:                                               ; preds = %72, %76, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #7
  %84 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 1, i32 0
  %85 = load %"class.v8::Name"*, %"class.v8::Name"** %84, align 8
  %86 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %85, %"class.v8::Value"* %73) #7
  %87 = trunc i16 %86 to i8
  %88 = icmp ne i8 %87, 0
  %89 = icmp ugt i16 %86, 255
  %90 = and i1 %89, %88
  br i1 %90, label %91, label %404

91:                                               ; preds = %46, %4, %83
  %92 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 6, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %113, label %95

95:                                               ; preds = %91
  %96 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %96) #7
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %102 = bitcast i8** %101 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %99, i32* %103, align 8
  %104 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %96) #7
  %105 = bitcast %"class.v8::String"* %104 to %"class.v8::Value"*
  %106 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 2, i32 0
  %107 = load %"class.v8::Name"*, %"class.v8::Name"** %106, align 8
  %108 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %107, %"class.v8::Value"* %105) #7
  %109 = trunc i16 %108 to i8
  %110 = icmp ne i8 %109, 0
  %111 = icmp ugt i16 %108, 255
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %404

113:                                              ; preds = %91, %95
  %114 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 7, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %135, label %117

117:                                              ; preds = %113
  %118 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #7
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"** %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 1
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 1
  %123 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %124 = bitcast i8** %123 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %124, align 8
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %121, i32* %125, align 8
  %126 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #7
  %127 = bitcast %"class.v8::String"* %126 to %"class.v8::Value"*
  %128 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 3, i32 0
  %129 = load %"class.v8::Name"*, %"class.v8::Name"** %128, align 8
  %130 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %129, %"class.v8::Value"* %127) #7
  %131 = trunc i16 %130 to i8
  %132 = icmp ne i8 %131, 0
  %133 = icmp ugt i16 %130, 255
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %404

135:                                              ; preds = %113, %117
  %136 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 8, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %149, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 8
  %141 = call %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40) %140, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %142 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 4, i32 0
  %143 = load %"class.v8::Name"*, %"class.v8::Name"** %142, align 8
  %144 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %143, %"class.v8::Value"* %141) #7
  %145 = trunc i16 %144 to i8
  %146 = icmp ne i8 %145, 0
  %147 = icmp ugt i16 %144, 255
  %148 = and i1 %147, %146
  br i1 %148, label %149, label %404

149:                                              ; preds = %135, %139
  %150 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 10, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %171, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #7
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 1
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %160, align 8
  %161 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %157, i32* %161, align 8
  %162 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #7
  %163 = bitcast %"class.v8::String"* %162 to %"class.v8::Value"*
  %164 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 6, i32 0
  %165 = load %"class.v8::Name"*, %"class.v8::Name"** %164, align 8
  %166 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %165, %"class.v8::Value"* %163) #7
  %167 = trunc i16 %166 to i8
  %168 = icmp ne i8 %167, 0
  %169 = icmp ugt i16 %166, 255
  %170 = and i1 %169, %168
  br i1 %170, label %171, label %404

171:                                              ; preds = %149, %153
  %172 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 2
  %173 = load i8, i8* %172, align 1, !range !11
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 11
  %177 = load i8, i8* %176, align 8, !range !11
  %178 = icmp eq i8 %177, 0
  %179 = select i1 %178, i64 192, i64 184
  %180 = add i64 %179, %15
  %181 = inttoptr i64 %180 to %"class.v8::Value"*
  %182 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 7, i32 0
  %183 = load %"class.v8::Name"*, %"class.v8::Name"** %182, align 8
  %184 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %183, %"class.v8::Value"* %181) #7
  %185 = trunc i16 %184 to i8
  %186 = icmp ne i8 %185, 0
  %187 = icmp ugt i16 %184, 255
  %188 = and i1 %187, %186
  br i1 %188, label %189, label %404

189:                                              ; preds = %171, %175
  %190 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 12, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %211, label %193

193:                                              ; preds = %189
  %194 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #7
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 1
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %200 = bitcast i8** %199 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %198, %"class.WTF::StringImpl"** %200, align 8
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %197, i32* %201, align 8
  %202 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #7
  %203 = bitcast %"class.v8::String"* %202 to %"class.v8::Value"*
  %204 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 8, i32 0
  %205 = load %"class.v8::Name"*, %"class.v8::Name"** %204, align 8
  %206 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %205, %"class.v8::Value"* %203) #7
  %207 = trunc i16 %206 to i8
  %208 = icmp ne i8 %207, 0
  %209 = icmp ugt i16 %206, 255
  %210 = and i1 %209, %208
  br i1 %210, label %211, label %404

211:                                              ; preds = %189, %193
  %212 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 13, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %233, label %215

215:                                              ; preds = %211
  %216 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #7
  %217 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %213, %"class.WTF::StringImpl"** %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 1
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %222 = bitcast i8** %221 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %220, %"class.WTF::StringImpl"** %222, align 8
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %219, i32* %223, align 8
  %224 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #7
  %225 = bitcast %"class.v8::String"* %224 to %"class.v8::Value"*
  %226 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 9, i32 0
  %227 = load %"class.v8::Name"*, %"class.v8::Name"** %226, align 8
  %228 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %227, %"class.v8::Value"* %225) #7
  %229 = trunc i16 %228 to i8
  %230 = icmp ne i8 %229, 0
  %231 = icmp ugt i16 %228, 255
  %232 = and i1 %231, %230
  br i1 %232, label %233, label %404

233:                                              ; preds = %211, %215
  %234 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 14, i32 0, i32 0
  %235 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %236 = icmp eq %"class.WTF::StringImpl"* %235, null
  br i1 %236, label %255, label %237

237:                                              ; preds = %233
  %238 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #7
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %235, %"class.WTF::StringImpl"** %239, align 8
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %235, i64 1
  %243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %244 = bitcast i8** %243 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %244, align 8
  %245 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %241, i32* %245, align 8
  %246 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %238) #7
  %247 = bitcast %"class.v8::String"* %246 to %"class.v8::Value"*
  %248 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 10, i32 0
  %249 = load %"class.v8::Name"*, %"class.v8::Name"** %248, align 8
  %250 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %249, %"class.v8::Value"* %247) #7
  %251 = trunc i16 %250 to i8
  %252 = icmp ne i8 %251, 0
  %253 = icmp ugt i16 %250, 255
  %254 = and i1 %253, %252
  br i1 %254, label %255, label %404

255:                                              ; preds = %233, %237
  %256 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 15, i32 0, i32 0
  %257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %258 = icmp eq %"class.WTF::StringImpl"* %257, null
  br i1 %258, label %277, label %259

259:                                              ; preds = %255
  %260 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %260) #7
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %257, %"class.WTF::StringImpl"** %261, align 8
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 1
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %266 = bitcast i8** %265 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %264, %"class.WTF::StringImpl"** %266, align 8
  %267 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %263, i32* %267, align 8
  %268 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %260) #7
  %269 = bitcast %"class.v8::String"* %268 to %"class.v8::Value"*
  %270 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 11, i32 0
  %271 = load %"class.v8::Name"*, %"class.v8::Name"** %270, align 8
  %272 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %271, %"class.v8::Value"* %269) #7
  %273 = trunc i16 %272 to i8
  %274 = icmp ne i8 %273, 0
  %275 = icmp ugt i16 %272, 255
  %276 = and i1 %275, %274
  br i1 %276, label %277, label %404

277:                                              ; preds = %255, %259
  %278 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 16, i32 0, i32 0
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %299, label %281

281:                                              ; preds = %277
  %282 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %282) #7
  %283 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %279, %"class.WTF::StringImpl"** %283, align 8
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 1
  %287 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %288 = bitcast i8** %287 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %286, %"class.WTF::StringImpl"** %288, align 8
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %285, i32* %289, align 8
  %290 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %282) #7
  %291 = bitcast %"class.v8::String"* %290 to %"class.v8::Value"*
  %292 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 12, i32 0
  %293 = load %"class.v8::Name"*, %"class.v8::Name"** %292, align 8
  %294 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %293, %"class.v8::Value"* %291) #7
  %295 = trunc i16 %294 to i8
  %296 = icmp ne i8 %295, 0
  %297 = icmp ugt i16 %294, 255
  %298 = and i1 %297, %296
  br i1 %298, label %299, label %404

299:                                              ; preds = %277, %281
  %300 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 3
  %301 = load i8, i8* %300, align 2, !range !11
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %336, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 17, i32 0, i32 0
  %305 = load %"class.blink::AbortSignal"*, %"class.blink::AbortSignal"** %304, align 8
  %306 = getelementptr inbounds %"class.blink::AbortSignal", %"class.blink::AbortSignal"* %305, i64 0, i32 0, i32 0, i32 0
  %307 = icmp eq %"class.blink::AbortSignal"* %305, null
  br i1 %307, label %308, label %310, !prof !2

308:                                              ; preds = %303
  %309 = add i64 %15, 176
  br label %326

310:                                              ; preds = %303
  %311 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %306, %"class.v8::Isolate"* %3) #7
  %312 = ptrtoint %"class.v8::Object"* %311 to i64
  %313 = icmp eq %"class.v8::Object"* %311, null
  br i1 %313, label %314, label %326

314:                                              ; preds = %310
  %315 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %2) #7
  %316 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %315) #7
  %317 = bitcast %"class.blink::AbortSignal"* %305 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %318 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %317, align 8
  %319 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %318, i64 7
  %320 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %319, align 8
  %321 = call %"class.v8::Value"* %320(%"class.blink::ScriptWrappable"* nonnull %306, %"class.blink::ScriptState"* %316) #7
  %322 = icmp eq %"class.v8::Value"* %321, null
  br i1 %322, label %323, label %324, !prof !2

323:                                              ; preds = %314
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %324

324:                                              ; preds = %323, %314
  %325 = ptrtoint %"class.v8::Value"* %321 to i64
  br label %326

326:                                              ; preds = %308, %310, %324
  %327 = phi i64 [ %309, %308 ], [ %325, %324 ], [ %312, %310 ]
  %328 = inttoptr i64 %327 to %"class.v8::Value"*
  %329 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 13, i32 0
  %330 = load %"class.v8::Name"*, %"class.v8::Name"** %329, align 8
  %331 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %330, %"class.v8::Value"* %328) #7
  %332 = trunc i16 %331 to i8
  %333 = icmp ne i8 %332, 0
  %334 = icmp ugt i16 %331, 255
  %335 = and i1 %334, %333
  br i1 %335, label %336, label %404

336:                                              ; preds = %299, %326
  %337 = icmp eq %"class.blink::ExecutionContext"* %22, null
  %338 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %22, i64 0, i32 4
  %339 = select i1 %337, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %338
  %340 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase27FetchUploadStreamingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %339) #7
  br i1 %340, label %341, label %359

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 1
  %343 = load i8, i8* %342, align 8, !range !11
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %359, label %345

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 4
  %347 = load i8, i8* %346, align 1, !range !11
  %348 = icmp eq i8 %347, 0
  %349 = select i1 %348, i64 192, i64 184
  %350 = add i64 %349, %15
  %351 = inttoptr i64 %350 to %"class.v8::Value"*
  %352 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 0, i32 0
  %353 = load %"class.v8::Name"*, %"class.v8::Name"** %352, align 8
  %354 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %353, %"class.v8::Value"* %351) #7
  %355 = trunc i16 %354 to i8
  %356 = icmp ne i8 %355, 0
  %357 = icmp ugt i16 %354, 255
  %358 = and i1 %357, %356
  br i1 %358, label %359, label %404

359:                                              ; preds = %341, %345, %336
  %360 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20PriorityHintsEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %339) #7
  br i1 %360, label %361, label %383

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 9, i32 0, i32 0
  %363 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %383, label %365

365:                                              ; preds = %361
  %366 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %366) #7
  %367 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %363, %"class.WTF::StringImpl"** %367, align 8
  %368 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 1
  %371 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %372 = bitcast i8** %371 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %370, %"class.WTF::StringImpl"** %372, align 8
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %369, i32* %373, align 8
  %374 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %366) #7
  %375 = bitcast %"class.v8::String"* %374 to %"class.v8::Value"*
  %376 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 5, i32 0
  %377 = load %"class.v8::Name"*, %"class.v8::Name"** %376, align 8
  %378 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %377, %"class.v8::Value"* %375) #7
  %379 = trunc i16 %378 to i8
  %380 = icmp ne i8 %379, 0
  %381 = icmp ugt i16 %378, 255
  %382 = and i1 %381, %380
  br i1 %382, label %383, label %404

383:                                              ; preds = %361, %365, %359
  %384 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase18TrustTokensEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %339) #7
  br i1 %384, label %385, label %404

385:                                              ; preds = %383
  %386 = getelementptr inbounds %"class.blink::RequestInit", %"class.blink::RequestInit"* %0, i64 0, i32 18, i32 0, i32 0
  %387 = load %"class.blink::TrustToken"*, %"class.blink::TrustToken"** %386, align 8
  %388 = icmp eq %"class.blink::TrustToken"* %387, null
  br i1 %388, label %403, label %389

389:                                              ; preds = %385
  %390 = getelementptr inbounds %"class.blink::TrustToken", %"class.blink::TrustToken"* %387, i64 0, i32 0
  %391 = bitcast %"class.blink::TrustToken"* %387 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %392 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %391, align 8
  %393 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %392, i64 2
  %394 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %393, align 8
  %395 = call %"class.v8::Value"* %394(%"class.blink::IDLDictionaryBase"* nonnull %390, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #7
  %396 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 14, i32 0
  %397 = load %"class.v8::Name"*, %"class.v8::Name"** %396, align 8
  %398 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %397, %"class.v8::Value"* %395) #7
  %399 = trunc i16 %398 to i8
  %400 = icmp ne i8 %399, 0
  %401 = icmp ugt i16 %398, 255
  %402 = and i1 %401, %400
  br i1 %402, label %403, label %404

403:                                              ; preds = %385, %389
  br label %404

404:                                              ; preds = %95, %139, %175, %215, %259, %326, %403, %383, %345, %365, %389, %281, %237, %193, %153, %117, %83
  %405 = phi i1 [ false, %83 ], [ false, %95 ], [ false, %117 ], [ false, %139 ], [ false, %153 ], [ false, %175 ], [ false, %193 ], [ false, %215 ], [ false, %237 ], [ false, %259 ], [ false, %281 ], [ false, %326 ], [ true, %403 ], [ true, %383 ], [ false, %345 ], [ false, %365 ], [ false, %389 ]
  ret i1 %405
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::Value"* @_ZN5blink4ToV8ERKNS_54ByteStringSequenceSequenceOrByteStringByteStringRecordEN2v85LocalINS3_6ObjectEEEPNS3_7IsolateE(%"class.blink::ByteStringSequenceSequenceOrByteStringByteStringRecord"* dereferenceable(40), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RequestInit"* @_ZN5blink17NativeValueTraitsINS_11RequestInitEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 176) #7
  %5 = bitcast i8* %4 to %"class.blink::RequestInit"*
  tail call void @_ZN5blink11RequestInitC1Ev(%"class.blink::RequestInit"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink13V8RequestInit6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_11RequestInitERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::RequestInit"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::RequestInit"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.436"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #7
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %9) #7
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #7
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #7
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #7
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #7
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #7
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #7
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #7
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #7
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #7
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #7
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #7
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #7
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #7
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.49, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0)) #7
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.49, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.51, i64 0, i64 0)) #7
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #7
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference.6"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #7
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #7
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #7
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !11
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference.6"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #7
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"* %47, %"class.blink::ScriptWrappable"* %0) #7
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference.6"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #7
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN5blink11RequestInitC1Ev(%"class.blink::RequestInit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.178"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.178"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.53, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.178"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !12

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !3

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !3

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink26ReplaceUnmatchedSurrogatesEN3WTF6StringE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink16V8PerIsolateData11HasInstanceEPKNS_15WrapperTypeInfoEN2v85LocalINS4_5ValueEEE(%"class.blink::V8PerIsolateData"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.isvectorized", i32 1}
!6 = distinct !{!6, !7, !5}
!7 = !{!"llvm.loop.unroll.runtime.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5blink11RequestInit4bodyEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink11RequestInit4bodyEv"}
!11 = !{i8 0, i8 2}
!12 = !{!"branch_weights", i32 2146410443, i32 1073205}
