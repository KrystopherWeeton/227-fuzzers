; ModuleID = '../../third_party/boringssl/src/ssl/s3_both.cc'
source_filename = "../../third_party/boringssl/src/ssl/s3_both.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.91", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.58", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, {}*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray.82", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.84", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.56", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.39, i16, [2 x i8], %"class.std::__1::unique_ptr.40", [2 x %"class.std::__1::unique_ptr.45"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array.56", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.57", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.63", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.70", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%union.anon.39 = type { i32 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.50", %"class.bssl::internal::StackAllocated.55" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.55" = type { %struct.env_md_ctx_st }
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.env_md_st = type opaque
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::internal::StackAllocated.57" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray", i32, [4 x i8] }>
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.66" }
%"class.bssl::Array.66" = type { %"class.std::__1::unique_ptr.67"*, i64 }
%"class.std::__1::unique_ptr.67" = type opaque
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.109", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.84", %"class.bssl::GrowableArray.114", %"class.bssl::Array.56", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.63", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.56", i16, [6 x i8] }>
%struct.lhash_st_SSL_SESSION = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%"class.bssl::GrowableArray.114" = type { i64, %"class.bssl::Array.115" }
%"class.bssl::Array.115" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.bssl::GrowableArray.82" = type { i64, %"class.bssl::Array.83" }
%"class.bssl::Array.83" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.bssl::Array.56" = type { i16*, i64 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.40", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.50", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.96", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.58", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.101"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %struct.ssl_ctx_st* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::internal::StackAllocated.120" = type { %struct.cbb_st }

@.str = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/s3_both.cc\00", align 1
@_ZZN4bssl26tls_add_change_cipher_specEP6ssl_stE17kChangeCipherSpec = internal constant [1 x i8] c"\01", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"GET \00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"POST \00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"HEAD \00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"PUT \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"CONNE\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl16tls_init_messageEP6ssl_stP6cbb_stS3_h(%struct.ssl_st* nocapture readnone, %struct.cbb_st*, %struct.cbb_st*, i8 zeroext) local_unnamed_addr #0 {
  %5 = tail call i32 @CBB_init(%struct.cbb_st* %1, i64 64) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @CBB_add_u8(%struct.cbb_st* %1, i8 zeroext %3) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* %1, %struct.cbb_st* %2) #5
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %10, %7, %4
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 176) #5
  tail call void @CBB_cleanup(%struct.cbb_st* %1) #5
  br label %14

14:                                               ; preds = %10, %13
  %15 = phi i1 [ false, %13 ], [ true, %10 ]
  ret i1 %15
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #1

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #1

declare i32 @CBB_add_u24_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #1

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl18tls_finish_messageEP6ssl_stP6cbb_stPNS_5ArrayIhEE(%struct.ssl_st* nocapture readnone, %struct.cbb_st*, %"class.bssl::Array"*) local_unnamed_addr #0 {
  %4 = tail call zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st* %1, %"class.bssl::Array"* %2) #5
  ret i1 %4
}

declare zeroext i1 @_ZN4bssl14CBBFinishArrayEP6cbb_stPNS_5ArrayIhEE(%struct.cbb_st*, %"class.bssl::Array"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl15tls_add_messageEP6ssl_stNS_5ArrayIhEE(%struct.ssl_st*, %"class.bssl::Array"* nocapture readonly) local_unnamed_addr #0 {
  %3 = bitcast %"class.bssl::Array"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %8 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %7, align 8
  %9 = icmp eq %struct.ssl_quic_method_st* %8, null
  br i1 %9, label %10, label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %12 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %12, i64 0, i32 33, i32 0, i32 0, i32 0
  %14 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %13, align 8
  %15 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %14, i64 0, i32 0
  %16 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %15, align 8
  %17 = icmp eq %struct.ssl_cipher_st* %16, null
  br i1 %17, label %18, label %34

18:                                               ; preds = %10
  %19 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 3
  br label %20

20:                                               ; preds = %18, %24
  %21 = phi i64 [ %32, %24 ], [ %4, %18 ]
  %22 = phi i64 [ %31, %24 ], [ %6, %18 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %95, label %24

24:                                               ; preds = %20
  %25 = load i16, i16* %19, align 2
  %26 = zext i16 %25 to i64
  %27 = inttoptr i64 %21 to i8*
  %28 = icmp ugt i64 %22, %26
  %29 = select i1 %28, i64 %26, i64 %22
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = sub i64 %22, %29
  %32 = ptrtoint i8* %30 to i64
  %33 = tail call fastcc zeroext i1 @_ZN4bsslL20add_record_to_flightEP6ssl_sthNS_4SpanIKhEE(%struct.ssl_st* %0, i8 zeroext 22, i8* %27, i64 %29)
  br i1 %33, label %20, label %110

34:                                               ; preds = %10, %2
  %35 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %36 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 3
  br label %37

37:                                               ; preds = %92, %34
  %38 = phi i64 [ %4, %34 ], [ %81, %92 ]
  %39 = phi i64 [ %6, %34 ], [ %80, %92 ]
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %95, label %41

41:                                               ; preds = %37
  %42 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %35, align 8
  %43 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %42, i64 0, i32 26, i32 0, i32 0, i32 0
  %44 = load %struct.buf_mem_st*, %struct.buf_mem_st** %43, align 8
  %45 = icmp eq %struct.buf_mem_st* %44, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %42, i64 0, i32 26, i32 0, i32 0, i32 0
  br label %69

48:                                               ; preds = %41
  %49 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %44, i64 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = load i16, i16* %36, align 2
  %52 = zext i16 %51 to i64
  %53 = icmp ult i64 %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %42, i64 0, i32 26, i32 0, i32 0, i32 0
  br label %64

56:                                               ; preds = %48
  %57 = tail call zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st* %0)
  br i1 %57, label %58, label %110

58:                                               ; preds = %56
  %59 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %35, align 8
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 26, i32 0, i32 0, i32 0
  %61 = load %struct.buf_mem_st*, %struct.buf_mem_st** %60, align 8
  %62 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %59, i64 0, i32 26, i32 0, i32 0, i32 0
  %63 = icmp eq %struct.buf_mem_st* %61, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58, %54
  %65 = phi %struct.buf_mem_st** [ %55, %54 ], [ %62, %58 ]
  %66 = phi %struct.buf_mem_st* [ %44, %54 ], [ %61, %58 ]
  %67 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %66, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  br label %69

69:                                               ; preds = %58, %46, %64
  %70 = phi i1 [ true, %64 ], [ false, %58 ], [ false, %46 ]
  %71 = phi %struct.buf_mem_st** [ %65, %64 ], [ %62, %58 ], [ %47, %46 ]
  %72 = phi i64 [ %68, %64 ], [ 0, %58 ], [ 0, %46 ]
  %73 = load i16, i16* %36, align 2
  %74 = zext i16 %73 to i64
  %75 = sub i64 %74, %72
  %76 = inttoptr i64 %38 to i8*
  %77 = icmp ugt i64 %39, %75
  %78 = select i1 %77, i64 %75, i64 %39
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = sub i64 %39, %78
  %81 = ptrtoint i8* %79 to i64
  br i1 %70, label %87, label %82

82:                                               ; preds = %69
  %83 = tail call %struct.buf_mem_st* @BUF_MEM_new() #5
  %84 = load %struct.buf_mem_st*, %struct.buf_mem_st** %71, align 8
  store %struct.buf_mem_st* %83, %struct.buf_mem_st** %71, align 8
  %85 = icmp eq %struct.buf_mem_st* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %84) #5
  br label %87

87:                                               ; preds = %86, %82, %69
  %88 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %35, align 8
  %89 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %88, i64 0, i32 26, i32 0, i32 0, i32 0
  %90 = load %struct.buf_mem_st*, %struct.buf_mem_st** %89, align 8
  %91 = icmp eq %struct.buf_mem_st* %90, null
  br i1 %91, label %110, label %92

92:                                               ; preds = %87
  %93 = tail call i32 @BUF_MEM_append(%struct.buf_mem_st* nonnull %90, i8* %76, i64 %78) #5
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %110, label %37

95:                                               ; preds = %37, %20
  %96 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %1, i64 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = load i64, i64* %5, align 8
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, i32 22, i8* %97, i64 %98) #5
  %99 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %100 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %99, align 8
  %101 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %100, i64 0, i32 34, i32 0, i32 0, i32 0
  %102 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %101, align 8
  %103 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %102, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %102, i64 0, i32 20
  %106 = load i8*, i8** %96, align 8
  %107 = load i64, i64* %5, align 8
  %108 = tail call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %105, i8* %106, i64 %107) #5
  br i1 %108, label %109, label %110

109:                                              ; preds = %95, %104
  br label %110

110:                                              ; preds = %87, %92, %56, %24, %104, %109
  %111 = phi i1 [ true, %109 ], [ false, %104 ], [ false, %24 ], [ false, %56 ], [ false, %92 ], [ false, %87 ]
  ret i1 %111
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL20add_record_to_flightEP6ssl_sthNS_4SpanIKhEE(%struct.ssl_st*, i8 zeroext, i8*, i64) unnamed_addr #0 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 27, i32 0, i32 0, i32 0
  %9 = load %struct.buf_mem_st*, %struct.buf_mem_st** %8, align 8
  %10 = icmp eq %struct.buf_mem_st* %9, null
  br i1 %10, label %11, label %21

11:                                               ; preds = %4
  %12 = tail call %struct.buf_mem_st* @BUF_MEM_new() #5
  %13 = load %struct.buf_mem_st*, %struct.buf_mem_st** %8, align 8
  store %struct.buf_mem_st* %12, %struct.buf_mem_st** %8, align 8
  %14 = icmp eq %struct.buf_mem_st* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %13) #5
  br label %16

16:                                               ; preds = %11, %15
  %17 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %17, i64 0, i32 27, i32 0, i32 0, i32 0
  %19 = load %struct.buf_mem_st*, %struct.buf_mem_st** %18, align 8
  %20 = icmp eq %struct.buf_mem_st* %19, null
  br i1 %20, label %58, label %21

21:                                               ; preds = %16, %4
  %22 = tail call i64 @SSL_max_seal_overhead(%struct.ssl_st* %0) #5
  %23 = add i64 %22, %3
  %24 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %25 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %24, i64 0, i32 27, i32 0, i32 0, i32 0
  %26 = load %struct.buf_mem_st*, %struct.buf_mem_st** %25, align 8
  %27 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %26, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %23
  %30 = icmp ult i64 %23, %3
  %31 = icmp ult i64 %29, %23
  %32 = or i1 %30, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %21
  tail call void @ERR_put_error(i32 16, i32 0, i32 69, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 154) #5
  br label %58

34:                                               ; preds = %21
  %35 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  store i64 -6148914691236517206, i64* %5, align 8
  %36 = tail call i32 @BUF_MEM_reserve(%struct.buf_mem_st* %26, i64 %29) #5
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %56, label %38

38:                                               ; preds = %34
  %39 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %39, i64 0, i32 27, i32 0, i32 0, i32 0
  %41 = load %struct.buf_mem_st*, %struct.buf_mem_st** %40, align 8
  %42 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %41, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %41, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = call zeroext i1 @_ZN4bssl15tls_seal_recordEP6ssl_stPhPmmhPKhm(%struct.ssl_st* %0, i8* %46, i64* nonnull %5, i64 %23, i8 zeroext %1, i8* %2, i64 %3) #5
  br i1 %47, label %48, label %56

48:                                               ; preds = %38
  %49 = load i64, i64* %5, align 8
  %50 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %51 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 27, i32 0, i32 0, i32 0
  %52 = load %struct.buf_mem_st*, %struct.buf_mem_st** %51, align 8
  %53 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %52, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, %49
  store i64 %55, i64* %53, align 8
  br label %56

56:                                               ; preds = %38, %34, %48
  %57 = phi i1 [ true, %48 ], [ false, %34 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  br label %58

58:                                               ; preds = %33, %56, %16
  %59 = phi i1 [ false, %16 ], [ false, %33 ], [ %57, %56 ]
  ret i1 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %3 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %3, i64 0, i32 26, i32 0, i32 0, i32 0
  %5 = load %struct.buf_mem_st*, %struct.buf_mem_st** %4, align 8
  %6 = icmp eq %struct.buf_mem_st* %5, null
  br i1 %6, label %40, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %5, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %40, label %11

11:                                               ; preds = %7
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %4, align 8
  %12 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %5, i64 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = load i64, i64* %8, align 8
  %15 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %16 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %15, align 8
  %17 = icmp eq %struct.ssl_quic_method_st* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %11
  %19 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %2, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %19, i64 0, i32 34, i32 0, i32 0, i32 0
  %21 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %20, align 8
  %22 = icmp eq %"struct.bssl::SSL_HANDSHAKE"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %21, i64 0, i32 46
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 8388608
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %38

28:                                               ; preds = %23, %18
  %29 = getelementptr inbounds %struct.ssl_quic_method_st, %struct.ssl_quic_method_st* %16, i64 0, i32 2
  %30 = load i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)** %29, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %19, i64 0, i32 18
  %32 = load i32, i32* %31, align 4
  %33 = tail call i32 %30(%struct.ssl_st* %0, i32 %32, i8* %13, i64 %14) #5
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %28
  tail call void @ERR_put_error(i32 16, i32 0, i32 298, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 257) #5
  br label %38

36:                                               ; preds = %11
  %37 = tail call fastcc zeroext i1 @_ZN4bsslL20add_record_to_flightEP6ssl_sthNS_4SpanIKhEE(%struct.ssl_st* %0, i8 zeroext 22, i8* %13, i64 %14)
  br label %38

38:                                               ; preds = %35, %36, %28, %23
  %39 = phi i1 [ false, %35 ], [ %37, %36 ], [ true, %28 ], [ true, %23 ]
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %5) #5
  br label %40

40:                                               ; preds = %1, %38, %7
  %41 = phi i1 [ true, %7 ], [ true, %1 ], [ %39, %38 ]
  ret i1 %41
}

declare %struct.buf_mem_st* @BUF_MEM_new() local_unnamed_addr #1

declare i32 @BUF_MEM_append(%struct.buf_mem_st*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st*, i32, i32, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl26tls_add_change_cipher_specEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st* %0)
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %5 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %4, align 8
  %6 = icmp eq %struct.ssl_quic_method_st* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %3
  %8 = tail call fastcc zeroext i1 @_ZN4bsslL20add_record_to_flightEP6ssl_sthNS_4SpanIKhEE(%struct.ssl_st* %0, i8 zeroext 20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN4bssl26tls_add_change_cipher_specEP6ssl_stE17kChangeCipherSpec, i64 0, i64 0), i64 1)
  br i1 %8, label %9, label %10

9:                                                ; preds = %7, %3
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 1, i32 20, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @_ZZN4bssl26tls_add_change_cipher_specEP6ssl_stE17kChangeCipherSpec, i64 0, i64 0), i64 1) #5
  br label %10

10:                                               ; preds = %7, %1, %9
  %11 = phi i1 [ true, %9 ], [ false, %1 ], [ false, %7 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl16tls_flush_flightEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call zeroext i1 @_ZN4bssl25tls_flush_pending_hs_dataEP6ssl_st(%struct.ssl_st* %0)
  br i1 %2, label %3, label %106

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 24
  %5 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %4, align 8
  %6 = icmp eq %struct.ssl_quic_method_st* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 13
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %7
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 291) #5
  br label %106

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.ssl_quic_method_st, %struct.ssl_quic_method_st* %5, i64 0, i32 3
  %16 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %15, align 8
  %17 = tail call i32 %16(%struct.ssl_st* %0) #5
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @ERR_put_error(i32 16, i32 0, i32 298, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 296) #5
  br label %106

20:                                               ; preds = %14, %3
  %21 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 27, i32 0, i32 0, i32 0
  %24 = load %struct.buf_mem_st*, %struct.buf_mem_st** %23, align 8
  %25 = icmp eq %struct.buf_mem_st* %24, null
  br i1 %25, label %106, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 13
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @ERR_put_error(i32 16, i32 0, i32 194, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 306) #5
  br label %106

31:                                               ; preds = %26
  %32 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %24, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp ugt i64 %33, 2147483647
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 312) #5
  br label %106

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 5, i32 2
  %38 = load i16, i16* %37, align 2
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = tail call i32 @_ZN4bssl22ssl_write_buffer_flushEP6ssl_st(%struct.ssl_st* %0) #5
  %42 = icmp slt i32 %41, 1
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %45 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %44, i64 0, i32 16
  store i32 3, i32* %45, align 4
  br label %106

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %48 = load %struct.bio_st*, %struct.bio_st** %47, align 8
  %49 = icmp eq %struct.bio_st* %48, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %46
  %51 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %51, i64 0, i32 28
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %51, i64 0, i32 27, i32 0, i32 0, i32 0
  %56 = load %struct.buf_mem_st*, %struct.buf_mem_st** %55, align 8
  %57 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %56, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp ugt i64 %58, %54
  br i1 %59, label %61, label %91

60:                                               ; preds = %46
  tail call void @ERR_put_error(i32 16, i32 0, i32 119, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 327) #5
  br label %106

61:                                               ; preds = %50, %77
  %62 = phi %struct.bio_st* [ %90, %77 ], [ %48, %50 ]
  %63 = phi i64 [ %88, %77 ], [ %58, %50 ]
  %64 = phi %struct.buf_mem_st* [ %86, %77 ], [ %56, %50 ]
  %65 = phi i64 [ %84, %77 ], [ %54, %50 ]
  %66 = phi i32 [ %83, %77 ], [ %53, %50 ]
  %67 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %64, i64 0, i32 1
  %68 = load i8*, i8** %67, align 8
  %69 = getelementptr inbounds i8, i8* %68, i64 %65
  %70 = trunc i64 %63 to i32
  %71 = sub i32 %70, %66
  %72 = tail call i32 @BIO_write(%struct.bio_st* %62, i8* %69, i32 %71) #5
  %73 = icmp slt i32 %72, 1
  %74 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  br i1 %73, label %75, label %77

75:                                               ; preds = %61
  %76 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %74, i64 0, i32 16
  store i32 3, i32* %76, align 4
  br label %106

77:                                               ; preds = %61
  %78 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %74, i64 0, i32 28
  %79 = load i32, i32* %78, align 8
  %80 = add i32 %79, %72
  store i32 %80, i32* %78, align 8
  %81 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %82 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %81, i64 0, i32 28
  %83 = load i32, i32* %82, align 8
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %81, i64 0, i32 27, i32 0, i32 0, i32 0
  %86 = load %struct.buf_mem_st*, %struct.buf_mem_st** %85, align 8
  %87 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %86, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = icmp ugt i64 %88, %84
  %90 = load %struct.bio_st*, %struct.bio_st** %47, align 8
  br i1 %89, label %61, label %91

91:                                               ; preds = %77, %50
  %92 = phi %struct.bio_st* [ %48, %50 ], [ %90, %77 ]
  %93 = tail call i32 @BIO_flush(%struct.bio_st* %92) #5
  %94 = icmp slt i32 %93, 1
  %95 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  br i1 %94, label %96, label %98

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %95, i64 0, i32 16
  store i32 3, i32* %97, align 4
  br label %106

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %95, i64 0, i32 27, i32 0, i32 0, i32 0
  %100 = load %struct.buf_mem_st*, %struct.buf_mem_st** %99, align 8
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %99, align 8
  %101 = icmp eq %struct.buf_mem_st* %100, null
  br i1 %101, label %103, label %102

102:                                              ; preds = %98
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %100) #5
  br label %103

103:                                              ; preds = %98, %102
  %104 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %21, align 8
  %105 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %104, i64 0, i32 28
  store i32 0, i32* %105, align 8
  br label %106

106:                                              ; preds = %75, %43, %20, %1, %103, %96, %60, %35, %30, %19, %13
  %107 = phi i32 [ -1, %13 ], [ -1, %30 ], [ -1, %35 ], [ -1, %60 ], [ -1, %96 ], [ 1, %103 ], [ -1, %19 ], [ -1, %1 ], [ 1, %20 ], [ %41, %43 ], [ %72, %75 ]
  ret i32 %107
}

declare i32 @_ZN4bssl22ssl_write_buffer_flushEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #1

declare i32 @BIO_flush(%struct.bio_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl15tls_get_messageEPK6ssl_stPNS_10SSLMessageE(%struct.ssl_st*, %"struct.bssl::SSLMessage"*) local_unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = call fastcc zeroext i1 @_ZN4bsslL13parse_messageEPK6ssl_stPNS_10SSLMessageEPm(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* %1, i64* nonnull %3)
  br i1 %5, label %6, label %30

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %8 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %8, i64 0, i32 23
  %10 = load i16, i16* %9, align 1
  %11 = and i16 %10, 16
  %12 = icmp eq i16 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 22, i8* %19, i64 %21) #5
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %7, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  br label %25

25:                                               ; preds = %13, %17
  %26 = phi i16 [ %10, %13 ], [ %24, %17 ]
  %27 = phi %"struct.bssl::SSL3_STATE"* [ %8, %13 ], [ %22, %17 ]
  %28 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %27, i64 0, i32 23
  %29 = or i16 %26, 16
  store i16 %29, i16* %28, align 1
  br label %30

30:                                               ; preds = %25, %6, %2
  %31 = phi i1 [ false, %2 ], [ true, %6 ], [ true, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4bsslL13parse_messageEPK6ssl_stPNS_10SSLMessageEPm(%struct.ssl_st* nocapture readonly, %"struct.bssl::SSLMessage"*, i64* nocapture) unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %7 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %7, i64 0, i32 25, i32 0, i32 0, i32 0
  %9 = load %struct.buf_mem_st*, %struct.buf_mem_st** %8, align 8
  %10 = icmp eq %struct.buf_mem_st* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  store i64 4, i64* %2, align 8
  br label %56

12:                                               ; preds = %3
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = bitcast i32* %5 to i8*
  %15 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #5
  store i32 -1431655766, i32* %5, align 4
  %16 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %9, i64 0, i32 1
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %9, i64 0, i32 0
  %19 = load i64, i64* %18, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %17, i64 %19) #5
  %20 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  %21 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %4, i8* %20) #5
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %12
  %24 = call i32 @CBS_get_u24(%struct.cbs_st* nonnull %4, i32* nonnull %5) #5
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23, %12
  store i64 4, i64* %2, align 8
  br label %54

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2
  %29 = load i32, i32* %5, align 4
  %30 = zext i32 %29 to i64
  %31 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %4, %struct.cbs_st* %28, i64 %30) #5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = load i32, i32* %5, align 4
  %35 = add i32 %34, 4
  %36 = zext i32 %35 to i64
  store i64 %36, i64* %2, align 8
  br label %54

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3
  %39 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %39, i64 0, i32 25, i32 0, i32 0, i32 0
  %41 = load %struct.buf_mem_st*, %struct.buf_mem_st** %40, align 8
  %42 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %41, i64 0, i32 1
  %43 = load i8*, i8** %42, align 8
  %44 = load i32, i32* %5, align 4
  %45 = add i32 %44, 4
  %46 = zext i32 %45 to i64
  call void @CBS_init(%struct.cbs_st* %38, i8* %43, i64 %46) #5
  %47 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %6, align 8
  %48 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %47, i64 0, i32 23
  %49 = load i16, i16* %48, align 1
  %50 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 0
  %51 = lshr i16 %49, 3
  %52 = trunc i16 %51 to i8
  %53 = and i8 %52, 1
  store i8 %53, i8* %50, align 8
  br label %54

54:                                               ; preds = %37, %33, %26
  %55 = phi i1 [ true, %37 ], [ false, %33 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br label %56

56:                                               ; preds = %54, %11
  %57 = phi i1 [ %55, %54 ], [ false, %11 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl29tls_can_accept_handshake_dataEPK6ssl_stPh(%struct.ssl_st*, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca %"struct.bssl::SSLMessage", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  store i64 -6148914691236517206, i64* %4, align 8
  %7 = call fastcc zeroext i1 @_ZN4bsslL13parse_messageEPK6ssl_stPNS_10SSLMessageEPm(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %3, i64* nonnull %4)
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 524) #5
  br label %15

9:                                                ; preds = %2
  %10 = load i64, i64* %4, align 8
  %11 = call i64 @_ZN4bssl29ssl_max_handshake_message_lenEPK6ssl_st(%struct.ssl_st* %0) #5
  %12 = add i64 %11, 4
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  call void @ERR_put_error(i32 16, i32 0, i32 150, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 531) #5
  br label %15

15:                                               ; preds = %8, %14
  %16 = phi i8 [ 47, %14 ], [ 80, %8 ]
  store i8 %16, i8* %1, align 1
  br label %17

17:                                               ; preds = %15, %9
  %18 = phi i1 [ true, %9 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #5
  ret i1 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN4bssl29ssl_max_handshake_message_lenEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl34tls_has_unprocessed_handshake_dataEPK6ssl_st(%struct.ssl_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca %"struct.bssl::SSLMessage", align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 23
  %7 = load i16, i16* %6, align 1
  %8 = and i16 %7, 16
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 40, i1 false)
  %12 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #5
  store i64 -6148914691236517206, i64* %3, align 8
  %13 = call fastcc zeroext i1 @_ZN4bsslL13parse_messageEPK6ssl_stPNS_10SSLMessageEPm(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %2, i64* nonnull %3)
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 3
  %16 = call i64 @CBS_len(%struct.cbs_st* %15) #5
  br label %17

17:                                               ; preds = %14, %10
  %18 = phi i64 [ %16, %14 ], [ 0, %10 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #5
  %19 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi %"struct.bssl::SSL3_STATE"* [ %19, %17 ], [ %5, %1 ]
  %22 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %21, i64 0, i32 25, i32 0, i32 0, i32 0
  %24 = load %struct.buf_mem_st*, %struct.buf_mem_st** %23, align 8
  %25 = icmp eq %struct.buf_mem_st* %24, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %24, i64 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp ugt i64 %28, %22
  br label %30

30:                                               ; preds = %20, %26
  %31 = phi i1 [ false, %20 ], [ %29, %26 ]
  ret i1 %31
}

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl25tls_append_handshake_dataEP6ssl_stNS_4SpanIKhEE(%struct.ssl_st* nocapture readonly, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %5 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %6 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %5, i64 0, i32 25, i32 0, i32 0, i32 0
  %7 = load %struct.buf_mem_st*, %struct.buf_mem_st** %6, align 8
  %8 = icmp eq %struct.buf_mem_st* %7, null
  br i1 %8, label %9, label %14

9:                                                ; preds = %3
  %10 = tail call %struct.buf_mem_st* @BUF_MEM_new() #5
  %11 = load %struct.buf_mem_st*, %struct.buf_mem_st** %6, align 8
  store %struct.buf_mem_st* %10, %struct.buf_mem_st** %6, align 8
  %12 = icmp eq %struct.buf_mem_st* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %9
  tail call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %11) #5
  br label %14

14:                                               ; preds = %3, %13, %9
  %15 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %4, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %15, i64 0, i32 25, i32 0, i32 0, i32 0
  %17 = load %struct.buf_mem_st*, %struct.buf_mem_st** %16, align 8
  %18 = icmp eq %struct.buf_mem_st* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = tail call i32 @BUF_MEM_append(%struct.buf_mem_st* nonnull %17, i8* %1, i64 %2) #5
  %21 = icmp ne i32 %20, 0
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i1 [ false, %14 ], [ %21, %19 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl18tls_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i8, align 1
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i16, align 2
  %11 = alloca i16, align 2
  %12 = alloca %struct.cbs_st, align 8
  %13 = alloca %struct.cbs_st, align 8
  %14 = alloca %struct.cbs_st, align 8
  %15 = alloca [32 x i8], align 16
  %16 = alloca %"class.bssl::internal::StackAllocated.120", align 8
  %17 = alloca %struct.cbb_st, align 8
  %18 = alloca %struct.cbb_st, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca %"class.bssl::Span", align 8
  %22 = alloca %"class.bssl::Span", align 8
  %23 = ptrtoint i8* %3 to i64
  store i64 0, i64* %1, align 8
  %24 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %25 = load i8, i8* %24, align 4
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %270, label %28

28:                                               ; preds = %5
  %29 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %30 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %31 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %30, i64 0, i32 23
  %32 = load i16, i16* %31, align 1
  %33 = and i16 %32, 4
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %35, label %270

35:                                               ; preds = %28
  %36 = icmp ult i64 %4, 5
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  store i64 5, i64* %1, align 8
  br label %321

38:                                               ; preds = %35
  %39 = tail call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* %3, i64 4) #6
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %38
  %42 = tail call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %3, i64 5) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %50, label %44

44:                                               ; preds = %41
  %45 = tail call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %3, i64 5) #6
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = tail call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %3, i64 4) #6
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47, %44, %41, %38
  tail call void @ERR_put_error(i32 16, i32 0, i32 156, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 582) #5
  store i8 0, i8* %2, align 1
  br label %321

51:                                               ; preds = %47
  %52 = tail call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* %3, i64 5) #6
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @ERR_put_error(i32 16, i32 0, i32 155, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 587) #5
  store i8 0, i8* %2, align 1
  br label %321

55:                                               ; preds = %51
  %56 = load i8, i8* %3, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %268

58:                                               ; preds = %55
  %59 = getelementptr inbounds i8, i8* %3, i64 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 1
  br i1 %61, label %62, label %268

62:                                               ; preds = %58
  %63 = getelementptr inbounds i8, i8* %3, i64 3
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 3
  br i1 %65, label %66, label %268

66:                                               ; preds = %62
  store i64 0, i64* %1, align 8
  %67 = load i8, i8* %3, align 1
  %68 = and i8 %67, 127
  %69 = zext i8 %68 to i64
  %70 = shl nuw nsw i64 %69, 8
  %71 = getelementptr inbounds i8, i8* %3, i64 1
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i64
  %74 = or i64 %70, %73
  %75 = icmp ugt i64 %74, 4096
  br i1 %75, label %76, label %77

76:                                               ; preds = %66
  tail call void @ERR_put_error(i32 16, i32 0, i32 200, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 362) #5
  br label %262

77:                                               ; preds = %66
  %78 = icmp ult i64 %74, 3
  br i1 %78, label %79, label %80

79:                                               ; preds = %77
  tail call void @ERR_put_error(i32 16, i32 0, i32 199, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 369) #5
  br label %262

80:                                               ; preds = %77
  %81 = add nuw nsw i64 %74, 2
  %82 = icmp ugt i64 %81, %4
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  store i64 %81, i64* %1, align 8
  br label %321

84:                                               ; preds = %80
  %85 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 16, i1 false) #5
  %86 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %87 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 4, i32 2
  %88 = load i16, i16* %87, align 2
  %89 = icmp ult i16 %88, 2
  br i1 %89, label %90, label %91

90:                                               ; preds = %84
  tail call void @abort() #7
  unreachable

91:                                               ; preds = %84
  %92 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 0
  %93 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %6, i64 0, i32 1
  %94 = zext i16 %88 to i64
  %95 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 4, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 4, i32 1
  %98 = load i16, i16* %97, align 8
  %99 = zext i16 %98 to i64
  %100 = getelementptr inbounds i8, i8* %96, i64 %99
  %101 = getelementptr inbounds i8, i8* %100, i64 2
  %102 = add nsw i64 %94, -2
  %103 = icmp ugt i64 %102, %74
  %104 = select i1 %103, i64 %74, i64 %102
  store i8* %101, i8** %92, align 8
  store i64 %104, i64* %93, align 8
  %105 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 34, i32 0, i32 0, i32 0
  %106 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %105, align 8
  %107 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %106, i64 0, i32 20
  %108 = tail call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %107, i8* %101, i64 %104) #5
  br i1 %108, label %110, label %109

109:                                              ; preds = %91
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #5
  br label %262

110:                                              ; preds = %91
  tail call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 0, i8* %101, i64 %104) #5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #5
  store i8 -86, i8* %7, align 1
  %111 = bitcast i16* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %111) #5
  store i16 -21846, i16* %8, align 2
  %112 = bitcast i16* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %112) #5
  store i16 -21846, i16* %9, align 2
  %113 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %113) #5
  store i16 -21846, i16* %10, align 2
  %114 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %114) #5
  store i16 -21846, i16* %11, align 2
  %115 = bitcast %struct.cbs_st* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %115) #5
  %116 = bitcast %struct.cbs_st* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #5
  %117 = bitcast %struct.cbs_st* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %116, i8 -86, i64 16, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 16, i1 false) #5
  %118 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %6, i8* nonnull %7) #5
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %150, label %120

120:                                              ; preds = %110
  %121 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %8) #5
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %150, label %123

123:                                              ; preds = %120
  %124 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %9) #5
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %150, label %126

126:                                              ; preds = %123
  %127 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %10) #5
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %150, label %129

129:                                              ; preds = %126
  %130 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %11) #5
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %150, label %132

132:                                              ; preds = %129
  %133 = load i16, i16* %9, align 2
  %134 = zext i16 %133 to i64
  %135 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %12, i64 %134) #5
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %150, label %137

137:                                              ; preds = %132
  %138 = load i16, i16* %10, align 2
  %139 = zext i16 %138 to i64
  %140 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %13, i64 %139) #5
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %150, label %142

142:                                              ; preds = %137
  %143 = load i16, i16* %11, align 2
  %144 = zext i16 %143 to i64
  %145 = call i32 @CBS_get_bytes(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %14, i64 %144) #5
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #5
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %151, label %150

150:                                              ; preds = %147, %142, %137, %132, %129, %126, %123, %120, %110
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 402) #5
  br label %260

151:                                              ; preds = %147
  %152 = call i64 @CBS_len(%struct.cbs_st* nonnull %14) #5
  %153 = icmp ult i64 %152, 32
  %154 = select i1 %153, i64 %152, i64 32
  %155 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %155) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %155, i8 0, i64 32, i1 false) #5
  %156 = call i8* @CBS_data(%struct.cbs_st* nonnull %14) #5
  %157 = icmp eq i64 %154, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %151
  %159 = sub nuw nsw i64 32, %154
  %160 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %160, i8* align 1 %156, i64 %154, i1 false) #5
  br label %161

161:                                              ; preds = %158, %151
  %162 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #5
  %163 = udiv i64 %162, 3
  %164 = shl nuw i64 %163, 1
  %165 = add nuw i64 %164, 43
  %166 = bitcast %"class.bssl::internal::StackAllocated.120"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %166) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %166, i8 -86, i64 32, i1 false) #5
  %167 = getelementptr inbounds %"class.bssl::internal::StackAllocated.120", %"class.bssl::internal::StackAllocated.120"* %16, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %167) #5
  %168 = bitcast %struct.cbb_st* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %168) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 32, i1 false) #5
  %169 = bitcast %struct.cbb_st* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 32, i1 false) #5
  %170 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %171 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %170, i64 0, i32 25, i32 0, i32 0, i32 0
  %172 = load %struct.buf_mem_st*, %struct.buf_mem_st** %171, align 8
  %173 = icmp eq %struct.buf_mem_st* %172, null
  br i1 %173, label %174, label %179

174:                                              ; preds = %161
  %175 = call %struct.buf_mem_st* @BUF_MEM_new() #5
  %176 = load %struct.buf_mem_st*, %struct.buf_mem_st** %171, align 8
  store %struct.buf_mem_st* %175, %struct.buf_mem_st** %171, align 8
  %177 = icmp eq %struct.buf_mem_st* %176, null
  br i1 %177, label %179, label %178

178:                                              ; preds = %174
  call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %176) #5
  br label %179

179:                                              ; preds = %178, %174, %161
  %180 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %181 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %180, i64 0, i32 25, i32 0, i32 0, i32 0
  %182 = load %struct.buf_mem_st*, %struct.buf_mem_st** %181, align 8
  %183 = icmp eq %struct.buf_mem_st* %182, null
  br i1 %183, label %221, label %184

184:                                              ; preds = %179
  %185 = call i32 @BUF_MEM_reserve(%struct.buf_mem_st* nonnull %182, i64 %165) #5
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %221, label %187

187:                                              ; preds = %184
  %188 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %189 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %188, i64 0, i32 25, i32 0, i32 0, i32 0
  %190 = load %struct.buf_mem_st*, %struct.buf_mem_st** %189, align 8
  %191 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %190, i64 0, i32 1
  %192 = load i8*, i8** %191, align 8
  %193 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %190, i64 0, i32 2
  %194 = load i64, i64* %193, align 8
  %195 = call i32 @CBB_init_fixed(%struct.cbb_st* nonnull %167, i8* %192, i64 %194) #5
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %221, label %197

197:                                              ; preds = %187
  %198 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %167, i8 zeroext 1) #5
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %221, label %200

200:                                              ; preds = %197
  %201 = call i32 @CBB_add_u24_length_prefixed(%struct.cbb_st* nonnull %167, %struct.cbb_st* nonnull %17) #5
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %221, label %203

203:                                              ; preds = %200
  %204 = load i16, i16* %8, align 2
  %205 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %17, i16 zeroext %204) #5
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %221, label %207

207:                                              ; preds = %203
  %208 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %17, i8* nonnull %155, i64 32) #5
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %221, label %210

210:                                              ; preds = %207
  %211 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 0) #5
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %221, label %213

213:                                              ; preds = %210
  %214 = call i32 @CBB_add_u16_length_prefixed(%struct.cbb_st* nonnull %17, %struct.cbb_st* nonnull %18) #5
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %221, label %216

216:                                              ; preds = %213
  %217 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #5
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %239, label %219

219:                                              ; preds = %216
  %220 = bitcast i32* %19 to i8*
  br label %222

221:                                              ; preds = %213, %210, %207, %203, %200, %197, %187, %184, %179
  call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 442) #5
  br label %258

222:                                              ; preds = %236, %219
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %220) #5
  store i32 -1431655766, i32* %19, align 4
  %223 = call i32 @CBS_get_u24(%struct.cbs_st* nonnull %12, i32* nonnull %19) #5
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @ERR_put_error(i32 16, i32 0, i32 137, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 450) #5
  br label %235

226:                                              ; preds = %222
  %227 = load i32, i32* %19, align 4
  %228 = and i32 %227, 16711680
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %236

230:                                              ; preds = %226
  %231 = trunc i32 %227 to i16
  %232 = call i32 @CBB_add_u16(%struct.cbb_st* nonnull %18, i16 zeroext %231) #5
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %230
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 459) #5
  br label %235

235:                                              ; preds = %234, %225
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #5
  br label %258

236:                                              ; preds = %230, %226
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220) #5
  %237 = call i64 @CBS_len(%struct.cbs_st* nonnull %12) #5
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %222

239:                                              ; preds = %236, %216
  %240 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 1) #5
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %252, label %242

242:                                              ; preds = %239
  %243 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %17, i8 zeroext 0) #5
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %252, label %245

245:                                              ; preds = %242
  %246 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %247 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %246, i64 0, i32 25, i32 0, i32 0, i32 0
  %248 = load %struct.buf_mem_st*, %struct.buf_mem_st** %247, align 8
  %249 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %248, i64 0, i32 0
  %250 = call i32 @CBB_finish(%struct.cbb_st* nonnull %167, i8** null, i64* %249) #5
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %245, %242, %239
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 468) #5
  br label %258

253:                                              ; preds = %245
  store i64 %81, i64* %1, align 8
  %254 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %255 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %254, i64 0, i32 23
  %256 = load i16, i16* %255, align 1
  %257 = or i16 %256, 8
  store i16 %257, i16* %255, align 1
  br label %258

258:                                              ; preds = %253, %252, %235, %221
  %259 = phi i32 [ 0, %253 ], [ 4, %252 ], [ 4, %221 ], [ 4, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %168) #5
  call void @CBB_cleanup(%struct.cbb_st* nonnull %167) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %166) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %155) #5
  br label %260

260:                                              ; preds = %150, %258
  %261 = phi i32 [ 4, %150 ], [ %259, %258 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %115) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %114) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %113) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %112) #5
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %111) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #5
  switch i32 %261, label %321 [
    i32 4, label %262
    i32 0, label %263
  ]

262:                                              ; preds = %79, %76, %109, %260
  store i8 0, i8* %2, align 1
  br label %321

263:                                              ; preds = %260
  %264 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %29, align 8
  %265 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %264, i64 0, i32 23
  %266 = load i16, i16* %265, align 1
  %267 = or i16 %266, 4
  store i16 %267, i16* %265, align 1
  br label %321

268:                                              ; preds = %55, %58, %62
  %269 = or i16 %32, 4
  store i16 %269, i16* %31, align 1
  br label %270

270:                                              ; preds = %268, %28, %5
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #5
  store i8 -86, i8* %20, align 1
  %271 = bitcast %"class.bssl::Span"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %271) #5
  %272 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %21, i64 0, i32 0
  %273 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %21, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %271, i8 0, i64 16, i1 false) #5
  %274 = bitcast %"class.bssl::Span"* %22 to i64*
  store i64 %23, i64* %274, align 8
  %275 = getelementptr inbounds %"class.bssl::Span", %"class.bssl::Span"* %22, i64 0, i32 1
  store i64 %4, i64* %275, align 8
  %276 = call i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st* %0, i8* nonnull %20, %"class.bssl::Span"* nonnull %21, i64* %1, i8* %2, %"class.bssl::Span"* nonnull byval(%"class.bssl::Span") align 8 %22) #5
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %319

278:                                              ; preds = %270
  %279 = load i8, i8* %24, align 4
  %280 = and i8 %279, 1
  %281 = icmp eq i8 %280, 0
  %282 = load i8, i8* %20, align 1
  %283 = icmp eq i8 %282, 23
  %284 = and i1 %281, %283
  br i1 %284, label %285, label %294

285:                                              ; preds = %278
  %286 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %287 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %286, align 8
  %288 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %287, i64 0, i32 32, i32 0, i32 0, i32 0
  %289 = load %"class.bssl::SSLAEADContext"*, %"class.bssl::SSLAEADContext"** %288, align 8
  %290 = getelementptr inbounds %"class.bssl::SSLAEADContext", %"class.bssl::SSLAEADContext"* %289, i64 0, i32 0
  %291 = load %struct.ssl_cipher_st*, %struct.ssl_cipher_st** %290, align 8
  %292 = icmp eq %struct.ssl_cipher_st* %291, null
  br i1 %292, label %293, label %296

293:                                              ; preds = %285
  call void @ERR_put_error(i32 16, i32 0, i32 281, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 620) #5
  store i8 10, i8* %2, align 1
  br label %319

294:                                              ; preds = %278
  %295 = icmp eq i8 %282, 22
  br i1 %295, label %297, label %296

296:                                              ; preds = %285, %294
  call void @ERR_put_error(i32 16, i32 0, i32 225, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0), i32 626) #5
  store i8 10, i8* %2, align 1
  br label %319

297:                                              ; preds = %294
  %298 = load i8*, i8** %272, align 8
  %299 = load i64, i64* %273, align 8
  %300 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %301 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %300, align 8
  %302 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %301, i64 0, i32 25, i32 0, i32 0, i32 0
  %303 = load %struct.buf_mem_st*, %struct.buf_mem_st** %302, align 8
  %304 = icmp eq %struct.buf_mem_st* %303, null
  br i1 %304, label %305, label %310

305:                                              ; preds = %297
  %306 = call %struct.buf_mem_st* @BUF_MEM_new() #5
  %307 = load %struct.buf_mem_st*, %struct.buf_mem_st** %302, align 8
  store %struct.buf_mem_st* %306, %struct.buf_mem_st** %302, align 8
  %308 = icmp eq %struct.buf_mem_st* %307, null
  br i1 %308, label %310, label %309

309:                                              ; preds = %305
  call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %307) #5
  br label %310

310:                                              ; preds = %309, %305, %297
  %311 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %300, align 8
  %312 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %311, i64 0, i32 25, i32 0, i32 0, i32 0
  %313 = load %struct.buf_mem_st*, %struct.buf_mem_st** %312, align 8
  %314 = icmp eq %struct.buf_mem_st* %313, null
  br i1 %314, label %318, label %315

315:                                              ; preds = %310
  %316 = call i32 @BUF_MEM_append(%struct.buf_mem_st* nonnull %313, i8* %298, i64 %299) #5
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %319

318:                                              ; preds = %315, %310
  store i8 80, i8* %2, align 1
  br label %319

319:                                              ; preds = %315, %270, %318, %296, %293
  %320 = phi i32 [ 4, %296 ], [ 4, %318 ], [ 4, %293 ], [ %276, %270 ], [ 0, %315 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %271) #5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #5
  br label %321

321:                                              ; preds = %83, %262, %263, %260, %54, %50, %319, %37
  %322 = phi i32 [ %320, %319 ], [ 2, %37 ], [ 2, %83 ], [ 4, %262 ], [ 0, %263 ], [ %261, %260 ], [ 4, %54 ], [ 4, %50 ]
  ret i32 %322
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

declare i32 @_ZN4bssl15tls_open_recordEP6ssl_stPhPNS_4SpanIhEEPmS2_S4_(%struct.ssl_st*, i8*, %"class.bssl::Span"*, i64*, i8*, %"class.bssl::Span"* byval(%"class.bssl::Span") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl16tls_next_messageEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = alloca i64, align 8
  %3 = alloca %"struct.bssl::SSLMessage", align 8
  %4 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  store i64 -6148914691236517206, i64* %2, align 8
  %6 = call fastcc zeroext i1 @_ZN4bsslL13parse_messageEPK6ssl_stPNS_10SSLMessageEPm(%struct.ssl_st* %0, %"struct.bssl::SSLMessage"* nonnull %3, i64* nonnull %2) #5
  br i1 %6, label %7, label %31

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 8
  %9 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %9, i64 0, i32 23
  %11 = load i16, i16* %10, align 1
  %12 = and i16 %11, 16
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %7
  %15 = load i8, i8* %4, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %3, i64 0, i32 3, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %3, i64 0, i32 3, i32 1
  %21 = load i64, i64* %20, align 8
  call void @_ZN4bssl19ssl_do_msg_callbackEPK6ssl_stiiNS_4SpanIKhEE(%struct.ssl_st* %0, i32 0, i32 22, i8* %19, i64 %21) #5
  %22 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %22, i64 0, i32 23
  %24 = load i16, i16* %23, align 1
  br label %25

25:                                               ; preds = %17, %14
  %26 = phi i16 [ %11, %14 ], [ %24, %17 ]
  %27 = phi %"struct.bssl::SSL3_STATE"* [ %9, %14 ], [ %22, %17 ]
  %28 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %27, i64 0, i32 23
  %29 = or i16 %26, 16
  store i16 %29, i16* %28, align 1
  %30 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  br label %32

31:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  br label %88

32:                                               ; preds = %7, %25
  %33 = phi %"struct.bssl::SSL3_STATE"* [ %9, %7 ], [ %30, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %34 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 25, i32 0, i32 0, i32 0
  %35 = load %struct.buf_mem_st*, %struct.buf_mem_st** %34, align 8
  %36 = icmp eq %struct.buf_mem_st* %35, null
  br i1 %36, label %88, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %35, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %3, i64 0, i32 3
  %41 = call i64 @CBS_len(%struct.cbs_st* %40) #5
  %42 = icmp ult i64 %39, %41
  br i1 %42, label %88, label %43

43:                                               ; preds = %37
  %44 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %45 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %44, i64 0, i32 25, i32 0, i32 0, i32 0
  %46 = load %struct.buf_mem_st*, %struct.buf_mem_st** %45, align 8
  %47 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %46, i64 0, i32 1
  %48 = load i8*, i8** %47, align 8
  %49 = call i64 @CBS_len(%struct.cbs_st* %40) #5
  %50 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %51 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 25, i32 0, i32 0, i32 0
  %52 = load %struct.buf_mem_st*, %struct.buf_mem_st** %51, align 8
  %53 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %52, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = call i64 @CBS_len(%struct.cbs_st* %40) #5
  %56 = sub i64 %54, %55
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %43
  %59 = getelementptr inbounds i8, i8* %48, i64 %49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %59, i64 %56, i1 false) #5
  br label %60

60:                                               ; preds = %43, %58
  %61 = call i64 @CBS_len(%struct.cbs_st* %40) #5
  %62 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %63 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %62, i64 0, i32 25, i32 0, i32 0, i32 0
  %64 = load %struct.buf_mem_st*, %struct.buf_mem_st** %63, align 8
  %65 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %64, i64 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %61
  store i64 %67, i64* %65, align 8
  %68 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %69 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %68, i64 0, i32 23
  %70 = load i16, i16* %69, align 1
  %71 = and i16 %70, -9
  store i16 %71, i16* %69, align 1
  %72 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %73 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %72, i64 0, i32 23
  %74 = load i16, i16* %73, align 1
  %75 = and i16 %74, -17
  store i16 %75, i16* %73, align 1
  %76 = call i32 @SSL_in_init(%struct.ssl_st* %0) #5
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %88

78:                                               ; preds = %60
  %79 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %8, align 8
  %80 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %79, i64 0, i32 25, i32 0, i32 0, i32 0
  %81 = load %struct.buf_mem_st*, %struct.buf_mem_st** %80, align 8
  %82 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %81, i64 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %78
  store %struct.buf_mem_st* null, %struct.buf_mem_st** %80, align 8
  %86 = icmp eq %struct.buf_mem_st* %81, null
  br i1 %86, label %88, label %87

87:                                               ; preds = %85
  call void @BUF_MEM_free(%struct.buf_mem_st* nonnull %81) #5
  br label %88

88:                                               ; preds = %32, %87, %85, %31, %78, %60, %37
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #5
  ret void
}

declare i32 @SSL_in_init(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ssl_cipher_st* @_ZN4bssl23ssl_choose_tls13_cipherE6cbs_sttt(i8*, i64, i16 zeroext, i16 zeroext) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca i16, align 2
  %7 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %struct.cbs_st, %struct.cbs_st* %5, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #5
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = call i32 @EVP_has_aes_hardware() #5
  %14 = icmp eq i32 %13, 0
  %15 = icmp eq i16 %3, 16696
  %16 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #5
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %79, label %18

18:                                               ; preds = %12
  %19 = bitcast i16* %6 to i8*
  br label %20

20:                                               ; preds = %18, %72
  %21 = phi %struct.ssl_cipher_st* [ null, %18 ], [ %76, %72 ]
  %22 = phi i8 [ 0, %18 ], [ %75, %72 ]
  %23 = phi i8 [ 0, %18 ], [ %74, %72 ]
  %24 = phi i8 [ 0, %18 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %19) #5
  store i16 -21846, i16* %6, align 2
  %25 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %5, i16* nonnull %6) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %19) #5
  br label %79

28:                                               ; preds = %20
  %29 = load i16, i16* %6, align 2
  %30 = call %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext %29) #5
  %31 = icmp eq %struct.ssl_cipher_st* %30, null
  br i1 %31, label %72, label %32

32:                                               ; preds = %28
  %33 = call zeroext i16 @SSL_CIPHER_get_min_version(%struct.ssl_cipher_st* nonnull %30) #5
  %34 = icmp ugt i16 %33, %2
  br i1 %34, label %72, label %35

35:                                               ; preds = %32
  %36 = call zeroext i16 @SSL_CIPHER_get_max_version(%struct.ssl_cipher_st* nonnull %30) #5
  %37 = icmp ult i16 %36, %2
  br i1 %37, label %72, label %38

38:                                               ; preds = %35
  br i1 %15, label %39, label %46

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %30, i64 0, i32 5
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 8
  %43 = zext i1 %42 to i24
  %44 = shl nuw nsw i24 %43, 8
  %45 = or i24 %44, 1
  br label %46

46:                                               ; preds = %39, %38
  %47 = phi i24 [ 257, %38 ], [ %45, %39 ]
  br i1 %14, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %struct.ssl_cipher_st, %struct.ssl_cipher_st* %30, i64 0, i32 5
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 64
  %52 = zext i1 %51 to i24
  %53 = shl nuw nsw i24 %52, 16
  br label %54

54:                                               ; preds = %46, %48
  %55 = phi i24 [ 65536, %46 ], [ %53, %48 ]
  %56 = or i24 %55, %47
  %57 = trunc i24 %47 to i8
  %58 = lshr i24 %47, 8
  %59 = trunc i24 %58 to i8
  %60 = lshr i24 %56, 16
  %61 = trunc i24 %60 to i8
  %62 = icmp ult i8 %22, %57
  br i1 %62, label %71, label %63

63:                                               ; preds = %54
  %64 = icmp ugt i8 %22, %57
  br i1 %64, label %72, label %65

65:                                               ; preds = %63
  %66 = icmp ult i8 %23, %59
  br i1 %66, label %71, label %67

67:                                               ; preds = %65
  %68 = icmp ule i8 %23, %59
  %69 = icmp ult i8 %24, %61
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %72

71:                                               ; preds = %67, %65, %54
  br label %72

72:                                               ; preds = %67, %63, %71, %35, %32, %28
  %73 = phi i8 [ %24, %28 ], [ %24, %32 ], [ %24, %35 ], [ %61, %71 ], [ %24, %63 ], [ %24, %67 ]
  %74 = phi i8 [ %23, %28 ], [ %23, %32 ], [ %23, %35 ], [ %59, %71 ], [ %23, %63 ], [ %23, %67 ]
  %75 = phi i8 [ %22, %28 ], [ %22, %32 ], [ %22, %35 ], [ %57, %71 ], [ %22, %63 ], [ %22, %67 ]
  %76 = phi %struct.ssl_cipher_st* [ %21, %28 ], [ %21, %32 ], [ %21, %35 ], [ %30, %71 ], [ %21, %63 ], [ %21, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %19) #5
  %77 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #5
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %20

79:                                               ; preds = %72, %12, %27, %4
  %80 = phi %struct.ssl_cipher_st* [ null, %4 ], [ null, %27 ], [ null, %12 ], [ %76, %72 ]
  ret %struct.ssl_cipher_st* %80
}

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #1

declare %struct.ssl_cipher_st* @SSL_get_cipher_by_value(i16 zeroext) local_unnamed_addr #1

declare zeroext i16 @SSL_CIPHER_get_min_version(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare zeroext i16 @SSL_CIPHER_get_max_version(%struct.ssl_cipher_st*) local_unnamed_addr #1

declare i64 @SSL_max_seal_overhead(%struct.ssl_st*) local_unnamed_addr #1

declare i32 @BUF_MEM_reserve(%struct.buf_mem_st*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl15tls_seal_recordEP6ssl_stPhPmmhPKhm(%struct.ssl_st*, i8*, i64*, i64, i8 zeroext, i8*, i64) local_unnamed_addr #1

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #1

declare i32 @CBS_get_u24(%struct.cbs_st*, i32*) local_unnamed_addr #1

declare i32 @CBS_get_bytes(%struct.cbs_st*, %struct.cbs_st*, i64) local_unnamed_addr #1

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #1

declare i32 @CBB_init_fixed(%struct.cbb_st*, i8*, i64) local_unnamed_addr #1

declare i32 @CBB_add_u16(%struct.cbb_st*, i16 zeroext) local_unnamed_addr #1

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #1

declare i32 @CBB_add_u16_length_prefixed(%struct.cbb_st*, %struct.cbb_st*) local_unnamed_addr #1

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @EVP_has_aes_hardware() local_unnamed_addr #1

declare void @BUF_MEM_free(%struct.buf_mem_st*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
