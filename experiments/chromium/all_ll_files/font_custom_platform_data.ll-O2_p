; ModuleID = '../../third_party/blink/renderer/platform/fonts/font_custom_platform_data.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/font_custom_platform_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::FontCustomPlatformData" = type <{ %"class.WTF::RefCounted", [4 x i8], %class.sk_sp, i64, i8, i8, [6 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr, i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.6", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, float }
%"class.WTF::RefCounted.6" = type { %"class.base::RefCounted.7" }
%"class.base::RefCounted.7" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.9" = type { %"class.WTF::VectorBuffer.10" }
%"class.WTF::VectorBuffer.10" = type { %"class.WTF::VectorBufferBase.11" }
%"class.WTF::VectorBufferBase.11" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%class.SkString = type { %class.sk_sp.14 }
%class.sk_sp.14 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.SkFontParameters::Variation::Axis" = type <{ i32, float, float, float, i16, [2 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::Vector.15" = type { %"class.WTF::VectorBuffer.16" }
%"class.WTF::VectorBuffer.16" = type { %"class.WTF::VectorBufferBase.17" }
%"class.WTF::VectorBufferBase.17" = type { %"struct.blink::VariationAxis"*, i32, i32 }
%"struct.blink::VariationAxis" = type { %"class.WTF::String", %"class.WTF::String", double, double, double }
%"class.WTF::String" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.WTF::StringImpl"* }
%"struct.SkTypeface::LocalizedString" = type { %class.SkString, %class.SkString }
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.27", i64, %"class.WTF::Vector.29", %"class.WTF::Vector.34" }
%"class.WTF::RefCounted.27" = type { %"class.base::RefCounted.28" }
%"class.base::RefCounted.28" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { i8*, i32, i32 }
%"class.WTF::Vector.34" = type { %"class.WTF::VectorBuffer.35" }
%"class.WTF::VectorBuffer.35" = type { %"class.WTF::VectorBufferBase.36" }
%"class.WTF::VectorBufferBase.36" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type opaque
%"class.blink::WebFontDecoder" = type { %"class.WTF::String", i64 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"struct.std::__1::__less.71" = type { i8 }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { i32*, i32, i32 }
%"class.WTF::Vector.44" = type { %"class.WTF::VectorBuffer.45" }
%"class.WTF::VectorBuffer.45" = type { %"class.WTF::VectorBufferBase.46" }
%"class.WTF::VectorBufferBase.46" = type { i16*, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN16SkFontParameters9Variation4AxisEEEmm = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm = comdat any

$_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [77 x i8] c"../../third_party/blink/renderer/platform/fonts/font_custom_platform_data.cc\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"Unable for apply variation axis properties for font: \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"en\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"en-US\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"woff\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"truetype\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"opentype\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"woff2\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"woff-variations\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"truetype-variations\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"opentype-variations\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"woff2-variations\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN16SkFontParameters9Variation4AxisEEEPKcv = private unnamed_addr constant [81 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkFontParameters::Variation::Axis]\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkFontArguments::VariationPosition::Coordinate]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned short]\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink22FontCustomPlatformDataC1E5sk_spI10SkTypefaceEm = hidden unnamed_addr alias void (%"class.blink::FontCustomPlatformData"*, %class.sk_sp*, i64), void (%"class.blink::FontCustomPlatformData"*, %class.sk_sp*, i64)* @_ZN5blink22FontCustomPlatformDataC2E5sk_spI10SkTypefaceEm
@_ZN5blink22FontCustomPlatformDataD1Ev = hidden unnamed_addr alias void (%"class.blink::FontCustomPlatformData"*), void (%"class.blink::FontCustomPlatformData"*)* @_ZN5blink22FontCustomPlatformDataD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink22FontCustomPlatformDataC2E5sk_spI10SkTypefaceEm(%"class.blink::FontCustomPlatformData"* nocapture, %class.sk_sp* nocapture, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %7 = bitcast %class.sk_sp* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store %class.SkTypeface* null, %class.SkTypeface** %6, align 8
  %9 = bitcast %class.sk_sp* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 3
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 4
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 5
  store i8 0, i8* %12, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FontCustomPlatformDataD2Ev(%"class.blink::FontCustomPlatformData"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkTypeface*, %class.SkTypeface** %2, align 8
  %4 = icmp eq %class.SkTypeface* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %class.SkTypeface* %3 to %class.SkRefCntBase*
  %11 = bitcast %class.SkTypeface* %3 to void (%class.SkRefCntBase*)***
  %12 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, i64 2
  %14 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, align 8
  tail call void %14(%class.SkRefCntBase* nonnull %10) #13
  br label %15

15:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22FontCustomPlatformData19GetFontPlatformDataEfbbRKNS_20FontSelectionRequestERKNS_25FontSelectionCapabilitiesERKNS_13OpticalSizingENS_15FontOrientationEPKNS_21FontVariationSettingsE(%"class.blink::FontPlatformData"* noalias sret, %"class.blink::FontCustomPlatformData"* nocapture readonly, float, i1 zeroext, i1 zeroext, %"struct.blink::FontSelectionRequest"* nocapture readonly dereferenceable(6), %"struct.blink::FontSelectionCapabilities"* nocapture readonly dereferenceable(14), i32* nocapture readonly dereferenceable(4), i32, %"class.blink::FontVariationSettings"* readonly) local_unnamed_addr #1 align 2 {
  %11 = alloca i16, align 2
  %12 = alloca i16, align 2
  %13 = alloca i16, align 2
  %14 = alloca %class.sk_sp, align 8
  %15 = alloca %"class.WTF::Vector.9", align 8
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %18 = alloca i64, align 8
  %19 = bitcast i64* %18 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %20 = alloca i64, align 8
  %21 = bitcast i64* %20 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %22 = alloca i64, align 8
  %23 = bitcast i64* %22 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %24 = alloca i64, align 8
  %25 = bitcast i64* %24 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %26 = alloca i64, align 8
  %27 = bitcast i64* %26 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %28 = alloca %struct.SkFontArguments, align 8
  %29 = alloca %class.sk_sp, align 8
  %30 = alloca %class.SkString, align 8
  %31 = alloca %"class.logging::LogMessage", align 8
  %32 = alloca %class.sk_sp, align 8
  %33 = alloca %"class.std::__1::basic_string", align 8
  %34 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %1, i64 0, i32 2, i32 0
  %35 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  %36 = icmp eq %class.SkTypeface* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %10
  %38 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  br label %49

39:                                               ; preds = %10
  %40 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic
  %42 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  %43 = ptrtoint %class.SkTypeface* %35 to i64
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %14, i64 0, i32 0
  %45 = icmp eq %class.SkTypeface* %42, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %42, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %37, %39, %46
  %50 = phi %class.SkTypeface** [ %38, %37 ], [ %44, %39 ], [ %44, %46 ]
  %51 = phi i64 [ 0, %37 ], [ %43, %39 ], [ %43, %46 ]
  %52 = phi %class.SkTypeface* [ null, %37 ], [ null, %39 ], [ %42, %46 ]
  store %class.SkTypeface* %52, %class.SkTypeface** %50, align 8
  %53 = call i32 @_ZN5blink15FontFormatCheck17ProbeVariableFontE5sk_spI10SkTypefaceE(%class.sk_sp* nonnull %14) #13
  %54 = load %class.SkTypeface*, %class.SkTypeface** %50, align 8
  %55 = icmp eq %class.SkTypeface* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkTypeface* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkTypeface* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #13
  br label %66

66:                                               ; preds = %49, %56, %60
  %67 = add i32 %53, -1
  %68 = icmp ult i32 %67, 2
  br i1 %68, label %69, label %416

69:                                               ; preds = %66
  %70 = bitcast %"class.WTF::Vector.9"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #13
  %71 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %15, i64 0, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %15, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %15, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 0, i64 16, i1 false) #13
  %74 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #13
  %75 = bitcast i64* %16 to i32*
  %76 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %17, i64 0, i32 1
  store i32 2003265652, i32* %75, align 8
  %77 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 2
  %78 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %5, i64 0, i32 0, i32 0
  %79 = load i16, i16* %78, align 2
  %80 = bitcast i16* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %80)
  store i16 %79, i16* %13, align 2
  %81 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %77, i64 0, i32 0
  %82 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 2, i32 1
  %83 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %77, i64 0, i32 0, i32 0
  %84 = load i16, i16* %83, align 2
  %85 = icmp sgt i16 %84, %79
  %86 = bitcast i16* %13 to %"class.blink::FontSelectionValue"*
  %87 = select i1 %85, %"class.blink::FontSelectionValue"* %81, %"class.blink::FontSelectionValue"* %86
  %88 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %87, i64 0, i32 0
  %89 = load i16, i16* %88, align 2
  %90 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %82, i64 0, i32 0
  %91 = load i16, i16* %90, align 2
  %92 = icmp slt i16 %91, %89
  %93 = select i1 %92, %"class.blink::FontSelectionValue"* %82, %"class.blink::FontSelectionValue"* %87
  %94 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %93, i64 0, i32 0
  %95 = load i16, i16* %94, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %80)
  %96 = sitofp i16 %95 to float
  %97 = fmul float %96, 2.500000e-01
  store float %97, float* %76, align 4
  %98 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #13
  %99 = bitcast i64* %18 to i32*
  %100 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %19, i64 0, i32 1
  store i32 2003072104, i32* %99, align 8
  %101 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %5, i64 0, i32 1, i32 0
  %102 = load i16, i16* %101, align 2
  %103 = bitcast i16* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %103)
  store i16 %102, i16* %12, align 2
  %104 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 0, i32 1
  %106 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 0, i32 0, i32 0
  %107 = load i16, i16* %106, align 2
  %108 = icmp sgt i16 %107, %102
  %109 = bitcast i16* %12 to %"class.blink::FontSelectionValue"*
  %110 = select i1 %108, %"class.blink::FontSelectionValue"* %104, %"class.blink::FontSelectionValue"* %109
  %111 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %110, i64 0, i32 0
  %112 = load i16, i16* %111, align 2
  %113 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %105, i64 0, i32 0
  %114 = load i16, i16* %113, align 2
  %115 = icmp slt i16 %114, %112
  %116 = select i1 %115, %"class.blink::FontSelectionValue"* %105, %"class.blink::FontSelectionValue"* %110
  %117 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %116, i64 0, i32 0
  %118 = load i16, i16* %117, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %103)
  %119 = sitofp i16 %118 to float
  %120 = fmul float %119, 2.500000e-01
  store float %120, float* %100, align 4
  %121 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #13
  %122 = bitcast i64* %20 to i32*
  %123 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %21, i64 0, i32 1
  store i32 1936486004, i32* %122, align 8
  %124 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 1
  %125 = getelementptr inbounds %"struct.blink::FontSelectionRequest", %"struct.blink::FontSelectionRequest"* %5, i64 0, i32 2, i32 0
  %126 = load i16, i16* %125, align 2
  %127 = bitcast i16* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %127)
  store i16 %126, i16* %11, align 2
  %128 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %124, i64 0, i32 0
  %129 = getelementptr inbounds %"struct.blink::FontSelectionCapabilities", %"struct.blink::FontSelectionCapabilities"* %6, i64 0, i32 1, i32 1
  %130 = getelementptr inbounds %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange"* %124, i64 0, i32 0, i32 0
  %131 = load i16, i16* %130, align 2
  %132 = icmp sgt i16 %131, %126
  %133 = bitcast i16* %11 to %"class.blink::FontSelectionValue"*
  %134 = select i1 %132, %"class.blink::FontSelectionValue"* %128, %"class.blink::FontSelectionValue"* %133
  %135 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %134, i64 0, i32 0
  %136 = load i16, i16* %135, align 2
  %137 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %129, i64 0, i32 0
  %138 = load i16, i16* %137, align 2
  %139 = icmp slt i16 %138, %136
  %140 = select i1 %139, %"class.blink::FontSelectionValue"* %129, %"class.blink::FontSelectionValue"* %134
  %141 = getelementptr inbounds %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue"* %140, i64 0, i32 0
  %142 = load i16, i16* %141, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %127)
  %143 = sub i16 0, %142
  %144 = sitofp i16 %143 to float
  %145 = fmul float %144, 2.500000e-01
  store float %145, float* %123, align 4
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %17) #13
  %146 = load i32, i32* %73, align 4
  %147 = load i32, i32* %72, align 8
  %148 = icmp eq i32 %146, %147
  br i1 %148, label %157, label %149, !prof !2

149:                                              ; preds = %69
  %150 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %151 = zext i32 %146 to i64
  %152 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %150, i64 %151
  %153 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %152 to i64*
  %154 = load i64, i64* %18, align 8
  store i64 %154, i64* %153, align 4
  %155 = load i32, i32* %73, align 4
  %156 = add i32 %155, 1
  store i32 %156, i32* %73, align 4
  br label %159

157:                                              ; preds = %69
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %19) #13
  %158 = load i32, i32* %73, align 4
  br label %159

159:                                              ; preds = %149, %157
  %160 = phi i32 [ %156, %149 ], [ %158, %157 ]
  %161 = load i32, i32* %72, align 8
  %162 = icmp eq i32 %160, %161
  br i1 %162, label %171, label %163, !prof !2

163:                                              ; preds = %159
  %164 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %165 = zext i32 %160 to i64
  %166 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %164, i64 %165
  %167 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %166 to i64*
  %168 = load i64, i64* %20, align 8
  store i64 %168, i64* %167, align 4
  %169 = load i32, i32* %73, align 4
  %170 = add i32 %169, 1
  store i32 %170, i32* %73, align 4
  br label %172

171:                                              ; preds = %159
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %21) #13
  br label %172

172:                                              ; preds = %163, %171
  %173 = icmp eq %"class.blink::FontVariationSettings"* %9, null
  br i1 %173, label %258, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = icmp ult i32 %176, 65535
  br i1 %177, label %178, label %258

178:                                              ; preds = %174
  %179 = load i32, i32* %73, align 4
  %180 = add i32 %179, %176
  %181 = load i32, i32* %72, align 8
  %182 = icmp ult i32 %181, %180
  br i1 %182, label %183, label %214, !prof !3

183:                                              ; preds = %178
  %184 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %185 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %184, null
  %186 = zext i32 %180 to i64
  %187 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64 %186) #13
  %188 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %187, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv, i64 0, i64 0)) #13
  br i1 %185, label %189, label %194

189:                                              ; preds = %183
  %190 = ptrtoint i8* %188 to i64
  %191 = bitcast %"class.WTF::Vector.9"* %15 to i64*
  store atomic i64 %190, i64* %191 monotonic, align 8
  %192 = lshr i64 %187, 3
  %193 = trunc i64 %192 to i32
  br label %212

194:                                              ; preds = %183
  %195 = lshr i64 %187, 3
  %196 = ptrtoint i8* %188 to i64
  %197 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %198 = icmp ne i8* %188, null
  %199 = icmp ne %"struct.SkFontArguments::VariationPosition::Coordinate"* %197, null
  %200 = and i1 %198, %199
  %201 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %197 to i8*
  br i1 %200, label %202, label %208, !prof !3

202:                                              ; preds = %194
  %203 = load i32, i32* %73, align 4
  %204 = zext i32 %203 to i64
  %205 = shl nuw nsw i64 %204, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %188, i8* nonnull align 4 %201, i64 %205, i1 false) #13
  %206 = bitcast %"class.WTF::Vector.9"* %15 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %202, %194
  %209 = phi i8* [ %207, %202 ], [ %201, %194 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %209) #13
  %210 = bitcast %"class.WTF::Vector.9"* %15 to i64*
  store atomic i64 %196, i64* %210 monotonic, align 8
  %211 = trunc i64 %195 to i32
  br label %212

212:                                              ; preds = %208, %189
  %213 = phi i32 [ %193, %189 ], [ %211, %208 ]
  store i32 %213, i32* %72, align 8
  br label %214

214:                                              ; preds = %212, %178
  %215 = phi i32 [ %181, %178 ], [ %213, %212 ]
  %216 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %216, align 8
  %218 = load i32, i32* %175, align 4
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %217, i64 %219
  %221 = icmp eq i32 %218, 0
  br i1 %221, label %258, label %222

222:                                              ; preds = %214
  %223 = bitcast i64* %22 to i8*
  %224 = bitcast i64* %22 to i32*
  %225 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %23, i64 0, i32 1
  %226 = bitcast float* %225 to i32*
  br label %227

227:                                              ; preds = %253, %222
  %228 = phi i32 [ %215, %222 ], [ %254, %253 ]
  %229 = phi i8 [ 0, %222 ], [ %234, %253 ]
  %230 = phi %"class.blink::FontTagValuePair"* [ %217, %222 ], [ %251, %253 ]
  %231 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %230, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 1869640570
  %234 = select i1 %233, i8 1, i8 %229
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #13
  store i32 -1431655766, i32* %224, align 8
  store float 0xFFFFFFFFE0000000, float* %225, align 4
  %235 = load i32, i32* %231, align 4
  store i32 %235, i32* %224, align 8
  %236 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %230, i64 0, i32 1
  %237 = bitcast float* %236 to i32*
  %238 = load i32, i32* %237, align 4
  store i32 %238, i32* %226, align 4
  %239 = load i32, i32* %73, align 4
  %240 = icmp eq i32 %239, %228
  br i1 %240, label %249, label %241, !prof !2

241:                                              ; preds = %227
  %242 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %243 = zext i32 %239 to i64
  %244 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %242, i64 %243
  %245 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %244 to i64*
  %246 = load i64, i64* %22, align 8
  store i64 %246, i64* %245, align 4
  %247 = load i32, i32* %73, align 4
  %248 = add i32 %247, 1
  store i32 %248, i32* %73, align 4
  br label %250

249:                                              ; preds = %227
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %23) #13
  br label %250

250:                                              ; preds = %241, %249
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #13
  %251 = getelementptr inbounds %"class.blink::FontTagValuePair", %"class.blink::FontTagValuePair"* %230, i64 1
  %252 = icmp eq %"class.blink::FontTagValuePair"* %251, %220
  br i1 %252, label %255, label %253

253:                                              ; preds = %250
  %254 = load i32, i32* %72, align 8
  br label %227

255:                                              ; preds = %250
  %256 = and i8 %234, 1
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %349

258:                                              ; preds = %214, %172, %174, %255
  %259 = load i32, i32* %7, align 4
  switch i32 %259, label %349 [
    i32 0, label %260
    i32 1, label %277
  ]

260:                                              ; preds = %258
  %261 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #13
  %262 = bitcast i64* %24 to i32*
  %263 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %25, i64 0, i32 1
  store i32 1869640570, i32* %262, align 8
  store float %2, float* %263, align 4
  %264 = load i32, i32* %73, align 4
  %265 = load i32, i32* %72, align 8
  %266 = icmp eq i32 %264, %265
  br i1 %266, label %275, label %267, !prof !2

267:                                              ; preds = %260
  %268 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %269 = zext i32 %264 to i64
  %270 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %268, i64 %269
  %271 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %270 to i64*
  %272 = load i64, i64* %24, align 8
  store i64 %272, i64* %271, align 4
  %273 = load i32, i32* %73, align 4
  %274 = add i32 %273, 1
  store i32 %274, i32* %73, align 4
  br label %276

275:                                              ; preds = %260
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %25) #13
  br label %276

276:                                              ; preds = %267, %275
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #13
  br label %349

277:                                              ; preds = %258
  br i1 %36, label %281, label %278

278:                                              ; preds = %277
  %279 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = atomicrmw add i32* %279, i32 1 monotonic
  br label %281

281:                                              ; preds = %277, %278
  %282 = call i32 @_ZNK10SkTypeface28getVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypeface* %35, %"struct.SkFontParameters::Variation::Axis"* null, i32 0) #13
  %283 = icmp slt i32 %282, 1
  br i1 %283, label %318, label %284

284:                                              ; preds = %281
  %285 = icmp ugt i32 %282, 4
  %286 = select i1 %285, i32 %282, i32 4
  %287 = zext i32 %286 to i64
  %288 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN16SkFontParameters9Variation4AxisEEEmm(i64 %287) #13
  %289 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %288, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN16SkFontParameters9Variation4AxisEEEPKcv, i64 0, i64 0)) #13
  %290 = bitcast i8* %289 to %"struct.SkFontParameters::Variation::Axis"*
  %291 = zext i32 %282 to i64
  %292 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %290, i64 %291
  br label %293

293:                                              ; preds = %293, %284
  %294 = phi %"struct.SkFontParameters::Variation::Axis"* [ %296, %293 ], [ %290, %284 ]
  %295 = bitcast %"struct.SkFontParameters::Variation::Axis"* %294 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %295, i8 0, i64 18, i1 false) #13
  %296 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %294, i64 1
  %297 = icmp eq %"struct.SkFontParameters::Variation::Axis"* %296, %292
  br i1 %297, label %298, label %293

298:                                              ; preds = %293
  %299 = call i32 @_ZNK10SkTypeface28getVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypeface* %35, %"struct.SkFontParameters::Variation::Axis"* %290, i32 %282) #13
  %300 = icmp slt i32 %299, 1
  %301 = icmp eq %"struct.SkFontParameters::Variation::Axis"* %292, %290
  %302 = or i1 %301, %300
  br i1 %302, label %314, label %303

303:                                              ; preds = %298, %308
  %304 = phi %"struct.SkFontParameters::Variation::Axis"* [ %309, %308 ], [ %290, %298 ]
  %305 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %304, i64 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = icmp eq i32 %306, 1869640570
  br i1 %307, label %311, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %304, i64 1
  %310 = icmp eq %"struct.SkFontParameters::Variation::Axis"* %309, %292
  br i1 %310, label %314, label %303

311:                                              ; preds = %303
  %312 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %304, i64 0, i32 2
  %313 = load float, float* %312, align 4
  br label %314

314:                                              ; preds = %308, %311, %298
  %315 = phi float [ -1.000000e+00, %298 ], [ %313, %311 ], [ -1.000000e+00, %308 ]
  %316 = icmp eq i8* %289, null
  br i1 %316, label %318, label %317, !prof !3

317:                                              ; preds = %314
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %289) #13
  br label %318

318:                                              ; preds = %281, %314, %317
  %319 = phi float [ -1.000000e+00, %281 ], [ %315, %314 ], [ %315, %317 ]
  br i1 %36, label %330, label %320

320:                                              ; preds = %318
  %321 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = atomicrmw add i32* %321, i32 -1 acq_rel
  %323 = icmp eq i32 %322, 1
  br i1 %323, label %324, label %330

324:                                              ; preds = %320
  %325 = bitcast %class.SkTypeface* %35 to %class.SkRefCntBase*
  %326 = bitcast %class.SkTypeface* %35 to void (%class.SkRefCntBase*)***
  %327 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %326, align 8
  %328 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %327, i64 2
  %329 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %328, align 8
  call void %329(%class.SkRefCntBase* nonnull %325) #13
  br label %330

330:                                              ; preds = %318, %320, %324
  %331 = fcmp ult float %319, 0.000000e+00
  br i1 %331, label %349, label %332

332:                                              ; preds = %330
  %333 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #13
  %334 = bitcast i64* %26 to i32*
  %335 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %27, i64 0, i32 1
  store i32 1869640570, i32* %334, align 8
  store float %319, float* %335, align 4
  %336 = load i32, i32* %73, align 4
  %337 = load i32, i32* %72, align 8
  %338 = icmp eq i32 %336, %337
  br i1 %338, label %347, label %339, !prof !2

339:                                              ; preds = %332
  %340 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %341 = zext i32 %336 to i64
  %342 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %340, i64 %341
  %343 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %342 to i64*
  %344 = load i64, i64* %26, align 8
  store i64 %344, i64* %343, align 4
  %345 = load i32, i32* %73, align 4
  %346 = add i32 %345, 1
  store i32 %346, i32* %73, align 4
  br label %348

347:                                              ; preds = %332
  call void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"* nonnull %15, %"struct.SkFontArguments::VariationPosition::Coordinate"* nonnull dereferenceable(8) %27) #13
  br label %348

348:                                              ; preds = %339, %347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #13
  br label %349

349:                                              ; preds = %348, %330, %258, %255, %276
  %350 = bitcast %struct.SkFontArguments* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %350) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %350, i8 -86, i64 24, i1 false)
  %351 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %28, i64 0, i32 0
  store i32 0, i32* %351, align 8
  %352 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %28, i64 0, i32 1, i32 0
  %353 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %28, i64 0, i32 1, i32 1
  %354 = bitcast %"class.WTF::Vector.9"* %15 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = load i32, i32* %73, align 4
  %357 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"** %352 to i64*
  store i64 %355, i64* %357, align 8
  store i32 %356, i32* %353, align 8
  %358 = bitcast %class.sk_sp* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #13
  %359 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %29, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %359, align 8
  %360 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  call void @_ZNK10SkTypeface9makeCloneERK15SkFontArguments(%class.sk_sp* nonnull sret %29, %class.SkTypeface* %360, %struct.SkFontArguments* nonnull dereferenceable(24) %28) #13
  %361 = load %class.SkTypeface*, %class.SkTypeface** %359, align 8
  %362 = icmp eq %class.SkTypeface* %361, null
  br i1 %362, label %377, label %363

363:                                              ; preds = %349
  %364 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %361, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %365 = atomicrmw add i32* %364, i32 1 monotonic
  %366 = ptrtoint %class.SkTypeface* %361 to i64
  br i1 %36, label %392, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %369 = atomicrmw add i32* %368, i32 -1 acq_rel
  %370 = icmp eq i32 %369, 1
  br i1 %370, label %371, label %392

371:                                              ; preds = %367
  %372 = bitcast %class.SkTypeface* %35 to %class.SkRefCntBase*
  %373 = bitcast %class.SkTypeface* %35 to void (%class.SkRefCntBase*)***
  %374 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %373, align 8
  %375 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %374, i64 2
  %376 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %375, align 8
  call void %376(%class.SkRefCntBase* nonnull %372) #13
  br label %392

377:                                              ; preds = %349
  %378 = bitcast %class.SkString* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #13
  %379 = getelementptr inbounds %class.SkString, %class.SkString* %30, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %379, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %30) #13
  %380 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* %380, %class.SkString* nonnull %30) #13
  %381 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #13
  br i1 %381, label %382, label %391

382:                                              ; preds = %377
  %383 = bitcast %"class.logging::LogMessage"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %383) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %31, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i64 0, i64 0), i32 169, i32 2) #13
  %384 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %31, i64 0, i32 2
  %385 = bitcast %"class.std::__1::basic_ostringstream"* %384 to %"class.std::__1::basic_ostream"*
  %386 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %385, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i64 53) #13
  %387 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %379, align 8
  %388 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %387, i64 0, i32 2
  %389 = call i64 @strlen(i8* %388) #13
  %390 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %386, i8* %388, i64 %389) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %383) #13
  br label %391

391:                                              ; preds = %377, %382
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #13
  br label %392

392:                                              ; preds = %371, %367, %363, %391
  %393 = phi i64 [ %51, %391 ], [ %366, %363 ], [ %366, %367 ], [ %366, %371 ]
  %394 = load %class.SkTypeface*, %class.SkTypeface** %359, align 8
  %395 = icmp eq %class.SkTypeface* %394, null
  br i1 %395, label %406, label %396

396:                                              ; preds = %392
  %397 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %394, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %398 = atomicrmw add i32* %397, i32 -1 acq_rel
  %399 = icmp eq i32 %398, 1
  br i1 %399, label %400, label %406

400:                                              ; preds = %396
  %401 = bitcast %class.SkTypeface* %394 to %class.SkRefCntBase*
  %402 = bitcast %class.SkTypeface* %394 to void (%class.SkRefCntBase*)***
  %403 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %402, align 8
  %404 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %403, i64 2
  %405 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %404, align 8
  call void %405(%class.SkRefCntBase* nonnull %401) #13
  br label %406

406:                                              ; preds = %392, %396, %400
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %350) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #13
  %407 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  %408 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %407, null
  %409 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %407 to i8*
  br i1 %408, label %415, label %410, !prof !3

410:                                              ; preds = %406
  %411 = load i32, i32* %73, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %414, label %413, !prof !2

413:                                              ; preds = %410
  store i32 0, i32* %73, align 4
  br label %414

414:                                              ; preds = %413, %410
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %409) #13
  store %"struct.SkFontArguments::VariationPosition::Coordinate"* null, %"struct.SkFontArguments::VariationPosition::Coordinate"** %71, align 8
  br label %415

415:                                              ; preds = %406, %414
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #13
  br label %416

416:                                              ; preds = %66, %415
  %417 = phi i64 [ %393, %415 ], [ %51, %66 ]
  %418 = bitcast %class.sk_sp* %32 to i64*
  store i64 %417, i64* %418, align 8
  %419 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %419, i8 0, i64 24, i1 false) #13
  br i1 %3, label %420, label %426

420:                                              ; preds = %416
  %421 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  %422 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %421, i64 0, i32 2, i32 0
  %423 = load i32, i32* %422, align 4
  %424 = and i32 %423, 65528
  %425 = icmp ult i32 %424, 600
  br label %426

426:                                              ; preds = %420, %416
  %427 = phi i1 [ false, %416 ], [ %425, %420 ]
  br i1 %4, label %428, label %433

428:                                              ; preds = %426
  %429 = load %class.SkTypeface*, %class.SkTypeface** %34, align 8
  %430 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %429, i64 0, i32 2, i32 0
  %431 = load i32, i32* %430, align 4
  %432 = icmp ult i32 %431, 16777216
  br label %433

433:                                              ; preds = %428, %426
  %434 = phi i1 [ false, %426 ], [ %432, %428 ]
  call void @_ZN5blink16FontPlatformDataC1E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"* %0, %class.sk_sp* nonnull %32, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %33, float %2, i1 zeroext %427, i1 zeroext %434, i32 %8) #13
  %435 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %436 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %435, i64 0, i32 1, i32 0
  %437 = load i8, i8* %436, align 1
  %438 = icmp slt i8 %437, 0
  br i1 %438, label %439, label %442

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %441 = load i8*, i8** %440, align 8
  call void @_ZdlPv(i8* %441) #14
  br label %442

442:                                              ; preds = %433, %439
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #13
  %443 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %32, i64 0, i32 0
  %444 = load %class.SkTypeface*, %class.SkTypeface** %443, align 8
  %445 = icmp eq %class.SkTypeface* %444, null
  br i1 %445, label %456, label %446

446:                                              ; preds = %442
  %447 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %444, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = atomicrmw add i32* %447, i32 -1 acq_rel
  %449 = icmp eq i32 %448, 1
  br i1 %449, label %450, label %456

450:                                              ; preds = %446
  %451 = bitcast %class.SkTypeface* %444 to %class.SkRefCntBase*
  %452 = bitcast %class.SkTypeface* %444 to void (%class.SkRefCntBase*)***
  %453 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %452, align 8
  %454 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %453, i64 2
  %455 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %454, align 8
  call void %455(%class.SkRefCntBase* nonnull %451) #13
  br label %456

456:                                              ; preds = %450, %446, %442
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN5blink15FontFormatCheck17ProbeVariableFontE5sk_spI10SkTypefaceE(%class.sk_sp*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK10SkTypeface9makeCloneERK15SkFontArguments(%class.sk_sp* sret, %class.SkTypeface*, %struct.SkFontArguments* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #3

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #3

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

declare void @_ZN5blink16FontPlatformDataC1E5sk_spI10SkTypefaceERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEfbbNS_15FontOrientationE(%"class.blink::FontPlatformData"*, %class.sk_sp*, %"class.std::__1::basic_string"* dereferenceable(24), float, i1 zeroext, i1 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink22FontCustomPlatformData16GetVariationAxesEv(%"class.WTF::Vector.15"* noalias sret, %"class.blink::FontCustomPlatformData"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %1, i64 0, i32 2, i32 0
  %6 = load %class.SkTypeface*, %class.SkTypeface** %5, align 8
  %7 = icmp eq %class.SkTypeface* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 1 monotonic
  br label %11

11:                                               ; preds = %2, %8
  store %class.SkTypeface* %6, %class.SkTypeface** %4, align 8
  call void @_ZN5blink17VariableAxesNames16GetVariationAxesE5sk_spI10SkTypefaceE(%"class.WTF::Vector.15"* sret %0, %class.sk_sp* nonnull %3) #13
  %12 = load %class.SkTypeface*, %class.SkTypeface** %4, align 8
  %13 = icmp eq %class.SkTypeface* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %class.SkTypeface* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkTypeface* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  call void %23(%class.SkRefCntBase* nonnull %19) #13
  br label %24

24:                                               ; preds = %11, %14, %18
  ret void
}

declare void @_ZN5blink17VariableAxesNames16GetVariationAxesE5sk_spI10SkTypefaceE(%"class.WTF::Vector.15"* sret, %class.sk_sp*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink22FontCustomPlatformData22FamilyNameForInspectorEv(%"class.blink::FontCustomPlatformData"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"struct.SkTypeface::LocalizedString", align 8
  %3 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkTypeface*, %class.SkTypeface** %3, align 8
  %5 = tail call %"class.SkTypeface::LocalizedStrings"* @_ZNK10SkTypeface24createFamilyNameIteratorEv(%class.SkTypeface* %4) #13
  %6 = bitcast %"struct.SkTypeface::LocalizedString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %2, i64 0, i32 1
  %10 = bitcast %"struct.SkTypeface::LocalizedString"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %7) #13
  call void @_ZN8SkStringC1Ev(%class.SkString* %9) #13
  %11 = bitcast %"class.SkTypeface::LocalizedStrings"* %5 to i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)***
  br label %12

12:                                               ; preds = %19, %1
  %13 = load i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)**, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*** %11, align 8
  %14 = getelementptr inbounds i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)** %13, i64 2
  %15 = load i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)*, i1 (%"class.SkTypeface::LocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)** %14, align 8
  %16 = call zeroext i1 %15(%"class.SkTypeface::LocalizedStrings"* %5, %"struct.SkTypeface::LocalizedString"* nonnull %2) #13
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #13
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = call zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString* %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #13
  br i1 %20, label %21, label %12

21:                                               ; preds = %17, %19, %12
  %22 = icmp eq %"class.SkTypeface::LocalizedStrings"* %5, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.SkTypeface::LocalizedStrings"* %5 to void (%"class.SkTypeface::LocalizedStrings"*)***
  %25 = load void (%"class.SkTypeface::LocalizedStrings"*)**, void (%"class.SkTypeface::LocalizedStrings"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.SkTypeface::LocalizedStrings"*)*, void (%"class.SkTypeface::LocalizedStrings"*)** %25, i64 1
  %27 = load void (%"class.SkTypeface::LocalizedStrings"*)*, void (%"class.SkTypeface::LocalizedStrings"*)** %26, align 8
  call void %27(%"class.SkTypeface::LocalizedStrings"* nonnull %5) #13
  br label %28

28:                                               ; preds = %21, %23
  %29 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %8, align 8
  %30 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %29, i64 0, i32 2
  %31 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %29, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %30, i64 %33) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* %9) #13
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.WTF::StringImpl"* %34
}

declare %"class.SkTypeface::LocalizedStrings"* @_ZNK10SkTypeface24createFamilyNameIteratorEv(%class.SkTypeface*) local_unnamed_addr #3

declare zeroext i1 @_ZNK8SkString6equalsEPKc(%class.SkString*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontCustomPlatformData"* @_ZN5blink22FontCustomPlatformData6CreateEPN3WTF12SharedBufferERNS1_6StringE(%"class.WTF::SharedBuffer"*, %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::WebFontDecoder", align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = bitcast %"class.blink::WebFontDecoder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #13
  %7 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %8, align 8
  call void @_ZN5blink14WebFontDecoder6DecodeEPN3WTF12SharedBufferE(%class.sk_sp* nonnull sret %4, %"class.blink::WebFontDecoder"* nonnull %3, %"class.WTF::SharedBuffer"* %0) #13
  %9 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %10 = icmp eq %class.SkTypeface* %9, null
  br i1 %10, label %11, label %50

11:                                               ; preds = %2
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #13
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  call void @llvm.trap() #13
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %11, %14, %29
  %32 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %33 = bitcast %"class.WTF::String"* %1 to i64*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %32, i64* %33, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %63, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #13
  br label %63

50:                                               ; preds = %2
  %51 = ptrtoint %class.SkTypeface* %9 to i64
  %52 = getelementptr inbounds %"class.blink::WebFontDecoder", %"class.blink::WebFontDecoder"* %3, i64 0, i32 1
  %53 = call noalias i8* @malloc(i64 32) #13
  %54 = bitcast i8* %53 to %"class.blink::FontCustomPlatformData"*
  store %class.SkTypeface* null, %class.SkTypeface** %8, align 8
  %55 = load i64, i64* %52, align 8
  %56 = bitcast i8* %53 to i32*
  store i32 1, i32* %56, align 4
  %57 = getelementptr inbounds i8, i8* %53, i64 8
  %58 = bitcast i8* %57 to i64*
  store i64 %51, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %53, i64 16
  %60 = bitcast i8* %59 to i64*
  store i64 %55, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %53, i64 24
  store i8 0, i8* %61, align 8
  %62 = getelementptr inbounds i8, i8* %53, i64 25
  store i8 0, i8* %62, align 1
  br label %63

63:                                               ; preds = %31, %46, %49, %50
  %64 = phi %"class.blink::FontCustomPlatformData"* [ %54, %50 ], [ null, %49 ], [ null, %46 ], [ null, %31 ]
  %65 = load %class.SkTypeface*, %class.SkTypeface** %8, align 8
  %66 = icmp eq %class.SkTypeface* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %class.SkTypeface* %65 to %class.SkRefCntBase*
  %73 = bitcast %class.SkTypeface* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #13
  br label %77

77:                                               ; preds = %63, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #13
  br label %93

93:                                               ; preds = %77, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #13
  ret %"class.blink::FontCustomPlatformData"* %64
}

declare void @_ZN5blink14WebFontDecoder6DecodeEPN3WTF12SharedBufferE(%class.sk_sp* sret, %"class.blink::WebFontDecoder"*, %"class.WTF::SharedBuffer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22FontCustomPlatformData14SupportsFormatERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #13
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %13, align 8
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %14, i64* %15, align 8
  br label %23

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 1
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %22 = bitcast i8** %21 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  br label %23

23:                                               ; preds = %12, %16
  %24 = phi i32 [ %19, %16 ], [ 0, %12 ]
  %25 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %24, i32* %25, align 8
  %26 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.4)
  %27 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #13
  %29 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #13
  %31 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %26, label %217, label %32

32:                                               ; preds = %23
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %36, align 8
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %38 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %37, i64* %38, align 8
  br label %46

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 1
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %45 = bitcast i8** %44 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  br label %46

46:                                               ; preds = %35, %39
  %47 = phi i32 [ %42, %39 ], [ 0, %35 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [9 x i8]* nonnull dereferenceable(9) @.str.5)
  br i1 %49, label %217, label %50

50:                                               ; preds = %46
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %54, align 8
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %56 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %55, i64* %56, align 8
  br label %64

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %51, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 1
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %63 = bitcast i8** %62 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %63, align 8
  br label %64

64:                                               ; preds = %53, %57
  %65 = phi i32 [ %60, %57 ], [ 0, %53 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [9 x i8]* nonnull dereferenceable(9) @.str.6)
  br i1 %67, label %217, label %68

68:                                               ; preds = %64
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %72, align 8
  %73 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %74 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %73, i64* %74, align 8
  br label %82

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 1
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %81 = bitcast i8** %80 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %79, %"class.WTF::StringImpl"** %81, align 8
  br label %82

82:                                               ; preds = %71, %75
  %83 = phi i32 [ %78, %75 ], [ 0, %71 ]
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %83, i32* %84, align 8
  %85 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, [6 x i8]* nonnull dereferenceable(6) @.str.7)
  br i1 %85, label %217, label %86

86:                                               ; preds = %82
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %90, align 8
  %91 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %92 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %91, i64* %92, align 8
  br label %100

93:                                               ; preds = %86
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 1
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %99 = bitcast i8** %98 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %99, align 8
  br label %100

100:                                              ; preds = %89, %93
  %101 = phi i32 [ %96, %93 ], [ 0, %89 ]
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %101, i32* %102, align 8
  %103 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [16 x i8]* nonnull dereferenceable(16) @.str.8)
  br i1 %103, label %217, label %104

104:                                              ; preds = %100
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %204, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 1
  %111 = bitcast %"class.WTF::StringImpl"* %110 to i8*
  %112 = icmp eq i32 %109, 19
  br i1 %112, label %113, label %208

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %136, label %120

118:                                              ; preds = %120
  %119 = icmp eq i64 %135, 19
  br i1 %119, label %217, label %271

120:                                              ; preds = %113, %285
  %121 = phi i64 [ %286, %285 ], [ 0, %113 ]
  %122 = getelementptr inbounds i8, i8* %111, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i64
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %124
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i32
  %128 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.9, i64 0, i64 %121
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i64
  %131 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = icmp eq i32 %127, %133
  %135 = or i64 %121, 1
  br i1 %134, label %118, label %158

136:                                              ; preds = %113
  %137 = bitcast %"class.WTF::StringImpl"* %110 to i16*
  br label %140

138:                                              ; preds = %140
  %139 = icmp eq i64 %157, 19
  br i1 %139, label %217, label %253

140:                                              ; preds = %269, %136
  %141 = phi i64 [ 0, %136 ], [ %270, %269 ]
  %142 = getelementptr inbounds i16, i16* %137, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.9, i64 0, i64 %141
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  %157 = or i64 %141, 1
  br i1 %156, label %138, label %158

158:                                              ; preds = %120, %271, %140, %253
  br i1 %112, label %159, label %208

159:                                              ; preds = %158
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 1
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %182, label %166

164:                                              ; preds = %166
  %165 = icmp eq i64 %181, 19
  br i1 %165, label %217, label %237

166:                                              ; preds = %159, %251
  %167 = phi i64 [ %252, %251 ], [ 0, %159 ]
  %168 = getelementptr inbounds i8, i8* %111, i64 %167
  %169 = load i8, i8* %168, align 1
  %170 = zext i8 %169 to i64
  %171 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = zext i8 %172 to i32
  %174 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.10, i64 0, i64 %167
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = sext i8 %178 to i32
  %180 = icmp eq i32 %173, %179
  %181 = or i64 %167, 1
  br i1 %180, label %164, label %208

182:                                              ; preds = %159
  %183 = bitcast %"class.WTF::StringImpl"* %110 to i16*
  br label %186

184:                                              ; preds = %186
  %185 = icmp eq i64 %203, 19
  br i1 %185, label %217, label %219

186:                                              ; preds = %235, %182
  %187 = phi i64 [ 0, %182 ], [ %236, %235 ]
  %188 = getelementptr inbounds i16, i16* %183, i64 %187
  %189 = load i16, i16* %188, align 2
  %190 = add i16 %189, -65
  %191 = icmp ult i16 %190, 26
  %192 = zext i1 %191 to i16
  %193 = shl nuw nsw i16 %192, 5
  %194 = or i16 %193, %189
  %195 = zext i16 %194 to i32
  %196 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.10, i64 0, i64 %187
  %197 = load i8, i8* %196, align 1
  %198 = zext i8 %197 to i64
  %199 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %198
  %200 = load i8, i8* %199, align 1
  %201 = sext i8 %200 to i32
  %202 = icmp eq i32 %195, %201
  %203 = or i64 %187, 1
  br i1 %202, label %184, label %208

204:                                              ; preds = %104
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %205, align 8
  %206 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %207 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %206, i64* %207, align 8
  br label %213

208:                                              ; preds = %166, %237, %186, %219, %107, %158
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %209, align 8
  %210 = load i32, i32* %108, align 4
  %211 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %212 = bitcast i8** %211 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %212, align 8
  br label %213

213:                                              ; preds = %204, %208
  %214 = phi i32 [ %210, %208 ], [ 0, %204 ]
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %214, i32* %215, align 8
  %216 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [17 x i8]* nonnull dereferenceable(17) @.str.11)
  br label %217

217:                                              ; preds = %118, %138, %164, %184, %213, %100, %82, %64, %46, %23
  %218 = phi i1 [ true, %100 ], [ true, %82 ], [ true, %64 ], [ true, %46 ], [ true, %23 ], [ %216, %213 ], [ true, %184 ], [ true, %164 ], [ true, %138 ], [ true, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #13
  ret i1 %218

219:                                              ; preds = %184
  %220 = getelementptr inbounds i16, i16* %183, i64 %203
  %221 = load i16, i16* %220, align 2
  %222 = add i16 %221, -65
  %223 = icmp ult i16 %222, 26
  %224 = zext i1 %223 to i16
  %225 = shl nuw nsw i16 %224, 5
  %226 = or i16 %225, %221
  %227 = zext i16 %226 to i32
  %228 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.10, i64 0, i64 %203
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %208

235:                                              ; preds = %219
  %236 = add nuw nsw i64 %187, 2
  br label %186

237:                                              ; preds = %164
  %238 = getelementptr inbounds i8, i8* %111, i64 %181
  %239 = load i8, i8* %238, align 1
  %240 = zext i8 %239 to i64
  %241 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %240
  %242 = load i8, i8* %241, align 1
  %243 = zext i8 %242 to i32
  %244 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.10, i64 0, i64 %181
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = sext i8 %248 to i32
  %250 = icmp eq i32 %243, %249
  br i1 %250, label %251, label %208

251:                                              ; preds = %237
  %252 = add nuw nsw i64 %167, 2
  br label %166

253:                                              ; preds = %138
  %254 = getelementptr inbounds i16, i16* %137, i64 %157
  %255 = load i16, i16* %254, align 2
  %256 = add i16 %255, -65
  %257 = icmp ult i16 %256, 26
  %258 = zext i1 %257 to i16
  %259 = shl nuw nsw i16 %258, 5
  %260 = or i16 %259, %255
  %261 = zext i16 %260 to i32
  %262 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.9, i64 0, i64 %157
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = sext i8 %266 to i32
  %268 = icmp eq i32 %261, %267
  br i1 %268, label %269, label %158

269:                                              ; preds = %253
  %270 = add nuw nsw i64 %141, 2
  br label %140

271:                                              ; preds = %118
  %272 = getelementptr inbounds i8, i8* %111, i64 %135
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.9, i64 0, i64 %135
  %279 = load i8, i8* %278, align 1
  %280 = zext i8 %279 to i64
  %281 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %280
  %282 = load i8, i8* %281, align 1
  %283 = sext i8 %282 to i32
  %284 = icmp eq i32 %277, %283
  br i1 %284, label %285, label %158

285:                                              ; preds = %271
  %286 = add nuw nsw i64 %121, 2
  br label %120
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm6EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [6 x i8]* dereferenceable(6)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 5
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %125, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %153, %14, %28, %125, %139, %42, %59, %77, %93, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %14 ], [ false, %28 ], [ false, %125 ], [ false, %139 ], [ %166, %153 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  ret i1 %124

125:                                              ; preds = %28
  %126 = getelementptr inbounds i8, i8* %15, i64 2
  %127 = load i8, i8* %126, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %128
  %130 = load i8, i8* %129, align 1
  %131 = zext i8 %130 to i32
  %132 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i64
  %135 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = sext i8 %136 to i32
  %138 = icmp eq i32 %131, %137
  br i1 %138, label %139, label %75

139:                                              ; preds = %125
  %140 = getelementptr inbounds i8, i8* %15, i64 3
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i64
  %143 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %142
  %144 = load i8, i8* %143, align 1
  %145 = zext i8 %144 to i32
  %146 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 3
  %147 = load i8, i8* %146, align 1
  %148 = zext i8 %147 to i64
  %149 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = sext i8 %150 to i32
  %152 = icmp eq i32 %145, %151
  br i1 %152, label %153, label %75

153:                                              ; preds = %139
  %154 = getelementptr inbounds i8, i8* %15, i64 4
  %155 = load i8, i8* %154, align 1
  %156 = zext i8 %155 to i64
  %157 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %156
  %158 = load i8, i8* %157, align 1
  %159 = zext i8 %158 to i32
  %160 = getelementptr inbounds [6 x i8], [6 x i8]* %1, i64 0, i64 4
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [16 x i8]* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 15
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 15
  br i1 %46, label %65, label %249

47:                                               ; preds = %265, %42
  %48 = phi i64 [ 0, %42 ], [ %266, %265 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %249, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %207, %221, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %207 ], [ false, %221 ], [ false, %47 ], [ true, %45 ], [ false, %249 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  br i1 %220, label %221, label %65

221:                                              ; preds = %207
  %222 = getelementptr inbounds i8, i8* %15, i64 13
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 13
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %65

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 14
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 14
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  ret i1 %248

249:                                              ; preds = %45
  %250 = getelementptr inbounds i16, i16* %44, i64 %64
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %64
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %257, %263
  br i1 %264, label %265, label %65

265:                                              ; preds = %249
  %266 = add nuw nsw i64 %48, 2
  br label %47
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [17 x i8]* dereferenceable(17)) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 16
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %278, label %80

62:                                               ; preds = %278, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %278 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %278, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %208, %222, %236, %250, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %208 ], [ false, %222 ], [ false, %236 ], [ false, %250 ], [ false, %62 ], [ false, %45 ], [ true, %278 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  br i1 %221, label %222, label %80

222:                                              ; preds = %208
  %223 = getelementptr inbounds i8, i8* %15, i64 12
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 12
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %228, %234
  br i1 %235, label %236, label %80

236:                                              ; preds = %222
  %237 = getelementptr inbounds i8, i8* %15, i64 13
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 13
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %242, %248
  br i1 %249, label %250, label %80

250:                                              ; preds = %236
  %251 = getelementptr inbounds i8, i8* %15, i64 14
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 14
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i64
  %260 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %256, %262
  br i1 %263, label %264, label %80

264:                                              ; preds = %250
  %265 = getelementptr inbounds i8, i8* %15, i64 15
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 15
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i64
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %270, %276
  ret i1 %277

278:                                              ; preds = %45
  %279 = icmp eq i64 %61, 16
  br i1 %279, label %80, label %62
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink22FontCustomPlatformData13MayBeIconFontEv(%"class.blink::FontCustomPlatformData"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"struct.std::__1::__less.71", align 1
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.WTF::Vector.39", align 8
  %10 = alloca %"class.WTF::Vector.44", align 8
  %11 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %245

14:                                               ; preds = %1
  %15 = bitcast %"class.WTF::Vector.39"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %9, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %9, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %9, i64 0, i32 0, i32 0, i32 2
  %19 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 25600) #13
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #13
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.WTF::Vector.39"* %9 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 2
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %17, align 8
  store i32 6400, i32* %18, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 25600, i1 false) #13
  br label %183

25:                                               ; preds = %183
  %26 = bitcast %"class.WTF::Vector.44"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %10, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %10, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %10, i64 0, i32 0, i32 0, i32 2
  %30 = bitcast %"class.WTF::Vector.44"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 16, i1 false)
  %31 = load i32, i32* %18, align 4
  store i16* null, i16** %27, align 8
  store i32 0, i32* %28, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %25
  %34 = zext i32 %31 to i64
  %35 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64 %34) #13
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv, i64 0, i64 0)) #13
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast %"class.WTF::Vector.44"* %10 to i64*
  store atomic i64 %37, i64* %38 monotonic, align 8
  %39 = lshr i64 %35, 1
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %28, align 8
  %41 = shl nuw nsw i64 %34, 1
  br label %42

42:                                               ; preds = %25, %33
  %43 = phi i64 [ %41, %33 ], [ 0, %25 ]
  %44 = phi i8* [ %36, %33 ], [ null, %25 ]
  store i32 %31, i32* %29, align 4
  call void @llvm.memset.p0i8.i64(i8* align 2 %44, i8 0, i64 %43, i1 false) #13
  %45 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 2, i32 0
  %46 = load %class.SkTypeface*, %class.SkTypeface** %45, align 8
  %47 = load i32*, i32** %16, align 8
  %48 = load i32, i32* %18, align 4
  %49 = load i16*, i16** %27, align 8
  call void @_ZNK10SkTypeface16unicharsToGlyphsEPKiiPt(%class.SkTypeface* %46, i32* %47, i32 %48, i16* %49) #13
  %50 = load i32, i32* %29, align 4
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %49, i64 %51
  %53 = getelementptr inbounds %"struct.std::__1::__less.71", %"struct.std::__1::__less.71"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %53) #13
  call void @_ZNSt3__16__sortIRNS_6__lessIttEEPtEEvT0_S5_T_(i16* %49, i16* %52, %"struct.std::__1::__less.71"* nonnull dereferenceable(1) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %53) #13
  %54 = icmp eq i32 %50, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %42, %59
  %56 = phi i16* [ %57, %59 ], [ %49, %42 ]
  %57 = getelementptr inbounds i16, i16* %56, i64 1
  %58 = icmp eq i16* %57, %52
  br i1 %58, label %124, label %59

59:                                               ; preds = %55
  %60 = load i16, i16* %56, align 2
  %61 = load i16, i16* %57, align 2
  %62 = icmp eq i16 %60, %61
  br i1 %62, label %63, label %55

63:                                               ; preds = %59, %42
  %64 = phi i16* [ %49, %42 ], [ %56, %59 ]
  %65 = ptrtoint i16* %64 to i64
  %66 = icmp eq i16* %64, %52
  br i1 %66, label %124, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i16, i16* %64, i64 2
  %69 = icmp eq i16* %68, %52
  br i1 %69, label %118, label %70

70:                                               ; preds = %67
  %71 = load i16, i16* %64, align 2
  %72 = add nsw i64 %51, -3
  %73 = getelementptr i16, i16* %49, i64 %72
  %74 = ptrtoint i16* %73 to i64
  %75 = sub i64 %74, %65
  %76 = lshr i64 %75, 1
  %77 = add nuw i64 %76, 1
  %78 = and i64 %77, 3
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %94, label %80

80:                                               ; preds = %70, %89
  %81 = phi i16 [ %85, %89 ], [ %71, %70 ]
  %82 = phi i16* [ %91, %89 ], [ %68, %70 ]
  %83 = phi i16* [ %90, %89 ], [ %64, %70 ]
  %84 = phi i64 [ %92, %89 ], [ %78, %70 ]
  %85 = load i16, i16* %82, align 2
  %86 = icmp eq i16 %81, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds i16, i16* %83, i64 1
  store i16 %85, i16* %88, align 2
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i16* [ %83, %80 ], [ %88, %87 ]
  %91 = getelementptr inbounds i16, i16* %82, i64 1
  %92 = add i64 %84, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %80, !llvm.loop !5

94:                                               ; preds = %89, %70
  %95 = phi i16* [ undef, %70 ], [ %90, %89 ]
  %96 = phi i16 [ %71, %70 ], [ %85, %89 ]
  %97 = phi i16* [ %68, %70 ], [ %91, %89 ]
  %98 = phi i16* [ %64, %70 ], [ %90, %89 ]
  %99 = icmp ult i64 %75, 6
  br i1 %99, label %113, label %100

100:                                              ; preds = %94, %265
  %101 = phi i16 [ %261, %265 ], [ %96, %94 ]
  %102 = phi i16* [ %267, %265 ], [ %97, %94 ]
  %103 = phi i16* [ %266, %265 ], [ %98, %94 ]
  %104 = load i16, i16* %102, align 2
  %105 = icmp eq i16 %101, %104
  br i1 %105, label %108, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds i16, i16* %103, i64 1
  store i16 %104, i16* %107, align 2
  br label %108

108:                                              ; preds = %106, %100
  %109 = phi i16* [ %103, %100 ], [ %107, %106 ]
  %110 = getelementptr inbounds i16, i16* %102, i64 1
  %111 = load i16, i16* %110, align 2
  %112 = icmp eq i16 %104, %111
  br i1 %112, label %251, label %249

113:                                              ; preds = %265, %94
  %114 = phi i16* [ %95, %94 ], [ %266, %265 ]
  %115 = load i16*, i16** %27, align 8
  %116 = load i32, i32* %29, align 4
  %117 = zext i32 %116 to i64
  br label %118

118:                                              ; preds = %113, %67
  %119 = phi i64 [ %117, %113 ], [ %51, %67 ]
  %120 = phi i32 [ %116, %113 ], [ %50, %67 ]
  %121 = phi i16* [ %115, %113 ], [ %49, %67 ]
  %122 = phi i16* [ %114, %113 ], [ %64, %67 ]
  %123 = getelementptr inbounds i16, i16* %122, i64 1
  br label %124

124:                                              ; preds = %55, %63, %118
  %125 = phi i64 [ %51, %63 ], [ %119, %118 ], [ %51, %55 ]
  %126 = phi i32 [ %50, %63 ], [ %120, %118 ], [ %50, %55 ]
  %127 = phi i16* [ %49, %63 ], [ %121, %118 ], [ %49, %55 ]
  %128 = phi i16* [ %52, %63 ], [ %123, %118 ], [ %52, %55 ]
  %129 = getelementptr inbounds i16, i16* %127, i64 %125
  %130 = ptrtoint i16* %127 to i64
  %131 = ptrtoint i16* %128 to i64
  %132 = sub i64 %131, %130
  %133 = lshr exact i64 %132, 1
  %134 = ptrtoint i16* %129 to i64
  %135 = sub i64 %134, %131
  %136 = lshr exact i64 %135, 1
  %137 = trunc i64 %136 to i32
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %177, label %139

139:                                              ; preds = %124
  %140 = trunc i64 %133 to i32
  %141 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #13
  %142 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %142, align 8
  %143 = add i32 %137, %140
  %144 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #13
  %145 = icmp ugt i32 %143, %126
  br i1 %145, label %147, label %146

146:                                              ; preds = %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  store i8* null, i8** %142, align 8
  br label %156

147:                                              ; preds = %139
  %148 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %143) #13
  %149 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %126) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i64 0, i64 0), i8* %148, i8* %149) #13
  %150 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %151 = load i8*, i8** %150, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #13
  store i8* %151, i8** %142, align 8
  %152 = icmp eq i8* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %147
  %154 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %3) #13
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #13
  br label %156

156:                                              ; preds = %153, %147, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #13
  %157 = load i16*, i16** %27, align 8
  %158 = and i64 %133, 4294967295
  %159 = getelementptr inbounds i16, i16* %157, i64 %158
  %160 = and i64 %136, 4294967295
  %161 = getelementptr inbounds i16, i16* %159, i64 %160
  %162 = icmp ne i16* %159, null
  %163 = icmp ne i16* %161, null
  %164 = and i1 %162, %163
  br i1 %164, label %165, label %174, !prof !3

165:                                              ; preds = %156
  %166 = load i32, i32* %29, align 4
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds i16, i16* %157, i64 %167
  %169 = bitcast i16* %159 to i8*
  %170 = bitcast i16* %161 to i8*
  %171 = ptrtoint i16* %168 to i64
  %172 = ptrtoint i16* %161 to i64
  %173 = sub i64 %171, %172
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 2 %169, i8* nonnull align 2 %170, i64 %173, i1 false) #13
  br label %174

174:                                              ; preds = %165, %156
  %175 = load i32, i32* %29, align 4
  %176 = sub i32 %175, %137
  store i32 %176, i32* %29, align 4
  br label %177

177:                                              ; preds = %124, %174
  %178 = call dereferenceable(2) i16* @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.44"* nonnull %10, i32 0) #13
  %179 = load i16, i16* %178, align 2
  %180 = icmp eq i16 %179, 0
  br i1 %180, label %189, label %181

181:                                              ; preds = %177
  %182 = load i32, i32* %29, align 4
  br label %219

183:                                              ; preds = %183, %14
  %184 = phi i32 [ 0, %14 ], [ %187, %183 ]
  %185 = add nuw nsw i32 %184, 57344
  %186 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"* nonnull %9, i32 %184) #13
  store i32 %185, i32* %186, align 4
  %187 = add nuw nsw i32 %184, 1
  %188 = icmp eq i32 %187, 6400
  br i1 %188, label %25, label %183

189:                                              ; preds = %177
  %190 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #13
  %191 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %191, align 8
  %192 = load i32, i32* %29, align 4
  %193 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #13
  %194 = icmp eq i32 %192, 0
  br i1 %194, label %196, label %195

195:                                              ; preds = %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #13
  store i8* null, i8** %191, align 8
  br label %205

196:                                              ; preds = %189
  %197 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  %198 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i8* %197, i8* %198) #13
  %199 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %200 = load i8*, i8** %199, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #13
  store i8* %200, i8** %191, align 8
  %201 = icmp eq i8* %200, null
  br i1 %201, label %205, label %202

202:                                              ; preds = %196
  %203 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %7) #13
  %204 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #13
  br label %205

205:                                              ; preds = %202, %196, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #13
  %206 = load i16*, i16** %27, align 8
  %207 = icmp eq i16* %206, null
  br i1 %207, label %216, label %208, !prof !2

208:                                              ; preds = %205
  %209 = getelementptr inbounds i16, i16* %206, i64 1
  %210 = load i32, i32* %29, align 4
  %211 = zext i32 %210 to i64
  %212 = bitcast i16* %206 to i8*
  %213 = bitcast i16* %209 to i8*
  %214 = shl nuw nsw i64 %211, 1
  %215 = add nsw i64 %214, -2
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 2 %212, i8* nonnull align 2 %213, i64 %215, i1 false) #13
  br label %216

216:                                              ; preds = %205, %208
  %217 = load i32, i32* %29, align 4
  %218 = add i32 %217, -1
  store i32 %218, i32* %29, align 4
  br label %219

219:                                              ; preds = %181, %216
  %220 = phi i32 [ %182, %181 ], [ %218, %216 ]
  %221 = load %class.SkTypeface*, %class.SkTypeface** %45, align 8
  %222 = call i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface* %221) #13
  %223 = shl i32 %220, 1
  %224 = icmp ugt i32 %223, %222
  %225 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 5
  %226 = zext i1 %224 to i8
  store i8 %226, i8* %225, align 1
  %227 = load i16*, i16** %27, align 8
  %228 = icmp eq i16* %227, null
  %229 = bitcast i16* %227 to i8*
  br i1 %228, label %235, label %230, !prof !3

230:                                              ; preds = %219
  %231 = load i32, i32* %29, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %234, label %233, !prof !2

233:                                              ; preds = %230
  store i32 0, i32* %29, align 4
  br label %234

234:                                              ; preds = %233, %230
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %229) #13
  store i16* null, i16** %27, align 8
  br label %235

235:                                              ; preds = %219, %234
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #13
  %236 = load i32*, i32** %16, align 8
  %237 = icmp eq i32* %236, null
  %238 = bitcast i32* %236 to i8*
  br i1 %237, label %244, label %239, !prof !3

239:                                              ; preds = %235
  %240 = load i32, i32* %18, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %243, label %242, !prof !2

242:                                              ; preds = %239
  store i32 0, i32* %18, align 4
  br label %243

243:                                              ; preds = %242, %239
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %238) #13
  store i32* null, i32** %16, align 8
  br label %244

244:                                              ; preds = %235, %243
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #13
  br label %245

245:                                              ; preds = %1, %244
  %246 = getelementptr inbounds %"class.blink::FontCustomPlatformData", %"class.blink::FontCustomPlatformData"* %0, i64 0, i32 5
  %247 = load i8, i8* %246, align 1, !range !4
  %248 = icmp ne i8 %247, 0
  ret i1 %248

249:                                              ; preds = %108
  %250 = getelementptr inbounds i16, i16* %109, i64 1
  store i16 %111, i16* %250, align 2
  br label %251

251:                                              ; preds = %249, %108
  %252 = phi i16* [ %109, %108 ], [ %250, %249 ]
  %253 = getelementptr inbounds i16, i16* %102, i64 2
  %254 = load i16, i16* %253, align 2
  %255 = icmp eq i16 %111, %254
  br i1 %255, label %258, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds i16, i16* %252, i64 1
  store i16 %254, i16* %257, align 2
  br label %258

258:                                              ; preds = %256, %251
  %259 = phi i16* [ %252, %251 ], [ %257, %256 ]
  %260 = getelementptr inbounds i16, i16* %102, i64 3
  %261 = load i16, i16* %260, align 2
  %262 = icmp eq i16 %254, %261
  br i1 %262, label %265, label %263

263:                                              ; preds = %258
  %264 = getelementptr inbounds i16, i16* %259, i64 1
  store i16 %261, i16* %264, align 2
  br label %265

265:                                              ; preds = %263, %258
  %266 = phi i16* [ %259, %258 ], [ %264, %263 ]
  %267 = getelementptr inbounds i16, i16* %102, i64 4
  %268 = icmp eq i16* %267, %52
  br i1 %268, label %113, label %100
}

declare void @_ZNK10SkTypeface16unicharsToGlyphsEPKiiPt(%class.SkTypeface*, i32*, i32, i16*) local_unnamed_addr #3

declare i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #3

declare i32 @_ZNK10SkTypeface28getVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN16SkFontParameters9Variation4AxisEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #1 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #1 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN15SkFontArguments17VariationPosition10CoordinateELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.9"*, %"struct.SkFontArguments::VariationPosition::Coordinate"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %6, align 8
  %8 = icmp ugt %"struct.SkFontArguments::VariationPosition::Coordinate"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %7, i64 %10
  %12 = icmp ugt %"struct.SkFontArguments::VariationPosition::Coordinate"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64 %26) #13
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv, i64 0, i64 0)) #13
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.SkFontArguments::VariationPosition::Coordinate"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #13
  %47 = bitcast %"class.WTF::Vector.9"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  %51 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.SkFontArguments::VariationPosition::Coordinate"* %1 to i64
  %56 = ptrtoint %"struct.SkFontArguments::VariationPosition::Coordinate"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.9", %"class.WTF::Vector.9"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64 %71) #13
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN15SkFontArguments17VariationPosition10CoordinateEEEPKcv, i64 0, i64 0)) #13
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.SkFontArguments::VariationPosition::Coordinate"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #13
  %87 = bitcast %"class.WTF::Vector.9"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #13
  %91 = bitcast %"class.WTF::Vector.9"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.SkFontArguments::VariationPosition::Coordinate"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.SkFontArguments::VariationPosition::Coordinate"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.SkFontArguments::VariationPosition::Coordinate"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %100, i64 %103
  %105 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %101 to i64*
  %106 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN15SkFontArguments17VariationPosition10CoordinateEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.39"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.39", %"class.WTF::Vector.39"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare void @_ZNSt3__16__sortIRNS_6__lessIttEEPtEEvT0_S5_T_(i16*, i16*, %"struct.std::__1::__less.71"* dereferenceable(1)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(2) i16* @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.44"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.44", %"class.WTF::Vector.44"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  ret i16* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
