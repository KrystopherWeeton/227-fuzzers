; ModuleID = '../../v8/src/heap/concurrent-allocator.cc'
source_filename = "../../v8/src/heap/concurrent-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::StressConcurrentAllocatorTask" = type { %"class.v8::internal::CancelableTask", %"class.v8::internal::Isolate"* }
%"class.v8::internal::CancelableTask" = type { %"class.v8::internal::Cancelable", %"class.v8::Task" }
%"class.v8::internal::Cancelable" = type { i32 (...)**, %"class.v8::internal::CancelableTaskManager"*, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.14, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.14 = type { i64 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.v8::Task" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.21", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.675", %"class.std::__1::unique_ptr.696", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.706", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.846", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.859", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.869", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.881", %"struct.std::__1::atomic.182", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.956", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.999"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1007", i32, i8, i8, i32, i32, %"class.std::__1::vector.1013", %"class.std::__1::vector.1013", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1020", i64, %"class.std::__1::unordered_map.1021", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.571", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.190", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1049", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1087", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1121", %"class.std::__1::vector.1125", %"class.std::__1::vector.1125", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.16", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.25", %"struct.std::__1::atomic.51", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.51", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.51", i64, i64, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.61", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.176", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.191", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.51", i64, i8, %"struct.std::__1::atomic.51", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.195", %"class.std::__1::vector.195", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.344", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.389", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.474", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.486", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.492", %"class.std::__1::unique_ptr.498", %"class.std::__1::unique_ptr.504", %"class.std::__1::shared_ptr.510", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.533", %"class.std::__1::unique_ptr.559", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.565", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.578", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.360", i8, [7 x i8], %"class.std::__1::unordered_map.584", %"class.std::__1::unordered_map.610", %"class.std::__1::unordered_map.584", %"class.std::__1::unordered_map.634", %"class.std::__1::vector.662", i8, %"class.std::__1::unique_ptr.669", i32, i32 }
%"class.std::__1::unordered_map.25" = type { %"class.std::__1::__hash_table.26" }
%"class.std::__1::__hash_table.26" = type <{ %"class.std::__1::unique_ptr.27", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.45", [4 x i8] }>
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29", %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"struct.std::__1::__hash_node_base.30"** }
%"struct.std::__1::__hash_node_base.30" = type { %"struct.std::__1::__hash_node_base.30"* }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.std::__1::__bucket_list_deallocator.32" }
%"class.std::__1::__bucket_list_deallocator.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base.30" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i64 }
%"struct.std::__1::atomic.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.65" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.137" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.51"*, %"class.std::__1::unique_ptr.131" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.51", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.72" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.77" }
%"class.std::__1::__hash_table.77" = type <{ %"class.std::__1::unique_ptr.78", %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97", [4 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80", %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::__hash_node_base.81"** }
%"struct.std::__1::__hash_node_base.81" = type { %"struct.std::__1::__hash_node_base.81"* }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__bucket_list_deallocator.83" }
%"class.std::__1::__bucket_list_deallocator.83" = type { %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::__hash_node_base.81" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.56", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.120", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.51"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.56", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.102", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.106" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.108" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.113", %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.124", i8, [7 x i8] }>
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { i64*, i64*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.51", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.137" = type { %"class.std::__1::__vector_base.138" }
%"class.std::__1::__vector_base.138" = type { %"struct.std::__1::pair.139"*, %"struct.std::__1::pair.139"*, %"class.std::__1::__compressed_pair.140" }
%"struct.std::__1::pair.139" = type { i32, i64 }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"struct.std::__1::pair.139"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.51", i64, %"struct.std::__1::atomic.51" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.51", i32, %"struct.std::__1::atomic.51", %"class.v8::base::Mutex", %"struct.std::__1::atomic.51" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.145" }
%"class.std::__1::unordered_map.145" = type { %"class.std::__1::__hash_table.146" }
%"class.std::__1::__hash_table.146" = type <{ %"class.std::__1::unique_ptr.147", %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.162", %"class.std::__1::__compressed_pair.165", [4 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149", %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base.150"** }
%"struct.std::__1::__hash_node_base.150" = type { %"struct.std::__1::__hash_node_base.150"* }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::__bucket_list_deallocator.152" }
%"class.std::__1::__bucket_list_deallocator.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.std::__1::__hash_node_base.150" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.169", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.169" = type { %"class.std::__1::__vector_base.170" }
%"class.std::__1::__vector_base.170" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.171" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1054", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1064", %"class.std::__1::unique_ptr.504", %"class.std::__1::vector.1070", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1054" = type { %"struct.std::__1::__atomic_base.1055" }
%"struct.std::__1::__atomic_base.1055" = type { %"struct.std::__1::__cxx_atomic_impl.1056" }
%"struct.std::__1::__cxx_atomic_impl.1056" = type { %"struct.std::__1::__cxx_atomic_base_impl.1057" }
%"struct.std::__1::__cxx_atomic_base_impl.1057" = type { i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.839" }
%"class.std::__1::vector.839" = type { %"class.std::__1::__vector_base.840" }
%"class.std::__1::__vector_base.840" = type { i64**, i64**, %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { i64** }
%"class.std::__1::unique_ptr.1064" = type { %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.839", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"struct.std::__1::pair.1072"*, %"struct.std::__1::pair.1072"*, %"class.std::__1::__compressed_pair.1073" }
%"struct.std::__1::pair.1072" = type opaque
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { %"struct.std::__1::pair.1072"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.182", %"struct.std::__1::atomic.186", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.51" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__cxx_atomic_impl.188" }
%"struct.std::__1::__cxx_atomic_impl.188" = type { %"struct.std::__1::__cxx_atomic_base_impl.189" }
%"struct.std::__1::__cxx_atomic_base_impl.189" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.51", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.190" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.197" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.std::__1::vector.317", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.211", %"class.std::__1::vector.212", %"class.std::__1::vector.219", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.211" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.212" = type { %"class.std::__1::__vector_base.213" }
%"class.std::__1::__vector_base.213" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.214" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"class.std::__1::unique_ptr.221"*, %"class.std::__1::unique_ptr.221"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::unique_ptr.221" = type opaque
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.std::__1::unique_ptr.221"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.227", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.229", %"class.v8::internal::Worklist.231", %"class.v8::internal::Worklist.233", %"class.v8::internal::Worklist.235", %"class.v8::internal::Worklist.237", %"class.v8::internal::Worklist.239", %"class.v8::internal::Worklist.241" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.227" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.229" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.231" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.233" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.235" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.237" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.239" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.v8::internal::Worklist.241" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.51" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.243", i8, i64 }
%"class.std::__1::vector.243" = type { %"class.std::__1::__vector_base.244" }
%"class.std::__1::__vector_base.244" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.259" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.211"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.286" }
%"class.std::__1::unordered_map.286" = type { %"class.std::__1::__hash_table.287" }
%"class.std::__1::__hash_table.287" = type <{ %"class.std::__1::unique_ptr.288", %"class.std::__1::__compressed_pair.298", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.306", [4 x i8] }>
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290", %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"struct.std::__1::__hash_node_base.291"** }
%"struct.std::__1::__hash_node_base.291" = type { %"struct.std::__1::__hash_node_base.291"* }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.std::__1::__bucket_list_deallocator.293" }
%"class.std::__1::__bucket_list_deallocator.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"struct.std::__1::__hash_node_base.291" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.310" = type { %"class.std::__1::__vector_base.311" }
%"class.std::__1::__vector_base.311" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.317" = type { %"class.std::__1::__vector_base.318" }
%"class.std::__1::__vector_base.318" = type { %"struct.std::__1::pair.319"*, %"struct.std::__1::pair.319"*, %"class.std::__1::__compressed_pair.320" }
%"struct.std::__1::pair.319" = type opaque
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.std::__1::pair.319"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.325", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.310"], [3 x %"class.std::__1::vector.310"], i8, %"struct.std::__1::atomic.182", [6 x i8], %"class.std::__1::vector.310", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.335"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.310", %"class.std::__1::vector.310", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.335" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.344" = type { %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.360", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.353"], %"class.std::__1::unique_ptr.325" }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.392", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.396", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.401" }
%"struct.std::__1::atomic.392" = type { %"struct.std::__1::__atomic_base.393" }
%"struct.std::__1::__atomic_base.393" = type { %"struct.std::__1::__cxx_atomic_impl.394" }
%"struct.std::__1::__cxx_atomic_impl.394" = type { %"struct.std::__1::__cxx_atomic_base_impl.395" }
%"struct.std::__1::__cxx_atomic_base_impl.395" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.396" = type { %"struct.std::__1::__atomic_base.397" }
%"struct.std::__1::__atomic_base.397" = type { %"struct.std::__1::__cxx_atomic_impl.398" }
%"struct.std::__1::__cxx_atomic_impl.398" = type { %"struct.std::__1::__cxx_atomic_base_impl.399" }
%"struct.std::__1::__cxx_atomic_base_impl.399" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.325", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.182", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.431", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.431" = type { %"class.std::__1::__hash_table.432" }
%"class.std::__1::__hash_table.432" = type <{ %"class.std::__1::unique_ptr.433", %"class.std::__1::__compressed_pair.443", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.451", [4 x i8] }>
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435", %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"struct.std::__1::__hash_node_base.436"** }
%"struct.std::__1::__hash_node_base.436" = type { %"struct.std::__1::__hash_node_base.436"* }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.std::__1::__bucket_list_deallocator.438" }
%"class.std::__1::__bucket_list_deallocator.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.std::__1::__hash_node_base.436" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.467" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.486" = type { %"class.std::__1::__compressed_pair.487" }
%"class.std::__1::__compressed_pair.487" = type { %"struct.std::__1::__compressed_pair_elem.488" }
%"struct.std::__1::__compressed_pair_elem.488" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.492" = type { %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.494" }
%"struct.std::__1::__compressed_pair_elem.494" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.498" = type { %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.500" }
%"struct.std::__1::__compressed_pair_elem.500" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.510" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.529", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.511", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.514", %"class.std::__1::set.522" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.514" = type { %"class.std::__1::__tree.515" }
%"class.std::__1::__tree.515" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.522" = type { %"class.std::__1::__tree.523" }
%"class.std::__1::__tree.523" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.516", %"class.std::__1::__compressed_pair.524" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.529" = type { %"struct.std::__1::__atomic_base.530" }
%"struct.std::__1::__atomic_base.530" = type { %"struct.std::__1::__cxx_atomic_impl.531" }
%"struct.std::__1::__cxx_atomic_impl.531" = type { %"struct.std::__1::__cxx_atomic_base_impl.532" }
%"struct.std::__1::__cxx_atomic_base_impl.532" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.533" = type { %"class.std::__1::__hash_table.534" }
%"class.std::__1::__hash_table.534" = type <{ %"class.std::__1::unique_ptr.535", %"class.std::__1::__compressed_pair.545", %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.553", [4 x i8] }>
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537", %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"struct.std::__1::__hash_node_base.538"** }
%"struct.std::__1::__hash_node_base.538" = type { %"struct.std::__1::__hash_node_base.538"* }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.std::__1::__bucket_list_deallocator.540" }
%"class.std::__1::__bucket_list_deallocator.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"struct.std::__1::__hash_node_base.538" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.571", %"class.std::__1::vector.571" }
%"class.std::__1::unique_ptr.578" = type { %"class.std::__1::__compressed_pair.579" }
%"class.std::__1::__compressed_pair.579" = type { %"struct.std::__1::__compressed_pair_elem.580" }
%"struct.std::__1::__compressed_pair_elem.580" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.360" = type { %"class.std::__1::__hash_table.361" }
%"class.std::__1::__hash_table.361" = type <{ %"class.std::__1::unique_ptr.362", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.381", [4 x i8] }>
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364", %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"struct.std::__1::__hash_node_base.365"** }
%"struct.std::__1::__hash_node_base.365" = type { %"struct.std::__1::__hash_node_base.365"* }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__bucket_list_deallocator.367" }
%"class.std::__1::__bucket_list_deallocator.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::__hash_node_base.365" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.610" = type { %"class.std::__1::__hash_table.611" }
%"class.std::__1::__hash_table.611" = type <{ %"class.std::__1::unique_ptr.612", %"class.std::__1::__compressed_pair.622", %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.630", [4 x i8] }>
%"class.std::__1::unique_ptr.612" = type { %"class.std::__1::__compressed_pair.613" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.614", %"struct.std::__1::__compressed_pair_elem.616" }
%"struct.std::__1::__compressed_pair_elem.614" = type { %"struct.std::__1::__hash_node_base.615"** }
%"struct.std::__1::__hash_node_base.615" = type { %"struct.std::__1::__hash_node_base.615"* }
%"struct.std::__1::__compressed_pair_elem.616" = type { %"class.std::__1::__bucket_list_deallocator.617" }
%"class.std::__1::__bucket_list_deallocator.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"struct.std::__1::__hash_node_base.615" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.584" = type { %"class.std::__1::__hash_table.585" }
%"class.std::__1::__hash_table.585" = type <{ %"class.std::__1::unique_ptr.586", %"class.std::__1::__compressed_pair.596", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.604", [4 x i8] }>
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588", %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::__hash_node_base.589"** }
%"struct.std::__1::__hash_node_base.589" = type { %"struct.std::__1::__hash_node_base.589"* }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.std::__1::__bucket_list_deallocator.591" }
%"class.std::__1::__bucket_list_deallocator.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.596" = type { %"struct.std::__1::__compressed_pair_elem.597" }
%"struct.std::__1::__compressed_pair_elem.597" = type { %"struct.std::__1::__hash_node_base.589" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.634" = type { %"class.std::__1::__hash_table.635" }
%"class.std::__1::__hash_table.635" = type <{ %"class.std::__1::unique_ptr.636", %"class.std::__1::__compressed_pair.646", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.656", [4 x i8] }>
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638", %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"struct.std::__1::__hash_node_base.639"** }
%"struct.std::__1::__hash_node_base.639" = type { %"struct.std::__1::__hash_node_base.639"* }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.std::__1::__bucket_list_deallocator.641" }
%"class.std::__1::__bucket_list_deallocator.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"struct.std::__1::__hash_node_base.639" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.664" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.571" }
%"class.std::__1::shared_ptr.675" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.169", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.676", %"class.std::__1::unique_ptr.690" }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.679" }
%"class.std::__1::vector.679" = type { %"class.std::__1::__vector_base.680" }
%"class.std::__1::__vector_base.680" = type { %"class.std::__1::unique_ptr.681"*, %"class.std::__1::unique_ptr.681"*, %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.1150" }
%"class.std::__1::__compressed_pair.1150" = type { %"struct.std::__1::__compressed_pair_elem.1151" }
%"struct.std::__1::__compressed_pair_elem.1151" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.std::__1::unique_ptr.681"* }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.699", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.699" = type { %"struct.std::__1::__atomic_base.700" }
%"struct.std::__1::__atomic_base.700" = type { %"struct.std::__1::__cxx_atomic_impl.701" }
%"struct.std::__1::__cxx_atomic_impl.701" = type { %"struct.std::__1::__cxx_atomic_base_impl.702" }
%"struct.std::__1::__cxx_atomic_base_impl.702" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.706" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.707", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.707" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.708", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.708" = type { %"class.std::__1::__vector_base.709" }
%"class.std::__1::__vector_base.709" = type { %"class.std::__1::unique_ptr.710"*, %"class.std::__1::unique_ptr.710"*, %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::unique_ptr.710" = type opaque
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.std::__1::unique_ptr.710"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.716 }
%union.anon.716 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"struct.std::__1::atomic.182", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.747", %"class.std::__1::unique_ptr.753", %"class.std::__1::set.759", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.759" = type { %"class.std::__1::__tree.760" }
%"class.std::__1::__tree.760" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.761", %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.768" }
%"class.v8::internal::TaggedImpl.768" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.767" }
%"class.v8::internal::TaggedImpl.767" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.775", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.781", %"class.v8::internal::DetachableVector.782", %"class.v8::internal::DetachableVector.781", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.782" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.781" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.51", %"struct.std::__1::atomic.51", %"class.std::__1::unique_ptr.769", %"class.std::__1::unique_ptr.511" }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.783", %"class.std::__1::vector.789", %"class.std::__1::unique_ptr.796", %"class.std::__1::vector.803", %"class.std::__1::unique_ptr.810", i64, %"class.std::__1::vector.816", %"class.std::__1::vector.824", %"class.std::__1::vector.832", i8, i8, i32 }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.791" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"class.v8::internal::GlobalHandles::NodeSpace.799"* }
%"class.v8::internal::GlobalHandles::NodeSpace.799" = type opaque
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.816" = type { %"class.std::__1::__vector_base.817" }
%"class.std::__1::__vector_base.817" = type { %"struct.std::__1::pair.818"*, %"struct.std::__1::pair.818"*, %"class.std::__1::__compressed_pair.819" }
%"struct.std::__1::pair.818" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.std::__1::pair.818"* }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"struct.std::__1::pair.826"*, %"struct.std::__1::pair.826"*, %"class.std::__1::__compressed_pair.827" }
%"struct.std::__1::pair.826" = type opaque
%"class.std::__1::__compressed_pair.827" = type { %"struct.std::__1::__compressed_pair_elem.828" }
%"struct.std::__1::__compressed_pair_elem.828" = type { %"struct.std::__1::pair.826"* }
%"class.std::__1::vector.832" = type { %"class.std::__1::__vector_base.833" }
%"class.std::__1::__vector_base.833" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.834" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.839", %"class.std::__1::vector.846" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.853" }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.846" = type { %"class.std::__1::__vector_base.847" }
%"class.std::__1::__vector_base.847" = type { i32*, i32*, %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849" }
%"struct.std::__1::__compressed_pair_elem.849" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.859" = type { %"struct.std::__1::__atomic_base.860" }
%"struct.std::__1::__atomic_base.860" = type { %"struct.std::__1::__cxx_atomic_impl.861" }
%"struct.std::__1::__cxx_atomic_impl.861" = type { %"struct.std::__1::__cxx_atomic_base_impl.862" }
%"struct.std::__1::__cxx_atomic_base_impl.862" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.869" = type { %"struct.std::__1::__atomic_base.870" }
%"struct.std::__1::__atomic_base.870" = type { %"struct.std::__1::__cxx_atomic_impl.871" }
%"struct.std::__1::__cxx_atomic_impl.871" = type { %"struct.std::__1::__cxx_atomic_base_impl.872" }
%"struct.std::__1::__cxx_atomic_base_impl.872" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.876 }
%union.anon.876 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.881" = type { %"class.std::__1::__hash_table.882" }
%"class.std::__1::__hash_table.882" = type <{ %"class.std::__1::unique_ptr.883", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.898", %"class.std::__1::__compressed_pair.901", [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885", %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::__hash_node_base.886"** }
%"struct.std::__1::__hash_node_base.886" = type { %"struct.std::__1::__hash_node_base.886"* }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.std::__1::__bucket_list_deallocator.888" }
%"class.std::__1::__bucket_list_deallocator.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"struct.std::__1::__hash_node_base.886" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__cxx_atomic_impl.184" }
%"struct.std::__1::__cxx_atomic_impl.184" = type { %"struct.std::__1::__cxx_atomic_base_impl.185" }
%"struct.std::__1::__cxx_atomic_base_impl.185" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.907", %"class.v8::internal::Handle.913", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.914", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.913" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.914" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.915", %"class.std::__1::vector.921", %"class.std::__1::unique_ptr.929", %"class.std::__1::unique_ptr.935", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.941", %"class.std::__1::vector.947", %"struct.std::__1::pair.955" }
%"class.std::__1::unique_ptr.915" = type { %"class.std::__1::__compressed_pair.916" }
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.921" = type { %"class.std::__1::__vector_base.922" }
%"class.std::__1::__vector_base.922" = type { %"class.std::__1::unique_ptr.923"*, %"class.std::__1::unique_ptr.923"*, %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::unique_ptr.923" = type opaque
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.std::__1::unique_ptr.923"* }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.935" = type { %"class.std::__1::__compressed_pair.936" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.937" }
%"struct.std::__1::__compressed_pair_elem.937" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.947" = type { %"class.std::__1::__vector_base.948" }
%"class.std::__1::__vector_base.948" = type { %"struct.std::__1::pair.949"*, %"struct.std::__1::pair.949"*, %"class.std::__1::__compressed_pair.950" }
%"struct.std::__1::pair.949" = type opaque
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::pair.949"* }
%"struct.std::__1::pair.955" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.20"*, i16, i8*)*, i8* }
%"class.v8::Local.20" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.959", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.959" = type { %"class.std::__1::__hash_table.960" }
%"class.std::__1::__hash_table.960" = type <{ %"class.std::__1::unique_ptr.961", %"class.std::__1::__compressed_pair.971", %"class.std::__1::__compressed_pair.976", %"class.std::__1::__compressed_pair.980", [4 x i8] }>
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963", %"struct.std::__1::__compressed_pair_elem.965" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::__hash_node_base.964"** }
%"struct.std::__1::__hash_node_base.964" = type { %"struct.std::__1::__hash_node_base.964"* }
%"struct.std::__1::__compressed_pair_elem.965" = type { %"class.std::__1::__bucket_list_deallocator.966" }
%"class.std::__1::__bucket_list_deallocator.966" = type { %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"struct.std::__1::__hash_node_base.964" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.980" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.994" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.988"**, %"struct.std::__1::pair.988"**, %"struct.std::__1::pair.988"**, %"class.std::__1::__compressed_pair.989" }
%"struct.std::__1::pair.988" = type opaque
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"struct.std::__1::pair.988"** }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.999" = type { %"class.std::__1::__vector_base.1000" }
%"class.std::__1::__vector_base.1000" = type { %"class.v8::internal::Handle.1001"*, %"class.v8::internal::Handle.1001"*, %"class.std::__1::__compressed_pair.1002" }
%"class.v8::internal::Handle.1001" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"class.v8::internal::Handle.1001"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.864", i32, %"class.v8::Local.20" }
%"class.v8::Local.864" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1013" = type { %"class.std::__1::__vector_base.1014" }
%"class.std::__1::__vector_base.1014" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1015" }
%"class.std::__1::__compressed_pair.1015" = type { %"struct.std::__1::__compressed_pair_elem.1016" }
%"struct.std::__1::__compressed_pair_elem.1016" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1020" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1041", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.571" = type { %"class.std::__1::__vector_base.572" }
%"class.std::__1::__vector_base.572" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.573" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.574" }
%"struct.std::__1::__compressed_pair_elem.574" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.190" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1045", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1046", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1047", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1045" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.std::__1::weak_ptr.1046" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1047" = type { %"class.v8::PersistentBase.1048" }
%"class.v8::PersistentBase.1048" = type { %"class.v8::Context"* }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1087" = type { %"class.std::__1::__compressed_pair.1088" }
%"class.std::__1::__compressed_pair.1088" = type { %"struct.std::__1::__compressed_pair_elem.1089" }
%"struct.std::__1::__compressed_pair_elem.1089" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.865", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.865" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1095" }
%"class.std::__1::unordered_map.1095" = type { %"class.std::__1::__hash_table.1096" }
%"class.std::__1::__hash_table.1096" = type <{ %"class.std::__1::unique_ptr.1097", %"class.std::__1::__compressed_pair.1107", %"class.std::__1::__compressed_pair.1112", %"class.std::__1::__compressed_pair.1115", [4 x i8] }>
%"class.std::__1::unique_ptr.1097" = type { %"class.std::__1::__compressed_pair.1098" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099", %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1100"** }
%"struct.std::__1::__hash_node_base.1100" = type { %"struct.std::__1::__hash_node_base.1100"* }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.std::__1::__bucket_list_deallocator.1102" }
%"class.std::__1::__bucket_list_deallocator.1102" = type { %"class.std::__1::__compressed_pair.1103" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1100" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.1121" = type { %"struct.std::__1::__atomic_base.1122" }
%"struct.std::__1::__atomic_base.1122" = type { %"struct.std::__1::__cxx_atomic_impl.1123" }
%"struct.std::__1::__cxx_atomic_impl.1123" = type { %"struct.std::__1::__cxx_atomic_base_impl.1124" }
%"struct.std::__1::__cxx_atomic_base_impl.1124" = type { %"class.std::__1::vector.1125"* }
%"class.std::__1::vector.1125" = type { %"class.std::__1::__vector_base.1126" }
%"class.std::__1::__vector_base.1126" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1127" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"struct.v8::MemoryRange"* }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::base::Optional.1144" = type { %"class.v8::base::internal::OptionalBase.1145" }
%"class.v8::base::internal::OptionalBase.1145" = type { %"struct.v8::base::internal::OptionalStorage.1146" }
%"struct.v8::base::internal::OptionalStorage.1146" = type { %"struct.v8::base::internal::OptionalStorageBase.1147" }
%"struct.v8::base::internal::OptionalStorageBase.1147" = type { i8, %union.anon.1148 }
%union.anon.1148 = type { %"struct.std::__1::pair.1149" }
%"struct.std::__1::pair.1149" = type { i64, i64 }

$_ZN2v88internal9LocalHeap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal14CancelableTaskD2Ev = comdat any

$_ZN2v88internal29StressConcurrentAllocatorTaskD0Ev = comdat any

$_ZN2v88internal14CancelableTask3RunEv = comdat any

$_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD1Ev = comdat any

$_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD0Ev = comdat any

$_ZThn32_N2v88internal14CancelableTask3RunEv = comdat any

$_ZN2v88internal19ConcurrentAllocator13AllocateInLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE = comdat any

@_ZTVN2v88internal29StressConcurrentAllocatorTaskE = hidden unnamed_addr constant { [6 x i8*], [5 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::CancelableTask"*)* @_ZN2v88internal14CancelableTaskD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::StressConcurrentAllocatorTask"*)* @_ZN2v88internal29StressConcurrentAllocatorTaskD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::CancelableTask"*)* @_ZN2v88internal14CancelableTask3RunEv to i8*), i8* bitcast (void (%"class.v8::internal::StressConcurrentAllocatorTask"*)* @_ZN2v88internal29StressConcurrentAllocatorTask11RunInternalEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -32 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StressConcurrentAllocatorTask"*)* @_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StressConcurrentAllocatorTask"*)* @_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::CancelableTask"*)* @_ZThn32_N2v88internal14CancelableTask3RunEv to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"type == AllocationType::kOld\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"!object.IsSmi()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29StressConcurrentAllocatorTask11RunInternalEv(%"class.v8::internal::StressConcurrentAllocatorTask"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LocalHeap", align 8
  %3 = getelementptr inbounds %"class.v8::internal::StressConcurrentAllocatorTask", %"class.v8::internal::StressConcurrentAllocatorTask"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 2
  %6 = bitcast %"class.v8::internal::LocalHeap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %6) #8
  call void @_ZN2v88internal9LocalHeapC1EPNS0_4HeapENS0_10ThreadKindENSt3__110unique_ptrINS0_17PersistentHandlesENS5_14default_deleteIS7_EEEE(%"class.v8::internal::LocalHeap"* nonnull %2, %"class.v8::internal::Heap"* %5, i32 1, %"class.v8::internal::PersistentHandles"* null) #8
  %7 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = cmpxchg i32* %7, i32 1, i32 0 seq_cst seq_cst
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN2v88internal9LocalHeap14UnparkSlowPathEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %11

11:                                               ; preds = %1, %10
  %12 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() #8
  %13 = trunc i64 %12 to i32
  %14 = sub i32 262144, %13
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 2, i32 42, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 11, i32 2
  %17 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 11, i32 2, i32 1, i32 1
  %18 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 11, i32 2, i32 1, i32 2
  %19 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %16 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 11
  %21 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %2, i64 0, i32 0
  br label %22

22:                                               ; preds = %93, %11
  %23 = phi i32 [ 0, %11 ], [ %94, %93 ]
  %24 = load atomic i32, i32* %15 monotonic, align 4
  %25 = icmp eq i32 %24, 4
  br i1 %25, label %111, label %26

26:                                               ; preds = %22
  %27 = load atomic i32, i32* %7 monotonic, align 4
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %26
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %30

30:                                               ; preds = %29, %26
  %31 = call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext 1) #8
  %32 = icmp slt i32 %31, 40
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %21, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %34, i64 0, i32 28
  %36 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %35, align 8
  %37 = call i64 @_ZN2v88internal19OldLargeObjectSpace21AllocateRawBackgroundEPNS0_9LocalHeapEi(%"class.v8::internal::OldLargeObjectSpace"* %36, %"class.v8::internal::LocalHeap"* nonnull %2, i32 40) #8
  br label %65

38:                                               ; preds = %30
  %39 = load i64, i64* %17, align 8
  %40 = call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %39, i32 0) #8
  %41 = sext i32 %40 to i64
  %42 = add i64 %39, 40
  %43 = add i64 %42, %41
  %44 = load i64, i64* %18, align 8
  %45 = icmp ugt i64 %43, %44
  br i1 %45, label %63, label %46

46:                                               ; preds = %38
  store i64 %43, i64* %17, align 8
  %47 = icmp sgt i32 %40, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %46
  %49 = load i64, i64* %19, align 8
  %50 = add i64 %49, -41416
  %51 = inttoptr i64 %50 to %"class.v8::internal::Isolate"*
  %52 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %51, i64 0, i32 0, i32 7, i32 0, i64 0
  %53 = add i64 %39, 1
  %54 = call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %52, i64 %53, i32 %40) #8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %65, !prof !2

57:                                               ; preds = %48
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

58:                                               ; preds = %46
  %59 = add i64 %39, 1
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %65, !prof !2

62:                                               ; preds = %58
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

63:                                               ; preds = %38
  %64 = call i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %20, i32 40, i32 0, i32 1) #8
  br label %65

65:                                               ; preds = %63, %58, %48, %33
  %66 = phi i64 [ %37, %33 ], [ %64, %63 ], [ %54, %48 ], [ %59, %58 ]
  %67 = and i64 %66, 1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %65
  %70 = add i64 %66, -1
  call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %5, i64 %70, i32 40, i32 1) #8
  br label %73

71:                                               ; preds = %65
  %72 = call zeroext i1 @_ZN2v88internal9LocalHeap20TryPerformCollectionEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %73

73:                                               ; preds = %71, %69
  %74 = call i64 @_ZN2v88internal9LocalHeap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::LocalHeap"* nonnull %2, i32 8192, i8 zeroext 1, i32 1, i32 0)
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = add i64 %74, -1
  call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %5, i64 %78, i32 8192, i32 1) #8
  br label %81

79:                                               ; preds = %73
  %80 = call zeroext i1 @_ZN2v88internal9LocalHeap20TryPerformCollectionEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %81

81:                                               ; preds = %79, %77
  %82 = call i64 @_ZN2v88internal9LocalHeap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::LocalHeap"* nonnull %2, i32 %14, i8 zeroext 1, i32 1, i32 0)
  %83 = and i64 %82, 1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = add i64 %82, -1
  call void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"* %5, i64 %86, i32 %14, i32 1) #8
  br label %89

87:                                               ; preds = %81
  %88 = call zeroext i1 @_ZN2v88internal9LocalHeap20TryPerformCollectionEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %89

89:                                               ; preds = %87, %85
  %90 = load atomic i32, i32* %7 monotonic, align 4
  %91 = icmp eq i32 %90, 2
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %89
  call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  br label %93

93:                                               ; preds = %89, %92
  %94 = add nuw nsw i32 %23, 1
  %95 = icmp eq i32 %94, 2000
  br i1 %95, label %96, label %22

96:                                               ; preds = %93
  %97 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %98 = call i8* @_Znwm(i64 48) #10
  %99 = bitcast i8* %98 to %"class.v8::internal::CancelableTask"*
  call void @_ZN2v88internal14CancelableTaskC2EPNS0_7IsolateE(%"class.v8::internal::CancelableTask"* nonnull %99, %"class.v8::internal::Isolate"* %97) #8
  %100 = bitcast i8* %98 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN2v88internal29StressConcurrentAllocatorTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %100, align 8
  %101 = getelementptr inbounds i8, i8* %98, i64 32
  %102 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN2v88internal29StressConcurrentAllocatorTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %102, align 8
  %103 = getelementptr inbounds i8, i8* %98, i64 40
  %104 = bitcast i8* %103 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %97, %"class.v8::internal::Isolate"** %104, align 8
  %105 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #8
  %106 = bitcast i8* %101 to %"class.v8::Task"*
  %107 = bitcast %"class.v8::Platform"* %105 to void (%"class.v8::Platform"*, %"class.v8::Task"*, double)***
  %108 = load void (%"class.v8::Platform"*, %"class.v8::Task"*, double)**, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)** %108, i64 10
  %110 = load void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)** %109, align 8
  call void %110(%"class.v8::Platform"* %105, %"class.v8::Task"* %106, double 1.000000e-01) #8
  br label %111

111:                                              ; preds = %22, %96
  %112 = cmpxchg i32* %7, i32 0, i32 1 seq_cst seq_cst
  %113 = extractvalue { i32, i1 } %112, 1
  br i1 %113, label %116, label %114

114:                                              ; preds = %111
  %115 = extractvalue { i32, i1 } %112, 0
  call void @_ZN2v88internal9LocalHeap12ParkSlowPathENS1_11ThreadStateE(%"class.v8::internal::LocalHeap"* nonnull %2, i32 %115) #8
  br label %116

116:                                              ; preds = %111, %114
  call void @_ZN2v88internal9LocalHeapD1Ev(%"class.v8::internal::LocalHeap"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2v88internal9LocalHeapC1EPNS0_4HeapENS0_10ThreadKindENSt3__110unique_ptrINS0_17PersistentHandlesENS5_14default_deleteIS7_EEEE(%"class.v8::internal::LocalHeap"*, %"class.v8::internal::Heap"*, i32, %"class.v8::internal::PersistentHandles"*) unnamed_addr #2

declare i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal9LocalHeap11AllocateRawEiNS0_14AllocationTypeENS0_16AllocationOriginENS0_19AllocationAlignmentE(%"class.v8::internal::LocalHeap"*, i32, i8 zeroext, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %6 = alloca %"class.v8::base::Optional.1144", align 8
  %7 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %11, !prof !2

10:                                               ; preds = %5
  tail call void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"* %0) #8
  br label %11

11:                                               ; preds = %5, %10
  %12 = tail call i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext %2) #8
  %13 = icmp eq i8 %2, 1
  br i1 %13, label %15, label %14, !prof !3

14:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #9
  unreachable

15:                                               ; preds = %11
  %16 = icmp slt i32 %12, %1
  br i1 %16, label %17, label %23

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %0, i64 0, i32 0
  %19 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %19, i64 0, i32 28
  %21 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %20, align 8
  %22 = tail call i64 @_ZN2v88internal19OldLargeObjectSpace21AllocateRawBackgroundEPNS0_9LocalHeapEi(%"class.v8::internal::OldLargeObjectSpace"* %21, %"class.v8::internal::LocalHeap"* %0, i32 %1) #8
  br label %56

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %0, i64 0, i32 11
  %25 = icmp sgt i32 %1, 2048
  br i1 %25, label %26, label %54

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %0, i64 0, i32 11, i32 1
  %29 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %24, i64 0, i32 0
  %31 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %30, align 8
  %32 = sext i32 %1 to i64
  call void @_ZN2v88internal10PagedSpace22RawRefillLabBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1144"* nonnull sret %6, %"class.v8::internal::PagedSpace"* %29, %"class.v8::internal::LocalHeap"* %31, i64 %32, i64 %32, i32 %4, i32 %3) #8
  %33 = load i8, i8* %27, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %52, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, 1
  %39 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %30, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %39, i64 0, i32 0
  %41 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %41, i64 0, i32 86, i32 0, i32 0, i32 0
  %43 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %43, i64 0, i32 14
  %45 = load i8, i8* %44, align 1, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %35
  call void @_ZN2v88internal18IncrementalMarking19MarkBlackBackgroundENS0_10HeapObjectEi(%"class.v8::internal::IncrementalMarking"* %43, i64 %38, i32 %1) #8
  br label %48

48:                                               ; preds = %47, %35
  %49 = and i64 %38, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %48
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

52:                                               ; preds = %48, %26
  %53 = phi i64 [ 2, %26 ], [ %38, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #8
  br label %56

54:                                               ; preds = %23
  %55 = tail call i64 @_ZN2v88internal19ConcurrentAllocator13AllocateInLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %24, i32 %1, i32 %4, i32 %3) #8
  br label %56

56:                                               ; preds = %54, %52, %17
  %57 = phi i64 [ %22, %17 ], [ %53, %52 ], [ %55, %54 ]
  ret i64 %57
}

declare void @_ZN2v88internal4Heap30CreateFillerObjectAtBackgroundEmiNS0_20ClearFreedMemoryModeE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal9LocalHeap20TryPerformCollectionEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29StressConcurrentAllocatorTask8ScheduleEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #10
  %3 = bitcast i8* %2 to %"class.v8::internal::CancelableTask"*
  tail call void @_ZN2v88internal14CancelableTaskC2EPNS0_7IsolateE(%"class.v8::internal::CancelableTask"* nonnull %3, %"class.v8::internal::Isolate"* %0) #8
  %4 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN2v88internal29StressConcurrentAllocatorTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 32
  %6 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*], [5 x i8*] }, { [6 x i8*], [5 x i8*] }* @_ZTVN2v88internal29StressConcurrentAllocatorTaskE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 40
  %8 = bitcast i8* %7 to %"class.v8::internal::Isolate"**
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %8, align 8
  %9 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #8
  %10 = bitcast i8* %5 to %"class.v8::Task"*
  %11 = bitcast %"class.v8::Platform"* %9 to void (%"class.v8::Platform"*, %"class.v8::Task"*, double)***
  %12 = load void (%"class.v8::Platform"*, %"class.v8::Task"*, double)**, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)** %12, i64 10
  %14 = load void (%"class.v8::Platform"*, %"class.v8::Task"*, double)*, void (%"class.v8::Platform"*, %"class.v8::Task"*, double)** %13, align 8
  tail call void %14(%"class.v8::Platform"* %9, %"class.v8::Task"* %10, double 1.000000e-01) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal9LocalHeapD1Ev(%"class.v8::internal::LocalHeap"*) unnamed_addr #4

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19ConcurrentAllocator24FreeLinearAllocationAreaEv(%"class.v8::internal::ConcurrentAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %3 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2
  %4 = bitcast %"class.v8::internal::LinearAllocationArea"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %2, %"class.v8::internal::LocalAllocationBuffer"* %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

declare void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* sret, %"class.v8::internal::LocalAllocationBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19ConcurrentAllocator32MakeLinearAllocationAreaIterableEv(%"class.v8::internal::ConcurrentAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2
  tail call void @_ZN2v88internal21LocalAllocationBuffer12MakeIterableEv(%"class.v8::internal::LocalAllocationBuffer"* %2) #8
  ret void
}

declare void @_ZN2v88internal21LocalAllocationBuffer12MakeIterableEv(%"class.v8::internal::LocalAllocationBuffer"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19ConcurrentAllocator29MarkLinearAllocationAreaBlackEv(%"class.v8::internal::ConcurrentAllocator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  %7 = icmp eq i64 %3, %5
  %8 = or i1 %6, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = add i64 %3, -4
  %11 = and i64 %10, -262144
  %12 = inttoptr i64 %11 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page25CreateBlackAreaBackgroundEmm(%"class.v8::internal::Page"* %12, i64 %3, i64 %5) #8
  br label %13

13:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN2v88internal4Page25CreateBlackAreaBackgroundEmm(%"class.v8::internal::Page"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19ConcurrentAllocator26UnmarkLinearAllocationAreaEv(%"class.v8::internal::ConcurrentAllocator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, 0
  %7 = icmp eq i64 %3, %5
  %8 = or i1 %6, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = add i64 %3, -4
  %11 = and i64 %10, -262144
  %12 = inttoptr i64 %11 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal4Page26DestroyBlackAreaBackgroundEmm(%"class.v8::internal::Page"* %12, i64 %3, i64 %5) #8
  br label %13

13:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN2v88internal4Page26DestroyBlackAreaBackgroundEmm(%"class.v8::internal::Page"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZN2v88internal19ConcurrentAllocator9EnsureLabENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %0, i32 %3)
  br i1 %5, label %6, label %36

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %9, i32 %2) #8
  %11 = sext i32 %10 to i64
  %12 = sext i32 %1 to i64
  %13 = add i64 %9, %12
  %14 = add i64 %13, %11
  %15 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = icmp ugt i64 %14, %16
  br i1 %17, label %36, label %18

18:                                               ; preds = %6
  store i64 %14, i64* %8, align 8
  %19 = icmp sgt i32 %10, 0
  br i1 %19, label %20, label %31

20:                                               ; preds = %18
  %21 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %7 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  %26 = add i64 %9, 1
  %27 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %25, i64 %26, i32 %10) #8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %36, !prof !2

30:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

31:                                               ; preds = %18
  %32 = add i64 %9, 1
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

36:                                               ; preds = %31, %20, %6, %4
  %37 = phi i64 [ 2, %4 ], [ 14, %6 ], [ %27, %20 ], [ %32, %31 ]
  ret i64 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal19ConcurrentAllocator9EnsureLabENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %4 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %5 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %6 = alloca %"class.v8::base::Optional.1144", align 8
  %7 = alloca %"class.v8::internal::LocalAllocationBuffer", align 8
  %8 = alloca %"class.v8::internal::LocalAllocationBuffer", align 8
  %9 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %10 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  call void @_ZN2v88internal10PagedSpace22RawRefillLabBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1144"* nonnull sret %6, %"class.v8::internal::PagedSpace"* %12, %"class.v8::internal::LocalHeap"* %14, i64 4096, i64 32768, i32 0, i32 %1) #8
  %15 = load i8, i8* %10, align 8, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %71, label %17

17:                                               ; preds = %2
  %18 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %20, i64 0, i32 86, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %22, i64 0, i32 14
  %24 = load i8, i8* %23, align 1, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, %28
  %32 = add i64 %28, -4
  %33 = and i64 %32, -262144
  %34 = inttoptr i64 %33 to %"class.v8::internal::Page"*
  call void @_ZN2v88internal4Page25CreateBlackAreaBackgroundEmm(%"class.v8::internal::Page"* %34, i64 %28, i64 %31) #8
  br label %35

35:                                               ; preds = %17, %26
  %36 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2
  call void @_ZN2v88internal21LocalAllocationBufferC1EOS1_(%"class.v8::internal::LocalAllocationBuffer"* nonnull %7, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32) %39) #8
  %40 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %40) #8
  %41 = and i64 %37, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

44:                                               ; preds = %35
  %45 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %13, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %45, i64 0, i32 0
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"class.v8::internal::LinearAllocationArea"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50)
  %51 = add i64 %49, %37
  %52 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %3, i64 0, i32 0
  store i64 %37, i64* %52, align 8, !noalias !5
  %53 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %3, i64 0, i32 1
  store i64 %37, i64* %53, align 8, !noalias !5
  %54 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %3, i64 0, i32 2
  store i64 %51, i64* %54, align 8, !noalias !5
  call void @_ZN2v88internal21LocalAllocationBufferC1EPNS0_4HeapENS0_20LinearAllocationAreaE(%"class.v8::internal::LocalAllocationBuffer"* nonnull %8, %"class.v8::internal::Heap"* %47, %"class.v8::internal::LinearAllocationArea"* nonnull byval(%"class.v8::internal::LinearAllocationArea") align 8 %3) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50)
  %55 = call dereferenceable(32) %"class.v8::internal::LocalAllocationBuffer"* @_ZN2v88internal21LocalAllocationBufferaSEOS1_(%"class.v8::internal::LocalAllocationBuffer"* %39, %"class.v8::internal::LocalAllocationBuffer"* nonnull dereferenceable(32) %8) #8
  %56 = bitcast %"class.v8::internal::LinearAllocationArea"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #8
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %4, %"class.v8::internal::LocalAllocationBuffer"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %40) #8
  %57 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %7, i64 0, i32 1, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %58, %60
  br i1 %61, label %62, label %67

62:                                               ; preds = %44
  %63 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %7, i64 0, i32 1, i32 1
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %57, align 8
  %65 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %7, i64 0, i32 1, i32 0
  %66 = bitcast i64* %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #8
  br label %69

67:                                               ; preds = %44
  %68 = bitcast %"class.v8::internal::LinearAllocationArea"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #8
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %9, %"class.v8::internal::LocalAllocationBuffer"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #8
  br label %69

69:                                               ; preds = %62, %67
  %70 = bitcast %"class.v8::internal::LinearAllocationArea"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #8
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %5, %"class.v8::internal::LocalAllocationBuffer"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %38) #8
  br label %71

71:                                               ; preds = %2, %69
  %72 = phi i1 [ true, %69 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  ret i1 %72
}

declare void @_ZN2v88internal10PagedSpace22RawRefillLabBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1144"* sret, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalHeap"*, i64, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal21LocalAllocationBufferC1EOS1_(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32)) unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(32) %"class.v8::internal::LocalAllocationBuffer"* @_ZN2v88internal21LocalAllocationBufferaSEOS1_(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal19ConcurrentAllocator18AllocateOutsideLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::base::Optional.1144", align 8
  %6 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::PagedSpace"*, %"class.v8::internal::PagedSpace"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %9, align 8
  %11 = sext i32 %1 to i64
  call void @_ZN2v88internal10PagedSpace22RawRefillLabBackgroundEPNS0_9LocalHeapEmmNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::base::Optional.1144"* nonnull sret %5, %"class.v8::internal::PagedSpace"* %8, %"class.v8::internal::LocalHeap"* %10, i64 %11, i64 %11, i32 %2, i32 %3) #8
  %12 = load i8, i8* %6, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %31, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.v8::base::Optional.1144", %"class.v8::base::Optional.1144"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  %18 = load %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"** %9, align 8
  %19 = getelementptr inbounds %"class.v8::internal::LocalHeap", %"class.v8::internal::LocalHeap"* %18, i64 0, i32 0
  %20 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %20, i64 0, i32 86, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %22, i64 0, i32 14
  %24 = load i8, i8* %23, align 1, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %14
  call void @_ZN2v88internal18IncrementalMarking19MarkBlackBackgroundENS0_10HeapObjectEi(%"class.v8::internal::IncrementalMarking"* %22, i64 %17, i32 %1) #8
  br label %27

27:                                               ; preds = %14, %26
  %28 = and i64 %17, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %31, !prof !2

30:                                               ; preds = %27
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

31:                                               ; preds = %4, %27
  %32 = phi i64 [ 2, %4 ], [ %17, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret i64 %32
}

declare void @_ZN2v88internal18IncrementalMarking19MarkBlackBackgroundENS0_10HeapObjectEi(%"class.v8::internal::IncrementalMarking"*, i64, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CancelableTaskD2Ev(%"class.v8::internal::CancelableTask"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal10CancelableD2Ev(%"class.v8::internal::Cancelable"* %2) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal29StressConcurrentAllocatorTaskD0Ev(%"class.v8::internal::StressConcurrentAllocatorTask"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StressConcurrentAllocatorTask", %"class.v8::internal::StressConcurrentAllocatorTask"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN2v88internal10CancelableD2Ev(%"class.v8::internal::Cancelable"* %2) #8
  %3 = bitcast %"class.v8::internal::StressConcurrentAllocatorTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14CancelableTask3RunEv(%"class.v8::internal::CancelableTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = cmpxchg i32* %2, i32 0, i32 2 acq_rel acquire
  %4 = extractvalue { i32, i1 } %3, 1
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::CancelableTask"* %0 to void (%"class.v8::internal::CancelableTask"*)***
  %7 = load void (%"class.v8::internal::CancelableTask"*)**, void (%"class.v8::internal::CancelableTask"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::CancelableTask"*)*, void (%"class.v8::internal::CancelableTask"*)** %7, i64 3
  %9 = load void (%"class.v8::internal::CancelableTask"*)*, void (%"class.v8::internal::CancelableTask"*)** %8, align 8
  tail call void %9(%"class.v8::internal::CancelableTask"* %0) #8
  br label %10

10:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD1Ev(%"class.v8::internal::StressConcurrentAllocatorTask"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StressConcurrentAllocatorTask", %"class.v8::internal::StressConcurrentAllocatorTask"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"struct.std::__1::atomic"* %2 to %"class.v8::internal::Cancelable"*
  tail call void @_ZN2v88internal10CancelableD2Ev(%"class.v8::internal::Cancelable"* %3) #8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N2v88internal29StressConcurrentAllocatorTaskD0Ev(%"class.v8::internal::StressConcurrentAllocatorTask"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::StressConcurrentAllocatorTask", %"class.v8::internal::StressConcurrentAllocatorTask"* %0, i64 -1, i32 0, i32 0, i32 2
  %3 = bitcast %"struct.std::__1::atomic"* %2 to %"class.v8::internal::Cancelable"*
  tail call void @_ZN2v88internal10CancelableD2Ev(%"class.v8::internal::Cancelable"* %3) #8
  %4 = bitcast %"struct.std::__1::atomic"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn32_N2v88internal14CancelableTask3RunEv(%"class.v8::internal::CancelableTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::CancelableTask", %"class.v8::internal::CancelableTask"* %0, i64 -1, i32 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::CancelableTaskManager"*, %"class.v8::internal::CancelableTaskManager"** %2, i64 2
  %4 = bitcast %"class.v8::internal::CancelableTaskManager"** %3 to i32*
  %5 = cmpxchg i32* %4, i32 0, i32 2 acq_rel acquire
  %6 = extractvalue { i32, i1 } %5, 1
  br i1 %6, label %7, label %13

7:                                                ; preds = %1
  %8 = bitcast %"class.v8::internal::CancelableTaskManager"** %2 to %"class.v8::internal::CancelableTask"*
  %9 = bitcast %"class.v8::internal::CancelableTaskManager"** %2 to void (%"class.v8::internal::CancelableTask"*)***
  %10 = load void (%"class.v8::internal::CancelableTask"*)**, void (%"class.v8::internal::CancelableTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::CancelableTask"*)*, void (%"class.v8::internal::CancelableTask"*)** %10, i64 3
  %12 = load void (%"class.v8::internal::CancelableTask"*)*, void (%"class.v8::internal::CancelableTask"*)** %11, align 8
  tail call void %12(%"class.v8::internal::CancelableTask"* %8) #8
  br label %13

13:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN2v88internal9LocalHeap14UnparkSlowPathEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal4Heap24MaxRegularHeapObjectSizeENS0_14AllocationTypeE(i8 zeroext) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

declare i64 @_ZN2v88internal19OldLargeObjectSpace21AllocateRawBackgroundEPNS0_9LocalHeapEi(%"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::LocalHeap"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal19ConcurrentAllocator13AllocateInLabEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"*, i32, i32, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %7, i32 %2) #8
  %9 = sext i32 %8 to i64
  %10 = sext i32 %1 to i64
  %11 = add i64 %7, %10
  %12 = add i64 %11, %9
  %13 = getelementptr inbounds %"class.v8::internal::ConcurrentAllocator", %"class.v8::internal::ConcurrentAllocator"* %0, i64 0, i32 2, i32 1, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %34, label %16

16:                                               ; preds = %4
  store i64 %12, i64* %6, align 8
  %17 = icmp sgt i32 %8, 0
  br i1 %17, label %18, label %29

18:                                               ; preds = %16
  %19 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, -41416
  %22 = inttoptr i64 %21 to %"class.v8::internal::Isolate"*
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %22, i64 0, i32 0, i32 7, i32 0, i64 0
  %24 = add i64 %7, 1
  %25 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %23, i64 %24, i32 %8) #8
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %36, !prof !2

28:                                               ; preds = %18
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

29:                                               ; preds = %16
  %30 = add i64 %7, 1
  %31 = and i64 %30, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %36, !prof !2

33:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0)) #9
  unreachable

34:                                               ; preds = %4
  %35 = tail call i64 @_ZN2v88internal19ConcurrentAllocator17AllocateInLabSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::ConcurrentAllocator"* %0, i32 %1, i32 %2, i32 %3)
  br label %36

36:                                               ; preds = %29, %18, %34
  %37 = phi i64 [ %35, %34 ], [ %25, %18 ], [ %30, %29 ]
  ret i64 %37
}

declare void @_ZN2v88internal9LocalHeap17SafepointSlowPathEv(%"class.v8::internal::LocalHeap"*) local_unnamed_addr #2

declare void @_ZN2v88internal9LocalHeap12ParkSlowPathENS1_11ThreadStateE(%"class.v8::internal::LocalHeap"*, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64, i32) local_unnamed_addr #2

declare i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal21LocalAllocationBufferC1EPNS0_4HeapENS0_20LinearAllocationAreaE(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea"* byval(%"class.v8::internal::LinearAllocationArea") align 8) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v88internal10CancelableD2Ev(%"class.v8::internal::Cancelable"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2v88internal14CancelableTaskC2EPNS0_7IsolateE(%"class.v8::internal::CancelableTask"*, %"class.v8::internal::Isolate"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN2v88internal21LocalAllocationBuffer10FromResultEPNS0_4HeapENS0_16AllocationResultEl: argument 0"}
!7 = distinct !{!7, !"_ZN2v88internal21LocalAllocationBuffer10FromResultEPNS0_4HeapENS0_16AllocationResultEl"}
