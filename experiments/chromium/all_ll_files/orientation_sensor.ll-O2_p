; ModuleID = '../../third_party/blink/renderer/modules/sensor/orientation_sensor.cc'
source_filename = "../../third_party/blink/renderer/modules/sensor/orientation_sensor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.236" }
%"class.WTF::HashTable.236" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.238", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.238" = type { %"class.blink::MemberBase.239" }
%"class.blink::MemberBase.239" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.45", i32, [4 x i8], %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.216", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.223", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.161", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__cxx_atomic_impl.84" }
%"struct.std::__1::__cxx_atomic_impl.84" = type { %"struct.std::__1::__cxx_atomic_base_impl.85" }
%"struct.std::__1::__cxx_atomic_base_impl.85" = type { i64 }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.81" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.141", %"class.std::__1::__compressed_pair.148", %"class.std::__1::__compressed_pair.153", %"class.std::__1::__compressed_pair.155", [4 x i8] }>
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { i64 }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { float }
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.164", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.173" }
%"class.WTF::Vector.173" = type { %"class.WTF::VectorBuffer.174" }
%"class.WTF::VectorBuffer.174" = type { %"class.WTF::VectorBufferBase.175" }
%"class.WTF::VectorBufferBase.175" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"struct.std::__1::pair.191"*, i32, i32 }
%"struct.std::__1::pair.191" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.204" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.99"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.227" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.222 }
%class.scoped_refptr.222 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.223" = type { %"struct.std::__1::__atomic_base.224" }
%"struct.std::__1::__atomic_base.224" = type { %"struct.std::__1::__cxx_atomic_impl.225" }
%"struct.std::__1::__cxx_atomic_impl.225" = type { %"struct.std::__1::__cxx_atomic_base_impl.226" }
%"struct.std::__1::__cxx_atomic_base_impl.226" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::OrientationSensor" = type { %"class.blink::Sensor.base", i8, [6 x i8] }
%"class.blink::Sensor.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::SensorProxy::Observer", double, i32, i32, %"class.blink::Member.9", double, %"class.mojo::InlinedStructPtr", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8 }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type opaque
%"class.blink::SensorProxy::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::SensorProxy"* }
%"class.blink::SensorProxy" = type <{ %"class.blink::PageVisibilityObserver", %"class.blink::FocusChangedObserver", i32, [4 x i8], %"class.blink::HeapHashSet", i32, [4 x i8], %"union.device::SensorReading", %"union.device::SensorReading", %"class.blink::Member.19", i8, [7 x i8] }>
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.13" }
%"class.blink::WeakMember.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::FocusChangedObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.18"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.18" = type opaque
%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField"] }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::SensorProviderProxy"* }
%"class.blink::SensorProviderProxy" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.device::mojom::blink::SensorConfiguration", i32, [4 x i8] }>
%"class.device::mojom::blink::SensorConfiguration" = type { double }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ExecutionContext" = type opaque
%"class.blink::SpatialSensorOptions" = type { %"class.blink::SensorOptions", %"class.WTF::String" }
%"class.blink::SensorOptions" = type { %"class.blink::IDLDictionaryBase", i8, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.39" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.39" = type { %"class.v8::TracedReference.40" }
%"class.v8::TracedReference.40" = type { %"class.v8::BasicTracedReference.41" }
%"class.v8::BasicTracedReference.41" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::Vector.44" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.22" }
%"class.WTF::Vector.22" = type { %"class.WTF::VectorBuffer.23" }
%"class.WTF::VectorBuffer.23" = type { %"class.WTF::VectorBufferBase.24" }
%"class.WTF::VectorBufferBase.24" = type { double*, i32, i32 }
%"class.blink::Sensor" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::SensorProxy::Observer", double, i32, i32, %"class.blink::Member.9", double, %"class.mojo::InlinedStructPtr", %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.blink::TaskHandle", i8, [7 x i8] }>
%"class.blink::DOMMatrix" = type { %"class.blink::DOMMatrixReadOnly.base", [7 x i8] }
%"class.blink::DOMMatrixReadOnly.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::TransformationMatrix", i8 }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.29", %"class.blink::NotShared", %"class.blink::NotShared.35" }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::DOMMatrix"* }
%"class.blink::NotShared" = type { %"class.blink::Member.31" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.33" }
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::NotShared.35" = type { %"class.blink::Member.36" }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::DOMTypedArray.38"* }
%"class.blink::DOMTypedArray.38" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.244, %"class.blink::Member.245", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.244 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.247" }
%"class.blink::Persistent.247" = type { %"class.blink::PersistentBase.248" }
%"class.blink::PersistentBase.248" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.249", %"class.blink::Member.249", %"class.blink::Member.253" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.257", %"class.blink::Member.259", %"class.blink::Member.251", %"class.blink::Member.261", %"class.blink::Member.261", %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.294", %"class.blink::HeapVector.296" }
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.265" }
%"class.blink::HeapHashMap.265" = type { %"class.WTF::HashMap.268" }
%"class.WTF::HashMap.268" = type { %"class.WTF::HashTable.269" }
%"class.WTF::HashTable.269" = type <{ %"struct.WTF::KeyValuePair.271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.271" = type { %"class.WTF::AtomicString", %"class.blink::Member.272" }
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.276", i32, %"class.blink::HeapVector.278" }
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.278" = type { %"class.WTF::Vector.281" }
%"class.WTF::Vector.281" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::Member.276"*, i32, i32 }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.291" }
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::HeapHashMap.293"* }
%"class.blink::HeapHashMap.293" = type opaque
%"class.blink::Member.294" = type { %"class.blink::MemberBase.295" }
%"class.blink::MemberBase.295" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.296" = type { %"class.WTF::Vector.299" }
%"class.WTF::Vector.299" = type { %"class.WTF::VectorBuffer.300" }
%"class.WTF::VectorBuffer.300" = type { %"class.WTF::VectorBufferBase.301" }
%"class.WTF::VectorBufferBase.301" = type { %"class.blink::Member.302"*, i32, i32 }
%"class.blink::Member.302" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::Node"* }
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.304", i8, [7 x i8] }>
%"class.blink::Member.304" = type { %"class.blink::MemberBase.305" }
%"class.blink::MemberBase.305" = type { %"class.blink::EventListener"* }

$_ZN5blink17OrientationSensor22PopulateMatrixInternalINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvPT_RNS_14ExceptionStateE = comdat any

$_ZN5blink17OrientationSensorD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17OrientationSensor18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink6Sensor13InterfaceNameEv = comdat any

$_ZNK5blink6Sensor19GetExecutionContextEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZThn72_N5blink17OrientationSensorD1Ev = comdat any

$_ZThn72_N5blink17OrientationSensorD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_6SensorEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_6SensorEE26DispatchHasPendingActivityEv = comdat any

$_ZThn80_N5blink17OrientationSensorD1Ev = comdat any

$_ZThn80_N5blink17OrientationSensorD0Ev = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink16DoPopulateMatrixINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvPT_dddd = comdat any

@_ZTVN5blink17OrientationSensorE = hidden unnamed_addr constant { [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] } { [35 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Sensor"*)* @_ZN5blink6SensorD2Ev to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZN5blink17OrientationSensorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::Sensor"*)* @_ZNK5blink6Sensor18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*)* @_ZNK5blink17OrientationSensor5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::OrientationSensor"*)* @_ZNK5blink17OrientationSensor18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Sensor"*)* @_ZNK5blink6Sensor13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)* @_ZNK5blink6Sensor19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (i1 (%"class.blink::Sensor"*)* @_ZNK5blink6Sensor10hasReadingEv to i8*), i8* bitcast (void (%"class.mojo::InlinedStructPtr"*, %"class.blink::Sensor"*)* @_ZN5blink6Sensor18CreateSensorConfigEv to i8*), i8* bitcast (void (%"class.blink::Sensor"*)* @_ZN5blink6Sensor19OnSensorInitializedEv to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZN5blink17OrientationSensor22OnSensorReadingChangedEv to i8*), i8* bitcast (void (%"class.blink::Sensor"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink6Sensor13OnSensorErrorENS_16DOMExceptionCodeERKN3WTF6StringES5_ to i8*), i8* bitcast (void (%"class.blink::Sensor"*)* @_ZN5blink6Sensor16ContextDestroyedEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink17OrientationSensor5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZThn72_N5blink17OrientationSensorD1Ev to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZThn72_N5blink17OrientationSensorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_6SensorEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_6SensorEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink17OrientationSensor5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZThn80_N5blink17OrientationSensorD1Ev to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZThn80_N5blink17OrientationSensorD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::Sensor"*)* @_ZThn80_N5blink6Sensor16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)], [6 x i8*] [i8* inttoptr (i64 -104 to i8*), i8* null, i8* bitcast (void (%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*)* @_ZThn104_NK5blink17OrientationSensor5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::Sensor"*)* @_ZThn104_N5blink6Sensor19OnSensorInitializedEv to i8*), i8* bitcast (void (%"class.blink::OrientationSensor"*)* @_ZThn104_N5blink17OrientationSensor22OnSensorReadingChangedEv to i8*), i8* bitcast (void (%"class.blink::Sensor"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn104_N5blink6Sensor13OnSensorErrorENS_16DOMExceptionCodeERKN3WTF6StringES5_ to i8*)] }, align 8
@_ZN5blink17OrientationSensor18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink18event_target_names7kSensorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv = private unnamed_addr constant [54 x i8] c"const char *WTF::GetStringWithTypeName() [T = double]\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"Target buffer must have at least 16 elements.\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Sensor data is not available.\00", align 1

@_ZN5blink17OrientationSensorC1EPNS_16ExecutionContextEPKNS_20SpatialSensorOptionsERNS_14ExceptionStateEN6device5mojom10SensorTypeERKN3WTF6VectorINS_5mojom24PermissionsPolicyFeatureELj0ENSB_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::OrientationSensor"*, %"class.blink::ExecutionContext"*, %"class.blink::SpatialSensorOptions"*, %"class.blink::ExceptionState"*, i32, %"class.WTF::Vector.44"*), void (%"class.blink::OrientationSensor"*, %"class.blink::ExecutionContext"*, %"class.blink::SpatialSensorOptions"*, %"class.blink::ExceptionState"*, i32, %"class.WTF::Vector.44"*)* @_ZN5blink17OrientationSensorC2EPNS_16ExecutionContextEPKNS_20SpatialSensorOptionsERNS_14ExceptionStateEN6device5mojom10SensorTypeERKN3WTF6VectorINS_5mojom24PermissionsPolicyFeatureELj0ENSB_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OrientationSensor10quaternionEv(%"class.absl::optional"* noalias nocapture sret, %"class.blink::OrientationSensor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %1, i64 0, i32 1
  store i8 0, i8* %3, align 1
  %4 = bitcast %"class.blink::OrientationSensor"* %1 to %"class.blink::Sensor"*
  %5 = bitcast %"class.blink::OrientationSensor"* %1 to i1 (%"class.blink::Sensor"*)***
  %6 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %6, i64 27
  %8 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::Sensor"* %4) #5
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  br label %36

12:                                               ; preds = %2
  %13 = tail call dereferenceable(40) %"union.device::SensorReading"* @_ZNK5blink6Sensor10GetReadingEv(%"class.blink::Sensor"* %4) #5
  %14 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %13, i64 0, i32 0, i32 1, i64 0, i32 0, i32 0
  %15 = bitcast i64* %14 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %13, i64 0, i32 0, i32 1, i64 2, i32 0, i32 0
  %18 = bitcast i64* %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = tail call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 32) #5
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIdEEPKcv, i64 0, i64 0)) #5
  %22 = ptrtoint i8* %21 to i64
  %23 = lshr i64 %20, 3
  %24 = trunc i64 %23 to i32
  %25 = icmp eq i8* %21, null
  br i1 %25, label %30, label %26, !prof !2

26:                                               ; preds = %12
  %27 = bitcast i8* %21 to <2 x i64>*
  store <2 x i64> %16, <2 x i64>* %27, align 8
  %28 = getelementptr inbounds i8, i8* %21, i64 16
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %29, align 8
  br label %30

30:                                               ; preds = %12, %26
  %31 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.WTF::Vector.22"* %32 to i64*
  store atomic i64 %22, i64* %35 monotonic, align 8
  store i32 %24, i32* %33, align 8
  store i32 4, i32* %34, align 4
  br label %36

36:                                               ; preds = %30, %10
  ret void
}

declare dereferenceable(40) %"union.device::SensorReading"* @_ZNK5blink6Sensor10GetReadingEv(%"class.blink::Sensor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16DoPopulateMatrixINS_9DOMMatrixEEEvPT_dddd(%"class.blink::DOMMatrix"*, double, double, double, double) local_unnamed_addr #0 {
  %6 = fmul double %2, %2
  %7 = fmul double %3, %3
  %8 = fadd double %6, %7
  %9 = fmul double %8, 2.000000e+00
  %10 = fsub double 1.000000e+00, %9
  %11 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 0
  store double %10, double* %11, align 8
  %12 = fmul double %1, %2
  %13 = fmul double %3, %4
  %14 = fsub double %12, %13
  %15 = fmul double %14, 2.000000e+00
  %16 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 1
  store double %15, double* %16, align 8
  %17 = fmul double %1, %3
  %18 = fmul double %2, %4
  %19 = fadd double %17, %18
  %20 = fmul double %19, 2.000000e+00
  %21 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 2
  store double %20, double* %21, align 8
  %22 = fcmp oeq double %20, 0.000000e+00
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext %22) #5
  %23 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0, i64 3
  store double 0.000000e+00, double* %23, align 8
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext true) #5
  %24 = fadd double %12, %13
  %25 = fmul double %24, 2.000000e+00
  %26 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 0
  store double %25, double* %26, align 8
  %27 = fmul double %1, %1
  %28 = fadd double %27, %7
  %29 = fmul double %28, 2.000000e+00
  %30 = fsub double 1.000000e+00, %29
  %31 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 1
  store double %30, double* %31, align 8
  %32 = insertelement <2 x double> undef, double %2, i32 0
  %33 = insertelement <2 x double> %32, double %1, i32 1
  %34 = fmul <2 x double> %33, <double 2.000000e+00, double 2.000000e+00>
  %35 = insertelement <2 x double> undef, double %3, i32 0
  %36 = insertelement <2 x double> %35, double %4, i32 1
  %37 = fmul <2 x double> %34, %36
  %38 = extractelement <2 x double> %37, i32 0
  %39 = extractelement <2 x double> %37, i32 1
  %40 = fsub double %38, %39
  %41 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 2
  store double %40, double* %41, align 8
  %42 = fcmp oeq double %40, 0.000000e+00
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext %42) #5
  %43 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 1, i64 3
  store double 0.000000e+00, double* %43, align 8
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext true) #5
  %44 = fsub double %17, %18
  %45 = fmul double %44, 2.000000e+00
  %46 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 0
  store double %45, double* %46, align 8
  %47 = fcmp oeq double %45, 0.000000e+00
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext %47) #5
  %48 = fmul double %2, %3
  %49 = fmul double %1, %4
  %50 = fadd double %48, %49
  %51 = fmul double %50, 2.000000e+00
  %52 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 1
  store double %51, double* %52, align 8
  %53 = fcmp oeq double %51, 0.000000e+00
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext %53) #5
  %54 = fadd double %27, %6
  %55 = fmul double %54, 2.000000e+00
  %56 = fsub double 1.000000e+00, %55
  %57 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 2
  store double %56, double* %57, align 8
  %58 = fcmp oeq double %56, 1.000000e+00
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext %58) #5
  %59 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 2, i64 3
  store double 0.000000e+00, double* %59, align 8
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext true) #5
  %60 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 0
  %61 = bitcast double* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false)
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext true) #5
  %62 = getelementptr inbounds %"class.blink::DOMMatrix", %"class.blink::DOMMatrix"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 3, i64 3
  store double 1.000000e+00, double* %62, align 8
  tail call void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"* %0, i1 zeroext true) #5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink17CheckBufferLengthINS_9DOMMatrixEEEbPT_(%"class.blink::DOMMatrix"* nocapture readnone) local_unnamed_addr #2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OrientationSensor14populateMatrixEPKNS_44V8UnionDOMMatrixOrFloat32ArrayOrFloat64ArrayERNS_14ExceptionStateE(%"class.blink::OrientationSensor"*, %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array", %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %68 [
    i32 0, label %6
    i32 1, label %30
    i32 2, label %65
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array", %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array"* %1, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::DOMMatrix"*, %"class.blink::DOMMatrix"** %7, align 8
  %9 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  %10 = bitcast %"class.blink::OrientationSensor"* %0 to i1 (%"class.blink::Sensor"*)***
  %11 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %11, i64 27
  %13 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::Sensor"* %9) #5
  br i1 %14, label %16, label %15

15:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %68

16:                                               ; preds = %6
  %17 = tail call dereferenceable(40) %"union.device::SensorReading"* @_ZNK5blink6Sensor10GetReadingEv(%"class.blink::Sensor"* %9) #5
  %18 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %17, i64 0, i32 0, i32 1, i64 0
  %19 = bitcast %"class.device::SensorReadingField"* %18 to double*
  %20 = load double, double* %19, align 8
  %21 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %17, i64 0, i32 0, i32 1, i64 1
  %22 = bitcast %"class.device::SensorReadingField"* %21 to double*
  %23 = load double, double* %22, align 8
  %24 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %17, i64 0, i32 0, i32 1, i64 2
  %25 = bitcast %"class.device::SensorReadingField"* %24 to double*
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %17, i64 0, i32 0, i32 1, i64 3
  %28 = bitcast %"class.device::SensorReadingField"* %27 to double*
  %29 = load double, double* %28, align 8
  tail call void @_ZN5blink16DoPopulateMatrixINS_9DOMMatrixEEEvPT_dddd(%"class.blink::DOMMatrix"* %8, double %20, double %23, double %26, double %29) #5
  br label %68

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array", %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.blink::DOMTypedArray"*, %"class.blink::DOMTypedArray"** %31, align 8, !noalias !3
  %33 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %32, i64 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %34, i64 0, i32 2
  %36 = load i8, i8* %35, align 8, !range !6
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %32, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp ugt i64 %40, 15
  br i1 %41, label %43, label %42

42:                                               ; preds = %38, %30
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %68

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  %45 = bitcast %"class.blink::OrientationSensor"* %0 to i1 (%"class.blink::Sensor"*)***
  %46 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %46, i64 27
  %48 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::Sensor"* %44) #5
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %68

51:                                               ; preds = %43
  %52 = tail call dereferenceable(40) %"union.device::SensorReading"* @_ZNK5blink6Sensor10GetReadingEv(%"class.blink::Sensor"* %44) #5
  %53 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %52, i64 0, i32 0, i32 1, i64 0
  %54 = bitcast %"class.device::SensorReadingField"* %53 to double*
  %55 = load double, double* %54, align 8
  %56 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %52, i64 0, i32 0, i32 1, i64 1
  %57 = bitcast %"class.device::SensorReadingField"* %56 to double*
  %58 = load double, double* %57, align 8
  %59 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %52, i64 0, i32 0, i32 1, i64 2
  %60 = bitcast %"class.device::SensorReadingField"* %59 to double*
  %61 = load double, double* %60, align 8
  %62 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %52, i64 0, i32 0, i32 1, i64 3
  %63 = bitcast %"class.device::SensorReadingField"* %62 to double*
  %64 = load double, double* %63, align 8
  tail call void @_ZN5blink16DoPopulateMatrixINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvPT_dddd(%"class.blink::DOMTypedArray"* %32, double %55, double %58, double %61, double %64) #5
  br label %68

65:                                               ; preds = %3
  %66 = getelementptr inbounds %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array", %"class.blink::V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %67 = load %"class.blink::DOMTypedArray.38"*, %"class.blink::DOMTypedArray.38"** %66, align 8, !noalias !7
  tail call void @_ZN5blink17OrientationSensor22PopulateMatrixInternalINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvPT_RNS_14ExceptionStateE(%"class.blink::OrientationSensor"* %0, %"class.blink::DOMTypedArray.38"* %67, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %68

68:                                               ; preds = %51, %50, %42, %16, %15, %3, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17OrientationSensor22PopulateMatrixInternalINS_13DOMTypedArrayIdN2v812Float64ArrayELb0EEEEEvPT_RNS_14ExceptionStateE(%"class.blink::OrientationSensor"*, %"class.blink::DOMTypedArray.38"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::DOMTypedArray.38", %"class.blink::DOMTypedArray.38"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %5, i64 0, i32 2
  %7 = load i8, i8* %6, align 8, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::DOMTypedArray.38", %"class.blink::DOMTypedArray.38"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %11, 15
  br i1 %12, label %14, label %13

13:                                               ; preds = %3, %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %96

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  %16 = bitcast %"class.blink::OrientationSensor"* %0 to i1 (%"class.blink::Sensor"*)***
  %17 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %17, i64 27
  %19 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Sensor"* %15) #5
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0)) #5
  br label %96

22:                                               ; preds = %14
  %23 = tail call dereferenceable(40) %"union.device::SensorReading"* @_ZNK5blink6Sensor10GetReadingEv(%"class.blink::Sensor"* %15) #5
  %24 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %23, i64 0, i32 0, i32 1, i64 0
  %25 = bitcast %"class.device::SensorReadingField"* %24 to double*
  %26 = load double, double* %25, align 8
  %27 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %23, i64 0, i32 0, i32 1, i64 1
  %28 = bitcast %"class.device::SensorReadingField"* %27 to <2 x double>*
  %29 = load <2 x double>, <2 x double>* %28, align 8
  %30 = getelementptr inbounds %"union.device::SensorReading", %"union.device::SensorReading"* %23, i64 0, i32 0, i32 1, i64 3
  %31 = bitcast %"class.device::SensorReadingField"* %30 to double*
  %32 = load double, double* %31, align 8
  %33 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %4, align 8
  %34 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %33, i64 0, i32 2
  %35 = load i8, i8* %34, align 8, !range !6
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.blink::DOMTypedArray.38", %"class.blink::DOMTypedArray.38"* %1, i64 0, i32 0, i32 1
  %39 = bitcast i8** %38 to double**
  %40 = load double*, double** %39, align 8
  br label %41

41:                                               ; preds = %22, %37
  %42 = phi double* [ %40, %37 ], [ null, %22 ]
  %43 = extractelement <2 x double> %29, i32 0
  %44 = fmul double %43, %43
  %45 = extractelement <2 x double> %29, i32 1
  %46 = fmul double %45, %45
  %47 = fadd double %44, %46
  %48 = fmul double %47, 2.000000e+00
  %49 = fsub double 1.000000e+00, %48
  store double %49, double* %42, align 8
  %50 = getelementptr inbounds double, double* %42, i64 1
  %51 = insertelement <2 x double> undef, double %26, i32 0
  %52 = shufflevector <2 x double> %51, <2 x double> undef, <2 x i32> zeroinitializer
  %53 = fmul <2 x double> %52, %29
  %54 = insertelement <2 x double> undef, double %45, i32 0
  %55 = insertelement <2 x double> %54, double %32, i32 1
  %56 = insertelement <2 x double> undef, double %32, i32 0
  %57 = shufflevector <2 x double> %56, <2 x double> %29, <2 x i32> <i32 0, i32 2>
  %58 = fmul <2 x double> %55, %57
  %59 = fsub <2 x double> %53, %58
  %60 = fadd <2 x double> %53, %58
  %61 = shufflevector <2 x double> %59, <2 x double> %60, <2 x i32> <i32 0, i32 3>
  %62 = fmul <2 x double> %61, <double 2.000000e+00, double 2.000000e+00>
  %63 = bitcast double* %50 to <2 x double>*
  store <2 x double> %62, <2 x double>* %63, align 8
  %64 = getelementptr inbounds double, double* %42, i64 3
  store double 0.000000e+00, double* %64, align 8
  %65 = extractelement <2 x double> %53, i32 0
  %66 = extractelement <2 x double> %58, i32 0
  %67 = fadd double %65, %66
  %68 = fmul double %67, 2.000000e+00
  %69 = getelementptr inbounds double, double* %42, i64 4
  store double %68, double* %69, align 8
  %70 = fmul double %26, %26
  %71 = fadd double %70, %46
  %72 = fmul double %71, 2.000000e+00
  %73 = fsub double 1.000000e+00, %72
  %74 = getelementptr inbounds double, double* %42, i64 5
  store double %73, double* %74, align 8
  %75 = fmul double %43, %45
  %76 = fmul double %26, %32
  %77 = fsub double %75, %76
  %78 = fmul double %77, 2.000000e+00
  %79 = getelementptr inbounds double, double* %42, i64 6
  store double %78, double* %79, align 8
  %80 = getelementptr inbounds double, double* %42, i64 7
  store double 0.000000e+00, double* %80, align 8
  %81 = extractelement <2 x double> %53, i32 1
  %82 = extractelement <2 x double> %58, i32 1
  %83 = fsub double %81, %82
  %84 = fmul double %83, 2.000000e+00
  %85 = getelementptr inbounds double, double* %42, i64 8
  store double %84, double* %85, align 8
  %86 = fadd double %75, %76
  %87 = fmul double %86, 2.000000e+00
  %88 = getelementptr inbounds double, double* %42, i64 9
  store double %87, double* %88, align 8
  %89 = fadd double %70, %44
  %90 = fmul double %89, 2.000000e+00
  %91 = fsub double 1.000000e+00, %90
  %92 = getelementptr inbounds double, double* %42, i64 10
  store double %91, double* %92, align 8
  %93 = getelementptr inbounds double, double* %42, i64 11
  %94 = getelementptr inbounds double, double* %42, i64 15
  %95 = bitcast double* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 32, i1 false) #5
  store double 1.000000e+00, double* %94, align 8
  br label %96

96:                                               ; preds = %41, %21, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17OrientationSensor14isReadingDirtyEv(%"class.blink::OrientationSensor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  %7 = bitcast %"class.blink::OrientationSensor"* %0 to i1 (%"class.blink::Sensor"*)***
  %8 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %8, i64 27
  %10 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::Sensor"* %6) #5
  %12 = xor i1 %11, true
  br label %13

13:                                               ; preds = %1, %5
  %14 = phi i1 [ true, %1 ], [ %12, %5 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OrientationSensorC2EPNS_16ExecutionContextEPKNS_20SpatialSensorOptionsERNS_14ExceptionStateEN6device5mojom10SensorTypeERKN3WTF6VectorINS_5mojom24PermissionsPolicyFeatureELj0ENSB_18PartitionAllocatorEEE(%"class.blink::OrientationSensor"*, %"class.blink::ExecutionContext"*, %"class.blink::SpatialSensorOptions"*, %"class.blink::ExceptionState"* dereferenceable(72), i32, %"class.WTF::Vector.44"*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorC2EPNS_16ExecutionContextEPKNS_20SpatialSensorOptionsERNS_14ExceptionStateEN6device5mojom10SensorTypeERKN3WTF6VectorINS_5mojom24PermissionsPolicyFeatureELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Sensor"* %7, %"class.blink::ExecutionContext"* %1, %"class.blink::SpatialSensorOptions"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3, i32 %4, %"class.WTF::Vector.44"* %5) #5
  %8 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink17OrientationSensorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast i32 (...)*** %9 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink17OrientationSensorE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink17OrientationSensorE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %10, align 8
  %11 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 0, i32 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }, { [35 x i8*], [7 x i8*], [8 x i8*], [6 x i8*] }* @_ZTVN5blink17OrientationSensorE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 1
  store i8 1, i8* %12, align 1
  ret void
}

declare void @_ZN5blink6SensorC2EPNS_16ExecutionContextEPKNS_20SpatialSensorOptionsERNS_14ExceptionStateEN6device5mojom10SensorTypeERKN3WTF6VectorINS_5mojom24PermissionsPolicyFeatureELj0ENSB_18PartitionAllocatorEEE(%"class.blink::Sensor"*, %"class.blink::ExecutionContext"*, %"class.blink::SpatialSensorOptions"*, %"class.blink::ExceptionState"* dereferenceable(72), i32, %"class.WTF::Vector.44"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17OrientationSensor22OnSensorReadingChangedEv(%"class.blink::OrientationSensor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 1
  %3 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6Sensor22OnSensorReadingChangedEv(%"class.blink::Sensor"* %3) #5
  ret void
}

declare void @_ZN5blink6Sensor22OnSensorReadingChangedEv(%"class.blink::Sensor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_N5blink17OrientationSensor22OnSensorReadingChangedEv(%"class.blink::OrientationSensor"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::OrientationSensor"*
  %4 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %3, i64 0, i32 1
  store i8 1, i8* %4, align 1
  %5 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6Sensor22OnSensorReadingChangedEv(%"class.blink::Sensor"* %5) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17OrientationSensor5TraceEPNS_7VisitorE(%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  tail call void @_ZNK5blink6Sensor5TraceEPNS_7VisitorE(%"class.blink::Sensor"* %3, %"class.blink::Visitor"* %1) #5
  ret void
}

declare void @_ZNK5blink6Sensor5TraceEPNS_7VisitorE(%"class.blink::Sensor"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink17OrientationSensor5TraceEPNS_7VisitorE(%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 6
  %4 = bitcast i32* %3 to %"class.blink::Sensor"*
  tail call void @_ZNK5blink6Sensor5TraceEPNS_7VisitorE(%"class.blink::Sensor"* %4, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink17OrientationSensor5TraceEPNS_7VisitorE(%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 5
  %4 = bitcast double* %3 to %"class.blink::Sensor"*
  tail call void @_ZNK5blink6Sensor5TraceEPNS_7VisitorE(%"class.blink::Sensor"* %4, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn104_NK5blink17OrientationSensor5TraceEPNS_7VisitorE(%"class.blink::OrientationSensor"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 2, i32 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to %"class.blink::Sensor"*
  tail call void @_ZNK5blink6Sensor5TraceEPNS_7VisitorE(%"class.blink::Sensor"* %4, %"class.blink::Visitor"* %1) #5
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17OrientationSensorD0Ev(%"class.blink::OrientationSensor"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::OrientationSensor"* %0 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"* %2) #5
  ret void
}

declare zeroext i1 @_ZNK5blink6Sensor18HasPendingActivityEv(%"class.blink::Sensor"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #5
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17OrientationSensor18GetWrapperTypeInfoEv(%"class.blink::OrientationSensor"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17OrientationSensor18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink6Sensor13InterfaceNameEv(%"class.blink::Sensor"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names7kSensorE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ExecutionContext"* @_ZNK5blink6Sensor19GetExecutionContextEv(%"class.blink::Sensor"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Sensor", %"class.blink::Sensor"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %2 to %"class.blink::ExecutionContextLifecycleObserver"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %3) #5
  ret %"class.blink::ExecutionContext"* %4
}

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare zeroext i1 @_ZNK5blink6Sensor10hasReadingEv(%"class.blink::Sensor"*) unnamed_addr #1

declare void @_ZN5blink6Sensor18CreateSensorConfigEv(%"class.mojo::InlinedStructPtr"* sret, %"class.blink::Sensor"*) unnamed_addr #1

declare void @_ZN5blink6Sensor19OnSensorInitializedEv(%"class.blink::Sensor"*) unnamed_addr #1

declare void @_ZN5blink6Sensor13OnSensorErrorENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::Sensor"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink6Sensor16ContextDestroyedEv(%"class.blink::Sensor"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N5blink17OrientationSensorD1Ev(%"class.blink::OrientationSensor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 6
  %3 = bitcast i32* %2 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"* %3) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N5blink17OrientationSensorD0Ev(%"class.blink::OrientationSensor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 6
  %3 = bitcast i32* %2 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_6SensorEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Sensor"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)***
  %5 = load %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)** %5, i64 10
  %7 = load %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Sensor"*)** %6, align 8
  %8 = tail call %"class.blink::ExecutionContext"* %7(%"class.blink::Sensor"* %3) #5
  %9 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %8) #5
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_6SensorEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::Sensor"*
  %4 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to i1 (%"class.blink::Sensor"*)***
  %5 = load i1 (%"class.blink::Sensor"*)**, i1 (%"class.blink::Sensor"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %5, i64 3
  %7 = load i1 (%"class.blink::Sensor"*)*, i1 (%"class.blink::Sensor"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::Sensor"* %3) #5
  ret i1 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink17OrientationSensorD1Ev(%"class.blink::OrientationSensor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 5
  %3 = bitcast double* %2 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"* %3) #5
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink17OrientationSensorD0Ev(%"class.blink::OrientationSensor"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::OrientationSensor", %"class.blink::OrientationSensor"* %0, i64 -1, i32 0, i32 5
  %3 = bitcast double* %2 to %"class.blink::Sensor"*
  tail call void @_ZN5blink6SensorD2Ev(%"class.blink::Sensor"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink6Sensor16ContextDestroyedEv(%"class.blink::Sensor"*) unnamed_addr #0 align 2

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink6Sensor19OnSensorInitializedEv(%"class.blink::Sensor"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn104_N5blink6Sensor13OnSensorErrorENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::Sensor"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2

declare void @_ZN5blink9DOMMatrix7SetIs2DEb(%"class.blink::DOMMatrix"*, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16DoPopulateMatrixINS_13DOMTypedArrayIfN2v812Float32ArrayELb0EEEEEvPT_dddd(%"class.blink::DOMTypedArray"*, double, double, double, double) local_unnamed_addr #0 comdat {
  %6 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %7, i64 0, i32 2
  %9 = load i8, i8* %8, align 8, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::DOMTypedArray", %"class.blink::DOMTypedArray"* %0, i64 0, i32 0, i32 1
  %13 = bitcast i8** %12 to float**
  %14 = load float*, float** %13, align 8
  br label %15

15:                                               ; preds = %5, %11
  %16 = phi float* [ %14, %11 ], [ null, %5 ]
  %17 = fmul double %2, %2
  %18 = fmul double %3, %3
  %19 = fadd double %17, %18
  %20 = fmul double %19, 2.000000e+00
  %21 = fsub double 1.000000e+00, %20
  %22 = fptrunc double %21 to float
  store float %22, float* %16, align 4
  %23 = fmul double %1, %2
  %24 = fmul double %3, %4
  %25 = fsub double %23, %24
  %26 = fmul double %25, 2.000000e+00
  %27 = fptrunc double %26 to float
  %28 = getelementptr inbounds float, float* %16, i64 1
  store float %27, float* %28, align 4
  %29 = fmul double %1, %3
  %30 = fmul double %2, %4
  %31 = fadd double %29, %30
  %32 = fmul double %31, 2.000000e+00
  %33 = fptrunc double %32 to float
  %34 = getelementptr inbounds float, float* %16, i64 2
  store float %33, float* %34, align 4
  %35 = getelementptr inbounds float, float* %16, i64 3
  store float 0.000000e+00, float* %35, align 4
  %36 = fadd double %23, %24
  %37 = fmul double %36, 2.000000e+00
  %38 = fptrunc double %37 to float
  %39 = getelementptr inbounds float, float* %16, i64 4
  store float %38, float* %39, align 4
  %40 = fmul double %1, %1
  %41 = fadd double %40, %18
  %42 = fmul double %41, 2.000000e+00
  %43 = fsub double 1.000000e+00, %42
  %44 = fptrunc double %43 to float
  %45 = getelementptr inbounds float, float* %16, i64 5
  store float %44, float* %45, align 4
  %46 = fmul double %2, %3
  %47 = fmul double %1, %4
  %48 = fsub double %46, %47
  %49 = fmul double %48, 2.000000e+00
  %50 = fptrunc double %49 to float
  %51 = getelementptr inbounds float, float* %16, i64 6
  store float %50, float* %51, align 4
  %52 = getelementptr inbounds float, float* %16, i64 7
  store float 0.000000e+00, float* %52, align 4
  %53 = fsub double %29, %30
  %54 = fmul double %53, 2.000000e+00
  %55 = fptrunc double %54 to float
  %56 = getelementptr inbounds float, float* %16, i64 8
  store float %55, float* %56, align 4
  %57 = fadd double %46, %47
  %58 = fmul double %57, 2.000000e+00
  %59 = fptrunc double %58 to float
  %60 = getelementptr inbounds float, float* %16, i64 9
  store float %59, float* %60, align 4
  %61 = fadd double %40, %17
  %62 = fmul double %61, 2.000000e+00
  %63 = fsub double 1.000000e+00, %62
  %64 = fptrunc double %63 to float
  %65 = getelementptr inbounds float, float* %16, i64 10
  store float %64, float* %65, align 4
  %66 = getelementptr inbounds float, float* %16, i64 11
  %67 = getelementptr inbounds float, float* %16, i64 15
  %68 = bitcast float* %66 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 16, i1 false)
  store float 1.000000e+00, float* %67, align 4
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink44V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array17GetAsFloat32ArrayEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink44V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array17GetAsFloat32ArrayEv"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink44V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array17GetAsFloat64ArrayEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink44V8UnionDOMMatrixOrFloat32ArrayOrFloat64Array17GetAsFloat64ArrayEv"}
