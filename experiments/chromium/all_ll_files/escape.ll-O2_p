; ModuleID = '../../base/strings/escape.cc'
source_filename = "../../base/strings/escape.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"*, %"class.std::__1::__compressed_pair.1" }
%"struct.base::OffsetAdjuster::Adjustment" = type { i64, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.base::OffsetAdjuster::Adjustment"* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_string.6" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.10 }
%struct.anon.10 = type { %"struct.std::__1::__padding.11", i8 }
%"struct.std::__1::__padding.11" = type { [1 x i8] }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i8, [6 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_ = comdat any

$_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN4base12_GLOBAL__N_112kUrlUnescapeE = internal unnamed_addr constant [128 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\01\00\00\01\01\01\01\01\01\01\01\01\01\00\00\01\00\01\00\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\00\01\00\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\01\00\00\00\01\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base20UnescapeURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* noalias sret, i8*, i64, i32) local_unnamed_addr #0 {
  tail call fastcc void @_ZN4base12_GLOBAL__N_130UnescapeURLWithAdjustmentsImplENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS2_9allocatorIS8_EEEE(%"class.std::__1::basic_string"* sret %0, i8* %1, i64 %2, i32 %3, %"class.std::__1::vector"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_130UnescapeURLWithAdjustmentsImplENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS2_9allocatorIS8_EEEE(%"class.std::__1::basic_string"* noalias sret, i8*, i64, i32, %"class.std::__1::vector"*) unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"struct.base::OffsetAdjuster::Adjustment", align 8
  %15 = alloca %"struct.base::OffsetAdjuster::Adjustment", align 8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  store i8* %1, i8** %16, align 8
  %17 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  store i64 %2, i64* %17, align 8
  %18 = icmp ne %"class.std::__1::vector"* %4, null
  br i1 %18, label %19, label %24

19:                                               ; preds = %5
  %20 = bitcast %"class.std::__1::vector"* %4 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %23 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %22 to i64*
  store i64 %21, i64* %23, align 8
  br label %24

24:                                               ; preds = %19, %5
  %25 = icmp eq i32 %3, 0
  br i1 %25, label %26, label %51

26:                                               ; preds = %24
  %27 = icmp ugt i64 %2, -17
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %29) #6
  unreachable

30:                                               ; preds = %26
  %31 = icmp ult i64 %2, 23
  br i1 %31, label %40, label %32

32:                                               ; preds = %30
  %33 = add nuw i64 %2, 16
  %34 = and i64 %33, -16
  %35 = tail call i8* @_Znwm(i64 %34) #7
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8, !alias.scope !2
  %37 = or i64 %34, -9223372036854775808
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %37, i64* %38, align 8, !alias.scope !2
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %39, align 8, !alias.scope !2
  br label %46

40:                                               ; preds = %30
  %41 = trunc i64 %2 to i8
  %42 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  store i8 %41, i8* %43, align 1, !alias.scope !2
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %40, %32
  %47 = phi i8* [ %35, %32 ], [ %44, %40 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 %1, i64 %2, i1 false) #8
  br label %48

48:                                               ; preds = %40, %46
  %49 = phi i8* [ %44, %40 ], [ %47, %46 ]
  %50 = getelementptr inbounds i8, i8* %49, i64 %2
  store i8 0, i8* %50, align 1
  br label %394

51:                                               ; preds = %24
  %52 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 24, i1 false) #8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* nonnull %10, i64 %2) #8
  %53 = load i64, i64* %17, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %90, label %55

55:                                               ; preds = %51
  %56 = bitcast i32* %11 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast i32* %6 to [4 x i8]*
  %61 = bitcast i32* %6 to i8*
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 1
  %63 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 2
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %60, i64 0, i64 3
  %65 = bitcast i32* %7 to i8*
  %66 = and i32 %3, 16
  %67 = icmp eq i32 %66, 0
  %68 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %14 to i8*
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %69 to i64*
  %72 = bitcast %"class.std::__1::vector"* %4 to i64*
  %73 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %70 to i64*
  %74 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = and i32 %3, 2
  %84 = icmp eq i32 %83, 0
  %85 = and i32 %3, 4
  %86 = icmp eq i32 %85, 0
  %87 = and i32 %3, 8
  %88 = icmp eq i32 %87, 0
  %89 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %15 to i8*
  br label %92

90:                                               ; preds = %390, %51
  %91 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* nonnull align 8 %52, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8
  br label %394

92:                                               ; preds = %392, %55
  %93 = phi i64 [ %53, %55 ], [ %393, %392 ]
  %94 = phi i64 [ 0, %55 ], [ %386, %392 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #8
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 0, i64 24, i1 false) #8
  %95 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #8
  store i32 -1431655766, i32* %6, align 4
  %96 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %95, i64 %93, i64 %94, i8* nonnull %61) #8
  br i1 %96, label %97, label %150

97:                                               ; preds = %92
  %98 = load i8, i8* %61, align 4
  %99 = add i8 %98, 62
  %100 = icmp ult i8 %99, 51
  br i1 %100, label %101, label %113

101:                                              ; preds = %97
  %102 = add i64 %94, 3
  %103 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %95, i64 %93, i64 %102, i8* %62) #8
  %104 = load i8, i8* %62, align 1
  %105 = icmp slt i8 %104, -64
  %106 = and i1 %103, %105
  br i1 %106, label %107, label %113

107:                                              ; preds = %101
  %108 = add i64 %94, 6
  %109 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %95, i64 %93, i64 %108, i8* %63) #8
  %110 = load i8, i8* %63, align 2
  %111 = icmp slt i8 %110, -64
  %112 = and i1 %109, %111
  br i1 %112, label %142, label %113

113:                                              ; preds = %142, %107, %101, %97
  %114 = phi i32 [ 1, %97 ], [ 1, %101 ], [ 2, %107 ], [ %148, %142 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65) #8
  store i32 0, i32* %7, align 4
  %115 = call zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKciPiPj(i8* nonnull %61, i32 %114, i32* nonnull %7, i32* nonnull %11) #8
  br i1 %115, label %116, label %149

116:                                              ; preds = %113
  %117 = load i32, i32* %7, align 4
  %118 = add nsw i32 %117, 1
  %119 = sext i32 %118 to i64
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #8
  %120 = icmp ugt i32 %118, -17
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %122) #6
  unreachable

123:                                              ; preds = %116
  %124 = icmp ult i32 %118, 23
  br i1 %124, label %130, label %125

125:                                              ; preds = %123
  %126 = add nuw nsw i64 %119, 16
  %127 = and i64 %126, -16
  %128 = call i8* @_Znwm(i64 %127) #7
  store i8* %128, i8** %76, align 8
  %129 = or i64 %127, -9223372036854775808
  store i64 %129, i64* %77, align 8
  store i64 %119, i64* %78, align 8
  br label %133

130:                                              ; preds = %123
  %131 = trunc i32 %118 to i8
  store i8 %131, i8* %80, align 1
  %132 = icmp eq i32 %118, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %130, %125
  %134 = phi i8* [ %128, %125 ], [ %75, %130 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %134, i8* nonnull align 4 %61, i64 %119, i1 false) #8
  br label %135

135:                                              ; preds = %133, %130
  %136 = phi i8* [ %75, %130 ], [ %134, %133 ]
  %137 = getelementptr inbounds i8, i8* %136, i64 %119
  store i8 0, i8* %137, align 1
  %138 = load i8, i8* %82, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %229

140:                                              ; preds = %135
  %141 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %141) #7
  br label %229

142:                                              ; preds = %107
  %143 = add i64 %94, 9
  %144 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %95, i64 %93, i64 %143, i8* %64) #8
  %145 = load i8, i8* %64, align 1
  %146 = icmp slt i8 %145, -64
  %147 = and i1 %144, %146
  %148 = select i1 %147, i32 4, i32 3
  br label %113

149:                                              ; preds = %113
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #8
  br label %150

150:                                              ; preds = %92, %149
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 -86, i8* %13, align 1
  %151 = load i8*, i8** %16, align 8
  %152 = load i64, i64* %17, align 8
  %153 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %151, i64 %152, i64 %94, i8* nonnull %13)
  br i1 %153, label %154, label %215

154:                                              ; preds = %150
  %155 = load i8, i8* %13, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %10, i8 signext %155) #8
  br i1 %18, label %156, label %225

156:                                              ; preds = %154
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #8
  call void @_ZN4base14OffsetAdjuster10AdjustmentC1Emmm(%"struct.base::OffsetAdjuster::Adjustment"* nonnull %14, i64 %94, i64 3, i64 1) #8
  %157 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %69, align 8
  %158 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %70, align 8
  %159 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %157, %158
  %160 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %158 to i64
  br i1 %159, label %161, label %165

161:                                              ; preds = %156
  %162 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* nonnull align 8 %68, i64 24, i1 false) #8
  %163 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %157, i64 1
  %164 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %163 to i64
  store i64 %164, i64* %71, align 8
  br label %214

165:                                              ; preds = %156
  %166 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %157 to i64
  %167 = load i64, i64* %72, align 8
  %168 = sub i64 %166, %167
  %169 = sdiv exact i64 %168, 24
  %170 = add nsw i64 %169, 1
  %171 = icmp ugt i64 %170, 768614336404564650
  br i1 %171, label %172, label %174

172:                                              ; preds = %165
  %173 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %173) #6
  unreachable

174:                                              ; preds = %165
  %175 = sub i64 %160, %167
  %176 = sdiv exact i64 %175, 24
  %177 = icmp ult i64 %176, 384307168202282325
  br i1 %177, label %178, label %183

178:                                              ; preds = %174
  %179 = shl nsw i64 %176, 1
  %180 = icmp ult i64 %179, %170
  %181 = select i1 %180, i64 %170, i64 %179
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %188, label %183

183:                                              ; preds = %178, %174
  %184 = phi i64 [ %181, %178 ], [ 768614336404564650, %174 ]
  %185 = mul i64 %184, 24
  %186 = call i8* @_Znwm(i64 %185) #7
  %187 = bitcast i8* %186 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %188

188:                                              ; preds = %183, %178
  %189 = phi i64 [ %184, %183 ], [ 0, %178 ]
  %190 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %187, %183 ], [ null, %178 ]
  %191 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %190, i64 %169
  %192 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %190, i64 %189
  %193 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %192 to i64
  %194 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %191 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %194, i8* nonnull align 8 %68, i64 24, i1 false) #8
  %195 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %191, i64 1
  %196 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %195 to i64
  %197 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %74, align 8
  %198 = load i64, i64* %71, align 8
  %199 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %197 to i64
  %200 = sub i64 %198, %199
  %201 = sdiv exact i64 %200, -24
  %202 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %191, i64 %201
  %203 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %202 to i64
  %204 = icmp sgt i64 %200, 0
  br i1 %204, label %205, label %209

205:                                              ; preds = %188
  %206 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %202 to i8*
  %207 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %197 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %206, i8* align 8 %207, i64 %200, i1 false) #8
  %208 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %74, align 8
  br label %209

209:                                              ; preds = %205, %188
  %210 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %197, %188 ], [ %208, %205 ]
  store i64 %203, i64* %72, align 8
  store i64 %196, i64* %71, align 8
  store i64 %193, i64* %73, align 8
  %211 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %210, null
  br i1 %211, label %214, label %212

212:                                              ; preds = %209
  %213 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %210 to i8*
  call void @_ZdlPv(i8* %213) #7
  br label %214

214:                                              ; preds = %161, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #8
  br label %225

215:                                              ; preds = %150
  %216 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %9, i64 %94) #8
  %217 = load i8, i8* %216, align 1
  %218 = icmp ne i8 %217, 43
  %219 = or i1 %67, %218
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %9, i64 %94) #8
  %222 = load i8, i8* %221, align 1
  br label %223

223:                                              ; preds = %215, %220
  %224 = phi i8 [ %222, %220 ], [ 32, %215 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %10, i8 signext %224) #8
  br label %225

225:                                              ; preds = %154, %214, %223
  %226 = phi i64 [ 1, %223 ], [ 3, %214 ], [ 3, %154 ]
  %227 = add i64 %94, %226
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  %228 = load i8, i8* %82, align 1
  br label %384

229:                                              ; preds = %135, %140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* nonnull align 8 %75, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #8
  %230 = load i32, i32* %11, align 4
  %231 = icmp ult i32 %230, 128
  br i1 %231, label %232, label %246

232:                                              ; preds = %229
  %233 = zext i32 %230 to i64
  %234 = getelementptr inbounds [128 x i8], [128 x i8]* @_ZN4base12_GLOBAL__N_112kUrlUnescapeE, i64 0, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = icmp eq i8 %235, 0
  %237 = icmp ne i32 %230, 32
  %238 = or i1 %84, %237
  %239 = and i1 %236, %238
  br i1 %239, label %240, label %286

240:                                              ; preds = %232
  switch i32 %230, label %242 [
    i32 92, label %241
    i32 47, label %241
  ]

241:                                              ; preds = %240, %240
  br i1 %86, label %244, label %286

242:                                              ; preds = %240
  %243 = icmp ugt i32 %230, 32
  br i1 %243, label %244, label %268

244:                                              ; preds = %242, %241
  switch i32 %230, label %245 [
    i32 92, label %268
    i32 47, label %268
  ]

245:                                              ; preds = %244
  br i1 %88, label %268, label %286

246:                                              ; preds = %229
  switch i32 %230, label %247 [
    i32 128275, label %268
    i32 128274, label %268
    i32 128272, label %268
    i32 128271, label %268
    i32 12288, label %268
    i32 10240, label %268
    i32 8297, label %268
    i32 8296, label %268
    i32 8295, label %268
    i32 8294, label %268
    i32 8287, label %268
    i32 8239, label %268
    i32 8238, label %268
    i32 8237, label %268
    i32 8236, label %268
    i32 8235, label %268
    i32 8234, label %268
    i32 8233, label %268
    i32 8232, label %268
    i32 8207, label %268
    i32 8206, label %268
    i32 8202, label %268
    i32 8201, label %268
    i32 8200, label %268
    i32 8199, label %268
    i32 8198, label %268
    i32 8197, label %268
    i32 8196, label %268
    i32 8195, label %268
    i32 8194, label %268
    i32 8193, label %268
    i32 8192, label %268
    i32 5760, label %268
    i32 1564, label %268
    i32 847, label %268
    i32 173, label %268
    i32 160, label %268
    i32 133, label %268
    i32 8293, label %268
    i32 8292, label %268
    i32 8291, label %268
    i32 8290, label %268
    i32 8289, label %268
    i32 8288, label %268
    i32 8205, label %268
    i32 8204, label %268
    i32 8203, label %268
    i32 6158, label %268
    i32 6157, label %268
    i32 6156, label %268
    i32 6155, label %268
    i32 6069, label %268
    i32 6068, label %268
    i32 4448, label %268
    i32 4447, label %268
    i32 2274, label %268
    i32 1807, label %268
    i32 1757, label %268
    i32 1541, label %268
    i32 1540, label %268
    i32 1539, label %268
    i32 1538, label %268
    i32 1537, label %268
    i32 1536, label %268
  ]

247:                                              ; preds = %246
  switch i32 %230, label %248 [
    i32 12644, label %268
    i32 8303, label %268
    i32 8302, label %268
    i32 8301, label %268
    i32 8300, label %268
    i32 8299, label %268
    i32 8298, label %268
  ]

248:                                              ; preds = %247
  %249 = add i32 %230, -65520
  %250 = icmp ult i32 %249, 9
  %251 = and i32 %230, -16
  %252 = icmp eq i32 %251, 65024
  %253 = or i1 %250, %252
  br i1 %253, label %268, label %254

254:                                              ; preds = %248
  switch i32 %230, label %255 [
    i32 69837, label %268
    i32 69821, label %268
    i32 65531, label %268
    i32 65530, label %268
    i32 65529, label %268
    i32 65440, label %268
    i32 65279, label %268
  ]

255:                                              ; preds = %254
  %256 = add i32 %230, -78896
  %257 = icmp ult i32 %256, 9
  %258 = and i32 %230, -4
  %259 = icmp eq i32 %258, 113824
  %260 = or i1 %257, %259
  %261 = add i32 %230, -119155
  %262 = icmp ult i32 %261, 8
  %263 = or i1 %262, %260
  %264 = xor i1 %263, true
  %265 = and i32 %230, -4096
  %266 = icmp ne i32 %265, 917504
  %267 = and i1 %266, %264
  br i1 %267, label %286, label %268

268:                                              ; preds
  %269 = load i8*, i8** %16, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 %94
  %271 = load i8, i8* %82, align 1
  %272 = icmp slt i8 %271, 0
  %273 = load i64, i64* %59, align 8
  %274 = zext i8 %271 to i64
  %275 = select i1 %272, i64 %273, i64 %274
  %276 = mul i64 %275, 3
  %277 = getelementptr inbounds i8, i8* %270, i64 %276
  %278 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"* nonnull %10, i8* %270, i8* %277) #8
  %279 = load i8, i8* %82, align 1
  %280 = icmp slt i8 %279, 0
  %281 = load i64, i64* %59, align 8
  %282 = zext i8 %279 to i64
  %283 = select i1 %280, i64 %281, i64 %282
  %284 = mul i64 %283, 3
  %285 = add i64 %284, %94
  br label %384

286:                                              ; preds = %245, %255, %232, %241
  %287 = load i8, i8* %82, align 1
  %288 = icmp slt i8 %287, 0
  %289 = load i8*, i8** %58, align 8
  %290 = load i64, i64* %59, align 8
  %291 = zext i8 %287 to i64
  %292 = select i1 %288, i8* %289, i8* %57
  %293 = select i1 %288, i64 %290, i64 %291
  %294 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %292, i64 %293) #8
  %295 = load i8, i8* %82, align 1
  br i1 %18, label %299, label %296

296:                                              ; preds = %286
  %297 = load i64, i64* %59, align 8
  %298 = zext i8 %295 to i64
  br label %376

299:                                              ; preds = %286
  %300 = icmp slt i8 %295, 0
  %301 = load i64, i64* %59, align 8
  %302 = zext i8 %295 to i64
  %303 = select i1 %300, i64 %301, i64 %302
  %304 = icmp eq i64 %303, 0
  br i1 %304, label %376, label %305

305:                                              ; preds = %299, %366
  %306 = phi i64 [ %367, %366 ], [ 0, %299 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #8
  %307 = mul i64 %306, 3
  %308 = add i64 %307, %94
  call void @_ZN4base14OffsetAdjuster10AdjustmentC1Emmm(%"struct.base::OffsetAdjuster::Adjustment"* nonnull %15, i64 %308, i64 3, i64 1) #8
  %309 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %69, align 8
  %310 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %70, align 8
  %311 = icmp ult %"struct.base::OffsetAdjuster::Adjustment"* %309, %310
  %312 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %310 to i64
  br i1 %311, label %313, label %317

313:                                              ; preds = %305
  %314 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %309 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %314, i8* nonnull align 8 %89, i64 24, i1 false) #8
  %315 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %309, i64 1
  %316 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %315 to i64
  store i64 %316, i64* %71, align 8
  br label %366

317:                                              ; preds = %305
  %318 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %309 to i64
  %319 = load i64, i64* %72, align 8
  %320 = sub i64 %318, %319
  %321 = sdiv exact i64 %320, 24
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 768614336404564650
  br i1 %323, label %324, label %326

324:                                              ; preds = %317
  %325 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %325) #6
  unreachable

326:                                              ; preds = %317
  %327 = sub i64 %312, %319
  %328 = sdiv exact i64 %327, 24
  %329 = icmp ult i64 %328, 384307168202282325
  br i1 %329, label %330, label %335

330:                                              ; preds = %326
  %331 = shl nsw i64 %328, 1
  %332 = icmp ult i64 %331, %322
  %333 = select i1 %332, i64 %322, i64 %331
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %340, label %335

335:                                              ; preds = %330, %326
  %336 = phi i64 [ %333, %330 ], [ 768614336404564650, %326 ]
  %337 = mul i64 %336, 24
  %338 = call i8* @_Znwm(i64 %337) #7
  %339 = bitcast i8* %338 to %"struct.base::OffsetAdjuster::Adjustment"*
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %336, %335 ], [ 0, %330 ]
  %342 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %339, %335 ], [ null, %330 ]
  %343 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %342, i64 %321
  %344 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %342, i64 %341
  %345 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %344 to i64
  %346 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %343 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %346, i8* nonnull align 8 %89, i64 24, i1 false) #8
  %347 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %343, i64 1
  %348 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %347 to i64
  %349 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %74, align 8
  %350 = load i64, i64* %71, align 8
  %351 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %349 to i64
  %352 = sub i64 %350, %351
  %353 = sdiv exact i64 %352, -24
  %354 = getelementptr inbounds %"struct.base::OffsetAdjuster::Adjustment", %"struct.base::OffsetAdjuster::Adjustment"* %343, i64 %353
  %355 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %354 to i64
  %356 = icmp sgt i64 %352, 0
  br i1 %356, label %357, label %361

357:                                              ; preds = %340
  %358 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %354 to i8*
  %359 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 8 %359, i64 %352, i1 false) #8
  %360 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %74, align 8
  br label %361

361:                                              ; preds = %357, %340
  %362 = phi %"struct.base::OffsetAdjuster::Adjustment"* [ %349, %340 ], [ %360, %357 ]
  store i64 %355, i64* %72, align 8
  store i64 %348, i64* %71, align 8
  store i64 %345, i64* %73, align 8
  %363 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %362, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %361
  %365 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %362 to i8*
  call void @_ZdlPv(i8* %365) #7
  br label %366

366:                                              ; preds = %313, %361, %364
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #8
  %367 = add nuw i64 %306, 1
  %368 = load i8, i8* %82, align 1
  %369 = icmp slt i8 %368, 0
  %370 = load i64, i64* %59, align 8
  %371 = zext i8 %368 to i64
  %372 = select i1 %369, i64 %370, i64 %371
  %373 = icmp ult i64 %367, %372
  br i1 %373, label %305, label %374

374:                                              ; preds = %366
  %375 = zext i8 %368 to i64
  br label %376

376:                                              ; preds = %374, %296, %299
  %377 = phi i64 [ %298, %296 ], [ %302, %299 ], [ %375, %374 ]
  %378 = phi i64 [ %297, %296 ], [ %301, %299 ], [ %370, %374 ]
  %379 = phi i8 [ %295, %296 ], [ %295, %299 ], [ %368, %374 ]
  %380 = icmp slt i8 %379, 0
  %381 = select i1 %380, i64 %378, i64 %377
  %382 = mul i64 %381, 3
  %383 = add i64 %382, %94
  br label %384

384:                                              ; preds = %376, %268, %225
  %385 = phi i8 [ %379, %376 ], [ %279, %268 ], [ %228, %225 ]
  %386 = phi i64 [ %383, %376 ], [ %285, %268 ], [ %227, %225 ]
  %387 = icmp slt i8 %385, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %389) #7
  br label %390

390:                                              ; preds = %384, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #8
  %391 = icmp ult i64 %386, %53
  br i1 %391, label %392, label %90

392:                                              ; preds = %390
  %393 = load i64, i64* %17, align 8
  br label %92

394:                                              ; preds = %90, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base48UnescapeAndDecodeUTF8URLComponentWithAdjustmentsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS7_EEEE(%"class.std::__1::basic_string.6"* noalias sret, i8*, i64, i32, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.std::__1::basic_string.6", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %1, i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = bitcast %"class.std::__1::basic_string.6"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #8
  %13 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #8
  %16 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call fastcc void @_ZN4base12_GLOBAL__N_130UnescapeURLWithAdjustmentsImplENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEjPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS2_9allocatorIS8_EEEE(%"class.std::__1::basic_string"* nonnull sret %9, i8* %1, i64 %2, i32 %3, %"class.std::__1::vector"* nonnull %8)
  %20 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = load i8*, i8** %17, align 8
  %25 = load i64, i64* %18, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i8* %24, i8* %16
  %28 = select i1 %23, i64 %25, i64 %26
  %29 = call zeroext i1 @_ZN4base26UTF8ToUTF16WithAdjustmentsEPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS6_ISC_EEEE(i8* %27, i64 %28, %"class.std::__1::basic_string.6"* nonnull %7, %"class.std::__1::vector"* %4) #8
  br i1 %29, label %30, label %35

30:                                               ; preds = %5
  %31 = icmp eq %"class.std::__1::vector"* %4, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %30
  call void @_ZN4base14OffsetAdjuster26MergeSequentialAdjustmentsERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPS6_(%"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector"* nonnull %4) #8
  br label %33

33:                                               ; preds = %30, %32
  %34 = bitcast %"class.std::__1::basic_string.6"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %12, i64 24, i1 false) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #8
  br label %36

35:                                               ; preds = %5
  call void @_ZN4base26UTF8ToUTF16WithAdjustmentsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS9_EEEE(%"class.std::__1::basic_string.6"* sret %0, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %6, %"class.std::__1::vector"* %4) #8
  br label %36

36:                                               ; preds = %35, %33
  %37 = load i8, i8* %21, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %40) #7
  br label %41

41:                                               ; preds = %36, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #8
  %42 = load %"struct.base::OffsetAdjuster::Adjustment"*, %"struct.base::OffsetAdjuster::Adjustment"** %14, align 8
  %43 = icmp eq %"struct.base::OffsetAdjuster::Adjustment"* %42, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %41
  %45 = ptrtoint %"struct.base::OffsetAdjuster::Adjustment"* %42 to i64
  %46 = bitcast %"struct.base::OffsetAdjuster::Adjustment"** %15 to i64*
  store i64 %45, i64* %46, align 8
  %47 = bitcast %"struct.base::OffsetAdjuster::Adjustment"* %42 to i8*
  call void @_ZdlPv(i8* %47) #7
  br label %48

48:                                               ; preds = %41, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  %49 = bitcast %"class.std::__1::basic_string.6"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %48
  %54 = bitcast %"class.std::__1::basic_string.6"* %7 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #7
  br label %56

56:                                               ; preds = %48, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base26UTF8ToUTF16WithAdjustmentsEPKcmPNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEPNS2_6vectorINS_14OffsetAdjuster10AdjustmentENS6_ISC_EEEE(i8*, i64, %"class.std::__1::basic_string.6"*, %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZN4base14OffsetAdjuster26MergeSequentialAdjustmentsERKNSt3__16vectorINS0_10AdjustmentENS1_9allocatorIS3_EEEEPS6_(%"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZN4base26UTF8ToUTF16WithAdjustmentsERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_6vectorINS_14OffsetAdjuster10AdjustmentENS1_9allocatorIS9_EEEE(%"class.std::__1::basic_string.6"* sret, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::vector"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base26UnescapeBinaryURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* noalias sret, i8*, i64, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca i8, align 1
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %2, i64* %8, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"* %0, i64 %2) #8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %2, i8 signext 0) #8
  %11 = icmp eq i64 %2, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %4
  %13 = and i32 %3, 16
  %14 = icmp eq i32 %13, 0
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  br label %19

17:                                               ; preds = %54, %4
  %18 = phi i64 [ 0, %4 ], [ %56, %54 ]
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"* %0, i64 %18, i8 signext 0) #8
  ret void

19:                                               ; preds = %58, %12
  %20 = phi i64 [ %2, %12 ], [ %60, %58 ]
  %21 = phi i8* [ %1, %12 ], [ %59, %58 ]
  %22 = phi i64 [ 0, %12 ], [ %56, %58 ]
  %23 = phi i64 [ 0, %12 ], [ %55, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 -86, i8* %6, align 1
  %24 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %21, i64 %20, i64 %23, i8* nonnull %6)
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  %26 = load i8, i8* %6, align 1
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %9, align 8
  %30 = select i1 %28, i8* %29, i8* %10
  %31 = getelementptr inbounds i8, i8* %30, i64 %22
  store i8 %26, i8* %31, align 1
  %32 = add i64 %23, 3
  br label %54

33:                                               ; preds = %19
  br i1 %14, label %45, label %34

34:                                               ; preds = %33
  %35 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %23) #8
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 43
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = load i8, i8* %16, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %9, align 8
  %42 = select i1 %40, i8* %41, i8* %10
  %43 = getelementptr inbounds i8, i8* %42, i64 %22
  store i8 32, i8* %43, align 1
  %44 = add nuw i64 %23, 1
  br label %54

45:                                               ; preds = %33, %34
  %46 = add nuw i64 %23, 1
  %47 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %23) #8
  %48 = load i8, i8* %47, align 1
  %49 = load i8, i8* %16, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %9, align 8
  %52 = select i1 %50, i8* %51, i8* %10
  %53 = getelementptr inbounds i8, i8* %52, i64 %22
  store i8 %48, i8* %53, align 1
  br label %54

54:                                               ; preds = %45, %38, %25
  %55 = phi i64 [ %32, %25 ], [ %44, %38 ], [ %46, %45 ]
  %56 = add i64 %22, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %57 = icmp ult i64 %55, %2
  br i1 %57, label %58, label %17

58:                                               ; preds = %54
  %59 = load i8*, i8** %7, align 8
  %60 = load i64, i64* %8, align 8
  br label %19
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8*, i64, i64, i8* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  store i8* %0, i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  store i64 %1, i64* %7, align 8
  %8 = add i64 %2, 2
  %9 = icmp ult i64 %8, %1
  br i1 %9, label %10, label %34

10:                                               ; preds = %4
  %11 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %2) #8
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 37
  br i1 %13, label %14, label %34

14:                                               ; preds = %10
  %15 = add i64 %2, 1
  %16 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %15) #8
  %17 = load i8, i8* %16, align 1
  %18 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %5, i64 %8) #8
  %19 = load i8, i8* %18, align 1
  %20 = add i8 %17, -48
  %21 = icmp ult i8 %20, 10
  br i1 %21, label %23, label %22

22:                                               ; preds = %14
  switch i8 %17, label %34 [
    i8 102, label %23
    i8 101, label %23
    i8 100, label %23
    i8 99, label %23
    i8 98, label %23
    i8 97, label %23
    i8 70, label %23
    i8 69, label %23
    i8 68, label %23
    i8 67, label %23
    i8 66, label %23
    i8 65, label %23
  ]

23:                                               ; preds = %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %22, %14
  %24 = add i8 %19, -48
  %25 = icmp ult i8 %24, 10
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  switch i8 %19, label %34 [
    i8 102, label %27
    i8 101, label %27
    i8 100, label %27
    i8 99, label %27
    i8 98, label %27
    i8 97, label %27
    i8 70, label %27
    i8 69, label %27
    i8 68, label %27
    i8 67, label %27
    i8 66, label %27
    i8 65, label %27
  ]

27:                                               ; preds = %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %26, %23
  %28 = sext i8 %17 to i32
  %29 = call signext i8 @_ZN4base13HexDigitToIntEw(i32 signext %28) #8
  %30 = shl i8 %29, 4
  %31 = sext i8 %19 to i32
  %32 = call signext i8 @_ZN4base13HexDigitToIntEw(i32 signext %31) #8
  %33 = add i8 %30, %32
  store i8 %33, i8* %3, align 1
  br label %34

34:                                               ; preds = %26, %22, %27, %10, %4
  %35 = phi i1 [ false, %4 ], [ false, %10 ], [ true, %27 ], [ false, %22 ], [ false, %26 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base30UnescapeBinaryURLComponentSafeENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEbPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i1 zeroext, %"class.std::__1::basic_string"* nocapture) local_unnamed_addr #0 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::set", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %15, align 8
  br label %18

16:                                               ; preds = %4
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  store i8 0, i8* %17, align 1
  store i8 0, i8* %9, align 1
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"class.std::__1::set"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %20, align 8
  %25 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %26 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  %27 = bitcast %"class.std::__1::set"* %6 to i64*
  br label %29

28:                                               ; preds = %84
  br i1 %2, label %89, label %198

29:                                               ; preds = %87, %18
  %30 = phi %"class.std::__1::__tree_node"* [ null, %18 ], [ %88, %87 ]
  %31 = phi i8 [ 0, %18 ], [ %85, %87 ]
  %32 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %29, %55
  %34 = phi %"class.std::__1::__tree_node"* [ %58, %55 ], [ %30, %29 ]
  %35 = phi %"class.std::__1::__tree_node_base"** [ %57, %55 ], [ %21, %29 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp ult i8 %31, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, null
  br i1 %42, label %43, label %55

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %59

45:                                               ; preds = %33
  %46 = icmp ult i8 %37, %31
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %59

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  br label %59

55:                                               ; preds = %47, %39
  %56 = phi %"class.std::__1::__tree_node_base"* [ %41, %39 ], [ %49, %47 ]
  %57 = phi %"class.std::__1::__tree_node_base"** [ %40, %39 ], [ %48, %47 ]
  %58 = bitcast %"class.std::__1::__tree_node_base"* %56 to %"class.std::__1::__tree_node"*
  br label %33

59:                                               ; preds = %29, %53, %51, %43
  %60 = phi %"class.std::__1::__tree_end_node"* [ %44, %43 ], [ %52, %51 ], [ %54, %53 ], [ %23, %29 ]
  %61 = phi %"class.std::__1::__tree_node_base"** [ %40, %43 ], [ %48, %51 ], [ %35, %53 ], [ %26, %29 ]
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  %63 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node"* %63, null
  br i1 %64, label %65, label %84

65:                                               ; preds = %59
  %66 = call i8* @_Znwm(i64 32) #7, !noalias !5
  %67 = getelementptr inbounds i8, i8* %66, i64 25
  store i8 %31, i8* %67, align 1, !noalias !5
  %68 = bitcast i8* %66 to %"class.std::__1::__tree_node_base"*
  %69 = getelementptr inbounds i8, i8* %66, i64 16
  %70 = bitcast i8* %69 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %60, %"class.std::__1::__tree_end_node"** %70, align 8
  %71 = bitcast %"class.std::__1::__tree_node_base"** %61 to i8**
  store i8* %66, i8** %71, align 8
  %72 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %73 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 0, i32 0
  %74 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %73, align 8
  %75 = icmp eq %"class.std::__1::__tree_node_base"* %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %65
  %77 = ptrtoint %"class.std::__1::__tree_node_base"* %74 to i64
  store i64 %77, i64* %27, align 8
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %61, align 8
  br label %79

79:                                               ; preds = %76, %65
  %80 = phi %"class.std::__1::__tree_node_base"* [ %68, %65 ], [ %78, %76 ]
  %81 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"* %80) #8
  %82 = load i64, i64* %22, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %22, align 8
  br label %84

84:                                               ; preds = %59, %79
  %85 = add nuw nsw i8 %31, 1
  %86 = icmp eq i8 %85, 32
  br i1 %86, label %28, label %87

87:                                               ; preds = %84
  %88 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  br label %29

89:                                               ; preds = %28
  %90 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %91 = icmp eq %"class.std::__1::__tree_node"* %90, null
  br i1 %91, label %118, label %92

92:                                               ; preds = %89, %114
  %93 = phi %"class.std::__1::__tree_node"* [ %117, %114 ], [ %90, %89 ]
  %94 = phi %"class.std::__1::__tree_node_base"** [ %116, %114 ], [ %21, %89 ]
  %95 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 1
  %96 = load i8, i8* %95, align 1
  %97 = icmp ugt i8 %96, 47
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_node_base"* %100, null
  br i1 %101, label %102, label %114

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %118

104:                                              ; preds = %92
  %105 = icmp eq i8 %96, 47
  br i1 %105, label %112, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 1
  %108 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %107, align 8
  %109 = icmp eq %"class.std::__1::__tree_node_base"* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %118

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %93, i64 0, i32 0, i32 0
  br label %118

114:                                              ; preds = %106, %98
  %115 = phi %"class.std::__1::__tree_node_base"* [ %100, %98 ], [ %108, %106 ]
  %116 = phi %"class.std::__1::__tree_node_base"** [ %99, %98 ], [ %107, %106 ]
  %117 = bitcast %"class.std::__1::__tree_node_base"* %115 to %"class.std::__1::__tree_node"*
  br label %92

118:                                              ; preds = %89, %112, %110, %102
  %119 = phi %"class.std::__1::__tree_end_node"* [ %103, %102 ], [ %111, %110 ], [ %113, %112 ], [ %23, %89 ]
  %120 = phi %"class.std::__1::__tree_node_base"** [ %99, %102 ], [ %107, %110 ], [ %94, %112 ], [ %26, %89 ]
  %121 = bitcast %"class.std::__1::__tree_node_base"** %120 to %"class.std::__1::__tree_node"**
  %122 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %121, align 8
  %123 = icmp eq %"class.std::__1::__tree_node"* %122, null
  br i1 %123, label %124, label %144

124:                                              ; preds = %118
  %125 = call i8* @_Znwm(i64 32) #7, !noalias !8
  %126 = getelementptr inbounds i8, i8* %125, i64 25
  store i8 47, i8* %126, align 1, !noalias !8
  %127 = bitcast i8* %125 to %"class.std::__1::__tree_node_base"*
  %128 = getelementptr inbounds i8, i8* %125, i64 16
  %129 = bitcast i8* %128 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %129, align 8
  %130 = bitcast %"class.std::__1::__tree_node_base"** %120 to i8**
  store i8* %125, i8** %130, align 8
  %131 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %131, i64 0, i32 0
  %133 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %132, align 8
  %134 = icmp eq %"class.std::__1::__tree_node_base"* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %124
  %136 = ptrtoint %"class.std::__1::__tree_node_base"* %133 to i64
  store i64 %136, i64* %27, align 8
  %137 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  br label %138

138:                                              ; preds = %135, %124
  %139 = phi %"class.std::__1::__tree_node_base"* [ %127, %124 ], [ %137, %135 ]
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %140, %"class.std::__1::__tree_node_base"* %139) #8
  %141 = load i64, i64* %22, align 8
  %142 = add i64 %141, 1
  store i64 %142, i64* %22, align 8
  %143 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  br label %144

144:                                              ; preds = %118, %138
  %145 = phi %"class.std::__1::__tree_node"* [ %90, %118 ], [ %143, %138 ]
  %146 = icmp eq %"class.std::__1::__tree_node"* %145, null
  br i1 %146, label %173, label %147

147:                                              ; preds = %144, %169
  %148 = phi %"class.std::__1::__tree_node"* [ %172, %169 ], [ %145, %144 ]
  %149 = phi %"class.std::__1::__tree_node_base"** [ %171, %169 ], [ %21, %144 ]
  %150 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 1
  %151 = load i8, i8* %150, align 1
  %152 = icmp ugt i8 %151, 92
  br i1 %152, label %153, label %159

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %154, align 8
  %156 = icmp eq %"class.std::__1::__tree_node_base"* %155, null
  br i1 %156, label %157, label %169

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 0
  br label %173

159:                                              ; preds = %147
  %160 = icmp eq i8 %151, 92
  br i1 %160, label %167, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 1
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, null
  br i1 %164, label %165, label %169

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 0
  br label %173

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %148, i64 0, i32 0, i32 0
  br label %173

169:                                              ; preds = %161, %153
  %170 = phi %"class.std::__1::__tree_node_base"* [ %155, %153 ], [ %163, %161 ]
  %171 = phi %"class.std::__1::__tree_node_base"** [ %154, %153 ], [ %162, %161 ]
  %172 = bitcast %"class.std::__1::__tree_node_base"* %170 to %"class.std::__1::__tree_node"*
  br label %147

173:                                              ; preds = %144, %167, %165, %157
  %174 = phi %"class.std::__1::__tree_end_node"* [ %158, %157 ], [ %166, %165 ], [ %168, %167 ], [ %23, %144 ]
  %175 = phi %"class.std::__1::__tree_node_base"** [ %154, %157 ], [ %162, %165 ], [ %149, %167 ], [ %26, %144 ]
  %176 = bitcast %"class.std::__1::__tree_node_base"** %175 to %"class.std::__1::__tree_node"**
  %177 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node"* %177, null
  br i1 %178, label %179, label %198

179:                                              ; preds = %173
  %180 = call i8* @_Znwm(i64 32) #7, !noalias !11
  %181 = getelementptr inbounds i8, i8* %180, i64 25
  store i8 92, i8* %181, align 1, !noalias !11
  %182 = bitcast i8* %180 to %"class.std::__1::__tree_node_base"*
  %183 = getelementptr inbounds i8, i8* %180, i64 16
  %184 = bitcast i8* %183 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %174, %"class.std::__1::__tree_end_node"** %184, align 8
  %185 = bitcast %"class.std::__1::__tree_node_base"** %175 to i8**
  store i8* %180, i8** %185, align 8
  %186 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %187 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %186, i64 0, i32 0
  %188 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node_base"* %188, null
  br i1 %189, label %193, label %190

190:                                              ; preds = %179
  %191 = ptrtoint %"class.std::__1::__tree_node_base"* %188 to i64
  store i64 %191, i64* %27, align 8
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %175, align 8
  br label %193

193:                                              ; preds = %190, %179
  %194 = phi %"class.std::__1::__tree_node_base"* [ %182, %179 ], [ %192, %190 ]
  %195 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %195, %"class.std::__1::__tree_node_base"* %194) #8
  %196 = load i64, i64* %22, align 8
  %197 = add i64 %196, 1
  store i64 %197, i64* %22, align 8
  br label %198

198:                                              ; preds = %193, %173, %28
  %199 = icmp eq i64 %1, 0
  br i1 %199, label %234, label %200

200:                                              ; preds = %198, %229
  %201 = phi i64 [ %231, %229 ], [ 0, %198 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  %202 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %0, i64 %1, i64 %201, i8* nonnull %5) #8
  br i1 %202, label %203, label %229

203:                                              ; preds = %200
  %204 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %205 = icmp eq %"class.std::__1::__tree_node"* %204, null
  br i1 %205, label %229, label %206

206:                                              ; preds = %203
  %207 = load i8, i8* %5, align 1
  br label %208

208:                                              ; preds = %208, %206
  %209 = phi %"class.std::__1::__tree_end_node"* [ %23, %206 ], [ %219, %208 ]
  %210 = phi %"class.std::__1::__tree_node"* [ %204, %206 ], [ %220, %208 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %210, i64 0, i32 1
  %212 = load i8, i8* %211, align 1
  %213 = icmp ult i8 %212, %207
  %214 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %210, i64 0, i32 0, i32 1
  %215 = bitcast %"class.std::__1::__tree_node_base"** %214 to %"class.std::__1::__tree_node"**
  %216 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %210, i64 0, i32 0, i32 0
  %217 = bitcast %"class.std::__1::__tree_node"* %210 to %"class.std::__1::__tree_node"**
  %218 = select i1 %213, %"class.std::__1::__tree_node"** %215, %"class.std::__1::__tree_node"** %217
  %219 = select i1 %213, %"class.std::__1::__tree_end_node"* %209, %"class.std::__1::__tree_end_node"* %216
  %220 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %218, align 8
  %221 = icmp eq %"class.std::__1::__tree_node"* %220, null
  br i1 %221, label %222, label %208

222:                                              ; preds = %208
  %223 = icmp eq %"class.std::__1::__tree_end_node"* %219, %23
  br i1 %223, label %229, label %224

224:                                              ; preds = %222
  %225 = bitcast %"class.std::__1::__tree_end_node"* %219 to %"class.std::__1::__tree_node"*
  %226 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %225, i64 0, i32 1
  %227 = load i8, i8* %226, align 1
  %228 = icmp ult i8 %207, %227
  br i1 %228, label %229, label %233

229:                                              ; preds = %200, %203, %222, %224
  %230 = phi i64 [ 3, %224 ], [ 3, %222 ], [ 3, %203 ], [ 1, %200 ]
  %231 = add i64 %201, %230
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %232 = icmp ult i64 %231, %1
  br i1 %232, label %200, label %234

233:                                              ; preds = %224
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  br label %244

234:                                              ; preds = %229, %198
  %235 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #8
  call void @_ZN4base26UnescapeBinaryURLComponentENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEj(%"class.std::__1::basic_string"* nonnull sret %7, i8* %0, i64 %1, i32 1)
  %236 = load i8, i8* %9, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %234
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #7
  br label %241

241:                                              ; preds = %238, %234
  %242 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %242, i8* nonnull align 8 %235, i64 24, i1 false) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #8
  %243 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  br label %244

244:                                              ; preds = %233, %241
  %245 = phi %"class.std::__1::__tree_node"* [ %243, %241 ], [ %204, %233 ]
  %246 = phi i1 [ true, %241 ], [ false, %233 ]
  %247 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %6, i64 0, i32 0
  call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* nonnull %247, %"class.std::__1::__tree_node"* %245) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8
  ret i1 %246
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base20ContainsEncodedBytesENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS1_3setIhNS1_4lessIhEENS1_9allocatorIhEEEE(i8*, i64, %"class.std::__1::set"* dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca i8, align 1
  %5 = icmp eq i64 %1, 0
  br i1 %5, label %43, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  br label %9

9:                                                ; preds = %6, %38
  %10 = phi i64 [ 0, %6 ], [ %40, %38 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 -86, i8* %4, align 1
  %11 = call fastcc zeroext i1 @_ZN4base12_GLOBAL__N_127UnescapeUnsignedByteAtIndexENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEmPh(i8* %0, i64 %1, i64 %10, i8* nonnull %4)
  br i1 %11, label %12, label %38

12:                                               ; preds = %9
  %13 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %14 = icmp eq %"class.std::__1::__tree_node"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %12
  %16 = load i8, i8* %4, align 1
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"class.std::__1::__tree_end_node"* [ %7, %15 ], [ %28, %17 ]
  %19 = phi %"class.std::__1::__tree_node"* [ %13, %15 ], [ %29, %17 ]
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp ult i8 %21, %16
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 1
  %24 = bitcast %"class.std::__1::__tree_node_base"** %23 to %"class.std::__1::__tree_node"**
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %19, i64 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::__tree_node"* %19 to %"class.std::__1::__tree_node"**
  %27 = select i1 %22, %"class.std::__1::__tree_node"** %24, %"class.std::__1::__tree_node"** %26
  %28 = select i1 %22, %"class.std::__1::__tree_end_node"* %18, %"class.std::__1::__tree_end_node"* %25
  %29 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %27, align 8
  %30 = icmp eq %"class.std::__1::__tree_node"* %29, null
  br i1 %30, label %31, label %17

31:                                               ; preds = %17
  %32 = icmp eq %"class.std::__1::__tree_end_node"* %28, %7
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"*
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1
  %36 = load i8, i8* %35, align 1
  %37 = icmp ult i8 %16, %36
  br i1 %37, label %38, label %42

38:                                               ; preds = %9, %33, %31, %12
  %39 = phi i64 [ 3, %12 ], [ 3, %31 ], [ 3, %33 ], [ 1, %9 ]
  %40 = add i64 %10, %39
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %41 = icmp ult i64 %40, %1
  br i1 %41, label %9, label %43

42:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  br label %43

43:                                               ; preds = %38, %3, %42
  %44 = phi i1 [ true, %42 ], [ false, %3 ], [ false, %38 ]
  ret i1 %44
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #2

declare void @_ZN4base14OffsetAdjuster10AdjustmentC1Emmm(%"struct.base::OffsetAdjuster::Adjustment"*, i64, i64, i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare zeroext i1 @_ZN4base20ReadUnicodeCharacterEPKciPiPj(i8*, i32, i32*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPKcEERS5_T_SA_(%"class.std::__1::basic_string"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = zext i8 %8 to i64
  br label %19

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 9223372036854775807
  %18 = add nsw i64 %17, -1
  br label %19

19:                                               ; preds = %10, %12
  %20 = phi i64 [ %14, %12 ], [ %11, %10 ]
  %21 = phi i64 [ %18, %12 ], [ 22, %10 ]
  %22 = ptrtoint i8* %2 to i64
  %23 = sub i64 %22, %4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %307, label %25

25:                                               ; preds = %19
  br i1 %9, label %26, label %31

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  br label %34

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %33 = zext i8 %8 to i64
  br label %34

34:                                               ; preds = %26, %31
  %35 = phi i8* [ %28, %26 ], [ %32, %31 ]
  %36 = phi i64 [ %30, %26 ], [ %33, %31 ]
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = icmp ule i8* %35, %1
  %39 = icmp ugt i8* %37, %1
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %176

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = icmp ugt i64 %23, -17
  %47 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  br i1 %46, label %48, label %50

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %49) #6
  unreachable

50:                                               ; preds = %41
  %51 = icmp ult i64 %23, 23
  br i1 %51, label %52, label %56

52:                                               ; preds = %50
  %53 = trunc i64 %23 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1
  br label %61

56:                                               ; preds = %50
  %57 = add nuw i64 %23, 16
  %58 = and i64 %57, -16
  %59 = tail call i8* @_Znwm(i64 %58) #7
  store i8* %59, i8** %43, align 8
  %60 = or i64 %58, -9223372036854775808
  store i64 %60, i64* %45, align 8
  store i64 %23, i64* %44, align 8
  br label %61

61:                                               ; preds = %56, %52
  %62 = phi i8* [ %42, %52 ], [ %59, %56 ]
  %63 = icmp eq i8* %1, %2
  br i1 %63, label %159, label %64

64:                                               ; preds = %61
  %65 = ptrtoint i8* %2 to i64
  %66 = sub i64 %65, %4
  %67 = icmp ult i64 %66, 32
  br i1 %67, label %149, label %68

68:                                               ; preds = %64
  %69 = and i64 %66, -32
  %70 = getelementptr i8, i8* %1, i64 %69
  %71 = getelementptr i8, i8* %62, i64 %69
  %72 = add i64 %69, -32
  %73 = lshr exact i64 %72, 5
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 3
  %76 = icmp ult i64 %72, 96
  br i1 %76, label %128, label %77

77:                                               ; preds = %68
  %78 = sub nsw i64 %74, %75
  br label %79

79:                                               ; preds = %79, %77
  %80 = phi i64 [ 0, %77 ], [ %125, %79 ]
  %81 = phi i64 [ %78, %77 ], [ %126, %79 ]
  %82 = getelementptr i8, i8* %1, i64 %80
  %83 = getelementptr i8, i8* %62, i64 %80
  %84 = bitcast i8* %82 to <16 x i8>*
  %85 = load <16 x i8>, <16 x i8>* %84, align 1
  %86 = getelementptr i8, i8* %82, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  %88 = load <16 x i8>, <16 x i8>* %87, align 1
  %89 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %89, align 1
  %90 = getelementptr i8, i8* %83, i64 16
  %91 = bitcast i8* %90 to <16 x i8>*
  store <16 x i8> %88, <16 x i8>* %91, align 1
  %92 = or i64 %80, 32
  %93 = getelementptr i8, i8* %1, i64 %92
  %94 = getelementptr i8, i8* %62, i64 %92
  %95 = bitcast i8* %93 to <16 x i8>*
  %96 = load <16 x i8>, <16 x i8>* %95, align 1
  %97 = getelementptr i8, i8* %93, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  %99 = load <16 x i8>, <16 x i8>* %98, align 1
  %100 = bitcast i8* %94 to <16 x i8>*
  store <16 x i8> %96, <16 x i8>* %100, align 1
  %101 = getelementptr i8, i8* %94, i64 16
  %102 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %99, <16 x i8>* %102, align 1
  %103 = or i64 %80, 64
  %104 = getelementptr i8, i8* %1, i64 %103
  %105 = getelementptr i8, i8* %62, i64 %103
  %106 = bitcast i8* %104 to <16 x i8>*
  %107 = load <16 x i8>, <16 x i8>* %106, align 1
  %108 = getelementptr i8, i8* %104, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = bitcast i8* %105 to <16 x i8>*
  store <16 x i8> %107, <16 x i8>* %111, align 1
  %112 = getelementptr i8, i8* %105, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %113, align 1
  %114 = or i64 %80, 96
  %115 = getelementptr i8, i8* %1, i64 %114
  %116 = getelementptr i8, i8* %62, i64 %114
  %117 = bitcast i8* %115 to <16 x i8>*
  %118 = load <16 x i8>, <16 x i8>* %117, align 1
  %119 = getelementptr i8, i8* %115, i64 16
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %118, <16 x i8>* %122, align 1
  %123 = getelementptr i8, i8* %116, i64 16
  %124 = bitcast i8* %123 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %124, align 1
  %125 = add i64 %80, 128
  %126 = add i64 %81, -4
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %128, label %79, !llvm.loop !14

128:                                              ; preds = %79, %68
  %129 = phi i64 [ 0, %68 ], [ %125, %79 ]
  %130 = icmp eq i64 %75, 0
  br i1 %130, label %147, label %131

131:                                              ; preds = %128, %131
  %132 = phi i64 [ %144, %131 ], [ %129, %128 ]
  %133 = phi i64 [ %145, %131 ], [ %75, %128 ]
  %134 = getelementptr i8, i8* %1, i64 %132
  %135 = getelementptr i8, i8* %62, i64 %132
  %136 = bitcast i8* %134 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = getelementptr i8, i8* %134, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1
  %141 = bitcast i8* %135 to <16 x i8>*
  store <16 x i8> %137, <16 x i8>* %141, align 1
  %142 = getelementptr i8, i8* %135, i64 16
  %143 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %143, align 1
  %144 = add i64 %132, 32
  %145 = add i64 %133, -1
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %147, label %131, !llvm.loop !16

147:                                              ; preds = %131, %128
  %148 = icmp eq i64 %66, %69
  br i1 %148, label %159, label %149

149:                                              ; preds = %147, %64
  %150 = phi i8* [ %1, %64 ], [ %70, %147 ]
  %151 = phi i8* [ %62, %64 ], [ %71, %147 ]
  br label %152

152:                                              ; preds = %149, %152
  %153 = phi i8* [ %156, %152 ], [ %150, %149 ]
  %154 = phi i8* [ %157, %152 ], [ %151, %149 ]
  %155 = load i8, i8* %153, align 1
  store i8 %155, i8* %154, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 1
  %157 = getelementptr inbounds i8, i8* %154, i64 1
  %158 = icmp eq i8* %156, %2
  br i1 %158, label %159, label %152, !llvm.loop !18

159:                                              ; preds = %152, %147, %61
  %160 = phi i8* [ %62, %61 ], [ %71, %147 ], [ %157, %152 ]
  store i8 0, i8* %160, align 1
  %161 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %162 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %161, i64 0, i32 1, i32 0
  %163 = load i8, i8* %162, align 1
  %164 = icmp slt i8 %163, 0
  %165 = load i8*, i8** %43, align 8
  %166 = load i64, i64* %44, align 8
  %167 = zext i8 %163 to i64
  %168 = select i1 %164, i8* %165, i8* %42
  %169 = select i1 %164, i64 %166, i64 %167
  %170 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %0, i8* %168, i64 %169) #8
  %171 = load i8, i8* %162, align 1
  %172 = icmp slt i8 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %159
  %174 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %174) #7
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8
  br label %307

176:                                              ; preds = %34
  %177 = sub i64 %21, %20
  %178 = icmp ult i64 %177, %23
  br i1 %178, label %179, label %183

179:                                              ; preds = %176
  %180 = add i64 %20, %23
  %181 = sub i64 %180, %21
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %21, i64 %181, i64 %20, i64 %20, i64 0, i64 0) #8
  %182 = load i8, i8* %7, align 1
  br label %183

183:                                              ; preds = %179, %176
  %184 = phi i8 [ %182, %179 ], [ %8, %176 ]
  %185 = icmp slt i8 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %183
  %187 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load i8*, i8** %187, align 8
  br label %191

189:                                              ; preds = %183
  %190 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi i8* [ %188, %186 ], [ %190, %189 ]
  %193 = getelementptr inbounds i8, i8* %192, i64 %20
  %194 = icmp eq i8* %1, %2
  br i1 %194, label %298, label %195

195:                                              ; preds = %191
  %196 = ptrtoint i8* %2 to i64
  %197 = sub i64 %196, %4
  %198 = icmp ult i64 %197, 32
  br i1 %198, label %288, label %199

199:                                              ; preds = %195
  %200 = sub i64 %20, %4
  %201 = getelementptr i8, i8* %2, i64 %200
  %202 = ptrtoint i8* %201 to i64
  %203 = getelementptr i8, i8* %192, i64 %202
  %204 = icmp ult i8* %193, %2
  %205 = icmp ugt i8* %203, %1
  %206 = and i1 %204, %205
  br i1 %206, label %288, label %207

207:                                              ; preds = %199
  %208 = and i64 %197, -32
  %209 = getelementptr i8, i8* %193, i64 %208
  %210 = getelementptr i8, i8* %1, i64 %208
  %211 = add i64 %208, -32
  %212 = lshr exact i64 %211, 5
  %213 = add nuw nsw i64 %212, 1
  %214 = and i64 %213, 3
  %215 = icmp ult i64 %211, 96
  br i1 %215, label %267, label %216

216:                                              ; preds = %207
  %217 = sub nsw i64 %213, %214
  br label %218

218:                                              ; preds = %218, %216
  %219 = phi i64 [ 0, %216 ], [ %264, %218 ]
  %220 = phi i64 [ %217, %216 ], [ %265, %218 ]
  %221 = getelementptr i8, i8* %193, i64 %219
  %222 = getelementptr i8, i8* %1, i64 %219
  %223 = bitcast i8* %222 to <16 x i8>*
  %224 = load <16 x i8>, <16 x i8>* %223, align 1, !alias.scope !20
  %225 = getelementptr i8, i8* %222, i64 16
  %226 = bitcast i8* %225 to <16 x i8>*
  %227 = load <16 x i8>, <16 x i8>* %226, align 1, !alias.scope !20
  %228 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %224, <16 x i8>* %228, align 1, !alias.scope !23, !noalias !20
  %229 = getelementptr i8, i8* %221, i64 16
  %230 = bitcast i8* %229 to <16 x i8>*
  store <16 x i8> %227, <16 x i8>* %230, align 1, !alias.scope !23, !noalias !20
  %231 = or i64 %219, 32
  %232 = getelementptr i8, i8* %193, i64 %231
  %233 = getelementptr i8, i8* %1, i64 %231
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !20
  %236 = getelementptr i8, i8* %233, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !20
  %239 = bitcast i8* %232 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !23, !noalias !20
  %240 = getelementptr i8, i8* %232, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !23, !noalias !20
  %242 = or i64 %219, 64
  %243 = getelementptr i8, i8* %193, i64 %242
  %244 = getelementptr i8, i8* %1, i64 %242
  %245 = bitcast i8* %244 to <16 x i8>*
  %246 = load <16 x i8>, <16 x i8>* %245, align 1, !alias.scope !20
  %247 = getelementptr i8, i8* %244, i64 16
  %248 = bitcast i8* %247 to <16 x i8>*
  %249 = load <16 x i8>, <16 x i8>* %248, align 1, !alias.scope !20
  %250 = bitcast i8* %243 to <16 x i8>*
  store <16 x i8> %246, <16 x i8>* %250, align 1, !alias.scope !23, !noalias !20
  %251 = getelementptr i8, i8* %243, i64 16
  %252 = bitcast i8* %251 to <16 x i8>*
  store <16 x i8> %249, <16 x i8>* %252, align 1, !alias.scope !23, !noalias !20
  %253 = or i64 %219, 96
  %254 = getelementptr i8, i8* %193, i64 %253
  %255 = getelementptr i8, i8* %1, i64 %253
  %256 = bitcast i8* %255 to <16 x i8>*
  %257 = load <16 x i8>, <16 x i8>* %256, align 1, !alias.scope !20
  %258 = getelementptr i8, i8* %255, i64 16
  %259 = bitcast i8* %258 to <16 x i8>*
  %260 = load <16 x i8>, <16 x i8>* %259, align 1, !alias.scope !20
  %261 = bitcast i8* %254 to <16 x i8>*
  store <16 x i8> %257, <16 x i8>* %261, align 1, !alias.scope !23, !noalias !20
  %262 = getelementptr i8, i8* %254, i64 16
  %263 = bitcast i8* %262 to <16 x i8>*
  store <16 x i8> %260, <16 x i8>* %263, align 1, !alias.scope !23, !noalias !20
  %264 = add i64 %219, 128
  %265 = add i64 %220, -4
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %218, !llvm.loop !25

267:                                              ; preds = %218, %207
  %268 = phi i64 [ 0, %207 ], [ %264, %218 ]
  %269 = icmp eq i64 %214, 0
  br i1 %269, label %286, label %270

270:                                              ; preds = %267, %270
  %271 = phi i64 [ %283, %270 ], [ %268, %267 ]
  %272 = phi i64 [ %284, %270 ], [ %214, %267 ]
  %273 = getelementptr i8, i8* %193, i64 %271
  %274 = getelementptr i8, i8* %1, i64 %271
  %275 = bitcast i8* %274 to <16 x i8>*
  %276 = load <16 x i8>, <16 x i8>* %275, align 1, !alias.scope !20
  %277 = getelementptr i8, i8* %274, i64 16
  %278 = bitcast i8* %277 to <16 x i8>*
  %279 = load <16 x i8>, <16 x i8>* %278, align 1, !alias.scope !20
  %280 = bitcast i8* %273 to <16 x i8>*
  store <16 x i8> %276, <16 x i8>* %280, align 1, !alias.scope !23, !noalias !20
  %281 = getelementptr i8, i8* %273, i64 16
  %282 = bitcast i8* %281 to <16 x i8>*
  store <16 x i8> %279, <16 x i8>* %282, align 1, !alias.scope !23, !noalias !20
  %283 = add i64 %271, 32
  %284 = add i64 %272, -1
  %285 = icmp eq i64 %284, 0
  br i1 %285, label %286, label %270, !llvm.loop !26

286:                                              ; preds = %270, %267
  %287 = icmp eq i64 %197, %208
  br i1 %287, label %298, label %288

288:                                              ; preds = %286, %199, %195
  %289 = phi i8* [ %193, %199 ], [ %193, %195 ], [ %209, %286 ]
  %290 = phi i8* [ %1, %199 ], [ %1, %195 ], [ %210, %286 ]
  br label %291

291:                                              ; preds = %288, %291
  %292 = phi i8* [ %295, %291 ], [ %289, %288 ]
  %293 = phi i8* [ %296, %291 ], [ %290, %288 ]
  %294 = load i8, i8* %293, align 1
  store i8 %294, i8* %292, align 1
  %295 = getelementptr inbounds i8, i8* %292, i64 1
  %296 = getelementptr inbounds i8, i8* %293, i64 1
  %297 = icmp eq i8* %296, %2
  br i1 %297, label %298, label %291, !llvm.loop !27

298:                                              ; preds = %291, %286, %191
  %299 = phi i8* [ %193, %191 ], [ %209, %286 ], [ %295, %291 ]
  store i8 0, i8* %299, align 1
  %300 = add i64 %20, %23
  %301 = load i8, i8* %7, align 1
  %302 = icmp slt i8 %301, 0
  br i1 %302, label %303, label %305

303:                                              ; preds = %298
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %300, i64* %304, align 8
  br label %307

305:                                              ; preds = %298
  %306 = trunc i64 %300 to i8
  store i8 %306, i8* %7, align 1
  br label %307

307:                                              ; preds = %305, %303, %175, %19
  ret %"class.std::__1::basic_string"* %0
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #2

declare signext i8 @_ZN4base13HexDigitToIntEw(i32 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc(%"class.std::__1::basic_string"*, i64, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #8
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE7destroyEPNS_11__tree_nodeIhPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #8
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #7
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !28
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !28
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !28
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeIhNS_4lessIhEENS_9allocatorIhEEE16__construct_nodeIJhEEENS_10unique_ptrINS_11__tree_nodeIhPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !19, !15}
!19 = !{!"llvm.loop.unroll.runtime.disable"}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !15}
!28 = !{i8 0, i8 2}
