; ModuleID = '../../base/third_party/xdg_mime/xdgmimeint.c'
source_filename = "../../base/third_party/xdg_mime/xdgmimeint.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_xdg_utf8_skip_data = internal constant [256 x i8] calign 16
@_xdg_utf8_skip = hidden local_unnamed_addr constant i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_xdg_utf8_skip_data, i64 0, i64 0), align 8
@xdg_mime_type_unknown = external constant [0 x i8], align 1
@xdg_mime_type_textplain = external constant [0 x i8], align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_xdg_utf8_to_ucs4(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = load i8, i8* %0, align 1
  %3 = sext i8 %2 to i32
  %4 = icmp sgt i8 %2, -1
  %5 = and i32 %3, 64
  %6 = icmp eq i32 %5, 0
  %7 = or i1 %4, %6
  br i1 %7, label %42, label %8

8:                                                ; preds = %1
  %9 = and i32 %3, 32
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = and i32 %3, 31
  br label %32

13:                                               ; preds = %8
  %14 = and i32 %3, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = and i32 %3, 15
  br label %32

18:                                               ; preds = %13
  %19 = and i32 %3, 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %18
  %22 = and i32 %3, 7
  br label %32

23:                                               ; preds = %18
  %24 = and i32 %3, 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %23
  %27 = and i32 %3, 3
  br label %32

28:                                               ; preds = %23
  %29 = and i32 %3, 2
  %30 = icmp eq i32 %29, 0
  %31 = and i32 %3, 1
  br i1 %30, label %32, label %42

32:                                               ; preds = %11, %16, %21, %26, %28
  %33 = phi i32 [ %12, %11 ], [ %17, %16 ], [ %22, %21 ], [ %27, %26 ], [ %31, %28 ]
  %34 = phi i32 [ 0, %11 ], [ 1, %16 ], [ 2, %21 ], [ 3, %26 ], [ 4, %28 ]
  %35 = getelementptr inbounds i8, i8* %0, i64 1
  %36 = shl nuw nsw i32 %33, 6
  %37 = load i8, i8* %35, align 1
  %38 = and i8 %37, 63
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = icmp eq i32 %34, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %52, %68, %32, %44, %60, %28, %1
  %43 = phi i32 [ %3, %1 ], [ %3, %28 ], [ %40, %32 ], [ %50, %44 ], [ %58, %52 ], [ %66, %60 ], [ %74, %68 ]
  ret i32 %43

44:                                               ; preds = %32
  %45 = getelementptr inbounds i8, i8* %0, i64 2
  %46 = shl nuw nsw i32 %40, 6
  %47 = load i8, i8* %45, align 1
  %48 = and i8 %47, 63
  %49 = zext i8 %48 to i32
  %50 = or i32 %46, %49
  %51 = icmp eq i32 %34, 1
  br i1 %51, label %42, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds i8, i8* %0, i64 3
  %54 = shl nuw nsw i32 %50, 6
  %55 = load i8, i8* %53, align 1
  %56 = and i8 %55, 63
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  %59 = icmp ugt i32 %34, 2
  br i1 %59, label %60, label %42

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, i8* %0, i64 4
  %62 = shl i32 %58, 6
  %63 = load i8, i8* %61, align 1
  %64 = and i8 %63, 63
  %65 = zext i8 %64 to i32
  %66 = or i32 %62, %65
  %67 = icmp eq i32 %34, 3
  br i1 %67, label %42, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds i8, i8* %0, i64 5
  %70 = shl i32 %66, 6
  %71 = load i8, i8* %69, align 1
  %72 = and i8 %71, 63
  %73 = zext i8 %72 to i32
  %74 = or i32 %70, %73
  br label %42
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_xdg_ucs4_to_lower(i32) local_unnamed_addr #1 {
  %2 = icmp ult i32 %0, 256
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = tail call i32** @__ctype_tolower_loc() #9
  %5 = load i32*, i32** %4, align 8
  %6 = and i32 %0, 255
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds i32, i32* %5, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi i32 [ %9, %3 ], [ %0, %1 ]
  ret i32 %11
}

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_xdg_utf8_validate(i8* nocapture readnone) local_unnamed_addr #3 {
  ret i32 1
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i8* @_xdg_get_base_name(i8* readonly) local_unnamed_addr #1 {
  %2 = icmp eq i8* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call i8* @strrchr(i8* nonnull %0, i32 47) #10
  %5 = icmp eq i8* %4, null
  %6 = getelementptr inbounds i8, i8* %4, i64 1
  %7 = select i1 %5, i8* %0, i8* %6
  ret i8* %7

8:                                                ; preds = %1
  ret i8* null
}

; Function Attrs: nofree nounwind readonly
declare i8* @strrchr(i8*, i32) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias i32* @_xdg_convert_to_ucs4(i8* nocapture readonly, i32* nocapture) local_unnamed_addr #5 {
  %3 = tail call i64 @strlen(i8* %0) #10
  %4 = shl i64 %3, 2
  %5 = add i64 %4, 4
  %6 = tail call noalias i8* @malloc(i64 %5) #11
  %7 = bitcast i8* %6 to i32*
  %8 = load i8, i8* %0, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %67, label %10

10:                                               ; preds = %2, %53
  %11 = phi i64 [ %55, %53 ], [ 0, %2 ]
  %12 = phi i8 [ %63, %53 ], [ %8, %2 ]
  %13 = phi i8* [ %62, %53 ], [ %0, %2 ]
  %14 = sext i8 %12 to i32
  %15 = icmp sgt i8 %12, -1
  %16 = and i32 %14, 64
  %17 = icmp eq i32 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %53, label %19

19:                                               ; preds = %10
  %20 = and i32 %14, 32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = and i32 %14, 31
  br label %43

24:                                               ; preds = %19
  %25 = and i32 %14, 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %24
  %28 = and i32 %14, 15
  br label %43

29:                                               ; preds = %24
  %30 = and i32 %14, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = and i32 %14, 7
  br label %43

34:                                               ; preds = %29
  %35 = and i32 %14, 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = and i32 %14, 3
  br label %43

39:                                               ; preds = %34
  %40 = and i32 %14, 2
  %41 = icmp eq i32 %40, 0
  %42 = and i32 %14, 1
  br i1 %41, label %43, label %53

43:                                               ; preds = %22, %27, %32, %37, %39
  %44 = phi i32 [ %23, %22 ], [ %28, %27 ], [ %33, %32 ], [ %38, %37 ], [ %42, %39 ]
  %45 = phi i32 [ 0, %22 ], [ 1, %27 ], [ 2, %32 ], [ 3, %37 ], [ 4, %39 ]
  %46 = getelementptr inbounds i8, i8* %13, i64 1
  %47 = shl nuw nsw i32 %44, 6
  %48 = load i8, i8* %46, align 1
  %49 = and i8 %48, 63
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  %52 = icmp eq i32 %45, 0
  br i1 %52, label %53, label %71

53:                                               ; preds = %79, %95, %43, %71, %87, %10, %39
  %54 = phi i32 [ %14, %10 ], [ %14, %39 ], [ %51, %43 ], [ %77, %71 ], [ %85, %79 ], [ %93, %87 ], [ %101, %95 ]
  %55 = add nuw i64 %11, 1
  %56 = getelementptr inbounds i32, i32* %7, i64 %11
  store i32 %54, i32* %56, align 4
  %57 = load i8, i8* %13, align 1
  %58 = zext i8 %57 to i64
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* @_xdg_utf8_skip_data, i64 0, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i64
  %62 = getelementptr inbounds i8, i8* %13, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %10

65:                                               ; preds = %53
  %66 = trunc i64 %55 to i32
  br label %67

67:                                               ; preds = %65, %2
  %68 = phi i32 [ 0, %2 ], [ %66, %65 ]
  %69 = zext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %7, i64 %69
  store i32 0, i32* %70, align 4
  store i32 %68, i32* %1, align 4
  ret i32* %7

71:                                               ; preds = %43
  %72 = getelementptr inbounds i8, i8* %13, i64 2
  %73 = shl nuw nsw i32 %51, 6
  %74 = load i8, i8* %72, align 1
  %75 = and i8 %74, 63
  %76 = zext i8 %75 to i32
  %77 = or i32 %73, %76
  %78 = icmp eq i32 %45, 1
  br i1 %78, label %53, label %79

79:                                               ; preds = %71
  %80 = getelementptr inbounds i8, i8* %13, i64 3
  %81 = shl nuw nsw i32 %77, 6
  %82 = load i8, i8* %80, align 1
  %83 = and i8 %82, 63
  %84 = zext i8 %83 to i32
  %85 = or i32 %81, %84
  %86 = icmp ugt i32 %45, 2
  br i1 %86, label %87, label %53

87:                                               ; preds = %79
  %88 = getelementptr inbounds i8, i8* %13, i64 4
  %89 = shl i32 %85, 6
  %90 = load i8, i8* %88, align 1
  %91 = and i8 %90, 63
  %92 = zext i8 %91 to i32
  %93 = or i32 %89, %92
  %94 = icmp eq i32 %45, 3
  br i1 %94, label %53, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds i8, i8* %13, i64 5
  %97 = shl i32 %93, 6
  %98 = load i8, i8* %96, align 1
  %99 = and i8 %98, 63
  %100 = zext i8 %99 to i32
  %101 = or i32 %97, %100
  br label %53
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_xdg_reverse_ucs4(i32* nocapture, i32) local_unnamed_addr #8 {
  %3 = add i32 %1, -1
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %21

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi i64 [ 0, %5 ], [ %14, %7 ]
  %9 = phi i64 [ %6, %5 ], [ %20, %7 ]
  %10 = getelementptr inbounds i32, i32* %0, i64 %8
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds i32, i32* %0, i64 %9
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  store i32 %11, i32* %12, align 4
  %14 = add nuw nsw i64 %8, 1
  %15 = trunc i64 %8 to i32
  %16 = sub i32 -2, %15
  %17 = add i32 %16, %1
  %18 = sext i32 %17 to i64
  %19 = icmp slt i64 %14, %18
  %20 = add nsw i64 %9, -1
  br i1 %19, label %7, label %21

21:                                               ; preds = %7, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_xdg_binary_or_text_fallback(i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %3 = icmp eq i64 %1, 0
  br i1 %3, label %15, label %4

4:                                                ; preds = %2, %10
  %5 = phi i64 [ %11, %10 ], [ 0, %2 ]
  %6 = getelementptr inbounds i8, i8* %0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = icmp ugt i8 %7, 31
  br i1 %8, label %10, label %9

9:                                                ; preds = %4
  switch i8 %7, label %15 [
    i8 13, label %10
    i8 10, label %10
    i8 9, label %10
  ]

10:                                               ; preds = %9, %9, %9, %4
  %11 = add nuw nsw i64 %5, 1
  %12 = icmp ult i64 %11, 128
  %13 = icmp ult i64 %11, %1
  %14 = and i1 %12, %13
  br i1 %14, label %4, label %15

15:                                               ; preds = %10, %9, %2
  %16 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_textplain, i64 0, i64 0), %2 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_unknown, i64 0, i64 0), %9 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @xdg_mime_type_textplain, i64 0, i64 0), %10 ]
  ret i8* %16
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind readonly }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
