; ModuleID = '../../third_party/webrtc/modules/third_party/g722/g722_encode.c'
source_filename = "../../third_party/webrtc/modules/third_party/g722/g722_encode.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.G722EncoderState = type { i32, i32, i32, i32, [24 x i32], [2 x %struct.anon], i32, i32, i32, i32 }
%struct.anon = type { i32, i32, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], [7 x i32], [7 x i32], [7 x i32], [7 x i32], i32, i32 }

@WebRtc_g722_encode.q6 = internal unnamed_addr constant [32 x i32] [i32 0, i32 35, i32 72, i32 110, i32 150, i32 190, i32 233, i32 276, i32 323, i32 370, i32 422, i32 473, i32 530, i32 587, i32 650, i32 714, i32 786, i32 858, i32 940, i32 1023, i32 1121, i32 1219, i32 1339, i32 1458, i32 1612, i32 1765, i32 1980, i32 2195, i32 2557, i32 2919, i32 0, i32 0], align 16
@WebRtc_g722_encode.iln = internal unnamed_addr constant [32 x i32] [i32 0, i32 63, i32 62, i32 31, i32 30, i32 29, i32 28, i32 27, i32 26, i32 25, i32 24, i32 23, i32 22, i32 21, i32 20, i32 19, i32 18, i32 17, i32 16, i32 15, i32 14, i32 13, i32 12, i32 11, i32 10, i32 9, i32 8, i32 7, i32 6, i32 5, i32 4, i32 0], align 16
@WebRtc_g722_encode.ilp = internal unnamed_addr constant [32 x i32] [i32 0, i32 61, i32 60, i32 59, i32 58, i32 57, i32 56, i32 55, i32 54, i32 53, i32 52, i32 51, i32 50, i32 49, i32 48, i32 47, i32 46, i32 45, i32 44, i32 43, i32 42, i32 41, i32 40, i32 39, i32 38, i32 37, i32 36, i32 35, i32 34, i32 33, i32 32, i32 0], align 16
@WebRtc_g722_encode.wl = internal unnamed_addr constant [8 x i32] [i32 -60, i32 -30, i32 58, i32 172, i32 334, i32 538, i32 1198, i32 3042], align 16
@WebRtc_g722_encode.rl42 = internal unnamed_addr constant [16 x i32] [i32 0, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 7, i32 6, i32 5, i32 4, i32 3, i32 2, i32 1, i32 0], align 16
@WebRtc_g722_encode.ilb = internal unnamed_addr constant [32 x i32] [i32 2048, i32 2093, i32 2139, i32 2186, i32 2233, i32 2282, i32 2332, i32 2383, i32 2435, i32 2489, i32 2543, i32 2599, i32 2656, i32 2714, i32 2774, i32 2834, i32 2896, i32 2960, i32 3025, i32 3091, i32 3158, i32 3228, i32 3298, i32 3371, i32 3444, i32 3520, i32 3597, i32 3676, i32 3756, i32 3838, i32 3922, i32 4008], align 16
@WebRtc_g722_encode.qm4 = internal unnamed_addr constant [16 x i32] [i32 0, i32 -20456, i32 -12896, i32 -8968, i32 -6288, i32 -4240, i32 -2584, i32 -1200, i32 20456, i32 12896, i32 8968, i32 6288, i32 4240, i32 2584, i32 1200, i32 0], align 16
@WebRtc_g722_encode.qm2 = internal unnamed_addr constant [4 x i32] [i32 -7408, i32 -1616, i32 7408, i32 1616], align 16
@WebRtc_g722_encode.ihn = internal unnamed_addr constant [3 x i32] [i32 0, i32 1, i32 0], align 4
@WebRtc_g722_encode.ihp = internal unnamed_addr constant [3 x i32] [i32 0, i32 3, i32 2], align 4
@WebRtc_g722_encode.wh = internal unnamed_addr constant [3 x i32] [i32 0, i32 -214, i32 798], align 4
@WebRtc_g722_encode.rh2 = internal unnamed_addr constant [4 x i32] [i32 2, i32 1, i32 2, i32 1], align 16

; Function Attrs: nounwind ssp uwtable
define hidden %struct.G722EncoderState* @WebRtc_g722_encode_init(%struct.G722EncoderState*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.G722EncoderState* %0, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = tail call noalias i8* @malloc(i64 488) #5
  %7 = bitcast i8* %6 to %struct.G722EncoderState*
  %8 = icmp eq i8* %6, null
  br i1 %8, label %35, label %9

9:                                                ; preds = %5, %3
  %10 = phi %struct.G722EncoderState* [ %7, %5 ], [ %0, %3 ]
  %11 = bitcast %struct.G722EncoderState* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %11, i8 0, i64 488, i1 false)
  %12 = icmp eq i32 %1, 48000
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 3
  store i32 6, i32* %14, align 4
  br label %20

15:                                               ; preds = %9
  %16 = icmp eq i32 %1, 56000
  %17 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 3
  br i1 %16, label %18, label %19

18:                                               ; preds = %15
  store i32 7, i32* %17, align 4
  br label %20

19:                                               ; preds = %15
  store i32 8, i32* %17, align 4
  br label %20

20:                                               ; preds = %18, %19, %13
  %21 = phi i32 [ 7, %18 ], [ 8, %19 ], [ 6, %13 ]
  %22 = and i32 %2, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 2
  store i32 1, i32* %25, align 4
  br label %26

26:                                               ; preds = %20, %24
  %27 = and i32 %2, 2
  %28 = icmp ne i32 %27, 0
  %29 = icmp ne i32 %21, 8
  %30 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 1
  %31 = and i1 %29, %28
  %32 = zext i1 %31 to i32
  store i32 %32, i32* %30, align 4
  %33 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 5, i64 0, i32 12
  store i32 32, i32* %33, align 4
  %34 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %10, i64 0, i32 5, i64 1, i32 12
  store i32 8, i32* %34, align 4
  br label %35

35:                                               ; preds = %5, %26
  %36 = phi %struct.G722EncoderState* [ %10, %26 ], [ null, %5 ]
  ret %struct.G722EncoderState* %36
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @WebRtc_g722_encode_release(%struct.G722EncoderState* nocapture) local_unnamed_addr #0 {
  %2 = bitcast %struct.G722EncoderState* %0 to i8*
  tail call void @free(i8* %2) #5
  ret i32 0
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @WebRtc_g722_encode(%struct.G722EncoderState*, i8* nocapture, i16* nocapture readonly, i64) local_unnamed_addr #4 {
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %285, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 0
  %8 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 22
  %10 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 23
  %11 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 0, i32 0
  %12 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 0, i32 12
  %13 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 0, i32 11
  %14 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 3
  %15 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 1, i32 0
  %16 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 1, i32 12
  %17 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 1, i32 11
  %18 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 1
  %19 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 9
  %20 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 8
  %21 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 2
  %22 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 0
  %23 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 4
  %24 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 6
  %25 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 8
  %26 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 10
  %27 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 12
  %28 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 14
  %29 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 16
  %30 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 18
  %31 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 20
  %32 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 21
  %33 = bitcast i32* %21 to <4 x i32>*
  %34 = bitcast i32* %22 to <4 x i32>*
  %35 = bitcast i32* %24 to <4 x i32>*
  %36 = bitcast i32* %23 to <4 x i32>*
  %37 = bitcast i32* %26 to <4 x i32>*
  %38 = bitcast i32* %25 to <4 x i32>*
  %39 = bitcast i32* %28 to <4 x i32>*
  %40 = bitcast i32* %27 to <4 x i32>*
  %41 = bitcast i32* %30 to <4 x i32>*
  %42 = bitcast i32* %29 to <4 x i32>*
  %43 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 0
  %44 = bitcast i32* %43 to <8 x i32>*
  %45 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 8
  %46 = bitcast i32* %45 to <8 x i32>*
  %47 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 4, i64 16
  %48 = bitcast i32* %47 to <8 x i32>*
  br label %49

49:                                               ; preds = %6, %282
  %50 = phi i64 [ 0, %6 ], [ %283, %282 ]
  %51 = phi i32 [ 0, %6 ], [ %122, %282 ]
  %52 = phi i64 [ 0, %6 ], [ %120, %282 ]
  %53 = load i32, i32* %7, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %49
  %56 = add nuw i64 %52, 1
  %57 = getelementptr inbounds i16, i16* %2, i64 %52
  %58 = load i16, i16* %57, align 2
  %59 = ashr i16 %58, 1
  %60 = sext i16 %59 to i32
  br label %119

61:                                               ; preds = %49
  %62 = load i32, i32* %8, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %113

64:                                               ; preds = %61
  %65 = load <4 x i32>, <4 x i32>* %33, align 4
  store <4 x i32> %65, <4 x i32>* %34, align 4
  %66 = load <4 x i32>, <4 x i32>* %35, align 4
  store <4 x i32> %66, <4 x i32>* %36, align 4
  %67 = load <4 x i32>, <4 x i32>* %37, align 4
  store <4 x i32> %67, <4 x i32>* %38, align 4
  %68 = load <4 x i32>, <4 x i32>* %39, align 4
  store <4 x i32> %68, <4 x i32>* %40, align 4
  %69 = load <4 x i32>, <4 x i32>* %41, align 4
  store <4 x i32> %69, <4 x i32>* %42, align 4
  %70 = load i32, i32* %9, align 4
  store i32 %70, i32* %31, align 4
  %71 = load i32, i32* %10, align 4
  store i32 %71, i32* %32, align 4
  %72 = add nuw i64 %52, 1
  %73 = getelementptr inbounds i16, i16* %2, i64 %52
  %74 = load i16, i16* %73, align 2
  %75 = sext i16 %74 to i32
  store i32 %75, i32* %9, align 4
  %76 = getelementptr inbounds i16, i16* %2, i64 %72
  %77 = load i16, i16* %76, align 2
  %78 = sext i16 %77 to i32
  store i32 %78, i32* %10, align 4
  %79 = load <8 x i32>, <8 x i32>* %44, align 4
  %80 = shufflevector <8 x i32> %79, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %81 = shufflevector <8 x i32> %79, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %82 = mul nsw <4 x i32> %80, <i32 3, i32 -11, i32 12, i32 32>
  %83 = mul nsw <4 x i32> %81, <i32 -11, i32 53, i32 -156, i32 362>
  %84 = load <8 x i32>, <8 x i32>* %46, align 4
  %85 = shufflevector <8 x i32> %84, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %86 = shufflevector <8 x i32> %84, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %87 = mul nsw <4 x i32> %85, <i32 -210, i32 951, i32 3876, i32 -805>
  %88 = add nsw <4 x i32> %87, %82
  %89 = mul nsw <4 x i32> %86, <i32 -805, i32 3876, i32 951, i32 -210>
  %90 = add nsw <4 x i32> %89, %83
  %91 = load <8 x i32>, <8 x i32>* %48, align 4
  %92 = shufflevector <8 x i32> %91, <8 x i32> undef, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %93 = shufflevector <8 x i32> %91, <8 x i32> undef, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %94 = mul nsw <4 x i32> %92, <i32 362, i32 -156, i32 53, i32 -11>
  %95 = add nsw <4 x i32> %94, %88
  %96 = mul nsw <4 x i32> %93, <i32 32, i32 12, i32 -11, i32 3>
  %97 = add nsw <4 x i32> %96, %90
  %98 = shufflevector <4 x i32> %97, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %99 = add <4 x i32> %97, %98
  %100 = shufflevector <4 x i32> %99, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %101 = add <4 x i32> %99, %100
  %102 = extractelement <4 x i32> %101, i32 0
  %103 = shufflevector <4 x i32> %95, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %104 = add <4 x i32> %95, %103
  %105 = shufflevector <4 x i32> %104, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %106 = add <4 x i32> %104, %105
  %107 = extractelement <4 x i32> %106, i32 0
  %108 = add i64 %52, 2
  %109 = add nsw i32 %107, %102
  %110 = ashr i32 %109, 14
  %111 = sub nsw i32 %102, %107
  %112 = ashr i32 %111, 14
  br label %119

113:                                              ; preds = %61
  %114 = add nuw i64 %52, 1
  %115 = getelementptr inbounds i16, i16* %2, i64 %52
  %116 = load i16, i16* %115, align 2
  %117 = ashr i16 %116, 1
  %118 = sext i16 %117 to i32
  br label %119

119:                                              ; preds = %113, %64, %55
  %120 = phi i64 [ %56, %55 ], [ %114, %113 ], [ %108, %64 ]
  %121 = phi i32 [ %60, %55 ], [ %118, %113 ], [ %110, %64 ]
  %122 = phi i32 [ %60, %55 ], [ %51, %113 ], [ %112, %64 ]
  %123 = load i32, i32* %11, align 4
  %124 = sub nsw i32 %121, %123
  %125 = add i32 %124, 32768
  %126 = icmp ult i32 %125, 65536
  %127 = trunc i32 %124 to i16
  %128 = icmp sgt i32 %124, 32767
  %129 = select i1 %128, i16 32767, i16 -32768
  %130 = select i1 %126, i16 %127, i16 %129
  %131 = ashr i16 %130, 15
  %132 = xor i16 %131, %130
  %133 = sext i16 %132 to i32
  %134 = load i32, i32* %12, align 4
  br label %135

135:                                              ; preds = %293, %119
  %136 = phi i64 [ 1, %119 ], [ %294, %293 ]
  %137 = phi i32 [ 1, %119 ], [ %295, %293 ]
  %138 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_encode.q6, i64 0, i64 %136
  %139 = load i32, i32* %138, align 4
  %140 = mul nsw i32 %134, %139
  %141 = ashr i32 %140, 12
  %142 = icmp sgt i32 %141, %133
  br i1 %142, label %146, label %143

143:                                              ; preds = %135
  %144 = add nuw nsw i64 %136, 1
  %145 = icmp eq i64 %144, 30
  br i1 %145, label %149, label %287

146:                                              ; preds = %287, %135
  %147 = phi i64 [ %136, %135 ], [ %144, %287 ]
  %148 = trunc i64 %147 to i32
  br label %151

149:                                              ; preds = %143
  %150 = add nuw nsw i32 %137, 1
  br label %151

151:                                              ; preds = %149, %146
  %152 = phi i32 [ %148, %146 ], [ %150, %149 ]
  %153 = icmp slt i16 %130, 0
  %154 = zext i32 %152 to i64
  %155 = select i1 %153, [32 x i32]* @WebRtc_g722_encode.iln, [32 x i32]* @WebRtc_g722_encode.ilp
  %156 = getelementptr inbounds [32 x i32], [32 x i32]* %155, i64 0, i64 %154
  %157 = load i32, i32* %156, align 4
  %158 = ashr i32 %157, 2
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds [16 x i32], [16 x i32]* @WebRtc_g722_encode.qm4, i64 0, i64 %159
  %161 = load i32, i32* %160, align 4
  %162 = mul nsw i32 %134, %161
  %163 = ashr i32 %162, 15
  %164 = getelementptr inbounds [16 x i32], [16 x i32]* @WebRtc_g722_encode.rl42, i64 0, i64 %159
  %165 = load i32, i32* %164, align 4
  %166 = load i32, i32* %13, align 4
  %167 = mul nsw i32 %166, 127
  %168 = ashr i32 %167, 7
  %169 = sext i32 %165 to i64
  %170 = getelementptr inbounds [8 x i32], [8 x i32]* @WebRtc_g722_encode.wl, i64 0, i64 %169
  %171 = load i32, i32* %170, align 4
  %172 = add nsw i32 %168, %171
  store i32 %172, i32* %13, align 4
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %151
  %175 = icmp sgt i32 %172, 18432
  br i1 %175, label %176, label %178

176:                                              ; preds = %174, %151
  %177 = phi i32 [ 0, %151 ], [ 18432, %174 ]
  store i32 %177, i32* %13, align 4
  br label %178

178:                                              ; preds = %176, %174
  %179 = phi i32 [ %172, %174 ], [ %177, %176 ]
  %180 = lshr i32 %179, 6
  %181 = and i32 %180, 31
  %182 = lshr i32 %179, 11
  %183 = sub nsw i32 8, %182
  %184 = icmp sgt i32 %179, 18431
  %185 = zext i32 %181 to i64
  %186 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_encode.ilb, i64 0, i64 %185
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %182, -8
  %189 = shl i32 %187, %188
  %190 = ashr i32 %187, %183
  %191 = select i1 %184, i32 %189, i32 %190
  %192 = shl i32 %191, 2
  store i32 %192, i32* %12, align 4
  tail call fastcc void @block4(%struct.G722EncoderState* %0, i32 0, i32 %163)
  %193 = load i32, i32* %8, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %198, label %195

195:                                              ; preds = %178
  %196 = or i32 %157, 192
  %197 = load i32, i32* %14, align 4
  br label %256

198:                                              ; preds = %178
  %199 = load i32, i32* %15, align 4
  %200 = sub nsw i32 %122, %199
  %201 = add i32 %200, 32768
  %202 = icmp ult i32 %201, 65536
  %203 = trunc i32 %200 to i16
  %204 = icmp sgt i32 %200, 32767
  %205 = select i1 %204, i16 32767, i16 -32768
  %206 = select i1 %202, i16 %203, i16 %205
  %207 = ashr i16 %206, 15
  %208 = xor i16 %207, %206
  %209 = sext i16 %208 to i32
  %210 = load i32, i32* %16, align 4
  %211 = mul nsw i32 %210, 564
  %212 = ashr i32 %211, 12
  %213 = icmp sgt i32 %212, %209
  %214 = select i1 %213, i64 1, i64 2
  %215 = icmp slt i16 %206, 0
  %216 = select i1 %215, [3 x i32]* @WebRtc_g722_encode.ihn, [3 x i32]* @WebRtc_g722_encode.ihp
  %217 = getelementptr inbounds [3 x i32], [3 x i32]* %216, i64 0, i64 %214
  %218 = load i32, i32* %217, align 4
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds [4 x i32], [4 x i32]* @WebRtc_g722_encode.qm2, i64 0, i64 %219
  %221 = load i32, i32* %220, align 4
  %222 = mul nsw i32 %221, %210
  %223 = ashr i32 %222, 15
  %224 = getelementptr inbounds [4 x i32], [4 x i32]* @WebRtc_g722_encode.rh2, i64 0, i64 %219
  %225 = load i32, i32* %224, align 4
  %226 = load i32, i32* %17, align 4
  %227 = mul nsw i32 %226, 127
  %228 = ashr i32 %227, 7
  %229 = sext i32 %225 to i64
  %230 = getelementptr inbounds [3 x i32], [3 x i32]* @WebRtc_g722_encode.wh, i64 0, i64 %229
  %231 = load i32, i32* %230, align 4
  %232 = add nsw i32 %228, %231
  store i32 %232, i32* %17, align 4
  %233 = icmp slt i32 %232, 0
  br i1 %233, label %236, label %234

234:                                              ; preds = %198
  %235 = icmp sgt i32 %232, 22528
  br i1 %235, label %236, label %238

236:                                              ; preds = %234, %198
  %237 = phi i32 [ 0, %198 ], [ 22528, %234 ]
  store i32 %237, i32* %17, align 4
  br label %238

238:                                              ; preds = %236, %234
  %239 = phi i32 [ %232, %234 ], [ %237, %236 ]
  %240 = lshr i32 %239, 6
  %241 = and i32 %240, 31
  %242 = lshr i32 %239, 11
  %243 = sub nsw i32 10, %242
  %244 = icmp sgt i32 %239, 22527
  %245 = zext i32 %241 to i64
  %246 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_encode.ilb, i64 0, i64 %245
  %247 = load i32, i32* %246, align 4
  %248 = add nsw i32 %242, -10
  %249 = shl i32 %247, %248
  %250 = ashr i32 %247, %243
  %251 = select i1 %244, i32 %249, i32 %250
  %252 = shl i32 %251, 2
  store i32 %252, i32* %16, align 4
  tail call fastcc void @block4(%struct.G722EncoderState* %0, i32 1, i32 %223)
  %253 = shl i32 %218, 6
  %254 = or i32 %253, %157
  %255 = load i32, i32* %14, align 4
  br label %256

256:                                              ; preds = %238, %195
  %257 = phi i32 [ %255, %238 ], [ %197, %195 ]
  %258 = phi i32 [ %254, %238 ], [ %196, %195 ]
  %259 = sub nsw i32 8, %257
  %260 = ashr i32 %258, %259
  %261 = load i32, i32* %18, align 4
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %278, label %263

263:                                              ; preds = %256
  %264 = load i32, i32* %19, align 4
  %265 = shl i32 %260, %264
  %266 = load i32, i32* %20, align 4
  %267 = or i32 %266, %265
  store i32 %267, i32* %20, align 4
  %268 = add nsw i32 %257, %264
  store i32 %268, i32* %19, align 4
  %269 = icmp sgt i32 %268, 7
  br i1 %269, label %270, label %282

270:                                              ; preds = %263
  %271 = trunc i32 %267 to i8
  %272 = add i64 %50, 1
  %273 = getelementptr inbounds i8, i8* %1, i64 %50
  store i8 %271, i8* %273, align 1
  %274 = load i32, i32* %19, align 4
  %275 = add nsw i32 %274, -8
  store i32 %275, i32* %19, align 4
  %276 = load i32, i32* %20, align 4
  %277 = lshr i32 %276, 8
  store i32 %277, i32* %20, align 4
  br label %282

278:                                              ; preds = %256
  %279 = trunc i32 %260 to i8
  %280 = add i64 %50, 1
  %281 = getelementptr inbounds i8, i8* %1, i64 %50
  store i8 %279, i8* %281, align 1
  br label %282

282:                                              ; preds = %263, %270, %278
  %283 = phi i64 [ %272, %270 ], [ %50, %263 ], [ %280, %278 ]
  %284 = icmp ult i64 %120, %3
  br i1 %284, label %49, label %285

285:                                              ; preds = %282, %4
  %286 = phi i64 [ 0, %4 ], [ %283, %282 ]
  ret i64 %286

287:                                              ; preds = %143
  %288 = getelementptr inbounds [32 x i32], [32 x i32]* @WebRtc_g722_encode.q6, i64 0, i64 %144
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %134, %289
  %291 = ashr i32 %290, 12
  %292 = icmp sgt i32 %291, %133
  br i1 %292, label %146, label %293

293:                                              ; preds = %287
  %294 = add nuw nsw i64 %136, 2
  %295 = add nuw nsw i32 %137, 2
  br label %135
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc void @block4(%struct.G722EncoderState*, i32, i32) unnamed_addr #4 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 0
  store i32 %2, i32* %5, align 4
  %6 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, %2
  %9 = add i32 %8, 32768
  %10 = icmp ult i32 %9, 65536
  %11 = icmp sgt i32 %8, 32767
  %12 = select i1 %11, i32 32767, i32 32768
  %13 = select i1 %10, i32 %8, i32 %12
  %14 = shl i32 %13, 16
  %15 = ashr exact i32 %14, 16
  %16 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 0
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %2
  %20 = add i32 %19, 32768
  %21 = icmp ult i32 %20, 65536
  %22 = icmp sgt i32 %19, 32767
  %23 = select i1 %22, i32 32767, i32 32768
  %24 = select i1 %21, i32 %19, i32 %23
  %25 = shl i32 %24, 16
  %26 = ashr exact i32 %25, 16
  %27 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 0
  store i32 %26, i32* %27, align 4
  %28 = ashr i32 %25, 31
  %29 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 0
  %30 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = ashr i32 %31, 15
  %33 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 1
  %34 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 6, i64 2
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 15
  %37 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 2
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 4, i64 1
  %39 = load i32, i32* %38, align 4
  %40 = shl i32 %39, 2
  %41 = add i32 %40, 32768
  %42 = icmp ult i32 %41, 65536
  %43 = icmp sgt i32 %40, 32767
  %44 = select i1 %43, i32 32767, i32 32768
  %45 = select i1 %42, i32 %40, i32 %44
  %46 = shl i32 %45, 16
  %47 = ashr exact i32 %46, 16
  %48 = icmp eq i32 %28, %32
  %49 = sub nsw i32 0, %47
  %50 = select i1 %48, i32 %49, i32 %47
  %51 = icmp slt i32 %50, 32767
  %52 = select i1 %51, i32 %50, i32 32767
  %53 = ashr i32 %52, 7
  %54 = icmp eq i32 %28, %36
  %55 = select i1 %54, i32 128, i32 -128
  %56 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 4, i64 2
  %57 = load i32, i32* %56, align 4
  %58 = mul nsw i32 %57, 32512
  %59 = ashr i32 %58, 15
  %60 = add nsw i32 %59, %55
  %61 = add nsw i32 %60, %53
  %62 = icmp sgt i32 %61, -12288
  %63 = select i1 %62, i32 %61, i32 -12288
  %64 = icmp slt i32 %63, 12288
  %65 = select i1 %64, i32 %63, i32 12288
  %66 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 5, i64 2
  store i32 %65, i32* %66, align 4
  %67 = ashr i32 %25, 31
  store i32 %67, i32* %29, align 4
  store i32 %32, i32* %33, align 4
  %68 = icmp eq i32 %67, %32
  %69 = select i1 %68, i32 192, i32 -192
  %70 = mul nsw i32 %39, 32640
  %71 = ashr i32 %70, 15
  %72 = add nsw i32 %69, %71
  %73 = add nsw i32 %72, 32768
  %74 = icmp ult i32 %73, 65536
  %75 = icmp sgt i32 %72, 32767
  %76 = select i1 %75, i32 32767, i32 32768
  %77 = select i1 %74, i32 %72, i32 %76
  %78 = shl i32 %77, 16
  %79 = ashr exact i32 %78, 16
  %80 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 5, i64 1
  store i32 %79, i32* %80, align 4
  %81 = sub nsw i32 48128, %65
  %82 = icmp ult i32 %81, 65536
  %83 = sub nsw i32 15360, %65
  %84 = select i1 %82, i32 %83, i32 -32768
  %85 = icmp sgt i32 %79, %84
  br i1 %85, label %89, label %86

86:                                               ; preds = %3
  %87 = sub nsw i32 0, %84
  %88 = icmp slt i32 %79, %87
  br i1 %88, label %89, label %91

89:                                               ; preds = %86, %3
  %90 = phi i32 [ %84, %3 ], [ %87, %86 ]
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %86
  %92 = icmp eq i32 %2, 0
  %93 = select i1 %92, i32 0, i32 128
  %94 = ashr i32 %2, 15
  store i32 %94, i32* %29, align 4
  %95 = sub nsw i32 0, %93
  %96 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 1
  %97 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 2
  %98 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 3
  %99 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 4
  %100 = bitcast i32* %96 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4
  %102 = ashr <4 x i32> %101, <i32 15, i32 15, i32 15, i32 15>
  %103 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 1
  %104 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 1
  %105 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 2
  %106 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 3
  %107 = bitcast i32* %33 to <4 x i32>*
  store <4 x i32> %102, <4 x i32>* %107, align 4
  %108 = insertelement <4 x i32> undef, i32 %94, i32 0
  %109 = shufflevector <4 x i32> %108, <4 x i32> undef, <4 x i32> zeroinitializer
  %110 = icmp eq <4 x i32> %102, %109
  %111 = insertelement <4 x i32> undef, i32 %93, i32 0
  %112 = shufflevector <4 x i32> %111, <4 x i32> undef, <4 x i32> zeroinitializer
  %113 = insertelement <4 x i32> undef, i32 %95, i32 0
  %114 = shufflevector <4 x i32> %113, <4 x i32> undef, <4 x i32> zeroinitializer
  %115 = select <4 x i1> %110, <4 x i32> %112, <4 x i32> %114
  %116 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 4
  %117 = bitcast i32* %103 to <4 x i32>*
  %118 = load <4 x i32>, <4 x i32>* %117, align 4
  %119 = mul nsw <4 x i32> %118, <i32 32640, i32 32640, i32 32640, i32 32640>
  %120 = ashr <4 x i32> %119, <i32 15, i32 15, i32 15, i32 15>
  %121 = add nsw <4 x i32> %120, %115
  %122 = add nsw <4 x i32> %121, <i32 32768, i32 32768, i32 32768, i32 32768>
  %123 = icmp ult <4 x i32> %122, <i32 65536, i32 65536, i32 65536, i32 65536>
  %124 = icmp sgt <4 x i32> %121, <i32 32767, i32 32767, i32 32767, i32 32767>
  %125 = select <4 x i1> %124, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> <i32 32768, i32 32768, i32 32768, i32 32768>
  %126 = select <4 x i1> %123, <4 x i32> %121, <4 x i32> %125
  %127 = shl <4 x i32> %126, <i32 16, i32 16, i32 16, i32 16>
  %128 = ashr exact <4 x i32> %127, <i32 16, i32 16, i32 16, i32 16>
  %129 = bitcast i32* %104 to <4 x i32>*
  store <4 x i32> %128, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 5
  %131 = load i32, i32* %130, align 4
  %132 = ashr i32 %131, 15
  %133 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 5
  store i32 %132, i32* %133, align 4
  %134 = icmp eq i32 %132, %94
  %135 = select i1 %134, i32 %93, i32 %95
  %136 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 5
  %137 = load i32, i32* %136, align 4
  %138 = mul nsw i32 %137, 32640
  %139 = ashr i32 %138, 15
  %140 = add nsw i32 %139, %135
  %141 = add nsw i32 %140, 32768
  %142 = icmp ult i32 %141, 65536
  %143 = icmp sgt i32 %140, 32767
  %144 = select i1 %143, i32 32767, i32 32768
  %145 = select i1 %142, i32 %140, i32 %144
  %146 = shl i32 %145, 16
  %147 = ashr exact i32 %146, 16
  %148 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 5
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 7, i64 6
  %150 = load i32, i32* %149, align 4
  %151 = ashr i32 %150, 15
  %152 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 10, i64 6
  store i32 %151, i32* %152, align 4
  %153 = load i32, i32* %29, align 4
  %154 = icmp eq i32 %151, %153
  %155 = select i1 %154, i32 %93, i32 %95
  %156 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 8, i64 6
  %157 = load i32, i32* %156, align 4
  %158 = mul nsw i32 %157, 32640
  %159 = ashr i32 %158, 15
  %160 = add nsw i32 %159, %155
  %161 = add nsw i32 %160, 32768
  %162 = icmp ult i32 %161, 65536
  %163 = icmp sgt i32 %160, 32767
  %164 = select i1 %163, i32 32767, i32 32768
  %165 = select i1 %162, i32 %160, i32 %164
  %166 = shl i32 %165, 16
  %167 = ashr exact i32 %166, 16
  %168 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 9, i64 6
  store i32 %167, i32* %168, align 4
  store i32 %131, i32* %149, align 4
  store i32 %167, i32* %156, align 4
  %169 = extractelement <4 x i32> %101, i32 3
  store i32 %169, i32* %130, align 4
  store i32 %147, i32* %136, align 4
  %170 = extractelement <4 x i32> %101, i32 2
  store i32 %170, i32* %99, align 4
  %171 = extractelement <4 x i32> %128, i32 3
  store i32 %171, i32* %116, align 4
  %172 = load i32, i32* %97, align 4
  store i32 %172, i32* %98, align 4
  %173 = extractelement <4 x i32> %128, i32 2
  store i32 %173, i32* %106, align 4
  %174 = load i32, i32* %96, align 4
  store i32 %174, i32* %97, align 4
  %175 = extractelement <4 x i32> %128, i32 1
  store i32 %175, i32* %105, align 4
  %176 = load i32, i32* %5, align 4
  store i32 %176, i32* %96, align 4
  %177 = load i32, i32* %104, align 4
  store i32 %177, i32* %103, align 4
  %178 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 1
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 3, i64 2
  store i32 %179, i32* %180, align 4
  %181 = load i32, i32* %30, align 4
  store i32 %181, i32* %34, align 4
  %182 = load i32, i32* %66, align 4
  store i32 %182, i32* %56, align 4
  %183 = load i32, i32* %16, align 4
  store i32 %183, i32* %178, align 4
  %184 = load i32, i32* %27, align 4
  store i32 %184, i32* %30, align 4
  %185 = load i32, i32* %80, align 4
  store i32 %185, i32* %38, align 4
  %186 = shl nsw i32 %183, 1
  %187 = add i32 %186, 32768
  %188 = icmp ult i32 %187, 65536
  %189 = icmp sgt i32 %183, 16383
  %190 = select i1 %189, i32 32767, i32 32768
  %191 = select i1 %188, i32 %186, i32 %190
  %192 = shl i32 %191, 16
  %193 = ashr exact i32 %192, 16
  %194 = mul nsw i32 %193, %185
  %195 = ashr i32 %194, 15
  %196 = shl nsw i32 %179, 1
  %197 = add i32 %196, 32768
  %198 = icmp ult i32 %197, 65536
  %199 = icmp sgt i32 %179, 16383
  %200 = select i1 %199, i32 32767, i32 32768
  %201 = select i1 %198, i32 %196, i32 %200
  %202 = shl i32 %201, 16
  %203 = ashr exact i32 %202, 16
  %204 = mul nsw i32 %203, %182
  %205 = ashr i32 %204, 15
  %206 = add nsw i32 %205, %195
  %207 = add nsw i32 %206, 32768
  %208 = icmp ult i32 %207, 65536
  %209 = icmp sgt i32 %206, 32767
  %210 = select i1 %209, i32 32767, i32 32768
  %211 = select i1 %208, i32 %206, i32 %210
  %212 = shl i32 %211, 16
  %213 = ashr exact i32 %212, 16
  %214 = getelementptr inbounds %struct.G722EncoderState, %struct.G722EncoderState* %0, i64 0, i32 5, i64 %4, i32 1
  store i32 %213, i32* %214, align 4
  %215 = shl nsw i32 %131, 1
  %216 = add i32 %215, 32768
  %217 = icmp ult i32 %216, 65536
  %218 = icmp sgt i32 %131, 16383
  %219 = select i1 %218, i32 32767, i32 32768
  %220 = select i1 %217, i32 %215, i32 %219
  %221 = shl i32 %220, 16
  %222 = ashr exact i32 %221, 16
  %223 = mul nsw i32 %222, %167
  %224 = ashr i32 %223, 15
  %225 = shl nsw i32 %169, 1
  %226 = add i32 %225, 32768
  %227 = icmp ult i32 %226, 65536
  %228 = icmp sgt i32 %169, 16383
  %229 = select i1 %228, i32 32767, i32 32768
  %230 = select i1 %227, i32 %225, i32 %229
  %231 = shl i32 %230, 16
  %232 = ashr exact i32 %231, 16
  %233 = mul nsw i32 %232, %147
  %234 = ashr i32 %233, 15
  %235 = load i32, i32* %96, align 4
  %236 = insertelement <4 x i32> undef, i32 %235, i32 0
  %237 = insertelement <4 x i32> %236, i32 %174, i32 1
  %238 = insertelement <4 x i32> %237, i32 %172, i32 2
  %239 = shufflevector <4 x i32> %238, <4 x i32> %101, <4 x i32> <i32 0, i32 1, i32 2, i32 6>
  %240 = shl nsw <4 x i32> %239, <i32 1, i32 1, i32 1, i32 1>
  %241 = add <4 x i32> %240, <i32 32768, i32 32768, i32 32768, i32 32768>
  %242 = icmp ult <4 x i32> %241, <i32 65536, i32 65536, i32 65536, i32 65536>
  %243 = icmp sgt <4 x i32> %239, <i32 16383, i32 16383, i32 16383, i32 16383>
  %244 = select <4 x i1> %243, <4 x i32> <i32 32767, i32 32767, i32 32767, i32 32767>, <4 x i32> <i32 32768, i32 32768, i32 32768, i32 32768>
  %245 = select <4 x i1> %242, <4 x i32> %240, <4 x i32> %244
  %246 = shl <4 x i32> %245, <i32 16, i32 16, i32 16, i32 16>
  %247 = ashr exact <4 x i32> %246, <i32 16, i32 16, i32 16, i32 16>
  %248 = bitcast i32* %103 to <2 x i32>*
  %249 = load <2 x i32>, <2 x i32>* %248, align 4
  %250 = shufflevector <2 x i32> %249, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %251 = shufflevector <4 x i32> %250, <4 x i32> %128, <4 x i32> <i32 0, i32 1, i32 6, i32 7>
  %252 = mul nsw <4 x i32> %247, %251
  %253 = ashr <4 x i32> %252, <i32 15, i32 15, i32 15, i32 15>
  %254 = shufflevector <4 x i32> %253, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %255 = add nsw <4 x i32> %253, %254
  %256 = shufflevector <4 x i32> %255, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %257 = add nsw <4 x i32> %255, %256
  %258 = extractelement <4 x i32> %257, i32 0
  %259 = add nsw i32 %258, %234
  %260 = add nsw i32 %259, %224
  %261 = add nsw i32 %260, 32768
  %262 = icmp ult i32 %261, 65536
  %263 = icmp sgt i32 %260, 32767
  %264 = select i1 %263, i32 32767, i32 32768
  %265 = select i1 %262, i32 %260, i32 %264
  %266 = shl i32 %265, 16
  %267 = ashr exact i32 %266, 16
  store i32 %267, i32* %17, align 4
  %268 = add nsw i32 %267, %213
  %269 = add nsw i32 %268, 32768
  %270 = icmp ult i32 %269, 65536
  %271 = icmp sgt i32 %268, 32767
  %272 = select i1 %271, i32 32767, i32 32768
  %273 = select i1 %270, i32 %268, i32 %272
  %274 = shl i32 %273, 16
  %275 = ashr exact i32 %274, 16
  store i32 %275, i32* %6, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
