; ModuleID = '../../v8/src/utils/identity-map.cc'
source_filename = "../../v8/src/utils/identity-map.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::IdentityMapBase" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8, [7 x i8] }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.20", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.29", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.100", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.104", %"class.std::__1::vector.104", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.147", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.std::__1::unique_ptr.195", %"class.std::__1::shared_ptr.201", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.202", %"class.std::__1::unique_ptr.228", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.234", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.247", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.253", i8, [7 x i8], %"class.std::__1::unordered_map.279", %"class.std::__1::unordered_map.305", %"class.std::__1::unordered_map.279", %"class.std::__1::unordered_map.329", %"class.std::__1::vector.357", i8, %"class.std::__1::unique_ptr.364", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.15" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.424", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.430", %"class.std::__1::unique_ptr.431", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.437", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.496", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.503", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.513", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.523", %"struct.std::__1::atomic.91", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.549", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.592"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.593", i32, i8, i8, i32, i32, %"class.std::__1::vector.599", %"class.std::__1::vector.599", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.606", i64, %"class.std::__1::unordered_map.607", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.240", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.99", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.666", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.680", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.714", %"class.std::__1::vector.718", %"class.std::__1::vector.718", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type opaque
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.419", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.419" = type { %"struct.std::__1::__atomic_base.420" }
%"struct.std::__1::__atomic_base.420" = type { %"struct.std::__1::__cxx_atomic_impl.421" }
%"struct.std::__1::__cxx_atomic_impl.421" = type { %"struct.std::__1::__cxx_atomic_base_impl.422" }
%"struct.std::__1::__cxx_atomic_base_impl.422" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.424" = type { %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.240" }
%"class.std::__1::shared_ptr.430" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type opaque
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.437" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type opaque
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.444", %"struct.std::__1::atomic.91", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::set.480", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.480" = type { %"class.std::__1::__tree.481" }
%"class.std::__1::__tree.481" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.482", %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::StubCache" = type opaque
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type opaque
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.389", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.391" }
%"struct.std::__1::__compressed_pair_elem.391" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.488", %"class.v8::internal::DetachableVector.489", %"class.v8::internal::DetachableVector.488", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.489" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.488" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr.377", %"class.std::__1::unique_ptr.383" }
%"class.std::__1::unique_ptr.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type opaque
%"class.v8::internal::EternalHandles" = type opaque
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.496" = type { %"class.std::__1::__vector_base.497" }
%"class.std::__1::__vector_base.497" = type { i32*, i32*, %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type opaque
%"struct.std::__1::atomic.503" = type { %"struct.std::__1::__atomic_base.504" }
%"struct.std::__1::__atomic_base.504" = type { %"struct.std::__1::__cxx_atomic_impl.505" }
%"struct.std::__1::__cxx_atomic_impl.505" = type { %"struct.std::__1::__cxx_atomic_base_impl.506" }
%"struct.std::__1::__cxx_atomic_base_impl.506" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.513" = type { %"struct.std::__1::__atomic_base.514" }
%"struct.std::__1::__atomic_base.514" = type { %"struct.std::__1::__cxx_atomic_impl.515" }
%"struct.std::__1::__cxx_atomic_impl.515" = type { %"struct.std::__1::__cxx_atomic_base_impl.516" }
%"struct.std::__1::__cxx_atomic_base_impl.516" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.523" = type { %"class.std::__1::__hash_table.524" }
%"class.std::__1::__hash_table.524" = type <{ %"class.std::__1::unique_ptr.525", %"class.std::__1::__compressed_pair.535", %"class.std::__1::__compressed_pair.540", %"class.std::__1::__compressed_pair.543", [4 x i8] }>
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527", %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"struct.std::__1::__hash_node_base.528"** }
%"struct.std::__1::__hash_node_base.528" = type { %"struct.std::__1::__hash_node_base.528"* }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.std::__1::__bucket_list_deallocator.530" }
%"class.std::__1::__bucket_list_deallocator.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.std::__1::__hash_node_base.528" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__cxx_atomic_impl.93" }
%"struct.std::__1::__cxx_atomic_impl.93" = type { %"struct.std::__1::__cxx_atomic_base_impl.94" }
%"struct.std::__1::__cxx_atomic_base_impl.94" = type { i8 }
%"class.v8::internal::Debug" = type opaque
%"class.v8::internal::HeapProfiler" = type opaque
%"class.std::__1::unique_ptr.549" = type { %"class.std::__1::__compressed_pair.550" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.552", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.552" = type { %"class.std::__1::__hash_table.553" }
%"class.std::__1::__hash_table.553" = type <{ %"class.std::__1::unique_ptr.554", %"class.std::__1::__compressed_pair.564", %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.573", [4 x i8] }>
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556", %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"struct.std::__1::__hash_node_base.557"** }
%"struct.std::__1::__hash_node_base.557" = type { %"struct.std::__1::__hash_node_base.557"* }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.std::__1::__bucket_list_deallocator.559" }
%"class.std::__1::__bucket_list_deallocator.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::__hash_node_base.557" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.587" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.581"**, %"struct.std::__1::pair.581"**, %"struct.std::__1::pair.581"**, %"class.std::__1::__compressed_pair.582" }
%"struct.std::__1::pair.581" = type opaque
%"class.std::__1::__compressed_pair.582" = type { %"struct.std::__1::__compressed_pair_elem.583" }
%"struct.std::__1::__compressed_pair_elem.583" = type { %"struct.std::__1::pair.581"** }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::Isolate" = type { i8 }
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.592" = type opaque
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.508", i32, %"class.v8::Local.423" }
%"class.v8::Local.508" = type { %"class.v8::Promise"* }
%"class.v8::Local.423" = type { %"class.v8::Value"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.395", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.395" = type { %"class.std::__1::__vector_base.396" }
%"class.std::__1::__vector_base.396" = type { i64**, i64**, %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { i64** }
%"class.std::__1::vector.599" = type { %"class.std::__1::__vector_base.600" }
%"class.std::__1::__vector_base.600" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.606" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.607" = type { %"class.std::__1::__hash_table.608" }
%"class.std::__1::__hash_table.608" = type <{ %"class.std::__1::unique_ptr.609", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.612"** }
%"struct.std::__1::__hash_node_base.612" = type { %"struct.std::__1::__hash_node_base.612"* }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::__bucket_list_deallocator.614" }
%"class.std::__1::__bucket_list_deallocator.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.612" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.240" = type { %"class.std::__1::__vector_base.241" }
%"class.std::__1::__vector_base.241" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.99" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.635", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.664", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.635" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.660, %union.anon.662, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.660 = type { i64 }
%union.anon.662 = type { i64 }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.99" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.664" = type { %"class.v8::PersistentBase.665" }
%"class.v8::PersistentBase.665" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.636", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.636" = type { %"class.std::__1::__hash_table.637" }
%"class.std::__1::__hash_table.637" = type <{ %"class.std::__1::unique_ptr.638", %"class.std::__1::__compressed_pair.648", %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.656", [4 x i8] }>
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640", %"struct.std::__1::__compressed_pair_elem.642" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"struct.std::__1::__hash_node_base.641"** }
%"struct.std::__1::__hash_node_base.641" = type { %"struct.std::__1::__hash_node_base.641"* }
%"struct.std::__1::__compressed_pair_elem.642" = type { %"class.std::__1::__bucket_list_deallocator.643" }
%"class.std::__1::__bucket_list_deallocator.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.641" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.671", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.370", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.374", %"class.std::__1::unique_ptr.405", %"class.std::__1::unique_ptr.195", %"class.std::__1::vector.411", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__cxx_atomic_impl.372" }
%"struct.std::__1::__cxx_atomic_impl.372" = type { %"struct.std::__1::__cxx_atomic_base_impl.373" }
%"struct.std::__1::__cxx_atomic_base_impl.373" = type { i32 }
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.395" }
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.411" = type { %"class.std::__1::__vector_base.412" }
%"class.std::__1::__vector_base.412" = type { %"struct.std::__1::pair.413"*, %"struct.std::__1::pair.413"*, %"class.std::__1::__compressed_pair.414" }
%"struct.std::__1::pair.413" = type opaque
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::pair.413"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type opaque
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.671" = type { %"class.std::__1::__compressed_pair.672" }
%"class.std::__1::__compressed_pair.672" = type { %"struct.std::__1::__compressed_pair_elem.673" }
%"struct.std::__1::__compressed_pair_elem.673" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"class.v8::internal::RuntimeCallStats" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type opaque
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.509", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.509" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.688" }
%"class.std::__1::unordered_map.688" = type { %"class.std::__1::__hash_table.689" }
%"class.std::__1::__hash_table.689" = type <{ %"class.std::__1::unique_ptr.690", %"class.std::__1::__compressed_pair.700", %"class.std::__1::__compressed_pair.705", %"class.std::__1::__compressed_pair.708", [4 x i8] }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692", %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.std::__1::__hash_node_base.693"** }
%"struct.std::__1::__hash_node_base.693" = type { %"struct.std::__1::__hash_node_base.693"* }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::__bucket_list_deallocator.695" }
%"class.std::__1::__bucket_list_deallocator.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.693" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.714" = type { %"struct.std::__1::__atomic_base.715" }
%"struct.std::__1::__atomic_base.715" = type { %"struct.std::__1::__cxx_atomic_impl.716" }
%"struct.std::__1::__cxx_atomic_impl.716" = type { %"struct.std::__1::__cxx_atomic_base_impl.717" }
%"struct.std::__1::__cxx_atomic_base_impl.717" = type { %"class.std::__1::vector.718"* }
%"class.std::__1::vector.718" = type { %"class.std::__1::__vector_base.719" }
%"class.std::__1::__vector_base.719" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.720" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.85" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.33", %"class.std::__1::vector.33", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.35" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.40" }
%"class.std::__1::__hash_table.40" = type <{ %"class.std::__1::unique_ptr.41", %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base.44"** }
%"struct.std::__1::__hash_node_base.44" = type { %"struct.std::__1::__hash_node_base.44"* }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::__bucket_list_deallocator.46" }
%"class.std::__1::__bucket_list_deallocator.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base.44" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.15", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.81", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.15", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.15", %"struct.std::__1::atomic.63", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.67" }
%"class.std::__1::vector.67" = type { %"class.std::__1::__vector_base.68" }
%"class.std::__1::__vector_base.68" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.69" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::atomic.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type opaque
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.91", %"struct.std::__1::atomic.95", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__cxx_atomic_impl.97" }
%"struct.std::__1::__cxx_atomic_impl.97" = type { %"struct.std::__1::__cxx_atomic_base_impl.98" }
%"struct.std::__1::__cxx_atomic_base_impl.98" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.106" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.201" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.std::__1::unordered_map.202" = type { %"class.std::__1::__hash_table.203" }
%"class.std::__1::__hash_table.203" = type <{ %"class.std::__1::unique_ptr.204", %"class.std::__1::__compressed_pair.214", %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.222", [4 x i8] }>
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206", %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"struct.std::__1::__hash_node_base.207"** }
%"struct.std::__1::__hash_node_base.207" = type { %"struct.std::__1::__hash_node_base.207"* }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::__bucket_list_deallocator.209" }
%"class.std::__1::__bucket_list_deallocator.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::__hash_node_base.207" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.240", %"class.std::__1::vector.240" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.253" = type { %"class.std::__1::__hash_table.254" }
%"class.std::__1::__hash_table.254" = type <{ %"class.std::__1::unique_ptr.255", %"class.std::__1::__compressed_pair.265", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.274", [4 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"struct.std::__1::__hash_node_base.258"** }
%"struct.std::__1::__hash_node_base.258" = type { %"struct.std::__1::__hash_node_base.258"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator.260" }
%"class.std::__1::__bucket_list_deallocator.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::__hash_node_base.258" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.305" = type { %"class.std::__1::__hash_table.306" }
%"class.std::__1::__hash_table.306" = type <{ %"class.std::__1::unique_ptr.307", %"class.std::__1::__compressed_pair.317", %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.325", [4 x i8] }>
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309", %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.std::__1::__hash_node_base.310"** }
%"struct.std::__1::__hash_node_base.310" = type { %"struct.std::__1::__hash_node_base.310"* }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"class.std::__1::__bucket_list_deallocator.312" }
%"class.std::__1::__bucket_list_deallocator.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.std::__1::__hash_node_base.310" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.279" = type { %"class.std::__1::__hash_table.280" }
%"class.std::__1::__hash_table.280" = type <{ %"class.std::__1::unique_ptr.281", %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.299", [4 x i8] }>
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283", %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::__hash_node_base.284"** }
%"struct.std::__1::__hash_node_base.284" = type { %"struct.std::__1::__hash_node_base.284"* }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.std::__1::__bucket_list_deallocator.286" }
%"class.std::__1::__bucket_list_deallocator.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.284" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::unordered_map.329" = type { %"class.std::__1::__hash_table.330" }
%"class.std::__1::__hash_table.330" = type <{ %"class.std::__1::unique_ptr.331", %"class.std::__1::__compressed_pair.341", %"class.std::__1::__compressed_pair.346", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333", %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"struct.std::__1::__hash_node_base.334"** }
%"struct.std::__1::__hash_node_base.334" = type { %"struct.std::__1::__hash_node_base.334"* }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.std::__1::__bucket_list_deallocator.336" }
%"class.std::__1::__bucket_list_deallocator.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"struct.std::__1::__hash_node_base.334" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.357" = type { %"class.std::__1::__vector_base.358" }
%"class.std::__1::__vector_base.358" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.359" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.364" = type { %"class.std::__1::__compressed_pair.365" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::vector.727" = type { %"class.std::__1::__vector_base.728" }
%"class.std::__1::__vector_base.728" = type { %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"*, %"class.std::__1::__compressed_pair.730" }
%"struct.std::__1::pair.729" = type { i64, i64 }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::pair.729"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZTVN2v88internal15IdentityMapBaseE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::IdentityMapBase"*)* @_ZN2v88internal15IdentityMapBaseD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IdentityMapBase"*)* @_ZN2v88internal15IdentityMapBaseD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"!is_iterable()\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"is_iterable()\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"address != ReadOnlyRoots(heap_).not_mapped_symbol().ptr()\00", align 1

@_ZN2v88internal15IdentityMapBaseD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::IdentityMapBase"*), void (%"class.v8::internal::IdentityMapBase"*)* @_ZN2v88internal15IdentityMapBaseD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15IdentityMapBaseD2Ev(%"class.v8::internal::IdentityMapBase"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal15IdentityMapBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBaseD0Ev(%"class.v8::internal::IdentityMapBase"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #11
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBase5ClearEv(%"class.v8::internal::IdentityMapBase"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %3 = load i64*, i64** %2, align 8
  %4 = icmp eq i64* %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 9
  %9 = load %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"** %8, align 8
  tail call void @_ZN2v88internal4Heap21UnregisterStrongRootsEPNS0_16StrongRootsEntryE(%"class.v8::internal::Heap"* %7, %"class.v8::internal::StrongRootsEntry"* %9) #12
  %10 = load i64*, i64** %2, align 8
  %11 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = bitcast %"class.v8::internal::IdentityMapBase"* %0 to void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)***
  %15 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)**, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %15, i64 3
  %17 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %16, align 8
  tail call void %17(%"class.v8::internal::IdentityMapBase"* %0, i64* %10, i64 %13) #12
  %18 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %19 = load i64*, i64** %18, align 8
  %20 = load i32, i32* %11, align 8
  %21 = sext i32 %20 to i64
  %22 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)**, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*** %14, align 8
  %23 = getelementptr inbounds void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %22, i64 3
  %24 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %23, align 8
  tail call void %24(%"class.v8::internal::IdentityMapBase"* %0, i64* %19, i64 %21) #12
  %25 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %26 = bitcast i32* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 36, i1 false)
  br label %27

27:                                               ; preds = %1, %5
  ret void
}

declare void @_ZN2v88internal4Heap21UnregisterStrongRootsEPNS0_16StrongRootsEntryE(%"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBase15EnableIterationEv(%"class.v8::internal::IdentityMapBase"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %1
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBase16DisableIterationEv(%"class.v8::internal::IdentityMapBase"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %6, !prof !4

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

6:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15IdentityMapBase11ScanKeysForEmj(%"class.v8::internal::IdentityMapBase"* nocapture readonly, i64, i32) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, %2
  %7 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %8 = bitcast %"class.v8::internal::Heap"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, -41416
  %11 = inttoptr i64 %10 to %"class.v8::internal::Isolate"*
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 491
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %6, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %19 = load i64*, i64** %18, align 8
  %20 = sext i32 %6 to i64
  %21 = sext i32 %15 to i64
  br label %28

22:                                               ; preds = %35, %3
  %23 = icmp sgt i32 %6, 0
  br i1 %23, label %24, label %52

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %26 = load i64*, i64** %25, align 8
  %27 = zext i32 %6 to i64
  br label %38

28:                                               ; preds = %17, %35
  %29 = phi i64 [ %20, %17 ], [ %36, %35 ]
  %30 = getelementptr inbounds i64, i64* %19, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, %1
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = icmp eq i64 %31, %13
  br i1 %34, label %52, label %35

35:                                               ; preds = %33
  %36 = add nsw i64 %29, 1
  %37 = icmp slt i64 %36, %21
  br i1 %37, label %28, label %22

38:                                               ; preds = %45, %24
  %39 = phi i64 [ 0, %24 ], [ %46, %45 ]
  %40 = getelementptr inbounds i64, i64* %26, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %1
  br i1 %42, label %48, label %43

43:                                               ; preds = %38
  %44 = icmp eq i64 %41, %13
  br i1 %44, label %52, label %45

45:                                               ; preds = %43
  %46 = add nuw nsw i64 %39, 1
  %47 = icmp eq i64 %46, %27
  br i1 %47, label %52, label %38

48:                                               ; preds = %38
  %49 = trunc i64 %39 to i32
  br label %52

50:                                               ; preds = %28
  %51 = trunc i64 %29 to i32
  br label %52

52:                                               ; preds = %33, %45, %43, %50, %48, %22
  %53 = phi i32 [ -1, %22 ], [ %49, %48 ], [ %51, %50 ], [ -1, %43 ], [ -1, %45 ], [ -1, %33 ]
  ret i32 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15IdentityMapBase9InsertKeyEmj(%"class.v8::internal::IdentityMapBase"*, i64, i32) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = sdiv i32 %5, 4
  %7 = add nsw i32 %6, %5
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = shl nsw i32 %9, 1
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %12)
  br label %13

13:                                               ; preds = %3, %11
  %14 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %15 = bitcast %"class.v8::internal::Heap"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, -41416
  %18 = inttoptr i64 %17 to %"class.v8::internal::Isolate"*
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 0, i32 7, i32 0, i64 491
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, %2
  %24 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %25 = load i64*, i64** %24, align 8
  %26 = sext i32 %23 to i64
  %27 = getelementptr inbounds i64, i64* %25, i64 %26
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %49, label %30

30:                                               ; preds = %13
  %31 = icmp eq i64 %28, %20
  br i1 %31, label %36, label %41

32:                                               ; preds = %41
  %33 = icmp eq i64 %47, %20
  br i1 %33, label %34, label %41

34:                                               ; preds = %32
  %35 = getelementptr inbounds i64, i64* %25, i64 %45
  br label %36

36:                                               ; preds = %34, %30
  %37 = phi i64* [ %27, %30 ], [ %35, %34 ]
  %38 = phi i32 [ %23, %30 ], [ %44, %34 ]
  %39 = load i32, i32* %4, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %4, align 4
  store i64 %1, i64* %37, align 8
  br label %49

41:                                               ; preds = %30, %32
  %42 = phi i32 [ %44, %32 ], [ %23, %30 ]
  %43 = add nsw i32 %42, 1
  %44 = and i32 %43, %22
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i64, i64* %25, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %1
  br i1 %48, label %49, label %32

49:                                               ; preds = %41, %13, %36
  %50 = phi i32 [ %38, %36 ], [ %23, %13 ], [ %44, %41 ]
  %51 = phi i64 [ 0, %36 ], [ 4294967296, %13 ], [ 4294967296, %41 ]
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  ret i64 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %13 = load i64*, i64** %12, align 8
  store i32 %1, i32* %8, align 8
  %14 = add nsw i32 %1, -1
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %17 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %17, i64 0, i32 51
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  store i32 %19, i32* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  store i32 0, i32* %21, align 4
  %22 = sext i32 %1 to i64
  %23 = bitcast %"class.v8::internal::IdentityMapBase"* %0 to i64* (%"class.v8::internal::IdentityMapBase"*, i64)***
  %24 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)**, i64* (%"class.v8::internal::IdentityMapBase"*, i64)*** %23, align 8
  %25 = getelementptr inbounds i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %24, i64 2
  %26 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %25, align 8
  %27 = tail call i64* %26(%"class.v8::internal::IdentityMapBase"* %0, i64 %22) #12
  store i64* %27, i64** %10, align 8
  %28 = bitcast %"class.v8::internal::Heap"** %16 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 491
  %33 = load i64, i64* %32, align 8
  %34 = load i32, i32* %8, align 8
  %35 = icmp sgt i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %7
  store i64 %33, i64* %27, align 8
  %37 = load i32, i32* %8, align 8
  %38 = icmp sgt i32 %37, 1
  br i1 %38, label %53, label %39

39:                                               ; preds = %53, %36, %7
  %40 = phi i32 [ %34, %7 ], [ %37, %36 ], [ %58, %53 ]
  %41 = sext i32 %40 to i64
  %42 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)**, i64* (%"class.v8::internal::IdentityMapBase"*, i64)*** %23, align 8
  %43 = getelementptr inbounds i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %42, i64 2
  %44 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %43, align 8
  %45 = tail call i64* %44(%"class.v8::internal::IdentityMapBase"* %0, i64 %41) #12
  store i64* %45, i64** %12, align 8
  %46 = bitcast i64* %45 to i8*
  %47 = load i32, i32* %8, align 8
  %48 = sext i32 %47 to i64
  %49 = shl nsw i64 %48, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 %49, i1 false)
  %50 = icmp sgt i32 %9, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %39
  %52 = zext i32 %9 to i64
  br label %79

53:                                               ; preds = %36, %53
  %54 = phi i64 [ %57, %53 ], [ 1, %36 ]
  %55 = load i64*, i64** %10, align 8
  %56 = getelementptr inbounds i64, i64* %55, i64 %54
  store i64 %33, i64* %56, align 8
  %57 = add nuw nsw i64 %54, 1
  %58 = load i32, i32* %8, align 8
  %59 = sext i32 %58 to i64
  %60 = icmp slt i64 %57, %59
  br i1 %60, label %53, label %39

61:                                               ; preds = %141, %39
  %62 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %16, align 8
  %63 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 9
  %64 = load %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"** %63, align 8
  %65 = load i64*, i64** %10, align 8
  %66 = ptrtoint i64* %65 to i64
  %67 = load i32, i32* %8, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i64, i64* %65, i64 %68
  %70 = ptrtoint i64* %69 to i64
  tail call void @_ZN2v88internal4Heap17UpdateStrongRootsEPNS0_16StrongRootsEntryENS0_14FullObjectSlotES4_(%"class.v8::internal::Heap"* %62, %"class.v8::internal::StrongRootsEntry"* %64, i64 %66, i64 %70) #12
  %71 = sext i32 %9 to i64
  %72 = bitcast %"class.v8::internal::IdentityMapBase"* %0 to void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)***
  %73 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)**, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %73, i64 3
  %75 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %74, align 8
  tail call void %75(%"class.v8::internal::IdentityMapBase"* %0, i64* %11, i64 %71) #12
  %76 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)**, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*** %72, align 8
  %77 = getelementptr inbounds void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %76, i64 3
  %78 = load void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)*, void (%"class.v8::internal::IdentityMapBase"*, i64*, i64)** %77, align 8
  tail call void %78(%"class.v8::internal::IdentityMapBase"* %0, i64* %13, i64 %71) #12
  ret void

79:                                               ; preds = %141, %51
  %80 = phi i64 [ 0, %51 ], [ %142, %141 ]
  %81 = getelementptr inbounds i64, i64* %11, i64 %80
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %33
  br i1 %83, label %141, label %84

84:                                               ; preds = %79
  %85 = load i64, i64* %28, align 8
  %86 = add i64 %85, -41416
  %87 = inttoptr i64 %86 to %"class.v8::internal::Isolate"*
  %88 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %87, i64 0, i32 0, i32 7, i32 0, i64 491
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, %82
  br i1 %90, label %91, label %92, !prof !4

91:                                               ; preds = %84
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

92:                                               ; preds = %84
  %93 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %82) #12
  %94 = trunc i64 %93 to i32
  %95 = load i32, i32* %21, align 4
  %96 = sdiv i32 %95, 4
  %97 = add nsw i32 %96, %95
  %98 = load i32, i32* %8, align 8
  %99 = icmp slt i32 %97, %98
  br i1 %99, label %102, label %100

100:                                              ; preds = %92
  %101 = shl nsw i32 %98, 1
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %101) #12
  br label %102

102:                                              ; preds = %100, %92
  %103 = load i64, i64* %28, align 8
  %104 = add i64 %103, -41416
  %105 = inttoptr i64 %104 to %"class.v8::internal::Isolate"*
  %106 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %105, i64 0, i32 0, i32 7, i32 0, i64 491
  %107 = load i64, i64* %106, align 8
  %108 = load i32, i32* %15, align 4
  %109 = and i32 %108, %94
  %110 = load i64*, i64** %10, align 8
  %111 = sext i32 %109 to i64
  %112 = getelementptr inbounds i64, i64* %110, i64 %111
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %113, %82
  br i1 %114, label %135, label %115

115:                                              ; preds = %102
  %116 = icmp eq i64 %113, %107
  br i1 %116, label %121, label %127

117:                                              ; preds = %127
  %118 = icmp eq i64 %133, %107
  br i1 %118, label %119, label %127

119:                                              ; preds = %117
  %120 = getelementptr inbounds i64, i64* %110, i64 %131
  br label %121

121:                                              ; preds = %119, %115
  %122 = phi i64* [ %112, %115 ], [ %120, %119 ]
  %123 = phi i32 [ %109, %115 ], [ %130, %119 ]
  %124 = load i32, i32* %21, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %21, align 4
  store i64 %82, i64* %122, align 8
  %126 = sext i32 %123 to i64
  br label %135

127:                                              ; preds = %115, %117
  %128 = phi i32 [ %130, %117 ], [ %109, %115 ]
  %129 = add nsw i32 %128, 1
  %130 = and i32 %129, %108
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i64, i64* %110, i64 %131
  %133 = load i64, i64* %132, align 8
  %134 = icmp eq i64 %133, %82
  br i1 %134, label %135, label %117

135:                                              ; preds = %127, %102, %121
  %136 = phi i64 [ %111, %102 ], [ %126, %121 ], [ %131, %127 ]
  %137 = getelementptr inbounds i64, i64* %13, i64 %80
  %138 = load i64, i64* %137, align 8
  %139 = load i64*, i64** %12, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 %136
  store i64 %138, i64* %140, align 8
  br label %141

141:                                              ; preds = %79, %135
  %142 = add nuw nsw i64 %80, 1
  %143 = icmp eq i64 %142, %52
  br i1 %143, label %61, label %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15IdentityMapBase11DeleteIndexEiPm(%"class.v8::internal::IdentityMapBase"*, i32, i64*) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i64* %2, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = sext i32 %1 to i64
  br label %13

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %9 = load i64*, i64** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %5, %7
  %14 = phi i64 [ %6, %5 ], [ %10, %7 ]
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %16 = bitcast %"class.v8::internal::Heap"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, -41416
  %19 = inttoptr i64 %18 to %"class.v8::internal::Isolate"*
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 0, i32 7, i32 0, i64 491
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 %14
  store i64 %21, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 %14
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %28, align 4
  %31 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, 4
  br i1 %33, label %34, label %39

34:                                               ; preds = %13
  %35 = shl nsw i32 %30, 1
  %36 = lshr i32 %32, 1
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %36)
  br label %96

39:                                               ; preds = %34, %13
  %40 = add nsw i32 %1, 1
  %41 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, %40
  %44 = load i64*, i64** %22, align 8
  %45 = sext i32 %43 to i64
  %46 = getelementptr inbounds i64, i64* %44, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, %21
  br i1 %48, label %96, label %49

49:                                               ; preds = %39, %86
  %50 = phi i64 [ %94, %86 ], [ %47, %39 ]
  %51 = phi i64 [ %92, %86 ], [ %45, %39 ]
  %52 = phi i32 [ %90, %86 ], [ %43, %39 ]
  %53 = phi i32 [ %88, %86 ], [ %1, %39 ]
  %54 = load i64, i64* %16, align 8
  %55 = add i64 %54, -41416
  %56 = inttoptr i64 %55 to %"class.v8::internal::Isolate"*
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 0, i32 7, i32 0, i64 491
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %50
  br i1 %59, label %60, label %61, !prof !4

60:                                               ; preds = %49
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

61:                                               ; preds = %49
  %62 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %50) #12
  %63 = trunc i64 %62 to i32
  %64 = load i32, i32* %41, align 4
  %65 = and i32 %64, %63
  %66 = icmp slt i32 %53, %52
  %67 = icmp sge i32 %53, %65
  %68 = icmp sgt i32 %65, %52
  br i1 %66, label %69, label %71

69:                                               ; preds = %61
  %70 = or i1 %67, %68
  br i1 %70, label %73, label %86

71:                                               ; preds = %61
  %72 = and i1 %67, %68
  br i1 %72, label %73, label %86

73:                                               ; preds = %71, %69
  %74 = load i64*, i64** %22, align 8
  %75 = sext i32 %53 to i64
  %76 = getelementptr inbounds i64, i64* %74, i64 %75
  %77 = getelementptr inbounds i64, i64* %74, i64 %51
  %78 = load i64, i64* %76, align 8
  %79 = load i64, i64* %77, align 8
  store i64 %79, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  %80 = load i64*, i64** %25, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 %75
  %82 = getelementptr inbounds i64, i64* %80, i64 %51
  %83 = load i64, i64* %81, align 8
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  %85 = load i32, i32* %41, align 4
  br label %86

86:                                               ; preds = %73, %69, %71
  %87 = phi i32 [ %85, %73 ], [ %64, %69 ], [ %64, %71 ]
  %88 = phi i32 [ %52, %73 ], [ %53, %69 ], [ %53, %71 ]
  %89 = add nsw i32 %52, 1
  %90 = and i32 %87, %89
  %91 = load i64*, i64** %22, align 8
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds i64, i64* %91, i64 %92
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, %21
  br i1 %95, label %96, label %49

96:                                               ; preds = %86, %39, %38
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15IdentityMapBase4HashEm(%"class.v8::internal::IdentityMapBase"* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::Heap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 491
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %1
  br i1 %10, label %11, label %12, !prof !4

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %1) #12
  %14 = trunc i64 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15IdentityMapBase6LookupEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::Heap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 491
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %1
  br i1 %10, label %11, label %12, !prof !4

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %1) #12
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, %14
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 491
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %17, %24
  %26 = inttoptr i64 %18 to %"class.v8::internal::Heap"*
  br i1 %25, label %27, label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %29 = load i64*, i64** %28, align 8
  %30 = sext i32 %17 to i64
  %31 = sext i32 %24 to i64
  br label %38

32:                                               ; preds = %45, %12
  %33 = icmp sgt i32 %17, 0
  br i1 %33, label %34, label %62

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %36 = load i64*, i64** %35, align 8
  %37 = zext i32 %17 to i64
  br label %48

38:                                               ; preds = %45, %27
  %39 = phi i64 [ %30, %27 ], [ %46, %45 ]
  %40 = getelementptr inbounds i64, i64* %29, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %1
  br i1 %42, label %58, label %43

43:                                               ; preds = %38
  %44 = icmp eq i64 %41, %22
  br i1 %44, label %62, label %45

45:                                               ; preds = %43
  %46 = add nsw i64 %39, 1
  %47 = icmp eq i64 %46, %31
  br i1 %47, label %32, label %38

48:                                               ; preds = %55, %34
  %49 = phi i64 [ 0, %34 ], [ %56, %55 ]
  %50 = getelementptr inbounds i64, i64* %36, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %1
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %51, %22
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = add nuw nsw i64 %49, 1
  %57 = icmp eq i64 %56, %37
  br i1 %57, label %62, label %48

58:                                               ; preds = %38, %48
  %59 = phi i64 [ %49, %48 ], [ %39, %38 ]
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %114

62:                                               ; preds = %43, %53, %55, %32, %58
  %63 = phi i32 [ %60, %58 ], [ -1, %32 ], [ -1, %55 ], [ -1, %53 ], [ -1, %43 ]
  %64 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 51
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %65, %67
  br i1 %68, label %114, label %69

69:                                               ; preds = %62
  tail call void @_ZN2v88internal15IdentityMapBase6RehashEv(%"class.v8::internal::IdentityMapBase"* %0)
  %70 = load i32, i32* %15, align 4
  %71 = and i32 %70, %14
  %72 = load i64, i64* %4, align 8
  %73 = add i64 %72, -41416
  %74 = inttoptr i64 %73 to %"class.v8::internal::Isolate"*
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %74, i64 0, i32 0, i32 7, i32 0, i64 491
  %76 = load i64, i64* %75, align 8
  %77 = load i32, i32* %23, align 8
  %78 = icmp slt i32 %71, %77
  br i1 %78, label %79, label %84

79:                                               ; preds = %69
  %80 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %81 = load i64*, i64** %80, align 8
  %82 = sext i32 %71 to i64
  %83 = sext i32 %77 to i64
  br label %90

84:                                               ; preds = %97, %69
  %85 = icmp sgt i32 %71, 0
  br i1 %85, label %86, label %114

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %88 = load i64*, i64** %87, align 8
  %89 = zext i32 %71 to i64
  br label %100

90:                                               ; preds = %97, %79
  %91 = phi i64 [ %82, %79 ], [ %98, %97 ]
  %92 = getelementptr inbounds i64, i64* %81, i64 %91
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, %1
  br i1 %94, label %112, label %95

95:                                               ; preds = %90
  %96 = icmp eq i64 %93, %76
  br i1 %96, label %114, label %97

97:                                               ; preds = %95
  %98 = add nsw i64 %91, 1
  %99 = icmp eq i64 %98, %83
  br i1 %99, label %84, label %90

100:                                              ; preds = %107, %86
  %101 = phi i64 [ 0, %86 ], [ %108, %107 ]
  %102 = getelementptr inbounds i64, i64* %88, i64 %101
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %1
  br i1 %104, label %110, label %105

105:                                              ; preds = %100
  %106 = icmp eq i64 %103, %76
  br i1 %106, label %114, label %107

107:                                              ; preds = %105
  %108 = add nuw nsw i64 %101, 1
  %109 = icmp eq i64 %108, %89
  br i1 %109, label %114, label %100

110:                                              ; preds = %100
  %111 = trunc i64 %101 to i32
  br label %114

112:                                              ; preds = %90
  %113 = trunc i64 %91 to i32
  br label %114

114:                                              ; preds = %95, %107, %105, %112, %110, %84, %62, %58
  %115 = phi i32 [ %63, %62 ], [ %60, %58 ], [ -1, %84 ], [ %111, %110 ], [ %113, %112 ], [ -1, %105 ], [ -1, %107 ], [ -1, %95 ]
  ret i32 %115
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15IdentityMapBase6RehashEv(%"class.v8::internal::IdentityMapBase"*) local_unnamed_addr #3 align 2 {
  %2 = alloca %"class.std::__1::vector.727", align 8
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %9 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %9, i64 0, i32 51
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  store i32 %11, i32* %12, align 8
  %13 = bitcast %"class.std::__1::vector.727"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %14 = ptrtoint %"class.v8::internal::Heap"* %9 to i64
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 491
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 1
  br label %148

25:                                               ; preds = %7
  %26 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %27 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %28 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %30 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"struct.std::__1::pair.729"** %30 to i64*
  %33 = bitcast %"class.std::__1::vector.727"* %2 to i64*
  %34 = bitcast %"struct.std::__1::pair.729"** %31 to i64*
  %35 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  br label %49

37:                                               ; preds = %142
  %38 = load %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"** %35, align 8
  %39 = load %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"** %30, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.727", %"class.std::__1::vector.727"* %2, i64 0, i32 0, i32 1
  %42 = icmp eq %"struct.std::__1::pair.729"* %38, %39
  br i1 %42, label %152, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %45 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %46 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %47 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %48 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  br label %161

49:                                               ; preds = %25, %142
  %50 = phi i64 [ 0, %25 ], [ %144, %142 ]
  %51 = phi i32 [ -1, %25 ], [ %143, %142 ]
  %52 = load i64*, i64** %26, align 8
  %53 = getelementptr inbounds i64, i64* %52, i64 %50
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, %18
  %56 = trunc i64 %50 to i32
  br i1 %55, label %142, label %57

57:                                               ; preds = %49
  %58 = load i64, i64* %27, align 8
  %59 = add i64 %58, -41416
  %60 = inttoptr i64 %59 to %"class.v8::internal::Isolate"*
  %61 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %60, i64 0, i32 0, i32 7, i32 0, i64 491
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, %54
  br i1 %63, label %64, label %65, !prof !4

64:                                               ; preds = %57
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

65:                                               ; preds = %57
  %66 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %54) #12
  %67 = trunc i64 %66 to i32
  %68 = load i32, i32* %28, align 4
  %69 = and i32 %68, %67
  %70 = icmp sle i32 %69, %51
  %71 = sext i32 %69 to i64
  %72 = icmp slt i64 %50, %71
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %142

74:                                               ; preds = %65
  %75 = load i64*, i64** %26, align 8
  %76 = getelementptr inbounds i64, i64* %75, i64 %50
  %77 = load i64*, i64** %29, align 8
  %78 = getelementptr inbounds i64, i64* %77, i64 %50
  %79 = load i64, i64* %76, align 8
  %80 = load i64, i64* %78, align 8
  %81 = load %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"** %30, align 8
  %82 = load %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"** %31, align 8
  %83 = icmp ult %"struct.std::__1::pair.729"* %81, %82
  %84 = ptrtoint %"struct.std::__1::pair.729"* %82 to i64
  br i1 %83, label %85, label %90

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %81, i64 0, i32 0
  store i64 %79, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %81, i64 0, i32 1
  store i64 %80, i64* %87, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %81, i64 1
  %89 = ptrtoint %"struct.std::__1::pair.729"* %88 to i64
  store i64 %89, i64* %32, align 8
  br label %135

90:                                               ; preds = %74
  %91 = ptrtoint %"struct.std::__1::pair.729"* %81 to i64
  %92 = load i64, i64* %33, align 8
  %93 = sub i64 %91, %92
  %94 = ashr exact i64 %93, 4
  %95 = add nsw i64 %94, 1
  %96 = icmp ugt i64 %95, 1152921504606846975
  br i1 %96, label %97, label %99

97:                                               ; preds = %90
  %98 = bitcast %"class.std::__1::vector.727"* %2 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %98) #11
  unreachable

99:                                               ; preds = %90
  %100 = sub i64 %84, %92
  %101 = ashr exact i64 %100, 4
  %102 = icmp ult i64 %101, 576460752303423487
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = ashr exact i64 %100, 3
  %105 = icmp ult i64 %104, %95
  %106 = select i1 %105, i64 %95, i64 %104
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %116, label %108

108:                                              ; preds = %103
  %109 = icmp ugt i64 %106, 1152921504606846975
  br i1 %109, label %110, label %111

110:                                              ; preds = %108
  tail call void @abort() #11
  unreachable

111:                                              ; preds = %108, %99
  %112 = phi i64 [ %106, %108 ], [ 1152921504606846975, %99 ]
  %113 = shl i64 %112, 4
  %114 = tail call i8* @_Znwm(i64 %113) #13
  %115 = bitcast i8* %114 to %"struct.std::__1::pair.729"*
  br label %116

116:                                              ; preds = %111, %103
  %117 = phi i64 [ %112, %111 ], [ 0, %103 ]
  %118 = phi i8* [ %114, %111 ], [ null, %103 ]
  %119 = phi %"struct.std::__1::pair.729"* [ %115, %111 ], [ null, %103 ]
  %120 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %119, i64 %94
  %121 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %119, i64 %117
  %122 = ptrtoint %"struct.std::__1::pair.729"* %121 to i64
  %123 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %120, i64 0, i32 0
  store i64 %79, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %119, i64 %94, i32 1
  store i64 %80, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %120, i64 1
  %126 = ptrtoint %"struct.std::__1::pair.729"* %125 to i64
  %127 = ptrtoint %"struct.std::__1::pair.729"* %119 to i64
  %128 = icmp sgt i64 %93, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %116
  %130 = inttoptr i64 %92 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* align 8 %130, i64 %93, i1 false) #12
  br label %131

131:                                              ; preds = %129, %116
  store i64 %127, i64* %33, align 8
  store i64 %126, i64* %32, align 8
  store i64 %122, i64* %34, align 8
  %132 = icmp eq i64 %92, 0
  br i1 %132, label %135, label %133

133:                                              ; preds = %131
  %134 = inttoptr i64 %92 to i8*
  tail call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %85, %131, %133
  %136 = load i64*, i64** %26, align 8
  %137 = getelementptr inbounds i64, i64* %136, i64 %50
  store i64 %18, i64* %137, align 8
  %138 = load i64*, i64** %29, align 8
  %139 = getelementptr inbounds i64, i64* %138, i64 %50
  store i64 0, i64* %139, align 8
  %140 = load i32, i32* %36, align 4
  %141 = add nsw i32 %140, -1
  store i32 %141, i32* %36, align 4
  br label %142

142:                                              ; preds = %135, %65, %49
  %143 = phi i32 [ %56, %49 ], [ %56, %135 ], [ %51, %65 ]
  %144 = add nuw nsw i64 %50, 1
  %145 = load i32, i32* %19, align 8
  %146 = sext i32 %145 to i64
  %147 = icmp slt i64 %144, %146
  br i1 %147, label %49, label %37

148:                                              ; preds = %216, %22
  %149 = phi %"struct.std::__1::pair.729"** [ %24, %22 ], [ %41, %216 ]
  %150 = phi %"struct.std::__1::pair.729"** [ %23, %22 ], [ %40, %216 ]
  %151 = load %"struct.std::__1::pair.729"*, %"struct.std::__1::pair.729"** %150, align 8
  br label %152

152:                                              ; preds = %148, %37
  %153 = phi %"struct.std::__1::pair.729"* [ %151, %148 ], [ %38, %37 ]
  %154 = phi %"struct.std::__1::pair.729"** [ %149, %148 ], [ %41, %37 ]
  %155 = icmp eq %"struct.std::__1::pair.729"* %153, null
  br i1 %155, label %160, label %156

156:                                              ; preds = %152
  %157 = ptrtoint %"struct.std::__1::pair.729"* %153 to i64
  %158 = bitcast %"struct.std::__1::pair.729"** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"struct.std::__1::pair.729"* %153 to i8*
  tail call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %152, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  ret void

161:                                              ; preds = %43, %216
  %162 = phi %"struct.std::__1::pair.729"* [ %38, %43 ], [ %220, %216 ]
  %163 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %162, i64 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %162, i64 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = load i64, i64* %44, align 8
  %168 = add i64 %167, -41416
  %169 = inttoptr i64 %168 to %"class.v8::internal::Isolate"*
  %170 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %169, i64 0, i32 0, i32 7, i32 0, i64 491
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, %164
  br i1 %172, label %173, label %174, !prof !4

173:                                              ; preds = %161
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

174:                                              ; preds = %161
  %175 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %164) #12
  %176 = trunc i64 %175 to i32
  %177 = load i32, i32* %45, align 4
  %178 = sdiv i32 %177, 4
  %179 = add nsw i32 %178, %177
  %180 = load i32, i32* %19, align 8
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %184, label %182

182:                                              ; preds = %174
  %183 = shl nsw i32 %180, 1
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %183) #12
  br label %184

184:                                              ; preds = %182, %174
  %185 = load i64, i64* %44, align 8
  %186 = add i64 %185, -41416
  %187 = inttoptr i64 %186 to %"class.v8::internal::Isolate"*
  %188 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %187, i64 0, i32 0, i32 7, i32 0, i64 491
  %189 = load i64, i64* %188, align 8
  %190 = load i32, i32* %46, align 4
  %191 = and i32 %190, %176
  %192 = load i64*, i64** %47, align 8
  %193 = sext i32 %191 to i64
  %194 = getelementptr inbounds i64, i64* %192, i64 %193
  %195 = load i64, i64* %194, align 8
  %196 = icmp eq i64 %195, %164
  br i1 %196, label %216, label %197

197:                                              ; preds = %184
  %198 = icmp eq i64 %195, %189
  br i1 %198, label %203, label %208

199:                                              ; preds = %208
  %200 = icmp eq i64 %214, %189
  br i1 %200, label %201, label %208

201:                                              ; preds = %199
  %202 = getelementptr inbounds i64, i64* %192, i64 %212
  br label %203

203:                                              ; preds = %201, %197
  %204 = phi i64 [ %193, %197 ], [ %212, %201 ]
  %205 = phi i64* [ %194, %197 ], [ %202, %201 ]
  %206 = load i32, i32* %45, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %45, align 4
  store i64 %164, i64* %205, align 8
  br label %216

208:                                              ; preds = %197, %199
  %209 = phi i32 [ %211, %199 ], [ %191, %197 ]
  %210 = add nsw i32 %209, 1
  %211 = and i32 %210, %190
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i64, i64* %192, i64 %212
  %214 = load i64, i64* %213, align 8
  %215 = icmp eq i64 %214, %164
  br i1 %215, label %216, label %199

216:                                              ; preds = %208, %184, %203
  %217 = phi i64 [ %193, %184 ], [ %204, %203 ], [ %212, %208 ]
  %218 = load i64*, i64** %48, align 8
  %219 = getelementptr inbounds i64, i64* %218, i64 %217
  store i64 %166, i64* %219, align 8
  %220 = getelementptr inbounds %"struct.std::__1::pair.729", %"struct.std::__1::pair.729"* %162, i64 1
  %221 = icmp eq %"struct.std::__1::pair.729"* %220, %39
  br i1 %221, label %148, label %161
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15IdentityMapBase14LookupOrInsertEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %4 = bitcast %"class.v8::internal::Heap"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -41416
  %7 = inttoptr i64 %6 to %"class.v8::internal::Isolate"*
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 0, i32 7, i32 0, i64 491
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %1
  br i1 %10, label %11, label %12, !prof !4

11:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

12:                                               ; preds = %2
  %13 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %1) #12
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, %14
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, -41416
  %20 = inttoptr i64 %19 to %"class.v8::internal::Isolate"*
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %20, i64 0, i32 0, i32 7, i32 0, i64 491
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %17, %24
  %26 = inttoptr i64 %18 to %"class.v8::internal::Heap"*
  br i1 %25, label %27, label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %29 = load i64*, i64** %28, align 8
  %30 = sext i32 %17 to i64
  %31 = sext i32 %24 to i64
  br label %38

32:                                               ; preds = %45, %12
  %33 = icmp sgt i32 %17, 0
  br i1 %33, label %34, label %62

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %36 = load i64*, i64** %35, align 8
  %37 = zext i32 %17 to i64
  br label %48

38:                                               ; preds = %45, %27
  %39 = phi i64 [ %30, %27 ], [ %46, %45 ]
  %40 = getelementptr inbounds i64, i64* %29, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, %1
  br i1 %42, label %58, label %43

43:                                               ; preds = %38
  %44 = icmp eq i64 %41, %22
  br i1 %44, label %62, label %45

45:                                               ; preds = %43
  %46 = add nsw i64 %39, 1
  %47 = icmp eq i64 %46, %31
  br i1 %47, label %32, label %38

48:                                               ; preds = %55, %34
  %49 = phi i64 [ 0, %34 ], [ %56, %55 ]
  %50 = getelementptr inbounds i64, i64* %36, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %1
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = icmp eq i64 %51, %22
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = add nuw nsw i64 %49, 1
  %57 = icmp eq i64 %56, %37
  br i1 %57, label %62, label %48

58:                                               ; preds = %38, %48
  %59 = phi i64 [ %49, %48 ], [ %39, %38 ]
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %112

62:                                               ; preds = %43, %53, %55, %32, %58
  %63 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  %64 = load i32, i32* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %26, i64 0, i32 51
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  br i1 %67, label %70, label %68

68:                                               ; preds = %62
  tail call void @_ZN2v88internal15IdentityMapBase6RehashEv(%"class.v8::internal::IdentityMapBase"* %0)
  %69 = load i32, i32* %23, align 8
  br label %70

70:                                               ; preds = %62, %68
  %71 = phi i32 [ %24, %62 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %73 = load i32, i32* %72, align 4
  %74 = sdiv i32 %73, 4
  %75 = add nsw i32 %74, %73
  %76 = icmp slt i32 %75, %71
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = shl nsw i32 %71, 1
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %78) #12
  br label %79

79:                                               ; preds = %77, %70
  %80 = load i64, i64* %4, align 8
  %81 = add i64 %80, -41416
  %82 = inttoptr i64 %81 to %"class.v8::internal::Isolate"*
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 0, i32 7, i32 0, i64 491
  %84 = load i64, i64* %83, align 8
  %85 = load i32, i32* %15, align 4
  %86 = and i32 %85, %14
  %87 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %88 = load i64*, i64** %87, align 8
  %89 = sext i32 %86 to i64
  %90 = getelementptr inbounds i64, i64* %88, i64 %89
  %91 = load i64, i64* %90, align 8
  %92 = icmp eq i64 %91, %1
  br i1 %92, label %112, label %93

93:                                               ; preds = %79
  %94 = icmp eq i64 %91, %84
  br i1 %94, label %99, label %104

95:                                               ; preds = %104
  %96 = icmp eq i64 %110, %84
  br i1 %96, label %97, label %104

97:                                               ; preds = %95
  %98 = getelementptr inbounds i64, i64* %88, i64 %108
  br label %99

99:                                               ; preds = %97, %93
  %100 = phi i64* [ %90, %93 ], [ %98, %97 ]
  %101 = phi i32 [ %86, %93 ], [ %107, %97 ]
  %102 = load i32, i32* %72, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %72, align 4
  store i64 %1, i64* %100, align 8
  br label %112

104:                                              ; preds = %93, %95
  %105 = phi i32 [ %107, %95 ], [ %86, %93 ]
  %106 = add nsw i32 %105, 1
  %107 = and i32 %106, %85
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i64, i64* %88, i64 %108
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, %1
  br i1 %111, label %112, label %95

112:                                              ; preds = %104, %99, %79, %58
  %113 = phi i32 [ %60, %58 ], [ %101, %99 ], [ %86, %79 ], [ %107, %104 ]
  %114 = phi i64 [ 4294967296, %58 ], [ 0, %99 ], [ 4294967296, %79 ], [ 4294967296, %104 ]
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  ret i64 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64*, i8 } @_ZN2v88internal15IdentityMapBase17FindOrInsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = tail call i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"* %0, i64 %1)
  br label %23

13:                                               ; preds = %7
  %14 = tail call i64 @_ZN2v88internal15IdentityMapBase14LookupOrInsertEm(%"class.v8::internal::IdentityMapBase"* %0, i64 %1)
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %16 = load i64*, i64** %15, align 8
  %17 = shl i64 %14, 32
  %18 = ashr exact i64 %17, 32
  %19 = getelementptr inbounds i64, i64* %16, i64 %18
  %20 = lshr i64 %14, 32
  %21 = trunc i64 %20 to i8
  %22 = and i8 %21, 1
  br label %23

23:                                               ; preds = %13, %11
  %24 = phi i64* [ %12, %11 ], [ %19, %13 ]
  %25 = phi i8 [ 0, %11 ], [ %22, %13 ]
  %26 = insertvalue { i64*, i8 } undef, i64* %24, 0
  %27 = insertvalue { i64*, i8 } %26, i8 %25, 1
  ret { i64*, i8 } %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15IdentityMapBase11InsertEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %64

11:                                               ; preds = %7
  store i32 4, i32* %8, align 8
  %12 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  store i32 3, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %14 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %14, i64 0, i32 51
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  store i32 %16, i32* %17, align 8
  %18 = bitcast %"class.v8::internal::IdentityMapBase"* %0 to i64* (%"class.v8::internal::IdentityMapBase"*, i64)***
  %19 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)**, i64* (%"class.v8::internal::IdentityMapBase"*, i64)*** %18, align 8
  %20 = getelementptr inbounds i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %19, i64 2
  %21 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %20, align 8
  %22 = tail call i64* %21(%"class.v8::internal::IdentityMapBase"* %0, i64 4) #12
  %23 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  store i64* %22, i64** %23, align 8
  %24 = bitcast %"class.v8::internal::Heap"** %13 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, -41416
  %27 = inttoptr i64 %26 to %"class.v8::internal::Isolate"*
  %28 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %27, i64 0, i32 0, i32 7, i32 0, i64 491
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %8, align 8
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %11
  store i64 %29, i64* %22, align 8
  %33 = load i32, i32* %8, align 8
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %56, label %35

35:                                               ; preds = %56, %32, %11
  %36 = phi i32 [ %30, %11 ], [ %33, %32 ], [ %61, %56 ]
  %37 = sext i32 %36 to i64
  %38 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)**, i64* (%"class.v8::internal::IdentityMapBase"*, i64)*** %18, align 8
  %39 = getelementptr inbounds i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %38, i64 2
  %40 = load i64* (%"class.v8::internal::IdentityMapBase"*, i64)*, i64* (%"class.v8::internal::IdentityMapBase"*, i64)** %39, align 8
  %41 = tail call i64* %40(%"class.v8::internal::IdentityMapBase"* %0, i64 %37) #12
  %42 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  store i64* %41, i64** %42, align 8
  %43 = bitcast i64* %41 to i8*
  %44 = load i32, i32* %8, align 8
  %45 = sext i32 %44 to i64
  %46 = shl nsw i64 %45, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 %46, i1 false)
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 8
  %48 = load i64*, i64** %23, align 8
  %49 = ptrtoint i64* %48 to i64
  %50 = load i32, i32* %8, align 8
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %51
  %53 = ptrtoint i64* %52 to i64
  %54 = tail call %"class.v8::internal::StrongRootsEntry"* @_ZN2v88internal4Heap19RegisterStrongRootsENS0_14FullObjectSlotES2_(%"class.v8::internal::Heap"* %47, i64 %49, i64 %53) #12
  %55 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 9
  store %"class.v8::internal::StrongRootsEntry"* %54, %"class.v8::internal::StrongRootsEntry"** %55, align 8
  br label %73

56:                                               ; preds = %32, %56
  %57 = phi i64 [ %60, %56 ], [ 1, %32 ]
  %58 = load i64*, i64** %23, align 8
  %59 = getelementptr inbounds i64, i64* %58, i64 %57
  store i64 %29, i64* %59, align 8
  %60 = add nuw nsw i64 %57, 1
  %61 = load i32, i32* %8, align 8
  %62 = sext i32 %61 to i64
  %63 = icmp slt i64 %60, %62
  br i1 %63, label %56, label %35

64:                                               ; preds = %7
  %65 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %68 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %68, i64 0, i32 51
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %66, %70
  br i1 %71, label %73, label %72

72:                                               ; preds = %64
  tail call void @_ZN2v88internal15IdentityMapBase6RehashEv(%"class.v8::internal::IdentityMapBase"* %0)
  br label %73

73:                                               ; preds = %64, %72, %35
  %74 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %75 = bitcast %"class.v8::internal::Heap"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -41416
  %78 = inttoptr i64 %77 to %"class.v8::internal::Isolate"*
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %78, i64 0, i32 0, i32 7, i32 0, i64 491
  %80 = load i64, i64* %79, align 8
  %81 = icmp eq i64 %80, %1
  br i1 %81, label %82, label %83, !prof !4

82:                                               ; preds = %73
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #11
  unreachable

83:                                               ; preds = %73
  %84 = tail call i64 @_ZN2v84base10hash_valueEm(i64 %1) #12
  %85 = trunc i64 %84 to i32
  %86 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %87 = load i32, i32* %86, align 4
  %88 = sdiv i32 %87, 4
  %89 = add nsw i32 %88, %87
  %90 = load i32, i32* %8, align 8
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %94, label %92

92:                                               ; preds = %83
  %93 = shl nsw i32 %90, 1
  tail call void @_ZN2v88internal15IdentityMapBase6ResizeEi(%"class.v8::internal::IdentityMapBase"* %0, i32 %93) #12
  br label %94

94:                                               ; preds = %92, %83
  %95 = load i64, i64* %75, align 8
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 491
  %99 = load i64, i64* %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 7
  %101 = load i32, i32* %100, align 4
  %102 = and i32 %101, %85
  %103 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %104 = load i64*, i64** %103, align 8
  %105 = sext i32 %102 to i64
  %106 = getelementptr inbounds i64, i64* %104, i64 %105
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %1
  br i1 %108, label %128, label %109

109:                                              ; preds = %94
  %110 = icmp eq i64 %107, %99
  br i1 %110, label %115, label %120

111:                                              ; preds = %120
  %112 = icmp eq i64 %126, %99
  br i1 %112, label %113, label %120

113:                                              ; preds = %111
  %114 = getelementptr inbounds i64, i64* %104, i64 %124
  br label %115

115:                                              ; preds = %113, %109
  %116 = phi i64 [ %105, %109 ], [ %124, %113 ]
  %117 = phi i64* [ %106, %109 ], [ %114, %113 ]
  %118 = load i32, i32* %86, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %86, align 4
  store i64 %1, i64* %117, align 8
  br label %128

120:                                              ; preds = %109, %111
  %121 = phi i32 [ %123, %111 ], [ %102, %109 ]
  %122 = add nsw i32 %121, 1
  %123 = and i32 %122, %101
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i64, i64* %104, i64 %124
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, %1
  br i1 %127, label %128, label %111

128:                                              ; preds = %120, %94, %115
  %129 = phi i64 [ %105, %94 ], [ %116, %115 ], [ %124, %120 ]
  %130 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %131 = load i64*, i64** %130, align 8
  %132 = getelementptr inbounds i64, i64* %131, i64 %129
  ret i64* %132
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal15IdentityMapBase9FindEntryEm(%"class.v8::internal::IdentityMapBase"*, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6, !prof !3

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @_ZNK2v88internal15IdentityMapBase6LookupEm(%"class.v8::internal::IdentityMapBase"* %0, i64 %1)
  %13 = icmp sgt i32 %12, -1
  br i1 %13, label %14, label %19

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %16 = load i64*, i64** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i64, i64* %16, i64 %17
  br label %19

19:                                               ; preds = %14, %11, %7
  %20 = phi i64* [ null, %7 ], [ %18, %14 ], [ null, %11 ]
  ret i64* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

declare %"class.v8::internal::StrongRootsEntry"* @_ZN2v88internal4Heap19RegisterStrongRootsENS0_14FullObjectSlotES2_(%"class.v8::internal::Heap"*, i64, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15IdentityMapBase11DeleteEntryEmPm(%"class.v8::internal::IdentityMapBase"*, i64, i64*) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 5
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = tail call i32 @_ZNK2v88internal15IdentityMapBase6LookupEm(%"class.v8::internal::IdentityMapBase"* %0, i64 %1)
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_ZN2v88internal15IdentityMapBase11DeleteIndexEiPm(%"class.v8::internal::IdentityMapBase"* %0, i32 %13, i64* %2)
  br label %17

17:                                               ; preds = %15, %12, %8
  %18 = phi i1 [ false, %8 ], [ true, %15 ], [ false, %12 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal15IdentityMapBase10KeyAtIndexEi(%"class.v8::internal::IdentityMapBase"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !4

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %9 = load i64*, i64** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  %12 = load i64, i64* %11, align 8
  ret i64 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZNK2v88internal15IdentityMapBase12EntryAtIndexEi(%"class.v8::internal::IdentityMapBase"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !4

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 10
  %9 = load i64*, i64** %8, align 8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds i64, i64* %9, i64 %10
  ret i64* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15IdentityMapBase9NextIndexEi(%"class.v8::internal::IdentityMapBase"* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7, !prof !4

6:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 3
  %9 = bitcast %"class.v8::internal::Heap"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 491
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 8
  %16 = getelementptr inbounds %"class.v8::internal::IdentityMapBase", %"class.v8::internal::IdentityMapBase"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %1 to i64
  %19 = sext i32 %17 to i64
  br label %20

20:                                               ; preds = %24, %7
  %21 = phi i64 [ %22, %24 ], [ %18, %7 ]
  %22 = add nsw i64 %21, 1
  %23 = icmp slt i64 %22, %19
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = load i64*, i64** %15, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 %22
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, %14
  br i1 %28, label %20, label %29

29:                                               ; preds = %24
  %30 = trunc i64 %22 to i32
  br label %31

31:                                               ; preds = %20, %29
  %32 = phi i32 [ %30, %29 ], [ %17, %20 ]
  ret i32 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare void @_ZN2v88internal4Heap17UpdateStrongRootsEPNS0_16StrongRootsEntryENS0_14FullObjectSlotES4_(%"class.v8::internal::Heap"*, %"class.v8::internal::StrongRootsEntry"*, i64, i64) local_unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare i64 @_ZN2v84base10hash_valueEm(i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
