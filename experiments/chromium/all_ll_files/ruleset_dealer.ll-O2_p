; ModuleID = '../../components/subresource_filter/content/common/ruleset_dealer.cc'
source_filename = "../../components/subresource_filter/content/common/ruleset_dealer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.subresource_filter::RulesetDealer" = type <{ i32 (...)**, %"class.base::File", %"class.base::WeakPtr", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::File" = type <{ %"class.base::ScopedGeneric", %"class.base::FilePath", %"class.base::FileTracing::ScopedEnabler", [3 x i8], i32, i8, i8, [6 x i8] }>
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::FileTracing::ScopedEnabler" = type { i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.subresource_filter::MemoryMappedRuleset" = type { %"class.base::RefCounted", %"class.base::SupportsWeakPtr", %"class.base::MemoryMappedFile" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::MemoryMappedFile" = type { %"class.base::File", i8*, i64 }

@_ZTVN18subresource_filter13RulesetDealerE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.subresource_filter::RulesetDealer"*)* @_ZN18subresource_filter13RulesetDealerD2Ev to i8*), i8* bitcast (void (%"class.subresource_filter::RulesetDealer"*)* @_ZN18subresource_filter13RulesetDealerD0Ev to i8*), i8* bitcast (void (%"class.subresource_filter::RulesetDealer"*, %"class.base::File"*)* @_ZN18subresource_filter13RulesetDealer14SetRulesetFileEN4base4FileE to i8*), i8* bitcast (%"class.subresource_filter::MemoryMappedRuleset"* (%"class.subresource_filter::RulesetDealer"*)* @_ZN18subresource_filter13RulesetDealer10GetRulesetEv to i8*)] }, align 8

@_ZN18subresource_filter13RulesetDealerC1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::RulesetDealer"*), void (%"class.subresource_filter::RulesetDealer"*)* @_ZN18subresource_filter13RulesetDealerC2Ev
@_ZN18subresource_filter13RulesetDealerD1Ev = hidden unnamed_addr alias void (%"class.subresource_filter::RulesetDealer"*), void (%"class.subresource_filter::RulesetDealer"*)* @_ZN18subresource_filter13RulesetDealerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter13RulesetDealerC2Ev(%"class.subresource_filter::RulesetDealer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18subresource_filter13RulesetDealerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileC1Ev(%"class.base::File"* %3) #5
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"* %4) #5
  ret void
}

declare void @_ZN4base4FileC1Ev(%"class.base::File"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter13RulesetDealerD2Ev(%"class.subresource_filter::RulesetDealer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18subresource_filter13RulesetDealerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #5
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base4FileD1Ev(%"class.base::File"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter13RulesetDealerD0Ev(%"class.subresource_filter::RulesetDealer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN18subresource_filter13RulesetDealerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #5
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  tail call void @_ZN4base4FileD1Ev(%"class.base::File"* %4) #5
  %5 = bitcast %"class.subresource_filter::RulesetDealer"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter13RulesetDealer14SetRulesetFileEN4base4FileE(%"class.subresource_filter::RulesetDealer"*, %"class.base::File"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  %5 = tail call dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"* %4, %"class.base::File"* dereferenceable(56) %1) #5
  %6 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0
  %7 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  %8 = getelementptr inbounds %"class.base::internal::WeakReference", %"class.base::internal::WeakReference"* %3, i64 0, i32 0, i32 0
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %8, align 8
  %11 = bitcast %"class.base::internal::WeakPtrBase"* %6 to i64*
  %12 = getelementptr inbounds %"class.base::internal::WeakPtrBase", %"class.base::internal::WeakPtrBase"* %6, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.base::internal::WeakReference::Flag"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %13) #5
  %20 = bitcast %"class.base::internal::WeakReference::Flag"* %13 to i8*
  call void @_ZdlPv(i8* %20) #6
  br label %21

21:                                               ; preds = %2, %15, %19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  %22 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 0, i64* %22, align 8
  ret void
}

declare dereferenceable(56) %"class.base::File"* @_ZN4base4FileaSEOS0_(%"class.base::File"*, %"class.base::File"* dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK18subresource_filter13RulesetDealer22IsRulesetFileAvailableEv(%"class.subresource_filter::RulesetDealer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %2) #5
  ret i1 %3
}

declare zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.subresource_filter::MemoryMappedRuleset"* @_ZN18subresource_filter13RulesetDealer10GetRulesetEv(%"class.subresource_filter::RulesetDealer"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::File", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZNK4base4File7IsValidEv(%"class.base::File"* %5) #5
  br i1 %6, label %7, label %53

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0
  %10 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #5
  br i1 %10, label %11, label %24

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i64* %12 to %"class.subresource_filter::MemoryMappedRuleset"**
  %14 = load %"class.subresource_filter::MemoryMappedRuleset"*, %"class.subresource_filter::MemoryMappedRuleset"** %13, align 8
  %15 = icmp eq %"class.subresource_filter::MemoryMappedRuleset"* %14, null
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %9) #5
  br i1 %17, label %18, label %53

18:                                               ; preds = %16
  %19 = load %"class.subresource_filter::MemoryMappedRuleset"*, %"class.subresource_filter::MemoryMappedRuleset"** %13, align 8
  %20 = icmp eq %"class.subresource_filter::MemoryMappedRuleset"* %19, null
  br i1 %20, label %53, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %19, i64 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %22) #5
  %23 = ptrtoint %"class.subresource_filter::MemoryMappedRuleset"* %19 to i64
  br label %53

24:                                               ; preds = %11, %7
  call void @_ZNK4base4File9DuplicateEv(%"class.base::File"* nonnull sret %3, %"class.base::File"* %5) #5
  %25 = call %"class.subresource_filter::MemoryMappedRuleset"* @_ZN18subresource_filter19MemoryMappedRuleset19CreateAndInitializeEN4base4FileE(%"class.base::File"* nonnull %3) #5
  %26 = ptrtoint %"class.subresource_filter::MemoryMappedRuleset"* %25 to i64
  call void @_ZN4base4FileD1Ev(%"class.base::File"* nonnull %3) #5
  %27 = icmp eq %"class.subresource_filter::MemoryMappedRuleset"* %25, null
  br i1 %27, label %53, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #5
  %30 = getelementptr inbounds %"class.subresource_filter::MemoryMappedRuleset", %"class.subresource_filter::MemoryMappedRuleset"* %25, i64 0, i32 1
  %31 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #5, !noalias !2
  %32 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %30, i64 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %32) #5, !noalias !2
  %33 = getelementptr inbounds %"class.base::SupportsWeakPtr", %"class.base::SupportsWeakPtr"* %30, i64 -1
  %34 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  %35 = ptrtoint %"class.base::SupportsWeakPtr"* %33 to i64
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %34, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %35) #5
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #5, !noalias !2
  %36 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::WeakPtr"* %4 to i64*
  %38 = load i64, i64* %37, align 8
  store %"class.base::internal::WeakReference::Flag"* null, %"class.base::internal::WeakReference::Flag"** %36, align 8
  %39 = bitcast %"class.base::WeakPtr"* %8 to i64*
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.base::internal::WeakReference::Flag"*, %"class.base::internal::WeakReference::Flag"** %40, align 8
  store i64 %38, i64* %39, align 8
  %42 = icmp eq %"class.base::internal::WeakReference::Flag"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %28
  %44 = getelementptr inbounds %"class.base::internal::WeakReference::Flag", %"class.base::internal::WeakReference::Flag"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  call void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"* nonnull %41) #5
  %48 = bitcast %"class.base::internal::WeakReference::Flag"* %41 to i8*
  call void @_ZdlPv(i8* %48) #6
  br label %49

49:                                               ; preds = %28, %43, %47
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %0, i64 0, i32 2, i32 0, i32 1
  store i64 %51, i64* %52, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %34) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #5
  br label %53

53:                                               ; preds = %24, %21, %18, %16, %49, %1
  %54 = phi i64 [ 0, %1 ], [ %26, %49 ], [ %23, %21 ], [ 0, %18 ], [ 0, %16 ], [ 0, %24 ]
  %55 = inttoptr i64 %54 to %"class.subresource_filter::MemoryMappedRuleset"*
  ret %"class.subresource_filter::MemoryMappedRuleset"* %55
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.subresource_filter::MemoryMappedRuleset"* @_ZN18subresource_filter19MemoryMappedRuleset19CreateAndInitializeEN4base4FileE(%"class.base::File"*) local_unnamed_addr #1

declare void @_ZNK4base4File9DuplicateEv(%"class.base::File"* sret, %"class.base::File"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18subresource_filter13RulesetDealer20DuplicateRulesetFileEv(%"class.base::File"* noalias sret, %"class.subresource_filter::RulesetDealer"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.subresource_filter::RulesetDealer", %"class.subresource_filter::RulesetDealer"* %1, i64 0, i32 1
  tail call void @_ZNK4base4File9DuplicateEv(%"class.base::File"* sret %0, %"class.base::File"* %3) #5
  ret void
}

declare void @_ZN4base8internal11WeakPtrBaseC2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

declare void @_ZN4base8internal13WeakReferenceC1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReference4FlagD1Ev(%"class.base::internal::WeakReference::Flag"*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base15SupportsWeakPtrIN18subresource_filter19MemoryMappedRulesetEE9AsWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZN4base15SupportsWeakPtrIN18subresource_filter19MemoryMappedRulesetEE9AsWeakPtrEv"}
