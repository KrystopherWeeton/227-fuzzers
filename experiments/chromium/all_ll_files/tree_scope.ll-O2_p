; ModuleID = '../../third_party/blink/renderer/core/dom/tree_scope.cc'
source_filename = "../../third_party/blink/renderer/core/dom/tree_scope.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::Element>, 0> > >::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::Persistent<blink::HeapVector<blink::Member<blink::Element>, 0> > >::InstanceStorage" = type { [16 x i8] }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1763", i64 }
%"class.std::__1::vector.1763" = type { %"class.std::__1::__vector_base.1764" }
%"class.std::__1::__vector_base.1764" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1765" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.391", %"class.blink::Member.467", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.472", %"class.blink::HeapVector.395" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type { %"class.blink::HeapHashMap.376", %"class.blink::Member.383" }
%"class.blink::HeapHashMap.376" = type { %"class.WTF::HashMap.379" }
%"class.WTF::HashMap.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"struct.WTF::KeyValuePair.382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.382" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::HeapHashSet"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"class.blink::Member.389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type <{ %"class.blink::Member.320", %"class.blink::HeapVector.395", %"class.WTF::Vector.424", %"class.WTF::Vector.424", %"class.blink::HeapHashMap.455", %"class.blink::Member.462", %"class.blink::Member.464", i8, i8, [6 x i8] }>
%"class.WTF::Vector.424" = type { %"class.WTF::VectorBuffer.425" }
%"class.WTF::VectorBuffer.425" = type { %"class.WTF::VectorBufferBase.426" }
%"class.WTF::VectorBufferBase.426" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::HeapHashMap.455" = type { %"class.WTF::HashMap.458" }
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.461"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.461" = type { %"class.WTF::AtomicString", %"class.blink::Member.1429" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1431", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::HeapVector.466"* }
%"class.blink::HeapVector.466" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient", %"class.blink::Member.312" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.932" }
%"class.blink::WeakMember.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1000", i32, i8, [3 x i8], %"class.blink::HeapVector.1002", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1021", %"class.blink::Member.1147", %"class.blink::Member.1149", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.934" }
%"class.blink::HeapHashMap.934" = type { %"class.WTF::HashMap.937" }
%"class.WTF::HashMap.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"struct.WTF::KeyValuePair.940"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.940" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.948" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.941" }
%"class.blink::HeapHashSet.941" = type { %"class.WTF::HashSet.944" }
%"class.WTF::HashSet.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ %"class.blink::WeakMember.947"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.947" = type opaque
%"class.blink::Supplementable.948" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.949" }
%"class.blink::HeapHashMap.949" = type { %"class.WTF::HashMap.952" }
%"class.WTF::HashMap.952" = type { %"class.WTF::HashTable.953" }
%"class.WTF::HashTable.953" = type <{ %"struct.WTF::KeyValuePair.955"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.955" = type { i8*, %"class.blink::Member.2991" }
%"class.blink::Member.2991" = type { %"class.blink::MemberBase.2992" }
%"class.blink::MemberBase.2992" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2993" }
%"class.blink::Member.2993" = type { %"class.blink::MemberBase.2994" }
%"class.blink::MemberBase.2994" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.956, %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.965", %"class.std::__1::unique_ptr.989", %"class.std::__1::unique_ptr.989", %"class.blink::Member.995", i32, [4 x i8], %"class.WTF::HashSet.996", i32, i32 }
%class.scoped_refptr.956 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.957", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.959", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.964 }
%"class.WTF::RefCounted.957" = type { %"class.base::RefCounted.958" }
%"class.base::RefCounted.958" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.959" = type { %"class.absl::optional_internal::optional_data.960" }
%"class.absl::optional_internal::optional_data.960" = type { %"class.absl::optional_internal::optional_data_base.961" }
%"class.absl::optional_internal::optional_data_base.961" = type { %"class.absl::optional_internal::optional_data_dtor_base.962" }
%"class.absl::optional_internal::optional_data_dtor_base.962" = type { i8, %union.anon.963 }
%union.anon.963 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.964 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.965" = type { %"class.std::__1::__compressed_pair.966" }
%"class.std::__1::__compressed_pair.966" = type { %"struct.std::__1::__compressed_pair_elem.967" }
%"struct.std::__1::__compressed_pair_elem.967" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.976", %"class.std::__1::map.985"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.959" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.968", %"class.std::__1::__compressed_pair.973" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.976" = type { %"class.std::__1::__tree.977" }
%"class.std::__1::__tree.977" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.978", %"class.std::__1::__compressed_pair.982" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.985" = type opaque
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.995" = type { %"class.blink::MemberBase.933" }
%"class.WTF::HashSet.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1014", i32, i32 }
%"class.blink::HeapHashMap.1014" = type { %"class.WTF::HashMap.1017" }
%"class.WTF::HashMap.1017" = type { %"class.WTF::HashTable.1018" }
%"class.WTF::HashTable.1018" = type <{ %"struct.WTF::KeyValuePair.1020"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1020" = type opaque
%"class.std::__1::unique_ptr.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1024" }
%"class.std::__1::unique_ptr.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1027" }
%"class.WTF::Vector.1027" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"class.mojo::StructPtr.1030"*, i32, i32 }
%"class.mojo::StructPtr.1030" = type { %"class.std::__1::unique_ptr.1031" }
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1034", %"class.WTF::HashMap.1041", %"class.WTF::HashMap.1046", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.663", i32, %"class.mojo::StructPtr.1051", %"class.WTF::Vector.663" }
%"class.mojo::StructPtr.1034" = type { %"class.std::__1::unique_ptr.1035" }
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1041" = type { %"class.WTF::HashTable.1042" }
%"class.WTF::HashTable.1042" = type <{ %"struct.WTF::KeyValuePair.1045"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1045" = type opaque
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1050"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1050" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1051" = type { %"class.std::__1::unique_ptr.1052" }
%"class.std::__1::unique_ptr.1052" = type { %"class.std::__1::__compressed_pair.1053" }
%"class.std::__1::__compressed_pair.1053" = type { %"struct.std::__1::__compressed_pair_elem.1054" }
%"struct.std::__1::__compressed_pair_elem.1054" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.663", i8, i8, [6 x i8] }>
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665" }
%"class.WTF::VectorBufferBase.665" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1138" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1066", i32 }>
%"class.std::__1::unique_ptr.1066" = type { %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.1068" }
%"struct.std::__1::__compressed_pair_elem.1068" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.absl::optional.1071", %"class.absl::optional.1076", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1091", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1113", %"class.std::__1::map.1124", i64, %"class.base::OnceCallback.1084", %"class.base::OnceCallback.1133", i8, %class.scoped_refptr.1081, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1134" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.1069 }
%class.scoped_refptr.1069 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.1070", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.1070" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1071" = type { %"class.absl::optional_internal::optional_data.1072" }
%"class.absl::optional_internal::optional_data.1072" = type { %"class.absl::optional_internal::optional_data_base.1073" }
%"class.absl::optional_internal::optional_data_base.1073" = type { %"class.absl::optional_internal::optional_data_dtor_base.1074" }
%"class.absl::optional_internal::optional_data_dtor_base.1074" = type { i8, %union.anon.1075 }
%union.anon.1075 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1076" = type { %"class.absl::optional_internal::optional_data.1077" }
%"class.absl::optional_internal::optional_data.1077" = type { %"class.absl::optional_internal::optional_data_base.1078" }
%"class.absl::optional_internal::optional_data_base.1078" = type { %"class.absl::optional_internal::optional_data_dtor_base.1079" }
%"class.absl::optional_internal::optional_data_dtor_base.1079" = type { i8, %union.anon.1080 }
%union.anon.1080 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback.1084" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1081, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1083 }
%class.scoped_refptr.1083 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1089 }
%class.scoped_refptr.1089 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1151", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1081, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1151" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1090 }
%class.scoped_refptr.1090 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1091" = type { %"class.std::__1::__compressed_pair.1092" }
%"class.std::__1::__compressed_pair.1092" = type { %"struct.std::__1::__compressed_pair_elem.1093" }
%"struct.std::__1::__compressed_pair_elem.1093" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1094", %class.scoped_refptr.1095 }
%"class.base::RepeatingCallback.1094" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1095 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1096", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1096" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1100", %"class.std::__1::unique_ptr.1106", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1112" }
%"class.std::__1::unique_ptr.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.1102" }
%"struct.std::__1::__compressed_pair_elem.1102" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1112" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1113" = type { %"class.std::__1::__tree.1114" }
%"class.std::__1::__tree.1114" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1115", %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1124" = type { %"class.std::__1::__tree.1125" }
%"class.std::__1::__tree.1125" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1126", %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1084" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1133" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1081 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1082" }>
%"class.base::RefCountedThreadSafe.1082" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback.1084" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1134" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1138" = type { %"class.std::__1::__compressed_pair.1139" }
%"class.std::__1::__compressed_pair.1139" = type { %"struct.std::__1::__compressed_pair_elem.1140" }
%"struct.std::__1::__compressed_pair_elem.1140" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.469" }
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::HeapHashMap.471"* }
%"class.blink::HeapHashMap.471" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type { %"class.blink::HeapHashMap.2878", %"class.blink::Member.320" }
%"class.blink::HeapHashMap.2878" = type { %"class.WTF::HashMap.2881" }
%"class.WTF::HashMap.2881" = type { %"class.WTF::HashTable.2882" }
%"class.WTF::HashTable.2882" = type <{ %"struct.WTF::KeyValuePair.2884"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2884" = type opaque
%"class.blink::HeapVector.395" = type { %"class.WTF::Vector.398" }
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"class.blink::Member.401"*, i32, i32 }
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.403", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.405, %"class.WTF::Vector.424", %"class.WTF::Vector.424", %"class.blink::Member.318", %"class.blink::Member.429", %"class.blink::HeapHashSet.433", %"class.blink::Member.326", %"class.WTF::HashSet.439", %"class.WTF::TextPosition", %"class.blink::Member.443", %"class.blink::HeapVector.445", %"class.blink::Member.452" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.405 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.406", %"class.WTF::Vector.408" }
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.408" = type { %"class.WTF::VectorBuffer.409" }
%"class.WTF::VectorBuffer.409" = type { %"class.WTF::VectorBufferBase.410" }
%"class.WTF::VectorBufferBase.410" = type { %"class.std::__1::unique_ptr.411"*, i32, i32 }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.414", %"class.WTF::String" }
%"class.WTF::Vector.414" = type { %"class.WTF::VectorBuffer.415" }
%"class.WTF::VectorBuffer.415" = type { %"class.WTF::VectorBufferBase.416" }
%"class.WTF::VectorBufferBase.416" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.431" }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.433" = type { %"class.WTF::HashSet.436" }
%"class.WTF::HashSet.436" = type { %"class.WTF::HashTable.437" }
%"class.WTF::HashTable.437" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.439" = type { %"class.WTF::HashTable.440" }
%"class.WTF::HashTable.440" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.405, %"class.blink::Member.401", %"class.blink::Member.429" }
%"class.blink::HeapVector.445" = type { %"class.WTF::Vector.448" }
%"class.WTF::Vector.448" = type { %"class.WTF::VectorBuffer.449" }
%"class.WTF::VectorBuffer.449" = type { %"class.WTF::VectorBufferBase.450" }
%"class.WTF::VectorBufferBase.450" = type { %"class.blink::Member.429"*, i32, i32 }
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1152", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1160", %"class.WTF::Vector.1160", i8, i32, %"class.blink::Member.1165", %"class.blink::Member.995", %"class.blink::Member.1167", %"class.blink::Member.1169", %"class.blink::Member.1171", %"class.blink::Member.1173", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1181", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1187", %"class.blink::Member.1189", %"class.blink::Member.401", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1192", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1216", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1225", double, double, i64, i64, %"class.blink::HeapHashSet.1227", %"class.blink::HeapHashSet.1234", i16, i8, %"class.blink::Member.1241", %"class.blink::Member.1243", %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::TextLinkColors", %"class.blink::Member.1562", i8, [7 x i8], %"class.blink::HeapHashMap.1564", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1571", %"class.blink::Member.1576", %"class.blink::Member.1578", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1580", %"class.blink::HeapVector.1582", %"class.std::__1::unique_ptr.1590", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1596", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1609", %"class.WTF::Vector.1611", i8, i8, %"class.std::__1::unique_ptr.1616", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1622", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1630", i8, i32, %"class.blink::Member.1632", %"class.blink::Member.1634", %"class.blink::Member.1636", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1638", %"class.WTF::HashMap.1640", %"class.blink::Member.1645", %"class.blink::Member.1647", %"class.blink::Member.1649", %"class.blink::Member.1651", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1653", i8, i32, %"class.blink::Member.1660", %"class.blink::Member.1662", i32, %"class.blink::Member.1664", %"class.blink::Member.1666", %"class.blink::Member.1668", %"class.std::__1::unique_ptr.1670", i64, %"class.std::__1::unique_ptr.1676", i32, i32, %"class.blink::Member.1687", %"class.blink::Member.1689", %"class.blink::Member.1691", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1693", %"class.WTF::Vector.1695", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1700", %"class.blink::Member.1707", %"class.std::__1::unique_ptr.1709", %"class.blink::Member.1715", i8, i8, %"class.WTF::String", %"class.blink::Member.1717", i8, [7 x i8], %"class.blink::HeapHashMap.1719", %"class.blink::HeapObserverSet.1726", %"class.blink::Member.1734", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1736", i32, i8, i8, %"class.blink::WeakMember.1738", %"class.blink::Member.1739" }
%"class.blink::Supplementable.1152" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1153" }
%"class.blink::HeapHashMap.1153" = type { %"class.WTF::HashMap.1156" }
%"class.WTF::HashMap.1156" = type { %"class.WTF::HashTable.1157" }
%"class.WTF::HashTable.1157" = type <{ %"struct.WTF::KeyValuePair.1159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1159" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.1160" = type { %"class.WTF::VectorBuffer.1161" }
%"class.WTF::VectorBuffer.1161" = type { %"class.WTF::VectorBufferBase.1162" }
%"class.WTF::VectorBufferBase.1162" = type { %"class.base::OnceCallback.1084"*, i32, i32 }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1167" = type { %"class.blink::MemberBase.1168" }
%"class.blink::MemberBase.1168" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1181" = type { %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1175" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1175" = type { %"class.std::__1::__compressed_pair.1176" }
%"class.std::__1::__compressed_pair.1176" = type { %"struct.std::__1::__compressed_pair_elem.1177" }
%"struct.std::__1::__compressed_pair_elem.1177" = type { %"class.blink::KURL"* }
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1191 }
%class.scoped_refptr.1191 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1192" = type { %"class.WTF::VectorBuffer.1193" }
%"class.WTF::VectorBuffer.1193" = type { %"class.WTF::VectorBufferBase.1194" }
%"class.WTF::VectorBufferBase.1194" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1195 }
%class.scoped_refptr.1195 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1196", i32, i32, %"class.blink::Persistent.1198" }
%"class.WTF::RefCounted.1196" = type { %"class.base::RefCounted.1197" }
%"class.base::RefCounted.1197" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1198" = type { %"class.blink::PersistentBase.1199" }
%"class.blink::PersistentBase.1199" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1202" }
%"class.blink::HeapHashMap.1202" = type { %"class.WTF::HashMap.1205" }
%"class.WTF::HashMap.1205" = type { %"class.WTF::HashTable.1206" }
%"class.WTF::HashTable.1206" = type <{ %"struct.WTF::KeyValuePair.1208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1208" = type { %"class.blink::WeakMember.1209", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1209" = type { %"class.blink::MemberBase.1210" }
%"class.blink::MemberBase.1210" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1218" }
%"class.blink::HeapHashMap.1218" = type { %"class.WTF::HashMap.1221" }
%"class.WTF::HashMap.1221" = type { %"class.WTF::HashTable.1222" }
%"class.WTF::HashTable.1222" = type <{ %"struct.WTF::KeyValuePair.1224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1224" = type opaque
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1227" = type { %"class.WTF::HashSet.1230" }
%"class.WTF::HashSet.1230" = type { %"class.WTF::HashTable.1231" }
%"class.WTF::HashTable.1231" = type <{ %"class.blink::WeakMember.1233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1233" = type opaque
%"class.blink::HeapHashSet.1234" = type { %"class.WTF::HashSet.1237" }
%"class.WTF::HashSet.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"class.blink::WeakMember.1240"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1240" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.401", %"class.blink::Member.1247", %"class.blink::Member.1274", %"class.blink::HeapHashMap.1276", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1283", %"class.blink::HeapHashSet.1283", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1289", %"class.blink::Member.1301", %"class.blink::Member.1330", %"class.blink::Member.1332", %"class.blink::Member.1338", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1500", %"class.blink::Member.1506", %"class.blink::HeapHashMap.1508", %"class.blink::HeapHashMap.1515", %"class.std::__1::unique_ptr.1522", i32, %"class.blink::HeapVector.1528", %"class.blink::HeapVector.1528", %"class.blink::HeapVector.1259", %"class.blink::HeapHashSet.1536", %"class.blink::HeapHashMap.455", %"class.blink::Member.462", %"class.blink::HeapHashMap.1543", %class.scoped_refptr.1550, %class.scoped_refptr.259, %"class.blink::Member.1464", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1551", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1251", %"class.blink::HeapVector.1259", i8 }>
%"class.blink::HeapVector.1251" = type { %"class.WTF::Vector.1254" }
%"class.WTF::Vector.1254" = type { %"class.WTF::VectorBuffer.1255" }
%"class.WTF::VectorBuffer.1255" = type { %"class.WTF::VectorBufferBase.1256" }
%"class.WTF::VectorBufferBase.1256" = type { %"class.blink::Member.1257"*, i32, i32 }
%"class.blink::Member.1257" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1270", %"class.blink::Member.1272", %"class.blink::Member.1272", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1270" = type <{ %"class.blink::Member.1272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1272" = type { %"class.blink::MemberBase.1273" }
%"class.blink::MemberBase.1273" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1272", %"class.blink::Member.1272" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1274" = type { %"class.blink::MemberBase.1275" }
%"class.blink::MemberBase.1275" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1276" = type { %"class.WTF::HashMap.1279" }
%"class.WTF::HashMap.1279" = type { %"class.WTF::HashTable.1280" }
%"class.WTF::HashTable.1280" = type <{ %"struct.WTF::KeyValuePair.1282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1282" = type opaque
%"class.blink::HeapHashSet.1283" = type { %"class.WTF::HashSet.1286" }
%"class.WTF::HashSet.1286" = type { %"class.WTF::HashTable.1287" }
%"class.WTF::HashTable.1287" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1291", %"class.blink::Member.1293" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.720" }
%"class.blink::HeapHashMap.720" = type { %"class.WTF::HashMap.723" }
%"class.WTF::HashMap.723" = type { %"class.WTF::HashTable.724" }
%"class.WTF::HashTable.724" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type opaque
%"class.blink::Member.1293" = type { %"class.blink::MemberBase.1294" }
%"class.blink::MemberBase.1294" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1297", %"class.blink::Member.1299" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1299" = type { %"class.blink::MemberBase.1300" }
%"class.blink::MemberBase.1300" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1754", %"class.blink::Member.1293", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.850] }
%"class.blink::HeapVector.1754" = type { %"class.WTF::Vector.1757" }
%"class.WTF::Vector.1757" = type { %"class.WTF::VectorBuffer.1758" }
%"class.WTF::VectorBuffer.1758" = type { %"class.WTF::VectorBufferBase.1759" }
%"class.WTF::VectorBufferBase.1759" = type { %"class.blink::Member.1299"*, i32, i32 }
%class.sk_sp.850 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.851, i32, %"class.absl::optional.852", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.851 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.852" = type { %"class.absl::optional_internal::optional_data.853" }
%"class.absl::optional_internal::optional_data.853" = type { %"class.absl::optional_internal::optional_data_base.854" }
%"class.absl::optional_internal::optional_data_base.854" = type { %"class.absl::optional_internal::optional_data_dtor_base.855" }
%"class.absl::optional_internal::optional_data_dtor_base.855" = type { i8, %union.anon.856 }
%union.anon.856 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1274", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1305" }
%"class.blink::HeapHashMap.1305" = type { %"class.WTF::HashMap.1308" }
%"class.WTF::HashMap.1308" = type { %"class.WTF::HashTable.1309" }
%"class.WTF::HashTable.1309" = type <{ %"struct.WTF::KeyValuePair.1311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1311" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.764", %"class.std::__1::unique_ptr.766" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.476", %"class.blink::DataRef.480", %"class.blink::DataRef.680", %"class.blink::DataRef.747", %"class.blink::DataRef.751", %"class.blink::DataRef.755", %"class.blink::DataRef.759", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1770", [4 x i8] }>
%"class.WTF::RefCounted.1770" = type { %"class.base::RefCounted.1771" }
%"class.base::RefCounted.1771" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.474" }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.476" = type { %class.scoped_refptr.477 }
%class.scoped_refptr.477 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.478", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.480" = type { %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.482", [4 x i8], %"class.blink::DataRef.484", %"class.blink::DataRef.550", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.674", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.484" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.486", [4 x i8], %"class.blink::DataRef.488", %"class.blink::Persistent.526", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.486" = type { %"class.base::RefCounted.487" }
%"class.base::RefCounted.487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.488" = type { %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.490", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.508, %class.scoped_refptr.511, %class.scoped_refptr.514, %class.scoped_refptr.517, %class.scoped_refptr.518, %class.scoped_refptr.519, %"class.blink::Persistent.526", %"class.blink::Persistent.541", %"class.absl::optional.545", %"class.absl::optional.545", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.492", %"class.std::__1::unique_ptr.497" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.500", %"class.WTF::Vector.492", i32, i32 }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.508 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.509", [4 x i8] }>
%"class.WTF::RefCounted.509" = type { %"class.base::RefCounted.510" }
%"class.base::RefCounted.510" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.511 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.512", [4 x i8] }>
%"class.WTF::RefCounted.512" = type { %"class.base::RefCounted.513" }
%"class.base::RefCounted.513" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.514 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.515" }>
%"class.WTF::RefCounted.515" = type { %"class.base::RefCounted.516" }
%"class.base::RefCounted.516" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.517 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.518 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.519 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.520", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.520" = type { %"class.base::RefCounted.521" }
%"class.base::RefCounted.521" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.522" }
%"class.blink::DataRef.522" = type { %class.scoped_refptr.523 }
%class.scoped_refptr.523 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.524" }
%"class.WTF::RefCounted.524" = type { %"class.base::RefCounted.525" }
%"class.base::RefCounted.525" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.541" = type { %"class.blink::PersistentBase.542" }
%"class.blink::PersistentBase.542" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.511, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.545" = type { %"class.absl::optional_internal::optional_data.546" }
%"class.absl::optional_internal::optional_data.546" = type { %"class.absl::optional_internal::optional_data_base.547" }
%"class.absl::optional_internal::optional_data_base.547" = type { %"class.absl::optional_internal::optional_data_dtor_base.548" }
%"class.absl::optional_internal::optional_data_dtor_base.548" = type { i8, [3 x i8], %union.anon.549 }
%union.anon.549 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.526" = type { %"class.blink::PersistentBase.527" }
%"class.blink::PersistentBase.527" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.530" }
%"class.blink::HeapVector.530" = type { %"class.WTF::Vector.533" }
%"class.WTF::Vector.533" = type { %"class.WTF::VectorBuffer.534" }
%"class.WTF::VectorBuffer.534" = type { %"class.WTF::VectorBufferBase.535" }
%"class.WTF::VectorBufferBase.535" = type { %"class.blink::Member.536"*, i32, i32 }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.550" = type { %class.scoped_refptr.551 }
%class.scoped_refptr.551 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.552", %"class.blink::DataRef.554", %"class.blink::DataRef.558", %"class.blink::DataRef.567", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.586", %"class.std::__1::unique_ptr.597", %"class.std::__1::unique_ptr.635", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.657", %"class.WTF::Vector.663", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.552" = type { %"class.base::RefCounted.553" }
%"class.base::RefCounted.553" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.554" = type { %class.scoped_refptr.555 }
%class.scoped_refptr.555 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.556", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.556" = type { %"class.base::RefCounted.557" }
%"class.base::RefCounted.557" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.558" = type { %class.scoped_refptr.559 }
%class.scoped_refptr.559 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.560", [4 x i8], %"class.WTF::Vector.562", i8, [7 x i8] }>
%"class.WTF::RefCounted.560" = type { %"class.base::RefCounted.561" }
%"class.base::RefCounted.561" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.562" = type { %"class.WTF::VectorBuffer.563" }
%"class.WTF::VectorBuffer.563" = type { %"class.WTF::VectorBufferBase.564" }
%"class.WTF::VectorBufferBase.564" = type { i32*, i32, i32 }
%"class.blink::DataRef.567" = type { %class.scoped_refptr.568 }
%class.scoped_refptr.568 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.569", [4 x i8], %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.571", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.581", %"class.WTF::Vector.492", %"class.WTF::Vector.492", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.569" = type { %"class.base::RefCounted.570" }
%"class.base::RefCounted.570" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.575"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.575" = type { %"class.WTF::String", %"class.WTF::Vector.3002" }
%"class.WTF::Vector.3002" = type { %"class.WTF::VectorBuffer.3003" }
%"class.WTF::VectorBuffer.3003" = type { %"class.WTF::VectorBufferBase.3004" }
%"class.WTF::VectorBufferBase.3004" = type { i64*, i32, i32 }
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type { i64, %"class.WTF::Vector.663" }
%"class.WTF::HashMap.581" = type { %"class.WTF::HashTable.582" }
%"class.WTF::HashTable.582" = type <{ %"struct.WTF::KeyValuePair.585"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.585" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.589" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.593" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3007", %"class.absl::optional.3007", %"class.absl::optional.3007" }
%"class.absl::optional.3007" = type { %"class.absl::optional_internal::optional_data.3008" }
%"class.absl::optional_internal::optional_data.3008" = type { %"class.absl::optional_internal::optional_data_base.3009" }
%"class.absl::optional_internal::optional_data_base.3009" = type { %"class.absl::optional_internal::optional_data_dtor_base.3010" }
%"class.absl::optional_internal::optional_data_dtor_base.3010" = type { i8, %union.anon.3011 }
%union.anon.3011 = type { i32 }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.612", %"class.WTF::Vector.600", %"class.WTF::Vector.617", %"class.WTF::Vector.622", %"class.WTF::Vector.627" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.600", %"class.WTF::Vector.600", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %class.scoped_refptr.608*, i32, i32 }
%class.scoped_refptr.608 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.609" }
%"class.base::RefCountedThreadSafe.609" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.612" = type { %"class.WTF::VectorBuffer.613" }
%"class.WTF::VectorBuffer.613" = type { %"class.WTF::VectorBufferBase.614" }
%"class.WTF::VectorBufferBase.614" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.600" = type { %"class.WTF::VectorBuffer.601" }
%"class.WTF::VectorBuffer.601" = type { %"class.WTF::VectorBufferBase.602" }
%"class.WTF::VectorBufferBase.602" = type { double*, i32, i32 }
%"class.WTF::Vector.617" = type { %"class.WTF::VectorBuffer.618" }
%"class.WTF::VectorBuffer.618" = type { %"class.WTF::VectorBufferBase.619" }
%"class.WTF::VectorBufferBase.619" = type { i32*, i32, i32 }
%"class.WTF::Vector.622" = type { %"class.WTF::VectorBuffer.623" }
%"class.WTF::VectorBuffer.623" = type { %"class.WTF::VectorBufferBase.624" }
%"class.WTF::VectorBufferBase.624" = type { i32*, i32, i32 }
%"class.WTF::Vector.627" = type { %"class.WTF::VectorBuffer.628" }
%"class.WTF::VectorBuffer.628" = type { %"class.WTF::VectorBufferBase.629" }
%"class.WTF::VectorBufferBase.629" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.638" }
%"class.WTF::Vector.638" = type { %"class.WTF::VectorBuffer.639" }
%"class.WTF::VectorBuffer.639" = type { %"class.WTF::VectorBufferBase.640" }
%"class.WTF::VectorBufferBase.640" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.649" }
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase.651" }
%"class.WTF::VectorBufferBase.651" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.657" = type { %"class.std::__1::__compressed_pair.658" }
%"class.std::__1::__compressed_pair.658" = type { %"struct.std::__1::__compressed_pair_elem.659" }
%"struct.std::__1::__compressed_pair_elem.659" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3012 }
%class.scoped_refptr.3012 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3013", %"class.WTF::Vector.663", %"class.WTF::Vector.3015", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3013" = type { %"class.base::RefCounted.3014" }
%"class.base::RefCounted.3014" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3015" = type { %"class.WTF::VectorBuffer.3016" }
%"class.WTF::VectorBuffer.3016" = type { %"class.WTF::VectorBufferBase.3017" }
%"class.WTF::VectorBufferBase.3017" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3018 }
%union.anon.3018 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.668" }
%"class.WTF::Vector.668" = type { %"class.WTF::VectorBuffer.669" }
%"class.WTF::VectorBuffer.669" = type { %"class.WTF::VectorBufferBase.670" }
%"class.WTF::VectorBufferBase.670" = type { %class.scoped_refptr.671*, i32, i32 }
%class.scoped_refptr.671 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.515", [4 x i8] }>
%"class.blink::Persistent.674" = type { %"class.blink::PersistentBase.675" }
%"class.blink::PersistentBase.675" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.678" }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.680" = type { %class.scoped_refptr.681 }
%class.scoped_refptr.681 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.682", [4 x i8], %"class.blink::DataRef.684", %"class.blink::DataRef.688", %"class.blink::DataRef.709", %"class.blink::DataRef.727", %"class.blink::DataRef.739", %"class.blink::DataRef.743", %class.scoped_refptr.713, i32, [4 x i8] }>
%"class.WTF::RefCounted.682" = type { %"class.base::RefCounted.683" }
%"class.base::RefCounted.683" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.684" = type { %class.scoped_refptr.685 }
%class.scoped_refptr.685 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.686", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.686" = type { %"class.base::RefCounted.687" }
%"class.base::RefCounted.687" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.688" = type { %class.scoped_refptr.689 }
%class.scoped_refptr.689 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.690", %class.scoped_refptr.692, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.690" = type { %"class.base::RefCounted.691" }
%"class.base::RefCounted.691" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.692 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.512" }>
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.702, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.702 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.703, %class.SkTDArray.704, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.703 = type { i8*, i32, i32 }
%class.SkTDArray.704 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.705 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.705 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.709" = type { %class.scoped_refptr.710 }
%class.scoped_refptr.710 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.711", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.711" = type { %"class.base::RefCounted.712" }
%"class.base::RefCounted.712" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.713, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.727" = type { %class.scoped_refptr.728 }
%class.scoped_refptr.728 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.729", [4 x i8], %class.scoped_refptr.731, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.729" = type { %"class.base::RefCounted.730" }
%"class.base::RefCounted.730" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.731 = type { %"class.base::RefCountedData.732"* }
%"class.base::RefCountedData.732" = type { %"class.base::RefCountedThreadSafe.733", %"class.WTF::Vector.734" }
%"class.base::RefCountedThreadSafe.733" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.739" = type { %class.scoped_refptr.740 }
%class.scoped_refptr.740 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.741", %class.scoped_refptr.713, %class.scoped_refptr.713, %class.scoped_refptr.713 }
%"class.WTF::RefCounted.741" = type { %"class.base::RefCounted.742" }
%"class.base::RefCounted.742" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.743" = type { %class.scoped_refptr.744 }
%class.scoped_refptr.744 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.745", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.713 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.714", %"class.blink::Persistent.716", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.714" = type { %"class.base::RefCounted.715" }
%"class.base::RefCounted.715" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.716" = type { %"class.blink::PersistentBase.717" }
%"class.blink::PersistentBase.717" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.747" = type { %class.scoped_refptr.748 }
%class.scoped_refptr.748 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.749", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.749" = type { %"class.base::RefCounted.750" }
%"class.base::RefCounted.750" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.751" = type { %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.753", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.755" = type { %class.scoped_refptr.756 }
%class.scoped_refptr.756 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.757", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.757" = type { %"class.base::RefCounted.758" }
%"class.base::RefCounted.758" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.759" = type { %class.scoped_refptr.760 }
%class.scoped_refptr.760 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.761", %class.scoped_refptr.763 }
%"class.WTF::RefCounted.761" = type { %"class.base::RefCounted.762" }
%"class.base::RefCounted.762" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.763 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.930", %"class.blink::StyleVariables", %class.scoped_refptr.763 }
%"class.WTF::RefCounted.930" = type { %"class.base::RefCounted.931" }
%"class.base::RefCounted.931" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.764" = type { %"class.base::RefCounted.765" }
%"class.base::RefCounted.765" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.769" }
%"class.std::__1::unique_ptr.769" = type { %"class.std::__1::__compressed_pair.770" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.771" }
%"struct.std::__1::__compressed_pair_elem.771" = type { %"class.WTF::Vector.772"* }
%"class.WTF::Vector.772" = type { %"class.WTF::VectorBuffer.3022" }
%"class.WTF::VectorBuffer.3022" = type { %"class.WTF::VectorBufferBase.3023", [32 x i8] }
%"class.WTF::VectorBufferBase.3023" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1312", %"class.std::__1::unique_ptr.1324" }
%"class.blink::HeapVector.1312" = type { %"class.WTF::Vector.1315" }
%"class.WTF::Vector.1315" = type { %"class.WTF::VectorBuffer.1316" }
%"class.WTF::VectorBuffer.1316" = type { %"class.WTF::VectorBufferBase.1317" }
%"class.WTF::VectorBufferBase.1317" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1318" }
%"class.WTF::Vector.1318" = type { %"class.WTF::VectorBuffer.1319" }
%"class.WTF::VectorBuffer.1319" = type { %"class.WTF::VectorBufferBase.1320", [16 x i8] }
%"class.WTF::VectorBufferBase.1320" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1330" = type { %"class.blink::MemberBase.1331" }
%"class.blink::MemberBase.1331" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1332" = type { %"class.blink::MemberBase.1333" }
%"class.blink::MemberBase.1333" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1336", i8, [7 x i8] }>
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1360", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1342", %"class.WTF::HashMap.1342", %"class.WTF::HashMap.1342", %"class.WTF::HashMap.1347", %class.scoped_refptr.1352, %class.scoped_refptr.1359, %class.scoped_refptr.1358, %"class.WTF::Vector.424", %"class.WTF::Vector.424", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1342" = type { %"class.WTF::HashTable.1343" }
%"class.WTF::HashTable.1343" = type <{ %"struct.WTF::KeyValuePair.1346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1346" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2995 }
%class.scoped_refptr.2995 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1353", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1355", %"union.blink::InvalidationSet::Backing.1356", %"union.blink::InvalidationSet::Backing.1357", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1353" = type { %"class.base::RefCounted.1354" }
%"class.base::RefCounted.1354" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1355" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1356" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1357" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1347" = type { %"class.WTF::HashTable.1348" }
%"class.WTF::HashTable.1348" = type <{ %"struct.WTF::KeyValuePair.1351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1351" = type opaque
%class.scoped_refptr.1352 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1358, %class.scoped_refptr.1358 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1353", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1355", %"union.blink::InvalidationSet::Backing.1356", %"union.blink::InvalidationSet::Backing.1357", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1359 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1358 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1364", %"class.blink::HeapHashMap.1364", %"class.blink::HeapHashMap.1364", %"class.blink::HeapHashMap.1364", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::HeapVector.1371", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1407", %"class.blink::HeapVector.1415", %"class.blink::HeapVector.1423", %"class.blink::HeapVector.1440", %"class.blink::HeapVector.1448", %"class.blink::HeapVector.1456", %"class.blink::HeapVector.1469", %"class.WTF::Vector.1476", i32, %"class.blink::Member.1482" }
%"class.blink::HeapHashMap.1364" = type { %"class.WTF::HashMap.1367" }
%"class.WTF::HashMap.1367" = type { %"class.WTF::HashTable.1368" }
%"class.WTF::HashTable.1368" = type <{ %"struct.WTF::KeyValuePair.1370"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1370" = type { %"class.WTF::AtomicString", %"class.blink::Member.3000" }
%"class.blink::Member.3000" = type { %"class.blink::MemberBase.3001" }
%"class.blink::MemberBase.3001" = type { %"class.blink::HeapVector.1371"* }
%"class.blink::HeapVector.1371" = type { %"class.WTF::Vector.1374" }
%"class.WTF::Vector.1374" = type { %"class.WTF::VectorBuffer.1375" }
%"class.WTF::VectorBuffer.1375" = type { %"class.WTF::VectorBufferBase.1376" }
%"class.WTF::VectorBufferBase.1376" = type { %"class.blink::Member.1377"*, i32, i32 }
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1381", i64, [4 x i32] }
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1402" }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1407" = type { %"class.WTF::Vector.1410" }
%"class.WTF::Vector.1410" = type { %"class.WTF::VectorBuffer.1411" }
%"class.WTF::VectorBuffer.1411" = type { %"class.WTF::VectorBufferBase.1412" }
%"class.WTF::VectorBufferBase.1412" = type { %"class.blink::Member.1413"*, i32, i32 }
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.2996" }
%"class.blink::MemberBase.2996" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1415" = type { %"class.WTF::Vector.1418" }
%"class.WTF::Vector.1418" = type { %"class.WTF::VectorBuffer.1419" }
%"class.WTF::VectorBuffer.1419" = type { %"class.WTF::VectorBufferBase.1420" }
%"class.WTF::VectorBufferBase.1420" = type { %"class.blink::Member.1421"*, i32, i32 }
%"class.blink::Member.1421" = type { %"class.blink::MemberBase.2997" }
%"class.blink::MemberBase.2997" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1423" = type { %"class.WTF::Vector.1426" }
%"class.WTF::Vector.1426" = type { %"class.WTF::VectorBuffer.1427" }
%"class.WTF::VectorBuffer.1427" = type { %"class.WTF::VectorBufferBase.1428" }
%"class.WTF::VectorBufferBase.1428" = type { %"class.blink::Member.1429"*, i32, i32 }
%"class.blink::HeapVector.1440" = type { %"class.WTF::Vector.1443" }
%"class.WTF::Vector.1443" = type { %"class.WTF::VectorBuffer.1444" }
%"class.WTF::VectorBuffer.1444" = type { %"class.WTF::VectorBufferBase.1445" }
%"class.WTF::VectorBufferBase.1445" = type { %"class.blink::Member.1446"*, i32, i32 }
%"class.blink::Member.1446" = type { %"class.blink::MemberBase.2998" }
%"class.blink::MemberBase.2998" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1448" = type { %"class.WTF::Vector.1451" }
%"class.WTF::Vector.1451" = type { %"class.WTF::VectorBuffer.1452" }
%"class.WTF::VectorBuffer.1452" = type { %"class.WTF::VectorBufferBase.1453" }
%"class.WTF::VectorBufferBase.1453" = type { %"class.blink::Member.1454"*, i32, i32 }
%"class.blink::Member.1454" = type { %"class.blink::MemberBase.2999" }
%"class.blink::MemberBase.2999" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", i32, [4 x i8] }>
%"class.blink::HeapVector.1456" = type { %"class.WTF::Vector.1459" }
%"class.WTF::Vector.1459" = type { %"class.WTF::VectorBuffer.1460" }
%"class.WTF::VectorBuffer.1460" = type { %"class.WTF::VectorBufferBase.1461" }
%"class.WTF::VectorBufferBase.1461" = type { %"class.blink::Member.1462"*, i32, i32 }
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464", %"class.blink::Member.1464" }
%"class.blink::HeapVector.1469" = type { %"class.WTF::Vector.1472" }
%"class.WTF::Vector.1472" = type { %"class.WTF::VectorBuffer.1473" }
%"class.WTF::VectorBuffer.1473" = type { %"class.WTF::VectorBufferBase.1474" }
%"class.WTF::VectorBufferBase.1474" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1381", i32, i32 }
%"class.WTF::Vector.1476" = type { %"class.WTF::VectorBuffer.1477" }
%"class.WTF::VectorBuffer.1477" = type { %"class.WTF::VectorBufferBase.1478" }
%"class.WTF::VectorBufferBase.1478" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1479, i8, [7 x i8] }>
%class.scoped_refptr.1479 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1482" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1486", %"class.blink::HeapHashMap.1486", %"class.blink::HeapHashMap.1486", %"class.blink::HeapHashMap.1486" }
%"class.blink::HeapHashMap.1486" = type { %"class.WTF::HashMap.1489" }
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1492" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1493" }
%"class.blink::HeapHashMap.1493" = type { %"class.WTF::HashMap.1496" }
%"class.WTF::HashMap.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"struct.WTF::KeyValuePair.1499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1499" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3089", %"class.WTF::Vector.3089" }
%"class.WTF::Vector.3089" = type { %"class.WTF::VectorBuffer.3090" }
%"class.WTF::VectorBuffer.3090" = type { %"class.WTF::VectorBufferBase.3091" }
%"class.WTF::VectorBufferBase.3091" = type { %class.scoped_refptr.2995*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1500" = type { %"class.WTF::HashSet.1503" }
%"class.WTF::HashSet.1503" = type { %"class.WTF::HashTable.1504" }
%"class.WTF::HashTable.1504" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1506" = type { %"class.blink::MemberBase.1507" }
%"class.blink::MemberBase.1507" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1508" = type { %"class.WTF::HashMap.1511" }
%"class.WTF::HashMap.1511" = type { %"class.WTF::HashTable.1512" }
%"class.WTF::HashTable.1512" = type <{ %"struct.WTF::KeyValuePair.1514"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1514" = type opaque
%"class.blink::HeapHashMap.1515" = type { %"class.WTF::HashMap.1518" }
%"class.WTF::HashMap.1518" = type { %"class.WTF::HashTable.1519" }
%"class.WTF::HashTable.1519" = type <{ %"struct.WTF::KeyValuePair.1521"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1521" = type opaque
%"class.std::__1::unique_ptr.1522" = type { %"class.std::__1::__compressed_pair.1523" }
%"class.std::__1::__compressed_pair.1523" = type { %"struct.std::__1::__compressed_pair_elem.1524" }
%"struct.std::__1::__compressed_pair_elem.1524" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1528" = type { %"class.WTF::Vector.1531" }
%"class.WTF::Vector.1531" = type { %"class.WTF::VectorBuffer.1532" }
%"class.WTF::VectorBuffer.1532" = type { %"class.WTF::VectorBufferBase.1533" }
%"class.WTF::VectorBufferBase.1533" = type { %"struct.std::__1::pair.1534"*, i32, i32 }
%"struct.std::__1::pair.1534" = type opaque
%"class.blink::HeapVector.1259" = type { %"class.WTF::Vector.1262" }
%"class.WTF::Vector.1262" = type { %"class.WTF::VectorBuffer.1263" }
%"class.WTF::VectorBuffer.1263" = type { %"class.WTF::VectorBufferBase.1264" }
%"class.WTF::VectorBufferBase.1264" = type { %"struct.std::__1::pair.1265"*, i32, i32 }
%"struct.std::__1::pair.1265" = type opaque
%"class.blink::HeapHashSet.1536" = type { %"class.WTF::HashSet.1539" }
%"class.WTF::HashSet.1539" = type { %"class.WTF::HashTable.1540" }
%"class.WTF::HashTable.1540" = type <{ %"class.blink::WeakMember.1542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1542" = type { %"class.blink::MemberBase.402" }
%"class.blink::HeapHashMap.1543" = type { %"class.WTF::HashMap.1546" }
%"class.WTF::HashMap.1546" = type { %"class.WTF::HashTable.1547" }
%"class.WTF::HashTable.1547" = type <{ %"struct.WTF::KeyValuePair.1549"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1549" = type opaque
%class.scoped_refptr.1550 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1464" = type { %"class.blink::MemberBase.1465" }
%"class.blink::MemberBase.1465" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1551" = type { %"class.WTF::HashSet.1554" }
%"class.WTF::HashSet.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"class.blink::Member.1557"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1557" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.395" }
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1564" = type { %"class.WTF::HashMap.1567" }
%"class.WTF::HashMap.1567" = type { %"class.WTF::HashTable.1568" }
%"class.WTF::HashTable.1568" = type <{ %"struct.WTF::KeyValuePair.1570"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1570" = type opaque
%"class.WTF::Vector.1571" = type { %"class.WTF::VectorBuffer.1572" }
%"class.WTF::VectorBuffer.1572" = type { %"class.WTF::VectorBufferBase.1573" }
%"class.WTF::VectorBufferBase.1573" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1580" = type { %"class.blink::MemberBase.1581" }
%"class.blink::MemberBase.1581" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1582" = type { %"class.WTF::Vector.1585" }
%"class.WTF::Vector.1585" = type { %"class.WTF::VectorBuffer.1586" }
%"class.WTF::VectorBuffer.1586" = type { %"class.WTF::VectorBufferBase.1587" }
%"class.WTF::VectorBufferBase.1587" = type { %"class.blink::Member.1588"*, i32, i32 }
%"class.blink::Member.1588" = type opaque
%"class.std::__1::unique_ptr.1590" = type { %"class.std::__1::__compressed_pair.1591" }
%"class.std::__1::__compressed_pair.1591" = type { %"struct.std::__1::__compressed_pair_elem.1592" }
%"struct.std::__1::__compressed_pair_elem.1592" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1596" = type { %"class.WTF::HashSet.1599" }
%"class.WTF::HashSet.1599" = type { %"class.WTF::HashTable.1600" }
%"class.WTF::HashTable.1600" = type <{ %"class.blink::WeakMember.1602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1602" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1603", i32, [4 x i8] }>
%"class.WTF::Vector.1603" = type { %"class.WTF::VectorBuffer.1604" }
%"class.WTF::VectorBuffer.1604" = type { %"class.WTF::VectorBufferBase.1605" }
%"class.WTF::VectorBufferBase.1605" = type { %"struct.std::__1::pair.1606"*, i32, i32 }
%"struct.std::__1::pair.1606" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1611" = type { %"class.WTF::VectorBuffer.1612" }
%"class.WTF::VectorBuffer.1612" = type { %"class.WTF::VectorBufferBase.1613" }
%"class.WTF::VectorBufferBase.1613" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1616" = type { %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1873", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2093", %"class.std::__1::unique_ptr.2099", %"class.std::__1::unique_ptr.2105", %class.scoped_refptr.1869, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2111", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1832", %"class.std::__1::unique_ptr.1842" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1788, %"class.WTF::Vector.1789", %"class.std::__1::unique_ptr.1794", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1815, %"class.blink::Persistent.1816" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.780" }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.783", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.789", %"class.std::__1::unique_ptr.910", i8, %"class.absl::optional.916", %class.scoped_refptr.892, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.921" }
%"class.std::__1::unique_ptr.783" = type { %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.789" = type { %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.792, %class.scoped_refptr.792, %class.scoped_refptr.792, %class.scoped_refptr.792, %class.scoped_refptr.792, %class.scoped_refptr.792, %class.scoped_refptr.827, %class.scoped_refptr.841, %class.scoped_refptr.842, %class.scoped_refptr.842, %class.scoped_refptr.842, %class.scoped_refptr.842, %class.scoped_refptr.842, %class.scoped_refptr.842, %class.scoped_refptr.882, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.883, %class.scoped_refptr.906 }
%class.scoped_refptr.792 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.809" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.793", i8, i8, %class.scoped_refptr.795, i32, i32 }
%"class.WTF::RefCounted.793" = type { %"class.base::RefCounted.794" }
%"class.base::RefCounted.794" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.795 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.802, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.803", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.796" }
%"class.std::__1::unique_ptr.796" = type { %"class.std::__1::__compressed_pair.797" }
%"class.std::__1::__compressed_pair.797" = type { %"struct.std::__1::__compressed_pair_elem.798" }
%"struct.std::__1::__compressed_pair_elem.798" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.802 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.828", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.828" = type { %"class.WTF::RefCounted.829", i8, i8, %class.scoped_refptr.802, i32, i32 }
%"class.WTF::RefCounted.829" = type { %"class.base::RefCounted.830" }
%"class.base::RefCounted.830" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.831" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.831" = type { %"class.absl::optional_internal::optional_data.832" }
%"class.absl::optional_internal::optional_data.832" = type { %"class.absl::optional_internal::optional_data_base.833" }
%"class.absl::optional_internal::optional_data_base.833" = type { %"class.absl::optional_internal::optional_data_dtor_base.834" }
%"class.absl::optional_internal::optional_data_dtor_base.834" = type { i8, %union.anon.835 }
%union.anon.835 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.836" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.812", %"class.std::__1::unique_ptr.818", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.812" = type { %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.827 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.841 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.842 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.843" }
%"class.blink::PaintPropertyNode.843" = type { %"class.WTF::RefCounted.844", i8, i8, %class.scoped_refptr.846, i32, i32 }
%"class.WTF::RefCounted.844" = type { %"class.base::RefCounted.845" }
%"class.base::RefCounted.845" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.846 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.795, %class.scoped_refptr.847, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.869", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.847 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.884" }
%"class.blink::PaintPropertyNode.884" = type { %"class.WTF::RefCounted.885", i8, i8, %class.scoped_refptr.847, i32, i32 }
%"class.WTF::RefCounted.885" = type { %"class.base::RefCounted.886" }
%"class.base::RefCounted.886" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.848" }
%"class.std::__1::vector.848" = type { %"class.std::__1::__vector_base.849" }
%"class.std::__1::__vector_base.849" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.864" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.850, [20 x float], i32, [4 x i8], %"class.std::__1::vector.857", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.857" = type { %"class.std::__1::__vector_base.858" }
%"class.std::__1::__vector_base.858" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.859" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.875" }
%"class.std::__1::vector.875" = type { %"class.std::__1::__vector_base.876" }
%"class.std::__1::__vector_base.876" = type { i32*, i32*, %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { i32* }
%class.scoped_refptr.882 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.883 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.895" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.795, %"class.absl::optional.887", %class.scoped_refptr.892, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.887" = type { %"class.absl::optional_internal::optional_data.888" }
%"class.absl::optional_internal::optional_data.888" = type { %"class.absl::optional_internal::optional_data_base.889" }
%"class.absl::optional_internal::optional_data_base.889" = type { %"class.absl::optional_internal::optional_data_dtor_base.890" }
%"class.absl::optional_internal::optional_data_dtor_base.890" = type { i8, [3 x i8], %union.anon.891 }
%union.anon.891 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.895" = type { %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.898", i32, [4 x i8] }>
%"class.WTF::Vector.898" = type { %"class.WTF::VectorBuffer.899" }
%"class.WTF::VectorBuffer.899" = type { %"class.WTF::VectorBufferBase.900" }
%"class.WTF::VectorBufferBase.900" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.906 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.910" = type { %"class.std::__1::__compressed_pair.911" }
%"class.std::__1::__compressed_pair.911" = type { %"struct.std::__1::__compressed_pair_elem.912" }
%"struct.std::__1::__compressed_pair_elem.912" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.795, %class.scoped_refptr.847, %class.scoped_refptr.846 }
%"class.absl::optional.916" = type { %"class.absl::optional_internal::optional_data.917" }
%"class.absl::optional_internal::optional_data.917" = type { %"class.absl::optional_internal::optional_data_base.918" }
%"class.absl::optional_internal::optional_data_base.918" = type { %"class.absl::optional_internal::optional_data_dtor_base.919" }
%"class.absl::optional_internal::optional_data_dtor_base.919" = type { i8, %union.anon.920 }
%union.anon.920 = type { %"class.blink::IntRect" }
%class.scoped_refptr.892 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.893", [4 x i8] }
%"class.WTF::RefCounted.893" = type { %"class.base::RefCounted.894" }
%"class.base::RefCounted.894" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.921" = type { %"class.std::__1::__compressed_pair.922" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1788 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1789" = type { %"class.WTF::VectorBuffer.1790" }
%"class.WTF::VectorBuffer.1790" = type { %"class.WTF::VectorBufferBase.1791", [8 x i8] }
%"class.WTF::VectorBufferBase.1791" = type { %class.scoped_refptr.1788*, i32, i32 }
%"class.std::__1::unique_ptr.1794" = type { %"class.std::__1::__compressed_pair.1795" }
%"class.std::__1::__compressed_pair.1795" = type { %"struct.std::__1::__compressed_pair_elem.1796" }
%"struct.std::__1::__compressed_pair_elem.1796" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1797", %"class.absl::optional.1802", %"class.absl::optional.1807" }
%"class.absl::optional.1797" = type { %"class.absl::optional_internal::optional_data.1798" }
%"class.absl::optional_internal::optional_data.1798" = type { %"class.absl::optional_internal::optional_data_base.1799" }
%"class.absl::optional_internal::optional_data_base.1799" = type { %"class.absl::optional_internal::optional_data_dtor_base.1800" }
%"class.absl::optional_internal::optional_data_dtor_base.1800" = type { i8, %union.anon.1801 }
%union.anon.1801 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1802" = type { %"class.absl::optional_internal::optional_data.1803" }
%"class.absl::optional_internal::optional_data.1803" = type { %"class.absl::optional_internal::optional_data_base.1804" }
%"class.absl::optional_internal::optional_data_base.1804" = type { %"class.absl::optional_internal::optional_data_dtor_base.1805" }
%"class.absl::optional_internal::optional_data_dtor_base.1805" = type { i8, [3 x i8], %union.anon.1806 }
%union.anon.1806 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1807" = type { %"class.absl::optional_internal::optional_data.1808" }
%"class.absl::optional_internal::optional_data.1808" = type { %"class.absl::optional_internal::optional_data_base.1809" }
%"class.absl::optional_internal::optional_data_base.1809" = type { %"class.absl::optional_internal::optional_data_dtor_base.1810" }
%"class.absl::optional_internal::optional_data_dtor_base.1810" = type { i8, %union.anon.1811 }
%union.anon.1811 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1815 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1772", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1772" = type { %"class.std::__1::__compressed_pair.1773" }
%"class.std::__1::__compressed_pair.1773" = type { %"struct.std::__1::__compressed_pair_elem.1774" }
%"struct.std::__1::__compressed_pair_elem.1774" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1775", %"class.absl::optional.1780" }
%"class.absl::optional.1775" = type { %"class.absl::optional_internal::optional_data.1776" }
%"class.absl::optional_internal::optional_data.1776" = type { %"class.absl::optional_internal::optional_data_base.1777" }
%"class.absl::optional_internal::optional_data_base.1777" = type { %"class.absl::optional_internal::optional_data_dtor_base.1778" }
%"class.absl::optional_internal::optional_data_dtor_base.1778" = type { i8, %union.anon.1779 }
%union.anon.1779 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1780" = type { %"class.absl::optional_internal::optional_data.1781" }
%"class.absl::optional_internal::optional_data.1781" = type { %"class.absl::optional_internal::optional_data_base.1782" }
%"class.absl::optional_internal::optional_data_base.1782" = type { %"class.absl::optional_internal::optional_data_dtor_base.1783" }
%"class.absl::optional_internal::optional_data_dtor_base.1783" = type { i8, %union.anon.1784 }
%union.anon.1784 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1816" = type { %"class.blink::PersistentBase.1817" }
%"class.blink::PersistentBase.1817" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1820", %"struct.blink::PhysicalRect", %"class.blink::Member.1830" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"class.WTF::HashSet.1823"* }
%"class.WTF::HashSet.1823" = type { %"class.WTF::HashTable.1824" }
%"class.WTF::HashTable.1824" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1830" = type { %"class.blink::MemberBase.1831" }
%"class.blink::MemberBase.1831" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1832" = type { %"class.blink::PersistentBase.1833" }
%"class.blink::PersistentBase.1833" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1836", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1842" = type { %"class.std::__1::__compressed_pair.1843" }
%"class.std::__1::__compressed_pair.1843" = type { %"struct.std::__1::__compressed_pair_elem.1844" }
%"struct.std::__1::__compressed_pair_elem.1844" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1845", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1845" = type { %"class.WTF::HashTable.1848", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1848" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1851", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1851" = type { %"class.std::__1::__compressed_pair.1852" }
%"class.std::__1::__compressed_pair.1852" = type { %"struct.std::__1::__compressed_pair_elem.1853" }
%"struct.std::__1::__compressed_pair_elem.1853" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1854, %"class.std::__1::unique_ptr.1855", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1772", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1854 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2751", i16, %class.scoped_refptr.1854 }
%"class.WTF::ThreadSafeRefCounted.2751" = type { %"class.base::RefCountedThreadSafe.2752" }
%"class.base::RefCountedThreadSafe.2752" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1855" = type { %"class.std::__1::__compressed_pair.1856" }
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"class.WTF::Vector.1858"* }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1869, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1877", %"class.blink::Member.1882", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1884", i8, i32, %"class.blink::Color", %"class.absl::optional.1887", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::Member.1894", %"class.std::__1::unique_ptr.1897", i32, [4 x i8], %"class.WTF::HashSet.1900", %"class.blink::Member.1907", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1909", %"class.blink::HeapHashSet.1916", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1924", i8, %"class.blink::Member.1930", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1942", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1956", i8, %"class.std::__1::unique_ptr.1962", %"class.std::__1::unique_ptr.2043", %"class.WTF::Vector.2049", i32, %class.scoped_refptr.2054, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2055", %"class.blink::Member.2057", %"class.blink::Member.2059", %"class.blink::HeapHashSet.2061", %"class.blink::HeapHashSet.2068", %"class.std::__1::unique_ptr.2075", %"class.std::__1::unique_ptr.2082", %"class.WTF::Vector.1160" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1877" = type { %"class.WTF::HashTable.1878" }
%"class.WTF::HashTable.1878" = type <{ %class.scoped_refptr.1881*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1881 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2311", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2319", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2333", %"class.blink::FrameLoader", %"class.blink::Member.2354", %"class.blink::Member.343", %"class.blink::Member.2355", %"class.blink::Member.2357", %"class.blink::Member.2373", %"class.blink::Member.2375", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2377", %class.scoped_refptr.2601, %"class.blink::Member.2602", %"class.blink::Member.2604", %"class.blink::Member.2606", %"class.blink::Member.2608", %"class.blink::Member.2610", %"class.blink::Member.2614", %"class.blink::Member.2616", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2620", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2626", %"class.std::__1::unique_ptr.2627", %"class.absl::optional.2299", i32, [4 x i8], %"class.std::__1::unique_ptr.2633", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2641", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2646", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2651", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2654", %"class.blink::Member.2656", %"class.blink::Member.2658", %"class.blink::Member.2660", %"class.mojo::StructPtr.2663", %"class.blink::Member.2672", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2674", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2144", %"class.blink::Member.2146", %"class.blink::Member.2148", i8, i32, i8, i32, %"class.blink::Member.2281", %"class.blink::Member.2171", %"class.blink::FrameLifecycle", %"class.blink::Member.2142", %"class.blink::Member.2142", %"class.blink::Member.2142", %"class.blink::Member.2142", %"class.blink::Member.2142", %"class.blink::Member.2142", %"class.blink::Member.1882", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2292", i8, %"class.base::UnguessableToken", %"class.absl::optional.2294", %"class.absl::optional.2299", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2142", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2755", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2142", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2769", %"class.blink::Member.2773", %"class.blink::Member.2775", %"class.blink::Member.2777", %"class.blink::Member.2779", %"class.blink::Member.2781", %"class.blink::Member.2792", %"class.blink::Member.2794", %"class.blink::HeapObserverSet.2796", %"class.blink::Member.2804", %"class.blink::Member.2806", %"class.blink::Member.2808", %"class.blink::Member.2810", %"class.blink::Member.2812", %"class.blink::Member.2814", %"class.blink::Member.2816", %"class.blink::Member.2818", %"class.blink::Member.2820", %"class.blink::Member.2822", %"class.blink::Member.2824", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2849", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2856", %"class.blink::Member.2144", %"class.blink::Member.2144", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2864", %"class.std::__1::unique_ptr.2870", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2755" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2756" }
%"class.blink::HeapHashMap.2756" = type { %"class.WTF::HashMap.2759" }
%"class.WTF::HashMap.2759" = type { %"class.WTF::HashTable.2760" }
%"class.WTF::HashTable.2760" = type <{ %"struct.WTF::KeyValuePair.2762"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2762" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2763" }
%"class.std::__1::unique_ptr.2763" = type { %"class.std::__1::__compressed_pair.2764" }
%"class.std::__1::__compressed_pair.2764" = type { %"struct.std::__1::__compressed_pair_elem.2765" }
%"struct.std::__1::__compressed_pair_elem.2765" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2769" = type { %"class.blink::MemberBase.2770" }
%"class.blink::MemberBase.2770" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2144", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2773" = type { %"class.blink::MemberBase.2774" }
%"class.blink::MemberBase.2774" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2775" = type { %"class.blink::MemberBase.2776" }
%"class.blink::MemberBase.2776" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2777" = type { %"class.blink::MemberBase.2778" }
%"class.blink::MemberBase.2778" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2781" = type { %"class.blink::MemberBase.2782" }
%"class.blink::MemberBase.2782" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type { %"class.blink::Member.2144", %"class.blink::Member.2142", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.2785" }
%"class.blink::HeapHashSet.2785" = type { %"class.WTF::HashSet.2788" }
%"class.WTF::HashSet.2788" = type { %"class.WTF::HashTable.2789" }
%"class.WTF::HashTable.2789" = type <{ %"class.blink::WeakMember.2791"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2791" = type opaque
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2796" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2797" }
%"class.blink::HeapHashSet.2797" = type { %"class.WTF::HashSet.2800" }
%"class.WTF::HashSet.2800" = type { %"class.WTF::HashTable.2801" }
%"class.WTF::HashTable.2801" = type <{ %"class.blink::WeakMember.2803"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2803" = type opaque
%"class.blink::Member.2804" = type { %"class.blink::MemberBase.2805" }
%"class.blink::MemberBase.2805" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2806" = type { %"class.blink::MemberBase.2807" }
%"class.blink::MemberBase.2807" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2808" = type { %"class.blink::MemberBase.2809" }
%"class.blink::MemberBase.2809" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2810" = type { %"class.blink::MemberBase.2811" }
%"class.blink::MemberBase.2811" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2812" = type { %"class.blink::MemberBase.2813" }
%"class.blink::MemberBase.2813" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2814" = type { %"class.blink::MemberBase.2815" }
%"class.blink::MemberBase.2815" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2816" = type { %"class.blink::MemberBase.2817" }
%"class.blink::MemberBase.2817" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2818" = type { %"class.blink::MemberBase.2819" }
%"class.blink::MemberBase.2819" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2820" = type { %"class.blink::MemberBase.2821" }
%"class.blink::MemberBase.2821" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2822" = type { %"class.blink::MemberBase.2823" }
%"class.blink::MemberBase.2823" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2824" = type { %"class.blink::MemberBase.2825" }
%"class.blink::MemberBase.2825" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2826" }
%"class.WTF::Deque.2826" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2829" }
%"class.WTF::VectorBuffer.2829" = type { %"class.WTF::VectorBufferBase.2830" }
%"class.WTF::VectorBufferBase.2830" = type { %"class.std::__1::unique_ptr.2831"*, i32, i32 }
%"class.std::__1::unique_ptr.2831" = type { %"class.std::__1::__compressed_pair.2832" }
%"class.std::__1::__compressed_pair.2832" = type { %"struct.std::__1::__compressed_pair_elem.2833" }
%"struct.std::__1::__compressed_pair_elem.2833" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2837", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2837" = type { %"class.std::__1::__bitset.2838" }
%"class.std::__1::__bitset.2838" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2839" }
%"class.absl::optional.2839" = type { %"class.absl::optional_internal::optional_data.2840" }
%"class.absl::optional_internal::optional_data.2840" = type { %"class.absl::optional_internal::optional_data_base.2841" }
%"class.absl::optional_internal::optional_data_base.2841" = type { %"class.absl::optional_internal::optional_data_dtor_base.2842" }
%"class.absl::optional_internal::optional_data_dtor_base.2842" = type { i8, %union.anon.2843 }
%union.anon.2843 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2844", i64, %"class.absl::optional.1071", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2844" = type { %"class.absl::optional_internal::optional_data.2845" }
%"class.absl::optional_internal::optional_data.2845" = type { %"class.absl::optional_internal::optional_data_base.2846" }
%"class.absl::optional_internal::optional_data_base.2846" = type { %"class.absl::optional_internal::optional_data_dtor_base.2847" }
%"class.absl::optional_internal::optional_data_dtor_base.2847" = type { i8, %union.anon.2848 }
%union.anon.2848 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2849" = type { %"class.std::__1::unique_ptr.2850" }
%"class.std::__1::unique_ptr.2850" = type { %"class.std::__1::__compressed_pair.2851" }
%"class.std::__1::__compressed_pair.2851" = type { %"struct.std::__1::__compressed_pair_elem.2852" }
%"struct.std::__1::__compressed_pair_elem.2852" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2856" = type { %"class.WTF::HashSet.2859" }
%"class.WTF::HashSet.2859" = type { %"class.WTF::HashTable.2860" }
%"class.WTF::HashTable.2860" = type <{ %"class.blink::WeakMember.2862"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2862" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2863" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2863" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2864" = type { %"class.std::__1::__compressed_pair.2865" }
%"class.std::__1::__compressed_pair.2865" = type { %"struct.std::__1::__compressed_pair_elem.2866" }
%"struct.std::__1::__compressed_pair_elem.2866" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2870" = type { %"class.std::__1::__compressed_pair.2871" }
%"class.std::__1::__compressed_pair.2871" = type { %"struct.std::__1::__compressed_pair_elem.2872" }
%"struct.std::__1::__compressed_pair_elem.2872" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2146" = type { %"class.blink::MemberBase.2147" }
%"class.blink::MemberBase.2147" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2142", %"class.blink::Member.2171", %"class.blink::Member.2173", %"class.blink::Member.2175", i8, %"class.WTF::Vector.2177" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2164" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2152" }
%"class.blink::HeapVector.2152" = type { %"class.WTF::Vector.2155" }
%"class.WTF::Vector.2155" = type { %"class.WTF::VectorBuffer.2156" }
%"class.WTF::VectorBuffer.2156" = type { %"class.WTF::VectorBufferBase.2157", [32 x i8] }
%"class.WTF::VectorBufferBase.2157" = type { %"struct.std::__1::pair.2158"*, i32, i32 }
%"struct.std::__1::pair.2158" = type { %"class.WTF::AtomicString", %"class.blink::Member.2159" }
%"class.blink::Member.2159" = type { %"class.blink::MemberBase.2160" }
%"class.blink::MemberBase.2160" = type { %"class.blink::HeapVector.2161"* }
%"class.blink::HeapVector.2161" = type opaque
%"class.std::__1::unique_ptr.2164" = type { %"class.std::__1::__compressed_pair.2165" }
%"class.std::__1::__compressed_pair.2165" = type { %"struct.std::__1::__compressed_pair_elem.2166" }
%"struct.std::__1::__compressed_pair_elem.2166" = type { %"class.WTF::Vector.2167"* }
%"class.WTF::Vector.2167" = type opaque
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2175" = type { %"class.blink::MemberBase.2176" }
%"class.blink::MemberBase.2176" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2177" = type { %"class.WTF::VectorBuffer.2178" }
%"class.WTF::VectorBuffer.2178" = type { %"class.WTF::VectorBufferBase.2179" }
%"class.WTF::VectorBufferBase.2179" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2273" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2180, %"class.std::__1::unique_ptr.1066", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1081, i32 }>
%class.scoped_refptr.2180 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1081, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2239", %"class.absl::optional.2244", %"class.absl::optional.2197", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2264", i8, [7 x i8], %class.scoped_refptr.1081, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1096" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback.1084", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1081, %"class.std::__1::unique_ptr.2181", %"class.absl::optional.2191", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2197", %"class.std::__1::unique_ptr.2202", i8, i64, %class.scoped_refptr.2236, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2237", %"class.base::WeakPtrFactory.2238" }
%"class.std::__1::unique_ptr.2181" = type { %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.2183" }
%"struct.std::__1::__compressed_pair_elem.2183" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1081, i8, %"class.mojo::ScopedHandleBase.2184", %class.scoped_refptr.2185, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2186", i8*, %"class.base::WeakPtrFactory.2187" }
%"class.mojo::ScopedHandleBase.2184" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2185 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2186" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2187" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2191" = type { %"class.absl::optional_internal::optional_data.2192" }
%"class.absl::optional_internal::optional_data.2192" = type { %"class.absl::optional_internal::optional_data_base.2193" }
%"class.absl::optional_internal::optional_data_base.2193" = type { %"class.absl::optional_internal::optional_data_dtor_base.2194" }
%"class.absl::optional_internal::optional_data_dtor_base.2194" = type { i8, %union.anon.2195 }
%union.anon.2195 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2196", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2196" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2202" = type { %"class.std::__1::__compressed_pair.2203" }
%"class.std::__1::__compressed_pair.2203" = type { %"struct.std::__1::__compressed_pair_elem.2204" }
%"struct.std::__1::__compressed_pair_elem.2204" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2205", i8, i64, %class.scoped_refptr.2206, %class.scoped_refptr.2231 }
%"class.base::RepeatingCallback.2205" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2206 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2207", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2209", %"class.std::__1::map.2220", i8, [7 x i8] }>
%"class.base::RefCounted.2207" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2208 }
%class.scoped_refptr.2208 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2209" = type { %"class.std::__1::__tree.2210" }
%"class.std::__1::__tree.2210" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2211", %"class.std::__1::__compressed_pair.2215" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2220" = type { %"class.std::__1::__tree.2221" }
%"class.std::__1::__tree.2221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2222", %"class.std::__1::__compressed_pair.2226" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.2226" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2231 = type { %"class.base::RefCountedData.2232"* }
%"class.base::RefCountedData.2232" = type opaque
%class.scoped_refptr.2236 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2237" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2239" = type { %"class.absl::optional_internal::optional_data.2240" }
%"class.absl::optional_internal::optional_data.2240" = type { %"class.absl::optional_internal::optional_data_base.2241" }
%"class.absl::optional_internal::optional_data_base.2241" = type { %"class.absl::optional_internal::optional_data_dtor_base.2242" }
%"class.absl::optional_internal::optional_data_dtor_base.2242" = type { i8, %union.anon.2243 }
%union.anon.2243 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2244" = type { %"class.absl::optional_internal::optional_data.2245" }
%"class.absl::optional_internal::optional_data.2245" = type { %"class.absl::optional_internal::optional_data_base.2246" }
%"class.absl::optional_internal::optional_data_base.2246" = type { %"class.absl::optional_internal::optional_data_dtor_base.2247" }
%"class.absl::optional_internal::optional_data_dtor_base.2247" = type { i8, [7 x i8], %union.anon.2248 }
%union.anon.2248 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2197" = type { %"class.absl::optional_internal::optional_data.2198" }
%"class.absl::optional_internal::optional_data.2198" = type { %"class.absl::optional_internal::optional_data_base.2199" }
%"class.absl::optional_internal::optional_data_base.2199" = type { %"class.absl::optional_internal::optional_data_dtor_base.2200" }
%"class.absl::optional_internal::optional_data_dtor_base.2200" = type { i8, %union.anon.2201 }
%union.anon.2201 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2249 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2249 = type { %"class.std::__1::map.2252" }
%"class.std::__1::map.2252" = type { %"class.std::__1::__tree.2253" }
%"class.std::__1::__tree.2253" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2254", %"class.std::__1::__compressed_pair.2258" }
%"class.std::__1::__compressed_pair.2254" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2263"*, i64 }
%"class.std::__1::unique_ptr.2263" = type opaque
%"class.std::__1::map.2264" = type { %"class.std::__1::__tree.2265" }
%"class.std::__1::__tree.2265" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2266", %"class.std::__1::__compressed_pair.2270" }
%"class.std::__1::__compressed_pair.2266" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.2270" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2281" = type { %"class.blink::MemberBase.2282" }
%"class.blink::MemberBase.2282" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2171" = type { %"class.blink::MemberBase.2172" }
%"class.blink::MemberBase.2172" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2142", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2283" }
%"class.base::internal::flat_tree.2283" = type { %"class.std::__1::vector.2284" }
%"class.std::__1::vector.2284" = type { %"class.std::__1::__vector_base.2285" }
%"class.std::__1::__vector_base.2285" = type { %"struct.std::__1::pair.2286"*, %"struct.std::__1::pair.2286"*, %"class.std::__1::__compressed_pair.2287" }
%"struct.std::__1::pair.2286" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2287" = type { %"struct.std::__1::__compressed_pair_elem.2288" }
%"struct.std::__1::__compressed_pair_elem.2288" = type { %"struct.std::__1::pair.2286"* }
%"class.blink::Member.2292" = type { %"class.blink::MemberBase.2293" }
%"class.blink::MemberBase.2293" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2294" = type { %"class.absl::optional_internal::optional_data.2295" }
%"class.absl::optional_internal::optional_data.2295" = type { %"class.absl::optional_internal::optional_data_base.2296" }
%"class.absl::optional_internal::optional_data_base.2296" = type { %"class.absl::optional_internal::optional_data_dtor_base.2297" }
%"class.absl::optional_internal::optional_data_dtor_base.2297" = type { i8, %union.anon.2298 }
%union.anon.2298 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2304" }
%"class.blink::HeapHashSet.2304" = type { %"class.WTF::HashSet.2307" }
%"class.WTF::HashSet.2307" = type { %"class.WTF::HashTable.2308" }
%"class.WTF::HashTable.2308" = type <{ %"class.blink::WeakMember.2310"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2310" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2311" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2312" }
%"class.blink::HeapHashMap.2312" = type { %"class.WTF::HashMap.2315" }
%"class.WTF::HashMap.2315" = type { %"class.WTF::HashTable.2316" }
%"class.WTF::HashTable.2316" = type <{ %"struct.WTF::KeyValuePair.2318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2318" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2319" = type { %"class.std::__1::__compressed_pair.2320" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.2321" }
%"struct.std::__1::__compressed_pair_elem.2321" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2322", %"class.base::WeakPtrFactory.2327" }
%"class.WTF::HashMap.2322" = type { %"class.WTF::HashTable.2323" }
%"class.WTF::HashTable.2323" = type <{ %"struct.WTF::KeyValuePair.2326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2326" = type opaque
%"class.base::WeakPtrFactory.2327" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2331" }
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3028" }
%"class.blink::WeakMember.3028" = type { %"class.blink::MemberBase.3029" }
%"class.blink::MemberBase.3029" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3030", i64, %"class.std::__1::map.3031", i8*, i64, %"class.base::WeakPtrFactory.3040" }
%"class.base::RepeatingCallback.3030" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3031" = type { %"class.std::__1::__tree.3032" }
%"class.std::__1::__tree.3032" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3033", %"class.std::__1::__compressed_pair.3037" }
%"class.std::__1::__compressed_pair.3033" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"class.std::__1::__compressed_pair.3037" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3040" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2333" = type { %"class.WTF::HashSet.2336" }
%"class.WTF::HashSet.2336" = type { %"class.WTF::HashTable.2337" }
%"class.WTF::HashTable.2337" = type <{ %"class.blink::WeakMember.2339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2339" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1882", %"class.blink::Member.2340", %"class.blink::Member.2342", %"class.std::__1::unique_ptr.2344", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2350" }
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2342" = type { %"class.blink::MemberBase.2343" }
%"class.blink::MemberBase.2343" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2344" = type { %"class.std::__1::__compressed_pair.2345" }
%"class.std::__1::__compressed_pair.2345" = type { %"struct.std::__1::__compressed_pair_elem.2346" }
%"struct.std::__1::__compressed_pair_elem.2346" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2350" = type { %"class.WTF::HashTable.2351" }
%"class.WTF::HashTable.2351" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2354" = type { %"class.blink::MemberBase.1886" }
%"class.blink::MemberBase.1886" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2355" = type { %"class.blink::MemberBase.2356" }
%"class.blink::MemberBase.2356" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2357" = type { %"class.blink::MemberBase.2358" }
%"class.blink::MemberBase.2358" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1882", %"class.blink::Member.2361", %"class.blink::Member.2363", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2365", %"class.blink::Member.2371" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1215" }
%"class.blink::WeakMember.1215" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.2361" = type { %"class.blink::MemberBase.2362" }
%"class.blink::MemberBase.2362" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2363" = type { %"class.blink::MemberBase.2364" }
%"class.blink::MemberBase.2364" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2365" = type { %"class.std::__1::__compressed_pair.2366" }
%"class.std::__1::__compressed_pair.2366" = type { %"struct.std::__1::__compressed_pair_elem.2367" }
%"struct.std::__1::__compressed_pair_elem.2367" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2371" = type { %"class.blink::MemberBase.2372" }
%"class.blink::MemberBase.2372" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2373" = type { %"class.blink::MemberBase.2374" }
%"class.blink::MemberBase.2374" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2375" = type { %"class.blink::MemberBase.2376" }
%"class.blink::MemberBase.2376" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2381", %"class.blink::HeapListHashSet.2392", %"class.blink::HeapListHashSet.2403", %"class.blink::HeapListHashSet.2414", %"class.blink::HeapListHashSet.2425", %"class.blink::HeapListHashSet.2436", %"class.blink::HeapListHashSet.2447", %"class.blink::HeapListHashSet.2458", %"class.blink::HeapListHashSet.2469", %"class.blink::HeapListHashSet.2480", %"class.blink::HeapListHashSet.2491", %"class.blink::HeapListHashSet.2502", %"class.blink::HeapListHashSet.2513", %"class.blink::HeapListHashSet.2524", %"class.blink::HeapListHashSet.2535", %"class.blink::HeapListHashSet.2546", %"class.blink::HeapListHashSet.2557", %"class.blink::HeapListHashSet.2568", %"class.blink::HeapListHashSet.2579", %"class.blink::HeapListHashSet.2590" }
%"class.blink::HeapListHashSet.2381" = type { %"class.WTF::ListHashSet.base.2391", [7 x i8] }
%"class.WTF::ListHashSet.base.2391" = type <{ %"class.WTF::HashTable.2386", %"class.blink::Member.2388", %"class.blink::Member.2388", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2386" = type <{ %"class.blink::Member.2388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2388" = type { %"class.blink::MemberBase.2389" }
%"class.blink::MemberBase.2389" = type { %"class.blink::HeapListHashSetNode.2390"* }
%"class.blink::HeapListHashSetNode.2390" = type { %"class.blink::Member.2604", %"class.blink::Member.2388", %"class.blink::Member.2388" }
%"class.blink::HeapListHashSet.2392" = type { %"class.WTF::ListHashSet.base.2402", [7 x i8] }
%"class.WTF::ListHashSet.base.2402" = type <{ %"class.WTF::HashTable.2397", %"class.blink::Member.2399", %"class.blink::Member.2399", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2397" = type <{ %"class.blink::Member.2399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::HeapListHashSetNode.2401"* }
%"class.blink::HeapListHashSetNode.2401" = type { %"class.blink::Member.2747", %"class.blink::Member.2399", %"class.blink::Member.2399" }
%"class.blink::Member.2747" = type { %"class.blink::MemberBase.2748" }
%"class.blink::MemberBase.2748" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2403" = type { %"class.WTF::ListHashSet.base.2413", [7 x i8] }
%"class.WTF::ListHashSet.base.2413" = type <{ %"class.WTF::HashTable.2408", %"class.blink::Member.2410", %"class.blink::Member.2410", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2408" = type <{ %"class.blink::Member.2410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::HeapListHashSetNode.2412"* }
%"class.blink::HeapListHashSetNode.2412" = type { %"class.blink::Member.2743", %"class.blink::Member.2410", %"class.blink::Member.2410" }
%"class.blink::Member.2743" = type { %"class.blink::MemberBase.2744" }
%"class.blink::MemberBase.2744" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2414" = type { %"class.WTF::ListHashSet.base.2424", [7 x i8] }
%"class.WTF::ListHashSet.base.2424" = type <{ %"class.WTF::HashTable.2419", %"class.blink::Member.2421", %"class.blink::Member.2421", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2419" = type <{ %"class.blink::Member.2421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::HeapListHashSetNode.2423"* }
%"class.blink::HeapListHashSetNode.2423" = type { %"class.blink::Member.2739", %"class.blink::Member.2421", %"class.blink::Member.2421" }
%"class.blink::Member.2739" = type { %"class.blink::MemberBase.2740" }
%"class.blink::MemberBase.2740" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2425" = type { %"class.WTF::ListHashSet.base.2435", [7 x i8] }
%"class.WTF::ListHashSet.base.2435" = type <{ %"class.WTF::HashTable.2430", %"class.blink::Member.2432", %"class.blink::Member.2432", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2430" = type <{ %"class.blink::Member.2432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::HeapListHashSetNode.2434"* }
%"class.blink::HeapListHashSetNode.2434" = type { %"class.blink::Member.2735", %"class.blink::Member.2432", %"class.blink::Member.2432" }
%"class.blink::Member.2735" = type { %"class.blink::MemberBase.2736" }
%"class.blink::MemberBase.2736" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2436" = type { %"class.WTF::ListHashSet.base.2446", [7 x i8] }
%"class.WTF::ListHashSet.base.2446" = type <{ %"class.WTF::HashTable.2441", %"class.blink::Member.2443", %"class.blink::Member.2443", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2441" = type <{ %"class.blink::Member.2443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2443" = type { %"class.blink::MemberBase.2444" }
%"class.blink::MemberBase.2444" = type { %"class.blink::HeapListHashSetNode.2445"* }
%"class.blink::HeapListHashSetNode.2445" = type { %"class.blink::Member.2731", %"class.blink::Member.2443", %"class.blink::Member.2443" }
%"class.blink::Member.2731" = type { %"class.blink::MemberBase.2732" }
%"class.blink::MemberBase.2732" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2447" = type { %"class.WTF::ListHashSet.base.2457", [7 x i8] }
%"class.WTF::ListHashSet.base.2457" = type <{ %"class.WTF::HashTable.2452", %"class.blink::Member.2454", %"class.blink::Member.2454", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2452" = type <{ %"class.blink::Member.2454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::HeapListHashSetNode.2456"* }
%"class.blink::HeapListHashSetNode.2456" = type { %"class.blink::Member.2727", %"class.blink::Member.2454", %"class.blink::Member.2454" }
%"class.blink::Member.2727" = type { %"class.blink::MemberBase.2728" }
%"class.blink::MemberBase.2728" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2458" = type { %"class.WTF::ListHashSet.base.2468", [7 x i8] }
%"class.WTF::ListHashSet.base.2468" = type <{ %"class.WTF::HashTable.2463", %"class.blink::Member.2465", %"class.blink::Member.2465", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2463" = type <{ %"class.blink::Member.2465"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::HeapListHashSetNode.2467"* }
%"class.blink::HeapListHashSetNode.2467" = type { %"class.blink::Member.2723", %"class.blink::Member.2465", %"class.blink::Member.2465" }
%"class.blink::Member.2723" = type { %"class.blink::MemberBase.2724" }
%"class.blink::MemberBase.2724" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2469" = type { %"class.WTF::ListHashSet.base.2479", [7 x i8] }
%"class.WTF::ListHashSet.base.2479" = type <{ %"class.WTF::HashTable.2474", %"class.blink::Member.2476", %"class.blink::Member.2476", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2474" = type <{ %"class.blink::Member.2476"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::HeapListHashSetNode.2478"* }
%"class.blink::HeapListHashSetNode.2478" = type { %"class.blink::Member.2719", %"class.blink::Member.2476", %"class.blink::Member.2476" }
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2480" = type { %"class.WTF::ListHashSet.base.2490", [7 x i8] }
%"class.WTF::ListHashSet.base.2490" = type <{ %"class.WTF::HashTable.2485", %"class.blink::Member.2487", %"class.blink::Member.2487", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2485" = type <{ %"class.blink::Member.2487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::HeapListHashSetNode.2489"* }
%"class.blink::HeapListHashSetNode.2489" = type { %"class.blink::Member.2715", %"class.blink::Member.2487", %"class.blink::Member.2487" }
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2491" = type { %"class.WTF::ListHashSet.base.2501", [7 x i8] }
%"class.WTF::ListHashSet.base.2501" = type <{ %"class.WTF::HashTable.2496", %"class.blink::Member.2498", %"class.blink::Member.2498", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2496" = type <{ %"class.blink::Member.2498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::HeapListHashSetNode.2500"* }
%"class.blink::HeapListHashSetNode.2500" = type { %"class.blink::Member.2608", %"class.blink::Member.2498", %"class.blink::Member.2498" }
%"class.blink::HeapListHashSet.2502" = type { %"class.WTF::ListHashSet.base.2512", [7 x i8] }
%"class.WTF::ListHashSet.base.2512" = type <{ %"class.WTF::HashTable.2507", %"class.blink::Member.2509", %"class.blink::Member.2509", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2507" = type <{ %"class.blink::Member.2509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::HeapListHashSetNode.2511"* }
%"class.blink::HeapListHashSetNode.2511" = type { %"class.blink::Member.2709", %"class.blink::Member.2509", %"class.blink::Member.2509" }
%"class.blink::Member.2709" = type { %"class.blink::MemberBase.2710" }
%"class.blink::MemberBase.2710" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2513" = type { %"class.WTF::ListHashSet.base.2523", [7 x i8] }
%"class.WTF::ListHashSet.base.2523" = type <{ %"class.WTF::HashTable.2518", %"class.blink::Member.2520", %"class.blink::Member.2520", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2518" = type <{ %"class.blink::Member.2520"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::HeapListHashSetNode.2522"* }
%"class.blink::HeapListHashSetNode.2522" = type { %"class.blink::Member.2705", %"class.blink::Member.2520", %"class.blink::Member.2520" }
%"class.blink::Member.2705" = type { %"class.blink::MemberBase.2706" }
%"class.blink::MemberBase.2706" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2524" = type { %"class.WTF::ListHashSet.base.2534", [7 x i8] }
%"class.WTF::ListHashSet.base.2534" = type <{ %"class.WTF::HashTable.2529", %"class.blink::Member.2531", %"class.blink::Member.2531", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2529" = type <{ %"class.blink::Member.2531"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::HeapListHashSetNode.2533"* }
%"class.blink::HeapListHashSetNode.2533" = type { %"class.blink::Member.2701", %"class.blink::Member.2531", %"class.blink::Member.2531" }
%"class.blink::Member.2701" = type { %"class.blink::MemberBase.2702" }
%"class.blink::MemberBase.2702" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2535" = type { %"class.WTF::ListHashSet.base.2545", [7 x i8] }
%"class.WTF::ListHashSet.base.2545" = type <{ %"class.WTF::HashTable.2540", %"class.blink::Member.2542", %"class.blink::Member.2542", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2540" = type <{ %"class.blink::Member.2542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::HeapListHashSetNode.2544"* }
%"class.blink::HeapListHashSetNode.2544" = type { %"class.blink::Member.2697", %"class.blink::Member.2542", %"class.blink::Member.2542" }
%"class.blink::Member.2697" = type { %"class.blink::MemberBase.2698" }
%"class.blink::MemberBase.2698" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2546" = type { %"class.WTF::ListHashSet.base.2556", [7 x i8] }
%"class.WTF::ListHashSet.base.2556" = type <{ %"class.WTF::HashTable.2551", %"class.blink::Member.2553", %"class.blink::Member.2553", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2551" = type <{ %"class.blink::Member.2553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::HeapListHashSetNode.2555"* }
%"class.blink::HeapListHashSetNode.2555" = type { %"class.blink::Member.2693", %"class.blink::Member.2553", %"class.blink::Member.2553" }
%"class.blink::Member.2693" = type { %"class.blink::MemberBase.2694" }
%"class.blink::MemberBase.2694" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2557" = type { %"class.WTF::ListHashSet.base.2567", [7 x i8] }
%"class.WTF::ListHashSet.base.2567" = type <{ %"class.WTF::HashTable.2562", %"class.blink::Member.2564", %"class.blink::Member.2564", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2562" = type <{ %"class.blink::Member.2564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::HeapListHashSetNode.2566"* }
%"class.blink::HeapListHashSetNode.2566" = type { %"class.blink::Member.2689", %"class.blink::Member.2564", %"class.blink::Member.2564" }
%"class.blink::Member.2689" = type { %"class.blink::MemberBase.2690" }
%"class.blink::MemberBase.2690" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2568" = type { %"class.WTF::ListHashSet.base.2578", [7 x i8] }
%"class.WTF::ListHashSet.base.2578" = type <{ %"class.WTF::HashTable.2573", %"class.blink::Member.2575", %"class.blink::Member.2575", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2573" = type <{ %"class.blink::Member.2575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::HeapListHashSetNode.2577"* }
%"class.blink::HeapListHashSetNode.2577" = type { %"class.blink::Member.2685", %"class.blink::Member.2575", %"class.blink::Member.2575" }
%"class.blink::Member.2685" = type { %"class.blink::MemberBase.2686" }
%"class.blink::MemberBase.2686" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2579" = type { %"class.WTF::ListHashSet.base.2589", [7 x i8] }
%"class.WTF::ListHashSet.base.2589" = type <{ %"class.WTF::HashTable.2584", %"class.blink::Member.2586", %"class.blink::Member.2586", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2584" = type <{ %"class.blink::Member.2586"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::HeapListHashSetNode.2588"* }
%"class.blink::HeapListHashSetNode.2588" = type { %"class.blink::Member.2610", %"class.blink::Member.2586", %"class.blink::Member.2586" }
%"class.blink::HeapListHashSet.2590" = type { %"class.WTF::ListHashSet.base.2600", [7 x i8] }
%"class.WTF::ListHashSet.base.2600" = type <{ %"class.WTF::HashTable.2595", %"class.blink::Member.2597", %"class.blink::Member.2597", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2595" = type <{ %"class.blink::Member.2597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2597" = type { %"class.blink::MemberBase.2598" }
%"class.blink::MemberBase.2598" = type { %"class.blink::HeapListHashSetNode.2599"* }
%"class.blink::HeapListHashSetNode.2599" = type { %"class.blink::Member.2602", %"class.blink::Member.2597", %"class.blink::Member.2597" }
%class.scoped_refptr.2601 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2602" = type { %"class.blink::MemberBase.2603" }
%"class.blink::MemberBase.2603" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2604" = type { %"class.blink::MemberBase.2605" }
%"class.blink::MemberBase.2605" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2606" = type { %"class.blink::MemberBase.2607" }
%"class.blink::MemberBase.2607" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2608" = type { %"class.blink::MemberBase.2609" }
%"class.blink::MemberBase.2609" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2610" = type { %"class.blink::MemberBase.2611" }
%"class.blink::MemberBase.2611" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2614" = type { %"class.blink::MemberBase.2615" }
%"class.blink::MemberBase.2615" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2616" = type { %"class.blink::MemberBase.2617" }
%"class.blink::MemberBase.2617" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2618" }
%"class.blink::Member.2618" = type { %"class.blink::MemberBase.2619" }
%"class.blink::MemberBase.2619" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3043" }
%"class.mojo::Remote.3043" = type { %"class.mojo::internal::InterfacePtrState.3044" }
%"class.mojo::internal::InterfacePtrState.3044" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3045" }
%"class.std::__1::unique_ptr.3045" = type { %"class.std::__1::__compressed_pair.3046" }
%"class.std::__1::__compressed_pair.3046" = type { %"struct.std::__1::__compressed_pair_elem.3047" }
%"struct.std::__1::__compressed_pair_elem.3047" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2620" = type { %"class.std::__1::__compressed_pair.2621" }
%"class.std::__1::__compressed_pair.2621" = type { %"struct.std::__1::__compressed_pair_elem.2622" }
%"struct.std::__1::__compressed_pair_elem.2622" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2626" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2627" = type { %"class.std::__1::__compressed_pair.2628" }
%"class.std::__1::__compressed_pair.2628" = type { %"struct.std::__1::__compressed_pair_elem.2629" }
%"struct.std::__1::__compressed_pair_elem.2629" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2299" = type { %"class.absl::optional_internal::optional_data.2300" }
%"class.absl::optional_internal::optional_data.2300" = type { %"class.absl::optional_internal::optional_data_base.2301" }
%"class.absl::optional_internal::optional_data_base.2301" = type { %"class.absl::optional_internal::optional_data_dtor_base.2302" }
%"class.absl::optional_internal::optional_data_dtor_base.2302" = type { i8, %union.anon.2303 }
%union.anon.2303 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2633" = type { %"class.std::__1::__compressed_pair.2634" }
%"class.std::__1::__compressed_pair.2634" = type { %"struct.std::__1::__compressed_pair_elem.2635" }
%"struct.std::__1::__compressed_pair_elem.2635" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2639" }
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3053" }
%"class.mojo::AssociatedRemote.3053" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3054" }
%"class.mojo::internal::AssociatedInterfacePtrState.3054" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3055" }
%"class.std::__1::unique_ptr.3055" = type { %"class.std::__1::__compressed_pair.3056" }
%"class.std::__1::__compressed_pair.3056" = type { %"struct.std::__1::__compressed_pair_elem.3057" }
%"struct.std::__1::__compressed_pair_elem.3057" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2641" = type { %"class.blink::Member.2642" }
%"class.blink::Member.2642" = type { %"class.blink::MemberBase.2643" }
%"class.blink::MemberBase.2643" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3063" }
%"class.mojo::AssociatedRemote.3063" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3064" }
%"class.mojo::internal::AssociatedInterfacePtrState.3064" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3065" }
%"class.std::__1::unique_ptr.3065" = type { %"class.std::__1::__compressed_pair.3066" }
%"class.std::__1::__compressed_pair.3066" = type { %"struct.std::__1::__compressed_pair_elem.3067" }
%"struct.std::__1::__compressed_pair_elem.3067" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2644" }
%"class.blink::Member.2644" = type { %"class.blink::MemberBase.2645" }
%"class.blink::MemberBase.2645" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3073", %"class.blink::Member.1882", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3073" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3074" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1066" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3074" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2646" = type { %"class.blink::Member.2647" }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3077", %"class.blink::Member.1882", %"class.mojo::AssociatedReceiver.3078" }
%"class.blink::ThreadState::PrefinalizerRegistration.3077" = type { i8 }
%"class.mojo::AssociatedReceiver.3078" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3079" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3079" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2649" }
%"class.blink::Member.2649" = type { %"class.blink::MemberBase.2650" }
%"class.blink::MemberBase.2650" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3082", %"class.blink::Member.1882", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3082" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2180, %"class.std::__1::unique_ptr.1066", %"class.base::WeakPtrFactory.3083" }
%"class.base::WeakPtrFactory.3083" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2651" = type { %"class.blink::Member.2652" }
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3086", %"class.blink::Member.1882", %"class.mojo::AssociatedReceiver.3087" }
%"class.blink::ThreadState::PrefinalizerRegistration.3086" = type { i8 }
%"class.mojo::AssociatedReceiver.3087" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3088" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3088" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2654" = type { %"class.blink::MemberBase.2655" }
%"class.blink::MemberBase.2655" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2656" = type { %"class.blink::MemberBase.2657" }
%"class.blink::MemberBase.2657" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2658" = type { %"class.blink::MemberBase.2659" }
%"class.blink::MemberBase.2659" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2660" = type { %"class.blink::MemberBase.2661" }
%"class.blink::MemberBase.2661" = type { %"class.blink::HeapHashMap.2662"* }
%"class.blink::HeapHashMap.2662" = type opaque
%"class.mojo::StructPtr.2663" = type { %"class.std::__1::unique_ptr.2664" }
%"class.std::__1::unique_ptr.2664" = type { %"class.std::__1::__compressed_pair.2665" }
%"class.std::__1::__compressed_pair.2665" = type { %"struct.std::__1::__compressed_pair_elem.2666" }
%"struct.std::__1::__compressed_pair_elem.2666" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2667", %"class.mojo::InlinedStructPtr.2668" }
%"class.mojo::InlinedStructPtr.2667" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2668" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2674" = type { %"class.absl::optional_internal::optional_data.2675" }
%"class.absl::optional_internal::optional_data.2675" = type { %"class.absl::optional_internal::optional_data_base.2676" }
%"class.absl::optional_internal::optional_data_base.2676" = type { %"class.absl::optional_internal::optional_data_dtor_base.2677" }
%"class.absl::optional_internal::optional_data_dtor_base.2677" = type { i8, %union.anon.2678 }
%union.anon.2678 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1884" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1885", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1213, %"class.base::WeakPtrFactory.1214" }
%class.scoped_refptr.1213 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1214" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1885" = type { %"class.blink::MemberBase.1886" }
%"class.absl::optional.1887" = type { %"class.absl::optional_internal::optional_data.1888" }
%"class.absl::optional_internal::optional_data.1888" = type { %"class.absl::optional_internal::optional_data_base.1889" }
%"class.absl::optional_internal::optional_data_base.1889" = type { %"class.absl::optional_internal::optional_data_dtor_base.1890" }
%"class.absl::optional_internal::optional_data_dtor_base.1890" = type { i8, %union.anon.1891 }
%union.anon.1891 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::HeapHashSet.1896"* }
%"class.blink::HeapHashSet.1896" = type opaque
%"class.std::__1::unique_ptr.1897" = type { %"class.std::__1::__compressed_pair.1898" }
%"class.std::__1::__compressed_pair.1898" = type { %"struct.std::__1::__compressed_pair_elem.1899" }
%"struct.std::__1::__compressed_pair_elem.1899" = type { %"class.WTF::HashSet.1900"* }
%"class.WTF::HashSet.1900" = type { %"class.WTF::HashTable.1901" }
%"class.WTF::HashTable.1901" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1907" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1909" = type { %"class.WTF::HashSet.1912" }
%"class.WTF::HashSet.1912" = type { %"class.WTF::HashTable.1913" }
%"class.WTF::HashTable.1913" = type <{ %"class.blink::Member.1915"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1915" = type opaque
%"class.blink::HeapHashSet.1916" = type { %"class.WTF::HashSet.1919" }
%"class.WTF::HashSet.1919" = type { %"class.WTF::HashTable.1920" }
%"class.WTF::HashTable.1920" = type <{ %"class.blink::Member.1922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2128", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2138", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2128" = type { %"class.blink::MemberBase.2129" }
%"class.blink::MemberBase.2129" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2130", %"class.blink::Member.2132", %"class.blink::Member.2134", %"class.blink::Member.2136", %"class.WTF::Vector.1160", i16, %class.scoped_refptr.1213 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2130" = type { %"class.blink::MemberBase.2131" }
%"class.blink::MemberBase.2131" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2132" = type { %"class.blink::MemberBase.2133" }
%"class.blink::MemberBase.2133" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2134" = type { %"class.blink::MemberBase.2135" }
%"class.blink::MemberBase.2135" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2136" = type { %"class.blink::MemberBase.2137" }
%"class.blink::MemberBase.2137" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2138" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2139", { i64, i64 } }
%"class.blink::WeakMember.2139" = type { %"class.blink::MemberBase.1923" }
%"class.std::__1::unique_ptr.1924" = type { %"class.std::__1::__compressed_pair.1925" }
%"class.std::__1::__compressed_pair.1925" = type { %"struct.std::__1::__compressed_pair_elem.1926" }
%"struct.std::__1::__compressed_pair_elem.1926" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1934", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1934" = type { %"class.WTF::HashTable.1935" }
%"class.WTF::HashTable.1935" = type <{ %"struct.WTF::KeyValuePair.1937"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1937" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1938", i32, i32 }
%"class.WTF::Vector.1938" = type { %"class.WTF::VectorBuffer.1939" }
%"class.WTF::VectorBuffer.1939" = type { %"class.WTF::VectorBufferBase.1940" }
%"class.WTF::VectorBufferBase.1940" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1942" = type { %"class.WTF::LinkedHashSet.1945" }
%"class.WTF::LinkedHashSet.1945" = type { %"class.WTF::HashMap.1946", %"class.WTF::VectorBackedLinkedList.1950" }
%"class.WTF::HashMap.1946" = type { %"class.WTF::HashTable.1947" }
%"class.WTF::HashTable.1947" = type <{ %"struct.WTF::KeyValuePair.1949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1949" = type opaque
%"class.WTF::VectorBackedLinkedList.1950" = type { %"class.WTF::Vector.1951", i32, i32 }
%"class.WTF::Vector.1951" = type { %"class.WTF::VectorBuffer.1952" }
%"class.WTF::VectorBuffer.1952" = type { %"class.WTF::VectorBufferBase.1953" }
%"class.WTF::VectorBufferBase.1953" = type { %"class.WTF::VectorBackedLinkedListNode.1954"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1954" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1956" = type { %"class.std::__1::__compressed_pair.1957" }
%"class.std::__1::__compressed_pair.1957" = type { %"struct.std::__1::__compressed_pair_elem.1958" }
%"struct.std::__1::__compressed_pair_elem.1958" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1962" = type { %"class.std::__1::__compressed_pair.1963" }
%"class.std::__1::__compressed_pair.1963" = type { %"struct.std::__1::__compressed_pair_elem.1964" }
%"struct.std::__1::__compressed_pair_elem.1964" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1965, %class.scoped_refptr.1965, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2020", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2025", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1965 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1966", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1973" }
%"class.WTF::RefCounted.1966" = type { %"class.base::RefCounted.1967" }
%"class.base::RefCounted.1967" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1968", i32, [4 x i8] }>
%"class.WTF::Vector.1968" = type { %"class.WTF::VectorBuffer.1969" }
%"class.WTF::VectorBuffer.1969" = type { %"class.WTF::VectorBufferBase.1970" }
%"class.WTF::VectorBufferBase.1970" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1973" = type { %"class.WTF::VectorBuffer.1974" }
%"class.WTF::VectorBuffer.1974" = type { %"class.WTF::VectorBufferBase.1975" }
%"class.WTF::VectorBufferBase.1975" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1976", %"class.std::__1::unique_ptr.1992", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1976" = type { %"class.std::__1::__compressed_pair.1977" }
%"class.std::__1::__compressed_pair.1977" = type { %"struct.std::__1::__compressed_pair_elem.1978" }
%"struct.std::__1::__compressed_pair_elem.1978" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1979", %"class.WTF::Vector.1984", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1979" = type { %"class.WTF::VectorBuffer.1980" }
%"class.WTF::VectorBuffer.1980" = type { %"class.WTF::VectorBufferBase.1981" }
%"class.WTF::VectorBufferBase.1981" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1984" = type { %"class.WTF::VectorBuffer.1985" }
%"class.WTF::VectorBuffer.1985" = type { %"class.WTF::VectorBufferBase.1986" }
%"class.WTF::VectorBufferBase.1986" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1992" = type { %"class.std::__1::__compressed_pair.1993" }
%"class.std::__1::__compressed_pair.1993" = type { %"struct.std::__1::__compressed_pair_elem.1994" }
%"struct.std::__1::__compressed_pair_elem.1994" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1995", %"class.absl::optional.1995" }
%"class.absl::optional.1995" = type { %"class.absl::optional_internal::optional_data.1996" }
%"class.absl::optional_internal::optional_data.1996" = type { %"class.absl::optional_internal::optional_data_base.1997" }
%"class.absl::optional_internal::optional_data_base.1997" = type { %"class.absl::optional_internal::optional_data_dtor_base.1998" }
%"class.absl::optional_internal::optional_data_dtor_base.1998" = type { i8, [3 x i8], %union.anon.1999 }
%union.anon.1999 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1973"*, %"class.absl::optional.2005", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2005" = type { %"class.absl::optional_internal::optional_data.2006" }
%"class.absl::optional_internal::optional_data.2006" = type { %"class.absl::optional_internal::optional_data_base.2007" }
%"class.absl::optional_internal::optional_data_base.2007" = type { %"class.absl::optional_internal::optional_data_dtor_base.2008" }
%"class.absl::optional_internal::optional_data_dtor_base.2008" = type { i8, %union.anon.2009 }
%union.anon.2009 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2010", %"class.WTF::Vector.2015" }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012", [128 x i8] }
%"class.WTF::VectorBufferBase.2012" = type { i32*, i32, i32 }
%"class.WTF::Vector.2015" = type { %"class.WTF::VectorBuffer.2016" }
%"class.WTF::VectorBuffer.2016" = type { %"class.WTF::VectorBufferBase.2017", [128 x i8] }
%"class.WTF::VectorBufferBase.2017" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2020" = type { %"class.WTF::VectorBuffer.2021" }
%"class.WTF::VectorBuffer.2021" = type { %"class.WTF::VectorBufferBase.2022" }
%"class.WTF::VectorBufferBase.2022" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2025" = type { %"class.WTF::HashTable.2026" }
%"class.WTF::HashTable.2026" = type <{ %"struct.WTF::KeyValuePair.2029"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2029" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2030", %"class.WTF::Vector.2035" }
%"class.WTF::HashMap.2030" = type { %"class.WTF::HashTable.2031" }
%"class.WTF::HashTable.2031" = type <{ %"struct.WTF::KeyValuePair.2034"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2034" = type opaque
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2043" = type { %"class.std::__1::__compressed_pair.2044" }
%"class.std::__1::__compressed_pair.2044" = type { %"struct.std::__1::__compressed_pair_elem.2045" }
%"struct.std::__1::__compressed_pair_elem.2045" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2049" = type { %"class.WTF::VectorBuffer.2050" }
%"class.WTF::VectorBuffer.2050" = type { %"class.WTF::VectorBufferBase.2051" }
%"class.WTF::VectorBufferBase.2051" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2054 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2059" = type { %"class.blink::MemberBase.2060" }
%"class.blink::MemberBase.2060" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2061" = type { %"class.WTF::HashSet.2064" }
%"class.WTF::HashSet.2064" = type { %"class.WTF::HashTable.2065" }
%"class.WTF::HashTable.2065" = type <{ %"class.blink::WeakMember.2067"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2067" = type opaque
%"class.blink::HeapHashSet.2068" = type { %"class.WTF::HashSet.2071" }
%"class.WTF::HashSet.2071" = type { %"class.WTF::HashTable.2072" }
%"class.WTF::HashTable.2072" = type <{ %"class.blink::WeakMember.2074"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2074" = type opaque
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2078" }
%"class.base::time_internal::TimeBase.2078" = type { i64 }
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2085", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2085" = type { %"class.absl::optional_internal::optional_data.2086" }
%"class.absl::optional_internal::optional_data.2086" = type { %"class.absl::optional_internal::optional_data_base.2087" }
%"class.absl::optional_internal::optional_data_base.2087" = type { %"class.absl::optional_internal::optional_data_dtor_base.2088" }
%"class.absl::optional_internal::optional_data_dtor_base.2088" = type { i8, %union.anon.2089 }
%union.anon.2089 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2093" = type { %"class.std::__1::__compressed_pair.2094" }
%"class.std::__1::__compressed_pair.2094" = type { %"struct.std::__1::__compressed_pair_elem.2095" }
%"struct.std::__1::__compressed_pair_elem.2095" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2099" = type { %"class.std::__1::__compressed_pair.2100" }
%"class.std::__1::__compressed_pair.2100" = type { %"struct.std::__1::__compressed_pair_elem.2101" }
%"struct.std::__1::__compressed_pair_elem.2101" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2105" = type { %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.2107" }
%"struct.std::__1::__compressed_pair_elem.2107" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1869 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2111" = type { %"class.blink::PersistentBase.2112" }
%"class.blink::PersistentBase.2112" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2115", i64 }
%"class.blink::HeapVector.2115" = type { %"class.WTF::Vector.2118" }
%"class.WTF::Vector.2118" = type { %"class.WTF::VectorBuffer.2119" }
%"class.WTF::VectorBuffer.2119" = type { %"class.WTF::VectorBufferBase.2120", [368 x i8] }
%"class.WTF::VectorBufferBase.2120" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1922", i8, %"class.blink::Member.2121", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::HeapLinkedHashSet.2123"* }
%"class.blink::HeapLinkedHashSet.2123" = type { %"class.WTF::LinkedHashSet.2887" }
%"class.WTF::LinkedHashSet.2887" = type { %"class.WTF::HashMap.2888", %"class.WTF::VectorBackedLinkedList.2892" }
%"class.WTF::HashMap.2888" = type { %"class.WTF::HashTable.2889" }
%"class.WTF::HashTable.2889" = type <{ %"struct.WTF::KeyValuePair.2891"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2891" = type <{ %"class.blink::Member.318", i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.2892" = type { %"class.WTF::Vector.2893", i32, i32 }
%"class.WTF::Vector.2893" = type { %"class.WTF::VectorBuffer.2894" }
%"class.WTF::VectorBuffer.2894" = type { %"class.WTF::VectorBufferBase.2895" }
%"class.WTF::VectorBufferBase.2895" = type { %"class.WTF::VectorBackedLinkedListNode.2896"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2896" = type { i32, i32, %"class.blink::Member.318" }
%"class.blink::HeapVector.1622" = type { %"class.WTF::Vector.1625" }
%"class.WTF::Vector.1625" = type { %"class.WTF::VectorBuffer.1626" }
%"class.WTF::VectorBuffer.1626" = type { %"class.WTF::VectorBufferBase.1627" }
%"class.WTF::VectorBufferBase.1627" = type { %"class.blink::Member.1628"*, i32, i32 }
%"class.blink::Member.1628" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1630" = type { %"class.blink::MemberBase.1631" }
%"class.blink::MemberBase.1631" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1634" = type { %"class.blink::MemberBase.1635" }
%"class.blink::MemberBase.1635" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1638" = type { %"class.blink::MemberBase.1639" }
%"class.blink::MemberBase.1639" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1640" = type { %"class.WTF::HashTable.1641" }
%"class.WTF::HashTable.1641" = type <{ %"struct.WTF::KeyValuePair.1644"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1644" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1649" = type { %"class.blink::MemberBase.1650" }
%"class.blink::MemberBase.1650" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1651" = type { %"class.blink::MemberBase.1652" }
%"class.blink::MemberBase.1652" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1215", { i64, i64 } }
%"class.blink::HeapHashSet.1653" = type { %"class.WTF::HashSet.1656" }
%"class.WTF::HashSet.1656" = type { %"class.WTF::HashTable.1657" }
%"class.WTF::HashTable.1657" = type <{ %"class.blink::Member.1659"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1659" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1670" = type { %"class.std::__1::__compressed_pair.1671" }
%"class.std::__1::__compressed_pair.1671" = type { %"struct.std::__1::__compressed_pair_elem.1672" }
%"struct.std::__1::__compressed_pair_elem.1672" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.439", %"class.WTF::HashSet.439", %"class.WTF::HashSet.439", %"class.WTF::HashSet.439", %"class.WTF::HashSet.439", %"class.WTF::HashSet.439", i32, [4 x i8], %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", %"class.WTF::HashMap.1679", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1679" = type { %"class.WTF::HashTable.1680" }
%"class.WTF::HashTable.1680" = type <{ %"struct.WTF::KeyValuePair.1683"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1683" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1689" = type { %"class.blink::MemberBase.1690" }
%"class.blink::MemberBase.1690" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1695" = type { %"class.WTF::VectorBuffer.1696" }
%"class.WTF::VectorBuffer.1696" = type { %"class.WTF::VectorBufferBase.1697" }
%"class.WTF::VectorBufferBase.1697" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1700" = type { %"class.WTF::HashMap.1703" }
%"class.WTF::HashMap.1703" = type { %"class.WTF::HashTable.1704" }
%"class.WTF::HashTable.1704" = type <{ %"struct.WTF::KeyValuePair.1706"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1706" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1715" = type { %"class.blink::MemberBase.1716" }
%"class.blink::MemberBase.1716" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1719" = type { %"class.WTF::HashMap.1722" }
%"class.WTF::HashMap.1722" = type { %"class.WTF::HashTable.1723" }
%"class.WTF::HashTable.1723" = type <{ %"struct.WTF::KeyValuePair.1725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1725" = type opaque
%"class.blink::HeapObserverSet.1726" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1727" }
%"class.blink::HeapHashSet.1727" = type { %"class.WTF::HashSet.1730" }
%"class.WTF::HashSet.1730" = type { %"class.WTF::HashTable.1731" }
%"class.WTF::HashTable.1731" = type <{ %"class.blink::WeakMember.1733"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1733" = type opaque
%"class.blink::Member.1734" = type { %"class.blink::MemberBase.1735" }
%"class.blink::MemberBase.1735" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1736" = type { %"class.blink::MemberBase.1737" }
%"class.blink::MemberBase.1737" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1743", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1750", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1743" = type { %"class.WTF::HashSet.1746" }
%"class.WTF::HashSet.1746" = type { %"class.WTF::HashTable.1747" }
%"class.WTF::HashTable.1747" = type <{ %"class.blink::Member.1749"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1749" = type opaque
%"class.blink::HeapTaskRunnerTimer.1750" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1751", { i64, i64 } }
%"class.blink::WeakMember.1751" = type { %"class.blink::MemberBase.1737" }
%"class.blink::WeakMember.1738" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1739" = type { %"class.blink::MemberBase.1740" }
%"class.blink::MemberBase.1740" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::PersistentBase.2901" = type { %"class.blink::HeapVector.365"*, %"class.blink::PersistentNodePtr.2902" }
%"class.blink::PersistentNodePtr.2902" = type { %"class.blink::PersistentNode"* }
%"class.blink::HTMLMapElement" = type { %"class.blink::HTMLElement", %"class.WTF::AtomicString" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.3102", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.3115" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.3100", %"class.blink::Member.1922", %"class.blink::Member.1922", i8, [7 x i8] }>
%"class.blink::Member.3100" = type { %"class.blink::MemberBase.3101" }
%"class.blink::MemberBase.3101" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.2128", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.3102" = type { %"class.std::__1::__compressed_pair.3103" }
%"class.std::__1::__compressed_pair.3103" = type { %"struct.std::__1::__compressed_pair_elem.3104" }
%"struct.std::__1::__compressed_pair_elem.3104" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.3105", %"class.absl::optional.831", i8, i8, %"class.WTF::Vector.1984" }
%"class.WTF::HashMap.3105" = type { %"class.WTF::HashTable.3106" }
%"class.WTF::HashTable.3106" = type <{ %"struct.WTF::KeyValuePair.3109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3109" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3113" }
%"class.blink::Member.3113" = type { %"class.blink::MemberBase.3114" }
%"class.blink::MemberBase.3114" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.3113" }
%"class.absl::optional.3115" = type { %"class.absl::optional_internal::optional_data.3116" }
%"class.absl::optional_internal::optional_data.3116" = type { %"class.absl::optional_internal::optional_data_base.3117" }
%"class.absl::optional_internal::optional_data_base.3117" = type { %"class.absl::optional_internal::optional_data_dtor_base.3118" }
%"class.absl::optional_internal::optional_data_dtor_base.3118" = type { i8, %union.anon.3119 }
%union.anon.3119 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::HeapVector.2908" = type { %"class.WTF::Vector.2911" }
%"class.WTF::Vector.2911" = type { %"class.WTF::VectorBuffer.2912" }
%"class.WTF::VectorBuffer.2912" = type { %"class.WTF::VectorBufferBase.2913" }
%"class.WTF::VectorBufferBase.2913" = type { %"class.blink::Member.312"*, i32, i32 }
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1558", %"class.blink::Member.2915", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.2915" = type { %"class.blink::MemberBase.2916" }
%"class.blink::MemberBase.2916" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.3121", %"class.blink::HeapHashMap.3128", %"class.blink::Member.3135", %"class.blink::Member.3137" }
%"class.blink::HeapHashSet.3121" = type { %"class.WTF::HashSet.3124" }
%"class.WTF::HashSet.3124" = type { %"class.WTF::HashTable.3125" }
%"class.WTF::HashTable.3125" = type <{ %"class.blink::WeakMember.3127"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3127" = type opaque
%"class.blink::HeapHashMap.3128" = type { %"class.WTF::HashMap.3131" }
%"class.WTF::HashMap.3131" = type { %"class.WTF::HashTable.3132" }
%"class.WTF::HashTable.3132" = type <{ %"struct.WTF::KeyValuePair.3134"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3134" = type opaque
%"class.blink::Member.3135" = type { %"class.blink::MemberBase.3136" }
%"class.blink::MemberBase.3136" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.3137" = type { %"class.blink::MemberBase.3138" }
%"class.blink::MemberBase.3138" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2903" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2903" = type { %"class.v8::TracedReference.2904" }
%"class.v8::TracedReference.2904" = type { %"class.v8::BasicTracedReference.2905" }
%"class.v8::BasicTracedReference.2905" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::HTMLAnchorElement" = type { %"class.blink::HTMLElement", %"class.blink::DOMURLUtils.base", i32, i64, %"class.blink::Member.2906" }
%"class.blink::DOMURLUtils.base" = type <{ %"class.blink::DOMURLUtilsReadOnly", i8 }>
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.2906" = type { %"class.blink::MemberBase.2907" }
%"class.blink::MemberBase.2907" = type { %"class.blink::RelList"* }
%"class.blink::RelList" = type { %"class.blink::DOMTokenList.base", [7 x i8] }
%"class.blink::DOMTokenList.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SpaceSplitString", %"class.blink::Member.343", %"class.blink::QualifiedName", i8 }>
%"class.blink::TreeScopeAdopter" = type { %"class.blink::Node"*, %"class.blink::TreeScope"*, %"class.blink::TreeScope"* }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.2142", %"class.blink::Member.2917", %"struct.blink::FramePolicy", %"class.blink::Member.2933", i8, i8, [6 x i8] }>
%"class.blink::Member.2917" = type { %"class.blink::MemberBase.2918" }
%"class.blink::MemberBase.2918" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2919", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.2919" = type { %"class.std::__1::__vector_base.2920" }
%"class.std::__1::__vector_base.2920" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2928" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2921", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2921" = type { %"class.std::__1::__vector_base.2922" }
%"class.std::__1::__vector_base.2922" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2923" }
%"class.std::__1::__compressed_pair.2923" = type { %"struct.std::__1::__compressed_pair_elem.2924" }
%"struct.std::__1::__compressed_pair_elem.2924" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2928" = type { %"struct.std::__1::__compressed_pair_elem.2929" }
%"struct.std::__1::__compressed_pair_elem.2929" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2933" = type { %"class.blink::MemberBase.2934" }
%"class.blink::MemberBase.2934" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::EventPath" = type { %"class.blink::HeapVector.2937", %"class.blink::Member.318", %"class.blink::Member.2948", %"class.blink::HeapVector.2959", %"class.blink::Member.2967" }
%"class.blink::HeapVector.2937" = type { %"class.WTF::Vector.2940" }
%"class.WTF::Vector.2940" = type { %"class.WTF::VectorBuffer.2941" }
%"class.WTF::VectorBuffer.2941" = type { %"class.WTF::VectorBufferBase.2942" }
%"class.WTF::VectorBufferBase.2942" = type { %"class.blink::NodeEventContext"*, i32, i32 }
%"class.blink::NodeEventContext" = type { %"class.blink::Member.318", %"class.blink::Member.2943", %"class.blink::Member.2945" }
%"class.blink::Member.2943" = type { %"class.blink::MemberBase.2944" }
%"class.blink::MemberBase.2944" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2945" = type { %"class.blink::MemberBase.2946" }
%"class.blink::MemberBase.2946" = type { %"class.blink::TreeScopeEventContext"* }
%"class.blink::TreeScopeEventContext" = type { %"class.blink::Member.320", %"class.blink::Member.2943", %"class.blink::Member.2943", %"class.blink::Member.2971", %"class.blink::Member.2974", %"class.blink::Member.2945", %"class.blink::HeapVector.2976", i32, i32 }
%"class.blink::Member.2971" = type { %"class.blink::MemberBase.2972" }
%"class.blink::MemberBase.2972" = type { %"class.blink::HeapVector.2973"* }
%"class.blink::HeapVector.2973" = type opaque
%"class.blink::Member.2974" = type { %"class.blink::MemberBase.2975" }
%"class.blink::MemberBase.2975" = type { %"class.blink::TouchEventContext"* }
%"class.blink::TouchEventContext" = type opaque
%"class.blink::HeapVector.2976" = type { %"class.WTF::Vector.2979" }
%"class.WTF::Vector.2979" = type { %"class.WTF::VectorBuffer.2980" }
%"class.WTF::VectorBuffer.2980" = type { %"class.WTF::VectorBufferBase.2964" }
%"class.WTF::VectorBufferBase.2964" = type { %"class.blink::Member.2945"*, i32, i32 }
%"class.blink::Member.2948" = type { %"class.blink::MemberBase.2949" }
%"class.blink::MemberBase.2949" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2943", %"class.blink::Member.2943", %"class.blink::Member.2955", %"class.blink::Member.2957", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2950" }
%"class.absl::optional.2950" = type { %"class.absl::optional_internal::optional_data.2951" }
%"class.absl::optional_internal::optional_data.2951" = type { %"class.absl::optional_internal::optional_data_base.2952" }
%"class.absl::optional_internal::optional_data_base.2952" = type { %"class.absl::optional_internal::optional_data_dtor_base.2953" }
%"class.absl::optional_internal::optional_data_dtor_base.2953" = type { i8, %union.anon.2954 }
%union.anon.2954 = type { i64 }
%"class.blink::Member.2955" = type { %"class.blink::MemberBase.2956" }
%"class.blink::MemberBase.2956" = type { %"class.blink::Event"* }
%"class.blink::Member.2957" = type { %"class.blink::MemberBase.2958" }
%"class.blink::MemberBase.2958" = type { %"class.blink::EventPath"* }
%"class.blink::HeapVector.2959" = type { %"class.WTF::Vector.2962" }
%"class.WTF::Vector.2962" = type { %"class.WTF::VectorBuffer.2963" }
%"class.WTF::VectorBuffer.2963" = type { %"class.WTF::VectorBufferBase.2964", [64 x i8] }
%"class.blink::Member.2967" = type { %"class.blink::MemberBase.2968" }
%"class.blink::MemberBase.2968" = type { %"class.blink::WindowEventContext"* }
%"class.blink::WindowEventContext" = type opaque
%"class.blink::HeapVector.2982" = type { %"class.WTF::Vector.2985" }
%"class.WTF::Vector.2985" = type { %"class.WTF::VectorBuffer.2986" }
%"class.WTF::VectorBuffer.2986" = type { %"class.WTF::VectorBufferBase.2913", [128 x i8] }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.3139" }
%"class.WTF::Vector.3139" = type { %"class.WTF::VectorBuffer.3140" }
%"class.WTF::VectorBuffer.3140" = type { %"class.WTF::VectorBufferBase.3141", [64 x i8] }
%"class.WTF::VectorBufferBase.3141" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3144", %"class.blink::Member.3146", %"class.blink::Member.3148", %"class.blink::Member.3167", %"class.blink::Member.3169" }
%"class.blink::Member.3144" = type { %"class.blink::MemberBase.3145" }
%"class.blink::MemberBase.3145" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3146" = type { %"class.blink::MemberBase.3147" }
%"class.blink::MemberBase.3147" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3148" = type { %"class.blink::MemberBase.3149" }
%"class.blink::MemberBase.3149" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3152", %"class.blink::HeapHashSet.3161" }
%"class.blink::HeapVector.3152" = type { %"class.WTF::Vector.3155" }
%"class.WTF::Vector.3155" = type { %"class.WTF::VectorBuffer.3156" }
%"class.WTF::VectorBuffer.3156" = type { %"class.WTF::VectorBufferBase.3157" }
%"class.WTF::VectorBufferBase.3157" = type { %"class.blink::Member.3158"*, i32, i32 }
%"class.blink::Member.3158" = type { %"class.blink::MemberBase.3159" }
%"class.blink::MemberBase.3159" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3161" = type { %"class.WTF::HashSet.3164" }
%"class.WTF::HashSet.3164" = type { %"class.WTF::HashTable.3165" }
%"class.WTF::HashTable.3165" = type <{ %"class.blink::Member.3158"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3167" = type { %"class.blink::MemberBase.3168" }
%"class.blink::MemberBase.3168" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3169" = type { %"class.blink::MemberBase.3170" }
%"class.blink::MemberBase.3170" = type { %"class.blink::HeapHashSet.3171"* }
%"class.blink::HeapHashSet.3171" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.3180", %"class.blink::FreeList", %"class.WTF::Vector.3185" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.3180" = type { %"class.WTF::VectorBuffer.3181" }
%"class.WTF::VectorBuffer.3181" = type { %"class.WTF::VectorBufferBase.3182" }
%"class.WTF::VectorBufferBase.3182" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.3185" = type { %"class.WTF::VectorBuffer.3186" }
%"class.WTF::VectorBuffer.3186" = type { %"class.WTF::VectorBufferBase.3187" }
%"class.WTF::VectorBufferBase.3187" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.3226" = type { i8 }
%"class.blink::HeapVectorBacking.3242" = type { i8 }

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_24IdTargetObserverRegistryEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_24IdTargetObserverRegistryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_24IdTargetObserverRegistryEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19ScopedStyleResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19ScopedStyleResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19ScopedStyleResolverEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_19ScopedStyleResolverELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21SVGTreeScopeResourcesEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21SVGTreeScopeResourcesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21SVGTreeScopeResourcesEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEEaSERKS6_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_9EventPathEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_9EventPathEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_9EventPathEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_9EventPathEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_21TreeScopeEventContextEEELj8ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12DOMSelectionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9TreeScopeE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::TreeScope"*, %"class.blink::Visitor"*)* @_ZNK5blink9TreeScope5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::TreeScope"*)* @_ZN5blink9TreeScopeD2Ev to i8*), i8* bitcast (void (%"class.blink::TreeScope"*)* @_ZN5blink9TreeScopeD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [56 x i8] c"../../third_party/blink/renderer/core/dom/tree_scope.cc\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"this\00", align 1
@_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector = internal global i64 0, align 8
@__const._ZNK5blink9TreeScope17ElementsFromPointEdd.location = private unnamed_addr constant %"class.blink::HitTestLocation" <{ %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalRect" { %"struct.blink::PhysicalOffset" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } }, %"struct.blink::PhysicalSize" { %"class.blink::LayoutUnit" { i32 -1431655766 }, %"class.blink::LayoutUnit" { i32 -1431655766 } } }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatQuad" { %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.blink::FloatPoint" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, align 4
@.str.2 = private unnamed_addr constant [41 x i8] c"Can't adopt non-constructed stylesheets.\00", align 1
@.str.3 = private unnamed_addr constant [69 x i8] c"Sharing constructed stylesheets in multiple documents is not allowed\00", align 1
@_ZN5blink10html_names14kAccesskeyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink19style_change_reason14kViewportUnitsE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24IdTargetObserverRegistryEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IdTargetObserverRegistry]\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_24IdTargetObserverRegistryEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_24IdTargetObserverRegistryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.7 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ScopedStyleResolverEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScopedStyleResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19ScopedStyleResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19ScopedStyleResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19ScopedStyleResolverEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14TreeOrderedMapEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::TreeOrderedMap]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.11 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.14 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Element>, WTF::VectorTraits<blink::Member<blink::Element> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SVGTreeScopeResourcesEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGTreeScopeResources]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21SVGTreeScopeResourcesEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21SVGTreeScopeResourcesEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleSheet>, WTF::VectorTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_9TreeScopeEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<const blink::TreeScope>, WTF::VectorTraits<blink::Member<const blink::TreeScope> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9EventPathEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EventPath]\00", align 1
@_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_9EventPathEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_9EventPathEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_9EventPathEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1

@_ZN5blink9TreeScopeC1ERNS_13ContainerNodeERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::TreeScope"*, %"class.blink::ContainerNode"*, %"class.blink::Document"*), void (%"class.blink::TreeScope"*, %"class.blink::ContainerNode"*, %"class.blink::Document"*)* @_ZN5blink9TreeScopeC2ERNS_13ContainerNodeERNS_8DocumentE
@_ZN5blink9TreeScopeC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::TreeScope"*, %"class.blink::Document"*), void (%"class.blink::TreeScope"*, %"class.blink::Document"*)* @_ZN5blink9TreeScopeC2ERNS_8DocumentE
@_ZN5blink9TreeScopeD1Ev = hidden unnamed_addr alias void (%"class.blink::TreeScope"*), void (%"class.blink::TreeScope"*)* @_ZN5blink9TreeScopeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScopeC2ERNS_13ContainerNodeERNS_8DocumentE(%"class.blink::TreeScope"*, %"class.blink::ContainerNode"* dereferenceable(80), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9TreeScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ContainerNode"* %1, %"class.blink::ContainerNode"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Document"* %2, %"class.blink::Document"** %6, align 8
  %7 = icmp eq %"class.blink::Document"* %2, null
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 1
  %9 = select i1 %7, %"class.blink::TreeScope"* null, %"class.blink::TreeScope"* %8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::TreeScope"* %9, %"class.blink::TreeScope"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = bitcast %"class.blink::TreeOrderedMap"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_24IdTargetObserverRegistryEEEPhm(i64 32) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #14
  %14 = getelementptr inbounds i8, i8* %13, i64 24
  %15 = bitcast i8* %14 to %"class.blink::HeapHashSet"**
  store %"class.blink::HeapHashSet"* null, %"class.blink::HeapHashSet"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = bitcast %"class.blink::IdTargetObserverRegistry"** %20 to i8**
  store i8* %13, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 9
  %24 = bitcast %"class.blink::ScopedStyleResolver"** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink21RadioButtonGroupScopeC1Ev(%"class.blink::RadioButtonGroupScope"* %23) #14
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 10, i32 0, i32 0
  %26 = bitcast %"class.blink::SVGTreeScopeResources"** %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false)
  %27 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %5, align 8
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %27, i64 0, i32 0, i32 3
  %29 = ptrtoint %"class.blink::TreeScope"* %0 to i64
  %30 = bitcast %"class.blink::Member.320"* %28 to i64*
  store atomic i64 %29, i64* %30 monotonic, align 8
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %3
  %34 = bitcast %"class.blink::TreeScope"* %0 to i8*
  %35 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #14
  br label %36

36:                                               ; preds = %3, %33
  ret void
}

declare void @_ZN5blink21RadioButtonGroupScopeC1Ev(%"class.blink::RadioButtonGroupScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScopeC2ERNS_8DocumentE(%"class.blink::TreeScope"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink9TreeScopeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ContainerNode"* %4, %"class.blink::ContainerNode"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.blink::TreeScope"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_24IdTargetObserverRegistryEEEPhm(i64 32) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #14
  %10 = getelementptr inbounds i8, i8* %9, i64 24
  %11 = bitcast i8* %10 to %"class.blink::HeapHashSet"**
  store %"class.blink::HeapHashSet"* null, %"class.blink::HeapHashSet"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 -4
  %13 = bitcast i8* %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 6, i32 0, i32 0
  %17 = bitcast %"class.blink::IdTargetObserverRegistry"** %16 to i8**
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 9
  %20 = bitcast %"class.blink::ScopedStyleResolver"** %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  tail call void @_ZN5blink21RadioButtonGroupScopeC1Ev(%"class.blink::RadioButtonGroupScope"* %19) #14
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 10, i32 0, i32 0
  %22 = bitcast %"class.blink::SVGTreeScopeResources"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  %23 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %5, align 8
  %24 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %23, i64 0, i32 0, i32 3
  %25 = ptrtoint %"class.blink::TreeScope"* %0 to i64
  %26 = bitcast %"class.blink::Member.320"* %24 to i64*
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %2
  %30 = bitcast %"class.blink::TreeScope"* %0 to i8*
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #14
  br label %32

32:                                               ; preds = %2, %29
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink9TreeScopeD2Ev(%"class.blink::TreeScope"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScopeD0Ev(%"class.blink::TreeScope"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::TreeScope"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope14ResetTreeScopeEv(%"class.blink::TreeScope"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 8
  %3 = bitcast %"class.blink::Member.467"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9TreeScope30IsInclusiveAncestorTreeScopeOfERKS0_(%"class.blink::TreeScope"* readnone, %"class.blink::TreeScope"* readonly dereferenceable(104)) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %"class.blink::TreeScope"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %7
  %5 = phi %"class.blink::TreeScope"* [ %9, %7 ], [ %1, %2 ]
  %6 = icmp eq %"class.blink::TreeScope"* %5, %0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = icmp eq %"class.blink::TreeScope"* %9, null
  br i1 %10, label %11, label %4

11:                                               ; preds = %4, %7, %2
  %12 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %4 ]
  ret i1 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope18SetParentTreeScopeERS0_(%"class.blink::TreeScope"* nocapture, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 3
  %4 = ptrtoint %"class.blink::TreeScope"* %1 to i64
  %5 = bitcast %"class.blink::Member.320"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::TreeScope"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #14
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2
  %15 = ptrtoint %"class.blink::Document"* %13 to i64
  %16 = bitcast %"class.blink::Member.326"* %14 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.blink::Document"* %13 to i8*
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #14
  br label %22

22:                                               ; preds = %11, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::ScopedStyleResolver"* @_ZN5blink9TreeScope25EnsureScopedStyleResolverEv(%"class.blink::TreeScope"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = icmp eq %"class.blink::TreeScope"* %0, null
  br i1 %3, label %4, label %7

4:                                                ; preds = %1
  %5 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #14
  %6 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  br label %7

7:                                                ; preds = %1, %4
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7
  %9 = getelementptr inbounds %"class.blink::Member.391", %"class.blink::Member.391"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %9, align 8
  %11 = icmp eq %"class.blink::ScopedStyleResolver"* %10, null
  br i1 %11, label %12, label %29

12:                                               ; preds = %7
  %13 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolverEEEPhm(i64 104) #14
  %14 = bitcast i8* %13 to %"class.blink::TreeScope"**
  store %"class.blink::TreeScope"* %0, %"class.blink::TreeScope"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = getelementptr inbounds i8, i8* %13, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 68, i1 false) #14
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 18, i1 false) #14
  %17 = getelementptr inbounds i8, i8* %13, i64 -4
  %18 = bitcast i8* %17 to i16*
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  store atomic i16 %20, i16* %18 release, align 2
  %21 = ptrtoint i8* %13 to i64
  %22 = bitcast %"class.blink::Member.391"* %8 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  %25 = bitcast i8* %13 to %"class.blink::ScopedStyleResolver"*
  br i1 %24, label %29, label %26

26:                                               ; preds = %12
  %27 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #14
  %28 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %9, align 8
  br label %29

29:                                               ; preds = %7, %26, %12
  %30 = phi %"class.blink::ScopedStyleResolver"* [ %10, %7 ], [ %28, %26 ], [ %25, %12 ]
  ret %"class.blink::ScopedStyleResolver"* %30
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope24ClearScopedStyleResolverEv(%"class.blink::TreeScope"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.392", %"class.blink::MemberBase.392"* %2, i64 0, i32 0
  %4 = load %"class.blink::ScopedStyleResolver"*, %"class.blink::ScopedStyleResolver"** %3, align 8
  %5 = icmp eq %"class.blink::ScopedStyleResolver"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink19ScopedStyleResolver10ResetStyleEv(%"class.blink::ScopedStyleResolver"* nonnull %4) #14
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.blink::MemberBase.392"* %2 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  ret void
}

declare void @_ZN5blink19ScopedStyleResolver10ResetStyleEv(%"class.blink::ScopedStyleResolver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %11, align 8
  %13 = icmp eq %"class.blink::TreeOrderedMap"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call %"class.blink::Element"* @_ZNK5blink14TreeOrderedMap14GetElementByIdERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* nonnull %12, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::TreeScope"* dereferenceable(104) %0) #14
  br label %16

16:                                               ; preds = %10, %2, %6, %14
  %17 = phi %"class.blink::Element"* [ %15, %14 ], [ null, %6 ], [ null, %10 ], [ null, %2 ]
  ret %"class.blink::Element"* %17
}

declare %"class.blink::Element"* @_ZNK5blink14TreeOrderedMap14GetElementByIdERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.365"* @_ZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %79, !prof !2

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector) #14
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %79, label %8

8:                                                ; preds = %5
  %9 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %10 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %14 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %13, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %15

15:                                               ; preds = %12, %8
  %16 = phi i32 [ %10, %8 ], [ %14, %12 ]
  %17 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %9, i64 0, i32 19, i64 0
  %18 = bitcast %"class.blink::BaseArena"** %17 to %"class.blink::NormalPageArena"**
  %19 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %19, i64 0, i32 4
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, 24
  br i1 %22, label %53, label %23, !prof !3

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %19, i64 0, i32 3
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 24
  store i8* %26, i8** %24, align 8
  %27 = add i64 %21, -24
  store i64 %27, i64* %20, align 8
  %28 = bitcast i8* %25 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %25, i64 4
  %30 = bitcast i8* %29 to i16*
  %31 = trunc i32 %16 to i16
  %32 = shl i16 %31, 2
  store atomic i16 %32, i16* %30 monotonic, align 2
  %33 = getelementptr inbounds i8, i8* %25, i64 6
  %34 = bitcast i8* %33 to i16*
  store i16 12, i16* %34, align 2
  %35 = ptrtoint i8* %25 to i64
  %36 = and i64 %35, -131072
  %37 = inttoptr i64 %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 4400
  %39 = bitcast i8* %38 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %40 = bitcast i8* %38 to i64*
  %41 = load i64, i64* %40, align 16
  %42 = sub i64 %35, %41
  %43 = lshr i64 %42, 3
  %44 = lshr i64 %42, 6
  %45 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %39, i64 0, i32 0, i32 1, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = trunc i64 %43 to i32
  %48 = and i32 %47, 7
  %49 = shl i32 1, %48
  %50 = trunc i32 %49 to i8
  %51 = or i8 %46, %50
  store atomic i8 %51, i8* %45 release, align 1
  %52 = getelementptr inbounds i8, i8* %25, i64 8
  br label %56

53:                                               ; preds = %15
  %54 = zext i32 %16 to i64
  %55 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %19, i64 24, i64 %54) #14
  br label %56

56:                                               ; preds = %53, %23
  %57 = phi i8* [ %52, %23 ], [ %55, %53 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 -4
  %59 = bitcast i8* %58 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #14
  %60 = load atomic i16, i16* %59 monotonic, align 2
  %61 = or i16 %60, 1
  store atomic i16 %61, i16* %59 release, align 2
  store i8* %57, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector to i8**), align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  %62 = ptrtoint i8* %57 to i64
  switch i64 %62, label %63 [
    i64 0, label %78
    i64 -1, label %78
  ]

63:                                               ; preds = %56
  %64 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** bitcast (i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E, i64 0, i64 16) to %"class.blink::PersistentRegion"**), align 8
  %65 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  %67 = icmp eq %"class.blink::PersistentNode"* %66, null
  br i1 %67, label %68, label %71, !prof !3

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %64, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %69) #14
  %70 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %65, align 8
  br label %71

71:                                               ; preds = %68, %63
  %72 = phi %"class.blink::PersistentNode"* [ %70, %68 ], [ %66, %63 ]
  %73 = bitcast %"class.blink::PersistentNode"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.blink::PersistentRegion"* %64 to i64*
  store i64 %74, i64* %75, align 8
  %76 = bitcast %"class.blink::PersistentNode"* %72 to %"class.blink::PersistentBase.2901"**
  store %"class.blink::PersistentBase.2901"* bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector to %"class.blink::PersistentBase.2901"*), %"class.blink::PersistentBase.2901"** %76, align 8
  %77 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %72, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv, void (%"class.blink::Visitor"*, i8*)** %77, align 8
  store %"class.blink::PersistentNode"* %72, %"class.blink::PersistentNode"** bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector, i64 0, i32 0, i32 0, i64 8) to %"class.blink::PersistentNode"**), align 8
  br label %78

78:                                               ; preds = %56, %56, %71
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector) #14
  br label %79

79:                                               ; preds = %5, %78, %2
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %79, %83
  %88 = load %"class.blink::HeapVector.365"*, %"class.blink::HeapVector.365"** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector to %"class.blink::HeapVector.365"**), align 8
  br label %97

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4, i32 0, i32 0
  %91 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %90, align 8
  %92 = icmp eq %"class.blink::TreeOrderedMap"* %91, null
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = load %"class.blink::HeapVector.365"*, %"class.blink::HeapVector.365"** bitcast (%"class.WTF::StaticSingleton"* @_ZZNK5blink9TreeScope18GetAllElementsByIdERKN3WTF12AtomicStringEE14s_empty_vector to %"class.blink::HeapVector.365"**), align 8
  br label %97

95:                                               ; preds = %89
  %96 = tail call dereferenceable(16) %"class.blink::HeapVector.365"* @_ZNK5blink14TreeOrderedMap18GetAllElementsByIdERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* nonnull %91, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::TreeScope"* dereferenceable(104) %0) #14
  br label %97

97:                                               ; preds = %95, %93, %87
  %98 = phi %"class.blink::HeapVector.365"* [ %88, %87 ], [ %96, %95 ], [ %94, %93 ]
  ret %"class.blink::HeapVector.365"* %98
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #8

declare dereferenceable(16) %"class.blink::HeapVector.365"* @_ZNK5blink14TreeOrderedMap18GetAllElementsByIdERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope14AddElementByIdERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeScope"* nocapture, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.blink::Member.328", %"class.blink::Member.328"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %5, align 8
  %7 = icmp eq %"class.blink::TreeOrderedMap"* %6, null
  br i1 %7, label %8, label %23

8:                                                ; preds = %3
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm(i64 24) #14
  %10 = bitcast i8* %9 to %"class.blink::TreeOrderedMap"*
  tail call void @_ZN5blink14TreeOrderedMapC1Ev(%"class.blink::TreeOrderedMap"* %10) #14
  %11 = getelementptr inbounds i8, i8* %9, i64 -4
  %12 = bitcast i8* %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = or i16 %13, 1
  store atomic i16 %14, i16* %12 release, align 2
  %15 = ptrtoint i8* %9 to i64
  %16 = bitcast %"class.blink::Member.328"* %4 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %18 = icmp eq i32 %17, 0
  %19 = bitcast i8* %9 to %"class.blink::TreeOrderedMap"*
  br i1 %18, label %23, label %20

20:                                               ; preds = %8
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #14
  %22 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %5, align 8
  br label %23

23:                                               ; preds = %3, %20, %8
  %24 = phi %"class.blink::TreeOrderedMap"* [ %6, %3 ], [ %22, %20 ], [ %19, %8 ]
  tail call void @_ZN5blink14TreeOrderedMap3AddERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* %24, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Element"* dereferenceable(104) %2) #14
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %39, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::IdTargetObserverRegistry", %"class.blink::IdTargetObserverRegistry"* %26, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %34
  tail call void @_ZN5blink24IdTargetObserverRegistry23NotifyObserversInternalERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserverRegistry"* %26, %"class.WTF::AtomicString"* dereferenceable(8) %1) #14
  br label %39

39:                                               ; preds = %23, %30, %34, %38
  ret void
}

declare void @_ZN5blink14TreeOrderedMap3AddERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope17RemoveElementByIdERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeScope"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %4, align 8
  %6 = icmp eq %"class.blink::TreeOrderedMap"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %3
  tail call void @_ZN5blink14TreeOrderedMap6RemoveERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* nonnull %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Element"* dereferenceable(104) %2) #14
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %22, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::IdTargetObserverRegistry", %"class.blink::IdTargetObserverRegistry"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @_ZN5blink24IdTargetObserverRegistry23NotifyObserversInternalERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserverRegistry"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %1) #14
  br label %22

22:                                               ; preds = %3, %21, %17, %13, %7
  ret void
}

declare void @_ZN5blink14TreeOrderedMap6RemoveERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink9TreeScope19AncestorInThisScopeEPNS_4NodeE(%"class.blink::TreeScope"* readnone, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2, %14
  %5 = phi %"class.blink::Node"* [ %16, %14 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = icmp eq %"class.blink::TreeScope"* %7, %0
  br i1 %8, label %18, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 512
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  %15 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* nonnull %5) #14
  %16 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %17 = icmp eq %"class.blink::Element"* %15, null
  br i1 %17, label %18, label %4

18:                                               ; preds = %4, %14, %9, %2
  %19 = phi %"class.blink::Node"* [ null, %2 ], [ null, %9 ], [ null, %14 ], [ %5, %4 ]
  ret %"class.blink::Node"* %19
}

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope11AddImageMapERNS_14HTMLMapElementE(%"class.blink::TreeScope"* nocapture, %"class.blink::HTMLMapElement"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.blink::Member.328", %"class.blink::Member.328"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %9, align 8
  %11 = icmp eq %"class.blink::TreeOrderedMap"* %10, null
  br i1 %11, label %12, label %27

12:                                               ; preds = %7
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm(i64 24) #14
  %14 = bitcast i8* %13 to %"class.blink::TreeOrderedMap"*
  tail call void @_ZN5blink14TreeOrderedMapC1Ev(%"class.blink::TreeOrderedMap"* %14) #14
  %15 = getelementptr inbounds i8, i8* %13, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = ptrtoint i8* %13 to i64
  %20 = bitcast %"class.blink::Member.328"* %8 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  %23 = bitcast i8* %13 to %"class.blink::TreeOrderedMap"*
  br i1 %22, label %27, label %24

24:                                               ; preds = %12
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #14
  %26 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %9, align 8
  br label %27

27:                                               ; preds = %7, %24, %12
  %28 = phi %"class.blink::TreeOrderedMap"* [ %10, %7 ], [ %26, %24 ], [ %23, %12 ]
  %29 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14TreeOrderedMap3AddERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* %28, %"class.WTF::AtomicString"* dereferenceable(8) %3, %"class.blink::Element"* dereferenceable(104) %29) #14
  br label %30

30:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope14RemoveImageMapERNS_14HTMLMapElementE(%"class.blink::TreeScope"* nocapture readonly, %"class.blink::HTMLMapElement"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %3, align 8
  %5 = icmp eq %"class.blink::TreeOrderedMap"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %1, i64 0, i32 1
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::HTMLMapElement", %"class.blink::HTMLMapElement"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14TreeOrderedMap6RemoveERKN3WTF12AtomicStringERNS_7ElementE(%"class.blink::TreeOrderedMap"* nonnull %4, %"class.WTF::AtomicString"* dereferenceable(8) %7, %"class.blink::Element"* dereferenceable(104) %12) #14
  br label %13

13:                                               ; preds = %6, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLMapElement"* @_ZNK5blink9TreeScope11GetImageMapERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %113, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %8, align 8
  %10 = icmp eq %"class.blink::TreeOrderedMap"* %9, null
  br i1 %10, label %113, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  br i1 %15, label %29, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %113, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.WTF::StringImpl"* %16 to i8*
  %23 = zext i32 %19 to i64
  %24 = tail call i8* @memchr(i8* %22, i32 35, i64 %23) #16
  %25 = icmp eq i8* %24, null
  %26 = ptrtoint i8* %24 to i64
  %27 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %28 = sub i64 %26, %27
  br i1 %25, label %113, label %44

29:                                               ; preds = %11
  %30 = bitcast %"class.WTF::StringImpl"* %16 to i16*
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %113, label %34

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  br label %36

36:                                               ; preds = %34, %41
  %37 = phi i64 [ %42, %41 ], [ 0, %34 ]
  %38 = getelementptr inbounds i16, i16* %30, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %39, 35
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = add nuw nsw i64 %37, 1
  %43 = icmp eq i64 %42, %35
  br i1 %43, label %113, label %36

44:                                               ; preds = %36, %21
  %45 = phi i64 [ %28, %21 ], [ %37, %36 ]
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %113, label %48

48:                                               ; preds = %44
  %49 = add nuw i32 %46, 1
  %50 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 %49, i32 -1) #14
  %51 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %8, align 8
  %52 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %53 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %53, label %77, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 acquire, align 4
  %57 = and i32 %56, 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %75, label %59

59:                                               ; preds = %54
  %60 = load atomic i32, i32* %55 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %77

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #14
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  tail call void @llvm.trap() #14
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %77

75:                                               ; preds = %54
  %76 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %77

77:                                               ; preds = %48, %59, %73, %75
  %78 = phi %"class.WTF::StringImpl"* [ %76, %75 ], [ %50, %59 ], [ %50, %73 ], [ null, %48 ]
  %79 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %80 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %79, i64* %80, align 8
  %81 = call %"class.blink::Element"* @_ZNK5blink14TreeOrderedMap19GetElementByMapNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* %51, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::TreeScope"* dereferenceable(104) %0) #14
  %82 = bitcast %"class.blink::Element"* %81 to %"class.blink::HTMLMapElement"*
  %83 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #14
  br label %99

99:                                               ; preds = %77, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  br i1 %53, label %113, label %100

100:                                              ; preds = %99
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %113

113:                                              ; preds = %41, %29, %17, %7, %21, %112, %109, %99, %44, %2
  %114 = phi %"class.blink::HTMLMapElement"* [ null, %2 ], [ null, %7 ], [ null, %44 ], [ %82, %99 ], [ %82, %109 ], [ %82, %112 ], [ null, %17 ], [ null, %29 ], [ null, %21 ], [ null, %41 ]
  ret %"class.blink::HTMLMapElement"* %114
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink14TreeOrderedMap19GetElementByMapNameERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17HitTestInDocumentEPNS_8DocumentEddRKNS_14HitTestRequestE(%"class.blink::HitTestResult"* noalias sret, %"class.blink::Document"*, double, double, %"class.blink::HitTestRequest"* dereferenceable(16)) local_unnamed_addr #0 {
  %6 = alloca %"class.blink::DoublePoint", align 8
  %7 = alloca %"class.blink::HitTestLocation", align 4
  %8 = alloca %"class.blink::HitTestResult", align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 5, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -2
  %12 = icmp ult i32 %11, 18
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @_ZN5blink13HitTestResultC1Ev(%"class.blink::HitTestResult"* %0) #14
  br label %27

14:                                               ; preds = %5
  %15 = bitcast %"class.blink::DoublePoint"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %6, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %6, i64 0, i32 1
  store double %2, double* %16, align 8
  store double %3, double* %17, align 8
  %18 = call fastcc zeroext i1 @_ZN5blinkL28PointInFrameContentIfVisibleERNS_8DocumentERNS_11DoublePointE(%"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::DoublePoint"* nonnull dereferenceable(16) %6)
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  tail call void @_ZN5blink13HitTestResultC1Ev(%"class.blink::HitTestResult"* %0) #14
  br label %26

20:                                               ; preds = %14
  %21 = bitcast %"class.blink::HitTestLocation"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZNK5blink9TreeScope17ElementsFromPointEdd.location to i8*), i64 72, i1 false)
  call void @_ZN5blink15HitTestLocationC1ERKNS_11DoublePointE(%"class.blink::HitTestLocation"* nonnull %7, %"class.blink::DoublePoint"* nonnull dereferenceable(16) %6) #14
  %22 = bitcast %"class.blink::HitTestResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 112, i1 false)
  call void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nonnull %8, %"class.blink::HitTestRequest"* dereferenceable(16) %4, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %7) #14
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 113
  %24 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %23, align 8
  %25 = call zeroext i1 @_ZN5blink10LayoutView7HitTestERKNS_15HitTestLocationERNS_13HitTestResultE(%"class.blink::LayoutView"* %24, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %7, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %8) #14
  call void @_ZN5blink13HitTestResultC1ERKS0_(%"class.blink::HitTestResult"* %0, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %8) #14
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %22) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #14
  br label %26

26:                                               ; preds = %20, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  br label %27

27:                                               ; preds = %26, %13
  ret void
}

declare void @_ZN5blink13HitTestResultC1Ev(%"class.blink::HitTestResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL28PointInFrameContentIfVisibleERNS_8DocumentERNS_11DoublePointE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::DoublePoint"* nocapture dereferenceable(16)) unnamed_addr #0 {
  %3 = alloca %"class.blink::IntRect", align 8
  %4 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #14
  %5 = icmp eq %"class.blink::LocalFrame"* %4, null
  br i1 %5, label %69, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %4, i64 0, i32 11, i32 0, i32 0
  %8 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %7, align 8
  %9 = icmp eq %"class.blink::LocalFrameView"* %8, null
  br i1 %9, label %69, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %0, i32 11) #14
  %11 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* nonnull %8) #14
  %12 = bitcast %"class.blink::IntRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1, i32 1
  %17 = tail call { i64, i64 } @_ZNK5blink24PaintLayerScrollableArea18VisibleContentRectENS_23IncludeScrollbarsInRectE(%"class.blink::PaintLayerScrollableArea"* %11, i32 0) #14
  %18 = extractvalue { i64, i64 } %17, 1
  %19 = bitcast %"class.blink::IntRect"* %3 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::IntRect", %"class.blink::IntRect"* %3, i64 0, i32 1
  %21 = bitcast %"class.blink::IntSize"* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %4, i64 0, i32 20
  %23 = load float, float* %22, align 8
  %24 = fdiv float 1.000000e+00, %23
  call void @_ZN5blink7IntRect5ScaleEf(%"class.blink::IntRect"* nonnull %3, float %24) #14
  %25 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %1, i64 0, i32 0
  %26 = load double, double* %25, align 8
  %27 = call double @llvm.round.f64(double %26) #14
  %28 = fcmp ult double %27, 0x41DFFFFFFFC00000
  br i1 %28, label %29, label %33

29:                                               ; preds = %10
  %30 = fcmp ugt double %27, 0xC1E0000000000000
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = fptosi double %27 to i32
  br label %33

33:                                               ; preds = %31, %29, %10
  %34 = phi i32 [ %32, %31 ], [ 2147483647, %10 ], [ -2147483648, %29 ]
  %35 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %1, i64 0, i32 1
  %36 = load double, double* %35, align 8
  %37 = call double @llvm.round.f64(double %36) #14
  %38 = fcmp ult double %37, 0x41DFFFFFFFC00000
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = fcmp ugt double %37, 0xC1E0000000000000
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = fptosi double %37 to i32
  br label %43

43:                                               ; preds = %33, %39, %41
  %44 = phi i32 [ %42, %41 ], [ 2147483647, %33 ], [ -2147483648, %39 ]
  %45 = load i32, i32* %13, align 8
  %46 = icmp sgt i32 %45, %34
  br i1 %46, label %67, label %47

47:                                               ; preds = %43
  %48 = load i32, i32* %15, align 8
  %49 = add nsw i32 %48, %45
  %50 = icmp sgt i32 %49, %34
  br i1 %50, label %51, label %67

51:                                               ; preds = %47
  %52 = load i32, i32* %14, align 4
  %53 = icmp sgt i32 %52, %44
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = load i32, i32* %16, align 4
  %56 = add nsw i32 %55, %52
  %57 = icmp sgt i32 %56, %44
  br i1 %57, label %58, label %67

58:                                               ; preds = %54
  %59 = load float, float* %22, align 8
  %60 = fpext float %59 to double
  %61 = insertelement <2 x double> undef, double %26, i32 0
  %62 = insertelement <2 x double> %61, double %36, i32 1
  %63 = insertelement <2 x double> undef, double %60, i32 0
  %64 = shufflevector <2 x double> %63, <2 x double> undef, <2 x i32> zeroinitializer
  %65 = fmul <2 x double> %62, %64
  %66 = bitcast %"class.blink::DoublePoint"* %1 to <2 x double>*
  store <2 x double> %65, <2 x double>* %66, align 8
  br label %67

67:                                               ; preds = %43, %47, %51, %54, %58
  %68 = phi i1 [ true, %58 ], [ false, %54 ], [ false, %51 ], [ false, %47 ], [ false, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  br label %69

69:                                               ; preds = %67, %6, %2
  %70 = phi i1 [ false, %2 ], [ %68, %67 ], [ false, %6 ]
  ret i1 %70
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN5blink15HitTestLocationC1ERKNS_11DoublePointE(%"class.blink::HitTestLocation"*, %"class.blink::DoublePoint"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"*, %"class.blink::HitTestRequest"* dereferenceable(16), %"class.blink::HitTestLocation"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZN5blink10LayoutView7HitTestERKNS_15HitTestLocationERNS_13HitTestResultE(%"class.blink::LayoutView"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"class.blink::HitTestResult"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN5blink13HitTestResultC1ERKS0_(%"class.blink::HitTestResult"*, %"class.blink::HitTestResult"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope16ElementFromPointEdd(%"class.blink::TreeScope"*, double, double) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HitTestRequest", align 8
  %5 = bitcast %"class.blink::HitTestRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %4, i64 0, i32 0
  store i32 6, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %4, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %7, align 8
  %8 = call %"class.blink::Element"* @_ZNK5blink9TreeScope12HitTestPointEddRKNS_14HitTestRequestE(%"class.blink::TreeScope"* %0, double %1, double %2, %"class.blink::HitTestRequest"* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret %"class.blink::Element"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope12HitTestPointEddRKNS_14HitTestRequestE(%"class.blink::TreeScope"*, double, double, %"class.blink::HitTestRequest"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HitTestResult", align 8
  %6 = bitcast %"class.blink::HitTestResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false)
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %8, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  call void @_ZN5blink17HitTestInDocumentEPNS_8DocumentEddRKNS_14HitTestRequestE(%"class.blink::HitTestResult"* nonnull sret %5, %"class.blink::Document"* %12, double %1, double %2, %"class.blink::HitTestRequest"* dereferenceable(16) %3)
  %13 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 256
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %5, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %16, label %44, label %20

20:                                               ; preds = %4
  br i1 %19, label %73, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 0, i32 0
  %27 = icmp eq %"class.blink::Node"* %26, %18
  br i1 %27, label %73, label %28

28:                                               ; preds = %21
  %29 = bitcast %"class.blink::Node"* %18 to i8 (%"class.blink::Node"*)***
  %30 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %29, align 8
  %31 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %30, i64 34
  %32 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %31, align 8
  %33 = call zeroext i8 %32(%"class.blink::Node"* nonnull %18) #14
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %40

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 12
  %39 = icmp eq i32 %38, 4
  br i1 %39, label %40, label %42

40:                                               ; preds = %35, %28
  %41 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* nonnull %18) #14
  br label %73

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::Node"* %18 to %"class.blink::Element"*
  br label %73

44:                                               ; preds = %4
  br i1 %19, label %73, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %49, i64 0, i32 0, i32 0
  %51 = icmp eq %"class.blink::Node"* %50, %18
  br i1 %51, label %73, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.blink::Node"* %18 to i8 (%"class.blink::Node"*)***
  %54 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %53, align 8
  %55 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %54, i64 34
  %56 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %55, align 8
  %57 = call zeroext i8 %56(%"class.blink::Node"* nonnull %18) #14
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 12
  %63 = icmp eq i32 %62, 4
  br i1 %63, label %64, label %66

64:                                               ; preds = %59, %52
  %65 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* nonnull %18) #14
  br label %68

66:                                               ; preds = %59
  %67 = bitcast %"class.blink::Node"* %18 to %"class.blink::Element"*
  br label %68

68:                                               ; preds = %66, %64
  %69 = phi %"class.blink::Element"* [ %65, %64 ], [ %67, %66 ]
  %70 = icmp eq %"class.blink::Element"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %68
  %72 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink9TreeScope8RetargetERKNS_7ElementE(%"class.blink::TreeScope"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %69) #14
  br label %73

73:                                               ; preds = %40, %42, %71, %68, %45, %44, %21, %20
  %74 = phi %"class.blink::Element"* [ null, %20 ], [ null, %21 ], [ null, %44 ], [ null, %45 ], [ %72, %71 ], [ null, %68 ], [ %41, %40 ], [ %43, %42 ]
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #14
  ret %"class.blink::Element"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope20HitTestPointInternalEPNS_4NodeENS0_16HitTestPointTypeE(%"class.blink::TreeScope"*, %"class.blink::Node"*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 0, i32 0
  %11 = icmp eq %"class.blink::Node"* %10, %1
  br i1 %11, label %35, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::Node"* %1 to i8 (%"class.blink::Node"*)***
  %14 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %13, align 8
  %15 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %14, i64 34
  %16 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %15, align 8
  %17 = tail call zeroext i8 %16(%"class.blink::Node"* nonnull %1) #14
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 4
  br i1 %23, label %24, label %26

24:                                               ; preds = %12, %19
  %25 = tail call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* nonnull %1) #14
  br label %28

26:                                               ; preds = %19
  %27 = bitcast %"class.blink::Node"* %1 to %"class.blink::Element"*
  br label %28

28:                                               ; preds = %26, %24
  %29 = phi %"class.blink::Element"* [ %25, %24 ], [ %27, %26 ]
  %30 = icmp eq %"class.blink::Element"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = icmp eq i32 %2, 4
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = tail call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink9TreeScope8RetargetERKNS_7ElementE(%"class.blink::TreeScope"* %0, %"class.blink::Element"* nonnull dereferenceable(104) %29)
  br label %35

35:                                               ; preds = %33, %28, %31, %5, %3
  %36 = phi %"class.blink::Element"* [ null, %3 ], [ null, %5 ], [ %34, %33 ], [ null, %28 ], [ %29, %31 ]
  ret %"class.blink::Element"* %36
}

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZNK5blink9TreeScope8RetargetERKNS_7ElementE(%"class.blink::TreeScope"*, %"class.blink::Element"* readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.2908", align 8
  %4 = alloca %"class.blink::HeapVector.2908", align 8
  %5 = alloca %"class.blink::TreeScope"*, align 8
  %6 = alloca %"class.blink::TreeScope"*, align 8
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 12
  %14 = icmp eq i32 %13, 8
  br i1 %14, label %15, label %127

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %18, align 8
  %20 = icmp eq %"class.blink::ContainerNode"* %19, %10
  br i1 %20, label %21, label %127

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::HeapVector.2908"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 16, i1 false) #14
  %26 = bitcast %"class.blink::HeapVector.2908"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #14
  %30 = bitcast %"class.blink::TreeScope"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  store %"class.blink::TreeScope"* %8, %"class.blink::TreeScope"** %5, align 8
  %31 = icmp eq %"class.blink::TreeScope"* %8, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %21
  %33 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %3, i64 0, i32 0
  br label %39

34:                                               ; preds = %59, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  %35 = bitcast %"class.blink::TreeScope"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  store %"class.blink::TreeScope"* %0, %"class.blink::TreeScope"** %6, align 8
  %36 = icmp eq %"class.blink::TreeScope"* %0, null
  br i1 %36, label %67, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::HeapVector.2908", %"class.blink::HeapVector.2908"* %4, i64 0, i32 0
  br label %76

39:                                               ; preds = %64, %32
  %40 = phi %"class.blink::TreeScope"* [ %62, %64 ], [ %8, %32 ]
  %41 = phi i32 [ %66, %64 ], [ 0, %32 ]
  %42 = phi i32 [ %65, %64 ], [ 0, %32 ]
  %43 = icmp eq i32 %42, %41
  br i1 %43, label %58, label %44, !prof !3

44:                                               ; preds = %39
  %45 = ptrtoint %"class.blink::TreeScope"* %40 to i64
  %46 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %23, align 8
  %47 = zext i32 %42 to i64
  %48 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %46, i64 %47
  %49 = bitcast %"class.blink::Member.312"* %48 to i64*
  store atomic i64 %45, i64* %49 monotonic, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %44
  %53 = bitcast %"class.blink::TreeScope"* %40 to i8*
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #14
  br label %55

55:                                               ; preds = %52, %44
  %56 = load i32, i32* %25, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %25, align 4
  br label %59

58:                                               ; preds = %39
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2911"* nonnull %33, %"class.blink::TreeScope"** nonnull dereferenceable(8) %5) #14
  br label %59

59:                                               ; preds = %55, %58
  %60 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %61 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %60, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %61, align 8
  store %"class.blink::TreeScope"* %62, %"class.blink::TreeScope"** %5, align 8
  %63 = icmp eq %"class.blink::TreeScope"* %62, null
  br i1 %63, label %34, label %64

64:                                               ; preds = %59
  %65 = load i32, i32* %25, align 4
  %66 = load i32, i32* %24, align 8
  br label %39

67:                                               ; preds = %96, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  %68 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %23, align 8
  %69 = load i32, i32* %25, align 4
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %68, i64 %70
  %72 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %27, align 8
  %73 = load i32, i32* %29, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %72, i64 %74
  br label %101

76:                                               ; preds = %37, %96
  %77 = phi %"class.blink::TreeScope"* [ %0, %37 ], [ %99, %96 ]
  %78 = load i32, i32* %29, align 4
  %79 = load i32, i32* %28, align 8
  %80 = icmp eq i32 %78, %79
  br i1 %80, label %95, label %81, !prof !3

81:                                               ; preds = %76
  %82 = ptrtoint %"class.blink::TreeScope"* %77 to i64
  %83 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %27, align 8
  %84 = zext i32 %78 to i64
  %85 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %83, i64 %84
  %86 = bitcast %"class.blink::Member.312"* %85 to i64*
  store atomic i64 %82, i64* %86 monotonic, align 8
  %87 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %92, label %89

89:                                               ; preds = %81
  %90 = bitcast %"class.blink::TreeScope"* %77 to i8*
  %91 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %90) #14
  br label %92

92:                                               ; preds = %89, %81
  %93 = load i32, i32* %29, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %29, align 4
  br label %96

95:                                               ; preds = %76
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2911"* nonnull %38, %"class.blink::TreeScope"** nonnull dereferenceable(8) %6) #14
  br label %96

96:                                               ; preds = %92, %95
  %97 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %98 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %97, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  store %"class.blink::TreeScope"* %99, %"class.blink::TreeScope"** %6, align 8
  %100 = icmp eq %"class.blink::TreeScope"* %99, null
  br i1 %100, label %67, label %76

101:                                              ; preds = %107, %67
  %102 = phi %"class.blink::Member.312"* [ %75, %67 ], [ %108, %107 ]
  %103 = phi %"class.blink::Member.312"* [ %71, %67 ], [ %109, %107 ]
  %104 = icmp eq %"class.blink::Member.312"* %102, %72
  %105 = icmp eq %"class.blink::Member.312"* %103, %68
  %106 = or i1 %104, %105
  br i1 %106, label %115, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %102, i64 -1
  %109 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %103, i64 -1
  %110 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %108, i64 0, i32 0, i32 0
  %111 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %109, i64 0, i32 0, i32 0
  %113 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %112, align 8
  %114 = icmp eq %"class.blink::TreeScope"* %111, %113
  br i1 %114, label %101, label %115

115:                                              ; preds = %101, %107
  br i1 %105, label %125, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %103, i64 -1, i32 0, i32 0
  %118 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %118, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"class.blink::ContainerNode"** %119 to %"class.blink::ShadowRoot"**
  %121 = load %"class.blink::ShadowRoot"*, %"class.blink::ShadowRoot"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %121, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %123 = bitcast %"class.blink::Node"** %122 to %"class.blink::Element"**
  %124 = load %"class.blink::Element"*, %"class.blink::Element"** %123, align 8
  br label %125

125:                                              ; preds = %115, %116
  %126 = phi %"class.blink::Element"* [ %124, %116 ], [ %1, %115 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #14
  br label %127

127:                                              ; preds = %2, %15, %125
  %128 = phi %"class.blink::Element"* [ %126, %125 ], [ %1, %15 ], [ %1, %2 ]
  ret %"class.blink::Element"* %128
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9TreeScope25ElementsFromHitTestResultERNS_13HitTestResultE(%"class.blink::HeapVector.365"* noalias sret, %"class.blink::TreeScope"*, %"class.blink::HitTestResult"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Element"*, align 8
  %5 = alloca %"class.blink::Element"*, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.blink::HeapVector.365"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #14
  %10 = tail call dereferenceable(48) %"class.blink::HeapLinkedHashSet.2123"* @_ZNK5blink13HitTestResult19ListBasedTestResultEv(%"class.blink::HitTestResult"* %2) #14
  %11 = getelementptr inbounds %"class.blink::HeapLinkedHashSet.2123", %"class.blink::HeapLinkedHashSet.2123"* %10, i64 0, i32 0, i32 1, i32 0
  %12 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.2896"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2893"* %11, i32 0) #14, !noalias !4
  %13 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.2896", %"class.WTF::VectorBackedLinkedListNode.2896"* %12, i64 0, i32 1
  %14 = load i32, i32* %13, align 4, !noalias !4
  %15 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.2896"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2893"* %11, i32 %14) #14, !noalias !4
  %16 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.2896"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2893"* %11, i32 0) #14, !noalias !7
  %17 = icmp eq %"class.WTF::VectorBackedLinkedListNode.2896"* %15, %16
  br i1 %17, label %23, label %18

18:                                               ; preds = %3
  %19 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %20 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.blink::Element"** %4 to i8*
  %22 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %0, i64 0, i32 0
  br label %30

23:                                               ; preds = %126, %3
  %24 = bitcast %"class.blink::Element"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 47, i32 0, i32 0
  %28 = load %"class.blink::Element"*, %"class.blink::Element"** %27, align 8
  store %"class.blink::Element"* %28, %"class.blink::Element"** %5, align 8
  %29 = icmp eq %"class.blink::Element"* %28, null
  br i1 %29, label %165, label %132

30:                                               ; preds = %18, %126
  %31 = phi %"class.blink::Node"* [ null, %18 ], [ %127, %126 ]
  %32 = phi %"class.WTF::VectorBackedLinkedListNode.2896"* [ %15, %18 ], [ %130, %126 ]
  %33 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.2896", %"class.WTF::VectorBackedLinkedListNode.2896"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 12
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %30
  %40 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %34) #14
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %40, i64 0, i32 0
  %42 = icmp eq %"class.blink::ContainerNode"* %40, null
  br i1 %42, label %126, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %40, i64 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  switch i32 %46, label %126 [
    i32 0, label %47
    i32 32, label %57
  ]

47:                                               ; preds = %43
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br i1 %56, label %64, label %126

57:                                               ; preds = %43
  %58 = bitcast %"class.blink::ContainerNode"* %40 to %"class.blink::SVGElement"*
  %59 = bitcast %"class.blink::ContainerNode"* %40 to i1 (%"class.blink::SVGElement"*)***
  %60 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %60, i64 159
  %62 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %61, align 8
  %63 = call zeroext i1 %62(%"class.blink::SVGElement"* nonnull %58) #14
  br i1 %63, label %64, label %126

64:                                               ; preds = %47, %57, %30
  %65 = icmp eq %"class.blink::Node"* %34, null
  br i1 %65, label %93, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %70, i64 0, i32 0, i32 0
  %72 = icmp eq %"class.blink::Node"* %71, %34
  br i1 %72, label %93, label %73

73:                                               ; preds = %66
  %74 = bitcast %"class.blink::Node"* %34 to i8 (%"class.blink::Node"*)***
  %75 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %74, align 8
  %76 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %75, i64 34
  %77 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %76, align 8
  %78 = call zeroext i8 %77(%"class.blink::Node"* nonnull %34) #14
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %73
  %81 = load i32, i32* %35, align 8
  %82 = and i32 %81, 12
  %83 = icmp eq i32 %82, 4
  br i1 %83, label %84, label %86

84:                                               ; preds = %80, %73
  %85 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* nonnull %34) #14
  br label %88

86:                                               ; preds = %80
  %87 = bitcast %"class.blink::Node"* %34 to %"class.blink::Element"*
  br label %88

88:                                               ; preds = %86, %84
  %89 = phi %"class.blink::Element"* [ %85, %84 ], [ %87, %86 ]
  %90 = icmp eq %"class.blink::Element"* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink9TreeScope8RetargetERKNS_7ElementE(%"class.blink::TreeScope"* %1, %"class.blink::Element"* nonnull dereferenceable(104) %89) #14
  br label %93

93:                                               ; preds = %64, %66, %88, %91
  %94 = phi %"class.blink::Element"* [ null, %64 ], [ null, %66 ], [ %92, %91 ], [ null, %88 ]
  %95 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %94, i64 0, i32 0, i32 0
  %96 = icmp eq %"class.blink::Node"* %95, %31
  br i1 %96, label %126, label %97

97:                                               ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  store %"class.blink::Element"* inttoptr (i64 -6148914691236517206 to %"class.blink::Element"*), %"class.blink::Element"** %4, align 8
  %98 = icmp eq %"class.blink::Element"* %94, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %97
  %100 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %94, i64 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = and i32 %101, 12
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %99, %97
  store %"class.blink::Element"* null, %"class.blink::Element"** %4, align 8
  br label %124

105:                                              ; preds = %99
  store %"class.blink::Element"* %94, %"class.blink::Element"** %4, align 8
  %106 = load i32, i32* %8, align 4
  %107 = load i32, i32* %7, align 8
  %108 = icmp eq i32 %106, %107
  br i1 %108, label %123, label %109, !prof !3

109:                                              ; preds = %105
  %110 = ptrtoint %"class.blink::Element"* %94 to i64
  %111 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  %112 = zext i32 %106 to i64
  %113 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %111, i64 %112
  %114 = bitcast %"class.blink::Member.343"* %113 to i64*
  store atomic i64 %110, i64* %114 monotonic, align 8
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %109
  %118 = bitcast %"class.blink::Element"* %94 to i8*
  %119 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %118) #14
  br label %120

120:                                              ; preds = %117, %109
  %121 = load i32, i32* %8, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %8, align 4
  br label %124

123:                                              ; preds = %105
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.368"* %22, %"class.blink::Element"** nonnull dereferenceable(8) %4) #14
  br label %124

124:                                              ; preds = %123, %120, %104
  %125 = phi %"class.blink::Node"* [ %31, %104 ], [ %95, %120 ], [ %95, %123 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %126

126:                                              ; preds = %43, %39, %47, %93, %57, %124
  %127 = phi %"class.blink::Node"* [ %125, %124 ], [ %31, %57 ], [ %31, %93 ], [ %31, %47 ], [ %31, %39 ], [ %31, %43 ]
  %128 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.2896", %"class.WTF::VectorBackedLinkedListNode.2896"* %32, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.2896"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2893"* %11, i32 %129) #14
  %131 = icmp eq %"class.WTF::VectorBackedLinkedListNode.2896"* %130, %16
  br i1 %131, label %23, label %30

132:                                              ; preds = %23
  %133 = getelementptr inbounds %"class.blink::HeapVector.365", %"class.blink::HeapVector.365"* %0, i64 0, i32 0
  %134 = load i32, i32* %8, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %145, label %136

136:                                              ; preds = %132
  %137 = add i32 %134, -1
  %138 = call dereferenceable(8) %"class.blink::Member.343"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"* %133, i32 %137) #14
  %139 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %138, i64 0, i32 0, i32 0
  %140 = load %"class.blink::Element"*, %"class.blink::Element"** %139, align 8
  %141 = load %"class.blink::Element"*, %"class.blink::Element"** %5, align 8
  %142 = icmp eq %"class.blink::Element"* %140, %141
  br i1 %142, label %165, label %143

143:                                              ; preds = %136
  %144 = load i32, i32* %8, align 4
  br label %145

145:                                              ; preds = %143, %132
  %146 = phi %"class.blink::Element"* [ %141, %143 ], [ %28, %132 ]
  %147 = phi i32 [ %144, %143 ], [ 0, %132 ]
  %148 = load i32, i32* %7, align 8
  %149 = icmp eq i32 %147, %148
  br i1 %149, label %164, label %150, !prof !3

150:                                              ; preds = %145
  %151 = ptrtoint %"class.blink::Element"* %146 to i64
  %152 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %6, align 8
  %153 = zext i32 %147 to i64
  %154 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %152, i64 %153
  %155 = bitcast %"class.blink::Member.343"* %154 to i64*
  store atomic i64 %151, i64* %155 monotonic, align 8
  %156 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %161, label %158

158:                                              ; preds = %150
  %159 = bitcast %"class.blink::Element"* %146 to i8*
  %160 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %159) #14
  br label %161

161:                                              ; preds = %158, %150
  %162 = load i32, i32* %8, align 4
  %163 = add i32 %162, 1
  store i32 %163, i32* %8, align 4
  br label %165

164:                                              ; preds = %145
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.368"* %133, %"class.blink::Element"** nonnull dereferenceable(8) %5) #14
  br label %165

165:                                              ; preds = %164, %161, %136, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  ret void
}

declare dereferenceable(48) %"class.blink::HeapLinkedHashSet.2123"* @_ZNK5blink13HitTestResult19ListBasedTestResultEv(%"class.blink::HitTestResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9TreeScope17ElementsFromPointEdd(%"class.blink::HeapVector.365"* noalias sret, %"class.blink::TreeScope"*, double, double) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::DoublePoint", align 8
  %6 = alloca %"class.blink::HitTestLocation", align 4
  %7 = alloca %"class.blink::HitTestRequest", align 8
  %8 = alloca %"class.blink::HitTestResult", align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %13, align 8
  %15 = bitcast %"class.blink::DoublePoint"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::DoublePoint", %"class.blink::DoublePoint"* %5, i64 0, i32 1
  store double %2, double* %16, align 8
  store double %3, double* %17, align 8
  %18 = call fastcc zeroext i1 @_ZN5blinkL28PointInFrameContentIfVisibleERNS_8DocumentERNS_11DoublePointE(%"class.blink::Document"* dereferenceable(2848) %14, %"class.blink::DoublePoint"* nonnull dereferenceable(16) %5)
  br i1 %18, label %21, label %19

19:                                               ; preds = %4
  %20 = bitcast %"class.blink::HeapVector.365"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %31

21:                                               ; preds = %4
  %22 = bitcast %"class.blink::HitTestLocation"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %22) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast (%"class.blink::HitTestLocation"* @__const._ZNK5blink9TreeScope17ElementsFromPointEdd.location to i8*), i64 72, i1 false)
  call void @_ZN5blink15HitTestLocationC1ERKNS_11DoublePointE(%"class.blink::HitTestLocation"* nonnull %6, %"class.blink::DoublePoint"* nonnull dereferenceable(16) %5) #14
  %23 = bitcast %"class.blink::HitTestRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = bitcast %"class.blink::HitTestRequest"* %7 to i64*
  store i64 -6148914691236517206, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %7, i64 0, i32 0
  store i32 12294, i32* %25, align 8
  %26 = getelementptr inbounds %"class.blink::HitTestRequest", %"class.blink::HitTestRequest"* %7, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %26, align 8
  %27 = bitcast %"class.blink::HitTestResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %27) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 112, i1 false)
  call void @_ZN5blink13HitTestResultC1ERKNS_14HitTestRequestERKNS_15HitTestLocationE(%"class.blink::HitTestResult"* nonnull %8, %"class.blink::HitTestRequest"* nonnull dereferenceable(16) %7, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %6) #14
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %14, i64 0, i32 113
  %29 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %28, align 8
  %30 = call zeroext i1 @_ZN5blink10LayoutView7HitTestERKNS_15HitTestLocationERNS_13HitTestResultE(%"class.blink::LayoutView"* %29, %"class.blink::HitTestLocation"* nonnull dereferenceable(72) %6, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %8) #14
  call void @_ZNK5blink9TreeScope25ElementsFromHitTestResultERNS_13HitTestResultE(%"class.blink::HeapVector.365"* sret %0, %"class.blink::TreeScope"* %1, %"class.blink::HitTestResult"* nonnull dereferenceable(112) %8)
  call void @_ZN5blink13HitTestResultD1Ev(%"class.blink::HitTestResult"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %22) #14
  br label %31

31:                                               ; preds = %21, %19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %"class.blink::SVGTreeScopeResources"* @_ZN5blink9TreeScope28EnsureSVGTreeScopedResourcesEv(%"class.blink::TreeScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 10
  %3 = getelementptr inbounds %"class.blink::Member.472", %"class.blink::Member.472"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::SVGTreeScopeResources"*, %"class.blink::SVGTreeScopeResources"** %3, align 8
  %5 = icmp eq %"class.blink::SVGTreeScopeResources"* %4, null
  br i1 %5, label %6, label %21

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21SVGTreeScopeResourcesEEEPhm(i64 32) #14
  %8 = bitcast i8* %7 to %"class.blink::SVGTreeScopeResources"*
  tail call void @_ZN5blink21SVGTreeScopeResourcesC1EPNS_9TreeScopeE(%"class.blink::SVGTreeScopeResources"* %8, %"class.blink::TreeScope"* %0) #14
  %9 = getelementptr inbounds i8, i8* %7, i64 -4
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = or i16 %11, 1
  store atomic i16 %12, i16* %10 release, align 2
  %13 = ptrtoint i8* %7 to i64
  %14 = bitcast %"class.blink::Member.472"* %2 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  %17 = bitcast i8* %7 to %"class.blink::SVGTreeScopeResources"*
  br i1 %16, label %21, label %18

18:                                               ; preds = %6
  %19 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %7) #14
  %20 = load %"class.blink::SVGTreeScopeResources"*, %"class.blink::SVGTreeScopeResources"** %3, align 8
  br label %21

21:                                               ; preds = %1, %18, %6
  %22 = phi %"class.blink::SVGTreeScopeResources"* [ %4, %1 ], [ %20, %18 ], [ %17, %6 ]
  ret %"class.blink::SVGTreeScopeResources"* %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9TreeScope21HasAdoptedStyleSheetsEv(%"class.blink::TreeScope"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.395"* @_ZN5blink9TreeScope18AdoptedStyleSheetsEv(%"class.blink::TreeScope"* readnone) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 11
  ret %"class.blink::HeapVector.395"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope21SetAdoptedStyleSheetsERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEERNS_14ExceptionStateE(%"class.blink::TreeScope"*, %"class.blink::HeapVector.395"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  br i1 %11, label %13, label %17

13:                                               ; preds = %3
  %14 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  br label %30

15:                                               ; preds = %25
  %16 = icmp eq %"class.blink::Member.401"* %28, %10
  br i1 %16, label %30, label %17

17:                                               ; preds = %3, %15
  %18 = phi %"class.blink::Member.401"* [ %28, %15 ], [ %6, %3 ]
  %19 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %20, i64 0, i32 14, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = icmp eq %"class.blink::Document"* %22, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %17
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0)) #14
  br label %37

25:                                               ; preds = %17
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %27 = icmp eq %"class.blink::Document"* %22, %26
  %28 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %18, i64 1
  br i1 %27, label %15, label %29

29:                                               ; preds = %25
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %2, i32 35, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3, i64 0, i64 0)) #14
  br label %37

30:                                               ; preds = %15, %13
  %31 = phi %"class.blink::Document"* [ %14, %13 ], [ %22, %15 ]
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 59, i32 0, i32 0
  %33 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 11
  tail call void @_ZN5blink11StyleEngine28AdoptedStyleSheetsWillChangeERNS_9TreeScopeERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEES9_(%"class.blink::StyleEngine"* %33, %"class.blink::TreeScope"* dereferenceable(104) %0, %"class.blink::HeapVector.395"* dereferenceable(16) %34, %"class.blink::HeapVector.395"* dereferenceable(16) %1) #14
  %35 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %34, i64 0, i32 0
  %36 = tail call dereferenceable(16) %"class.WTF::Vector.398"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.398"* %35, %"class.WTF::Vector.398"* dereferenceable(16) %4) #14
  br label %37

37:                                               ; preds = %24, %29, %30
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope21SetAdoptedStyleSheetsERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::TreeScope"*, %"class.blink::HeapVector.395"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 59, i32 0, i32 0
  %6 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 11
  tail call void @_ZN5blink11StyleEngine28AdoptedStyleSheetsWillChangeERNS_9TreeScopeERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEES9_(%"class.blink::StyleEngine"* %6, %"class.blink::TreeScope"* dereferenceable(104) %0, %"class.blink::HeapVector.395"* dereferenceable(16) %7, %"class.blink::HeapVector.395"* dereferenceable(16) %1) #14
  %8 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %7, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapVector.395", %"class.blink::HeapVector.395"* %1, i64 0, i32 0
  %10 = tail call dereferenceable(16) %"class.WTF::Vector.398"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.398"* %8, %"class.WTF::Vector.398"* dereferenceable(16) %9) #14
  ret void
}

declare void @_ZN5blink11StyleEngine28AdoptedStyleSheetsWillChangeERNS_9TreeScopeERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEES9_(%"class.blink::StyleEngine"*, %"class.blink::TreeScope"* dereferenceable(104), %"class.blink::HeapVector.395"* dereferenceable(16), %"class.blink::HeapVector.395"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DOMSelection"* @_ZNK5blink9TreeScope12GetSelectionEv(%"class.blink::TreeScope"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #14
  %9 = icmp eq %"class.blink::LocalFrame"* %8, null
  br i1 %9, label %30, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.blink::Member.467", %"class.blink::Member.467"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %12, align 8
  %14 = icmp eq %"class.blink::DOMSelection"* %13, null
  br i1 %14, label %15, label %30

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #14
  %17 = bitcast i8* %16 to %"class.blink::DOMSelection"*
  tail call void @_ZN5blink12DOMSelectionC1EPKNS_9TreeScopeE(%"class.blink::DOMSelection"* %17, %"class.blink::TreeScope"* %0) #14
  %18 = getelementptr inbounds i8, i8* %16, i64 -4
  %19 = bitcast i8* %18 to i16*
  %20 = load atomic i16, i16* %19 monotonic, align 2
  %21 = or i16 %20, 1
  store atomic i16 %21, i16* %19 release, align 2
  %22 = ptrtoint i8* %16 to i64
  %23 = bitcast %"class.blink::Member.467"* %11 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  %26 = bitcast i8* %16 to %"class.blink::DOMSelection"*
  br i1 %25, label %30, label %27

27:                                               ; preds = %15
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #14
  %29 = load %"class.blink::DOMSelection"*, %"class.blink::DOMSelection"** %12, align 8
  br label %30

30:                                               ; preds = %27, %15, %10, %1
  %31 = phi %"class.blink::DOMSelection"* [ null, %1 ], [ %13, %10 ], [ %26, %15 ], [ %29, %27 ]
  ret %"class.blink::DOMSelection"* %31
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZN5blink9TreeScope18FindAnchorWithNameERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %244, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %244, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 acquire, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %39, label %19

19:                                               ; preds = %13
  %20 = load atomic i32, i32* %15 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #14
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %23
  tail call void @llvm.trap() #14
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %19, %33
  %36 = ptrtoint %"class.WTF::StringImpl"* %7 to i64
  %37 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  br label %46

39:                                               ; preds = %13
  %40 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %7) #14
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %42 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %44 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %44, label %45, label %46

45:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  br label %78

46:                                               ; preds = %35, %39
  %47 = phi %"class.WTF::StringImpl"** [ %38, %35 ], [ %43, %39 ]
  %48 = phi %"class.WTF::StringImpl"* [ %7, %35 ], [ %40, %39 ]
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %53, align 8
  %55 = icmp eq %"class.blink::TreeOrderedMap"* %54, null
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = call %"class.blink::Element"* @_ZNK5blink14TreeOrderedMap14GetElementByIdERKN3WTF12AtomicStringERKNS_9TreeScopeE(%"class.blink::TreeOrderedMap"* nonnull %54, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3, %"class.blink::TreeScope"* dereferenceable(104) %0) #14
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %46, %52, %56
  %61 = phi %"class.blink::Element"* [ %57, %56 ], [ null, %52 ], [ null, %46 ]
  %62 = phi %"class.WTF::StringImpl"* [ %58, %56 ], [ %48, %52 ], [ %48, %46 ]
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %60
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %60
  %72 = phi i32 [ %70, %69 ], [ %68, %60 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #14
  br label %75

75:                                               ; preds = %56, %71, %74
  %76 = phi %"class.blink::Element"* [ %57, %56 ], [ %61, %71 ], [ %61, %74 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %77 = icmp eq %"class.blink::Element"* %76, null
  br i1 %77, label %78, label %244

78:                                               ; preds = %45, %75
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %80, i64 0, i32 0
  %82 = icmp eq %"class.blink::ContainerNode"* %80, null
  br i1 %82, label %93, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %80, i64 0, i32 0, i32 1
  %85 = load i32, i32* %84, align 8
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 1
  %90 = bitcast %"class.blink::Node"* %89 to %"class.blink::Node"**
  %91 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %92 = icmp eq %"class.blink::Node"* %91, null
  br i1 %92, label %93, label %100

93:                                               ; preds = %88, %83, %78
  %94 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %80, i64 0, i32 0, i32 5, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %97, label %100

97:                                               ; preds = %93
  %98 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %81) #14
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %244, label %100

100:                                              ; preds = %97, %93, %88
  %101 = phi %"class.blink::Node"* [ %98, %97 ], [ %91, %88 ], [ %95, %93 ]
  %102 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %102, i64 0, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %134, %100
  %105 = phi %"class.blink::Node"* [ %101, %100 ], [ %135, %134 ]
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 48
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %120

110:                                              ; preds = %104
  %111 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 1, i32 2
  %113 = bitcast %"class.blink::Member.318"* %112 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %114 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %114, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %111, i64 0, i32 3, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %116, %118
  br i1 %119, label %137, label %120

120:                                              ; preds = %110, %104
  %121 = and i32 %107, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %128, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 1
  %125 = bitcast %"class.blink::Node"* %124 to %"class.blink::Node"**
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %128, label %134

128:                                              ; preds = %123, %120
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 5, i32 0, i32 0
  %130 = load %"class.blink::Node"*, %"class.blink::Node"** %129, align 8
  %131 = icmp eq %"class.blink::Node"* %130, null
  br i1 %131, label %132, label %134

132:                                              ; preds = %128
  %133 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %105) #14
  br label %134

134:                                              ; preds = %132, %128, %123
  %135 = phi %"class.blink::Node"* [ %133, %132 ], [ %130, %128 ], [ %126, %123 ]
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %244, label %104

137:                                              ; preds = %110
  %138 = bitcast %"class.WTF::StringView"* %4 to i8*
  %139 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %140 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %141 = bitcast i8** %140 to %"class.WTF::StringImpl"**
  %142 = bitcast %"class.WTF::StringView"* %4 to i64*
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %144 = bitcast %"class.WTF::StringView"* %5 to i8*
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %146 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %147 = bitcast i8** %146 to %"class.WTF::StringImpl"**
  %148 = bitcast %"class.WTF::StringView"* %5 to i64*
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %150 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %151 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %150, i64 0, i32 0, i32 0, i32 0
  br label %152

152:                                              ; preds = %213, %137
  %153 = phi %"class.blink::Node"* [ %105, %137 ], [ %208, %213 ]
  %154 = bitcast %"class.blink::Node"* %153 to %"class.blink::HTMLAnchorElement"*
  %155 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %79, align 8
  %156 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %155, i64 0, i32 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %157, i64 0, i32 2, i32 0, i32 0
  %159 = load %"class.blink::Document"*, %"class.blink::Document"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %159, i64 0, i32 33
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %187

163:                                              ; preds = %152
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #14
  %164 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLAnchorElement7GetNameEv(%"class.blink::HTMLAnchorElement"* nonnull %154) #14
  %165 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %164, i64 0, i32 0, i32 0, i32 0
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %168, label %170

168:                                              ; preds = %163
  store i8* null, i8** %140, align 8
  %169 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %169, i64* %142, align 8
  br label %174

170:                                              ; preds = %163
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %139, align 8
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 1
  store %"class.WTF::StringImpl"* %173, %"class.WTF::StringImpl"** %141, align 8
  br label %174

174:                                              ; preds = %168, %170
  %175 = phi i32 [ %172, %170 ], [ 0, %168 ]
  store i32 %175, i32* %143, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #14
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %174
  store i8* null, i8** %146, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %179, i64* %148, align 8
  br label %184

180:                                              ; preds = %174
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %145, align 8
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 1
  store %"class.WTF::StringImpl"* %183, %"class.WTF::StringImpl"** %147, align 8
  br label %184

184:                                              ; preds = %178, %180
  %185 = phi i32 [ %182, %180 ], [ 0, %178 ]
  store i32 %185, i32* %149, align 8
  %186 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #14
  br i1 %186, label %240, label %193

187:                                              ; preds = %152
  %188 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLAnchorElement7GetNameEv(%"class.blink::HTMLAnchorElement"* nonnull %154) #14
  %189 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %188, i64 0, i32 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %192 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %190, %"class.WTF::StringImpl"* %191) #14
  br i1 %192, label %242, label %193

193:                                              ; preds = %184, %187
  %194 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %153, i64 1
  %195 = bitcast %"class.blink::Node"* %194 to %"class.blink::Node"**
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %195, align 8
  %197 = icmp eq %"class.blink::Node"* %196, null
  br i1 %197, label %198, label %205

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %153, i64 0, i32 5, i32 0, i32 0
  %200 = load %"class.blink::Node"*, %"class.blink::Node"** %199, align 8
  %201 = icmp eq %"class.blink::Node"* %200, null
  br i1 %201, label %202, label %205

202:                                              ; preds = %198
  %203 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %153) #14
  %204 = icmp eq %"class.blink::Node"* %203, null
  br i1 %204, label %244, label %205

205:                                              ; preds = %202, %198, %193
  %206 = phi %"class.blink::Node"* [ %196, %193 ], [ %200, %198 ], [ %203, %202 ]
  br label %207

207:                                              ; preds = %205, %237
  %208 = phi %"class.blink::Node"* [ %238, %237 ], [ %206, %205 ]
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = and i32 %210, 48
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %223

213:                                              ; preds = %207
  %214 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %151, align 8
  %215 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 1, i32 2
  %216 = bitcast %"class.blink::Member.318"* %215 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %217 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %217, i64 0, i32 3, i32 0, i32 0, i32 0
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %214, i64 0, i32 3, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %219, %221
  br i1 %222, label %152, label %223

223:                                              ; preds = %213, %207
  %224 = and i32 %210, 2
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 1
  %228 = bitcast %"class.blink::Node"* %227 to %"class.blink::Node"**
  %229 = load %"class.blink::Node"*, %"class.blink::Node"** %228, align 8
  %230 = icmp eq %"class.blink::Node"* %229, null
  br i1 %230, label %231, label %237

231:                                              ; preds = %226, %223
  %232 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 0, i32 5, i32 0, i32 0
  %233 = load %"class.blink::Node"*, %"class.blink::Node"** %232, align 8
  %234 = icmp eq %"class.blink::Node"* %233, null
  br i1 %234, label %235, label %237

235:                                              ; preds = %231
  %236 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %208) #14
  br label %237

237:                                              ; preds = %235, %231, %226
  %238 = phi %"class.blink::Node"* [ %236, %235 ], [ %233, %231 ], [ %229, %226 ]
  %239 = icmp eq %"class.blink::Node"* %238, null
  br i1 %239, label %244, label %207

240:                                              ; preds = %184
  %241 = bitcast %"class.blink::Node"* %153 to %"class.blink::Element"*
  br label %244

242:                                              ; preds = %187
  %243 = bitcast %"class.blink::Node"* %153 to %"class.blink::Element"*
  br label %244

244:                                              ; preds = %134, %202, %237, %97, %240, %242, %75, %9, %2
  %245 = phi %"class.blink::Element"* [ %76, %75 ], [ null, %9 ], [ null, %2 ], [ %243, %242 ], [ %241, %240 ], [ null, %97 ], [ null, %237 ], [ null, %202 ], [ null, %134 ]
  ret %"class.blink::Element"* %245
}

declare zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink17HTMLAnchorElement7GetNameEv(%"class.blink::HTMLAnchorElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink9TreeScope10FindAnchorERKN3WTF6StringE(%"class.blink::TreeScope"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %5, i64 0, i32 107
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 32
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = tail call %"class.blink::Element"* @_ZN5blink9TreeScope18FindAnchorWithNameERKN3WTF6StringE(%"class.blink::TreeScope"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  %12 = icmp eq %"class.blink::Element"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %11, i64 0, i32 0, i32 0
  br label %132

15:                                               ; preds = %2, %10
  %16 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %18 = tail call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8) %1, i32 0) #14
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %17, align 8
  %19 = call %"class.blink::Element"* @_ZN5blink9TreeScope18FindAnchorWithNameERKN3WTF6StringE(%"class.blink::TreeScope"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %19, i64 0, i32 0, i32 0
  br label %113

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %110, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %110, label %31

31:                                               ; preds = %27
  %32 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %32, label %130, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1
  %37 = bitcast %"class.WTF::StringImpl"* %36 to i8*
  %38 = icmp eq i32 %35, 3
  br i1 %38, label %39, label %116

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %63, label %44

44:                                               ; preds = %39
  %45 = load i8, i8* %37, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %49, %51
  br i1 %52, label %53, label %116

53:                                               ; preds = %44
  %54 = getelementptr inbounds i8, i8* %37, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i32
  %60 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %100, label %116

63:                                               ; preds = %39
  %64 = bitcast %"class.WTF::StringImpl"* %36 to i16*
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 116), align 4
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %116

75:                                               ; preds = %63
  %76 = getelementptr inbounds i16, i16* %64, i64 1
  %77 = load i16, i16* %76, align 2
  %78 = add i16 %77, -65
  %79 = icmp ult i16 %78, 26
  %80 = zext i1 %79 to i16
  %81 = shl nuw nsw i16 %80, 5
  %82 = or i16 %81, %77
  %83 = zext i16 %82 to i32
  %84 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 111), align 1
  %85 = sext i8 %84 to i32
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %87, label %116

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 1, i32 1
  %89 = bitcast i32* %88 to i16*
  %90 = load i16, i16* %89, align 2
  %91 = add i16 %90, -65
  %92 = icmp ult i16 %91, 26
  %93 = zext i1 %92 to i16
  %94 = shl nuw nsw i16 %93, 5
  %95 = or i16 %94, %90
  %96 = zext i16 %95 to i32
  %97 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %110, label %116

100:                                              ; preds = %53
  %101 = getelementptr inbounds i8, i8* %37, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i64
  %104 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = zext i8 %105 to i32
  %107 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 112), align 16
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %106, %108
  br i1 %109, label %110, label %116

110:                                              ; preds = %23, %27, %87, %100
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %112 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %111, i64 0, i32 0, i32 0
  br label %113

113:                                              ; preds = %110, %21
  %114 = phi %"class.blink::Node"* [ %22, %21 ], [ %112, %110 ]
  %115 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %115, label %130, label %116

116:                                              ; preds = %33, %63, %75, %44, %53, %100, %87, %113
  %117 = phi %"class.blink::Node"* [ %114, %113 ], [ null, %87 ], [ null, %100 ], [ null, %53 ], [ null, %44 ], [ null, %75 ], [ null, %63 ], [ null, %33 ]
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %116
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %116
  %127 = phi i32 [ %125, %124 ], [ %123, %116 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %130

130:                                              ; preds = %31, %113, %126, %129
  %131 = phi %"class.blink::Node"* [ %114, %113 ], [ %117, %126 ], [ %117, %129 ], [ null, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %132

132:                                              ; preds = %130, %13
  %133 = phi %"class.blink::Node"* [ %131, %130 ], [ %14, %13 ]
  ret %"class.blink::Node"* %133
}

declare %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope13AdoptIfNeededERNS_4NodeE(%"class.blink::TreeScope"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::TreeScopeAdopter", align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %8 = ptrtoint i64* %4 to i64
  %9 = sub i64 %7, %8
  %10 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %11 = icmp ult i64 %9, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  br i1 %11, label %14, label %12, !prof !10

12:                                               ; preds = %2
  %13 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #14
  br label %14

14:                                               ; preds = %2, %12
  %15 = phi i32* [ %13, %12 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %2 ]
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, 1
  store i32 %17, i32* %15, align 4
  %18 = bitcast %"class.blink::TreeScopeAdopter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.blink::TreeScopeAdopter", %"class.blink::TreeScopeAdopter"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::TreeScopeAdopter", %"class.blink::TreeScopeAdopter"* %5, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::TreeScopeAdopter", %"class.blink::TreeScopeAdopter"* %5, i64 0, i32 2
  store %"class.blink::Node"* %1, %"class.blink::Node"** %19, align 8
  store %"class.blink::TreeScope"* %0, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 3, i32 0, i32 0
  %23 = bitcast %"class.blink::TreeScope"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::TreeScope"** %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = inttoptr i64 %24 to %"class.blink::TreeScope"*
  %27 = icmp eq %"class.blink::TreeScope"* %26, %0
  br i1 %27, label %29, label %28

28:                                               ; preds = %14
  call void @_ZNK5blink16TreeScopeAdopter7ExecuteEv(%"class.blink::TreeScopeAdopter"* nonnull %5) #14
  br label %29

29:                                               ; preds = %14, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #14
  %30 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %32 = ptrtoint i64* %3 to i64
  %33 = sub i64 %31, %32
  %34 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %35 = icmp ult i64 %33, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  br i1 %35, label %38, label %36, !prof !10

36:                                               ; preds = %29
  %37 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #14
  br label %38

38:                                               ; preds = %29, %36
  %39 = phi i32* [ %37, %36 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %29 ]
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, -1
  store i32 %41, i32* %39, align 4
  ret void
}

declare void @_ZNK5blink16TreeScopeAdopter7ExecuteEv(%"class.blink::TreeScopeAdopter"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope30AdjustedFocusedElementInternalERKNS_7ElementE(%"class.blink::TreeScope"* readnone, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %9
  %5 = phi %"class.blink::Element"* [ %11, %9 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %8 = icmp eq %"class.blink::TreeScope"* %7, %0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  %11 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %10) #14
  %12 = icmp eq %"class.blink::Element"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %4, %9, %2
  %14 = phi %"class.blink::Element"* [ null, %2 ], [ null, %9 ], [ %5, %4 ]
  ret %"class.blink::Element"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope22AdjustedFocusedElementEv(%"class.blink::TreeScope"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 43, i32 0, i32 0
  %9 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %10 = icmp eq %"class.blink::Element"* %9, null
  br i1 %10, label %11, label %24

11:                                               ; preds = %1
  %12 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %7) #14
  %13 = icmp eq %"class.blink::Page"* %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %7) #14
  %16 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %15, i64 0, i32 10, i32 0, i32 0
  %17 = load %"class.blink::FocusController"*, %"class.blink::FocusController"** %16, align 8
  %18 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %7) #14
  %19 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink15FocusController24FocusedFrameOwnerElementERNS_10LocalFrameE(%"class.blink::FocusController"* %17, %"class.blink::LocalFrame"* dereferenceable(1176) %18) #14
  %20 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %19, null
  br i1 %20, label %40, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %19, i64 0, i32 0, i32 0
  %23 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  br label %24

24:                                               ; preds = %21, %1
  %25 = phi %"class.blink::ContainerNode"* [ %23, %21 ], [ %3, %1 ]
  %26 = phi %"class.blink::Element"* [ %22, %21 ], [ %9, %1 ]
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %25, i64 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 512
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %24, %36
  %32 = phi %"class.blink::Element"* [ %38, %36 ], [ %26, %24 ]
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %32, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = icmp eq %"class.blink::TreeScope"* %34, %0
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %32, i64 0, i32 0, i32 0
  %38 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %37) #14
  %39 = icmp eq %"class.blink::Element"* %38, null
  br i1 %39, label %40, label %31

40:                                               ; preds = %36, %31, %66, %42, %14, %69, %11
  %41 = phi %"class.blink::Element"* [ null, %14 ], [ %79, %69 ], [ null, %11 ], [ null, %42 ], [ null, %66 ], [ null, %36 ], [ %32, %31 ]
  ret %"class.blink::Element"* %41

42:                                               ; preds = %24
  %43 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_9EventPathEEEPhm(i64 120) #14
  %44 = bitcast i8* %43 to %"class.blink::EventPath"*
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 0, i32 0
  tail call void @_ZN5blink9EventPathC1ERNS_4NodeEPNS_5EventE(%"class.blink::EventPath"* %44, %"class.blink::Node"* dereferenceable(64) %45, %"class.blink::Event"* null) #14
  %46 = getelementptr inbounds i8, i8* %43, i64 -4
  %47 = bitcast i8* %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = or i16 %48, 1
  store atomic i16 %49, i16* %47 release, align 2
  %50 = bitcast i8* %43 to %"class.blink::NodeEventContext"**
  %51 = load %"class.blink::NodeEventContext"*, %"class.blink::NodeEventContext"** %50, align 8
  %52 = getelementptr inbounds i8, i8* %43, i64 12
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.blink::NodeEventContext", %"class.blink::NodeEventContext"* %51, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %40, label %58

58:                                               ; preds = %42
  %59 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %2, align 8
  %60 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %59, i64 0, i32 0
  br label %61

61:                                               ; preds = %58, %66
  %62 = phi %"class.blink::NodeEventContext"* [ %51, %58 ], [ %67, %66 ]
  %63 = getelementptr inbounds %"class.blink::NodeEventContext", %"class.blink::NodeEventContext"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %60
  br i1 %65, label %69, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::NodeEventContext", %"class.blink::NodeEventContext"* %62, i64 1
  %68 = icmp eq %"class.blink::NodeEventContext"* %67, %56
  br i1 %68, label %40, label %61

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.blink::NodeEventContext", %"class.blink::NodeEventContext"* %62, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::TreeScopeEventContext"*, %"class.blink::TreeScopeEventContext"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TreeScopeEventContext", %"class.blink::TreeScopeEventContext"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::EventTarget"*, %"class.blink::EventTarget"** %72, align 8
  %74 = bitcast %"class.blink::EventTarget"* %73 to %"class.blink::Node"* (%"class.blink::EventTarget"*)***
  %75 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)**, %"class.blink::Node"* (%"class.blink::EventTarget"*)*** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %75, i64 11
  %77 = load %"class.blink::Node"* (%"class.blink::EventTarget"*)*, %"class.blink::Node"* (%"class.blink::EventTarget"*)** %76, align 8
  %78 = tail call %"class.blink::Node"* %77(%"class.blink::EventTarget"* %73) #14
  %79 = bitcast %"class.blink::Node"* %78 to %"class.blink::Element"*
  br label %40
}

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink15FocusController24FocusedFrameOwnerElementERNS_10LocalFrameE(%"class.blink::FocusController"*, %"class.blink::LocalFrame"* dereferenceable(1176)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope15AdjustedElementERKNS_7ElementE(%"class.blink::TreeScope"* readnone, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %1, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %2, %13
  %5 = phi %"class.blink::Element"* [ %15, %13 ], [ %1, %2 ]
  %6 = phi %"class.blink::Element"* [ %9, %13 ], [ %1, %2 ]
  %7 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %5) #14
  %8 = icmp eq %"class.blink::ShadowRoot"* %7, null
  %9 = select i1 %8, %"class.blink::Element"* %6, %"class.blink::Element"* %5
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = icmp eq %"class.blink::TreeScope"* %11, %0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %5, i64 0, i32 0, i32 0
  %15 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %14) #14
  %16 = icmp eq %"class.blink::Element"* %15, null
  br i1 %16, label %17, label %4

17:                                               ; preds = %4, %13, %2
  %18 = phi %"class.blink::Element"* [ null, %2 ], [ null, %13 ], [ %9, %4 ]
  ret %"class.blink::Element"* %18
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink9TreeScope15ComparePositionERKS0_(%"class.blink::TreeScope"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.2982", align 8
  %4 = alloca %"class.blink::HeapVector.2982", align 8
  %5 = alloca %"class.blink::TreeScope"*, align 8
  %6 = icmp eq %"class.blink::TreeScope"* %1, %0
  br i1 %6, label %176, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::HeapVector.2982"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %8) #14
  %9 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %10 = bitcast %"class.blink::HeapVector.2982"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %11, align 8
  %12 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 132, i1 false) #14
  %14 = bitcast %"class.blink::HeapVector.2982"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0, i32 1, i64 0
  %16 = bitcast %"class.blink::HeapVector.2982"* %4 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %17, align 8
  %18 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %19 = bitcast i32* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 132, i1 false) #14
  %20 = bitcast %"class.blink::TreeScope"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  store %"class.blink::TreeScope"* %0, %"class.blink::TreeScope"** %5, align 8
  %21 = icmp eq %"class.blink::TreeScope"* %0, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0
  br label %30

25:                                               ; preds = %50, %7
  store %"class.blink::TreeScope"* %1, %"class.blink::TreeScope"** %5, align 8
  %26 = icmp eq %"class.blink::TreeScope"* %1, null
  br i1 %26, label %83, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0
  br label %58

30:                                               ; preds = %55, %22
  %31 = phi %"class.blink::TreeScope"* [ %53, %55 ], [ %0, %22 ]
  %32 = phi i32 [ %57, %55 ], [ 16, %22 ]
  %33 = phi i32 [ %56, %55 ], [ 0, %22 ]
  %34 = icmp eq i32 %33, %32
  br i1 %34, label %49, label %35, !prof !3

35:                                               ; preds = %30
  %36 = ptrtoint %"class.blink::TreeScope"* %31 to i64
  %37 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %23, align 8
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %37, i64 %38
  %40 = bitcast %"class.blink::Member.312"* %39 to i64*
  store atomic i64 %36, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = bitcast %"class.blink::TreeScope"* %31 to i8*
  %45 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #14
  br label %46

46:                                               ; preds = %43, %35
  %47 = load i32, i32* %12, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %12, align 4
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2985"* nonnull %24, %"class.blink::TreeScope"** nonnull dereferenceable(8) %5) #14
  br label %50

50:                                               ; preds = %46, %49
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  store %"class.blink::TreeScope"* %53, %"class.blink::TreeScope"** %5, align 8
  %54 = icmp eq %"class.blink::TreeScope"* %53, null
  br i1 %54, label %25, label %55

55:                                               ; preds = %50
  %56 = load i32, i32* %12, align 4
  %57 = load i32, i32* %11, align 8
  br label %30

58:                                               ; preds = %27, %78
  %59 = phi %"class.blink::TreeScope"* [ %1, %27 ], [ %81, %78 ]
  %60 = load i32, i32* %18, align 4
  %61 = load i32, i32* %17, align 8
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %77, label %63, !prof !3

63:                                               ; preds = %58
  %64 = ptrtoint %"class.blink::TreeScope"* %59 to i64
  %65 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %28, align 8
  %66 = zext i32 %60 to i64
  %67 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %65, i64 %66
  %68 = bitcast %"class.blink::Member.312"* %67 to i64*
  store atomic i64 %64, i64* %68 monotonic, align 8
  %69 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63
  %72 = bitcast %"class.blink::TreeScope"* %59 to i8*
  %73 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %72) #14
  br label %74

74:                                               ; preds = %71, %63
  %75 = load i32, i32* %18, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %18, align 4
  br label %78

77:                                               ; preds = %58
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2985"* nonnull %29, %"class.blink::TreeScope"** nonnull dereferenceable(8) %5) #14
  br label %78

78:                                               ; preds = %74, %77
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 3, i32 0, i32 0
  %81 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %80, align 8
  store %"class.blink::TreeScope"* %81, %"class.blink::TreeScope"** %5, align 8
  %82 = icmp eq %"class.blink::TreeScope"* %81, null
  br i1 %82, label %83, label %58

83:                                               ; preds = %78, %25
  %84 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0
  %85 = load i32, i32* %12, align 4
  %86 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0
  %87 = load i32, i32* %18, align 4
  %88 = add i32 %85, -1
  %89 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %84, i32 %88) #14
  %90 = add i32 %87, -1
  %91 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %86, i32 %90) #14
  %92 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %89, i64 0, i32 0, i32 0
  %93 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %91, i64 0, i32 0, i32 0
  %95 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %94, align 8
  %96 = icmp eq %"class.blink::TreeScope"* %93, %95
  br i1 %96, label %97, label %138

97:                                               ; preds = %83
  %98 = icmp ult i32 %87, %85
  %99 = select i1 %98, i32 %87, i32 %85
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %133, label %103

101:                                              ; preds = %103
  %102 = icmp eq i32 %116, 0
  br i1 %102, label %133, label %103

103:                                              ; preds = %97, %101
  %104 = phi i32 [ %116, %101 ], [ %99, %97 ]
  %105 = phi i32 [ %111, %101 ], [ %87, %97 ]
  %106 = phi i32 [ %107, %101 ], [ %85, %97 ]
  %107 = add i32 %106, -1
  %108 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %84, i32 %107) #14
  %109 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %108, i64 0, i32 0, i32 0
  %110 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %109, align 8
  %111 = add i32 %105, -1
  %112 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %86, i32 %111) #14
  %113 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %113, align 8
  %115 = icmp eq %"class.blink::TreeScope"* %110, %114
  %116 = add i32 %104, -1
  br i1 %115, label %101, label %117

117:                                              ; preds = %103
  %118 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %110, i64 0, i32 1, i32 0, i32 0
  %119 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %119, i64 0, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast %"class.blink::Node"** %120 to %"class.blink::ContainerNode"**
  %122 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %114, i64 0, i32 1, i32 0, i32 0
  %124 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %124, i64 0, i32 0, i32 2, i32 0, i32 0
  %126 = bitcast %"class.blink::Node"** %125 to %"class.blink::ContainerNode"**
  %127 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %126, align 8
  %128 = icmp eq %"class.blink::ContainerNode"* %122, %127
  br i1 %128, label %138, label %129

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %122, i64 0, i32 0
  %131 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %127, i64 0, i32 0
  %132 = call zeroext i16 @_ZNK5blink4Node23compareDocumentPositionEPKS0_NS0_20ShadowTreesTreatmentE(%"class.blink::Node"* %130, %"class.blink::Node"* %131, i32 0) #14
  br label %138

133:                                              ; preds = %101, %97
  %134 = phi i32 [ %85, %97 ], [ %107, %101 ]
  %135 = phi i32 [ %87, %97 ], [ %111, %101 ]
  %136 = icmp ult i32 %134, %135
  %137 = select i1 %136, i16 20, i16 10
  br label %138

138:                                              ; preds = %83, %129, %117, %133
  %139 = phi i16 [ %137, %133 ], [ 33, %83 ], [ 2, %117 ], [ %132, %129 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  %140 = load i32, i32* %18, align 4
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %142, align 8
  br i1 %141, label %144, label %146, !prof !3

144:                                              ; preds = %138
  %145 = bitcast i8* %15 to %"class.blink::Member.312"*
  br label %152

146:                                              ; preds = %138
  %147 = icmp ne %"class.blink::Member.312"* %143, null
  %148 = bitcast i8* %15 to %"class.blink::Member.312"*
  %149 = icmp ne %"class.blink::Member.312"* %143, %148
  %150 = and i1 %147, %149
  br i1 %150, label %152, label %151

151:                                              ; preds = %146
  store i32 0, i32* %18, align 4
  br label %152

152:                                              ; preds = %144, %151, %146
  %153 = phi %"class.blink::Member.312"* [ %145, %144 ], [ %148, %151 ], [ %148, %146 ]
  %154 = icmp eq %"class.blink::Member.312"* %143, %153
  br i1 %154, label %157, label %155, !prof !10

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %4, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* nonnull %156, %"class.blink::Member.312"* %143) #14
  br label %157

157:                                              ; preds = %152, %155
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %14) #14
  %158 = load i32, i32* %12, align 4
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %160, align 8
  br i1 %159, label %162, label %164, !prof !3

162:                                              ; preds = %157
  %163 = bitcast i8* %9 to %"class.blink::Member.312"*
  br label %170

164:                                              ; preds = %157
  %165 = icmp ne %"class.blink::Member.312"* %161, null
  %166 = bitcast i8* %9 to %"class.blink::Member.312"*
  %167 = icmp ne %"class.blink::Member.312"* %161, %166
  %168 = and i1 %165, %167
  br i1 %168, label %170, label %169

169:                                              ; preds = %164
  store i32 0, i32* %12, align 4
  br label %170

170:                                              ; preds = %162, %169, %164
  %171 = phi %"class.blink::Member.312"* [ %163, %162 ], [ %166, %169 ], [ %166, %164 ]
  %172 = icmp eq %"class.blink::Member.312"* %161, %171
  br i1 %172, label %175, label %173, !prof !10

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* nonnull %174, %"class.blink::Member.312"* %161) #14
  br label %175

175:                                              ; preds = %170, %173
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %8) #14
  br label %176

176:                                              ; preds = %2, %175
  %177 = phi i16 [ %139, %175 ], [ 0, %2 ]
  ret i16 %177
}

declare zeroext i16 @_ZNK5blink4Node23compareDocumentPositionEPKS0_NS0_20ShadowTreesTreatmentE(%"class.blink::Node"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TreeScope"* @_ZNK5blink9TreeScope23CommonAncestorTreeScopeERKS0_(%"class.blink::TreeScope"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.2982", align 8
  %4 = alloca %"class.blink::TreeScope"*, align 8
  %5 = alloca %"class.blink::HeapVector.2982", align 8
  %6 = alloca %"class.blink::TreeScope"*, align 8
  %7 = bitcast %"class.blink::HeapVector.2982"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %9 = bitcast %"class.blink::HeapVector.2982"* %3 to i8**
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %10, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = bitcast i32* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 132, i1 false) #14
  %13 = bitcast %"class.blink::TreeScope"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  store %"class.blink::TreeScope"* %0, %"class.blink::TreeScope"** %4, align 8
  %14 = icmp eq %"class.blink::TreeScope"* %0, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0
  br label %30

18:                                               ; preds = %50, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  %19 = bitcast %"class.blink::HeapVector.2982"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %21 = bitcast %"class.blink::HeapVector.2982"* %5 to i8**
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 132, i1 false) #14
  %25 = bitcast %"class.blink::TreeScope"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #14
  store %"class.blink::TreeScope"* %1, %"class.blink::TreeScope"** %6, align 8
  %26 = icmp eq %"class.blink::TreeScope"* %1, null
  br i1 %26, label %58, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0
  br label %68

30:                                               ; preds = %55, %15
  %31 = phi %"class.blink::TreeScope"* [ %53, %55 ], [ %0, %15 ]
  %32 = phi i32 [ %57, %55 ], [ 16, %15 ]
  %33 = phi i32 [ %56, %55 ], [ 0, %15 ]
  %34 = icmp eq i32 %33, %32
  br i1 %34, label %49, label %35, !prof !3

35:                                               ; preds = %30
  %36 = ptrtoint %"class.blink::TreeScope"* %31 to i64
  %37 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %16, align 8
  %38 = zext i32 %33 to i64
  %39 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %37, i64 %38
  %40 = bitcast %"class.blink::Member.312"* %39 to i64*
  store atomic i64 %36, i64* %40 monotonic, align 8
  %41 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %35
  %44 = bitcast %"class.blink::TreeScope"* %31 to i8*
  %45 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %44) #14
  br label %46

46:                                               ; preds = %43, %35
  %47 = load i32, i32* %11, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %11, align 4
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2985"* nonnull %17, %"class.blink::TreeScope"** nonnull dereferenceable(8) %4) #14
  br label %50

50:                                               ; preds = %46, %49
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  store %"class.blink::TreeScope"* %53, %"class.blink::TreeScope"** %4, align 8
  %54 = icmp eq %"class.blink::TreeScope"* %53, null
  br i1 %54, label %18, label %55

55:                                               ; preds = %50
  %56 = load i32, i32* %11, align 4
  %57 = load i32, i32* %10, align 8
  br label %30

58:                                               ; preds = %88, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #14
  %59 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0
  %60 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0
  %61 = load i32, i32* %11, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %141, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %23, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %141, label %98

68:                                               ; preds = %93, %27
  %69 = phi %"class.blink::TreeScope"* [ %91, %93 ], [ %1, %27 ]
  %70 = phi i32 [ %95, %93 ], [ 16, %27 ]
  %71 = phi i32 [ %94, %93 ], [ 0, %27 ]
  %72 = icmp eq i32 %71, %70
  br i1 %72, label %87, label %73, !prof !3

73:                                               ; preds = %68
  %74 = ptrtoint %"class.blink::TreeScope"* %69 to i64
  %75 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %28, align 8
  %76 = zext i32 %71 to i64
  %77 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %75, i64 %76
  %78 = bitcast %"class.blink::Member.312"* %77 to i64*
  store atomic i64 %74, i64* %78 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %73
  %82 = bitcast %"class.blink::TreeScope"* %69 to i8*
  %83 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %82) #14
  br label %84

84:                                               ; preds = %81, %73
  %85 = load i32, i32* %23, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %23, align 4
  br label %88

87:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2985"* nonnull %29, %"class.blink::TreeScope"** nonnull dereferenceable(8) %6) #14
  br label %88

88:                                               ; preds = %84, %87
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %6, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %90, align 8
  store %"class.blink::TreeScope"* %91, %"class.blink::TreeScope"** %6, align 8
  %92 = icmp eq %"class.blink::TreeScope"* %91, null
  br i1 %92, label %58, label %93

93:                                               ; preds = %88
  %94 = load i32, i32* %23, align 4
  %95 = load i32, i32* %22, align 8
  br label %68

96:                                               ; preds = %111
  %97 = icmp eq i32 %129, 0
  br i1 %97, label %141, label %98

98:                                               ; preds = %63, %96
  %99 = phi %"class.blink::TreeScope"* [ %116, %96 ], [ null, %63 ]
  %100 = phi i32 [ %139, %96 ], [ %61, %63 ]
  %101 = add i32 %100, -1
  %102 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %60, i32 %101) #14
  %103 = load i32, i32* %23, align 4
  %104 = add i32 %103, -1
  %105 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %59, i32 %104) #14
  %106 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %102, i64 0, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %105, i64 0, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = icmp eq %"class.blink::TreeScope"* %107, %109
  br i1 %110, label %111, label %141

111:                                              ; preds = %98
  %112 = load i32, i32* %11, align 4
  %113 = add i32 %112, -1
  %114 = call dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"* nonnull %60, i32 %113) #14
  %115 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %114, i64 0, i32 0, i32 0
  %116 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %115, align 8
  %117 = load i32, i32* %11, align 4
  %118 = add i32 %117, -1
  %119 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %64, align 8
  %120 = zext i32 %118 to i64
  %121 = zext i32 %117 to i64
  %122 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %119, i64 %120
  %123 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %119, i64 %121
  %124 = bitcast %"class.blink::Member.312"* %122 to i8*
  %125 = ptrtoint %"class.blink::Member.312"* %123 to i64
  %126 = ptrtoint %"class.blink::Member.312"* %122 to i64
  %127 = sub i64 %125, %126
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %124, i64 %127) #14
  store i32 %118, i32* %11, align 4
  %128 = load i32, i32* %23, align 4
  %129 = add i32 %128, -1
  %130 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %65, align 8
  %131 = zext i32 %129 to i64
  %132 = zext i32 %128 to i64
  %133 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %130, i64 %131
  %134 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %130, i64 %132
  %135 = bitcast %"class.blink::Member.312"* %133 to i8*
  %136 = ptrtoint %"class.blink::Member.312"* %134 to i64
  %137 = ptrtoint %"class.blink::Member.312"* %133 to i64
  %138 = sub i64 %136, %137
  call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %135, i64 %138) #14
  store i32 %129, i32* %23, align 4
  %139 = load i32, i32* %11, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %96

141:                                              ; preds = %98, %96, %63, %58
  %142 = phi %"class.blink::TreeScope"* [ null, %58 ], [ null, %63 ], [ %116, %96 ], [ %99, %98 ]
  %143 = load i32, i32* %23, align 4
  br label %144

144:                                              ; preds = %111, %141
  %145 = phi i32 [ %143, %141 ], [ %129, %111 ]
  %146 = phi %"class.blink::TreeScope"* [ %142, %141 ], [ %116, %111 ]
  %147 = icmp eq i32 %145, 0
  %148 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %148, align 8
  br i1 %147, label %150, label %152, !prof !3

150:                                              ; preds = %144
  %151 = bitcast i8* %20 to %"class.blink::Member.312"*
  br label %158

152:                                              ; preds = %144
  %153 = icmp ne %"class.blink::Member.312"* %149, null
  %154 = bitcast i8* %20 to %"class.blink::Member.312"*
  %155 = icmp ne %"class.blink::Member.312"* %149, %154
  %156 = and i1 %153, %155
  br i1 %156, label %158, label %157

157:                                              ; preds = %152
  store i32 0, i32* %23, align 4
  br label %158

158:                                              ; preds = %150, %157, %152
  %159 = phi %"class.blink::Member.312"* [ %151, %150 ], [ %154, %157 ], [ %154, %152 ]
  %160 = icmp eq %"class.blink::Member.312"* %149, %159
  br i1 %160, label %163, label %161, !prof !10

161:                                              ; preds = %158
  %162 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %5, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* nonnull %162, %"class.blink::Member.312"* %149) #14
  br label %163

163:                                              ; preds = %158, %161
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %19) #14
  %164 = load i32, i32* %11, align 4
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %166, align 8
  br i1 %165, label %168, label %170, !prof !3

168:                                              ; preds = %163
  %169 = bitcast i8* %8 to %"class.blink::Member.312"*
  br label %176

170:                                              ; preds = %163
  %171 = icmp ne %"class.blink::Member.312"* %167, null
  %172 = bitcast i8* %8 to %"class.blink::Member.312"*
  %173 = icmp ne %"class.blink::Member.312"* %167, %172
  %174 = and i1 %171, %173
  br i1 %174, label %176, label %175

175:                                              ; preds = %170
  store i32 0, i32* %11, align 4
  br label %176

176:                                              ; preds = %168, %175, %170
  %177 = phi %"class.blink::Member.312"* [ %169, %168 ], [ %172, %175 ], [ %172, %170 ]
  %178 = icmp eq %"class.blink::Member.312"* %167, %177
  br i1 %178, label %181, label %179, !prof !10

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.blink::HeapVector.2982", %"class.blink::HeapVector.2982"* %3, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* nonnull %180, %"class.blink::Member.312"* %167) #14
  br label %181

181:                                              ; preds = %176, %179
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %7) #14
  ret %"class.blink::TreeScope"* %146
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TreeScope"* @_ZN5blink9TreeScope23CommonAncestorTreeScopeERS0_(%"class.blink::TreeScope"*, %"class.blink::TreeScope"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::TreeScope"* @_ZNK5blink9TreeScope23CommonAncestorTreeScopeERKS0_(%"class.blink::TreeScope"* %0, %"class.blink::TreeScope"* dereferenceable(104) %1)
  ret %"class.blink::TreeScope"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9TreeScope21IsInclusiveAncestorOfERKS0_(%"class.blink::TreeScope"* readnone, %"class.blink::TreeScope"* readonly dereferenceable(104)) local_unnamed_addr #5 align 2 {
  %3 = icmp eq %"class.blink::TreeScope"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2, %7
  %5 = phi %"class.blink::TreeScope"* [ %9, %7 ], [ %1, %2 ]
  %6 = icmp eq %"class.blink::TreeScope"* %5, %0
  br i1 %6, label %11, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = icmp eq %"class.blink::TreeScope"* %9, null
  br i1 %10, label %11, label %4

11:                                               ; preds = %4, %7, %2
  %12 = phi i1 [ false, %2 ], [ false, %7 ], [ true, %4 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Element"* @_ZNK5blink9TreeScope21GetElementByAccessKeyERKN3WTF6StringE(%"class.blink::TreeScope"* nocapture readonly, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %187, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %187, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0
  %16 = icmp eq %"class.blink::ContainerNode"* %14, null
  br i1 %16, label %187, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %14, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %187, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1
  %24 = bitcast %"class.blink::Node"* %23 to %"class.blink::Node"**
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = bitcast %"class.blink::Node"* %25 to %"class.blink::Element"*
  %27 = icmp eq %"class.blink::Node"* %25, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %45, label %38

33:                                               ; preds = %38
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %28, %33
  %39 = phi %"class.blink::Node"* [ %41, %33 ], [ %25, %28 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 5, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %187, label %33

43:                                               ; preds = %33
  %44 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  br label %45

45:                                               ; preds = %22, %28, %43
  %46 = phi %"class.blink::Element"* [ %26, %22 ], [ %26, %28 ], [ %44, %43 ]
  %47 = icmp eq %"class.blink::Element"* %46, null
  br i1 %47, label %187, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.WTF::StringView"* %3 to i8*
  %50 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names14kAccesskeyAttrE, align 8
  %51 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %55 = bitcast i8** %54 to %"class.WTF::StringImpl"**
  %56 = bitcast %"class.WTF::StringView"* %3 to i64*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %58 = bitcast %"class.WTF::StringView"* %4 to i8*
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  %62 = bitcast %"class.WTF::StringView"* %4 to i64*
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  br label %64

64:                                               ; preds = %185, %48
  %65 = phi %"class.blink::Element"* [ null, %48 ], [ %152, %185 ]
  %66 = phi %"class.blink::Element"* [ %46, %48 ], [ %186, %185 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %67 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %66, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %67, align 8
  %69 = icmp eq %"class.blink::ElementData"* %68, null
  br i1 %69, label %119, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.blink::ElementData"* %68 to %"class.blink::UniqueElementData"*
  %77 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 1, i32 1
  %78 = bitcast %"class.blink::Member.354"* %77 to %"class.blink::Attribute"**
  %79 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %76, i64 0, i32 2, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  br label %87

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 1
  %84 = bitcast %"class.blink::ElementData"* %83 to %"class.blink::Attribute"*
  %85 = lshr i32 %72, 1
  %86 = and i32 %85, 268435455
  br label %87

87:                                               ; preds = %82, %75
  %88 = phi %"class.blink::Attribute"* [ %84, %82 ], [ %79, %75 ]
  %89 = phi i32 [ %86, %82 ], [ %81, %75 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %88, i64 %90
  %92 = icmp eq i32 %89, 0
  br i1 %92, label %119, label %93

93:                                               ; preds = %87
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %51, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %112, %93
  %98 = phi %"class.blink::Attribute"* [ %88, %93 ], [ %113, %112 ]
  %99 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %99, align 8
  %101 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %100, %94
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 3, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %104, %105
  br i1 %106, label %107, label %112

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %100, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %109, %110
  br i1 %111, label %115, label %112

112:                                              ; preds = %107, %102
  %113 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %98, i64 1
  %114 = icmp eq %"class.blink::Attribute"* %113, %91
  br i1 %114, label %119, label %97

115:                                              ; preds = %107, %97
  %116 = icmp eq %"class.blink::Attribute"* %98, null
  %117 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %98, i64 0, i32 1
  %118 = select i1 %116, %"class.WTF::AtomicString"* %52, %"class.WTF::AtomicString"* %117
  br label %119

119:                                              ; preds = %112, %115, %64, %87
  %120 = phi %"class.WTF::AtomicString"* [ %52, %87 ], [ %52, %64 ], [ %118, %115 ], [ %52, %112 ]
  %121 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %124, label %126

124:                                              ; preds = %119
  store i8* null, i8** %54, align 8
  %125 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %125, i64* %56, align 8
  br label %130

126:                                              ; preds = %119
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %53, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %55, align 8
  br label %130

130:                                              ; preds = %124, %126
  %131 = phi i32 [ %128, %126 ], [ 0, %124 ]
  store i32 %131, i32* %57, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #14
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  store i8* null, i8** %60, align 8
  %135 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %135, i64* %62, align 8
  br label %140

136:                                              ; preds = %130
  store %"class.WTF::StringImpl"* %132, %"class.WTF::StringImpl"** %59, align 8
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 1
  store %"class.WTF::StringImpl"* %139, %"class.WTF::StringImpl"** %61, align 8
  br label %140

140:                                              ; preds = %134, %136
  %141 = phi i32 [ %138, %136 ], [ 0, %134 ]
  store i32 %141, i32* %63, align 8
  %142 = call zeroext i1 @_ZN3WTF27DeprecatedEqualIgnoringCaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  %143 = select i1 %142, %"class.blink::Element"* %66, %"class.blink::Element"* %65
  %144 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %66) #14
  %145 = icmp eq %"class.blink::ShadowRoot"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %144, i64 0, i32 1
  %148 = call %"class.blink::Element"* @_ZNK5blink9TreeScope21GetElementByAccessKeyERKN3WTF6StringE(%"class.blink::TreeScope"* %147, %"class.WTF::String"* dereferenceable(8) %1)
  %149 = icmp eq %"class.blink::Element"* %148, null
  %150 = select i1 %149, %"class.blink::Element"* %143, %"class.blink::Element"* %148
  br label %151

151:                                              ; preds = %140, %146
  %152 = phi %"class.blink::Element"* [ %150, %146 ], [ %143, %140 ]
  %153 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %66, i64 0, i32 0, i32 1, i32 0, i32 0
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8
  %155 = icmp eq %"class.blink::Node"* %154, null
  br i1 %155, label %156, label %166

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %66, i64 0, i32 0, i32 0
  %158 = icmp eq %"class.blink::Node"* %157, %15
  br i1 %158, label %187, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %66, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %157, %"class.blink::Node"* %15) #14
  %165 = icmp eq %"class.blink::Node"* %164, null
  br i1 %165, label %187, label %166

166:                                              ; preds = %163, %159, %151
  %167 = phi %"class.blink::Node"* [ %154, %151 ], [ %161, %159 ], [ %164, %163 ]
  br label %168

168:                                              ; preds = %166, %182
  %169 = phi %"class.blink::Node"* [ %183, %182 ], [ %167, %166 ]
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 12
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %185, label %174

174:                                              ; preds = %168
  %175 = icmp eq %"class.blink::Node"* %169, %15
  br i1 %175, label %187, label %176

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %169, i64 0, i32 5, i32 0, i32 0
  %178 = load %"class.blink::Node"*, %"class.blink::Node"** %177, align 8
  %179 = icmp eq %"class.blink::Node"* %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %176
  %181 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %169, %"class.blink::Node"* %15) #14
  br label %182

182:                                              ; preds = %180, %176
  %183 = phi %"class.blink::Node"* [ %181, %180 ], [ %178, %176 ]
  %184 = icmp eq %"class.blink::Node"* %183, null
  br i1 %184, label %187, label %168

185:                                              ; preds = %168
  %186 = bitcast %"class.blink::Node"* %169 to %"class.blink::Element"*
  br label %64

187:                                              ; preds = %38, %156, %163, %182, %174, %17, %12, %45, %2, %8
  %188 = phi %"class.blink::Element"* [ null, %8 ], [ null, %2 ], [ null, %45 ], [ null, %12 ], [ null, %17 ], [ %152, %174 ], [ %152, %182 ], [ %152, %163 ], [ %152, %156 ], [ null, %38 ]
  ret %"class.blink::Element"* %188
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9TreeScope35SetNeedsStyleRecalcForViewportUnitsEv(%"class.blink::TreeScope"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %1, %14
  %9 = phi %"class.blink::Node"* [ %16, %14 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 12
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %24, label %8

18:                                               ; preds = %8
  %19 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  %20 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  %23 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %14, %113, %122, %1
  ret void

25:                                               ; preds = %116, %18
  %26 = phi %"class.blink::Node"* [ %9, %18 ], [ %117, %116 ]
  %27 = bitcast %"class.blink::Node"* %26 to %"class.blink::Element"*
  %28 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %27) #14
  %29 = icmp eq %"class.blink::ShadowRoot"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %28, i64 0, i32 1
  call void @_ZN5blink9TreeScope35SetNeedsStyleRecalcForViewportUnitsEv(%"class.blink::TreeScope"* %31)
  br label %32

32:                                               ; preds = %25, %30
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 12
  %36 = icmp eq i32 %35, 0
  %37 = and i32 %34, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 6, i32 0, i32 0
  br i1 %36, label %40, label %51

40:                                               ; preds = %32
  br i1 %38, label %47, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %43 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %43, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %45, i64 0, i32 2, i32 0
  br label %66

47:                                               ; preds = %40
  %48 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  %49 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %49, i64 0, i32 2, i32 0
  br label %66

51:                                               ; preds = %32
  br i1 %38, label %56, label %52

52:                                               ; preds = %51
  %53 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %54 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %54, i64 0, i32 1, i32 0, i32 0
  br label %58

56:                                               ; preds = %51
  %57 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %58

58:                                               ; preds = %56, %52
  %59 = phi %"class.blink::NodeRenderingData"** [ %55, %52 ], [ %57, %56 ]
  %60 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %60, i64 0, i32 1
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutObject"* %62, null
  br i1 %63, label %113, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 5, i32 0
  br label %66

66:                                               ; preds = %41, %47, %64
  %67 = phi %"class.blink::ComputedStyle"** [ %65, %64 ], [ %46, %41 ], [ %50, %47 ]
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = icmp eq %"class.blink::ComputedStyle"* %68, null
  br i1 %69, label %113, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = and i160 %73, 2722258935367507707706996859454145691648
  %75 = icmp eq i160 %74, 0
  br i1 %75, label %113, label %76

76:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #14
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %96, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %96

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #14
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !3

93:                                               ; preds = %84
  call void @llvm.trap() #14
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  br label %96

96:                                               ; preds = %76, %79, %94
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason14kViewportUnitsE, i64 0, i64 0), i8** %22, align 8
  store %"class.WTF::StringImpl"* %77, %"class.WTF::StringImpl"** %23, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* nonnull %26, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #14
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #14
  br label %112

112:                                              ; preds = %96, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #14
  br label %113

113:                                              ; preds = %70, %58, %66, %112
  %114 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %26, %"class.blink::Node"* null) #14
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %24, label %116

116:                                              ; preds = %113, %122
  %117 = phi %"class.blink::Node"* [ %123, %122 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 12
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %25, label %122

122:                                              ; preds = %116
  %123 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %117, %"class.blink::Node"* null) #14
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %24, label %116
}

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9TreeScope5TraceEPNS_7VisitorE(%"class.blink::TreeScope"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.314"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.326"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #14
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.320"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %95, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = and i64 %27, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4138
  %34 = load i8, i8* %33, align 2
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %32, i64 4160
  br label %76

38:                                               ; preds = %29
  %39 = getelementptr inbounds i8, i8* %32, i64 4096
  %40 = bitcast i8* %39 to %"class.blink::NormalPage"*
  %41 = getelementptr inbounds i8, i8* %32, i64 4400
  %42 = bitcast i8* %41 to i8**
  %43 = bitcast i8* %41 to i64*
  %44 = load i64, i64* %43, align 16
  %45 = sub i64 %27, %44
  %46 = lshr i64 %45, 3
  %47 = lshr i64 %45, 6
  %48 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %47
  %49 = load atomic i8, i8* %48 acquire, align 1
  %50 = trunc i64 %46 to i32
  %51 = and i32 %50, 7
  %52 = shl i32 2, %51
  %53 = trunc i32 %52 to i8
  %54 = add i8 %53, -1
  %55 = and i8 %54, %49
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %38, %57
  %58 = phi i64 [ %59, %57 ], [ %47, %38 ]
  %59 = add i64 %58, -1
  %60 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %40, i64 0, i32 2, i32 0, i32 1, i64 %59
  %61 = load atomic i8, i8* %60 acquire, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %57, label %63

63:                                               ; preds = %57, %38
  %64 = phi i64 [ %47, %38 ], [ %59, %57 ]
  %65 = phi i8 [ %55, %38 ], [ %61, %57 ]
  %66 = zext i8 %65 to i32
  %67 = tail call i32 @llvm.ctlz.i32(i32 %66, i1 true) #14, !range !11
  %68 = add nsw i32 %67, -24
  %69 = shl i64 %64, 3
  %70 = or i64 %69, 7
  %71 = sext i32 %68 to i64
  %72 = sub i64 %70, %71
  %73 = shl i64 %72, 3
  %74 = load i8*, i8** %42, align 16
  %75 = getelementptr inbounds i8, i8* %74, i64 %73
  br label %76

76:                                               ; preds = %63, %36
  %77 = phi i8* [ %37, %36 ], [ %75, %63 ]
  %78 = getelementptr inbounds i8, i8* %77, i64 8
  %79 = getelementptr inbounds i8, i8* %77, i64 4
  %80 = bitcast i8* %79 to i16*
  %81 = load atomic i16, i16* %80 acquire, align 2
  %82 = lshr i16 %81, 2
  %83 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %84 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %83, i64 0, i32 0
  %85 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %84, align 8
  %86 = zext i16 %82 to i64
  %87 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %85, i64 %86
  %88 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %87, align 8
  %89 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %88, i64 0, i32 0
  %90 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %89, align 8
  %91 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %91, align 8
  %93 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %92, i64 5
  %94 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %93, align 8
  tail call void %94(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* %78, void (%"class.blink::Visitor"*, i8*)* %90) #14
  br label %95

95:                                               ; preds = %24, %76
  %96 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 6
  %97 = bitcast %"class.blink::Member.372"* %96 to i64*
  %98 = load atomic i64, i64* %97 monotonic, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %106, label %100

100:                                              ; preds = %95
  %101 = inttoptr i64 %98 to i8*
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %101, i8* nonnull %101, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_24IdTargetObserverRegistryEE5TraceEPNS_7VisitorEPKv) #14
  br label %106

106:                                              ; preds = %95, %100
  %107 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 8
  %108 = bitcast %"class.blink::Member.467"* %107 to i64*
  %109 = load atomic i64, i64* %108 monotonic, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = inttoptr i64 %109 to i8*
  %113 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %114 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %114, i64 5
  %116 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, align 8
  tail call void %116(%"class.blink::Visitor"* %1, i8* nonnull %112, i8* nonnull %112, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12DOMSelectionEE5TraceEPNS_7VisitorEPKv) #14
  br label %117

117:                                              ; preds = %106, %111
  %118 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 4
  %119 = bitcast %"class.blink::Member.328"* %118 to i64*
  %120 = load atomic i64, i64* %119 monotonic, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %117
  %123 = inttoptr i64 %120 to i8*
  %124 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %125 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %125, i64 5
  %127 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %126, align 8
  tail call void %127(%"class.blink::Visitor"* %1, i8* nonnull %123, i8* nonnull %123, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv) #14
  br label %128

128:                                              ; preds = %117, %122
  %129 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 5
  %130 = bitcast %"class.blink::Member.328"* %129 to i64*
  %131 = load atomic i64, i64* %130 monotonic, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %128
  %134 = inttoptr i64 %131 to i8*
  %135 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %136 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %135, align 8
  %137 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %136, i64 5
  %138 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %137, align 8
  tail call void %138(%"class.blink::Visitor"* %1, i8* nonnull %134, i8* nonnull %134, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv) #14
  br label %139

139:                                              ; preds = %128, %133
  %140 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 7
  %141 = bitcast %"class.blink::Member.391"* %140 to i64*
  %142 = load atomic i64, i64* %141 monotonic, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %150, label %144

144:                                              ; preds = %139
  %145 = inttoptr i64 %142 to i8*
  %146 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %147 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %147, i64 5
  %149 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %148, align 8
  tail call void %149(%"class.blink::Visitor"* %1, i8* nonnull %145, i8* nonnull %145, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19ScopedStyleResolverEE5TraceEPNS_7VisitorEPKv) #14
  br label %150

150:                                              ; preds = %139, %144
  %151 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 9
  tail call void @_ZNK5blink21RadioButtonGroupScope5TraceEPNS_7VisitorE(%"class.blink::RadioButtonGroupScope"* %151, %"class.blink::Visitor"* %1) #14
  %152 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 10
  %153 = bitcast %"class.blink::Member.472"* %152 to i64*
  %154 = load atomic i64, i64* %153 monotonic, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %162, label %156

156:                                              ; preds = %150
  %157 = inttoptr i64 %154 to i8*
  %158 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %159, i64 5
  %161 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %160, align 8
  tail call void %161(%"class.blink::Visitor"* %1, i8* nonnull %157, i8* nonnull %157, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21SVGTreeScopeResourcesEE5TraceEPNS_7VisitorEPKv) #14
  br label %162

162:                                              ; preds = %150, %156
  %163 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %0, i64 0, i32 11
  %164 = bitcast %"class.blink::HeapVector.395"* %163 to i64*
  %165 = load atomic i64, i64* %164 monotonic, align 8
  %166 = icmp eq i64 %165, 0
  %167 = bitcast %"class.blink::HeapVector.395"* %163 to i8**
  %168 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %169 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %169, i64 11
  %171 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %170, align 8
  tail call void %171(%"class.blink::Visitor"* %1, i8** %167) #14
  br i1 %166, label %178, label %172

172:                                              ; preds = %162
  %173 = inttoptr i64 %165 to i8*
  %174 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %175 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %175, i64 5
  %177 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %176, align 8
  tail call void %177(%"class.blink::Visitor"* %1, i8* nonnull %173, i8* nonnull %173, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %178

178:                                              ; preds = %162, %172
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink24IdTargetObserverRegistry23NotifyObserversInternalERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserverRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #9

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #11

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink24PaintLayerScrollableArea18VisibleContentRectENS_23IncludeScrollbarsInRectE(%"class.blink::PaintLayerScrollableArea"*, i32) unnamed_addr #1

declare void @_ZN5blink7IntRect5ScaleEf(%"class.blink::IntRect"*, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #10

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"*, %"class.blink::Member.312"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::Member.312"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #14
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ContainerNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_24IdTargetObserverRegistryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_24IdTargetObserverRegistryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24IdTargetObserverRegistryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #13 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_24IdTargetObserverRegistryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IdTargetObserverRegistry"*
  tail call void @_ZNK5blink24IdTargetObserverRegistry5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserverRegistry"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_24IdTargetObserverRegistryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink24IdTargetObserverRegistry5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserverRegistry"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19ScopedStyleResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19ScopedStyleResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19ScopedStyleResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19ScopedStyleResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScopedStyleResolver"*
  tail call void @_ZNK5blink19ScopedStyleResolver5TraceEPNS_7VisitorE(%"class.blink::ScopedStyleResolver"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19ScopedStyleResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_19ScopedStyleResolverELb1EE10Destructor4CallEPv(i8* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19ScopedStyleResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19ScopedStyleResolver5TraceEPNS_7VisitorE(%"class.blink::ScopedStyleResolver"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_19ScopedStyleResolverELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 40
  %3 = bitcast i8* %2 to %"class.blink::MediaQueryResult"**
  %4 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %3, align 8
  %5 = icmp eq %"class.blink::MediaQueryResult"* %4, null
  br i1 %5, label %25, label %6, !prof !10

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::MediaQueryResult"* %4 to i8*
  %8 = getelementptr inbounds i8, i8* %0, i64 52
  %9 = bitcast i8* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12, !prof !3

12:                                               ; preds = %6
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %4, i64 %13
  br label %15

15:                                               ; preds = %15, %12
  %16 = phi %"class.blink::MediaQueryResult"* [ %18, %15 ], [ %4, %12 ]
  %17 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %16, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %17) #14
  %18 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %16, i64 1
  %19 = icmp eq %"class.blink::MediaQueryResult"* %18, %14
  br i1 %19, label %20, label %15

20:                                               ; preds = %15
  store i32 0, i32* %9, align 4
  %21 = bitcast i8* %2 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %6
  %24 = phi i8* [ %22, %20 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #14
  store %"class.blink::MediaQueryResult"* null, %"class.blink::MediaQueryResult"** %3, align 8
  br label %25

25:                                               ; preds = %23, %1
  %26 = getelementptr inbounds i8, i8* %0, i64 24
  %27 = bitcast i8* %26 to %"class.blink::MediaQueryResult"**
  %28 = load %"class.blink::MediaQueryResult"*, %"class.blink::MediaQueryResult"** %27, align 8
  %29 = icmp eq %"class.blink::MediaQueryResult"* %28, null
  br i1 %29, label %49, label %30, !prof !10

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::MediaQueryResult"* %28 to i8*
  %32 = getelementptr inbounds i8, i8* %0, i64 36
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %47, label %36, !prof !3

36:                                               ; preds = %30
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %28, i64 %37
  br label %39

39:                                               ; preds = %39, %36
  %40 = phi %"class.blink::MediaQueryResult"* [ %42, %39 ], [ %28, %36 ]
  %41 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %40, i64 0, i32 0
  tail call void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"* %41) #14
  %42 = getelementptr inbounds %"class.blink::MediaQueryResult", %"class.blink::MediaQueryResult"* %40, i64 1
  %43 = icmp eq %"class.blink::MediaQueryResult"* %42, %38
  br i1 %43, label %44, label %39

44:                                               ; preds = %39
  store i32 0, i32* %33, align 4
  %45 = bitcast i8* %26 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %30
  %48 = phi i8* [ %46, %44 ], [ %31, %30 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #14
  store %"class.blink::MediaQueryResult"* null, %"class.blink::MediaQueryResult"** %27, align 8
  br label %49

49:                                               ; preds = %25, %47
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13MediaQueryExpD1Ev(%"class.blink::MediaQueryExp"*) unnamed_addr #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #14
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #14
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.343"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.343"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7ElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Element"*
  %4 = bitcast i8* %1 to void (%"class.blink::Element"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)**, void (%"class.blink::Element"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Element"*, %"class.blink::Visitor"*)*, void (%"class.blink::Element"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Element"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS9_15TracePersistentEPNS_7VisitorEEEE10TrampolineESB_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapVector.365"**
  %5 = load %"class.blink::HeapVector.365"*, %"class.blink::HeapVector.365"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #14
  %7 = icmp eq %"class.blink::HeapVector.365"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapVector.365"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_7ElementEEELj0EEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #14
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

declare void @_ZN5blink14TreeOrderedMapC1Ev(%"class.blink::TreeOrderedMap"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14TreeOrderedMapEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14TreeOrderedMapEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14TreeOrderedMapEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14TreeOrderedMapEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::TreeOrderedMap"*
  tail call void @_ZNK5blink14TreeOrderedMap5TraceEPNS_7VisitorE(%"class.blink::TreeOrderedMap"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14TreeOrderedMapEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14TreeOrderedMap5TraceEPNS_7VisitorE(%"class.blink::TreeOrderedMap"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode.2896"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_4NodeEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.2893"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2893", %"class.WTF::Vector.2893"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2893", %"class.WTF::Vector.2893"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode.2896"*, %"class.WTF::VectorBackedLinkedListNode.2896"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode.2896", %"class.WTF::VectorBackedLinkedListNode.2896"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode.2896"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.368"*, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %16, i64 %18
  %20 = bitcast %"class.blink::Element"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.343"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %10 = icmp eq %"class.blink::Member.343"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %8, align 8
  %26 = icmp eq %"class.blink::Member.343"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.343"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.343"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.343"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.368"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.368"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7ElementEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.14, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7ElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #14
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7ElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.343"* @_ZN3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %24, i64 %25
  ret %"class.blink::Member.343"* %26
}

declare void @_ZN5blink21SVGTreeScopeResourcesC1EPNS_9TreeScopeE(%"class.blink::SVGTreeScopeResources"*, %"class.blink::TreeScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21SVGTreeScopeResourcesEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21SVGTreeScopeResourcesEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21SVGTreeScopeResourcesEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21SVGTreeScopeResourcesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGTreeScopeResources"*
  tail call void @_ZNK5blink21SVGTreeScopeResources5TraceEPNS_7VisitorE(%"class.blink::SVGTreeScopeResources"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21SVGTreeScopeResourcesEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21SVGTreeScopeResources5TraceEPNS_7VisitorE(%"class.blink::SVGTreeScopeResources"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.398"* @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEEaSERKS6_(%"class.WTF::Vector.398"*, %"class.WTF::Vector.398"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.398"* %1, %0
  br i1 %3, label %87, label %4, !prof !3

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %21

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %11, align 8
  %13 = zext i32 %8 to i64
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %12, i64 %13
  %16 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %12, i64 %14
  %17 = bitcast %"class.blink::Member.401"* %15 to i8*
  %18 = ptrtoint %"class.blink::Member.401"* %16 to i64
  %19 = ptrtoint %"class.blink::Member.401"* %15 to i64
  %20 = sub i64 %18, %19
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %17, i64 %20) #14
  store i32 %8, i32* %5, align 4
  br label %41

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp ugt i32 %8, %23
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = icmp eq i32 %23, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %25
  %28 = icmp eq i32 %6, 0
  %29 = bitcast %"class.WTF::Vector.398"* %0 to i8**
  br i1 %28, label %34, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %29, align 8
  %32 = zext i32 %6 to i64
  %33 = shl nuw nsw i64 %32, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %31, i64 %33) #14
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %30, %27
  %35 = load i8*, i8** %29, align 8
  %36 = bitcast %"class.WTF::Vector.398"* %0 to i64*
  store atomic i64 0, i64* %36 monotonic, align 8
  store i32 0, i32* %22, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %35) #14
  %37 = load i32, i32* %7, align 4
  br label %38

38:                                               ; preds = %25, %34
  %39 = phi i32 [ %8, %25 ], [ %37, %34 ]
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.398"* %0, i32 %39)
  %40 = load i32, i32* %5, align 4
  br label %41

41:                                               ; preds = %21, %38, %10
  %42 = phi i32 [ %6, %21 ], [ %40, %38 ], [ %8, %10 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = bitcast %"class.WTF::Vector.398"* %1 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = zext i32 %42 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::Vector.398"* %0 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = shl nuw nsw i64 %46, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* %49, i8* %45, i64 %50) #14
  %51 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %43, align 8
  %52 = load i32, i32* %5, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %51, i64 %53
  %55 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %47, align 8
  %56 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %55, i64 %53
  %57 = icmp ne %"class.blink::Member.401"* %56, null
  %58 = icmp ne %"class.blink::Member.401"* %54, null
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %85, !prof !10

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %51, i64 %62
  %64 = bitcast %"class.blink::Member.401"* %56 to i8*
  %65 = bitcast %"class.blink::Member.401"* %54 to i8*
  %66 = ptrtoint %"class.blink::Member.401"* %63 to i64
  %67 = ptrtoint %"class.blink::Member.401"* %54 to i64
  %68 = sub i64 %66, %67
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %64, i8* nonnull %65, i64 %68) #14
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %60
  %71 = ashr exact i64 %68, 3
  br label %72

72:                                               ; preds = %82, %70
  %73 = phi i64 [ %75, %82 ], [ %71, %70 ]
  %74 = phi %"class.blink::Member.401"* [ %83, %82 ], [ %56, %70 ]
  %75 = add i64 %73, -1
  %76 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.blink::Member.401"* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #14
  br label %82

82:                                               ; preds = %78, %72
  %83 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %74, i64 1
  %84 = icmp eq i64 %75, 0
  br i1 %84, label %85, label %72

85:                                               ; preds = %82, %41, %60
  %86 = load i32, i32* %7, align 4
  store i32 %86, i32* %5, align 4
  br label %87

87:                                               ; preds = %2, %85
  ret %"class.WTF::Vector.398"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.398"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %8, align 8
  %10 = icmp eq %"class.blink::Member.401"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.3226"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3226"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.398"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3226", %"class.blink::HeapVectorBacking.3226"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %8, align 8
  %26 = icmp eq %"class.blink::Member.401"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.401"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.398"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.398"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.398"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.398"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3226"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3226"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.401"*, %"class.blink::Member.401"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.3226"* %17, null
  %23 = icmp ne %"class.blink::Member.401"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.401"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.398"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.3226", %"class.blink::HeapVectorBacking.3226"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.398"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.398"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.398", %"class.WTF::Vector.398"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.3226", %"class.blink::HeapVectorBacking.3226"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3226"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.14, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.3226"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.3226"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.401"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.401", %"class.blink::Member.401"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.401"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #14
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12DOMSelectionC1EPKNS_9TreeScopeE(%"class.blink::DOMSelection"*, %"class.blink::TreeScope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #14
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2911"*, %"class.blink::TreeScope"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2911"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %16, i64 %18
  %20 = bitcast %"class.blink::TreeScope"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.312"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2911"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %8, align 8
  %10 = icmp eq %"class.blink::Member.312"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.3242"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking.3242"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.2911"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %8, align 8
  %26 = icmp eq %"class.blink::Member.312"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.312"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2911"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2911"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.2911"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.2911"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3242"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3242"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.3242"* %17, null
  %23 = icmp ne %"class.blink::Member.312"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.312"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !10

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.2911"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.2911"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.2911"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.2911", %"class.WTF::Vector.2911"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.11, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.3242"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.14, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.3242"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.3242"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberIKNS1_9TreeScopeEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.312"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.312"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #14, !range !11
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #14
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

declare void @_ZN5blink9EventPathC1ERNS_4NodeEPNS_5EventE(%"class.blink::EventPath"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_9EventPathEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_9EventPathEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9EventPathEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9EventPathEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EventPath"*
  tail call void @_ZNK5blink9EventPath5TraceEPNS_7VisitorE(%"class.blink::EventPath"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_9EventPathEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 32
  %3 = getelementptr inbounds i8, i8* %0, i64 44
  %4 = bitcast i8* %3 to i32*
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = bitcast i8* %2 to %"class.blink::Member.2945"**
  %8 = load %"class.blink::Member.2945"*, %"class.blink::Member.2945"** %7, align 8
  br i1 %6, label %16, label %9, !prof !3

9:                                                ; preds = %1
  %10 = icmp ne %"class.blink::Member.2945"* %8, null
  %11 = getelementptr inbounds i8, i8* %0, i64 48
  %12 = bitcast i8* %11 to %"class.blink::Member.2945"*
  %13 = icmp ne %"class.blink::Member.2945"* %8, %12
  %14 = and i1 %10, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %9
  store i32 0, i32* %4, align 4
  br label %16

16:                                               ; preds = %1, %15, %9
  %17 = getelementptr inbounds i8, i8* %0, i64 48
  %18 = bitcast i8* %17 to %"class.blink::Member.2945"*
  %19 = icmp eq %"class.blink::Member.2945"* %8, %18
  br i1 %19, label %22, label %20, !prof !10

20:                                               ; preds = %16
  %21 = bitcast i8* %2 to %"class.WTF::VectorBuffer.2963"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21TreeScopeEventContextEEELj8ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2963"* %21, %"class.blink::Member.2945"* %8) #14
  br label %22

22:                                               ; preds = %16, %20
  store %"class.blink::Member.2945"* null, %"class.blink::Member.2945"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_9EventPathEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink9EventPath5TraceEPNS_7VisitorE(%"class.blink::EventPath"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_21TreeScopeEventContextEEELj8ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS4_(%"class.WTF::VectorBuffer.2963"*, %"class.blink::Member.2945"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::Member.2945"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #14
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector.2985"*, %"class.blink::TreeScope"** dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2985"* %0, i32 %5) #14
  %6 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %7, i64 %9
  %11 = bitcast %"class.blink::TreeScope"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.312"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #14
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #14
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i8* %15, i8* %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #14
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #14
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2985"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %8, align 8
  %10 = icmp eq %"class.blink::Member.312"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 16
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.3242"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking.3242"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #14
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 16, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.312"*
  %33 = icmp eq %"class.blink::Member.312"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 17
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64 %37) #14
  %39 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %8, align 8
  %40 = icmp eq %"class.blink::Member.312"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 128, %34 ]
  %43 = phi %"class.blink::Member.312"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.312"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #14
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #14
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #14
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !12
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0)) #14
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2985"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %5, align 8
  %7 = icmp eq %"class.blink::Member.312"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.312"*
  %10 = icmp eq %"class.blink::Member.312"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.312"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !3

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #14
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.312"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.312"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #14
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #14
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* %20, %"class.blink::Member.312"* %6) #14
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberIKNS_9TreeScopeEEEEEmm(i64 %44) #14
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking.3242"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberIKNS_9TreeScopeEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #14
  %48 = ptrtoint %"class.blink::HeapVectorBacking.3242"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking.3242"* %47, null
  %53 = icmp ne %"class.blink::Member.312"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !10

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.312"*
  %58 = icmp ne %"class.blink::Member.312"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.312"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #14
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking.3242"* %47 to %"class.blink::Member.312"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.312"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.312"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #14
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.2985"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #14
  %87 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.312"*
  %90 = icmp eq %"class.blink::Member.312"* %87, %89
  br i1 %90, label %93, label %91, !prof !10

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.2986"* %92, %"class.blink::Member.312"* %87) #14
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.2985"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking.3242", %"class.blink::HeapVectorBacking.3242"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #14
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.312"* @_ZN3WTF6VectorIN5blink6MemberIKNS1_9TreeScopeEEELj16ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.2985"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.2985", %"class.WTF::Vector.2985"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.312"*, %"class.blink::Member.312"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.312", %"class.blink::Member.312"* %24, i64 %25
  ret %"class.blink::Member.312"* %26
}

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextIncludingPseudoERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12DOMSelectionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DOMSelection"*
  tail call void @_ZNK5blink12DOMSelection5TraceEPNS_7VisitorE(%"class.blink::DOMSelection"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink12DOMSelection5TraceEPNS_7VisitorE(%"class.blink::DOMSelection"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink21RadioButtonGroupScope5TraceEPNS_7VisitorE(%"class.blink::RadioButtonGroupScope"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { cold noreturn nounwind }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!9 = distinct !{!9, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_4NodeEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!10 = !{!"branch_weights", i32 2000, i32 1}
!11 = !{i32 24, i32 33}
!12 = !{i8 0, i8 2}
