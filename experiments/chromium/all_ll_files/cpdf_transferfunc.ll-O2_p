; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_transferfunc.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_transferfunc.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_TransferFunc = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", i8, %"class.std::__1::vector.133", %"class.std::__1::vector.133", %"class.std::__1::vector.133" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%"class.std::__1::vector.133" = type { %"class.std::__1::__vector_base.134" }
%"class.std::__1::__vector_base.134" = type { i8*, i8*, %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { i8* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.113", %"class.std::__1::vector.119", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.127" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.187", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { float }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.51", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.63", %"class.std::__1::map.69", %"class.std::__1::set.78", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.39" }
%"class.std::__1::map.39" = type { %"class.std::__1::__tree.40" }
%"class.std::__1::__tree.40" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.41", %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.57" }
%"class.fxcrt::RetainPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.69" = type { %"class.std::__1::__tree.70" }
%"class.std::__1::__tree.70" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.71", %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.78" = type { %"class.std::__1::__tree.79" }
%"class.std::__1::__tree.79" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.80", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.89" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.97" }
%"class.fxcrt::UnownedPtr.97" = type { %class.CPDF_Document* }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.97" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { i32*, i32*, %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.126" }
%"class.fxcrt::UnownedPtr.126" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%"class.fxcrt::RetainPtr.138" = type { %"class.std::__1::unique_ptr.139" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %class.CFX_DIBBase* }
%class.CFX_DIBBase = type { %"class.fxcrt::Retainable", i16, i32, i32, i32, %"class.fxcrt::RetainPtr.142", %"class.std::__1::vector.148" }
%"class.fxcrt::RetainPtr.142" = type { %"class.std::__1::unique_ptr.143" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %class.CFX_DIBitmap* }
%class.CFX_DIBitmap = type opaque
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { i32*, i32*, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.fxcrt::RetainPtr.156" = type { %"class.std::__1::unique_ptr.157" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFuncDIB = type { %class.CFX_DIBBase, %"class.fxcrt::RetainPtr.138", %"class.std::__1::vector.133", %"class.fxcrt::RetainPtr.156", %"class.pdfium::span", %"class.pdfium::span", %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.166", i64 }
%"class.fxcrt::UnownedPtr.166" = type { i8* }

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@_ZTV17CPDF_TransferFunc = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_TransferFunc*)* @_ZN17CPDF_TransferFuncD2Ev to i8*), i8* bitcast (void (%class.CPDF_TransferFunc*)* @_ZN17CPDF_TransferFuncD0Ev to i8*)] }, align 8
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8

@_ZN17CPDF_TransferFuncC1EPK13CPDF_DocumentbNSt3__16vectorIh16FxAllocAllocatorIhEEES7_S7_ = hidden unnamed_addr alias void (%class.CPDF_TransferFunc*, %class.CPDF_Document*, i1, %"class.std::__1::vector.133"*, %"class.std::__1::vector.133"*, %"class.std::__1::vector.133"*), void (%class.CPDF_TransferFunc*, %class.CPDF_Document*, i1, %"class.std::__1::vector.133"*, %"class.std::__1::vector.133"*, %"class.std::__1::vector.133"*)* @_ZN17CPDF_TransferFuncC2EPK13CPDF_DocumentbNSt3__16vectorIh16FxAllocAllocatorIhEEES7_S7_
@_ZN17CPDF_TransferFuncD1Ev = hidden unnamed_addr alias void (%class.CPDF_TransferFunc*), void (%class.CPDF_TransferFunc*)* @_ZN17CPDF_TransferFuncD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TransferFuncC2EPK13CPDF_DocumentbNSt3__16vectorIh16FxAllocAllocatorIhEEES7_S7_(%class.CPDF_TransferFunc*, %class.CPDF_Document*, i1 zeroext, %"class.std::__1::vector.133"* nocapture, %"class.std::__1::vector.133"* nocapture, %"class.std::__1::vector.133"* nocapture) unnamed_addr #0 align 2 {
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %10) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17CPDF_TransferFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %11 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 2, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %11, align 8
  %12 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 3
  store i8 %7, i8* %12, align 8
  %13 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4
  %14 = bitcast %"class.std::__1::vector.133"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #8
  %15 = bitcast %"class.std::__1::vector.133"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.133"* %13 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %3, i64 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i8** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast %"class.std::__1::vector.133"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #8
  %29 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5
  %30 = bitcast %"class.std::__1::vector.133"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #8
  %31 = bitcast %"class.std::__1::vector.133"* %4 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector.133"* %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %4, i64 0, i32 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 1
  %38 = bitcast i8** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast i8** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.std::__1::vector.133"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #8
  %45 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6
  %46 = bitcast %"class.std::__1::vector.133"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #8
  %47 = bitcast %"class.std::__1::vector.133"* %5 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector.133"* %45 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %5, i64 0, i32 0, i32 1
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 1
  %54 = bitcast i8** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::vector.133", %"class.std::__1::vector.133"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast i8** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"class.std::__1::vector.133"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TransferFuncD2Ev(%class.CPDF_TransferFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17CPDF_TransferFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %12) #8
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = ptrtoint i8* %20 to i64
  %24 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %20) #8
  br label %26

26:                                               ; preds = %18, %22
  %27 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %27) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TransferFuncD0Ev(%class.CPDF_TransferFunc*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV17CPDF_TransferFunc, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %4) #8
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i8* %12 to i64
  %16 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %12) #8
  br label %18

18:                                               ; preds = %14, %10
  %19 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %18
  %23 = ptrtoint i8* %20 to i64
  %24 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast i8** %24 to i64*
  store i64 %23, i64* %25, align 8
  tail call void @_Z7FX_FreePv(i8* nonnull %20) #8
  br label %26

26:                                               ; preds = %18, %22
  %27 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %27) #8
  %28 = bitcast %class.CPDF_TransferFunc* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK17CPDF_TransferFunc14TranslateColorEj(%class.CPDF_TransferFunc* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %3, 255
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds i8, i8* %7, i64 %5
  %9 = load i8, i8* %8, align 1
  %10 = lshr i32 %1, 8
  %11 = and i32 %10, 255
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %12
  %16 = load i8, i8* %15, align 1
  %17 = and i32 %1, 255
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %0, i64 0, i32 4, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %18
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %9 to i32
  %24 = shl nuw nsw i32 %23, 16
  %25 = zext i8 %16 to i32
  %26 = shl nuw nsw i32 %25, 8
  %27 = or i32 %26, %24
  %28 = zext i8 %22 to i32
  %29 = or i32 %27, %28
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17CPDF_TransferFunc14TranslateImageERKN5fxcrt9RetainPtrI11CFX_DIBBaseEE(%"class.fxcrt::RetainPtr.138"* noalias nocapture sret, %class.CPDF_TransferFunc*, %"class.fxcrt::RetainPtr.138"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.156", align 8
  %5 = bitcast %"class.fxcrt::RetainPtr.156"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.fxcrt::RetainPtr.156", %"class.fxcrt::RetainPtr.156"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = ptrtoint %class.CPDF_TransferFunc* %1 to i64
  %8 = bitcast %"class.fxcrt::RetainPtr.156"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = icmp eq %class.CPDF_TransferFunc* %1, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8
  br label %14

14:                                               ; preds = %10, %3
  %15 = tail call i8* @_Znwm(i64 152) #9, !noalias !2
  %16 = bitcast i8* %15 to %class.CPDF_TransferFuncDIB*
  call void @_ZN20CPDF_TransferFuncDIBC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERKNS1_I17CPDF_TransferFuncEE(%class.CPDF_TransferFuncDIB* nonnull %16, %"class.fxcrt::RetainPtr.138"* dereferenceable(8) %2, %"class.fxcrt::RetainPtr.156"* nonnull dereferenceable(8) %4) #8, !noalias !2
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 8
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !2
  %21 = add nsw i64 %20, 1
  %22 = bitcast %"class.fxcrt::RetainPtr.138"* %0 to i64*
  store i64 %17, i64* %22, align 8
  store i64 %21, i64* %19, align 8
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %14
  %25 = bitcast i8* %15 to %"class.fxcrt::Retainable"*
  %26 = bitcast i8* %15 to void (%"class.fxcrt::Retainable"*)***
  %27 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %27, i64 1
  %29 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %28, align 8
  call void %29(%"class.fxcrt::Retainable"* nonnull %25) #8
  br label %30

30:                                               ; preds = %14, %24
  %31 = load %class.CPDF_TransferFunc*, %class.CPDF_TransferFunc** %6, align 8
  store %class.CPDF_TransferFunc* null, %class.CPDF_TransferFunc** %6, align 8
  %32 = icmp eq %class.CPDF_TransferFunc* %31, null
  br i1 %32, label %44, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %31, i64 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add nsw i64 %35, -1
  store i64 %36, i64* %34, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %33
  %39 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %31, i64 0, i32 0
  %40 = bitcast %class.CPDF_TransferFunc* %31 to void (%"class.fxcrt::Retainable"*)***
  %41 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %41, i64 1
  %43 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %42, align 8
  call void %43(%"class.fxcrt::Retainable"* nonnull %39) #8
  br label %44

44:                                               ; preds = %30, %33, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17CPDF_TransferFunc11GetSamplesREv(%"class.pdfium::span"* noalias nocapture sret, %class.CPDF_TransferFunc* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 4
  %4 = bitcast %"class.std::__1::vector.133"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 4, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %5
  %10 = bitcast %"class.pdfium::span"* %0 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  store i64 %9, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17CPDF_TransferFunc11GetSamplesGEv(%"class.pdfium::span"* noalias nocapture sret, %class.CPDF_TransferFunc* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 5
  %4 = bitcast %"class.std::__1::vector.133"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 5, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %5
  %10 = bitcast %"class.pdfium::span"* %0 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  store i64 %9, i64* %11, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK17CPDF_TransferFunc11GetSamplesBEv(%"class.pdfium::span"* noalias nocapture sret, %class.CPDF_TransferFunc* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 6
  %4 = bitcast %"class.std::__1::vector.133"* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %class.CPDF_TransferFunc, %class.CPDF_TransferFunc* %1, i64 0, i32 6, i32 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %5
  %10 = bitcast %"class.pdfium::span"* %0 to i64*
  store i64 %5, i64* %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %0, i64 0, i32 1
  store i64 %9, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN20CPDF_TransferFuncDIBC1ERKN5fxcrt9RetainPtrI11CFX_DIBBaseEERKNS1_I17CPDF_TransferFuncEE(%class.CPDF_TransferFuncDIB*, %"class.fxcrt::RetainPtr.138"* dereferenceable(8), %"class.fxcrt::RetainPtr.156"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI20CPDF_TransferFuncDIBJRKN5fxcrt9RetainPtrI11CFX_DIBBaseEERNS3_I17CPDF_TransferFuncEEEEENS3_IT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI20CPDF_TransferFuncDIBJRKN5fxcrt9RetainPtrI11CFX_DIBBaseEERNS3_I17CPDF_TransferFuncEEEEENS3_IT_EEDpOT0_"}
