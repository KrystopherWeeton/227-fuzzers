; ModuleID = 'gen/third_party/blink/public/mojom/manifest/manifest_observer.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/manifest/manifest_observer.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter" = type { %"class.blink::mojom::blink::ManifestUrlChangeObserver"* }
%"class.blink::mojom::blink::ManifestUrlChangeObserver" = type { i32 (...)** }
%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting" = type { %"class.blink::mojom::blink::ManifestUrlChangeObserver" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::KURL" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }

$_ZN5blink5mojom5blink25ManifestUrlChangeObserverD2Ev = comdat any

$_ZN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTestingD0Ev = comdat any

@_ZTVN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTestingE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*)* @_ZN5blink5mojom5blink25ManifestUrlChangeObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)* @_ZN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*, %"class.absl::optional"*)* @_ZN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTesting18ManifestUrlChangedERKN4absl8optionalINS_4KURLEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterC1EPNS1_25ManifestUrlChangeObserverE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"*, %"class.blink::mojom::blink::ManifestUrlChangeObserver"*), void (%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"*, %"class.blink::mojom::blink::ManifestUrlChangeObserver"*)* @_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterC2EPNS1_25ManifestUrlChangeObserverE
@_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"*), void (%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"*)* @_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTesting18ManifestUrlChangedERKN4absl8optionalINS_4KURLEEE(%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*, %"class.absl::optional"* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)**, %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)** %4, i64 3
  %6 = load %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)*, %"class.blink::mojom::blink::ManifestUrlChangeObserver"* (%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::ManifestUrlChangeObserver"* %6(%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"* %0) #5
  %8 = bitcast %"class.blink::mojom::blink::ManifestUrlChangeObserver"* %7 to void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)***
  %9 = load void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)**, void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)*, void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)** %9, i64 2
  %11 = load void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)*, void (%"class.blink::mojom::blink::ManifestUrlChangeObserver"*, %"class.absl::optional"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::ManifestUrlChangeObserver"* %7, %"class.absl::optional"* dereferenceable(120) %1) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterC2EPNS1_25ManifestUrlChangeObserverE(%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ManifestUrlChangeObserver"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter", %"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlChangeObserver"* %1, %"class.blink::mojom::blink::ManifestUrlChangeObserver"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink36ManifestUrlChangeObserverAsyncWaiterD2Ev(%"class.blink::mojom::blink::ManifestUrlChangeObserverAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink25ManifestUrlChangeObserverD2Ev(%"class.blink::mojom::blink::ManifestUrlChangeObserver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink46ManifestUrlChangeObserverInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ManifestUrlChangeObserverInterceptorForTesting"*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #6
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
