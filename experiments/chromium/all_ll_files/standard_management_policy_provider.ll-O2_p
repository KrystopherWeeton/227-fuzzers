; ModuleID = '../../chrome/browser/extensions/standard_management_policy_provider.cc'
source_filename = "../../chrome/browser/extensions/standard_management_policy_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::StandardManagementPolicyProvider" = type { %"class.extensions::ManagementPolicy::Provider", %"class.extensions::ExtensionManagement"* }
%"class.extensions::ManagementPolicy::Provider" = type { i32 (...)** }
%"class.extensions::ExtensionManagement" = type { %class.KeyedService, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.18", %class.Profile*, %class.PrefService*, i8, i8, [6 x i8], %"class.base::ObserverList", %class.PrefChangeRegistrar, %"class.std::__1::vector.36" }
%class.KeyedService = type { i32 (...)** }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.extensions::internal::IndividualSettings"* }
%"struct.extensions::internal::IndividualSettings" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::internal::GlobalSettings"* }
%"struct.extensions::internal::GlobalSettings" = type opaque
%class.Profile = type opaque
%class.PrefService = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.24" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.PrefChangeRegistrar = type { %class.PrefObserver, %"class.std::__1::map", %class.PrefService* }
%class.PrefObserver = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.std::__1::unique_ptr.38"*, %"class.std::__1::unique_ptr.38"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::unique_ptr.38" = type opaque
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.std::__1::unique_ptr.38"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.65", %"class.std::__1::vector.71", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.91", %"class.std::__1::map.132", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.49" }
%"struct.std::__1::__atomic_base.49" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.50" }
%"class.std::__1::__tree.50" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.51", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.73" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.78" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.84" }
%"class.std::__1::vector.84" = type { %"class.std::__1::__vector_base.85" }
%"class.std::__1::__vector_base.85" = type { i32*, i32*, %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i32* }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.94", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.97" }
%"union.absl::variant_internal::DestructibleUnionImpl.97" = type { %"union.absl::variant_internal::DestructibleUnionImpl.98" }
%"union.absl::variant_internal::DestructibleUnionImpl.98" = type { %"union.absl::variant_internal::DestructibleUnionImpl.99" }
%"union.absl::variant_internal::DestructibleUnionImpl.99" = type { %"union.absl::variant_internal::DestructibleUnionImpl.100" }
%"union.absl::variant_internal::DestructibleUnionImpl.100" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.144 }
%union.anon.144 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.145 }
%struct.anon.145 = type { %"struct.std::__1::__padding.146", i8 }
%"struct.std::__1::__padding.146" = type { [1 x i8] }

@_ZTVN10extensions32StandardManagementPolicyProviderE = hidden unnamed_addr constant { [13 x i8*] } { [13 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.extensions::StandardManagementPolicyProvider"*)* @_ZN10extensions32StandardManagementPolicyProviderD2Ev to i8*), i8* bitcast (void (%"class.extensions::StandardManagementPolicyProvider"*)* @_ZN10extensions32StandardManagementPolicyProviderD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.extensions::StandardManagementPolicyProvider"*)* @_ZNK10extensions32StandardManagementPolicyProvider26GetDebugPolicyProviderNameEv to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider11UserMayLoadEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider14UserMayInstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider21UserMayModifySettingsEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider26ExtensionMayModifySettingsEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider17MustRemainEnabledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, i32*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider18MustRemainDisabledEPKNS_9ExtensionEPNS_14disable_reason13DisableReasonEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider19MustRemainInstalledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*), i8* bitcast (i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)* @_ZNK10extensions32StandardManagementPolicyProvider20ShouldForceUninstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE to i8*)] }, align 8
@_ZN14extension_misc12kCameraAppIdE = external constant [0 x i8], align 1

@_ZN10extensions32StandardManagementPolicyProviderC1EPKNS_19ExtensionManagementE = hidden unnamed_addr alias void (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::ExtensionManagement"*), void (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::ExtensionManagement"*)* @_ZN10extensions32StandardManagementPolicyProviderC2EPKNS_19ExtensionManagementE
@_ZN10extensions32StandardManagementPolicyProviderD1Ev = hidden unnamed_addr alias void (%"class.extensions::StandardManagementPolicyProvider"*), void (%"class.extensions::StandardManagementPolicyProvider"*)* @_ZN10extensions32StandardManagementPolicyProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN10extensions32StandardManagementPolicyProviderC2EPKNS_19ExtensionManagementE(%"class.extensions::StandardManagementPolicyProvider"* nocapture, %"class.extensions::ExtensionManagement"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN10extensions32StandardManagementPolicyProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  store %"class.extensions::ExtensionManagement"* %1, %"class.extensions::ExtensionManagement"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10extensions32StandardManagementPolicyProviderD2Ev(%"class.extensions::StandardManagementPolicyProvider"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions32StandardManagementPolicyProviderD0Ev(%"class.extensions::StandardManagementPolicyProvider"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.extensions::StandardManagementPolicyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZNK10extensions32StandardManagementPolicyProvider26GetDebugPolicyProviderNameEv(%"class.std::__1::basic_string"* noalias nocapture readnone sret, %"class.extensions::StandardManagementPolicyProvider"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !2
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !3
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider11UserMayLoadEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readonly, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #9
  switch i32 %4, label %20 [
    i32 10, label %5
    i32 5, label %5
  ]

5:                                                ; preds = %3, %3
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #9
  %7 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kCameraAppIdE, i64 0, i64 0)) #9
  %8 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %7, %15
  br i1 %16, label %17, label %45

17:                                               ; preds = %5
  %18 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %6, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN14extension_misc12kCameraAppIdE, i64 0, i64 0), i64 %7) #9
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %45

20:                                               ; preds = %17, %3
  %21 = tail call zeroext i1 @_ZNK10extensions9Extension16is_shared_moduleEv(%"class.extensions::Extension"* %1) #9
  br i1 %21, label %45, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 23
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 16
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %45

27:                                               ; preds = %22
  %28 = tail call i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"* %1) #9
  %29 = add i32 %28, -1
  %30 = icmp ult i32 %29, 8
  br i1 %30, label %31, label %39

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %33 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %32, align 8
  %34 = tail call i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"* %1) #9
  %35 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #9
  %36 = tail call zeroext i1 @_ZNK10extensions19ExtensionManagement21IsAllowedManifestTypeENS_8Manifest4TypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.extensions::ExtensionManagement"* %33, i32 %34, %"class.std::__1::basic_string"* dereferenceable(24) %35) #9
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = tail call zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider15ReturnLoadErrorEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* %0, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2)
  br label %45

39:                                               ; preds = %27, %31
  %40 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %41 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %40, align 8
  %42 = tail call i32 @_ZNK10extensions19ExtensionManagement19GetInstallationModeEPKNS_9ExtensionE(%"class.extensions::ExtensionManagement"* %41, %"class.extensions::Extension"* %1) #9
  switch i32 %42, label %45 [
    i32 4, label %43
    i32 1, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = tail call zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider15ReturnLoadErrorEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* %0, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2)
  br label %45

45:                                               ; preds = %22, %17, %5, %43, %39, %20, %37
  %46 = phi i1 [ false, %37 ], [ true, %17 ], [ true, %20 ], [ true, %22 ], [ false, %43 ], [ true, %39 ], [ true, %5 ]
  ret i1 %46
}

declare i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"*) local_unnamed_addr #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK10extensions9Extension16is_shared_moduleEv(%"class.extensions::Extension"*) local_unnamed_addr #6

declare i32 @_ZNK10extensions9Extension7GetTypeEv(%"class.extensions::Extension"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK10extensions19ExtensionManagement21IsAllowedManifestTypeENS_8Manifest4TypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.extensions::ExtensionManagement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider15ReturnLoadErrorEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readonly, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string.141", align 8
  %5 = alloca %"class.std::__1::basic_string.141", align 8
  %6 = alloca %"class.std::__1::basic_string.141", align 8
  %7 = alloca %"class.std::__1::basic_string.141", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = icmp eq %"class.std::__1::basic_string.141"* %2, null
  br i1 %9, label %97, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string.141"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = bitcast %"class.std::__1::basic_string.141"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %5, i8* %21, i64 %25) #9
  %26 = bitcast %"class.std::__1::basic_string.141"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #9
  %27 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #9
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  %35 = select i1 %31, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %30 to i64
  %39 = select i1 %31, i64 %37, i64 %38
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %6, i8* %35, i64 %39) #9
  %40 = bitcast %"class.std::__1::basic_string.141"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #9
  %41 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #9
  %42 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %43 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %42, align 8
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10extensions9Extension2idEv(%"class.extensions::Extension"* %1) #9
  call void @_ZNK10extensions19ExtensionManagement21BlockedInstallMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.extensions::ExtensionManagement"* %43, %"class.std::__1::basic_string"* dereferenceable(24) %44) #9
  %45 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = select i1 %48, i8* %50, i8* %41
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %47 to i64
  %55 = select i1 %48, i64 %53, i64 %54
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %7, i8* %51, i64 %55) #9
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.141"* nonnull sret %4, i32 24349, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %7) #9
  %56 = bitcast %"class.std::__1::basic_string.141"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %56, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %10
  %61 = bitcast %"class.std::__1::basic_string.141"* %2 to i8**
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #8
  br label %63

63:                                               ; preds = %60, %10
  %64 = bitcast %"class.std::__1::basic_string.141"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* nonnull align 8 %11, i64 24, i1 false) #9
  %65 = bitcast %"class.std::__1::basic_string.141"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %65, i64 0, i32 1, i32 1
  store i8 0, i8* %66, align 1
  %67 = bitcast %"class.std::__1::basic_string.141"* %4 to i16*
  store i16 0, i16* %67, align 8
  %68 = bitcast %"class.std::__1::basic_string.141"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %63
  %73 = bitcast %"class.std::__1::basic_string.141"* %7 to i8**
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %63, %72
  %76 = load i8, i8* %46, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %79) #8
  br label %80

80:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #9
  %81 = bitcast %"class.std::__1::basic_string.141"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %81, i64 0, i32 1, i32 1
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = bitcast %"class.std::__1::basic_string.141"* %6 to i8**
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #8
  br label %88

88:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #9
  %89 = bitcast %"class.std::__1::basic_string.141"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %90 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %89, i64 0, i32 1, i32 1
  %91 = load i8, i8* %90, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = bitcast %"class.std::__1::basic_string.141"* %5 to i8**
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #8
  br label %96

96:                                               ; preds = %88, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  br label %97

97:                                               ; preds = %3, %96
  ret i1 false
}

declare i32 @_ZNK10extensions19ExtensionManagement19GetInstallationModeEPKNS_9ExtensionE(%"class.extensions::ExtensionManagement"*, %"class.extensions::Extension"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider14UserMayInstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %5 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %4, align 8
  %6 = tail call i32 @_ZNK10extensions19ExtensionManagement19GetInstallationModeEPKNS_9ExtensionE(%"class.extensions::ExtensionManagement"* %5, %"class.extensions::Extension"* %1) #9
  %7 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #9
  %8 = icmp eq i32 %6, 2
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  switch i32 %7, label %10 [
    i32 9, label %12
    i32 7, label %12
  ]

10:                                               ; preds = %9
  %11 = tail call zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider15ReturnLoadErrorEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* %0, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2)
  br label %18

12:                                               ; preds = %9, %9, %3
  %13 = bitcast %"class.extensions::StandardManagementPolicyProvider"* %0 to i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)***
  %14 = load i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)**, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)** %14, i64 3
  %16 = load i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.extensions::StandardManagementPolicyProvider"* %0, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2) #9
  br label %18

18:                                               ; preds = %12, %10
  %19 = phi i1 [ false, %10 ], [ %17, %12 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider21UserMayModifySettingsEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = tail call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_123AdminPolicyIsModifiableEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::Extension"* null, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_123AdminPolicyIsModifiableEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::Extension"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 {
  %4 = alloca %"class.std::__1::basic_string.141", align 8
  %5 = alloca %"class.std::__1::basic_string.141", align 8
  %6 = icmp eq %"class.extensions::Extension"* %0, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %3
  %8 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* nonnull %0) #9
  switch i32 %8, label %9 [
    i32 10, label %14
    i32 5, label %14
  ]

9:                                                ; preds = %7
  %10 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* nonnull %0) #9
  %11 = icmp eq i32 %10, 9
  %12 = icmp eq i32 %10, 7
  %13 = or i1 %11, %12
  br label %14

14:                                               ; preds = %7, %7, %3, %9
  %15 = phi i1 [ false, %3 ], [ true, %7 ], [ %13, %9 ], [ true, %7 ]
  %16 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #9
  br i1 %15, label %26, label %17

17:                                               ; preds = %14
  %18 = icmp ne i32 %16, 5
  %19 = icmp ne i32 %16, 10
  %20 = and i1 %18, %19
  %21 = tail call i32 @_ZNK10extensions9Extension8locationEv(%"class.extensions::Extension"* %1) #9
  %22 = icmp ne i32 %21, 9
  %23 = icmp ne i32 %21, 7
  %24 = and i1 %22, %23
  %25 = and i1 %20, %24
  br i1 %25, label %65, label %27

26:                                               ; preds = %14
  switch i32 %16, label %65 [
    i32 10, label %27
    i32 5, label %27
  ]

27:                                               ; preds = %26, %26, %17
  %28 = icmp eq %"class.std::__1::basic_string.141"* %2, null
  br i1 %28, label %65, label %29

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string.141"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %31 = bitcast %"class.std::__1::basic_string.141"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %40 = select i1 %36, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = zext i8 %35 to i64
  %44 = select i1 %36, i64 %42, i64 %43
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %5, i8* %40, i64 %44) #9
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.141"* nonnull sret %4, i32 24350, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %5) #9
  %45 = bitcast %"class.std::__1::basic_string.141"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %29
  %50 = bitcast %"class.std::__1::basic_string.141"* %2 to i8**
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #8
  br label %52

52:                                               ; preds = %49, %29
  %53 = bitcast %"class.std::__1::basic_string.141"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* nonnull align 8 %30, i64 24, i1 false) #9
  %54 = bitcast %"class.std::__1::basic_string.141"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  store i8 0, i8* %55, align 1
  %56 = bitcast %"class.std::__1::basic_string.141"* %4 to i16*
  store i16 0, i16* %56, align 8
  %57 = bitcast %"class.std::__1::basic_string.141"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %57, i64 0, i32 1, i32 1
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %52
  %62 = bitcast %"class.std::__1::basic_string.141"* %5 to i8**
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #8
  br label %64

64:                                               ; preds = %52, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  br label %65

65:                                               ; preds = %26, %17, %64, %27
  %66 = phi i1 [ true, %26 ], [ false, %27 ], [ false, %64 ], [ true, %17 ]
  ret i1 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider26ExtensionMayModifySettingsEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readnone, %"class.extensions::Extension"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %5 = tail call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_123AdminPolicyIsModifiableEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::Extension"* %1, %"class.extensions::Extension"* %2, %"class.std::__1::basic_string.141"* %3)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider17MustRemainEnabledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readnone, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = tail call fastcc zeroext i1 @_ZN10extensions12_GLOBAL__N_123AdminPolicyIsModifiableEPKNS_9ExtensionES3_PNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::Extension"* null, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2)
  %5 = xor i1 %4, true
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider18MustRemainDisabledEPKNS_9ExtensionEPNS_14disable_reason13DisableReasonEPNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readonly, %"class.extensions::Extension"*, i32*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string.141", align 8
  %7 = alloca %"class.std::__1::basic_string.141", align 8
  %8 = alloca %"class.std::__1::basic_string.141", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %13 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %12, align 8
  %14 = call zeroext i1 @_ZNK10extensions19ExtensionManagement19CheckMinimumVersionEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::ExtensionManagement"* %13, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string"* nonnull %5) #9
  br i1 %14, label %74, label %15

15:                                               ; preds = %4
  %16 = icmp eq i32* %2, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %15
  store i32 16384, i32* %2, align 4
  br label %18

18:                                               ; preds = %15, %17
  %19 = icmp eq %"class.std::__1::basic_string.141"* %3, null
  br i1 %19, label %74, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.std::__1::basic_string.141"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #9
  %22 = bitcast %"class.std::__1::basic_string.141"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %31 = select i1 %27, i8* %29, i8* %30
  %32 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %26 to i64
  %35 = select i1 %27, i64 %33, i64 %34
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %7, i8* %31, i64 %35) #9
  %36 = bitcast %"class.std::__1::basic_string.141"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #9
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %10, align 8
  %42 = select i1 %40, i8* %41, i8* %9
  %43 = load i64, i64* %11, align 8
  %44 = zext i8 %39 to i64
  %45 = select i1 %40, i64 %43, i64 %44
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %8, i8* %42, i64 %45) #9
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.141"* nonnull sret %6, i32 24352, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %8) #9
  %46 = bitcast %"class.std::__1::basic_string.141"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %20
  %51 = bitcast %"class.std::__1::basic_string.141"* %3 to i8**
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #8
  br label %53

53:                                               ; preds = %50, %20
  %54 = bitcast %"class.std::__1::basic_string.141"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* nonnull align 8 %21, i64 24, i1 false) #9
  %55 = bitcast %"class.std::__1::basic_string.141"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  store i8 0, i8* %56, align 1
  %57 = bitcast %"class.std::__1::basic_string.141"* %6 to i16*
  store i16 0, i16* %57, align 8
  %58 = bitcast %"class.std::__1::basic_string.141"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %58, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %53
  %63 = bitcast %"class.std::__1::basic_string.141"* %8 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #8
  br label %65

65:                                               ; preds = %53, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #9
  %66 = bitcast %"class.std::__1::basic_string.141"* %7 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = bitcast %"class.std::__1::basic_string.141"* %7 to i8**
  %72 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %72) #8
  br label %73

73:                                               ; preds = %65, %70
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #9
  br label %74

74:                                               ; preds = %4, %73, %18
  %75 = phi i1 [ true, %18 ], [ true, %73 ], [ false, %4 ]
  %76 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %74
  %81 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %81) #8
  br label %82

82:                                               ; preds = %74, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret i1 %75
}

declare zeroext i1 @_ZNK10extensions19ExtensionManagement19CheckMinimumVersionEPKNS_9ExtensionEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.extensions::ExtensionManagement"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string"*) local_unnamed_addr #6

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.141"* sret, i32, %"class.std::__1::basic_string.141"* dereferenceable(24), %"class.std::__1::basic_string.141"* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* sret, i8*, i64) local_unnamed_addr #6

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* sret, i8*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider19MustRemainInstalledEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"* nocapture readonly, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::basic_string.141", align 8
  %5 = alloca %"class.std::__1::basic_string.141", align 8
  %6 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %7 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %6, align 8
  %8 = tail call i32 @_ZNK10extensions19ExtensionManagement19GetInstallationModeEPKNS_9ExtensionE(%"class.extensions::ExtensionManagement"* %7, %"class.extensions::Extension"* %1) #9
  %9 = or i32 %8, 1
  %10 = icmp eq i32 %9, 3
  br i1 %10, label %11, label %49

11:                                               ; preds = %3
  %12 = icmp eq %"class.std::__1::basic_string.141"* %2, null
  br i1 %12, label %49, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.std::__1::basic_string.141"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = bitcast %"class.std::__1::basic_string.141"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %24 = select i1 %20, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.extensions::Extension", %"class.extensions::Extension"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = zext i8 %19 to i64
  %28 = select i1 %20, i64 %26, i64 %27
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.141"* nonnull sret %5, i8* %24, i64 %28) #9
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.141"* nonnull sret %4, i32 24351, %"class.std::__1::basic_string.141"* nonnull dereferenceable(24) %5) #9
  %29 = bitcast %"class.std::__1::basic_string.141"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %29, i64 0, i32 1, i32 1
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %13
  %34 = bitcast %"class.std::__1::basic_string.141"* %2 to i8**
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #8
  br label %36

36:                                               ; preds = %33, %13
  %37 = bitcast %"class.std::__1::basic_string.141"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %14, i64 24, i1 false) #9
  %38 = bitcast %"class.std::__1::basic_string.141"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  store i8 0, i8* %39, align 1
  %40 = bitcast %"class.std::__1::basic_string.141"* %4 to i16*
  store i16 0, i16* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string.141"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = bitcast %"class.std::__1::basic_string.141"* %5 to i8**
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %36, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  br label %49

49:                                               ; preds = %3, %48, %11
  %50 = phi i1 [ true, %11 ], [ true, %48 ], [ false, %3 ]
  ret i1 %50
}

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.141"* sret, i32, %"class.std::__1::basic_string.141"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10extensions32StandardManagementPolicyProvider20ShouldForceUninstallEPKNS_9ExtensionEPNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*) unnamed_addr #2 align 2 {
  %4 = bitcast %"class.extensions::StandardManagementPolicyProvider"* %0 to i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)***
  %5 = load i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)**, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)** %5, i64 3
  %7 = load i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)*, i1 (%"class.extensions::StandardManagementPolicyProvider"*, %"class.extensions::Extension"*, %"class.std::__1::basic_string.141"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.extensions::StandardManagementPolicyProvider"* %0, %"class.extensions::Extension"* %1, %"class.std::__1::basic_string.141"* %2) #9
  br i1 %8, label %14, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.extensions::StandardManagementPolicyProvider", %"class.extensions::StandardManagementPolicyProvider"* %0, i64 0, i32 1
  %11 = load %"class.extensions::ExtensionManagement"*, %"class.extensions::ExtensionManagement"** %10, align 8
  %12 = tail call i32 @_ZNK10extensions19ExtensionManagement19GetInstallationModeEPKNS_9ExtensionE(%"class.extensions::ExtensionManagement"* %11, %"class.extensions::Extension"* %1) #9
  %13 = icmp eq i32 %12, 4
  br label %14

14:                                               ; preds = %9, %3
  %15 = phi i1 [ false, %3 ], [ %13, %9 ]
  ret i1 %15
}

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_S8_(%"class.std::__1::basic_string.141"* sret, i32, %"class.std::__1::basic_string.141"* dereferenceable(24), %"class.std::__1::basic_string.141"* dereferenceable(24), %"class.std::__1::basic_string.141"* dereferenceable(24)) local_unnamed_addr #6

declare void @_ZNK10extensions19ExtensionManagement21BlockedInstallMessageERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.extensions::ExtensionManagement"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2139064224}
!3 = !{i32 -2139064203}
