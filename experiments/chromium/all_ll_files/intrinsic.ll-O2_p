; ModuleID = '../../third_party/dawn/third_party/tint/src/sem/intrinsic.cc'
source_filename = "../../third_party/dawn/third_party/tint/src/sem/intrinsic.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.tint::TypeInfo" = type { %"struct.tint::TypeInfo"*, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.tint::sem::Intrinsic" = type <{ %"class.tint::Castable", i32, [4 x i8] }>
%"class.tint::Castable" = type { %"class.tint::sem::CallTarget" }
%"class.tint::sem::CallTarget" = type { %"class.tint::Castable.0", %"class.tint::sem::Type"*, %"class.std::__1::vector" }
%"class.tint::Castable.0" = type { %"class.tint::sem::Node" }
%"class.tint::sem::Node" = type { %"class.tint::Castable.1" }
%"class.tint::Castable.1" = type { %"class.tint::CastableBase" }
%"class.tint::CastableBase" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.tint::sem::Parameter"*, %"struct.tint::sem::Parameter"*, %"class.std::__1::__compressed_pair" }
%"struct.tint::sem::Parameter" = type <{ %"class.tint::sem::Type"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.tint::sem::Parameter"* }
%"class.tint::sem::Type" = type { %"class.tint::Castable.2" }
%"class.tint::Castable.2" = type { %"class.tint::sem::Node" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNK4tint8CastableINS_3sem9IntrinsicENS1_10CallTargetEE8TypeInfoEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN4tint6detail10TypeInfoOfINS_3sem10CallTargetEE4infoE = external global %"struct.tint::TypeInfo", align 8
@.str = private unnamed_addr constant [21 x i8] c"tint::sem::Intrinsic\00", align 1
@_ZN4tint6detail10TypeInfoOfINS_3sem9IntrinsicEE4infoE = hidden constant %"struct.tint::TypeInfo" { %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem10CallTargetEE4infoE, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i32 0, i32 0) }, align 8
@.str.1 = private unnamed_addr constant [19 x i8] c"<not-an-intrinsic>\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"acos\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"arrayLength\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"asin\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"atan2\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"clamp\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"cosh\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"countOneBits\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"cross\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"determinant\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"distance\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"dot\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"dpdx\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"dpdxCoarse\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"dpdxFine\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"dpdy\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"dpdyCoarse\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"dpdyFine\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"exp2\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"faceForward\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"fma\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"frexp\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"fwidth\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"fwidthCoarse\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"fwidthFine\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"inverseSqrt\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"isFinite\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"isInf\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"isNan\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"isNormal\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"ldexp\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.45 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"mix\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"modf\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"pack4x8snorm\00", align 1
@.str.50 = private unnamed_addr constant [13 x i8] c"pack4x8unorm\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"pack2x16snorm\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c"pack2x16unorm\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"pack2x16float\00", align 1
@.str.54 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"reflect\00", align 1
@.str.56 = private unnamed_addr constant [12 x i8] c"reverseBits\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"round\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.60 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c"sinh\00", align 1
@.str.62 = private unnamed_addr constant [11 x i8] c"smoothStep\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"storageBarrier\00", align 1
@.str.66 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.67 = private unnamed_addr constant [5 x i8] c"tanh\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"textureDimensions\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"textureLoad\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"textureNumLayers\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"textureNumLevels\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"textureNumSamples\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"textureSample\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"textureSampleBias\00", align 1
@.str.75 = private unnamed_addr constant [21 x i8] c"textureSampleCompare\00", align 1
@.str.76 = private unnamed_addr constant [18 x i8] c"textureSampleGrad\00", align 1
@.str.77 = private unnamed_addr constant [19 x i8] c"textureSampleLevel\00", align 1
@.str.78 = private unnamed_addr constant [13 x i8] c"textureStore\00", align 1
@.str.79 = private unnamed_addr constant [6 x i8] c"trunc\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"unpack2x16float\00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"unpack2x16snorm\00", align 1
@.str.82 = private unnamed_addr constant [16 x i8] c"unpack2x16unorm\00", align 1
@.str.83 = private unnamed_addr constant [15 x i8] c"unpack4x8snorm\00", align 1
@.str.84 = private unnamed_addr constant [15 x i8] c"unpack4x8unorm\00", align 1
@.str.85 = private unnamed_addr constant [17 x i8] c"workgroupBarrier\00", align 1
@.str.86 = private unnamed_addr constant [10 x i8] c"<unknown>\00", align 1
@_ZTVN4tint3sem9IntrinsicE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.tint::sem::Intrinsic"*)* @_ZN4tint3sem9IntrinsicD2Ev to i8*), i8* bitcast (void (%"class.tint::sem::Intrinsic"*)* @_ZN4tint3sem9IntrinsicD0Ev to i8*), i8* bitcast (%"struct.tint::TypeInfo"* (%"class.tint::Castable"*)* @_ZNK4tint8CastableINS_3sem9IntrinsicENS1_10CallTargetEE8TypeInfoEv to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN4tint3sem3strENS0_13IntrinsicTypeE = private unnamed_addr constant [85 x i8*] [i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i64 0, i64 0)], align 8

@_ZN4tint3sem9IntrinsicC1ENS0_13IntrinsicTypeEPNS0_4TypeERKNSt3__16vectorINS0_9ParameterENS5_9allocatorIS7_EEEE = hidden unnamed_addr alias void (%"class.tint::sem::Intrinsic"*, i32, %"class.tint::sem::Type"*, %"class.std::__1::vector"*), void (%"class.tint::sem::Intrinsic"*, i32, %"class.tint::sem::Type"*, %"class.std::__1::vector"*)* @_ZN4tint3sem9IntrinsicC2ENS0_13IntrinsicTypeEPNS0_4TypeERKNSt3__16vectorINS0_9ParameterENS5_9allocatorIS7_EEEE
@_ZN4tint3sem9IntrinsicD1Ev = hidden unnamed_addr alias void (%"class.tint::sem::Intrinsic"*), void (%"class.tint::sem::Intrinsic"*)* @_ZN4tint3sem9IntrinsicD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4tint3semlsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_13IntrinsicTypeE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), i32) local_unnamed_addr #0 {
  %3 = tail call i8* @_ZN4tint3sem3strENS0_13IntrinsicTypeE(i32 %1)
  %4 = tail call i64 @strlen(i8* %3) #9
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %3, i64 %4) #9
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN4tint3sem3strENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, 1
  %3 = icmp ult i32 %2, 85
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds [85 x i8*], [85 x i8*]* @switch.table._ZN4tint3sem3strENS0_13IntrinsicTypeE, i64 0, i64 %5
  %7 = load i8*, i8** %6, align 8
  ret i8* %7

8:                                                ; preds = %1
  ret i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.86, i64 0, i64 0)
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK4tint3sem9Intrinsic3strEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = tail call i8* @_ZN4tint3sem3strENS0_13IntrinsicTypeE(i32 %3)
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4tint3sem18ParseIntrinsicTypeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = zext i8 %4 to i64
  %9 = select i1 %5, i64 %7, i64 %8
  %10 = icmp eq i64 %9, 18
  br i1 %10, label %11, label %18

11:                                               ; preds = %1
  %12 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i64 18) #9
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %1191, label %14

14:                                               ; preds = %11
  %15 = load i8, i8* %3, align 1
  %16 = load i64, i64* %6, align 8
  %17 = zext i8 %15 to i64
  br label %18

18:                                               ; preds = %14, %1
  %19 = phi i64 [ %17, %14 ], [ %8, %1 ]
  %20 = phi i64 [ %16, %14 ], [ %7, %1 ]
  %21 = phi i8 [ %15, %14 ], [ %4, %1 ]
  %22 = icmp slt i8 %21, 0
  %23 = select i1 %22, i64 %20, i64 %19
  %24 = icmp eq i64 %23, 3
  br i1 %24, label %25, label %32

25:                                               ; preds = %18
  %26 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #9
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %1191, label %28

28:                                               ; preds = %25
  %29 = load i8, i8* %3, align 1
  %30 = load i64, i64* %6, align 8
  %31 = zext i8 %29 to i64
  br label %32

32:                                               ; preds = %28, %18
  %33 = phi i64 [ %31, %28 ], [ %19, %18 ]
  %34 = phi i64 [ %30, %28 ], [ %20, %18 ]
  %35 = phi i8 [ %29, %28 ], [ %21, %18 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 4
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #9
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %1191, label %42

42:                                               ; preds = %39
  %43 = load i8, i8* %3, align 1
  %44 = load i64, i64* %6, align 8
  %45 = zext i8 %43 to i64
  br label %46

46:                                               ; preds = %42, %32
  %47 = phi i64 [ %45, %42 ], [ %33, %32 ]
  %48 = phi i64 [ %44, %42 ], [ %34, %32 ]
  %49 = phi i8 [ %43, %42 ], [ %35, %32 ]
  %50 = icmp slt i8 %49, 0
  %51 = select i1 %50, i64 %48, i64 %47
  %52 = icmp eq i64 %51, 3
  br i1 %52, label %53, label %60

53:                                               ; preds = %46
  %54 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3) #9
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %1191, label %56

56:                                               ; preds = %53
  %57 = load i8, i8* %3, align 1
  %58 = load i64, i64* %6, align 8
  %59 = zext i8 %57 to i64
  br label %60

60:                                               ; preds = %56, %46
  %61 = phi i64 [ %59, %56 ], [ %47, %46 ]
  %62 = phi i64 [ %58, %56 ], [ %48, %46 ]
  %63 = phi i8 [ %57, %56 ], [ %49, %46 ]
  %64 = icmp slt i8 %63, 0
  %65 = select i1 %64, i64 %62, i64 %61
  %66 = icmp eq i64 %65, 3
  br i1 %66, label %67, label %74

67:                                               ; preds = %60
  %68 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %1191, label %70

70:                                               ; preds = %67
  %71 = load i8, i8* %3, align 1
  %72 = load i64, i64* %6, align 8
  %73 = zext i8 %71 to i64
  br label %74

74:                                               ; preds = %70, %60
  %75 = phi i64 [ %73, %70 ], [ %61, %60 ]
  %76 = phi i64 [ %72, %70 ], [ %62, %60 ]
  %77 = phi i8 [ %71, %70 ], [ %63, %60 ]
  %78 = icmp slt i8 %77, 0
  %79 = select i1 %78, i64 %76, i64 %75
  %80 = icmp eq i64 %79, 11
  br i1 %80, label %81, label %88

81:                                               ; preds = %74
  %82 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #9
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %1191, label %84

84:                                               ; preds = %81
  %85 = load i8, i8* %3, align 1
  %86 = load i64, i64* %6, align 8
  %87 = zext i8 %85 to i64
  br label %88

88:                                               ; preds = %84, %74
  %89 = phi i64 [ %87, %84 ], [ %75, %74 ]
  %90 = phi i64 [ %86, %84 ], [ %76, %74 ]
  %91 = phi i8 [ %85, %84 ], [ %77, %74 ]
  %92 = icmp slt i8 %91, 0
  %93 = select i1 %92, i64 %90, i64 %89
  %94 = icmp eq i64 %93, 4
  br i1 %94, label %95, label %102

95:                                               ; preds = %88
  %96 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %1191, label %98

98:                                               ; preds = %95
  %99 = load i8, i8* %3, align 1
  %100 = load i64, i64* %6, align 8
  %101 = zext i8 %99 to i64
  br label %102

102:                                              ; preds = %98, %88
  %103 = phi i64 [ %101, %98 ], [ %89, %88 ]
  %104 = phi i64 [ %100, %98 ], [ %90, %88 ]
  %105 = phi i8 [ %99, %98 ], [ %91, %88 ]
  %106 = icmp slt i8 %105, 0
  %107 = select i1 %106, i64 %104, i64 %103
  %108 = icmp eq i64 %107, 4
  br i1 %108, label %109, label %116

109:                                              ; preds = %102
  %110 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #9
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %1191, label %112

112:                                              ; preds = %109
  %113 = load i8, i8* %3, align 1
  %114 = load i64, i64* %6, align 8
  %115 = zext i8 %113 to i64
  br label %116

116:                                              ; preds = %112, %102
  %117 = phi i64 [ %115, %112 ], [ %103, %102 ]
  %118 = phi i64 [ %114, %112 ], [ %104, %102 ]
  %119 = phi i8 [ %113, %112 ], [ %105, %102 ]
  %120 = icmp slt i8 %119, 0
  %121 = select i1 %120, i64 %118, i64 %117
  %122 = icmp eq i64 %121, 5
  br i1 %122, label %123, label %130

123:                                              ; preds = %116
  %124 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 5) #9
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %1191, label %126

126:                                              ; preds = %123
  %127 = load i8, i8* %3, align 1
  %128 = load i64, i64* %6, align 8
  %129 = zext i8 %127 to i64
  br label %130

130:                                              ; preds = %126, %116
  %131 = phi i64 [ %129, %126 ], [ %117, %116 ]
  %132 = phi i64 [ %128, %126 ], [ %118, %116 ]
  %133 = phi i8 [ %127, %126 ], [ %119, %116 ]
  %134 = icmp slt i8 %133, 0
  %135 = select i1 %134, i64 %132, i64 %131
  %136 = icmp eq i64 %135, 4
  br i1 %136, label %137, label %144

137:                                              ; preds = %130
  %138 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i64 4) #9
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %1191, label %140

140:                                              ; preds = %137
  %141 = load i8, i8* %3, align 1
  %142 = load i64, i64* %6, align 8
  %143 = zext i8 %141 to i64
  br label %144

144:                                              ; preds = %140, %130
  %145 = phi i64 [ %143, %140 ], [ %131, %130 ]
  %146 = phi i64 [ %142, %140 ], [ %132, %130 ]
  %147 = phi i8 [ %141, %140 ], [ %133, %130 ]
  %148 = icmp slt i8 %147, 0
  %149 = select i1 %148, i64 %146, i64 %145
  %150 = icmp eq i64 %149, 5
  br i1 %150, label %151, label %158

151:                                              ; preds = %144
  %152 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i64 5) #9
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %1191, label %154

154:                                              ; preds = %151
  %155 = load i8, i8* %3, align 1
  %156 = load i64, i64* %6, align 8
  %157 = zext i8 %155 to i64
  br label %158

158:                                              ; preds = %154, %144
  %159 = phi i64 [ %157, %154 ], [ %145, %144 ]
  %160 = phi i64 [ %156, %154 ], [ %146, %144 ]
  %161 = phi i8 [ %155, %154 ], [ %147, %144 ]
  %162 = icmp slt i8 %161, 0
  %163 = select i1 %162, i64 %160, i64 %159
  %164 = icmp eq i64 %163, 3
  br i1 %164, label %165, label %172

165:                                              ; preds = %158
  %166 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i64 3) #9
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %1191, label %168

168:                                              ; preds = %165
  %169 = load i8, i8* %3, align 1
  %170 = load i64, i64* %6, align 8
  %171 = zext i8 %169 to i64
  br label %172

172:                                              ; preds = %168, %158
  %173 = phi i64 [ %171, %168 ], [ %159, %158 ]
  %174 = phi i64 [ %170, %168 ], [ %160, %158 ]
  %175 = phi i8 [ %169, %168 ], [ %161, %158 ]
  %176 = icmp slt i8 %175, 0
  %177 = select i1 %176, i64 %174, i64 %173
  %178 = icmp eq i64 %177, 4
  br i1 %178, label %179, label %186

179:                                              ; preds = %172
  %180 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #9
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %1191, label %182

182:                                              ; preds = %179
  %183 = load i8, i8* %3, align 1
  %184 = load i64, i64* %6, align 8
  %185 = zext i8 %183 to i64
  br label %186

186:                                              ; preds = %182, %172
  %187 = phi i64 [ %185, %182 ], [ %173, %172 ]
  %188 = phi i64 [ %184, %182 ], [ %174, %172 ]
  %189 = phi i8 [ %183, %182 ], [ %175, %172 ]
  %190 = icmp slt i8 %189, 0
  %191 = select i1 %190, i64 %188, i64 %187
  %192 = icmp eq i64 %191, 12
  br i1 %192, label %193, label %200

193:                                              ; preds = %186
  %194 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #9
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %1191, label %196

196:                                              ; preds = %193
  %197 = load i8, i8* %3, align 1
  %198 = load i64, i64* %6, align 8
  %199 = zext i8 %197 to i64
  br label %200

200:                                              ; preds = %196, %186
  %201 = phi i64 [ %199, %196 ], [ %187, %186 ]
  %202 = phi i64 [ %198, %196 ], [ %188, %186 ]
  %203 = phi i8 [ %197, %196 ], [ %189, %186 ]
  %204 = icmp slt i8 %203, 0
  %205 = select i1 %204, i64 %202, i64 %201
  %206 = icmp eq i64 %205, 5
  br i1 %206, label %207, label %214

207:                                              ; preds = %200
  %208 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i64 5) #9
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %1191, label %210

210:                                              ; preds = %207
  %211 = load i8, i8* %3, align 1
  %212 = load i64, i64* %6, align 8
  %213 = zext i8 %211 to i64
  br label %214

214:                                              ; preds = %210, %200
  %215 = phi i64 [ %213, %210 ], [ %201, %200 ]
  %216 = phi i64 [ %212, %210 ], [ %202, %200 ]
  %217 = phi i8 [ %211, %210 ], [ %203, %200 ]
  %218 = icmp slt i8 %217, 0
  %219 = select i1 %218, i64 %216, i64 %215
  %220 = icmp eq i64 %219, 11
  br i1 %220, label %221, label %228

221:                                              ; preds = %214
  %222 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i64 11) #9
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %1191, label %224

224:                                              ; preds = %221
  %225 = load i8, i8* %3, align 1
  %226 = load i64, i64* %6, align 8
  %227 = zext i8 %225 to i64
  br label %228

228:                                              ; preds = %224, %214
  %229 = phi i64 [ %227, %224 ], [ %215, %214 ]
  %230 = phi i64 [ %226, %224 ], [ %216, %214 ]
  %231 = phi i8 [ %225, %224 ], [ %217, %214 ]
  %232 = icmp slt i8 %231, 0
  %233 = select i1 %232, i64 %230, i64 %229
  %234 = icmp eq i64 %233, 8
  br i1 %234, label %235, label %242

235:                                              ; preds = %228
  %236 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i64 8) #9
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %1191, label %238

238:                                              ; preds = %235
  %239 = load i8, i8* %3, align 1
  %240 = load i64, i64* %6, align 8
  %241 = zext i8 %239 to i64
  br label %242

242:                                              ; preds = %238, %228
  %243 = phi i64 [ %241, %238 ], [ %229, %228 ]
  %244 = phi i64 [ %240, %238 ], [ %230, %228 ]
  %245 = phi i8 [ %239, %238 ], [ %231, %228 ]
  %246 = icmp slt i8 %245, 0
  %247 = select i1 %246, i64 %244, i64 %243
  %248 = icmp eq i64 %247, 3
  br i1 %248, label %249, label %256

249:                                              ; preds = %242
  %250 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i64 3) #9
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %1191, label %252

252:                                              ; preds = %249
  %253 = load i8, i8* %3, align 1
  %254 = load i64, i64* %6, align 8
  %255 = zext i8 %253 to i64
  br label %256

256:                                              ; preds = %252, %242
  %257 = phi i64 [ %255, %252 ], [ %243, %242 ]
  %258 = phi i64 [ %254, %252 ], [ %244, %242 ]
  %259 = phi i8 [ %253, %252 ], [ %245, %242 ]
  %260 = icmp slt i8 %259, 0
  %261 = select i1 %260, i64 %258, i64 %257
  %262 = icmp eq i64 %261, 4
  br i1 %262, label %263, label %270

263:                                              ; preds = %256
  %264 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0), i64 4) #9
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %1191, label %266

266:                                              ; preds = %263
  %267 = load i8, i8* %3, align 1
  %268 = load i64, i64* %6, align 8
  %269 = zext i8 %267 to i64
  br label %270

270:                                              ; preds = %266, %256
  %271 = phi i64 [ %269, %266 ], [ %257, %256 ]
  %272 = phi i64 [ %268, %266 ], [ %258, %256 ]
  %273 = phi i8 [ %267, %266 ], [ %259, %256 ]
  %274 = icmp slt i8 %273, 0
  %275 = select i1 %274, i64 %272, i64 %271
  %276 = icmp eq i64 %275, 10
  br i1 %276, label %277, label %284

277:                                              ; preds = %270
  %278 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i64 10) #9
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %1191, label %280

280:                                              ; preds = %277
  %281 = load i8, i8* %3, align 1
  %282 = load i64, i64* %6, align 8
  %283 = zext i8 %281 to i64
  br label %284

284:                                              ; preds = %280, %270
  %285 = phi i64 [ %283, %280 ], [ %271, %270 ]
  %286 = phi i64 [ %282, %280 ], [ %272, %270 ]
  %287 = phi i8 [ %281, %280 ], [ %273, %270 ]
  %288 = icmp slt i8 %287, 0
  %289 = select i1 %288, i64 %286, i64 %285
  %290 = icmp eq i64 %289, 8
  br i1 %290, label %291, label %298

291:                                              ; preds = %284
  %292 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #9
  %293 = icmp eq i32 %292, 0
  br i1 %293, label %1191, label %294

294:                                              ; preds = %291
  %295 = load i8, i8* %3, align 1
  %296 = load i64, i64* %6, align 8
  %297 = zext i8 %295 to i64
  br label %298

298:                                              ; preds = %294, %284
  %299 = phi i64 [ %297, %294 ], [ %285, %284 ]
  %300 = phi i64 [ %296, %294 ], [ %286, %284 ]
  %301 = phi i8 [ %295, %294 ], [ %287, %284 ]
  %302 = icmp slt i8 %301, 0
  %303 = select i1 %302, i64 %300, i64 %299
  %304 = icmp eq i64 %303, 4
  br i1 %304, label %305, label %312

305:                                              ; preds = %298
  %306 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i64 4) #9
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %1191, label %308

308:                                              ; preds = %305
  %309 = load i8, i8* %3, align 1
  %310 = load i64, i64* %6, align 8
  %311 = zext i8 %309 to i64
  br label %312

312:                                              ; preds = %308, %298
  %313 = phi i64 [ %311, %308 ], [ %299, %298 ]
  %314 = phi i64 [ %310, %308 ], [ %300, %298 ]
  %315 = phi i8 [ %309, %308 ], [ %301, %298 ]
  %316 = icmp slt i8 %315, 0
  %317 = select i1 %316, i64 %314, i64 %313
  %318 = icmp eq i64 %317, 10
  br i1 %318, label %319, label %326

319:                                              ; preds = %312
  %320 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i64 10) #9
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %1191, label %322

322:                                              ; preds = %319
  %323 = load i8, i8* %3, align 1
  %324 = load i64, i64* %6, align 8
  %325 = zext i8 %323 to i64
  br label %326

326:                                              ; preds = %322, %312
  %327 = phi i64 [ %325, %322 ], [ %313, %312 ]
  %328 = phi i64 [ %324, %322 ], [ %314, %312 ]
  %329 = phi i8 [ %323, %322 ], [ %315, %312 ]
  %330 = icmp slt i8 %329, 0
  %331 = select i1 %330, i64 %328, i64 %327
  %332 = icmp eq i64 %331, 8
  br i1 %332, label %333, label %340

333:                                              ; preds = %326
  %334 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i64 8) #9
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %1191, label %336

336:                                              ; preds = %333
  %337 = load i8, i8* %3, align 1
  %338 = load i64, i64* %6, align 8
  %339 = zext i8 %337 to i64
  br label %340

340:                                              ; preds = %336, %326
  %341 = phi i64 [ %339, %336 ], [ %327, %326 ]
  %342 = phi i64 [ %338, %336 ], [ %328, %326 ]
  %343 = phi i8 [ %337, %336 ], [ %329, %326 ]
  %344 = icmp slt i8 %343, 0
  %345 = select i1 %344, i64 %342, i64 %341
  %346 = icmp eq i64 %345, 3
  br i1 %346, label %347, label %354

347:                                              ; preds = %340
  %348 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i64 3) #9
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %1191, label %350

350:                                              ; preds = %347
  %351 = load i8, i8* %3, align 1
  %352 = load i64, i64* %6, align 8
  %353 = zext i8 %351 to i64
  br label %354

354:                                              ; preds = %350, %340
  %355 = phi i64 [ %353, %350 ], [ %341, %340 ]
  %356 = phi i64 [ %352, %350 ], [ %342, %340 ]
  %357 = phi i8 [ %351, %350 ], [ %343, %340 ]
  %358 = icmp slt i8 %357, 0
  %359 = select i1 %358, i64 %356, i64 %355
  %360 = icmp eq i64 %359, 4
  br i1 %360, label %361, label %368

361:                                              ; preds = %354
  %362 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i64 4) #9
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %1191, label %364

364:                                              ; preds = %361
  %365 = load i8, i8* %3, align 1
  %366 = load i64, i64* %6, align 8
  %367 = zext i8 %365 to i64
  br label %368

368:                                              ; preds = %364, %354
  %369 = phi i64 [ %367, %364 ], [ %355, %354 ]
  %370 = phi i64 [ %366, %364 ], [ %356, %354 ]
  %371 = phi i8 [ %365, %364 ], [ %357, %354 ]
  %372 = icmp slt i8 %371, 0
  %373 = select i1 %372, i64 %370, i64 %369
  %374 = icmp eq i64 %373, 11
  br i1 %374, label %375, label %382

375:                                              ; preds = %368
  %376 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 11) #9
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %1191, label %378

378:                                              ; preds = %375
  %379 = load i8, i8* %3, align 1
  %380 = load i64, i64* %6, align 8
  %381 = zext i8 %379 to i64
  br label %382

382:                                              ; preds = %378, %368
  %383 = phi i64 [ %381, %378 ], [ %369, %368 ]
  %384 = phi i64 [ %380, %378 ], [ %370, %368 ]
  %385 = phi i8 [ %379, %378 ], [ %371, %368 ]
  %386 = icmp slt i8 %385, 0
  %387 = select i1 %386, i64 %384, i64 %383
  %388 = icmp eq i64 %387, 5
  br i1 %388, label %389, label %396

389:                                              ; preds = %382
  %390 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i64 5) #9
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %1191, label %392

392:                                              ; preds = %389
  %393 = load i8, i8* %3, align 1
  %394 = load i64, i64* %6, align 8
  %395 = zext i8 %393 to i64
  br label %396

396:                                              ; preds = %392, %382
  %397 = phi i64 [ %395, %392 ], [ %383, %382 ]
  %398 = phi i64 [ %394, %392 ], [ %384, %382 ]
  %399 = phi i8 [ %393, %392 ], [ %385, %382 ]
  %400 = icmp slt i8 %399, 0
  %401 = select i1 %400, i64 %398, i64 %397
  %402 = icmp eq i64 %401, 3
  br i1 %402, label %403, label %410

403:                                              ; preds = %396
  %404 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 3) #9
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %1191, label %406

406:                                              ; preds = %403
  %407 = load i8, i8* %3, align 1
  %408 = load i64, i64* %6, align 8
  %409 = zext i8 %407 to i64
  br label %410

410:                                              ; preds = %406, %396
  %411 = phi i64 [ %409, %406 ], [ %397, %396 ]
  %412 = phi i64 [ %408, %406 ], [ %398, %396 ]
  %413 = phi i8 [ %407, %406 ], [ %399, %396 ]
  %414 = icmp slt i8 %413, 0
  %415 = select i1 %414, i64 %412, i64 %411
  %416 = icmp eq i64 %415, 5
  br i1 %416, label %417, label %424

417:                                              ; preds = %410
  %418 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #9
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %1191, label %420

420:                                              ; preds = %417
  %421 = load i8, i8* %3, align 1
  %422 = load i64, i64* %6, align 8
  %423 = zext i8 %421 to i64
  br label %424

424:                                              ; preds = %420, %410
  %425 = phi i64 [ %423, %420 ], [ %411, %410 ]
  %426 = phi i64 [ %422, %420 ], [ %412, %410 ]
  %427 = phi i8 [ %421, %420 ], [ %413, %410 ]
  %428 = icmp slt i8 %427, 0
  %429 = select i1 %428, i64 %426, i64 %425
  %430 = icmp eq i64 %429, 5
  br i1 %430, label %431, label %438

431:                                              ; preds = %424
  %432 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i64 5) #9
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %1191, label %434

434:                                              ; preds = %431
  %435 = load i8, i8* %3, align 1
  %436 = load i64, i64* %6, align 8
  %437 = zext i8 %435 to i64
  br label %438

438:                                              ; preds = %434, %424
  %439 = phi i64 [ %437, %434 ], [ %425, %424 ]
  %440 = phi i64 [ %436, %434 ], [ %426, %424 ]
  %441 = phi i8 [ %435, %434 ], [ %427, %424 ]
  %442 = icmp slt i8 %441, 0
  %443 = select i1 %442, i64 %440, i64 %439
  %444 = icmp eq i64 %443, 6
  br i1 %444, label %445, label %452

445:                                              ; preds = %438
  %446 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0), i64 6) #9
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %1191, label %448

448:                                              ; preds = %445
  %449 = load i8, i8* %3, align 1
  %450 = load i64, i64* %6, align 8
  %451 = zext i8 %449 to i64
  br label %452

452:                                              ; preds = %448, %438
  %453 = phi i64 [ %451, %448 ], [ %439, %438 ]
  %454 = phi i64 [ %450, %448 ], [ %440, %438 ]
  %455 = phi i8 [ %449, %448 ], [ %441, %438 ]
  %456 = icmp slt i8 %455, 0
  %457 = select i1 %456, i64 %454, i64 %453
  %458 = icmp eq i64 %457, 12
  br i1 %458, label %459, label %466

459:                                              ; preds = %452
  %460 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i64 12) #9
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %1191, label %462

462:                                              ; preds = %459
  %463 = load i8, i8* %3, align 1
  %464 = load i64, i64* %6, align 8
  %465 = zext i8 %463 to i64
  br label %466

466:                                              ; preds = %462, %452
  %467 = phi i64 [ %465, %462 ], [ %453, %452 ]
  %468 = phi i64 [ %464, %462 ], [ %454, %452 ]
  %469 = phi i8 [ %463, %462 ], [ %455, %452 ]
  %470 = icmp slt i8 %469, 0
  %471 = select i1 %470, i64 %468, i64 %467
  %472 = icmp eq i64 %471, 10
  br i1 %472, label %473, label %480

473:                                              ; preds = %466
  %474 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i64 10) #9
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %1191, label %476

476:                                              ; preds = %473
  %477 = load i8, i8* %3, align 1
  %478 = load i64, i64* %6, align 8
  %479 = zext i8 %477 to i64
  br label %480

480:                                              ; preds = %476, %466
  %481 = phi i64 [ %479, %476 ], [ %467, %466 ]
  %482 = phi i64 [ %478, %476 ], [ %468, %466 ]
  %483 = phi i8 [ %477, %476 ], [ %469, %466 ]
  %484 = icmp slt i8 %483, 0
  %485 = select i1 %484, i64 %482, i64 %481
  %486 = icmp eq i64 %485, 11
  br i1 %486, label %487, label %494

487:                                              ; preds = %480
  %488 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i64 11) #9
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %1191, label %490

490:                                              ; preds = %487
  %491 = load i8, i8* %3, align 1
  %492 = load i64, i64* %6, align 8
  %493 = zext i8 %491 to i64
  br label %494

494:                                              ; preds = %490, %480
  %495 = phi i64 [ %493, %490 ], [ %481, %480 ]
  %496 = phi i64 [ %492, %490 ], [ %482, %480 ]
  %497 = phi i8 [ %491, %490 ], [ %483, %480 ]
  %498 = icmp slt i8 %497, 0
  %499 = select i1 %498, i64 %496, i64 %495
  %500 = icmp eq i64 %499, 8
  br i1 %500, label %501, label %508

501:                                              ; preds = %494
  %502 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i64 8) #9
  %503 = icmp eq i32 %502, 0
  br i1 %503, label %1191, label %504

504:                                              ; preds = %501
  %505 = load i8, i8* %3, align 1
  %506 = load i64, i64* %6, align 8
  %507 = zext i8 %505 to i64
  br label %508

508:                                              ; preds = %504, %494
  %509 = phi i64 [ %507, %504 ], [ %495, %494 ]
  %510 = phi i64 [ %506, %504 ], [ %496, %494 ]
  %511 = phi i8 [ %505, %504 ], [ %497, %494 ]
  %512 = icmp slt i8 %511, 0
  %513 = select i1 %512, i64 %510, i64 %509
  %514 = icmp eq i64 %513, 5
  br i1 %514, label %515, label %522

515:                                              ; preds = %508
  %516 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i64 5) #9
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %1191, label %518

518:                                              ; preds = %515
  %519 = load i8, i8* %3, align 1
  %520 = load i64, i64* %6, align 8
  %521 = zext i8 %519 to i64
  br label %522

522:                                              ; preds = %518, %508
  %523 = phi i64 [ %521, %518 ], [ %509, %508 ]
  %524 = phi i64 [ %520, %518 ], [ %510, %508 ]
  %525 = phi i8 [ %519, %518 ], [ %511, %508 ]
  %526 = icmp slt i8 %525, 0
  %527 = select i1 %526, i64 %524, i64 %523
  %528 = icmp eq i64 %527, 5
  br i1 %528, label %529, label %536

529:                                              ; preds = %522
  %530 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i64 5) #9
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %1191, label %532

532:                                              ; preds = %529
  %533 = load i8, i8* %3, align 1
  %534 = load i64, i64* %6, align 8
  %535 = zext i8 %533 to i64
  br label %536

536:                                              ; preds = %532, %522
  %537 = phi i64 [ %535, %532 ], [ %523, %522 ]
  %538 = phi i64 [ %534, %532 ], [ %524, %522 ]
  %539 = phi i8 [ %533, %532 ], [ %525, %522 ]
  %540 = icmp slt i8 %539, 0
  %541 = select i1 %540, i64 %538, i64 %537
  %542 = icmp eq i64 %541, 8
  br i1 %542, label %543, label %550

543:                                              ; preds = %536
  %544 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i64 8) #9
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %1191, label %546

546:                                              ; preds = %543
  %547 = load i8, i8* %3, align 1
  %548 = load i64, i64* %6, align 8
  %549 = zext i8 %547 to i64
  br label %550

550:                                              ; preds = %546, %536
  %551 = phi i64 [ %549, %546 ], [ %537, %536 ]
  %552 = phi i64 [ %548, %546 ], [ %538, %536 ]
  %553 = phi i8 [ %547, %546 ], [ %539, %536 ]
  %554 = icmp slt i8 %553, 0
  %555 = select i1 %554, i64 %552, i64 %551
  %556 = icmp eq i64 %555, 5
  br i1 %556, label %557, label %564

557:                                              ; preds = %550
  %558 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5) #9
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %1191, label %560

560:                                              ; preds = %557
  %561 = load i8, i8* %3, align 1
  %562 = load i64, i64* %6, align 8
  %563 = zext i8 %561 to i64
  br label %564

564:                                              ; preds = %560, %550
  %565 = phi i64 [ %563, %560 ], [ %551, %550 ]
  %566 = phi i64 [ %562, %560 ], [ %552, %550 ]
  %567 = phi i8 [ %561, %560 ], [ %553, %550 ]
  %568 = icmp slt i8 %567, 0
  %569 = select i1 %568, i64 %566, i64 %565
  %570 = icmp eq i64 %569, 6
  br i1 %570, label %571, label %578

571:                                              ; preds = %564
  %572 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i64 6) #9
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %1191, label %574

574:                                              ; preds = %571
  %575 = load i8, i8* %3, align 1
  %576 = load i64, i64* %6, align 8
  %577 = zext i8 %575 to i64
  br label %578

578:                                              ; preds = %574, %564
  %579 = phi i64 [ %577, %574 ], [ %565, %564 ]
  %580 = phi i64 [ %576, %574 ], [ %566, %564 ]
  %581 = phi i8 [ %575, %574 ], [ %567, %564 ]
  %582 = icmp slt i8 %581, 0
  %583 = select i1 %582, i64 %580, i64 %579
  %584 = icmp eq i64 %583, 3
  br i1 %584, label %585, label %592

585:                                              ; preds = %578
  %586 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i64 0, i64 0), i64 3) #9
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %1191, label %588

588:                                              ; preds = %585
  %589 = load i8, i8* %3, align 1
  %590 = load i64, i64* %6, align 8
  %591 = zext i8 %589 to i64
  br label %592

592:                                              ; preds = %588, %578
  %593 = phi i64 [ %591, %588 ], [ %579, %578 ]
  %594 = phi i64 [ %590, %588 ], [ %580, %578 ]
  %595 = phi i8 [ %589, %588 ], [ %581, %578 ]
  %596 = icmp slt i8 %595, 0
  %597 = select i1 %596, i64 %594, i64 %593
  %598 = icmp eq i64 %597, 4
  br i1 %598, label %599, label %606

599:                                              ; preds = %592
  %600 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), i64 4) #9
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %1191, label %602

602:                                              ; preds = %599
  %603 = load i8, i8* %3, align 1
  %604 = load i64, i64* %6, align 8
  %605 = zext i8 %603 to i64
  br label %606

606:                                              ; preds = %602, %592
  %607 = phi i64 [ %605, %602 ], [ %593, %592 ]
  %608 = phi i64 [ %604, %602 ], [ %594, %592 ]
  %609 = phi i8 [ %603, %602 ], [ %595, %592 ]
  %610 = icmp slt i8 %609, 0
  %611 = select i1 %610, i64 %608, i64 %607
  %612 = icmp eq i64 %611, 3
  br i1 %612, label %613, label %620

613:                                              ; preds = %606
  %614 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #9
  %615 = icmp eq i32 %614, 0
  br i1 %615, label %1191, label %616

616:                                              ; preds = %613
  %617 = load i8, i8* %3, align 1
  %618 = load i64, i64* %6, align 8
  %619 = zext i8 %617 to i64
  br label %620

620:                                              ; preds = %616, %606
  %621 = phi i64 [ %619, %616 ], [ %607, %606 ]
  %622 = phi i64 [ %618, %616 ], [ %608, %606 ]
  %623 = phi i8 [ %617, %616 ], [ %609, %606 ]
  %624 = icmp slt i8 %623, 0
  %625 = select i1 %624, i64 %622, i64 %621
  %626 = icmp eq i64 %625, 3
  br i1 %626, label %627, label %634

627:                                              ; preds = %620
  %628 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.45, i64 0, i64 0), i64 3) #9
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %1191, label %630

630:                                              ; preds = %627
  %631 = load i8, i8* %3, align 1
  %632 = load i64, i64* %6, align 8
  %633 = zext i8 %631 to i64
  br label %634

634:                                              ; preds = %630, %620
  %635 = phi i64 [ %633, %630 ], [ %621, %620 ]
  %636 = phi i64 [ %632, %630 ], [ %622, %620 ]
  %637 = phi i8 [ %631, %630 ], [ %623, %620 ]
  %638 = icmp slt i8 %637, 0
  %639 = select i1 %638, i64 %636, i64 %635
  %640 = icmp eq i64 %639, 3
  br i1 %640, label %641, label %648

641:                                              ; preds = %634
  %642 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i64 0, i64 0), i64 3) #9
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %1191, label %644

644:                                              ; preds = %641
  %645 = load i8, i8* %3, align 1
  %646 = load i64, i64* %6, align 8
  %647 = zext i8 %645 to i64
  br label %648

648:                                              ; preds = %644, %634
  %649 = phi i64 [ %647, %644 ], [ %635, %634 ]
  %650 = phi i64 [ %646, %644 ], [ %636, %634 ]
  %651 = phi i8 [ %645, %644 ], [ %637, %634 ]
  %652 = icmp slt i8 %651, 0
  %653 = select i1 %652, i64 %650, i64 %649
  %654 = icmp eq i64 %653, 4
  br i1 %654, label %655, label %662

655:                                              ; preds = %648
  %656 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i64 0, i64 0), i64 4) #9
  %657 = icmp eq i32 %656, 0
  br i1 %657, label %1191, label %658

658:                                              ; preds = %655
  %659 = load i8, i8* %3, align 1
  %660 = load i64, i64* %6, align 8
  %661 = zext i8 %659 to i64
  br label %662

662:                                              ; preds = %658, %648
  %663 = phi i64 [ %661, %658 ], [ %649, %648 ]
  %664 = phi i64 [ %660, %658 ], [ %650, %648 ]
  %665 = phi i8 [ %659, %658 ], [ %651, %648 ]
  %666 = icmp slt i8 %665, 0
  %667 = select i1 %666, i64 %664, i64 %663
  %668 = icmp eq i64 %667, 9
  br i1 %668, label %669, label %676

669:                                              ; preds = %662
  %670 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i64 9) #9
  %671 = icmp eq i32 %670, 0
  br i1 %671, label %1191, label %672

672:                                              ; preds = %669
  %673 = load i8, i8* %3, align 1
  %674 = load i64, i64* %6, align 8
  %675 = zext i8 %673 to i64
  br label %676

676:                                              ; preds = %672, %662
  %677 = phi i64 [ %675, %672 ], [ %663, %662 ]
  %678 = phi i64 [ %674, %672 ], [ %664, %662 ]
  %679 = phi i8 [ %673, %672 ], [ %665, %662 ]
  %680 = icmp slt i8 %679, 0
  %681 = select i1 %680, i64 %678, i64 %677
  %682 = icmp eq i64 %681, 12
  br i1 %682, label %683, label %690

683:                                              ; preds = %676
  %684 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i64 12) #9
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %1191, label %686

686:                                              ; preds = %683
  %687 = load i8, i8* %3, align 1
  %688 = load i64, i64* %6, align 8
  %689 = zext i8 %687 to i64
  br label %690

690:                                              ; preds = %686, %676
  %691 = phi i64 [ %689, %686 ], [ %677, %676 ]
  %692 = phi i64 [ %688, %686 ], [ %678, %676 ]
  %693 = phi i8 [ %687, %686 ], [ %679, %676 ]
  %694 = icmp slt i8 %693, 0
  %695 = select i1 %694, i64 %692, i64 %691
  %696 = icmp eq i64 %695, 12
  br i1 %696, label %697, label %704

697:                                              ; preds = %690
  %698 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0), i64 12) #9
  %699 = icmp eq i32 %698, 0
  br i1 %699, label %1191, label %700

700:                                              ; preds = %697
  %701 = load i8, i8* %3, align 1
  %702 = load i64, i64* %6, align 8
  %703 = zext i8 %701 to i64
  br label %704

704:                                              ; preds = %700, %690
  %705 = phi i64 [ %703, %700 ], [ %691, %690 ]
  %706 = phi i64 [ %702, %700 ], [ %692, %690 ]
  %707 = phi i8 [ %701, %700 ], [ %693, %690 ]
  %708 = icmp slt i8 %707, 0
  %709 = select i1 %708, i64 %706, i64 %705
  %710 = icmp eq i64 %709, 13
  br i1 %710, label %711, label %718

711:                                              ; preds = %704
  %712 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i64 13) #9
  %713 = icmp eq i32 %712, 0
  br i1 %713, label %1191, label %714

714:                                              ; preds = %711
  %715 = load i8, i8* %3, align 1
  %716 = load i64, i64* %6, align 8
  %717 = zext i8 %715 to i64
  br label %718

718:                                              ; preds = %714, %704
  %719 = phi i64 [ %717, %714 ], [ %705, %704 ]
  %720 = phi i64 [ %716, %714 ], [ %706, %704 ]
  %721 = phi i8 [ %715, %714 ], [ %707, %704 ]
  %722 = icmp slt i8 %721, 0
  %723 = select i1 %722, i64 %720, i64 %719
  %724 = icmp eq i64 %723, 13
  br i1 %724, label %725, label %732

725:                                              ; preds = %718
  %726 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0), i64 13) #9
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %1191, label %728

728:                                              ; preds = %725
  %729 = load i8, i8* %3, align 1
  %730 = load i64, i64* %6, align 8
  %731 = zext i8 %729 to i64
  br label %732

732:                                              ; preds = %728, %718
  %733 = phi i64 [ %731, %728 ], [ %719, %718 ]
  %734 = phi i64 [ %730, %728 ], [ %720, %718 ]
  %735 = phi i8 [ %729, %728 ], [ %721, %718 ]
  %736 = icmp slt i8 %735, 0
  %737 = select i1 %736, i64 %734, i64 %733
  %738 = icmp eq i64 %737, 13
  br i1 %738, label %739, label %746

739:                                              ; preds = %732
  %740 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i64 13) #9
  %741 = icmp eq i32 %740, 0
  br i1 %741, label %1191, label %742

742:                                              ; preds = %739
  %743 = load i8, i8* %3, align 1
  %744 = load i64, i64* %6, align 8
  %745 = zext i8 %743 to i64
  br label %746

746:                                              ; preds = %742, %732
  %747 = phi i64 [ %745, %742 ], [ %733, %732 ]
  %748 = phi i64 [ %744, %742 ], [ %734, %732 ]
  %749 = phi i8 [ %743, %742 ], [ %735, %732 ]
  %750 = icmp slt i8 %749, 0
  %751 = select i1 %750, i64 %748, i64 %747
  %752 = icmp eq i64 %751, 3
  br i1 %752, label %753, label %760

753:                                              ; preds = %746
  %754 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.54, i64 0, i64 0), i64 3) #9
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %1191, label %756

756:                                              ; preds = %753
  %757 = load i8, i8* %3, align 1
  %758 = load i64, i64* %6, align 8
  %759 = zext i8 %757 to i64
  br label %760

760:                                              ; preds = %756, %746
  %761 = phi i64 [ %759, %756 ], [ %747, %746 ]
  %762 = phi i64 [ %758, %756 ], [ %748, %746 ]
  %763 = phi i8 [ %757, %756 ], [ %749, %746 ]
  %764 = icmp slt i8 %763, 0
  %765 = select i1 %764, i64 %762, i64 %761
  %766 = icmp eq i64 %765, 7
  br i1 %766, label %767, label %774

767:                                              ; preds = %760
  %768 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i64 7) #9
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %1191, label %770

770:                                              ; preds = %767
  %771 = load i8, i8* %3, align 1
  %772 = load i64, i64* %6, align 8
  %773 = zext i8 %771 to i64
  br label %774

774:                                              ; preds = %770, %760
  %775 = phi i64 [ %773, %770 ], [ %761, %760 ]
  %776 = phi i64 [ %772, %770 ], [ %762, %760 ]
  %777 = phi i8 [ %771, %770 ], [ %763, %760 ]
  %778 = icmp slt i8 %777, 0
  %779 = select i1 %778, i64 %776, i64 %775
  %780 = icmp eq i64 %779, 11
  br i1 %780, label %781, label %788

781:                                              ; preds = %774
  %782 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i64 11) #9
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %1191, label %784

784:                                              ; preds = %781
  %785 = load i8, i8* %3, align 1
  %786 = load i64, i64* %6, align 8
  %787 = zext i8 %785 to i64
  br label %788

788:                                              ; preds = %784, %774
  %789 = phi i64 [ %787, %784 ], [ %775, %774 ]
  %790 = phi i64 [ %786, %784 ], [ %776, %774 ]
  %791 = phi i8 [ %785, %784 ], [ %777, %774 ]
  %792 = icmp slt i8 %791, 0
  %793 = select i1 %792, i64 %790, i64 %789
  %794 = icmp eq i64 %793, 5
  br i1 %794, label %795, label %802

795:                                              ; preds = %788
  %796 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i64 0, i64 0), i64 5) #9
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %1191, label %798

798:                                              ; preds = %795
  %799 = load i8, i8* %3, align 1
  %800 = load i64, i64* %6, align 8
  %801 = zext i8 %799 to i64
  br label %802

802:                                              ; preds = %798, %788
  %803 = phi i64 [ %801, %798 ], [ %789, %788 ]
  %804 = phi i64 [ %800, %798 ], [ %790, %788 ]
  %805 = phi i8 [ %799, %798 ], [ %791, %788 ]
  %806 = icmp slt i8 %805, 0
  %807 = select i1 %806, i64 %804, i64 %803
  %808 = icmp eq i64 %807, 6
  br i1 %808, label %809, label %816

809:                                              ; preds = %802
  %810 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), i64 6) #9
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %1191, label %812

812:                                              ; preds = %809
  %813 = load i8, i8* %3, align 1
  %814 = load i64, i64* %6, align 8
  %815 = zext i8 %813 to i64
  br label %816

816:                                              ; preds = %812, %802
  %817 = phi i64 [ %815, %812 ], [ %803, %802 ]
  %818 = phi i64 [ %814, %812 ], [ %804, %802 ]
  %819 = phi i8 [ %813, %812 ], [ %805, %802 ]
  %820 = icmp slt i8 %819, 0
  %821 = select i1 %820, i64 %818, i64 %817
  %822 = icmp eq i64 %821, 4
  br i1 %822, label %823, label %830

823:                                              ; preds = %816
  %824 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i64 4) #9
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %1191, label %826

826:                                              ; preds = %823
  %827 = load i8, i8* %3, align 1
  %828 = load i64, i64* %6, align 8
  %829 = zext i8 %827 to i64
  br label %830

830:                                              ; preds = %826, %816
  %831 = phi i64 [ %829, %826 ], [ %817, %816 ]
  %832 = phi i64 [ %828, %826 ], [ %818, %816 ]
  %833 = phi i8 [ %827, %826 ], [ %819, %816 ]
  %834 = icmp slt i8 %833, 0
  %835 = select i1 %834, i64 %832, i64 %831
  %836 = icmp eq i64 %835, 3
  br i1 %836, label %837, label %844

837:                                              ; preds = %830
  %838 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.60, i64 0, i64 0), i64 3) #9
  %839 = icmp eq i32 %838, 0
  br i1 %839, label %1191, label %840

840:                                              ; preds = %837
  %841 = load i8, i8* %3, align 1
  %842 = load i64, i64* %6, align 8
  %843 = zext i8 %841 to i64
  br label %844

844:                                              ; preds = %840, %830
  %845 = phi i64 [ %843, %840 ], [ %831, %830 ]
  %846 = phi i64 [ %842, %840 ], [ %832, %830 ]
  %847 = phi i8 [ %841, %840 ], [ %833, %830 ]
  %848 = icmp slt i8 %847, 0
  %849 = select i1 %848, i64 %846, i64 %845
  %850 = icmp eq i64 %849, 4
  br i1 %850, label %851, label %858

851:                                              ; preds = %844
  %852 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i64 4) #9
  %853 = icmp eq i32 %852, 0
  br i1 %853, label %1191, label %854

854:                                              ; preds = %851
  %855 = load i8, i8* %3, align 1
  %856 = load i64, i64* %6, align 8
  %857 = zext i8 %855 to i64
  br label %858

858:                                              ; preds = %854, %844
  %859 = phi i64 [ %857, %854 ], [ %845, %844 ]
  %860 = phi i64 [ %856, %854 ], [ %846, %844 ]
  %861 = phi i8 [ %855, %854 ], [ %847, %844 ]
  %862 = icmp slt i8 %861, 0
  %863 = select i1 %862, i64 %860, i64 %859
  %864 = icmp eq i64 %863, 10
  br i1 %864, label %865, label %872

865:                                              ; preds = %858
  %866 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i64 10) #9
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %1191, label %868

868:                                              ; preds = %865
  %869 = load i8, i8* %3, align 1
  %870 = load i64, i64* %6, align 8
  %871 = zext i8 %869 to i64
  br label %872

872:                                              ; preds = %868, %858
  %873 = phi i64 [ %871, %868 ], [ %859, %858 ]
  %874 = phi i64 [ %870, %868 ], [ %860, %858 ]
  %875 = phi i8 [ %869, %868 ], [ %861, %858 ]
  %876 = icmp slt i8 %875, 0
  %877 = select i1 %876, i64 %874, i64 %873
  %878 = icmp eq i64 %877, 4
  br i1 %878, label %879, label %886

879:                                              ; preds = %872
  %880 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i64 4) #9
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %1191, label %882

882:                                              ; preds = %879
  %883 = load i8, i8* %3, align 1
  %884 = load i64, i64* %6, align 8
  %885 = zext i8 %883 to i64
  br label %886

886:                                              ; preds = %882, %872
  %887 = phi i64 [ %885, %882 ], [ %873, %872 ]
  %888 = phi i64 [ %884, %882 ], [ %874, %872 ]
  %889 = phi i8 [ %883, %882 ], [ %875, %872 ]
  %890 = icmp slt i8 %889, 0
  %891 = select i1 %890, i64 %888, i64 %887
  %892 = icmp eq i64 %891, 4
  br i1 %892, label %893, label %900

893:                                              ; preds = %886
  %894 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i64 0, i64 0), i64 4) #9
  %895 = icmp eq i32 %894, 0
  br i1 %895, label %1191, label %896

896:                                              ; preds = %893
  %897 = load i8, i8* %3, align 1
  %898 = load i64, i64* %6, align 8
  %899 = zext i8 %897 to i64
  br label %900

900:                                              ; preds = %896, %886
  %901 = phi i64 [ %899, %896 ], [ %887, %886 ]
  %902 = phi i64 [ %898, %896 ], [ %888, %886 ]
  %903 = phi i8 [ %897, %896 ], [ %889, %886 ]
  %904 = icmp slt i8 %903, 0
  %905 = select i1 %904, i64 %902, i64 %901
  %906 = icmp eq i64 %905, 14
  br i1 %906, label %907, label %914

907:                                              ; preds = %900
  %908 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i64 0, i64 0), i64 14) #9
  %909 = icmp eq i32 %908, 0
  br i1 %909, label %1191, label %910

910:                                              ; preds = %907
  %911 = load i8, i8* %3, align 1
  %912 = load i64, i64* %6, align 8
  %913 = zext i8 %911 to i64
  br label %914

914:                                              ; preds = %910, %900
  %915 = phi i64 [ %913, %910 ], [ %901, %900 ]
  %916 = phi i64 [ %912, %910 ], [ %902, %900 ]
  %917 = phi i8 [ %911, %910 ], [ %903, %900 ]
  %918 = icmp slt i8 %917, 0
  %919 = select i1 %918, i64 %916, i64 %915
  %920 = icmp eq i64 %919, 3
  br i1 %920, label %921, label %928

921:                                              ; preds = %914
  %922 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.66, i64 0, i64 0), i64 3) #9
  %923 = icmp eq i32 %922, 0
  br i1 %923, label %1191, label %924

924:                                              ; preds = %921
  %925 = load i8, i8* %3, align 1
  %926 = load i64, i64* %6, align 8
  %927 = zext i8 %925 to i64
  br label %928

928:                                              ; preds = %924, %914
  %929 = phi i64 [ %927, %924 ], [ %915, %914 ]
  %930 = phi i64 [ %926, %924 ], [ %916, %914 ]
  %931 = phi i8 [ %925, %924 ], [ %917, %914 ]
  %932 = icmp slt i8 %931, 0
  %933 = select i1 %932, i64 %930, i64 %929
  %934 = icmp eq i64 %933, 4
  br i1 %934, label %935, label %942

935:                                              ; preds = %928
  %936 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.67, i64 0, i64 0), i64 4) #9
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %1191, label %938

938:                                              ; preds = %935
  %939 = load i8, i8* %3, align 1
  %940 = load i64, i64* %6, align 8
  %941 = zext i8 %939 to i64
  br label %942

942:                                              ; preds = %938, %928
  %943 = phi i64 [ %941, %938 ], [ %929, %928 ]
  %944 = phi i64 [ %940, %938 ], [ %930, %928 ]
  %945 = phi i8 [ %939, %938 ], [ %931, %928 ]
  %946 = icmp slt i8 %945, 0
  %947 = select i1 %946, i64 %944, i64 %943
  %948 = icmp eq i64 %947, 17
  br i1 %948, label %949, label %956

949:                                              ; preds = %942
  %950 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i64 17) #9
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %1191, label %952

952:                                              ; preds = %949
  %953 = load i8, i8* %3, align 1
  %954 = load i64, i64* %6, align 8
  %955 = zext i8 %953 to i64
  br label %956

956:                                              ; preds = %952, %942
  %957 = phi i64 [ %955, %952 ], [ %943, %942 ]
  %958 = phi i64 [ %954, %952 ], [ %944, %942 ]
  %959 = phi i8 [ %953, %952 ], [ %945, %942 ]
  %960 = icmp slt i8 %959, 0
  %961 = select i1 %960, i64 %958, i64 %957
  %962 = icmp eq i64 %961, 11
  br i1 %962, label %963, label %970

963:                                              ; preds = %956
  %964 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i64 11) #9
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %1191, label %966

966:                                              ; preds = %963
  %967 = load i8, i8* %3, align 1
  %968 = load i64, i64* %6, align 8
  %969 = zext i8 %967 to i64
  br label %970

970:                                              ; preds = %966, %956
  %971 = phi i64 [ %969, %966 ], [ %957, %956 ]
  %972 = phi i64 [ %968, %966 ], [ %958, %956 ]
  %973 = phi i8 [ %967, %966 ], [ %959, %956 ]
  %974 = icmp slt i8 %973, 0
  %975 = select i1 %974, i64 %972, i64 %971
  %976 = icmp eq i64 %975, 16
  br i1 %976, label %977, label %984

977:                                              ; preds = %970
  %978 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0), i64 16) #9
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %1191, label %980

980:                                              ; preds = %977
  %981 = load i8, i8* %3, align 1
  %982 = load i64, i64* %6, align 8
  %983 = zext i8 %981 to i64
  br label %984

984:                                              ; preds = %980, %970
  %985 = phi i64 [ %983, %980 ], [ %971, %970 ]
  %986 = phi i64 [ %982, %980 ], [ %972, %970 ]
  %987 = phi i8 [ %981, %980 ], [ %973, %970 ]
  %988 = icmp slt i8 %987, 0
  %989 = select i1 %988, i64 %986, i64 %985
  %990 = icmp eq i64 %989, 16
  br i1 %990, label %991, label %998

991:                                              ; preds = %984
  %992 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0), i64 16) #9
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %1191, label %994

994:                                              ; preds = %991
  %995 = load i8, i8* %3, align 1
  %996 = load i64, i64* %6, align 8
  %997 = zext i8 %995 to i64
  br label %998

998:                                              ; preds = %994, %984
  %999 = phi i64 [ %997, %994 ], [ %985, %984 ]
  %1000 = phi i64 [ %996, %994 ], [ %986, %984 ]
  %1001 = phi i8 [ %995, %994 ], [ %987, %984 ]
  %1002 = icmp slt i8 %1001, 0
  %1003 = select i1 %1002, i64 %1000, i64 %999
  %1004 = icmp eq i64 %1003, 17
  br i1 %1004, label %1005, label %1012

1005:                                             ; preds = %998
  %1006 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i64 0, i64 0), i64 17) #9
  %1007 = icmp eq i32 %1006, 0
  br i1 %1007, label %1191, label %1008

1008:                                             ; preds = %1005
  %1009 = load i8, i8* %3, align 1
  %1010 = load i64, i64* %6, align 8
  %1011 = zext i8 %1009 to i64
  br label %1012

1012:                                             ; preds = %1008, %998
  %1013 = phi i64 [ %1011, %1008 ], [ %999, %998 ]
  %1014 = phi i64 [ %1010, %1008 ], [ %1000, %998 ]
  %1015 = phi i8 [ %1009, %1008 ], [ %1001, %998 ]
  %1016 = icmp slt i8 %1015, 0
  %1017 = select i1 %1016, i64 %1014, i64 %1013
  %1018 = icmp eq i64 %1017, 13
  br i1 %1018, label %1019, label %1026

1019:                                             ; preds = %1012
  %1020 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i64 0, i64 0), i64 13) #9
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1191, label %1022

1022:                                             ; preds = %1019
  %1023 = load i8, i8* %3, align 1
  %1024 = load i64, i64* %6, align 8
  %1025 = zext i8 %1023 to i64
  br label %1026

1026:                                             ; preds = %1022, %1012
  %1027 = phi i64 [ %1025, %1022 ], [ %1013, %1012 ]
  %1028 = phi i64 [ %1024, %1022 ], [ %1014, %1012 ]
  %1029 = phi i8 [ %1023, %1022 ], [ %1015, %1012 ]
  %1030 = icmp slt i8 %1029, 0
  %1031 = select i1 %1030, i64 %1028, i64 %1027
  %1032 = icmp eq i64 %1031, 17
  br i1 %1032, label %1033, label %1040

1033:                                             ; preds = %1026
  %1034 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0), i64 17) #9
  %1035 = icmp eq i32 %1034, 0
  br i1 %1035, label %1191, label %1036

1036:                                             ; preds = %1033
  %1037 = load i8, i8* %3, align 1
  %1038 = load i64, i64* %6, align 8
  %1039 = zext i8 %1037 to i64
  br label %1040

1040:                                             ; preds = %1036, %1026
  %1041 = phi i64 [ %1039, %1036 ], [ %1027, %1026 ]
  %1042 = phi i64 [ %1038, %1036 ], [ %1028, %1026 ]
  %1043 = phi i8 [ %1037, %1036 ], [ %1029, %1026 ]
  %1044 = icmp slt i8 %1043, 0
  %1045 = select i1 %1044, i64 %1042, i64 %1041
  %1046 = icmp eq i64 %1045, 20
  br i1 %1046, label %1047, label %1054

1047:                                             ; preds = %1040
  %1048 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.75, i64 0, i64 0), i64 20) #9
  %1049 = icmp eq i32 %1048, 0
  br i1 %1049, label %1191, label %1050

1050:                                             ; preds = %1047
  %1051 = load i8, i8* %3, align 1
  %1052 = load i64, i64* %6, align 8
  %1053 = zext i8 %1051 to i64
  br label %1054

1054:                                             ; preds = %1050, %1040
  %1055 = phi i64 [ %1053, %1050 ], [ %1041, %1040 ]
  %1056 = phi i64 [ %1052, %1050 ], [ %1042, %1040 ]
  %1057 = phi i8 [ %1051, %1050 ], [ %1043, %1040 ]
  %1058 = icmp slt i8 %1057, 0
  %1059 = select i1 %1058, i64 %1056, i64 %1055
  %1060 = icmp eq i64 %1059, 17
  br i1 %1060, label %1061, label %1068

1061:                                             ; preds = %1054
  %1062 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.76, i64 0, i64 0), i64 17) #9
  %1063 = icmp eq i32 %1062, 0
  br i1 %1063, label %1191, label %1064

1064:                                             ; preds = %1061
  %1065 = load i8, i8* %3, align 1
  %1066 = load i64, i64* %6, align 8
  %1067 = zext i8 %1065 to i64
  br label %1068

1068:                                             ; preds = %1064, %1054
  %1069 = phi i64 [ %1067, %1064 ], [ %1055, %1054 ]
  %1070 = phi i64 [ %1066, %1064 ], [ %1056, %1054 ]
  %1071 = phi i8 [ %1065, %1064 ], [ %1057, %1054 ]
  %1072 = icmp slt i8 %1071, 0
  %1073 = select i1 %1072, i64 %1070, i64 %1069
  %1074 = icmp eq i64 %1073, 18
  br i1 %1074, label %1075, label %1082

1075:                                             ; preds = %1068
  %1076 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.77, i64 0, i64 0), i64 18) #9
  %1077 = icmp eq i32 %1076, 0
  br i1 %1077, label %1191, label %1078

1078:                                             ; preds = %1075
  %1079 = load i8, i8* %3, align 1
  %1080 = load i64, i64* %6, align 8
  %1081 = zext i8 %1079 to i64
  br label %1082

1082:                                             ; preds = %1078, %1068
  %1083 = phi i64 [ %1081, %1078 ], [ %1069, %1068 ]
  %1084 = phi i64 [ %1080, %1078 ], [ %1070, %1068 ]
  %1085 = phi i8 [ %1079, %1078 ], [ %1071, %1068 ]
  %1086 = icmp slt i8 %1085, 0
  %1087 = select i1 %1086, i64 %1084, i64 %1083
  %1088 = icmp eq i64 %1087, 12
  br i1 %1088, label %1089, label %1096

1089:                                             ; preds = %1082
  %1090 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.78, i64 0, i64 0), i64 12) #9
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1191, label %1092

1092:                                             ; preds = %1089
  %1093 = load i8, i8* %3, align 1
  %1094 = load i64, i64* %6, align 8
  %1095 = zext i8 %1093 to i64
  br label %1096

1096:                                             ; preds = %1092, %1082
  %1097 = phi i64 [ %1095, %1092 ], [ %1083, %1082 ]
  %1098 = phi i64 [ %1094, %1092 ], [ %1084, %1082 ]
  %1099 = phi i8 [ %1093, %1092 ], [ %1085, %1082 ]
  %1100 = icmp slt i8 %1099, 0
  %1101 = select i1 %1100, i64 %1098, i64 %1097
  %1102 = icmp eq i64 %1101, 5
  br i1 %1102, label %1103, label %1110

1103:                                             ; preds = %1096
  %1104 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.79, i64 0, i64 0), i64 5) #9
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1191, label %1106

1106:                                             ; preds = %1103
  %1107 = load i8, i8* %3, align 1
  %1108 = load i64, i64* %6, align 8
  %1109 = zext i8 %1107 to i64
  br label %1110

1110:                                             ; preds = %1106, %1096
  %1111 = phi i64 [ %1109, %1106 ], [ %1097, %1096 ]
  %1112 = phi i64 [ %1108, %1106 ], [ %1098, %1096 ]
  %1113 = phi i8 [ %1107, %1106 ], [ %1099, %1096 ]
  %1114 = icmp slt i8 %1113, 0
  %1115 = select i1 %1114, i64 %1112, i64 %1111
  %1116 = icmp eq i64 %1115, 15
  br i1 %1116, label %1117, label %1124

1117:                                             ; preds = %1110
  %1118 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0), i64 15) #9
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1191, label %1120

1120:                                             ; preds = %1117
  %1121 = load i8, i8* %3, align 1
  %1122 = load i64, i64* %6, align 8
  %1123 = zext i8 %1121 to i64
  br label %1124

1124:                                             ; preds = %1120, %1110
  %1125 = phi i64 [ %1123, %1120 ], [ %1111, %1110 ]
  %1126 = phi i64 [ %1122, %1120 ], [ %1112, %1110 ]
  %1127 = phi i8 [ %1121, %1120 ], [ %1113, %1110 ]
  %1128 = icmp slt i8 %1127, 0
  %1129 = select i1 %1128, i64 %1126, i64 %1125
  %1130 = icmp eq i64 %1129, 15
  br i1 %1130, label %1131, label %1138

1131:                                             ; preds = %1124
  %1132 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i64 0, i64 0), i64 15) #9
  %1133 = icmp eq i32 %1132, 0
  br i1 %1133, label %1191, label %1134

1134:                                             ; preds = %1131
  %1135 = load i8, i8* %3, align 1
  %1136 = load i64, i64* %6, align 8
  %1137 = zext i8 %1135 to i64
  br label %1138

1138:                                             ; preds = %1134, %1124
  %1139 = phi i64 [ %1137, %1134 ], [ %1125, %1124 ]
  %1140 = phi i64 [ %1136, %1134 ], [ %1126, %1124 ]
  %1141 = phi i8 [ %1135, %1134 ], [ %1127, %1124 ]
  %1142 = icmp slt i8 %1141, 0
  %1143 = select i1 %1142, i64 %1140, i64 %1139
  %1144 = icmp eq i64 %1143, 15
  br i1 %1144, label %1145, label %1152

1145:                                             ; preds = %1138
  %1146 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.82, i64 0, i64 0), i64 15) #9
  %1147 = icmp eq i32 %1146, 0
  br i1 %1147, label %1191, label %1148

1148:                                             ; preds = %1145
  %1149 = load i8, i8* %3, align 1
  %1150 = load i64, i64* %6, align 8
  %1151 = zext i8 %1149 to i64
  br label %1152

1152:                                             ; preds = %1148, %1138
  %1153 = phi i64 [ %1151, %1148 ], [ %1139, %1138 ]
  %1154 = phi i64 [ %1150, %1148 ], [ %1140, %1138 ]
  %1155 = phi i8 [ %1149, %1148 ], [ %1141, %1138 ]
  %1156 = icmp slt i8 %1155, 0
  %1157 = select i1 %1156, i64 %1154, i64 %1153
  %1158 = icmp eq i64 %1157, 14
  br i1 %1158, label %1159, label %1166

1159:                                             ; preds = %1152
  %1160 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.83, i64 0, i64 0), i64 14) #9
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1191, label %1162

1162:                                             ; preds = %1159
  %1163 = load i8, i8* %3, align 1
  %1164 = load i64, i64* %6, align 8
  %1165 = zext i8 %1163 to i64
  br label %1166

1166:                                             ; preds = %1162, %1152
  %1167 = phi i64 [ %1165, %1162 ], [ %1153, %1152 ]
  %1168 = phi i64 [ %1164, %1162 ], [ %1154, %1152 ]
  %1169 = phi i8 [ %1163, %1162 ], [ %1155, %1152 ]
  %1170 = icmp slt i8 %1169, 0
  %1171 = select i1 %1170, i64 %1168, i64 %1167
  %1172 = icmp eq i64 %1171, 14
  br i1 %1172, label %1173, label %1180

1173:                                             ; preds = %1166
  %1174 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.84, i64 0, i64 0), i64 14) #9
  %1175 = icmp eq i32 %1174, 0
  br i1 %1175, label %1191, label %1176

1176:                                             ; preds = %1173
  %1177 = load i8, i8* %3, align 1
  %1178 = load i64, i64* %6, align 8
  %1179 = zext i8 %1177 to i64
  br label %1180

1180:                                             ; preds = %1176, %1166
  %1181 = phi i64 [ %1179, %1176 ], [ %1167, %1166 ]
  %1182 = phi i64 [ %1178, %1176 ], [ %1168, %1166 ]
  %1183 = phi i8 [ %1177, %1176 ], [ %1169, %1166 ]
  %1184 = icmp slt i8 %1183, 0
  %1185 = select i1 %1184, i64 %1182, i64 %1181
  %1186 = icmp eq i64 %1185, 16
  br i1 %1186, label %1187, label %1191

1187:                                             ; preds = %1180
  %1188 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i64 0, i64 0), i64 16) #9
  %1189 = icmp eq i32 %1188, 0
  %1190 = select i1 %1189, i32 83, i32 -1
  ret i32 %1190

1191:                                             ; preds = %1180, %1173, %1159, %1145, %1131, %1117, %1103, %1089, %1075, %1061, %1047, %1033, %1019, %1005, %991, %977, %963, %949, %935, %921, %907, %893, %879, %865, %851, %837, %823, %809, %795, %781, %767, %753, %739, %725, %711, %697, %683, %669, %655, %641, %627, %613, %599, %585, %571, %557, %543, %529, %515, %501, %487, %473, %459, %445, %431, %417, %403, %389, %375, %361, %347, %333, %319, %305, %291, %277, %263, %249, %235, %221, %207, %193, %179, %165, %151, %137, %123, %109, %95, %81, %67, %53, %39, %25, %11
  %1192 = phi i32 [ -1, %11 ], [ 0, %25 ], [ 1, %39 ], [ 2, %53 ], [ 3, %67 ], [ 4, %81 ], [ 5, %95 ], [ 6, %109 ], [ 7, %123 ], [ 8, %137 ], [ 9, %151 ], [ 10, %165 ], [ 11, %179 ], [ 12, %193 ], [ 13, %207 ], [ 14, %221 ], [ 15, %235 ], [ 16, %249 ], [ 17, %263 ], [ 18, %277 ], [ 19, %291 ], [ 20, %305 ], [ 21, %319 ], [ 22, %333 ], [ 23, %347 ], [ 24, %361 ], [ 25, %375 ], [ 26, %389 ], [ 27, %403 ], [ 28, %417 ], [ 29, %431 ], [ 30, %445 ], [ 31, %459 ], [ 32, %473 ], [ 33, %487 ], [ 34, %501 ], [ 35, %515 ], [ 36, %529 ], [ 37, %543 ], [ 38, %557 ], [ 39, %571 ], [ 40, %585 ], [ 41, %599 ], [ 42, %613 ], [ 43, %627 ], [ 44, %641 ], [ 45, %655 ], [ 46, %669 ], [ 50, %683 ], [ 51, %697 ], [ 48, %711 ], [ 49, %725 ], [ 47, %739 ], [ 52, %753 ], [ 53, %767 ], [ 54, %781 ], [ 55, %795 ], [ 56, %809 ], [ 57, %823 ], [ 58, %837 ], [ 59, %851 ], [ 60, %865 ], [ 61, %879 ], [ 62, %893 ], [ 63, %907 ], [ 64, %921 ], [ 65, %935 ], [ 66, %949 ], [ 67, %963 ], [ 68, %977 ], [ 69, %991 ], [ 70, %1005 ], [ 71, %1019 ], [ 72, %1033 ], [ 73, %1047 ], [ 74, %1061 ], [ 75, %1075 ], [ 76, %1089 ], [ 77, %1103 ], [ 78, %1117 ], [ 79, %1131 ], [ 80, %1145 ], [ 81, %1159 ], [ 82, %1173 ], [ -1, %1180 ]
  ret i32 %1192
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem27IsCoarseDerivativeIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -18
  %3 = icmp ult i32 %2, 14
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i14
  %6 = lshr i14 -8183, %5
  %7 = and i14 %6, 1
  %8 = icmp ne i14 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem25IsFineDerivativeIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -19
  %3 = icmp ult i32 %2, 14
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i14
  %6 = lshr i14 -8183, %5
  %7 = and i14 %6, 1
  %8 = icmp ne i14 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem21IsDerivativeIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -17
  %3 = icmp ult i32 %2, 16
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i16
  %6 = lshr i16 -8129, %5
  %7 = and i16 %6, 1
  %8 = icmp ne i16 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem30IsFloatClassificationIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -34
  %3 = icmp ult i32 %2, 4
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem18IsTextureIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -66
  %3 = icmp ult i32 %2, 11
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem21IsImageQueryIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -66
  %3 = icmp ult i32 %2, 5
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i32 %2 to i5
  %6 = lshr i5 -3, %5
  %7 = and i5 %6, 1
  %8 = icmp ne i5 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem22IsDataPackingIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -47
  %3 = icmp ult i32 %2, 5
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem24IsDataUnpackingIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = add i32 %0, -78
  %3 = icmp ult i32 %2, 5
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN4tint3sem18IsBarrierIntrinsicENS0_13IntrinsicTypeE(i32) local_unnamed_addr #1 {
  %2 = icmp eq i32 %0, 83
  %3 = icmp eq i32 %0, 63
  %4 = or i1 %2, %3
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem9IntrinsicC2ENS0_13IntrinsicTypeEPNS0_4TypeERKNSt3__16vectorINS0_9ParameterENS5_9allocatorIS7_EEEE(%"class.tint::sem::Intrinsic"*, i32, %"class.tint::sem::Type"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3sem10CallTargetC2EPNS0_4TypeERKNSt3__16vectorINS0_9ParameterENS4_9allocatorIS6_EEEE(%"class.tint::sem::CallTarget"* %5, %"class.tint::sem::Type"* %2, %"class.std::__1::vector"* dereferenceable(24) %3) #9
  %6 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN4tint3sem9IntrinsicE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  store i32 %1, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem9IntrinsicD2Ev(%"class.tint::sem::Intrinsic"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3sem10CallTargetD2Ev(%"class.tint::sem::CallTarget"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4tint3sem9IntrinsicD0Ev(%"class.tint::sem::Intrinsic"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4tint3sem10CallTargetD2Ev(%"class.tint::sem::CallTarget"* %2) #9
  %3 = bitcast %"class.tint::sem::Intrinsic"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic18IsCoarseDerivativeEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -18
  %5 = icmp ult i32 %4, 14
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i14
  %8 = lshr i14 -8183, %7
  %9 = and i14 %8, 1
  %10 = icmp ne i14 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic16IsFineDerivativeEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -19
  %5 = icmp ult i32 %4, 14
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i14
  %8 = lshr i14 -8183, %7
  %9 = and i14 %8, 1
  %10 = icmp ne i14 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic12IsDerivativeEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -17
  %5 = icmp ult i32 %4, 16
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i16
  %8 = lshr i16 -8129, %7
  %9 = and i16 %8, 1
  %10 = icmp ne i16 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic21IsFloatClassificationEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -34
  %5 = icmp ult i32 %4, 4
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic9IsTextureEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -66
  %5 = icmp ult i32 %4, 11
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic12IsImageQueryEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -66
  %5 = icmp ult i32 %4, 5
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i5
  %8 = lshr i5 -3, %7
  %9 = and i5 %8, 1
  %10 = icmp ne i5 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic13IsDataPackingEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -47
  %5 = icmp ult i32 %4, 5
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic15IsDataUnpackingEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -78
  %5 = icmp ult i32 %4, 5
  ret i1 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4tint3sem9Intrinsic9IsBarrierEv(%"class.tint::sem::Intrinsic"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.tint::sem::Intrinsic", %"class.tint::sem::Intrinsic"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 83
  %5 = icmp eq i32 %3, 63
  %6 = or i1 %4, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.tint::TypeInfo"* @_ZNK4tint8CastableINS_3sem9IntrinsicENS1_10CallTargetEE8TypeInfoEv(%"class.tint::Castable"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.tint::TypeInfo"* @_ZN4tint6detail10TypeInfoOfINS_3sem9IntrinsicEE4infoE
}

declare void @_ZN4tint3sem10CallTargetC2EPNS0_4TypeERKNSt3__16vectorINS0_9ParameterENS4_9allocatorIS6_EEEE(%"class.tint::sem::CallTarget"*, %"class.tint::sem::Type"*, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4tint3sem10CallTargetD2Ev(%"class.tint::sem::CallTarget"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
