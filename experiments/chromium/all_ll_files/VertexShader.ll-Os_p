; ModuleID = '../../third_party/swiftshader/src/Shader/VertexShader.cpp'
source_filename = "../../third_party/swiftshader/src/Shader/VertexShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sw::VertexShader" = type <{ %"class.sw::Shader.base", [32 x %"struct.sw::Shader::Semantic"], [34 x [4 x %"struct.sw::Shader::Semantic"]], [32 x i8], [3 x i8], i32, i32, i8, i8, i8, [5 x i8] }>
%"class.sw::Shader.base" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8 }>
%"struct.sw::Shader::Limits" = type { i32, i32, i32, i32 }
%union.anon = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"**, %"class.std::__1::__compressed_pair" }
%"struct.sw::Shader::Instruction" = type <{ i32 (...)**, i32, %union.anon.0, i8, i8, i8, i8, i32, i32, i8, [3 x i8], %"struct.sw::Shader::DestinationParameter", [5 x %"struct.sw::Shader::SourceParameter"], %union.anon.7, [4 x i8] }>
%union.anon.0 = type { i32 }
%"struct.sw::Shader::DestinationParameter" = type { %"struct.sw::Shader::Parameter.base", %union.anon.5, i8, i8 }
%"struct.sw::Shader::Parameter.base" = type <{ %union.anon.2, i8 }>
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, %"struct.sw::Shader::Relative" }
%"struct.sw::Shader::Relative" = type { i8, i32, i8, i32, i8 }
%union.anon.5 = type { i8 }
%"struct.sw::Shader::SourceParameter" = type { %"struct.sw::Shader::Parameter.base", [3 x i8] }
%union.anon.7 = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.sw::Shader::Instruction"** }
%"struct.sw::Shader::Semantic" = type { i8, i8, i8, i8 }
%"class.sw::Shader" = type <{ i32 (...)**, i32, i32, i32, i8, i8, i8, i8, %"struct.sw::Shader::Limits", i32, %union.anon, [2 x i8], %"class.std::__1::vector", i16, [2 x i8], i32, i8, i8, i8, i8, i8, [3 x i8] }>

@_ZTVN2sw12VertexShaderE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sw::VertexShader"*)* @_ZN2sw12VertexShaderD2Ev to i8*), i8* bitcast (void (%"class.sw::VertexShader"*)* @_ZN2sw12VertexShaderD0Ev to i8*)] }, align 8
@_ZTVN2sw6Shader11InstructionE = external unnamed_addr constant { [4 x i8*] }, align 8

@_ZN2sw12VertexShaderC1EPKS0_ = hidden unnamed_addr alias void (%"class.sw::VertexShader"*, %"class.sw::VertexShader"*), void (%"class.sw::VertexShader"*, %"class.sw::VertexShader"*)* @_ZN2sw12VertexShaderC2EPKS0_
@_ZN2sw12VertexShaderC1EPKm = hidden unnamed_addr alias void (%"class.sw::VertexShader"*, i64*), void (%"class.sw::VertexShader"*, i64*)* @_ZN2sw12VertexShaderC2EPKm
@_ZN2sw12VertexShaderD1Ev = hidden unnamed_addr alias void (%"class.sw::VertexShader"*), void (%"class.sw::VertexShader"*)* @_ZN2sw12VertexShaderD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShaderC2EPKS0_(%"class.sw::VertexShader"*, %"class.sw::VertexShader"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sw::VertexShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"* %3) #10
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw12VertexShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1
  %6 = getelementptr inbounds [32 x %"struct.sw::Shader::Semantic"], [32 x %"struct.sw::Shader::Semantic"]* %5, i64 0, i64 0
  %7 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 32
  br label %8

8:                                                ; preds = %8, %2
  %9 = phi %"struct.sw::Shader::Semantic"* [ %6, %2 ], [ %14, %8 ]
  %10 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 0
  store i8 -1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 1
  store i8 -1, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 2
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 0, i32 3
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %9, i64 1
  %15 = icmp eq %"struct.sw::Shader::Semantic"* %14, %7
  br i1 %15, label %16, label %8

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2
  %18 = getelementptr inbounds [34 x [4 x %"struct.sw::Shader::Semantic"]], [34 x [4 x %"struct.sw::Shader::Semantic"]]* %17, i64 0, i64 0, i64 0
  %19 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 0, i64 136
  br label %20

20:                                               ; preds = %20, %16
  %21 = phi %"struct.sw::Shader::Semantic"* [ %18, %16 ], [ %26, %20 ]
  %22 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %21, i64 0, i32 0
  store i8 -1, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %21, i64 0, i32 1
  store i8 -1, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %21, i64 0, i32 2
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %21, i64 0, i32 3
  store i8 0, i8* %25, align 1
  %26 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %21, i64 1
  %27 = icmp eq %"struct.sw::Shader::Semantic"* %26, %19
  br i1 %27, label %28, label %20

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 10, i32 0
  store i16 768, i16* %29, align 4
  %30 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 5
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 6
  store i32 34, i32* %31, align 4
  %32 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 7
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 8
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 9
  store i8 0, i8* %34, align 2
  br label %41

35:                                               ; preds = %41
  %36 = icmp eq %"class.sw::VertexShader"* %1, null
  br i1 %36, label %78, label %37

37:                                               ; preds = %35
  %38 = bitcast %"class.sw::VertexShader"* %1 to %"class.sw::Shader"*
  %39 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %38) #10
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %48, label %66

41:                                               ; preds = %41, %28
  %42 = phi i64 [ 0, %28 ], [ %46, %41 ]
  %43 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 %42, i32 0
  %44 = bitcast i8* %43 to i32*
  store i32 65535, i32* %44, align 1
  %45 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 3, i64 %42
  store i8 0, i8* %45, align 1
  %46 = add nuw nsw i64 %42, 1
  %47 = icmp eq i64 %46, 32
  br i1 %47, label %35, label %41

48:                                               ; preds = %66, %37
  %49 = getelementptr inbounds [34 x [4 x %"struct.sw::Shader::Semantic"]], [34 x [4 x %"struct.sw::Shader::Semantic"]]* %17, i64 0, i64 0, i64 0, i32 0
  %50 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 2, i64 0, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %49, i8* align 1 %50, i64 544, i1 false)
  %51 = getelementptr inbounds [32 x %"struct.sw::Shader::Semantic"], [32 x %"struct.sw::Shader::Semantic"]* %5, i64 0, i64 0, i32 0
  %52 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 1, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %51, i8* align 1 %52, i64 128, i1 false)
  %53 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 3, i64 0
  %54 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 3, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %54, i64 32, i1 false)
  %55 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 5
  %56 = load i32, i32* %55, align 8
  store i32 %56, i32* %30, align 8
  %57 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 6
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %31, align 4
  %59 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 7
  %60 = load i8, i8* %59, align 8, !range !2
  store i8 %60, i8* %32, align 8
  %61 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 8
  %62 = load i8, i8* %61, align 1, !range !2
  store i8 %62, i8* %33, align 1
  %63 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %1, i64 0, i32 0, i32 13
  %64 = load i16, i16* %63, align 8
  %65 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 13
  store i16 %64, i16* %65, align 8
  tail call void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"* %3) #10
  tail call void @_ZN2sw12VertexShader7analyzeEv(%"class.sw::VertexShader"* %0) #11
  br label %78

66:                                               ; preds = %37, %66
  %67 = phi i64 [ %75, %66 ], [ 0, %37 ]
  %68 = tail call i8* @_Znwm(i64 208) #12
  %69 = bitcast i8* %68 to %"struct.sw::Shader::Instruction"*
  %70 = tail call %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"* nonnull %38, i64 %67) #10
  %71 = bitcast i8* %68 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw6Shader11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %72 = getelementptr inbounds i8, i8* %68, i64 8
  %73 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %70, i64 0, i32 1
  %74 = bitcast i32* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* align 8 %74, i64 196, i1 false) #13
  tail call void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"* %3, %"struct.sw::Shader::Instruction"* nonnull %69) #10
  %75 = add nuw i64 %67, 1
  %76 = tail call i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"* nonnull %38) #10
  %77 = icmp ult i64 %75, %76
  br i1 %77, label %66, label %48

78:                                               ; preds = %35, %48
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: optsize
declare i64 @_ZNK2sw6Shader9getLengthEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader6appendEPNS0_11InstructionE(%"class.sw::Shader"*, %"struct.sw::Shader::Instruction"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: optsize
declare %"struct.sw::Shader::Instruction"* @_ZNK2sw6Shader14getInstructionEm(%"class.sw::Shader"*, i64) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader7analyzeEv(%"class.sw::VertexShader"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2sw12VertexShader12analyzeInputEv(%"class.sw::VertexShader"* %0) #11
  tail call void @_ZN2sw12VertexShader13analyzeOutputEv(%"class.sw::VertexShader"* %0) #11
  %2 = bitcast %"class.sw::VertexShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6Shader21analyzeDirtyConstantsEv(%"class.sw::Shader"* %2) #10
  %3 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 9
  store i8 0, i8* %3, align 2
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %5 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %4, align 8
  %6 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %7 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %6, align 8
  %8 = icmp eq %"struct.sw::Shader::Instruction"** %5, %7
  br i1 %8, label %19, label %11

9:                                                ; preds = %11
  %10 = icmp eq %"struct.sw::Shader::Instruction"** %17, %7
  br i1 %10, label %19, label %11

11:                                               ; preds = %1, %9
  %12 = phi %"struct.sw::Shader::Instruction"** [ %17, %9 ], [ %5, %1 ]
  %13 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %12, align 8
  %14 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %13, i64 0, i32 12, i64 1, i32 0, i32 1
  %15 = load i8, i8* %14, align 4
  %16 = icmp eq i8 %15, 10
  %17 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %12, i64 1
  br i1 %16, label %18, label %9

18:                                               ; preds = %11
  store i8 1, i8* %3, align 2
  br label %19

19:                                               ; preds = %9, %1, %18
  tail call void @_ZN2sw6Shader23analyzeDynamicBranchingEv(%"class.sw::Shader"* %2) #10
  tail call void @_ZN2sw6Shader15analyzeSamplersEv(%"class.sw::Shader"* %2) #10
  tail call void @_ZN2sw6Shader16analyzeCallSitesEv(%"class.sw::Shader"* %2) #10
  tail call void @_ZN2sw6Shader25analyzeIndirectAddressingEv(%"class.sw::Shader"* %2) #10
  tail call void @_ZN2sw6Shader13analyzeLimitsEv(%"class.sw::Shader"* %2) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShaderC2EPKm(%"class.sw::VertexShader"*, i64*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.sw::VertexShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderC2Ev(%"class.sw::Shader"* %3) #10
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2sw12VertexShaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 0
  %6 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 32
  br label %7

7:                                                ; preds = %7, %2
  %8 = phi %"struct.sw::Shader::Semantic"* [ %5, %2 ], [ %13, %7 ]
  %9 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 0
  store i8 -1, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 1
  store i8 -1, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 2
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 0, i32 3
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %8, i64 1
  %14 = icmp eq %"struct.sw::Shader::Semantic"* %13, %6
  br i1 %14, label %15, label %7

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 0, i64 0
  %17 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 0, i64 136
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi %"struct.sw::Shader::Semantic"* [ %16, %15 ], [ %24, %18 ]
  %20 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %19, i64 0, i32 0
  store i8 -1, i8* %20, align 1
  %21 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %19, i64 0, i32 1
  store i8 -1, i8* %21, align 1
  %22 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %19, i64 0, i32 2
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %19, i64 0, i32 3
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.sw::Shader::Semantic", %"struct.sw::Shader::Semantic"* %19, i64 1
  %25 = icmp eq %"struct.sw::Shader::Semantic"* %24, %17
  br i1 %25, label %26, label %18

26:                                               ; preds = %18
  tail call void @_ZN2sw6Shader5parseEPKm(%"class.sw::Shader"* %3, i64* %1) #10
  %27 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 5
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 6
  store i32 34, i32* %28, align 4
  %29 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 7
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 8
  store i8 0, i8* %30, align 1
  %31 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 9
  store i8 0, i8* %31, align 2
  br label %33

32:                                               ; preds = %33
  tail call void @_ZN2sw6Shader8optimizeEv(%"class.sw::Shader"* %3) #10
  tail call void @_ZN2sw12VertexShader7analyzeEv(%"class.sw::VertexShader"* %0) #11
  ret void

33:                                               ; preds = %33, %26
  %34 = phi i64 [ 0, %26 ], [ %38, %33 ]
  %35 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 %34, i32 0
  %36 = bitcast i8* %35 to i32*
  store i32 65535, i32* %36, align 1
  %37 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 3, i64 %34
  store i8 0, i8* %37, align 1
  %38 = add nuw nsw i64 %34, 1
  %39 = icmp eq i64 %38, 32
  br i1 %39, label %32, label %33
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader5parseEPKm(%"class.sw::Shader"*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShaderD2Ev(%"class.sw::VertexShader"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sw::VertexShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"* %2) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShaderD0Ev(%"class.sw::VertexShader"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.sw::VertexShader"* %0 to %"class.sw::Shader"*
  tail call void @_ZN2sw6ShaderD2Ev(%"class.sw::Shader"* %2) #10
  %3 = bitcast %"class.sw::VertexShader"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #12
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZN2sw12VertexShader8validateEPKm(i64* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq i64* %0, null
  br i1 %2, label %41, label %3

3:                                                ; preds = %1
  %4 = load i64, i64* %0, align 8
  %5 = trunc i64 %4 to i16
  %6 = and i64 %4, 4294966272
  %7 = icmp eq i64 %6, 4294836224
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = icmp eq i64 %4, 65535
  br i1 %9, label %41, label %10

10:                                               ; preds = %8, %27
  %11 = phi i64 [ %34, %27 ], [ %4, %8 ]
  %12 = phi i32 [ %31, %27 ], [ 0, %8 ]
  %13 = phi i32 [ %28, %27 ], [ 1, %8 ]
  %14 = and i64 %11, 65535
  %15 = icmp eq i64 %14, 65534
  br i1 %15, label %16, label %20

16:                                               ; preds = %10
  %17 = lshr i64 %11, 16
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 32767
  br label %27

20:                                               ; preds = %10
  %21 = trunc i64 %11 to i16
  %22 = add i16 %21, -64
  %23 = icmp ult i16 %22, 30
  br i1 %23, label %36, label %24

24:                                               ; preds = %36, %20
  %25 = add nsw i32 %13, 1
  %26 = tail call i32 @_ZN2sw6Shader4sizeEmt(i64 %11, i16 zeroext %5) #10
  br label %27

27:                                               ; preds = %24, %16
  %28 = phi i32 [ %13, %16 ], [ %25, %24 ]
  %29 = phi i32 [ %19, %16 ], [ %26, %24 ]
  %30 = add i32 %12, 1
  %31 = add i32 %30, %29
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %0, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 65535
  br i1 %35, label %41, label %10

36:                                               ; preds = %20
  %37 = zext i16 %22 to i32
  %38 = lshr i32 1073496063, %37
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %24, label %41

41:                                               ; preds = %36, %27, %8, %3, %1
  %42 = phi i32 [ 0, %1 ], [ 0, %3 ], [ 1, %8 ], [ 0, %36 ], [ %28, %27 ]
  ret i32 %42
}

; Function Attrs: optsize
declare i32 @_ZN2sw6Shader4sizeEmt(i64, i16 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2sw12VertexShader23containsTextureSamplingEv(%"class.sw::VertexShader"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader8setInputEiRKNS_6Shader8SemanticENS0_10AttribTypeE(%"class.sw::VertexShader"* nocapture, i32, %"struct.sw::Shader::Semantic"* nocapture readonly dereferenceable(4), i8 zeroext) local_unnamed_addr #7 align 2 {
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 %5, i32 0
  %7 = bitcast %"struct.sw::Shader::Semantic"* %2 to i32*
  %8 = bitcast i8* %6 to i32*
  %9 = load i32, i32* %7, align 1
  store i32 %9, i32* %8, align 1
  %10 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 3, i64 %5
  store i8 %3, i8* %10, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader9setOutputEiiRKNS_6Shader8SemanticE(%"class.sw::VertexShader"* nocapture, i32, i32, %"struct.sw::Shader::Semantic"* nocapture readonly dereferenceable(4)) local_unnamed_addr #7 align 2 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %4
  %7 = sext i32 %1 to i64
  %8 = bitcast %"struct.sw::Shader::Semantic"* %3 to i32*
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %6
  %12 = phi i64 [ 0, %6 ], [ %16, %11 ]
  %13 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %7, i64 %12, i32 0
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %8, align 1
  store i32 %15, i32* %14, align 1
  %16 = add nuw nsw i64 %12, 1
  %17 = icmp eq i64 %16, %9
  br i1 %17, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw12VertexShader19setPositionRegisterEi(%"class.sw::VertexShader"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = bitcast %"class.sw::VertexShader"* %0 to i8*
  %4 = sext i32 %1 to i64
  %5 = shl nsw i64 %4, 4
  %6 = add nsw i64 %5, 213
  %7 = getelementptr i8, i8* %3, i64 %6
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 5
  store i32 %1, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable writeonly
define hidden void @_ZN2sw12VertexShader20setPointSizeRegisterEi(%"class.sw::VertexShader"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %3, i64 0, i32 0
  %5 = bitcast i8* %4 to <4 x i32>*
  store <4 x i32> <i32 4, i32 4, i32 4, i32 4>, <4 x i32>* %5, align 1
  %6 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 6
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw12VertexShader8getInputEi(%"class.sw::VertexShader"* readnone, i32) local_unnamed_addr #9 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 %3
  ret %"struct.sw::Shader::Semantic"* %4
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i8 @_ZNK2sw12VertexShader13getAttribTypeEi(%"class.sw::VertexShader"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 3, i64 %3
  %5 = load i8, i8* %4, align 1
  ret i8 %5
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden dereferenceable(4) %"struct.sw::Shader::Semantic"* @_ZNK2sw12VertexShader9getOutputEii(%"class.sw::VertexShader"* readnone, i32, i32) local_unnamed_addr #9 align 2 {
  %4 = sext i32 %1 to i64
  %5 = sext i32 %2 to i64
  %6 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %4, i64 %5
  ret %"struct.sw::Shader::Semantic"* %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader12analyzeInputEv(%"class.sw::VertexShader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12
  %3 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %4 = bitcast %"struct.sw::Shader::Instruction"*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %41, %1
  ret void

10:                                               ; preds = %1, %41
  %11 = phi i64 [ %42, %41 ], [ %7, %1 ]
  %12 = phi i64 [ %43, %41 ], [ %5, %1 ]
  %13 = phi i64 [ %45, %41 ], [ 0, %1 ]
  %14 = phi i32 [ %44, %41 ], [ 0, %1 ]
  %15 = inttoptr i64 %11 to %"struct.sw::Shader::Instruction"**
  %16 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %15, i64 %13
  %17 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %16, align 8
  %18 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %17, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 31
  br i1 %20, label %21, label %41

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %17, i64 0, i32 11, i32 0, i32 1
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %17, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %17, i64 0, i32 8
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %17, i64 0, i32 9
  %31 = load i8, i8* %30, align 4
  %32 = sext i32 %27 to i64
  %33 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 1, i64 %32, i32 0
  %34 = bitcast i8* %33 to i32*
  %35 = zext i8 %31 to i32
  %36 = shl nuw nsw i32 %35, 8
  %37 = and i32 %29, 255
  %38 = or i32 %36, %37
  store i32 %38, i32* %34, align 1
  %39 = load i64, i64* %4, align 8
  %40 = load i64, i64* %6, align 8
  br label %41

41:                                               ; preds = %10, %21, %25
  %42 = phi i64 [ %11, %10 ], [ %11, %21 ], [ %40, %25 ]
  %43 = phi i64 [ %12, %10 ], [ %12, %21 ], [ %39, %25 ]
  %44 = add i32 %14, 1
  %45 = zext i32 %44 to i64
  %46 = sub i64 %43, %42
  %47 = ashr exact i64 %46, 3
  %48 = icmp ugt i64 %47, %45
  br i1 %48, label %10, label %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader13analyzeOutputEv(%"class.sw::VertexShader"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 10, i32 0
  %3 = load i16, i16* %2, align 4
  %4 = icmp ult i16 %3, 768
  %5 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  br i1 %4, label %6, label %159

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 16, i1 false)
  %8 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %9 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %10 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %9, align 8
  %11 = icmp eq %"struct.sw::Shader::Instruction"** %8, %10
  br i1 %11, label %261, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 2, i64 0, i32 0
  %14 = bitcast i8* %13 to i32*
  %15 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 2, i64 1, i32 0
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 2, i64 2, i32 0
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 2, i64 3, i32 0
  %20 = bitcast i8* %19 to i32*
  %21 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 1, i64 0, i32 0
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 1, i64 1, i32 0
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 1, i64 2, i32 0
  %26 = bitcast i8* %25 to i32*
  %27 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 1, i64 3, i32 0
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 11, i64 0, i32 0
  %30 = bitcast i8* %29 to i32*
  %31 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 11, i64 1, i32 0
  %32 = bitcast i8* %31 to i32*
  %33 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 6
  br label %34

34:                                               ; preds = %12, %156
  %35 = phi %"struct.sw::Shader::Instruction"** [ %8, %12 ], [ %157, %156 ]
  %36 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %36, i64 0, i32 11
  %38 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %36, i64 0, i32 11, i32 0, i32 1
  %39 = load i8, i8* %38, align 4
  switch i8 %39, label %156 [
    i8 4, label %40
    i8 5, label %45
    i8 6, label %96
  ]

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  switch i32 %42, label %156 [
    i32 2, label %44
    i32 1, label %43
  ]

43:                                               ; preds = %40
  store i32 11, i32* %30, align 1
  br label %156

44:                                               ; preds = %40
  store i32 4, i32* %32, align 1
  store i32 11, i32* %33, align 4
  br label %156

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %156 [
    i32 0, label %48
    i32 1, label %72
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %36, i64 0, i32 11, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %48
  store i32 10, i32* %22, align 1
  %54 = load i8, i8* %49, align 1
  br label %55

55:                                               ; preds = %48, %53
  %56 = phi i8 [ %50, %48 ], [ %54, %53 ]
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  store i32 10, i32* %24, align 1
  %60 = load i8, i8* %49, align 1
  br label %61

61:                                               ; preds = %55, %59
  %62 = phi i8 [ %56, %55 ], [ %60, %59 ]
  %63 = and i8 %62, 4
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  store i32 10, i32* %26, align 1
  %66 = load i8, i8* %49, align 1
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi i8 [ %62, %61 ], [ %66, %65 ]
  %69 = and i8 %68, 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %156, label %71

71:                                               ; preds = %67
  store i32 10, i32* %28, align 1
  br label %156

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %36, i64 0, i32 11, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = and i8 %74, 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %72
  store i32 266, i32* %14, align 1
  %78 = load i8, i8* %73, align 1
  br label %79

79:                                               ; preds = %72, %77
  %80 = phi i8 [ %74, %72 ], [ %78, %77 ]
  %81 = and i8 %80, 2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  store i32 266, i32* %16, align 1
  %84 = load i8, i8* %73, align 1
  br label %85

85:                                               ; preds = %79, %83
  %86 = phi i8 [ %80, %79 ], [ %84, %83 ]
  %87 = and i8 %86, 4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  store i32 266, i32* %18, align 1
  %90 = load i8, i8* %73, align 1
  br label %91

91:                                               ; preds = %85, %89
  %92 = phi i8 [ %86, %85 ], [ %90, %89 ]
  %93 = and i8 %92, 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %156, label %95

95:                                               ; preds = %91
  store i32 266, i32* %20, align 1
  br label %156

96:                                               ; preds = %34
  %97 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %36, i64 0, i32 11, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = and i8 %98, 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %112, label %101

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, 3
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %105, i64 0, i32 0
  %107 = bitcast i8* %106 to i32*
  %108 = shl i32 %103, 8
  %109 = and i32 %108, 65280
  %110 = or i32 %109, 5
  store i32 %110, i32* %107, align 1
  %111 = load i8, i8* %97, align 1
  br label %112

112:                                              ; preds = %96, %101
  %113 = phi i8 [ %98, %96 ], [ %111, %101 ]
  %114 = and i8 %113, 2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, 3
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %120, i64 1, i32 0
  %122 = bitcast i8* %121 to i32*
  %123 = shl i32 %118, 8
  %124 = and i32 %123, 65280
  %125 = or i32 %124, 5
  store i32 %125, i32* %122, align 1
  %126 = load i8, i8* %97, align 1
  br label %127

127:                                              ; preds = %112, %116
  %128 = phi i8 [ %113, %112 ], [ %126, %116 ]
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %142, label %131

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = add i32 %133, 3
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %135, i64 2, i32 0
  %137 = bitcast i8* %136 to i32*
  %138 = shl i32 %133, 8
  %139 = and i32 %138, 65280
  %140 = or i32 %139, 5
  store i32 %140, i32* %137, align 1
  %141 = load i8, i8* %97, align 1
  br label %142

142:                                              ; preds = %127, %131
  %143 = phi i8 [ %128, %127 ], [ %141, %131 ]
  %144 = and i8 %143, 8
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %156, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = add i32 %148, 3
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %150, i64 3, i32 0
  %152 = bitcast i8* %151 to i32*
  %153 = shl i32 %148, 8
  %154 = and i32 %153, 65280
  %155 = or i32 %154, 5
  store i32 %155, i32* %152, align 1
  br label %156

156:                                              ; preds = %45, %67, %91, %142, %34, %146, %71, %95, %43, %44, %40
  %157 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %35, i64 1
  %158 = icmp eq %"struct.sw::Shader::Instruction"** %157, %10
  br i1 %158, label %261, label %34

159:                                              ; preds = %1
  %160 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %161 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %162 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %161, align 8
  %163 = icmp eq %"struct.sw::Shader::Instruction"** %160, %162
  br i1 %163, label %261, label %164

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 6
  %166 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 5
  br label %167

167:                                              ; preds = %164, %258
  %168 = phi %"struct.sw::Shader::Instruction"** [ %160, %164 ], [ %259, %258 ]
  %169 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %168, align 8
  %170 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = icmp eq i32 %171, 31
  br i1 %172, label %173, label %258

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 11
  %175 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 11, i32 0, i32 1
  %176 = load i8, i8* %175, align 8
  %177 = icmp eq i8 %176, 6
  br i1 %177, label %178, label %258

178:                                              ; preds = %173
  %179 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 8
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 9
  %182 = load i8, i8* %181, align 4
  %183 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %169, i64 0, i32 11, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = and i8 %184, 1
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %198, label %187

187:                                              ; preds = %178
  %188 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %190, i64 0, i32 0
  %192 = bitcast i8* %191 to i32*
  %193 = zext i8 %182 to i32
  %194 = shl nuw nsw i32 %193, 8
  %195 = and i32 %180, 255
  %196 = or i32 %194, %195
  store i32 %196, i32* %192, align 1
  %197 = load i8, i8* %183, align 1
  br label %198

198:                                              ; preds = %178, %187
  %199 = phi i8 [ %184, %178 ], [ %197, %187 ]
  %200 = and i8 %199, 2
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %205, i64 1, i32 0
  %207 = bitcast i8* %206 to i32*
  %208 = zext i8 %182 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = and i32 %180, 255
  %211 = or i32 %209, %210
  store i32 %211, i32* %207, align 1
  %212 = load i8, i8* %183, align 1
  br label %213

213:                                              ; preds = %198, %202
  %214 = phi i8 [ %199, %198 ], [ %212, %202 ]
  %215 = and i8 %214, 4
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i64
  %221 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %220, i64 2, i32 0
  %222 = bitcast i8* %221 to i32*
  %223 = zext i8 %182 to i32
  %224 = shl nuw nsw i32 %223, 8
  %225 = and i32 %180, 255
  %226 = or i32 %224, %225
  store i32 %226, i32* %222, align 1
  %227 = load i8, i8* %183, align 1
  br label %228

228:                                              ; preds = %213, %217
  %229 = phi i8 [ %214, %213 ], [ %227, %217 ]
  %230 = and i8 %229, 8
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %232, label %234

232:                                              ; preds = %228
  %233 = and i32 %180, 255
  br label %244

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 2, i64 %237, i64 3, i32 0
  %239 = bitcast i8* %238 to i32*
  %240 = zext i8 %182 to i32
  %241 = shl nuw nsw i32 %240, 8
  %242 = and i32 %180, 255
  %243 = or i32 %241, %242
  store i32 %243, i32* %239, align 1
  br label %244

244:                                              ; preds = %232, %234
  %245 = phi i32 [ %233, %232 ], [ %242, %234 ]
  %246 = icmp eq i32 %245, 0
  %247 = icmp eq i8 %182, 0
  %248 = and i1 %246, %247
  br i1 %248, label %249, label %252

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  store i32 %251, i32* %166, align 8
  br label %258

252:                                              ; preds = %244
  %253 = icmp eq i32 %245, 4
  %254 = and i1 %253, %247
  br i1 %254, label %255, label %258

255:                                              ; preds = %252
  %256 = getelementptr inbounds %"struct.sw::Shader::DestinationParameter", %"struct.sw::Shader::DestinationParameter"* %174, i64 0, i32 0, i32 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  store i32 %257, i32* %165, align 4
  br label %258

258:                                              ; preds = %249, %252, %255, %173, %167
  %259 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %168, i64 1
  %260 = icmp eq %"struct.sw::Shader::Instruction"** %259, %162
  br i1 %260, label %261, label %167

261:                                              ; preds = %258, %156, %159, %6
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader21analyzeDirtyConstantsEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2sw12VertexShader22analyzeTextureSamplingEv(%"class.sw::VertexShader"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 9
  store i8 0, i8* %2, align 2
  %3 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 0
  %4 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %3, align 8
  %5 = getelementptr inbounds %"class.sw::VertexShader", %"class.sw::VertexShader"* %0, i64 0, i32 0, i32 12, i32 0, i32 1
  %6 = load %"struct.sw::Shader::Instruction"**, %"struct.sw::Shader::Instruction"*** %5, align 8
  %7 = icmp eq %"struct.sw::Shader::Instruction"** %4, %6
  br i1 %7, label %18, label %10

8:                                                ; preds = %10
  %9 = icmp eq %"struct.sw::Shader::Instruction"** %16, %6
  br i1 %9, label %18, label %10

10:                                               ; preds = %1, %8
  %11 = phi %"struct.sw::Shader::Instruction"** [ %16, %8 ], [ %4, %1 ]
  %12 = load %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %11, align 8
  %13 = getelementptr inbounds %"struct.sw::Shader::Instruction", %"struct.sw::Shader::Instruction"* %12, i64 0, i32 12, i64 1, i32 0, i32 1
  %14 = load i8, i8* %13, align 4
  %15 = icmp eq i8 %14, 10
  %16 = getelementptr inbounds %"struct.sw::Shader::Instruction"*, %"struct.sw::Shader::Instruction"** %11, i64 1
  br i1 %15, label %17, label %8

17:                                               ; preds = %10
  store i8 1, i8* %2, align 2
  br label %18

18:                                               ; preds = %8, %1, %17
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw6Shader23analyzeDynamicBranchingEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader15analyzeSamplersEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader16analyzeCallSitesEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader25analyzeIndirectAddressingEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw6Shader13analyzeLimitsEv(%"class.sw::Shader"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind optsize }
attributes #11 = { optsize }
attributes #12 = { builtin nounwind optsize }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
