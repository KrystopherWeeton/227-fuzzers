; ModuleID = '../../cc/trees/clip_node.cc'
source_filename = "../../cc/trees/clip_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::ClipNode" = type <{ i32, i32, i32, %"class.gfx::RectF", [4 x i8], %"class.base::StackVector", %"class.gfx::RectF", %"class.absl::optional", i32, [4 x i8] }>
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<cc::ClipRectData, 3>::Source" = type { [72 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*, %"class.std::__1::__compressed_pair" }
%"struct.cc::ClipRectData" = type { i32, %"struct.cc::ConditionalClip" }
%"struct.cc::ConditionalClip" = type { i8, %"class.gfx::RectF" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::ClipRectData"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.base::StackAllocator" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::ClipExpander" }
%"class.cc::ClipExpander" = type { i32 }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"parent_id\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"clip_type\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"clip\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"transform_id\00", align 1

@_ZN2cc8ClipNodeC1Ev = hidden unnamed_addr alias void (%"struct.cc::ClipNode"*), void (%"struct.cc::ClipNode"*)* @_ZN2cc8ClipNodeC2Ev
@_ZN2cc8ClipNodeC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*), void (%"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*)* @_ZN2cc8ClipNodeC2ERKS0_
@_ZN2cc8ClipNodeD1Ev = hidden unnamed_addr alias void (%"struct.cc::ClipNode"*), void (%"struct.cc::ClipNode"*)* @_ZN2cc8ClipNodeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8ClipNodeC2Ev(%"struct.cc::ClipNode"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %9 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  store %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %6, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %8, align 8
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2
  %11 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 1
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #6
  %13 = ptrtoint %"class.base::StackVector"* %5 to i64
  %14 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %11 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.cc::ClipRectData"** %15 to i64*
  %17 = bitcast %"class.std::__1::vector"* %10 to i64*
  %18 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %19 = bitcast %"struct.cc::ClipRectData"** %18 to i64*
  %20 = icmp eq %"class.base::StackVector"* %5, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %1
  %22 = tail call i8* @_Znwm(i64 72) #7
  %23 = ptrtoint i8* %22 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 72
  br label %26

25:                                               ; preds = %1
  store i8 1, i8* %7, align 4
  br label %26

26:                                               ; preds = %21, %25
  %27 = phi i8* [ %24, %21 ], [ %7, %25 ]
  %28 = phi i64 [ %23, %21 ], [ %13, %25 ]
  %29 = ptrtoint i8* %27 to i64
  store i64 %28, i64* %17, align 8
  store i64 %28, i64* %19, align 8
  store i64 %29, i64* %16, align 8
  %30 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 6
  %31 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 8
  %32 = bitcast %"class.gfx::RectF"* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 17, i1 false)
  store i32 -1, i32* %31, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8ClipNodeC2ERKS0_(%"struct.cc::ClipNode"*, %"struct.cc::ClipNode"* dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::ClipNode"* %0 to i8*
  %4 = bitcast %"struct.cc::ClipNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 28, i1 false)
  %5 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5
  %6 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %6, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %8, align 8
  %9 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 1
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #6
  %12 = ptrtoint %"class.base::StackVector"* %5 to i64
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.0"* %10 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"struct.cc::ClipRectData"** %14 to i64*
  %16 = bitcast %"class.std::__1::vector"* %9 to i64*
  %17 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %18 = bitcast %"struct.cc::ClipRectData"** %17 to i64*
  %19 = icmp eq %"class.base::StackVector"* %5, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = tail call i8* @_Znwm(i64 72) #7
  %22 = ptrtoint i8* %21 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 72
  br label %25

24:                                               ; preds = %2
  store i8 1, i8* %7, align 4
  br label %25

25:                                               ; preds = %20, %24
  %26 = phi i8* [ %23, %20 ], [ %7, %24 ]
  %27 = phi i64 [ %22, %20 ], [ %12, %24 ]
  %28 = ptrtoint i8* %26 to i64
  store i64 %27, i64* %16, align 8
  store i64 %27, i64* %18, align 8
  store i64 %28, i64* %15, align 8
  %29 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %30 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %29, align 8
  %31 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %32 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %31, align 8
  tail call void @_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %9, %"struct.cc::ClipRectData"* %30, %"struct.cc::ClipRectData"* %32) #6
  %33 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 6
  %35 = bitcast %"class.gfx::RectF"* %33 to i8*
  %36 = bitcast %"class.gfx::RectF"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false)
  %37 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 7
  %38 = bitcast %"class.absl::optional"* %37 to i64*
  store i64 0, i64* %38, align 4
  %39 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc12ClipExpanderC1ERKS0_(%"class.cc::ClipExpander"* %45, %"class.cc::ClipExpander"* dereferenceable(4) %44) #6
  store i8 1, i8* %43, align 4
  br label %46

46:                                               ; preds = %25, %42
  %47 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 8
  %48 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 8
  %49 = load i32, i32* %48, align 8
  store i32 %49, i32* %47, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(184) %"struct.cc::ClipNode"* @_ZN2cc8ClipNodeaSERKS0_(%"struct.cc::ClipNode"* returned, %"struct.cc::ClipNode"* dereferenceable(184)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::ClipNode"* %0 to i8*
  %4 = bitcast %"struct.cc::ClipNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 28, i1 false)
  %5 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2
  %6 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %7 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %6, align 8
  %8 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %9 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %8, align 8
  tail call void @_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"* %5, %"struct.cc::ClipRectData"* %7, %"struct.cc::ClipRectData"* %9) #6
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 6
  %12 = bitcast %"class.gfx::RectF"* %10 to i8*
  %13 = bitcast %"class.gfx::RectF"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 7
  %15 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.cc::ClipExpander", %"class.cc::ClipExpander"* %19, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  br label %31

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc12ClipExpanderC1ERKS0_(%"class.cc::ClipExpander"* %28, %"class.cc::ClipExpander"* dereferenceable(4) %19) #6
  store i8 1, i8* %20, align 4
  br label %31

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %30, align 4
  br label %31

31:                                               ; preds = %23, %27, %29
  %32 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %1, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 8
  store i32 %33, i32* %34, align 8
  ret %"struct.cc::ClipNode"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc8ClipNodeD2Ev(%"struct.cc::ClipNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %3 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %2, align 8
  %4 = icmp eq %"struct.cc::ClipRectData"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::ClipRectData"* %3 to i64
  %7 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 1
  %8 = bitcast %"struct.cc::ClipRectData"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %10 = load %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %9, align 8
  %11 = icmp ne %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %10, null
  %12 = bitcast %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %10 to %"struct.cc::ClipRectData"*
  %13 = icmp eq %"struct.cc::ClipRectData"* %3, %12
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %10, i64 0, i32 1
  store i8 0, i8* %16, align 4
  br label %19

17:                                               ; preds = %5
  %18 = bitcast %"struct.cc::ClipRectData"* %3 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %1, %15, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc8ClipNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::ClipNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %4) #6
  %5 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %6) #6
  %7 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i32 %8) #6
  %9 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 3
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5RectFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %"class.gfx::RectF"* dereferenceable(16) %9, %"class.base::trace_event::TracedValue"* %1) #6
  %10 = getelementptr inbounds %"struct.cc::ClipNode", %"struct.cc::ClipNode"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i32 %11) #6
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx5RectFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::RectF"* dereferenceable(16), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN2cc12ClipExpanderC1ERKS0_(%"class.cc::ClipExpander"*, %"class.cc::ClipExpander"* dereferenceable(4)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc12ClipRectDataEN4base14StackAllocatorIS2_Lm3EEEE6assignINS_11__wrap_iterIPKS2_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsISD_E9referenceEEE5valueEvE4typeESD_SD_(%"class.std::__1::vector"*, %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::ClipRectData"* %1 to i64
  %5 = ptrtoint %"struct.cc::ClipRectData"* %2 to i64
  %6 = sub i64 %5, %4
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.cc::ClipRectData"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.cc::ClipRectData"*
  br i1 %15, label %56, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.cc::ClipRectData"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %1, i64 %22
  %25 = select i1 %23, %"struct.cc::ClipRectData"* %24, %"struct.cc::ClipRectData"* %2
  %26 = ptrtoint %"struct.cc::ClipRectData"* %25 to i64
  %27 = sub i64 %26, %4
  %28 = sdiv exact i64 %27, 24
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.cc::ClipRectData"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #6
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %54

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.cc::ClipRectData"* %25, %2
  br i1 %36, label %52, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i8*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ %35, %37 ], [ %47, %39 ]
  %41 = phi i8* [ %38, %37 ], [ %49, %39 ]
  %42 = phi %"struct.cc::ClipRectData"* [ %24, %37 ], [ %44, %39 ]
  %43 = bitcast %"struct.cc::ClipRectData"* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %43, i64 24, i1 false) #6
  %44 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %42, i64 1
  %45 = inttoptr i64 %40 to %"struct.cc::ClipRectData"*
  %46 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %45, i64 1
  %47 = ptrtoint %"struct.cc::ClipRectData"* %46 to i64
  %48 = icmp eq %"struct.cc::ClipRectData"* %44, %2
  %49 = bitcast %"struct.cc::ClipRectData"* %46 to i8*
  br i1 %48, label %50, label %39

50:                                               ; preds = %39
  %51 = ptrtoint %"struct.cc::ClipRectData"* %46 to i64
  br label %52

52:                                               ; preds = %50, %34
  %53 = phi i64 [ %35, %34 ], [ %51, %50 ]
  store i64 %53, i64* %19, align 8
  br label %125

54:                                               ; preds = %33
  %55 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %16, i64 %28
  store %"struct.cc::ClipRectData"* %55, %"struct.cc::ClipRectData"** %18, align 8
  br label %125

56:                                               ; preds = %3
  %57 = icmp eq i64 %12, 0
  br i1 %57, label %73, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %60 = bitcast %"struct.cc::ClipRectData"** %59 to i64*
  store i64 %12, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %62 = load %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %61, align 8
  %63 = icmp ne %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %62, null
  %64 = bitcast %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %62 to %"struct.cc::ClipRectData"*
  %65 = icmp eq %"struct.cc::ClipRectData"* %16, %64
  %66 = and i1 %63, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %62, i64 0, i32 1
  store i8 0, i8* %68, align 4
  br label %71

69:                                               ; preds = %58
  %70 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %70) #7
  br label %71

71:                                               ; preds = %69, %67
  %72 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #6
  br label %73

73:                                               ; preds = %56, %71
  %74 = phi i64 [ %10, %56 ], [ 0, %71 ]
  %75 = icmp ugt i64 %7, 768614336404564650
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %77) #8
  unreachable

78:                                               ; preds = %73
  %79 = sdiv exact i64 %74, 24
  %80 = icmp ult i64 %79, 384307168202282325
  br i1 %80, label %81, label %85

81:                                               ; preds = %78
  %82 = shl nsw i64 %79, 1
  %83 = icmp ult i64 %82, %7
  %84 = select i1 %83, i64 %7, i64 %82
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi i64 [ %84, %81 ], [ 768614336404564650, %78 ]
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %88 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %87, i64 0, i32 0
  %89 = load %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"*, %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"** %88, align 8
  %90 = icmp eq %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source", %"struct.base::StackAllocator<cc::ClipRectData, 3>::Source"* %89, i64 0, i32 1
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  %95 = icmp ult i64 %86, 4
  %96 = and i1 %95, %94
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  store i8 1, i8* %92, align 4
  %98 = bitcast %"class.base::StackAllocator"* %87 to %"struct.cc::ClipRectData"**
  %99 = load %"struct.cc::ClipRectData"*, %"struct.cc::ClipRectData"** %98, align 8
  %100 = bitcast %"struct.cc::ClipRectData"* %99 to i8*
  br label %105

101:                                              ; preds = %91, %85
  %102 = mul i64 %86, 24
  %103 = tail call i8* @_Znwm(i64 %102) #7
  %104 = bitcast i8* %103 to %"struct.cc::ClipRectData"*
  br label %105

105:                                              ; preds = %97, %101
  %106 = phi i8* [ %100, %97 ], [ %103, %101 ]
  %107 = phi %"struct.cc::ClipRectData"* [ %99, %97 ], [ %104, %101 ]
  %108 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store %"struct.cc::ClipRectData"* %107, %"struct.cc::ClipRectData"** %108, align 8
  %109 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %106, i8** %109, align 8
  %110 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %107, i64 %86
  store %"struct.cc::ClipRectData"* %110, %"struct.cc::ClipRectData"** %8, align 8
  %111 = bitcast %"struct.cc::ClipRectData"** %108 to i64*
  %112 = icmp eq %"struct.cc::ClipRectData"* %1, %2
  br i1 %112, label %122, label %113

113:                                              ; preds = %105, %113
  %114 = phi %"struct.cc::ClipRectData"* [ %119, %113 ], [ %107, %105 ]
  %115 = phi i8* [ %121, %113 ], [ %106, %105 ]
  %116 = phi %"struct.cc::ClipRectData"* [ %118, %113 ], [ %1, %105 ]
  %117 = bitcast %"struct.cc::ClipRectData"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* align 4 %117, i64 24, i1 false) #6
  %118 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %116, i64 1
  %119 = getelementptr inbounds %"struct.cc::ClipRectData", %"struct.cc::ClipRectData"* %114, i64 1
  %120 = icmp eq %"struct.cc::ClipRectData"* %118, %2
  %121 = bitcast %"struct.cc::ClipRectData"* %119 to i8*
  br i1 %120, label %122, label %113

122:                                              ; preds = %113, %105
  %123 = phi %"struct.cc::ClipRectData"* [ %107, %105 ], [ %119, %113 ]
  %124 = ptrtoint %"struct.cc::ClipRectData"* %123 to i64
  store i64 %124, i64* %111, align 8
  br label %125

125:                                              ; preds = %52, %54, %122
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
