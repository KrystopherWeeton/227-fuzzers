; ModuleID = '../../base/allocator/partition_allocator/starscan/stack/stack.cc'
source_filename = "../../base/allocator/partition_allocator/starscan/stack/stack.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::internal::Stack" = type { i8* }
%union.pthread_attr_t = type { i64, [48 x i8] }
%"class.base::internal::StackVisitor" = type { i32 (...)** }

@.str = private unnamed_addr constant [90 x i8] c"../../base/allocator/partition_allocator/starscan/stack/stack.cc(62) Check failed: !error\00", align 1
@__libc_stack_end = external local_unnamed_addr global i8*, align 8
@.str.1 = private unnamed_addr constant [114 x i8] c"../../base/allocator/partition_allocator/starscan/stack/stack.cc(126) Check failed: nullptr != stack->stack_top()\00", align 1
@.str.2 = private unnamed_addr constant [158 x i8] c"../../base/allocator/partition_allocator/starscan/stack/stack.cc(131) Check failed: 0u == (reinterpret_cast<uintptr_t>(stack_ptr) & (kMinStackAlignment - 1))\00", align 1

@_ZN4base8internal5StackC1EPv = hidden unnamed_addr alias void (%"class.base::internal::Stack"*, i8*), void (%"class.base::internal::Stack"*, i8*)* @_ZN4base8internal5StackC2EPv

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base8internal11GetStackTopEv() local_unnamed_addr #0 {
  %1 = alloca %union.pthread_attr_t, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast %union.pthread_attr_t* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %4) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 56, i1 false)
  %5 = tail call i64 @pthread_self() #7
  %6 = call i32 @pthread_getattr_np(i64 %5, %union.pthread_attr_t* nonnull %1) #9
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %19

8:                                                ; preds = %0
  %9 = bitcast i8** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %2, align 8
  %10 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #9
  store i64 -6148914691236517206, i64* %3, align 8
  %11 = call i32 @pthread_attr_getstack(%union.pthread_attr_t* nonnull %1, i8** nonnull %2, i64* nonnull %3) #9
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13, !prof !2

13:                                               ; preds = %8
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([90 x i8], [90 x i8]* @.str, i64 0, i64 0)) #9
  br label %14

14:                                               ; preds = %8, %13
  %15 = call i32 @pthread_attr_destroy(%union.pthread_attr_t* nonnull %1) #9
  %16 = load i8*, i8** %2, align 8
  %17 = load i64, i64* %3, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  br label %21

19:                                               ; preds = %0
  %20 = load i8*, i8** @__libc_stack_end, align 8
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %18, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %4) #9
  ret i8* %22
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare i32 @pthread_getattr_np(i64, %union.pthread_attr_t*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i64 @pthread_self() local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_attr_getstack(%union.pthread_attr_t*, i8**, i64*) local_unnamed_addr #2

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_attr_destroy(%union.pthread_attr_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base8internal5StackC2EPv(%"class.base::internal::Stack"* nocapture, i8*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::Stack", %"class.base::internal::Stack"* %0, i64 0, i32 0
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind readnone ssp uwtable
define hidden i64* @_ZN4base8internal15GetStackPointerEv() local_unnamed_addr #6 {
  %1 = tail call i8* @llvm.frameaddress(i32 0)
  %2 = bitcast i8* %1 to i64*
  ret i64* %2
}

; Function Attrs: nounwind readnone
declare i8* @llvm.frameaddress(i32 immarg) #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base8internal5Stack15IteratePointersEPNS0_12StackVisitorE(%"class.base::internal::Stack"*, %"class.base::internal::StackVisitor"*) local_unnamed_addr #0 align 2 {
  tail call void @PAPushAllRegistersAndIterateStack(%"class.base::internal::Stack"* %0, %"class.base::internal::StackVisitor"* %1, void (%"class.base::internal::Stack"*, %"class.base::internal::StackVisitor"*, i64*)* nonnull @_ZN4base8internal12_GLOBAL__N_119IteratePointersImplEPKNS0_5StackEPNS0_12StackVisitorEPm) #9
  ret void
}

declare void @PAPushAllRegistersAndIterateStack(%"class.base::internal::Stack"*, %"class.base::internal::StackVisitor"*, void (%"class.base::internal::Stack"*, %"class.base::internal::StackVisitor"*, i64*)*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define internal void @_ZN4base8internal12_GLOBAL__N_119IteratePointersImplEPKNS0_5StackEPNS0_12StackVisitorEPm(%"class.base::internal::Stack"* nocapture readonly, %"class.base::internal::StackVisitor"*, i64*) #8 {
  %4 = getelementptr inbounds %"class.base::internal::Stack", %"class.base::internal::Stack"* %0, i64 0, i32 0
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %8, !prof !3

7:                                                ; preds = %3
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.1, i64 0, i64 0)) #9
  br label %8

8:                                                ; preds = %3, %7
  %9 = ptrtoint i64* %2 to i64
  %10 = and i64 %9, 7
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %13, label %12, !prof !2

12:                                               ; preds = %8
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([158 x i8], [158 x i8]* @.str.2, i64 0, i64 0)) #9
  br label %13

13:                                               ; preds = %8, %12
  %14 = bitcast %"class.base::internal::Stack"* %0 to i64**
  %15 = load i64*, i64** %14, align 8
  %16 = bitcast %"class.base::internal::StackVisitor"* %1 to void (%"class.base::internal::StackVisitor"*, i64*, i64*)***
  %17 = load void (%"class.base::internal::StackVisitor"*, i64*, i64*)**, void (%"class.base::internal::StackVisitor"*, i64*, i64*)*** %16, align 8
  %18 = load void (%"class.base::internal::StackVisitor"*, i64*, i64*)*, void (%"class.base::internal::StackVisitor"*, i64*, i64*)** %17, align 8
  tail call void %18(%"class.base::internal::StackVisitor"* %1, i64* %2, i64* %15) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
