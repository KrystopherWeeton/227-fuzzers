; ModuleID = '../../components/sync/model/mutable_data_batch.cc'
source_filename = "../../components/sync/model/mutable_data_batch.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.syncer::MutableDataBatch" = type { %"class.syncer::DataBatch", %"class.std::__1::vector", i64 }
%"class.syncer::DataBatch" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.24" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.syncer::EntityData"* }
%"struct.syncer::EntityData" = type { %"class.std::__1::basic_string", %"class.syncer::ClientTagHash", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.sync_pb::EntitySpecifics", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", i8, i8, %"class.syncer::UniquePosition" }
%"class.syncer::ClientTagHash" = type { %"class.std::__1::basic_string" }
%"class.sync_pb::EntitySpecifics" = type <{ %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.sync_pb::EncryptedData"*, %"union.sync_pb::EntitySpecifics::SpecificsVariantUnion", [1 x i32], [4 x i8] }>
%"class.google::protobuf::MessageLite" = type { i32 (...)**, %"class.google::protobuf::internal::InternalMetadata" }
%"class.google::protobuf::internal::InternalMetadata" = type { i8* }
%"class.google::protobuf::internal::HasBits" = type { [1 x i32] }
%"class.google::protobuf::internal::CachedSize" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.sync_pb::EncryptedData" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr" }
%"struct.google::protobuf::internal::ArenaStringPtr" = type { %"class.std::__1::basic_string"* }
%"union.sync_pb::EntitySpecifics::SpecificsVariantUnion" = type { %"class.sync_pb::AutofillSpecifics"* }
%"class.sync_pb::AutofillSpecifics" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedField", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"class.sync_pb::AutofillProfileSpecifics"* }
%"class.google::protobuf::RepeatedField" = type { i32, i32, i8* }
%"class.sync_pb::AutofillProfileSpecifics" = type { %"class.google::protobuf::MessageLite", %"class.google::protobuf::internal::HasBits.4", %"class.google::protobuf::internal::CachedSize", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedField.14", %"class.google::protobuf::RepeatedPtrField", %"class.google::protobuf::RepeatedField.14", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", %"struct.google::protobuf::internal::ArenaStringPtr", i64, i64, i64, i32, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.google::protobuf::internal::HasBits.4" = type { [2 x i32] }
%"class.google::protobuf::RepeatedPtrField" = type { %"class.google::protobuf::internal::RepeatedPtrFieldBase" }
%"class.google::protobuf::internal::RepeatedPtrFieldBase" = type { %"class.google::protobuf::Arena"*, i32, i32, %"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep"* }
%"class.google::protobuf::Arena" = type { %"class.google::protobuf::internal::ArenaImpl", void (%"class.std::type_info"*, i64, i8*)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, void (%"class.google::protobuf::Arena"*, i8*, i64)*, i8* }
%"class.google::protobuf::internal::ArenaImpl" = type { %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.9", %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, %"struct.google::protobuf::internal::ArenaImpl::Options" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { %"class.google::protobuf::internal::ArenaImpl::SerialArena"* }
%"class.google::protobuf::internal::ArenaImpl::SerialArena" = type { %"class.google::protobuf::internal::ArenaImpl"*, i8*, %"class.google::protobuf::internal::ArenaImpl::Block"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, %"class.google::protobuf::internal::ArenaImpl::SerialArena"*, i8*, i8*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"*, %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"* }
%"struct.google::protobuf::internal::ArenaImpl::CleanupChunk" = type { i64, %"struct.google::protobuf::internal::ArenaImpl::CleanupChunk"*, [1 x %"struct.google::protobuf::internal::ArenaImpl::CleanupNode"] }
%"struct.google::protobuf::internal::ArenaImpl::CleanupNode" = type { i8*, void (i8*)* }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i64 }
%"class.google::protobuf::internal::ArenaImpl::Block" = type { %"class.google::protobuf::internal::ArenaImpl::Block"*, i64, i64 }
%"struct.google::protobuf::internal::ArenaImpl::Options" = type { i64, i64, i8*, i64, i8* (i64)*, void (i8*, i64)* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.google::protobuf::internal::RepeatedPtrFieldBase::Rep" = type { i32, [268435454 x i8*] }
%"class.google::protobuf::RepeatedField.14" = type { i32, i32, i8* }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.syncer::UniquePosition" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::pair"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN6syncer10EntityDataENS_14default_deleteISA_EEEEEENS5_ISE_EEE21__push_back_slow_pathISE_EEvOT_ = comdat any

@_ZTVN6syncer16MutableDataBatchE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.syncer::MutableDataBatch"*)* @_ZN6syncer16MutableDataBatchD2Ev to i8*), i8* bitcast (void (%"class.syncer::MutableDataBatch"*)* @_ZN6syncer16MutableDataBatchD0Ev to i8*), i8* bitcast (i1 (%"class.syncer::MutableDataBatch"*)* @_ZNK6syncer16MutableDataBatch7HasNextEv to i8*), i8* bitcast (void (%"struct.std::__1::pair"*, %"class.syncer::MutableDataBatch"*)* @_ZN6syncer16MutableDataBatch4NextEv to i8*)] }, align 8

@_ZN6syncer16MutableDataBatchC1Ev = hidden unnamed_addr alias void (%"class.syncer::MutableDataBatch"*), void (%"class.syncer::MutableDataBatch"*)* @_ZN6syncer16MutableDataBatchC2Ev
@_ZN6syncer16MutableDataBatchD1Ev = hidden unnamed_addr alias void (%"class.syncer::MutableDataBatch"*), void (%"class.syncer::MutableDataBatch"*)* @_ZN6syncer16MutableDataBatchD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16MutableDataBatchC2Ev(%"class.syncer::MutableDataBatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6syncer16MutableDataBatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1
  %4 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16MutableDataBatchD2Ev(%"class.syncer::MutableDataBatch"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6syncer16MutableDataBatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %9 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %"struct.std::__1::pair"* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.syncer::EntityData"*, %"struct.syncer::EntityData"** %15, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %15, align 8
  %17 = icmp eq %"struct.syncer::EntityData"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN6syncer10EntityDataD1Ev(%"struct.syncer::EntityData"* nonnull %16) #10
  %19 = bitcast %"struct.syncer::EntityData"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %12
  %21 = bitcast %"struct.std::__1::pair"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %25, %20
  %29 = icmp eq %"struct.std::__1::pair"* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %9, align 8
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16MutableDataBatchD0Ev(%"class.syncer::MutableDataBatch"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN6syncer16MutableDataBatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair"* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %1
  %8 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %9 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair"* %10, %5
  br i1 %11, label %33, label %12

12:                                               ; preds = %7, %28
  %13 = phi %"struct.std::__1::pair"* [ %14, %28 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %13, i64 -1, i32 1, i32 0, i32 0, i32 0
  %16 = load %"struct.syncer::EntityData"*, %"struct.syncer::EntityData"** %15, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %15, align 8
  %17 = icmp eq %"struct.syncer::EntityData"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN6syncer10EntityDataD1Ev(%"struct.syncer::EntityData"* nonnull %16) #10
  %19 = bitcast %"struct.syncer::EntityData"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %18, %12
  %21 = bitcast %"struct.std::__1::pair"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %25, %20
  %29 = icmp eq %"struct.std::__1::pair"* %14, %5
  br i1 %29, label %30, label %12

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::vector"* %3 to i8**
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %30, %7
  %34 = phi i8* [ %32, %30 ], [ %8, %7 ]
  store %"struct.std::__1::pair"* %5, %"struct.std::__1::pair"** %9, align 8
  tail call void @_ZdlPv(i8* %34) #11
  br label %35

35:                                               ; preds = %1, %33
  %36 = bitcast %"class.syncer::MutableDataBatch"* %0 to i8*
  tail call void @_ZdlPv(i8* %36) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16MutableDataBatch3PutERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS1_10unique_ptrINS_10EntityDataENS1_14default_deleteISB_EEEE(%"class.syncer::MutableDataBatch"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"struct.syncer::EntityData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = ptrtoint %"struct.syncer::EntityData"* %2 to i64
  %6 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1
  %7 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %13, i64 24, i1 false) #10
  br label %20

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %15, i8* %17, i64 %19) #10
  br label %20

20:                                               ; preds = %12, %14
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %22 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %5, i64* %22, align 8
  %23 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1, i32 0, i32 1
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %26 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %25, align 8
  %27 = icmp ult %"struct.std::__1::pair"* %24, %26
  br i1 %27, label %28, label %37

28:                                               ; preds = %20
  %29 = bitcast %"struct.std::__1::pair"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* nonnull align 8 %7, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #10
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %32 = load i64, i64* %22, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %31, align 8
  %33 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %35 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %36 = bitcast %"struct.std::__1::pair"** %23 to i64*
  store i64 %35, i64* %36, align 8
  br label %38

37:                                               ; preds = %20
  call void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN6syncer10EntityDataENS_14default_deleteISA_EEEEEENS5_ISE_EEE21__push_back_slow_pathISE_EEvOT_(%"class.std::__1::vector"* %6, %"struct.std::__1::pair"* nonnull dereferenceable(32) %4) #10
  br label %38

38:                                               ; preds = %28, %37
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.syncer::EntityData"*, %"struct.syncer::EntityData"** %39, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %39, align 8
  %41 = icmp eq %"struct.syncer::EntityData"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  call void @_ZN6syncer10EntityDataD1Ev(%"struct.syncer::EntityData"* nonnull %40) #10
  %43 = bitcast %"struct.syncer::EntityData"* %40 to i8*
  call void @_ZdlPv(i8* %43) #11
  br label %44

44:                                               ; preds = %42, %38
  %45 = bitcast %"struct.std::__1::pair"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %49, %44
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6syncer16MutableDataBatch7HasNextEv(%"class.syncer::MutableDataBatch"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp ugt i64 %9, %11
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer16MutableDataBatch4NextEv(%"struct.std::__1::pair"* noalias nocapture sret, %"class.syncer::MutableDataBatch"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %1, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.syncer::MutableDataBatch", %"class.syncer::MutableDataBatch"* %1, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %4
  %9 = bitcast %"struct.std::__1::pair"* %0 to i8*
  %10 = bitcast %"struct.std::__1::pair"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %4, i32 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %13, align 8
  %16 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %15, i64* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6syncer10EntityDataD1Ev(%"struct.syncer::EntityData"*) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_4pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10unique_ptrIN6syncer10EntityDataENS_14default_deleteISA_EEEEEENS5_ISE_EEE21__push_back_slow_pathISE_EEvOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"* dereferenceable(32)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.std::__1::pair"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"struct.std::__1::pair"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.std::__1::pair"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %35
  %39 = ptrtoint %"struct.std::__1::pair"* %38 to i64
  %40 = bitcast %"struct.std::__1::pair"* %37 to i8*
  %41 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #10
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 %9, i32 1
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr"* %43 to i64*
  %46 = load i64, i64* %45, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %44, align 8
  %47 = bitcast %"class.std::__1::unique_ptr"* %42 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1
  %49 = ptrtoint %"struct.std::__1::pair"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %51 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %50, align 8
  %52 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  %53 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %54 = icmp eq %"struct.std::__1::pair"* %53, %51
  br i1 %54, label %105, label %55

55:                                               ; preds = %34
  %56 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = ptrtoint i8** %56 to i64
  %58 = sub i64 %57, %52
  %59 = and i64 %58, 32
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1
  %64 = bitcast %"struct.std::__1::pair"* %62 to i8*
  %65 = bitcast %"struct.std::__1::pair"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 -1, i32 1
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %53, i64 -1, i32 1
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.std::__1::unique_ptr"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %68, align 8
  %71 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  store i64 %70, i64* %71, align 8
  br label %72

72:                                               ; preds = %61, %55
  %73 = phi %"struct.std::__1::pair"* [ undef, %55 ], [ %62, %61 ]
  %74 = phi %"struct.std::__1::pair"* [ %37, %55 ], [ %62, %61 ]
  %75 = phi %"struct.std::__1::pair"* [ %53, %55 ], [ %63, %61 ]
  %76 = icmp ult i64 %58, 32
  br i1 %76, label %101, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"struct.std::__1::pair"* [ %90, %77 ], [ %74, %72 ]
  %79 = phi %"struct.std::__1::pair"* [ %91, %77 ], [ %75, %72 ]
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -1
  %82 = bitcast %"struct.std::__1::pair"* %80 to i8*
  %83 = bitcast %"struct.std::__1::pair"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #10
  %84 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -1, i32 1
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -1, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -2
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -2
  %92 = bitcast %"struct.std::__1::pair"* %90 to i8*
  %93 = bitcast %"struct.std::__1::pair"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %93, i8 0, i64 24, i1 false) #10
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 -2, i32 1
  %95 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 -2, i32 1
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  %98 = load i64, i64* %97, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  store i64 %98, i64* %99, align 8
  %100 = icmp eq %"struct.std::__1::pair"* %91, %51
  br i1 %100, label %101, label %77

101:                                              ; preds = %77, %72
  %102 = phi %"struct.std::__1::pair"* [ %73, %72 ], [ %90, %77 ]
  %103 = load i64, i64* %6, align 8
  %104 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  br label %105

105:                                              ; preds = %34, %101
  %106 = phi %"struct.std::__1::pair"* [ %104, %101 ], [ %51, %34 ]
  %107 = phi %"struct.std::__1::pair"* [ %102, %101 ], [ %37, %34 ]
  %108 = phi i64 [ %103, %101 ], [ %52, %34 ]
  %109 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  store i64 %109, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %110 = inttoptr i64 %108 to %"struct.std::__1::pair"*
  %111 = icmp eq %"struct.std::__1::pair"* %106, %110
  br i1 %111, label %130, label %112

112:                                              ; preds = %105, %128
  %113 = phi %"struct.std::__1::pair"* [ %114, %128 ], [ %106, %105 ]
  %114 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 -1
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %113, i64 -1, i32 1, i32 0, i32 0, i32 0
  %116 = load %"struct.syncer::EntityData"*, %"struct.syncer::EntityData"** %115, align 8
  store %"struct.syncer::EntityData"* null, %"struct.syncer::EntityData"** %115, align 8
  %117 = icmp eq %"struct.syncer::EntityData"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %112
  tail call void @_ZN6syncer10EntityDataD1Ev(%"struct.syncer::EntityData"* nonnull %116) #10
  %119 = bitcast %"struct.syncer::EntityData"* %116 to i8*
  tail call void @_ZdlPv(i8* %119) #11
  br label %120

120:                                              ; preds = %118, %112
  %121 = bitcast %"struct.std::__1::pair"* %114 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %122 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %121, i64 0, i32 1, i32 0
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  tail call void @_ZdlPv(i8* %127) #11
  br label %128

128:                                              ; preds = %125, %120
  %129 = icmp eq %"struct.std::__1::pair"* %114, %110
  br i1 %129, label %130, label %112

130:                                              ; preds = %128, %105
  %131 = icmp eq i64 %108, 0
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = inttoptr i64 %108 to i8*
  tail call void @_ZdlPv(i8* %133) #11
  br label %134

134:                                              ; preds = %130, %132
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
