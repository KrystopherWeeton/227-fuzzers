; ModuleID = '../../cc/paint/decode_stashing_image_provider.cc'
source_filename = "../../cc/paint/decode_stashing_image_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%union.anon = type { i32 }
%class.sk_sp.7 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%struct.SkSize = type { float, float }
%class.sk_sp.8 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.cc::DecodeStashingImageProvider" = type { %"class.cc::ImageProvider", %"class.cc::ImageProvider"*, %"class.base::StackVector" }
%"class.cc::ImageProvider" = type { i32 (...)** }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source" = type { [80 x i8], i8, [7 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"*, %"class.std::__1::__compressed_pair.10" }
%"class.cc::ImageProvider::ScopedResult" = type { %"class.cc::DecodedDrawImage", %class.sk_sp.8, %"class.base::OnceCallback" }
%"class.cc::DecodedDrawImage" = type <{ %class.sk_sp, %"struct.gpu::Mailbox", %"class.absl::optional", %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11", %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.cc::ImageProvider::ScopedResult"* }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.base::StackAllocator" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.17", %"class.absl::optional.22", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.13, %class.sk_sp.8, %"class.gfx::Rect", i32, %class.sk_sp.14, %class.sk_sp.15, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.13, %class.scoped_refptr.16 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.14 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.15 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.13 = type { %class.SkImage* }
%class.scoped_refptr.16 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.gfx::ColorSpace" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE7reserveEm = comdat any

$_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

@_ZTVN2cc27DecodeStashingImageProviderE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cc::DecodeStashingImageProvider"*)* @_ZN2cc27DecodeStashingImageProviderD2Ev to i8*), i8* bitcast (void (%"class.cc::DecodeStashingImageProvider"*)* @_ZN2cc27DecodeStashingImageProviderD0Ev to i8*), i8* bitcast (void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"*)* @_ZN2cc27DecodeStashingImageProvider16GetRasterContentERKNS_9DrawImageE to i8*)] }, align 8
@__const._ZN2cc27DecodeStashingImageProvider16GetRasterContentERKNS_9DrawImageE.result = private unnamed_addr constant { <{ %class.sk_sp, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon } } } }, %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" } { <{ %class.sk_sp, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon } } } }, %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }> <{ %class.sk_sp { %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*) }, %"struct.gpu::Mailbox" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, %class.sk_sp.7 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %struct.SkSize { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i8 -86, i8 -86, [2 x i8] c"\AA\AA" }>, %class.sk_sp.8 { %"class.cc::PaintOpBuffer"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintOpBuffer"*) }, %"class.base::OnceCallback" { %"class.base::internal::CallbackBase" { %class.scoped_refptr { %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*) } } } }, align 8

@_ZN2cc27DecodeStashingImageProviderC1EPNS_13ImageProviderE = hidden unnamed_addr alias void (%"class.cc::DecodeStashingImageProvider"*, %"class.cc::ImageProvider"*), void (%"class.cc::DecodeStashingImageProvider"*, %"class.cc::ImageProvider"*)* @_ZN2cc27DecodeStashingImageProviderC2EPNS_13ImageProviderE
@_ZN2cc27DecodeStashingImageProviderD1Ev = hidden unnamed_addr alias void (%"class.cc::DecodeStashingImageProvider"*), void (%"class.cc::DecodeStashingImageProvider"*)* @_ZN2cc27DecodeStashingImageProviderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27DecodeStashingImageProviderC2EPNS_13ImageProviderE(%"class.cc::DecodeStashingImageProvider"*, %"class.cc::ImageProvider"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc27DecodeStashingImageProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 1
  store %"class.cc::ImageProvider"* %1, %"class.cc::ImageProvider"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.base::StackVector", %"class.base::StackVector"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  store %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %6, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %8, align 8
  %9 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2
  %10 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #9
  %12 = ptrtoint %"class.base::StackVector"* %5 to i64
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.12"* %10 to i64*
  store i64 %12, i64* %13, align 8
  tail call void @_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE7reserveEm(%"class.std::__1::vector"* %9, i64 1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27DecodeStashingImageProviderD2Ev(%"class.cc::DecodeStashingImageProvider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc27DecodeStashingImageProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %3, align 8
  %5 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %8 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %7, align 8
  %9 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %8, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.cc::ImageProvider::ScopedResult"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %11, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* %12) #9
  %13 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %12, %4
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %3, align 8
  br label %16

16:                                               ; preds = %14, %6
  %17 = phi %"class.cc::ImageProvider::ScopedResult"* [ %15, %14 ], [ %4, %6 ]
  store %"class.cc::ImageProvider::ScopedResult"* %4, %"class.cc::ImageProvider::ScopedResult"** %7, align 8
  %18 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %19 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %18, align 8
  %20 = icmp ne %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19, null
  %21 = bitcast %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19 to %"class.cc::ImageProvider::ScopedResult"*
  %22 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %17, %21
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19, i64 0, i32 1
  store i8 0, i8* %25, align 8
  br label %28

26:                                               ; preds = %16
  %27 = bitcast %"class.cc::ImageProvider::ScopedResult"* %17 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %24, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27DecodeStashingImageProviderD0Ev(%"class.cc::DecodeStashingImageProvider"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2cc27DecodeStashingImageProviderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %3, align 8
  %5 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %8 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %7, align 8
  %9 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %8, %4
  br i1 %9, label %16, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.cc::ImageProvider::ScopedResult"* [ %12, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %11, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* %12) #9
  %13 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %12, %4
  br i1 %13, label %14, label %10

14:                                               ; preds = %10
  %15 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %3, align 8
  br label %16

16:                                               ; preds = %14, %6
  %17 = phi %"class.cc::ImageProvider::ScopedResult"* [ %15, %14 ], [ %4, %6 ]
  store %"class.cc::ImageProvider::ScopedResult"* %4, %"class.cc::ImageProvider::ScopedResult"** %7, align 8
  %18 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 1, i32 0, i32 0
  %19 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %18, align 8
  %20 = icmp ne %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19, null
  %21 = bitcast %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19 to %"class.cc::ImageProvider::ScopedResult"*
  %22 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %17, %21
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %19, i64 0, i32 1
  store i8 0, i8* %25, align 8
  br label %28

26:                                               ; preds = %16
  %27 = bitcast %"class.cc::ImageProvider::ScopedResult"* %17 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %1, %24, %26
  %29 = bitcast %"class.cc::DecodeStashingImageProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27DecodeStashingImageProvider16GetRasterContentERKNS_9DrawImageE(%"class.cc::ImageProvider::ScopedResult"* noalias sret, %"class.cc::DecodeStashingImageProvider"*, %"class.cc::DrawImage"* dereferenceable(240)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %5 = alloca %"class.cc::ImageProvider::ScopedResult", align 8
  %6 = alloca %"class.cc::DecodedDrawImage", align 8
  %7 = bitcast %"class.cc::ImageProvider::ScopedResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ <{ %class.sk_sp, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon } } } }, %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" }* @__const._ZN2cc27DecodeStashingImageProvider16GetRasterContentERKNS_9DrawImageE.result to i8*), i64 80, i1 false)
  %8 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %1, i64 0, i32 1
  %9 = load %"class.cc::ImageProvider"*, %"class.cc::ImageProvider"** %8, align 8
  %10 = bitcast %"class.cc::ImageProvider"* %9 to void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)***
  %11 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)**, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %11, i64 2
  %13 = load void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)*, void (%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider"*, %"class.cc::DrawImage"*)** %12, align 8
  call void %13(%"class.cc::ImageProvider::ScopedResult"* nonnull sret %4, %"class.cc::ImageProvider"* %9, %"class.cc::DrawImage"* dereferenceable(240) %2) #9
  %14 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %14, align 8
  %16 = icmp eq %"class.base::internal::BindStateBase"* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %0, %"class.cc::ImageProvider::ScopedResult"* nonnull dereferenceable(80) %4) #9
  br label %33

18:                                               ; preds = %3
  %19 = bitcast %"class.cc::ImageProvider::ScopedResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast ({ <{ %class.sk_sp, %"struct.gpu::Mailbox", { { { { i8, [3 x i8], %union.anon } } } }, %class.sk_sp.7, %struct.SkSize, %struct.SkSize, i32, i8, i8, [2 x i8] }>, %class.sk_sp.8, %"class.base::OnceCallback" }* @__const._ZN2cc27DecodeStashingImageProvider16GetRasterContentERKNS_9DrawImageE.result to i8*), i64 80, i1 false)
  %20 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %4, i64 0, i32 0
  call void @_ZN2cc16DecodedDrawImageC1ERKS0_(%"class.cc::DecodedDrawImage"* nonnull %6, %"class.cc::DecodedDrawImage"* nonnull dereferenceable(64) %20) #9
  call void @_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageE(%"class.cc::ImageProvider::ScopedResult"* nonnull %5, %"class.cc::DecodedDrawImage"* nonnull %6) #9
  call void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"* nonnull %6) #9
  %21 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %22 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %21, align 8
  %23 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %1, i64 0, i32 2, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %23, align 8
  %25 = icmp ult %"class.cc::ImageProvider::ScopedResult"* %22, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %18
  call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %22, %"class.cc::ImageProvider::ScopedResult"* nonnull dereferenceable(80) %4) #9
  %27 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %22, i64 1
  %28 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %27 to i64
  %29 = bitcast %"class.cc::ImageProvider::ScopedResult"** %21 to i64*
  store i64 %28, i64* %29, align 8
  br label %32

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %1, i64 0, i32 2, i32 0, i32 2
  call void @_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %31, %"class.cc::ImageProvider::ScopedResult"* nonnull dereferenceable(80) %4) #9
  br label %32

32:                                               ; preds = %26, %30
  call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %0, %"class.cc::ImageProvider::ScopedResult"* nonnull dereferenceable(80) %5) #9
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #9
  br label %33

33:                                               ; preds = %32, %17
  call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %7) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80)) unnamed_addr #3

declare void @_ZN2cc16DecodedDrawImageC1ERKS0_(%"class.cc::DecodedDrawImage"*, %"class.cc::DecodedDrawImage"* dereferenceable(64)) unnamed_addr #3

declare void @_ZN2cc13ImageProvider12ScopedResultC1ENS_16DecodedDrawImageE(%"class.cc::ImageProvider::ScopedResult"*, %"class.cc::DecodedDrawImage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc16DecodedDrawImageD1Ev(%"class.cc::DecodedDrawImage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc27DecodeStashingImageProvider5ResetEv(%"class.cc::DecodeStashingImageProvider"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %2, align 8
  %4 = getelementptr inbounds %"class.cc::DecodeStashingImageProvider", %"class.cc::DecodeStashingImageProvider"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 1
  %5 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %4, align 8
  %6 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %5, %3
  br i1 %6, label %11, label %7

7:                                                ; preds = %1, %7
  %8 = phi %"class.cc::ImageProvider::ScopedResult"* [ %9, %7 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %8, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* %9) #9
  %10 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %9, %3
  br i1 %10, label %11, label %7

11:                                               ; preds = %7, %1
  store %"class.cc::ImageProvider::ScopedResult"* %3, %"class.cc::ImageProvider::ScopedResult"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.cc::ImageProvider::ScopedResult"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.cc::ImageProvider::ScopedResult"*
  br i1 %10, label %12, label %85

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.cc::ImageProvider::ScopedResult"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %7
  %18 = sdiv exact i64 %17, 80
  %19 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %13, i64 0, i32 0
  %20 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %19, align 8
  %21 = icmp eq %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %20, null
  %22 = inttoptr i64 %16 to %"class.cc::ImageProvider::ScopedResult"*
  br i1 %21, label %35, label %23

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %20, i64 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = icmp ult i64 %1, 2
  %28 = and i1 %27, %26
  br i1 %28, label %29, label %35

29:                                               ; preds = %23
  store i8 1, i8* %24, align 8
  %30 = bitcast %"class.base::StackAllocator"* %13 to %"class.cc::ImageProvider::ScopedResult"**
  %31 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %33 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %32, align 8
  %34 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %14, align 8
  br label %42

35:                                               ; preds = %23, %12
  %36 = icmp ugt i64 %1, 230584300921369395
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %35
  %39 = mul i64 %1, 80
  %40 = tail call i8* @_Znwm(i64 %39) #10
  %41 = bitcast i8* %40 to %"class.cc::ImageProvider::ScopedResult"*
  br label %42

42:                                               ; preds = %29, %38
  %43 = phi %"class.cc::ImageProvider::ScopedResult"* [ %34, %29 ], [ %22, %38 ]
  %44 = phi %"class.cc::ImageProvider::ScopedResult"* [ %33, %29 ], [ %11, %38 ]
  %45 = phi %"class.cc::ImageProvider::ScopedResult"* [ %31, %29 ], [ %41, %38 ]
  %46 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %45, i64 %18
  %47 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %46 to i64
  %48 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %45, i64 %1
  %49 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %48 to i64
  %50 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %43, %44
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %43 to i64
  br label %63

53:                                               ; preds = %42, %53
  %54 = phi %"class.cc::ImageProvider::ScopedResult"* [ %56, %53 ], [ %46, %42 ]
  %55 = phi %"class.cc::ImageProvider::ScopedResult"* [ %57, %53 ], [ %43, %42 ]
  %56 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %54, i64 -1
  %57 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %55, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %56, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80) %57) #9
  %58 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %57, %44
  br i1 %58, label %59, label %53

59:                                               ; preds = %53
  %60 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %56 to i64
  %61 = load i64, i64* %6, align 8
  %62 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %14, align 8
  br label %63

63:                                               ; preds = %51, %59
  %64 = phi %"class.cc::ImageProvider::ScopedResult"* [ %43, %51 ], [ %62, %59 ]
  %65 = phi i64 [ %47, %51 ], [ %60, %59 ]
  %66 = phi i64 [ %52, %51 ], [ %61, %59 ]
  store i64 %65, i64* %6, align 8
  store i64 %47, i64* %15, align 8
  store i64 %49, i64* %4, align 8
  %67 = inttoptr i64 %66 to %"class.cc::ImageProvider::ScopedResult"*
  %68 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %64, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.cc::ImageProvider::ScopedResult"* [ %71, %69 ], [ %64, %63 ]
  %71 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %70, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* %71) #9
  %72 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %71, %67
  br i1 %72, label %73, label %69

73:                                               ; preds = %69, %63
  %74 = icmp eq i64 %66, 0
  br i1 %74, label %85, label %75

75:                                               ; preds = %73
  %76 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %19, align 8
  %77 = icmp ne %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %76, null
  %78 = bitcast %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %76 to %"class.cc::ImageProvider::ScopedResult"*
  %79 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %67, %78
  %80 = and i1 %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %76, i64 0, i32 1
  store i8 0, i8* %82, align 8
  br label %85

83:                                               ; preds = %75
  %84 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %81, %73, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc13ImageProvider12ScopedResultEN4base14StackAllocatorIS3_Lm1EEEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.cc::ImageProvider::ScopedResult"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 80
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 230584300921369395
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #11
  unreachable

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.cc::ImageProvider::ScopedResult"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 80
  %21 = icmp ult i64 %20, 115292150460684697
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %45, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 230584300921369395, %15 ]
  %29 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %30 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %29, align 8
  %31 = icmp eq %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %30, null
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %30, i64 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = icmp ult i64 %28, 2
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  store i8 1, i8* %33, align 8
  %39 = bitcast %"class.base::StackAllocator"* %3 to %"class.cc::ImageProvider::ScopedResult"**
  %40 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %39, align 8
  br label %45

41:                                               ; preds = %27, %32
  %42 = mul i64 %28, 80
  %43 = tail call i8* @_Znwm(i64 %42) #10
  %44 = bitcast i8* %43 to %"class.cc::ImageProvider::ScopedResult"*
  br label %45

45:                                               ; preds = %22, %38, %41
  %46 = phi i64 [ 0, %22 ], [ 1, %38 ], [ %28, %41 ]
  %47 = phi %"class.cc::ImageProvider::ScopedResult"* [ null, %22 ], [ %40, %38 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %47, i64 %10
  %49 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %47, i64 %46
  %50 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %49 to i64
  tail call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %48, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80) %1) #9
  %51 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %48, i64 1
  %52 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %51 to i64
  %53 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %54 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %53, align 8
  %55 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %4, align 8
  %56 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %55, %54
  br i1 %56, label %57, label %59

57:                                               ; preds = %45
  %58 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %54 to i64
  br label %68

59:                                               ; preds = %45, %59
  %60 = phi %"class.cc::ImageProvider::ScopedResult"* [ %62, %59 ], [ %48, %45 ]
  %61 = phi %"class.cc::ImageProvider::ScopedResult"* [ %63, %59 ], [ %55, %45 ]
  %62 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %60, i64 -1
  %63 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %61, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultC1EOS1_(%"class.cc::ImageProvider::ScopedResult"* %62, %"class.cc::ImageProvider::ScopedResult"* dereferenceable(80) %63) #9
  %64 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %63, %54
  br i1 %64, label %65, label %59

65:                                               ; preds = %59
  %66 = load i64, i64* %7, align 8
  %67 = load %"class.cc::ImageProvider::ScopedResult"*, %"class.cc::ImageProvider::ScopedResult"** %4, align 8
  br label %68

68:                                               ; preds = %57, %65
  %69 = phi %"class.cc::ImageProvider::ScopedResult"* [ %54, %57 ], [ %67, %65 ]
  %70 = phi %"class.cc::ImageProvider::ScopedResult"* [ %48, %57 ], [ %62, %65 ]
  %71 = phi i64 [ %58, %57 ], [ %66, %65 ]
  %72 = ptrtoint %"class.cc::ImageProvider::ScopedResult"* %70 to i64
  store i64 %72, i64* %7, align 8
  store i64 %52, i64* %5, align 8
  store i64 %50, i64* %17, align 8
  %73 = inttoptr i64 %71 to %"class.cc::ImageProvider::ScopedResult"*
  %74 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %69, %73
  br i1 %74, label %79, label %75

75:                                               ; preds = %68, %75
  %76 = phi %"class.cc::ImageProvider::ScopedResult"* [ %77, %75 ], [ %69, %68 ]
  %77 = getelementptr inbounds %"class.cc::ImageProvider::ScopedResult", %"class.cc::ImageProvider::ScopedResult"* %76, i64 -1
  tail call void @_ZN2cc13ImageProvider12ScopedResultD1Ev(%"class.cc::ImageProvider::ScopedResult"* %77) #9
  %78 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %77, %73
  br i1 %78, label %79, label %75

79:                                               ; preds = %75, %68
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %92, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.base::StackAllocator", %"class.base::StackAllocator"* %3, i64 0, i32 0
  %83 = load %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"*, %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"** %82, align 8
  %84 = icmp ne %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %83, null
  %85 = bitcast %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %83 to %"class.cc::ImageProvider::ScopedResult"*
  %86 = icmp eq %"class.cc::ImageProvider::ScopedResult"* %73, %85
  %87 = and i1 %84, %86
  br i1 %87, label %88, label %90

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source", %"struct.base::StackAllocator<cc::ImageProvider::ScopedResult, 1>::Source"* %83, i64 0, i32 1
  store i8 0, i8* %89, align 8
  br label %92

90:                                               ; preds = %81
  %91 = inttoptr i64 %71 to i8*
  tail call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %79, %88, %90
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
