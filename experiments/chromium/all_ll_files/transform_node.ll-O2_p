; ModuleID = '../../cc/trees/transform_node.cc'
source_filename = "../../cc/trees/transform_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::TransformNode" = type { i32, i32, i32, %"struct.cc::ElementId", %"class.gfx::Transform", %"class.gfx::Point3F", %"class.gfx::Vector2dF", %"class.gfx::Transform", i32, i32, i24, %"class.gfx::ScrollOffset", %"class.gfx::Vector2dF", float, %"struct.cc::ElementId" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.gfx::ScrollOffset" = type { float, float }
%"class.gfx::Vector2dF" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::TransformCachedNodeData" = type { %"class.gfx::Transform", %"class.gfx::Transform", i8, [3 x i8] }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }

@.str = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"parent_id\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"post_translation\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"sorting_context_id\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"flattens_inherited_transform\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"will_change_transform\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"scroll_offset\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"snap_amount\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN2cc13TransformNodeC1Ev = hidden unnamed_addr alias void (%"struct.cc::TransformNode"*), void (%"struct.cc::TransformNode"*)* @_ZN2cc13TransformNodeC2Ev
@_ZN2cc13TransformNodeC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*), void (%"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*)* @_ZN2cc13TransformNodeC2ERKS0_
@_ZN2cc23TransformCachedNodeDataC1Ev = hidden unnamed_addr alias void (%"struct.cc::TransformCachedNodeData"*), void (%"struct.cc::TransformCachedNodeData"*)* @_ZN2cc23TransformCachedNodeDataC2Ev
@_ZN2cc23TransformCachedNodeDataC1ERKS0_ = hidden unnamed_addr alias void (%"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*), void (%"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*)* @_ZN2cc23TransformCachedNodeDataC2ERKS0_
@_ZN2cc23TransformCachedNodeDataD1Ev = hidden unnamed_addr alias void (%"struct.cc::TransformCachedNodeData"*), void (%"struct.cc::TransformCachedNodeData"*)* @_ZN2cc23TransformCachedNodeDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformNodeC2Ev(%"struct.cc::TransformNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 0
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 3, i32 0
  %6 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 4
  %8 = bitcast %"class.gfx::Transform"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %9 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 5, i32 0
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 7
  %12 = bitcast %"class.gfx::Transform"* %11 to i8*
  %13 = bitcast float* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 20, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 7, i32 0, i32 1
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 8
  store i32 -1, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 9
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 10
  %18 = bitcast i24* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, -131072
  %21 = or i32 %20, 399
  store i32 %21, i32* %18, align 4
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 11, i32 0
  %23 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 14, i32 0
  %24 = bitcast float* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 20, i1 false)
  store i64 %6, i64* %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc13TransformNodeC2ERKS0_(%"struct.cc::TransformNode"* nocapture, %"struct.cc::TransformNode"* nocapture readonly dereferenceable(224)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::TransformNode"* %0 to i8*
  %4 = bitcast %"struct.cc::TransformNode"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 4
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 68, i1 false) #4
  %9 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 5
  %11 = bitcast %"class.gfx::Point3F"* %9 to i8*
  %12 = bitcast %"class.gfx::Point3F"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 20, i1 false)
  %13 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 7
  %14 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 7
  %15 = bitcast %"class.gfx::Transform"* %13 to i8*
  %16 = bitcast %"class.gfx::Transform"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 68, i1 false) #4
  %17 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 8
  %18 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %1, i64 0, i32 8
  %19 = bitcast i32* %17 to i8*
  %20 = bitcast i32* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %19, i8* align 4 %20, i64 44, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc13TransformNode11AsValueIntoEPN4base11trace_event11TracedValueE(%"struct.cc::TransformNode"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %4) #4
  %5 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %6) #4
  %7 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 3
  tail call void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"* %7, %"class.base::trace_event::TracedValue"* %1) #4
  %8 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 4
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9TransformEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), %"class.gfx::Transform"* dereferenceable(68) %8, %"class.base::trace_event::TracedValue"* %1) #4
  %9 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 5
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx7Point3FEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), %"class.gfx::Point3F"* dereferenceable(12) %9, %"class.base::trace_event::TracedValue"* %1) #4
  %10 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 6
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9Vector2dFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), %"class.gfx::Vector2dF"* dereferenceable(8) %10, %"class.base::trace_event::TracedValue"* %1) #4
  %11 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i32 %12) #4
  %13 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 10
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = trunc i32 %15 to i8
  %17 = icmp slt i8 %16, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i1 zeroext %17) #4
  %18 = load i32, i32* %14, align 4
  %19 = trunc i32 %18 to i16
  %20 = icmp slt i16 %19, 0
  tail call void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i1 zeroext %20) #4
  %21 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 11
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx12ScrollOffsetEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), %"class.gfx::ScrollOffset"* dereferenceable(8) %21, %"class.base::trace_event::TracedValue"* %1) #4
  %22 = getelementptr inbounds %"struct.cc::TransformNode", %"struct.cc::TransformNode"* %0, i64 0, i32 12
  tail call void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9Vector2dFEPN4base11trace_event11TracedValueE(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), %"class.gfx::Vector2dF"* dereferenceable(8) %22, %"class.base::trace_event::TracedValue"* %1) #4
  ret void
}

declare void @_ZN4base11trace_event11TracedValue10SetIntegerEPKci(%"class.base::trace_event::TracedValue"*, i8*, i32) local_unnamed_addr #2

declare void @_ZNK2cc9ElementId16AddToTracedValueEPN4base11trace_event11TracedValueE(%"struct.cc::ElementId"*, %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9TransformEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Transform"* dereferenceable(68), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx7Point3FEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Point3F"* dereferenceable(12), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx9Vector2dFEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue10SetBooleanEPKcb(%"class.base::trace_event::TracedValue"*, i8*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2cc8MathUtil16AddToTracedValueEPKcRKN3gfx12ScrollOffsetEPN4base11trace_event11TracedValueE(i8*, %"class.gfx::ScrollOffset"* dereferenceable(8), %"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23TransformCachedNodeDataC2Ev(%"struct.cc::TransformCachedNodeData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.cc::TransformCachedNodeData"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %2, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %3 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 0, i32 0, i32 1
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 1
  %5 = bitcast %"class.gfx::Transform"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #4
  %6 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 1, i32 0, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 4
  %9 = and i8 %8, -2
  store i8 %9, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc23TransformCachedNodeDataC2ERKS0_(%"struct.cc::TransformCachedNodeData"* nocapture, %"struct.cc::TransformCachedNodeData"* nocapture readonly dereferenceable(140)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.cc::TransformCachedNodeData"* %0 to i8*
  %4 = bitcast %"struct.cc::TransformCachedNodeData"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 68, i1 false) #4
  %5 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 0, i32 1
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 68, i1 false) #4
  %9 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 4
  %12 = and i8 %11, 1
  %13 = load i8, i8* %9, align 4
  %14 = and i8 %13, -2
  %15 = or i8 %14, %12
  store i8 %15, i8* %9, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc23TransformCachedNodeDataD2Ev(%"struct.cc::TransformCachedNodeData"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc23TransformCachedNodeDataeqERKS0_(%"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"* dereferenceable(140)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 0, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %3, %class.SkMatrix44* dereferenceable(68) %4) #4
  br i1 %5, label %6, label %18

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 0, i32 1, i32 0
  %9 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %7, %class.SkMatrix44* dereferenceable(68) %8) #4
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %0, i64 0, i32 2
  %12 = load i8, i8* %11, align 4
  %13 = getelementptr inbounds %"struct.cc::TransformCachedNodeData", %"struct.cc::TransformCachedNodeData"* %1, i64 0, i32 2
  %14 = load i8, i8* %13, align 4
  %15 = xor i8 %14, %12
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br label %18

18:                                               ; preds = %10, %6, %2
  %19 = phi i1 [ false, %6 ], [ false, %2 ], [ %17, %10 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
