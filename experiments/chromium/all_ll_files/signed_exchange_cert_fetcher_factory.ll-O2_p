; ModuleID = '../../content/browser/web_package/signed_exchange_cert_fetcher_factory.cc'
source_filename = "../../content/browser/web_package/signed_exchange_cert_fetcher_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SignedExchangeCertFetcherFactory" = type { i32 (...)** }
%"class.content::SignedExchangeCertFetcher" = type <{ %"class.network::mojom::URLLoaderClient", %class.scoped_refptr, %"class.std::__1::vector", %"class.std::__1::unique_ptr.7", %"class.base::OnceCallback", %"class.std::__1::unique_ptr.143", %"class.mojo::ScopedHandleBase.149", [4 x i8], %"class.std::__1::unique_ptr.150", %"class.std::__1::basic_string", %"class.content::SignedExchangeDevToolsProxy"*, i8, [7 x i8], %"class.absl::optional.56", %"class.net::IPAddress", [7 x i8] }>
%"class.network::mojom::URLLoaderClient" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr.0"* }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.network::ResourceRequest"* }
%"struct.network::ResourceRequest" = type { %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", i8, %"class.absl::optional.22", %"class.absl::optional.22", %class.GURL, i32, %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", i32, i32, i32, i8, i8, i32, i8, i8, i8, i32, i32, i32, %"class.std::__1::basic_string", i32, %class.scoped_refptr.34, i8, i8, i8, i8, i8, i8, i32, i8, i32, i8, i8, %"class.absl::optional.56", %"class.net::HttpRequestHeaders", %"class.net::HttpRequestHeaders", %"class.absl::optional.56", %"class.absl::optional.61", %"class.absl::optional.61", i8, i8, i8, i8, %"class.absl::optional.56", %"class.absl::optional.66", %"class.network::OptionalTrustTokenParams", %"class.absl::optional.120", %"class.absl::optional.126" }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"class.url::Origin" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.15" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %class.GURL* }
%class.scoped_refptr.34 = type { %"class.network::ResourceRequestBody"* }
%"class.network::ResourceRequestBody" = type <{ %"class.base::RefCountedThreadSafe", [4 x i8], %"class.std::__1::vector.36", i64, i8, i8, [6 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.network::DataElement"*, %"class.network::DataElement"*, %"class.std::__1::__compressed_pair.51" }
%"class.network::DataElement" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.38" }
%"union.absl::variant_internal::DestructibleUnionImpl.38" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"union.absl::variant_internal::DestructibleUnionImpl.47" }
%"union.absl::variant_internal::DestructibleUnionImpl.47" = type { %"union.absl::variant_internal::DestructibleUnionImpl.49" }
%"union.absl::variant_internal::DestructibleUnionImpl.49" = type { %"class.network::DataElementFile" }
%"class.network::DataElementFile" = type { %"class.base::FilePath", i64, i64, %"class.base::Time" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.network::DataElement"* }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.27" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.29" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%union.anon.70 = type { %"struct.network::ResourceRequest::TrustedParams" }
%"struct.network::ResourceRequest::TrustedParams" = type { %"class.net::IsolationInfo", i8, i8, %"class.mojo::PendingRemote.89", %"class.mojo::PendingRemote.90", %"class.mojo::PendingRemote.91", %"class.mojo::StructPtr", %"class.mojo::PendingRemote.98" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.22", %"class.absl::optional.22", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.76" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.71", %"class.absl::optional.71" }
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.76" = type { %"class.absl::optional_internal::optional_data.77" }
%"class.absl::optional_internal::optional_data.77" = type { %"class.absl::optional_internal::optional_data_base.78" }
%"class.absl::optional_internal::optional_data_base.78" = type { %"class.absl::optional_internal::optional_data_dtor_base.79" }
%"class.absl::optional_internal::optional_data_dtor_base.79" = type { i8, %union.anon.80 }
%union.anon.80 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i64 }
%"class.mojo::PendingRemote.89" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::PendingRemote.90" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingRemote.91" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.network::mojom::ClientSecurityState"* }
%"class.network::mojom::ClientSecurityState" = type <{ %"struct.network::CrossOriginEmbedderPolicy", i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.61", i32, %"class.absl::optional.61" }
%"class.mojo::PendingRemote.98" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.network::OptionalTrustTokenParams" = type { %"class.mojo::StructPtr.99" }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.network::mojom::TrustTokenParams"* }
%"class.network::mojom::TrustTokenParams" = type { i32, i32, i32, i8, %"class.std::__1::vector.103", %"class.std::__1::vector.110", %"class.absl::optional.61" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.url::Origin"* }
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, [7 x i8], %union.anon.124 }
%union.anon.124 = type { %"struct.network::ResourceRequest::WebBundleTokenParams" }
%"struct.network::ResourceRequest::WebBundleTokenParams" = type <{ %class.GURL, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.125", i32, [4 x i8] }>
%"class.mojo::PendingRemote.125" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { %"class.std::__1::vector.131" }
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { i32*, i32*, %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i32* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.141 }
%class.scoped_refptr.141 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.142", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::ThrottlingURLLoader"* }
%"class.blink::ThrottlingURLLoader" = type opaque
%"class.mojo::ScopedHandleBase.149" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.153, i8, %"class.mojo::ScopedHandleBase.155", %class.scoped_refptr.156, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.153 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.154" }>
%"class.base::RefCountedThreadSafe.154" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase.155" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.156 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.157 }
%class.scoped_refptr.157 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.158", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.158" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.159" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.56" = type { %"class.absl::optional_internal::optional_data.57" }
%"class.absl::optional_internal::optional_data.57" = type { %"class.absl::optional_internal::optional_data_base.58" }
%"class.absl::optional_internal::optional_data_base.58" = type { %"class.absl::optional_internal::optional_data_dtor_base.59" }
%"class.absl::optional_internal::optional_data_dtor_base.59" = type { i8, %union.anon.60 }
%union.anon.60 = type { %"class.base::UnguessableToken" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.content::SignedExchangeCertFetcherFactoryImpl" = type { %"class.content::SignedExchangeCertFetcherFactory", %class.scoped_refptr, %"class.base::RepeatingCallback.170", %"class.absl::optional.56", %"class.net::IsolationInfo" }
%"class.base::RepeatingCallback.170" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.content::SignedExchangeDevToolsProxy" = type opaque

$_ZN7content36SignedExchangeCertFetcherFactoryImplD2Ev = comdat any

$_ZN7content36SignedExchangeCertFetcherFactoryImplD0Ev = comdat any

@_ZTVN7content32SignedExchangeCertFetcherFactoryE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SignedExchangeCertFetcherFactory"*)* @_ZN7content32SignedExchangeCertFetcherFactoryD2Ev to i8*), i8* bitcast (void (%"class.content::SignedExchangeCertFetcherFactory"*)* @_ZN7content32SignedExchangeCertFetcherFactoryD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN7content36SignedExchangeCertFetcherFactoryImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SignedExchangeCertFetcherFactoryImpl"*)* @_ZN7content36SignedExchangeCertFetcherFactoryImplD2Ev to i8*), i8* bitcast (void (%"class.content::SignedExchangeCertFetcherFactoryImpl"*)* @_ZN7content36SignedExchangeCertFetcherFactoryImplD0Ev to i8*), i8* bitcast (%"class.content::SignedExchangeCertFetcher"* (%"class.content::SignedExchangeCertFetcherFactoryImpl"*, %class.GURL*, i1, %"class.base::OnceCallback"*, %"class.content::SignedExchangeDevToolsProxy"*)* @_ZN7content36SignedExchangeCertFetcherFactoryImpl21CreateFetcherAndStartERK4GURLbN4base12OnceCallbackIFvNS_24SignedExchangeLoadResultENSt3__110unique_ptrINS_30SignedExchangeCertificateChainENS7_14default_deleteIS9_EEEEN3net9IPAddressEEEEPNS_27SignedExchangeDevToolsProxyE to i8*)] }, align 8

@_ZN7content32SignedExchangeCertFetcherFactoryD1Ev = hidden unnamed_addr alias void (%"class.content::SignedExchangeCertFetcherFactory"*), void (%"class.content::SignedExchangeCertFetcherFactory"*)* @_ZN7content32SignedExchangeCertFetcherFactoryD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN7content32SignedExchangeCertFetcherFactoryD2Ev(%"class.content::SignedExchangeCertFetcherFactory"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN7content32SignedExchangeCertFetcherFactoryD0Ev(%"class.content::SignedExchangeCertFetcherFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SignedExchangeCertFetcher"* @_ZN7content36SignedExchangeCertFetcherFactoryImpl21CreateFetcherAndStartERK4GURLbN4base12OnceCallbackIFvNS_24SignedExchangeLoadResultENSt3__110unique_ptrINS_30SignedExchangeCertificateChainENS7_14default_deleteIS9_EEEEN3net9IPAddressEEEEPNS_27SignedExchangeDevToolsProxyE(%"class.content::SignedExchangeCertFetcherFactoryImpl"*, %class.GURL* dereferenceable(120), i1 zeroext, %"class.base::OnceCallback"* nocapture, %"class.content::SignedExchangeDevToolsProxy"*) unnamed_addr #3 align 2 {
  %6 = alloca %"class.base::RepeatingCallback.170", align 8
  %7 = alloca %"class.std::__1::vector", align 16
  %8 = alloca %"class.std::__1::vector", align 16
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.net::IsolationInfo", align 8
  %11 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 2
  %16 = bitcast %"class.base::RepeatingCallback.170"* %6 to i8*
  %17 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11, !noalias !2
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.170", %"class.base::RepeatingCallback.170"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::RepeatingCallback.170"* %15 to i64*
  %20 = load i64, i64* %19, align 8, !noalias !2
  %21 = bitcast %"class.base::RepeatingCallback.170"* %6 to i64*
  store i64 %20, i64* %21, align 8, !noalias !2
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8, !noalias !2
  %22 = getelementptr inbounds %"class.base::RepeatingCallback.170", %"class.base::RepeatingCallback.170"* %6, i64 0, i32 0, i32 0
  %23 = inttoptr i64 %20 to %"class.base::internal::BindStateBase"*
  %24 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %23, i64 0, i32 1
  %25 = bitcast void ()** %24 to void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)**
  %26 = load void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)*, void (%"class.std::__1::vector"*, %"class.base::internal::BindStateBase"*)** %25, align 8, !noalias !2
  call void %26(%"class.std::__1::vector"* nonnull sret %7, %"class.base::internal::BindStateBase"* %23) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11, !noalias !2
  %27 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %27, align 8
  store %"class.network::SharedURLLoaderFactory"* null, %"class.network::SharedURLLoaderFactory"** %27, align 8
  %29 = bitcast %"class.std::__1::vector"* %7 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %32 = bitcast %"class.std::__1::vector"* %8 to <2 x i64>*
  store <2 x i64> %30, <2 x i64>* %32, align 16
  %33 = bitcast %"class.std::__1::unique_ptr.0"** %14 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr.0"** %35 to i64*
  store i64 %34, i64* %36, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 0, i64 24, i1 false) #11
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %37, align 8
  %41 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 3
  %42 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 4
  call void @_ZN3net13IsolationInfoC1ERKS0_(%"class.net::IsolationInfo"* nonnull %10, %"class.net::IsolationInfo"* dereferenceable(496) %42) #11
  %43 = call %"class.content::SignedExchangeCertFetcher"* @_ZN7content25SignedExchangeCertFetcher14CreateAndStartE13scoped_refptrIN7network22SharedURLLoaderFactoryEENSt3__16vectorINS5_10unique_ptrIN5blink17URLLoaderThrottleENS5_14default_deleteIS9_EEEENS5_9allocatorISC_EEEERK4GURLbN4base12OnceCallbackIFvNS_24SignedExchangeLoadResultENS7_INS_30SignedExchangeCertificateChainENSA_ISM_EEEEN3net9IPAddressEEEEPNS_27SignedExchangeDevToolsProxyERKN4absl8optionalINSJ_16UnguessableTokenEEENSP_13IsolationInfoE(%"class.network::SharedURLLoaderFactory"* %28, %"class.std::__1::vector"* nonnull %8, %class.GURL* dereferenceable(120) %1, i1 zeroext %2, %"class.base::OnceCallback"* nonnull %9, %"class.content::SignedExchangeDevToolsProxy"* %4, %"class.absl::optional.56"* dereferenceable(24) %41, %"class.net::IsolationInfo"* nonnull %10) #11
  call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* nonnull %10) #11
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #11
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %45, align 16
  %47 = icmp eq %"class.std::__1::unique_ptr.0"* %46, null
  br i1 %47, label %70, label %48

48:                                               ; preds = %5
  %49 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i8*
  %50 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %31, align 8
  %51 = icmp eq %"class.std::__1::unique_ptr.0"* %50, %46
  br i1 %51, label %68, label %52

52:                                               ; preds = %48, %63
  %53 = phi %"class.std::__1::unique_ptr.0"* [ %54, %63 ], [ %50, %48 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %53, i64 -1
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::URLLoaderThrottle"*, %"class.blink::URLLoaderThrottle"** %55, align 8
  store %"class.blink::URLLoaderThrottle"* null, %"class.blink::URLLoaderThrottle"** %55, align 8
  %57 = icmp eq %"class.blink::URLLoaderThrottle"* %56, null
  br i1 %57, label %63, label %58

58:                                               ; preds = %52
  %59 = bitcast %"class.blink::URLLoaderThrottle"* %56 to void (%"class.blink::URLLoaderThrottle"*)***
  %60 = load void (%"class.blink::URLLoaderThrottle"*)**, void (%"class.blink::URLLoaderThrottle"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::URLLoaderThrottle"*)*, void (%"class.blink::URLLoaderThrottle"*)** %60, i64 1
  %62 = load void (%"class.blink::URLLoaderThrottle"*)*, void (%"class.blink::URLLoaderThrottle"*)** %61, align 8
  call void %62(%"class.blink::URLLoaderThrottle"* nonnull %56) #11
  br label %63

63:                                               ; preds = %58, %52
  %64 = icmp eq %"class.std::__1::unique_ptr.0"* %54, %46
  br i1 %64, label %65, label %52

65:                                               ; preds = %63
  %66 = bitcast %"class.std::__1::vector"* %8 to i8**
  %67 = load i8*, i8** %66, align 16
  br label %68

68:                                               ; preds = %65, %48
  %69 = phi i8* [ %67, %65 ], [ %49, %48 ]
  store %"class.std::__1::unique_ptr.0"* %46, %"class.std::__1::unique_ptr.0"** %31, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %5, %68
  %71 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %12, align 16
  %72 = icmp eq %"class.std::__1::unique_ptr.0"* %71, null
  br i1 %72, label %95, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i8*
  %75 = load %"class.std::__1::unique_ptr.0"*, %"class.std::__1::unique_ptr.0"** %13, align 8
  %76 = icmp eq %"class.std::__1::unique_ptr.0"* %75, %71
  br i1 %76, label %93, label %77

77:                                               ; preds = %73, %88
  %78 = phi %"class.std::__1::unique_ptr.0"* [ %79, %88 ], [ %75, %73 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %78, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::URLLoaderThrottle"*, %"class.blink::URLLoaderThrottle"** %80, align 8
  store %"class.blink::URLLoaderThrottle"* null, %"class.blink::URLLoaderThrottle"** %80, align 8
  %82 = icmp eq %"class.blink::URLLoaderThrottle"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::URLLoaderThrottle"* %81 to void (%"class.blink::URLLoaderThrottle"*)***
  %85 = load void (%"class.blink::URLLoaderThrottle"*)**, void (%"class.blink::URLLoaderThrottle"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::URLLoaderThrottle"*)*, void (%"class.blink::URLLoaderThrottle"*)** %85, i64 1
  %87 = load void (%"class.blink::URLLoaderThrottle"*)*, void (%"class.blink::URLLoaderThrottle"*)** %86, align 8
  call void %87(%"class.blink::URLLoaderThrottle"* nonnull %81) #11
  br label %88

88:                                               ; preds = %83, %77
  %89 = icmp eq %"class.std::__1::unique_ptr.0"* %79, %71
  br i1 %89, label %90, label %77

90:                                               ; preds = %88
  %91 = bitcast %"class.std::__1::vector"* %7 to i8**
  %92 = load i8*, i8** %91, align 16
  br label %93

93:                                               ; preds = %90, %73
  %94 = phi i8* [ %92, %90 ], [ %74, %73 ]
  store %"class.std::__1::unique_ptr.0"* %71, %"class.std::__1::unique_ptr.0"** %13, align 8
  call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %70, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  ret %"class.content::SignedExchangeCertFetcher"* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.content::SignedExchangeCertFetcher"* @_ZN7content25SignedExchangeCertFetcher14CreateAndStartE13scoped_refptrIN7network22SharedURLLoaderFactoryEENSt3__16vectorINS5_10unique_ptrIN5blink17URLLoaderThrottleENS5_14default_deleteIS9_EEEENS5_9allocatorISC_EEEERK4GURLbN4base12OnceCallbackIFvNS_24SignedExchangeLoadResultENS7_INS_30SignedExchangeCertificateChainENSA_ISM_EEEEN3net9IPAddressEEEEPNS_27SignedExchangeDevToolsProxyERKN4absl8optionalINSJ_16UnguessableTokenEEENSP_13IsolationInfoE(%"class.network::SharedURLLoaderFactory"*, %"class.std::__1::vector"*, %class.GURL* dereferenceable(120), i1 zeroext, %"class.base::OnceCallback"*, %"class.content::SignedExchangeDevToolsProxy"*, %"class.absl::optional.56"* dereferenceable(24), %"class.net::IsolationInfo"*) local_unnamed_addr #5

declare void @_ZN3net13IsolationInfoC1ERKS0_(%"class.net::IsolationInfo"*, %"class.net::IsolationInfo"* dereferenceable(496)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::SignedExchangeCertFetcherFactory"* @_ZN7content32SignedExchangeCertFetcherFactory6CreateE13scoped_refptrIN7network22SharedURLLoaderFactoryEEN4base17RepeatingCallbackIFNSt3__16vectorINS7_10unique_ptrIN5blink17URLLoaderThrottleENS7_14default_deleteISB_EEEENS7_9allocatorISE_EEEEvEEERKN4absl8optionalINS5_16UnguessableTokenEEEN3net13IsolationInfoE(%"class.network::SharedURLLoaderFactory"*, %"class.base::RepeatingCallback.170"* nocapture, %"class.absl::optional.56"* nocapture readonly dereferenceable(24), %"class.net::IsolationInfo"*) local_unnamed_addr #3 align 2 {
  %5 = alloca %"class.base::RepeatingCallback.170", align 8
  %6 = alloca %"class.net::IsolationInfo", align 8
  %7 = ptrtoint %"class.network::SharedURLLoaderFactory"* %0 to i64
  %8 = bitcast %"class.base::RepeatingCallback.170"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8)
  %9 = bitcast %"class.net::IsolationInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 496, i8* nonnull %9)
  %10 = tail call i8* @_Znwm(i64 544) #12
  %11 = getelementptr inbounds %"class.base::RepeatingCallback.170", %"class.base::RepeatingCallback.170"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::RepeatingCallback.170"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  call void @_ZN3net13IsolationInfoC1EOS0_(%"class.net::IsolationInfo"* nonnull %6, %"class.net::IsolationInfo"* dereferenceable(496) %3) #11
  %14 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content36SignedExchangeCertFetcherFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 %7, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = getelementptr inbounds %"class.base::RepeatingCallback.170", %"class.base::RepeatingCallback.170"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast i8* %17 to i64*
  store i64 %13, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %20 = getelementptr inbounds i8, i8* %10, i64 24
  %21 = getelementptr inbounds %"class.absl::optional.56", %"class.absl::optional.56"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %10, i64 48
  %23 = bitcast i8* %22 to %"class.net::IsolationInfo"*
  call void @_ZN3net13IsolationInfoC1EOS0_(%"class.net::IsolationInfo"* %23, %"class.net::IsolationInfo"* nonnull dereferenceable(496) %6) #11
  call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* nonnull %6) #11
  %24 = getelementptr inbounds %"class.base::RepeatingCallback.170", %"class.base::RepeatingCallback.170"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 496, i8* nonnull %9)
  %25 = bitcast i8* %10 to %"class.content::SignedExchangeCertFetcherFactory"*
  ret %"class.content::SignedExchangeCertFetcherFactory"* %25
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content36SignedExchangeCertFetcherFactoryImplD2Ev(%"class.content::SignedExchangeCertFetcherFactoryImpl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content36SignedExchangeCertFetcherFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 4
  tail call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* %3) #11
  %4 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #11
  %5 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %5, align 8
  %7 = icmp eq %"class.network::SharedURLLoaderFactory"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #11
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted"* %15 to %"class.network::SharedURLLoaderFactory"*
  %17 = bitcast %"class.base::RefCounted"* %15 to void (%"class.network::SharedURLLoaderFactory"*)***
  %18 = load void (%"class.network::SharedURLLoaderFactory"*)**, void (%"class.network::SharedURLLoaderFactory"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %18, i64 1
  %20 = load void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %19, align 8
  tail call void %20(%"class.network::SharedURLLoaderFactory"* nonnull %16) #11
  br label %21

21:                                               ; preds = %1, %8, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7content36SignedExchangeCertFetcherFactoryImplD0Ev(%"class.content::SignedExchangeCertFetcherFactoryImpl"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN7content36SignedExchangeCertFetcherFactoryImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 4
  tail call void @_ZN3net13IsolationInfoD1Ev(%"class.net::IsolationInfo"* %3) #11
  %4 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 2, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #11
  %5 = getelementptr inbounds %"class.content::SignedExchangeCertFetcherFactoryImpl", %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.network::SharedURLLoaderFactory"*, %"class.network::SharedURLLoaderFactory"** %5, align 8
  %7 = icmp eq %"class.network::SharedURLLoaderFactory"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.network::SharedURLLoaderFactory", %"class.network::SharedURLLoaderFactory"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #11
  %11 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted"* %15 to %"class.network::SharedURLLoaderFactory"*
  %17 = bitcast %"class.base::RefCounted"* %15 to void (%"class.network::SharedURLLoaderFactory"*)***
  %18 = load void (%"class.network::SharedURLLoaderFactory"*)**, void (%"class.network::SharedURLLoaderFactory"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %18, i64 1
  %20 = load void (%"class.network::SharedURLLoaderFactory"*)*, void (%"class.network::SharedURLLoaderFactory"*)** %19, align 8
  tail call void %20(%"class.network::SharedURLLoaderFactory"* nonnull %16) #11
  br label %21

21:                                               ; preds = %1, %8, %14
  %22 = bitcast %"class.content::SignedExchangeCertFetcherFactoryImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN3net13IsolationInfoC1EOS0_(%"class.net::IsolationInfo"*, %"class.net::IsolationInfo"* dereferenceable(496)) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNO4base17RepeatingCallbackIFNSt3__16vectorINS1_10unique_ptrIN5blink17URLLoaderThrottleENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEvEE3RunEv: argument 0"}
!4 = distinct !{!4, !"_ZNO4base17RepeatingCallbackIFNSt3__16vectorINS1_10unique_ptrIN5blink17URLLoaderThrottleENS1_14default_deleteIS5_EEEENS1_9allocatorIS8_EEEEvEE3RunEv"}
