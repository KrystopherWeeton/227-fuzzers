; ModuleID = '../../third_party/utf/src/runetype/islowerrune.c'
source_filename = "../../third_party/utf/src/runetype/islowerrune.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ranges = internal global [106 x [3 x i32]] [[3 x i32] [i32 97, i32 122, i32 65], [3 x i32] [i32 224, i32 246, i32 192], [3 x i32] [i32 248, i32 254, i32 216], [3 x i32] [i32 426, i32 427, i32 426], [3 x i32] [i32 564, i32 569, i32 564], [3 x i32] [i32 575, i32 576, i32 11390], [3 x i32] [i32 598, i32 599, i32 393], [3 x i32] [i32 605, i32 607, i32 605], [3 x i32] [i32 621, i32 622, i32 621], [3 x i32] [i32 627, i32 628, i32 627], [3 x i32] [i32 630, i32 636, i32 630], [3 x i32] [i32 638, i32 639, i32 638], [3 x i32] [i32 641, i32 642, i32 641], [3 x i32] [i32 644, i32 646, i32 644], [3 x i32] [i32 650, i32 651, i32 433], [3 x i32] [i32 653, i32 657, i32 653], [3 x i32] [i32 661, i32 668, i32 661], [3 x i32] [i32 671, i32 687, i32 671], [3 x i32] [i32 891, i32 893, i32 1021], [3 x i32] [i32 941, i32 943, i32 904], [3 x i32] [i32 945, i32 961, i32 913], [3 x i32] [i32 963, i32 971, i32 931], [3 x i32] [i32 973, i32 974, i32 910], [3 x i32] [i32 1072, i32 1103, i32 1040], [3 x i32] [i32 1104, i32 1119, i32 1024], [3 x i32] [i32 1377, i32 1414, i32 1329], [3 x i32] [i32 5112, i32 5117, i32 5104], [3 x i32] [i32 7299, i32 7300, i32 1057], [3 x i32] [i32 7424, i32 7467, i32 7424], [3 x i32] [i32 7531, i32 7543, i32 7531], [3 x i32] [i32 7546, i32 7548, i32 7546], [3 x i32] [i32 7550, i32 7578, i32 7550], [3 x i32] [i32 7830, i32 7834, i32 7830], [3 x i32] [i32 7836, i32 7837, i32 7836], [3 x i32] [i32 7936, i32 7943, i32 7944], [3 x i32] [i32 7952, i32 7957, i32 7960], [3 x i32] [i32 7968, i32 7975, i32 7976], [3 x i32] [i32 7984, i32 7991, i32 7992], [3 x i32] [i32 8000, i32 8005, i32 8008], [3 x i32] [i32 8032, i32 8039, i32 8040], [3 x i32] [i32 8048, i32 8049, i32 8122], [3 x i32] [i32 8050, i32 8053, i32 8136], [3 x i32] [i32 8054, i32 8055, i32 8154], [3 x i32] [i32 8056, i32 8057, i32 8184], [3 x i32] [i32 8058, i32 8059, i32 8170], [3 x i32] [i32 8060, i32 8061, i32 8186], [3 x i32] [i32 8064, i32 8071, i32 8072], [3 x i32] [i32 8080, i32 8087, i32 8088], [3 x i32] [i32 8096, i32 8103, i32 8104], [3 x i32] [i32 8112, i32 8113, i32 8120], [3 x i32] [i32 8118, i32 8119, i32 8118], [3 x i32] [i32 8134, i32 8135, i32 8134], [3 x i32] [i32 8144, i32 8145, i32 8152], [3 x i32] [i32 8146, i32 8147, i32 8146], [3 x i32] [i32 8150, i32 8151, i32 8150], [3 x i32] [i32 8160, i32 8161, i32 8168], [3 x i32] [i32 8162, i32 8164, i32 8162], [3 x i32] [i32 8166, i32 8167, i32 8166], [3 x i32] [i32 8182, i32 8183, i32 8182], [3 x i32] [i32 8462, i32 8463, i32 8462], [3 x i32] [i32 8508, i32 8509, i32 8508], [3 x i32] [i32 8518, i32 8521, i32 8518], [3 x i32] [i32 11312, i32 11358, i32 11264], [3 x i32] [i32 11383, i32 11387, i32 11383], [3 x i32] [i32 11520, i32 11557, i32 4256], [3 x i32] [i32 42800, i32 42801, i32 42800], [3 x i32] [i32 42865, i32 42872, i32 42865], [3 x i32] [i32 42900, i32 42901, i32 42900], [3 x i32] [i32 43824, i32 43858, i32 43824], [3 x i32] [i32 43860, i32 43866, i32 43860], [3 x i32] [i32 43872, i32 43877, i32 43872], [3 x i32] [i32 43888, i32 43967, i32 5024], [3 x i32] [i32 64256, i32 64262, i32 64256], [3 x i32] [i32 64275, i32 64279, i32 64275], [3 x i32] [i32 65345, i32 65370, i32 65313], [3 x i32] [i32 66600, i32 66639, i32 66560], [3 x i32] [i32 66776, i32 66811, i32 66736], [3 x i32] [i32 68800, i32 68850, i32 68736], [3 x i32] [i32 71872, i32 71903, i32 71840], [3 x i32] [i32 119834, i32 119859, i32 119834], [3 x i32] [i32 119886, i32 119892, i32 119886], [3 x i32] [i32 119894, i32 119911, i32 119894], [3 x i32] [i32 119938, i32 119963, i32 119938], [3 x i32] [i32 119990, i32 119993, i32 119990], [3 x i32] [i32 119997, i32 120003, i32 119997], [3 x i32] [i32 120005, i32 120015, i32 120005], [3 x i32] [i32 120042, i32 120067, i32 120042], [3 x i32] [i32 120094, i32 120119, i32 120094], [3 x i32] [i32 120146, i32 120171, i32 120146], [3 x i32] [i32 120198, i32 120223, i32 120198], [3 x i32] [i32 120250, i32 120275, i32 120250], [3 x i32] [i32 120302, i32 120327, i32 120302], [3 x i32] [i32 120354, i32 120379, i32 120354], [3 x i32] [i32 120406, i32 120431, i32 120406], [3 x i32] [i32 120458, i32 120485, i32 120458], [3 x i32] [i32 120514, i32 120538, i32 120514], [3 x i32] [i32 120540, i32 120545, i32 120540], [3 x i32] [i32 120572, i32 120596, i32 120572], [3 x i32] [i32 120598, i32 120603, i32 120598], [3 x i32] [i32 120630, i32 120654, i32 120630], [3 x i32] [i32 120656, i32 120661, i32 120656], [3 x i32] [i32 120688, i32 120712, i32 120688], [3 x i32] [i32 120714, i32 120719, i32 120714], [3 x i32] [i32 120746, i32 120770, i32 120746], [3 x i32] [i32 120772, i32 120777, i32 120772], [3 x i32] [i32 125218, i32 125251, i32 125184]], align 16
@laces2 = internal global [33 x [2 x i32]] [[2 x i32] [i32 257, i32 303], [2 x i32] [i32 307, i32 311], [2 x i32] [i32 314, i32 328], [2 x i32] [i32 331, i32 375], [2 x i32] [i32 378, i32 382], [2 x i32] [i32 387, i32 389], [2 x i32] [i32 417, i32 421], [2 x i32] [i32 436, i32 438], [2 x i32] [i32 462, i32 476], [2 x i32] [i32 479, i32 495], [2 x i32] [i32 505, i32 543], [2 x i32] [i32 547, i32 563], [2 x i32] [i32 583, i32 591], [2 x i32] [i32 881, i32 883], [2 x i32] [i32 985, i32 1007], [2 x i32] [i32 1121, i32 1153], [2 x i32] [i32 1163, i32 1215], [2 x i32] [i32 1218, i32 1230], [2 x i32] [i32 1233, i32 1327], [2 x i32] [i32 7681, i32 7829], [2 x i32] [i32 7841, i32 7935], [2 x i32] [i32 11368, i32 11372], [2 x i32] [i32 11393, i32 11491], [2 x i32] [i32 11500, i32 11502], [2 x i32] [i32 42561, i32 42605], [2 x i32] [i32 42625, i32 42651], [2 x i32] [i32 42787, i32 42799], [2 x i32] [i32 42803, i32 42863], [2 x i32] [i32 42874, i32 42876], [2 x i32] [i32 42879, i32 42887], [2 x i32] [i32 42897, i32 42899], [2 x i32] [i32 42903, i32 42921], [2 x i32] [i32 42933, i32 42935]], align 16
@singles = internal global [150 x [2 x i32]] [[2 x i32] [i32 181, i32 924], [2 x i32] [i32 223, i32 223], [2 x i32] [i32 255, i32 376], [2 x i32] [i32 305, i32 73], [2 x i32] [i32 312, i32 312], [2 x i32] [i32 329, i32 329], [2 x i32] [i32 383, i32 83], [2 x i32] [i32 384, i32 579], [2 x i32] [i32 392, i32 391], [2 x i32] [i32 396, i32 395], [2 x i32] [i32 397, i32 397], [2 x i32] [i32 402, i32 401], [2 x i32] [i32 405, i32 502], [2 x i32] [i32 409, i32 408], [2 x i32] [i32 410, i32 573], [2 x i32] [i32 411, i32 411], [2 x i32] [i32 414, i32 544], [2 x i32] [i32 424, i32 423], [2 x i32] [i32 429, i32 428], [2 x i32] [i32 432, i32 431], [2 x i32] [i32 441, i32 440], [2 x i32] [i32 442, i32 442], [2 x i32] [i32 445, i32 444], [2 x i32] [i32 446, i32 446], [2 x i32] [i32 447, i32 503], [2 x i32] [i32 454, i32 452], [2 x i32] [i32 457, i32 455], [2 x i32] [i32 460, i32 458], [2 x i32] [i32 477, i32 398], [2 x i32] [i32 496, i32 496], [2 x i32] [i32 499, i32 497], [2 x i32] [i32 501, i32 500], [2 x i32] [i32 545, i32 545], [2 x i32] [i32 572, i32 571], [2 x i32] [i32 578, i32 577], [2 x i32] [i32 592, i32 11375], [2 x i32] [i32 593, i32 11373], [2 x i32] [i32 594, i32 11376], [2 x i32] [i32 595, i32 385], [2 x i32] [i32 596, i32 390], [2 x i32] [i32 597, i32 597], [2 x i32] [i32 600, i32 600], [2 x i32] [i32 601, i32 399], [2 x i32] [i32 602, i32 602], [2 x i32] [i32 603, i32 400], [2 x i32] [i32 604, i32 42923], [2 x i32] [i32 608, i32 403], [2 x i32] [i32 609, i32 42924], [2 x i32] [i32 610, i32 610], [2 x i32] [i32 611, i32 404], [2 x i32] [i32 612, i32 612], [2 x i32] [i32 613, i32 42893], [2 x i32] [i32 614, i32 42922], [2 x i32] [i32 615, i32 615], [2 x i32] [i32 616, i32 407], [2 x i32] [i32 617, i32 406], [2 x i32] [i32 618, i32 42926], [2 x i32] [i32 619, i32 11362], [2 x i32] [i32 620, i32 42925], [2 x i32] [i32 623, i32 412], [2 x i32] [i32 624, i32 624], [2 x i32] [i32 625, i32 11374], [2 x i32] [i32 626, i32 413], [2 x i32] [i32 629, i32 415], [2 x i32] [i32 637, i32 11364], [2 x i32] [i32 640, i32 422], [2 x i32] [i32 643, i32 425], [2 x i32] [i32 647, i32 42929], [2 x i32] [i32 648, i32 430], [2 x i32] [i32 649, i32 580], [2 x i32] [i32 652, i32 581], [2 x i32] [i32 658, i32 439], [2 x i32] [i32 659, i32 659], [2 x i32] [i32 669, i32 42930], [2 x i32] [i32 670, i32 42928], [2 x i32] [i32 887, i32 886], [2 x i32] [i32 912, i32 912], [2 x i32] [i32 940, i32 902], [2 x i32] [i32 944, i32 944], [2 x i32] [i32 962, i32 931], [2 x i32] [i32 972, i32 908], [2 x i32] [i32 976, i32 914], [2 x i32] [i32 977, i32 920], [2 x i32] [i32 981, i32 934], [2 x i32] [i32 982, i32 928], [2 x i32] [i32 983, i32 975], [2 x i32] [i32 1008, i32 922], [2 x i32] [i32 1009, i32 929], [2 x i32] [i32 1010, i32 1017], [2 x i32] [i32 1011, i32 895], [2 x i32] [i32 1013, i32 917], [2 x i32] [i32 1016, i32 1015], [2 x i32] [i32 1019, i32 1018], [2 x i32] [i32 1020, i32 1020], [2 x i32] [i32 1231, i32 1216], [2 x i32] [i32 1415, i32 1415], [2 x i32] [i32 7296, i32 1042], [2 x i32] [i32 7297, i32 1044], [2 x i32] [i32 7298, i32 1054], [2 x i32] [i32 7301, i32 1058], [2 x i32] [i32 7302, i32 1066], [2 x i32] [i32 7303, i32 1122], [2 x i32] [i32 7304, i32 42570], [2 x i32] [i32 7545, i32 42877], [2 x i32] [i32 7549, i32 11363], [2 x i32] [i32 7835, i32 7776], [2 x i32] [i32 7839, i32 7839], [2 x i32] [i32 8016, i32 8016], [2 x i32] [i32 8017, i32 8025], [2 x i32] [i32 8018, i32 8018], [2 x i32] [i32 8019, i32 8027], [2 x i32] [i32 8020, i32 8020], [2 x i32] [i32 8021, i32 8029], [2 x i32] [i32 8022, i32 8022], [2 x i32] [i32 8023, i32 8031], [2 x i32] [i32 8114, i32 8114], [2 x i32] [i32 8115, i32 8124], [2 x i32] [i32 8116, i32 8116], [2 x i32] [i32 8126, i32 921], [2 x i32] [i32 8130, i32 8130], [2 x i32] [i32 8131, i32 8140], [2 x i32] [i32 8132, i32 8132], [2 x i32] [i32 8165, i32 8172], [2 x i32] [i32 8178, i32 8178], [2 x i32] [i32 8179, i32 8188], [2 x i32] [i32 8180, i32 8180], [2 x i32] [i32 8458, i32 8458], [2 x i32] [i32 8467, i32 8467], [2 x i32] [i32 8495, i32 8495], [2 x i32] [i32 8500, i32 8500], [2 x i32] [i32 8505, i32 8505], [2 x i32] [i32 8526, i32 8498], [2 x i32] [i32 8580, i32 8579], [2 x i32] [i32 11361, i32 11360], [2 x i32] [i32 11365, i32 570], [2 x i32] [i32 11366, i32 574], [2 x i32] [i32 11377, i32 11377], [2 x i32] [i32 11379, i32 11378], [2 x i32] [i32 11380, i32 11380], [2 x i32] [i32 11382, i32 11381], [2 x i32] [i32 11492, i32 11492], [2 x i32] [i32 11507, i32 11506], [2 x i32] [i32 11559, i32 4295], [2 x i32] [i32 11565, i32 4301], [2 x i32] [i32 42892, i32 42891], [2 x i32] [i32 42894, i32 42894], [2 x i32] [i32 43002, i32 43002], [2 x i32] [i32 43859, i32 42931], [2 x i32] [i32 119995, i32 119995], [2 x i32] [i32 120779, i32 120779]], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @islowerrune(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast i32* %2 to i8*
  br label %4

4:                                                ; preds = %17, %1
  %5 = phi i64 [ %19, %17 ], [ 106, %1 ]
  %6 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %7 = add i64 %6, %5
  %8 = lshr i64 %7, 1
  %9 = getelementptr [106 x [3 x i32]], [106 x [3 x i32]]* @ranges, i64 0, i64 %8
  %10 = bitcast [3 x i32]* %9 to i8*
  %11 = call i32 @rune2cmp(i8* nonnull %3, i8* %10) #2
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %8, 1
  br label %17

17:                                               ; preds = %15, %4
  %18 = phi i64 [ %16, %15 ], [ %6, %4 ]
  %19 = phi i64 [ %5, %15 ], [ %8, %4 ]
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %4, label %23

21:                                               ; preds = %13
  %22 = icmp eq [3 x i32]* %9, null
  br i1 %22, label %23, label %71

23:                                               ; preds = %17, %21
  br label %24

24:                                               ; preds = %23, %37
  %25 = phi i64 [ %39, %37 ], [ 33, %23 ]
  %26 = phi i64 [ %38, %37 ], [ 0, %23 ]
  %27 = add i64 %26, %25
  %28 = lshr i64 %27, 1
  %29 = getelementptr [33 x [2 x i32]], [33 x [2 x i32]]* @laces2, i64 0, i64 %28
  %30 = bitcast [2 x i32]* %29 to i8*
  %31 = call i32 @rune2cmp(i8* nonnull %3, i8* %30) #2
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %24
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %33
  %36 = add nuw i64 %28, 1
  br label %37

37:                                               ; preds = %35, %24
  %38 = phi i64 [ %36, %35 ], [ %26, %24 ]
  %39 = phi i64 [ %25, %35 ], [ %28, %24 ]
  %40 = icmp ult i64 %38, %39
  br i1 %40, label %24, label %43

41:                                               ; preds = %33
  %42 = icmp eq [2 x i32]* %29, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %37, %41
  br label %51

44:                                               ; preds = %41
  %45 = getelementptr inbounds [2 x i32], [2 x i32]* %29, i64 0, i64 0
  %46 = load i32, i32* %2, align 4
  %47 = load i32, i32* %45, align 8
  %48 = sub nsw i32 %46, %47
  %49 = and i32 %48, 1
  %50 = xor i32 %49, 1
  br label %71

51:                                               ; preds = %43, %64
  %52 = phi i64 [ %66, %64 ], [ 150, %43 ]
  %53 = phi i64 [ %65, %64 ], [ 0, %43 ]
  %54 = add i64 %53, %52
  %55 = lshr i64 %54, 1
  %56 = getelementptr [150 x [2 x i32]], [150 x [2 x i32]]* @singles, i64 0, i64 %55
  %57 = bitcast [2 x i32]* %56 to i8*
  %58 = call i32 @rune1cmp(i8* nonnull %3, i8* %57) #2
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %51
  %61 = icmp eq i32 %58, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %55, 1
  br label %64

64:                                               ; preds = %62, %51
  %65 = phi i64 [ %63, %62 ], [ %53, %51 ]
  %66 = phi i64 [ %52, %62 ], [ %55, %51 ]
  %67 = icmp ult i64 %65, %66
  br i1 %67, label %51, label %71

68:                                               ; preds = %60
  %69 = icmp ne [2 x i32]* %56, null
  %70 = zext i1 %69 to i32
  br label %71

71:                                               ; preds = %64, %68, %21, %44
  %72 = phi i32 [ %50, %44 ], [ 1, %21 ], [ %70, %68 ], [ 0, %64 ]
  ret i32 %72
}

declare i32 @rune2cmp(i8*, i8*) local_unnamed_addr #1

declare i32 @rune1cmp(i8*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @toupperrune(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = bitcast i32* %2 to i8*
  br label %4

4:                                                ; preds = %17, %1
  %5 = phi i64 [ %19, %17 ], [ 106, %1 ]
  %6 = phi i64 [ %18, %17 ], [ 0, %1 ]
  %7 = add i64 %6, %5
  %8 = lshr i64 %7, 1
  %9 = getelementptr [106 x [3 x i32]], [106 x [3 x i32]]* @ranges, i64 0, i64 %8
  %10 = bitcast [3 x i32]* %9 to i8*
  %11 = call i32 @rune2cmp(i8* nonnull %3, i8* %10) #2
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %4
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %13
  %16 = add nuw i64 %8, 1
  br label %17

17:                                               ; preds = %15, %4
  %18 = phi i64 [ %16, %15 ], [ %6, %4 ]
  %19 = phi i64 [ %5, %15 ], [ %8, %4 ]
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %4, label %23

21:                                               ; preds = %13
  %22 = icmp eq [3 x i32]* %9, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %17, %21
  br label %32

24:                                               ; preds = %21
  %25 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 0
  %26 = getelementptr [106 x [3 x i32]], [106 x [3 x i32]]* @ranges, i64 0, i64 %8, i64 2
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* %2, align 4
  %29 = load i32, i32* %25, align 4
  %30 = add i32 %28, %27
  %31 = sub i32 %30, %29
  br label %84

32:                                               ; preds = %23, %45
  %33 = phi i64 [ %47, %45 ], [ 33, %23 ]
  %34 = phi i64 [ %46, %45 ], [ 0, %23 ]
  %35 = add i64 %34, %33
  %36 = lshr i64 %35, 1
  %37 = getelementptr [33 x [2 x i32]], [33 x [2 x i32]]* @laces2, i64 0, i64 %36
  %38 = bitcast [2 x i32]* %37 to i8*
  %39 = call i32 @rune2cmp(i8* nonnull %3, i8* %38) #2
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %36, 1
  br label %45

45:                                               ; preds = %43, %32
  %46 = phi i64 [ %44, %43 ], [ %34, %32 ]
  %47 = phi i64 [ %33, %43 ], [ %36, %32 ]
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %32, label %51

49:                                               ; preds = %41
  %50 = icmp eq [2 x i32]* %37, null
  br i1 %50, label %51, label %52

51:                                               ; preds = %45, %49
  br label %60

52:                                               ; preds = %49
  %53 = getelementptr inbounds [2 x i32], [2 x i32]* %37, i64 0, i64 0
  %54 = load i32, i32* %2, align 4
  %55 = load i32, i32* %53, align 8
  %56 = sub nsw i32 %54, %55
  %57 = and i32 %56, 1
  %58 = add i32 %54, -1
  %59 = add i32 %58, %57
  br label %84

60:                                               ; preds = %51, %73
  %61 = phi i64 [ %75, %73 ], [ 150, %51 ]
  %62 = phi i64 [ %74, %73 ], [ 0, %51 ]
  %63 = add i64 %62, %61
  %64 = lshr i64 %63, 1
  %65 = getelementptr [150 x [2 x i32]], [150 x [2 x i32]]* @singles, i64 0, i64 %64
  %66 = bitcast [2 x i32]* %65 to i8*
  %67 = call i32 @rune1cmp(i8* nonnull %3, i8* %66) #2
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %60
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %69
  %72 = add nuw i64 %64, 1
  br label %73

73:                                               ; preds = %71, %60
  %74 = phi i64 [ %72, %71 ], [ %62, %60 ]
  %75 = phi i64 [ %61, %71 ], [ %64, %60 ]
  %76 = icmp ult i64 %74, %75
  br i1 %76, label %60, label %82

77:                                               ; preds = %69
  %78 = icmp eq [2 x i32]* %65, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  %80 = getelementptr [150 x [2 x i32]], [150 x [2 x i32]]* @singles, i64 0, i64 %64, i64 1
  %81 = load i32, i32* %80, align 4
  br label %84

82:                                               ; preds = %73, %77
  %83 = load i32, i32* %2, align 4
  br label %84

84:                                               ; preds = %82, %79, %52, %24
  %85 = phi i32 [ %31, %24 ], [ %59, %52 ], [ %81, %79 ], [ %83, %82 ]
  ret i32 %85
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
