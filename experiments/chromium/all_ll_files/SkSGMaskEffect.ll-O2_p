; ModuleID = '../../third_party/skia/modules/sksg/src/SkSGMaskEffect.cpp'
source_filename = "../../third_party/skia/modules/sksg/src/SkSGMaskEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.11, %class.sk_sp.12, %class.sk_sp.12, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.11 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.12 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkPaint = type <{ %class.sk_sp.13, %class.sk_sp.12, %class.sk_sp.14, %class.sk_sp.11, %class.sk_sp.15, %struct.SkRGBA4f, float, float, %union.anon.16, [4 x i8] }>
%class.sk_sp.13 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.14 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.15 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.16 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.sksg::MaskEffect" = type <{ %"class.sksg::EffectNode", %class.sk_sp, i32, [4 x i8] }>
%"class.sksg::EffectNode" = type { %"class.sksg::RenderNode.base", %class.sk_sp }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.sk_sp = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp.1 = type { %"class.sksg::Node"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.2, [384 x i64], %class.sk_sp.3, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.5" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.2 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.3 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN4sksg10MaskEffectE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sksg::MaskEffect"*)* @_ZN4sksg10MaskEffectD2Ev to i8*), i8* bitcast (void (%"class.sksg::MaskEffect"*)* @_ZN4sksg10MaskEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.sksg::MaskEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN4sksg10MaskEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.sksg::MaskEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.sksg::MaskEffect"*, %struct.SkPoint*)* @_ZNK4sksg10MaskEffect8onNodeAtERK7SkPoint to i8*)] }, align 8
@__const._ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.mask_render_context = private unnamed_addr constant %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.11 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.12 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.12 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, align 8
@__const._ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.content_layer_paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.13 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.12 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.14 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.11 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.15 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.16 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN4sksg10MaskEffectC1E5sk_spINS_10RenderNodeEES3_NS0_4ModeE = hidden unnamed_addr alias void (%"class.sksg::MaskEffect"*, %class.sk_sp*, %class.sk_sp*, i32), void (%"class.sksg::MaskEffect"*, %class.sk_sp*, %class.sk_sp*, i32)* @_ZN4sksg10MaskEffectC2E5sk_spINS_10RenderNodeEES3_NS0_4ModeE
@_ZN4sksg10MaskEffectD1Ev = hidden unnamed_addr alias void (%"class.sksg::MaskEffect"*), void (%"class.sksg::MaskEffect"*)* @_ZN4sksg10MaskEffectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10MaskEffectC2E5sk_spINS_10RenderNodeEES3_NS0_4ModeE(%"class.sksg::MaskEffect"*, %class.sk_sp* nocapture, %class.sk_sp* nocapture, i32) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp, align 8
  %6 = alloca %class.sk_sp.1, align 8
  %7 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %8, align 8
  %11 = bitcast %class.sk_sp* %5 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"* %7, %class.sk_sp* nonnull %5, i32 0) #5
  %12 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %5, i64 0, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #5
  br label %25

25:                                               ; preds = %4, %15, %19
  %26 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10MaskEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %2, i64 0, i32 0
  %29 = bitcast %class.sk_sp* %2 to i64*
  %30 = load i64, i64* %29, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %28, align 8
  %31 = bitcast %class.sk_sp* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 2
  store i32 %3, i32* %32, align 8
  %33 = bitcast %"class.sksg::MaskEffect"* %0 to %"class.sksg::Node"*
  %34 = bitcast %class.sk_sp.1* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #5
  %35 = inttoptr i64 %30 to %"class.sksg::RenderNode"*
  %36 = icmp eq i64 %30, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %25
  %38 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %35, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 1 monotonic
  br label %40

40:                                               ; preds = %25, %37
  %41 = bitcast %class.sk_sp.1* %6 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %35, %"class.sksg::RenderNode"** %41, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %33, %class.sk_sp.1* nonnull dereferenceable(8) %6) #5
  %42 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %6, i64 0, i32 0
  %43 = load %"class.sksg::Node"*, %"class.sksg::Node"** %42, align 8
  %44 = icmp eq %"class.sksg::Node"* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %"class.sksg::Node"* %43 to %class.SkRefCntBase*
  %51 = bitcast %"class.sksg::Node"* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #5
  br label %55

55:                                               ; preds = %40, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #5
  ret void
}

declare void @_ZN4sksg10EffectNodeC2E5sk_spINS_10RenderNodeEEj(%"class.sksg::EffectNode"*, %class.sk_sp*, i32) unnamed_addr #1

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.1* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10MaskEffectD2Ev(%"class.sksg::MaskEffect"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10MaskEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::MaskEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %1, %9
  %13 = bitcast %class.sk_sp.1* %2 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %7, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.1* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %12, %17, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %41) #5
  ret void
}

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.1* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4sksg10MaskEffectD0Ev(%"class.sksg::MaskEffect"*) unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.1, align 8
  %3 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN4sksg10MaskEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.sksg::MaskEffect"* %0 to %"class.sksg::Node"*
  %5 = bitcast %class.sk_sp.1* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  %6 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %8 = icmp eq %"class.sksg::RenderNode"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %1
  %13 = bitcast %class.sk_sp.1* %2 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %7, %"class.sksg::RenderNode"** %13, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %4, %class.sk_sp.1* nonnull dereferenceable(8) %2) #5
  %14 = getelementptr inbounds %class.sk_sp.1, %class.sk_sp.1* %2, i64 0, i32 0
  %15 = load %"class.sksg::Node"*, %"class.sksg::Node"** %14, align 8
  %16 = icmp eq %"class.sksg::Node"* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %"class.sksg::Node"* %15 to %class.SkRefCntBase*
  %23 = bitcast %"class.sksg::Node"* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  call void %26(%class.SkRefCntBase* nonnull %22) #5
  br label %27

27:                                               ; preds = %21, %17, %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %28 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %6, align 8
  %29 = icmp eq %"class.sksg::RenderNode"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %"class.sksg::RenderNode"* %28 to %class.SkRefCntBase*
  %36 = bitcast %"class.sksg::RenderNode"* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #5
  br label %40

40:                                               ; preds = %27, %30, %34
  %41 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  call void @_ZN4sksg10EffectNodeD2Ev(%"class.sksg::EffectNode"* %41) #5
  %42 = bitcast %"class.sksg::MaskEffect"* %0 to i8*
  call void @_ZdlPv(i8* %42) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::MaskEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPaint, align 8
  %5 = alloca %class.SkMatrix, align 4
  %6 = alloca %"struct.sksg::RenderNode::RenderContext", align 8
  %7 = alloca %class.sk_sp.11, align 8
  %8 = alloca %class.SkPaint, align 8
  %9 = icmp eq %class.SkCanvas* %1, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #5
  br label %12

12:                                               ; preds = %3, %10
  %13 = phi i32 [ 0, %3 ], [ %11, %10 ]
  %14 = bitcast %class.SkPaint* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.content_layer_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %4) #5
  %15 = icmp eq %"struct.sksg::RenderNode::RenderContext"* %2, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %17) #5
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %5, %class.SkCanvas* %1) #5
  call void @_ZNK4sksg10RenderNode13RenderContext13modulatePaintERK8SkMatrixP7SkPaintb(%"struct.sksg::RenderNode::RenderContext"* nonnull %2, %class.SkMatrix* nonnull dereferenceable(40) %5, %class.SkPaint* nonnull %4, i1 zeroext false) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %17) #5
  br label %18

18:                                               ; preds = %12, %16
  %19 = bitcast %"struct.sksg::RenderNode::RenderContext"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %19) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%"struct.sksg::RenderNode::RenderContext"* @__const._ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.mask_render_context to i8*), i64 112, i1 false)
  %20 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #5
  %21 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %22 = bitcast %class.SkMatrix* %20 to i8*
  %23 = bitcast %class.SkMatrix* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 4 %23, i64 40, i1 false) #5
  %24 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 4
  %25 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #5
  %26 = bitcast %class.SkMatrix* %24 to i8*
  %27 = bitcast %class.SkMatrix* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 40, i1 false) #5
  %28 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 5
  store float 1.000000e+00, float* %28, align 8
  %29 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 6
  store i32 3, i32* %29, align 4
  %30 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %67, label %34

34:                                               ; preds = %18
  %35 = bitcast %class.sk_sp.11* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  call void @_ZN17SkLumaColorFilter4MakeEv(%class.sk_sp.11* nonnull sret %7) #5
  %36 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %7, i64 0, i32 0
  %37 = bitcast %class.sk_sp.11* %7 to i64*
  %38 = load i64, i64* %37, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %36, align 8
  %39 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 0, i32 0
  %40 = load %class.SkColorFilter*, %class.SkColorFilter** %39, align 8
  %41 = bitcast %"struct.sksg::RenderNode::RenderContext"* %6 to i64*
  store i64 %38, i64* %41, align 8
  %42 = icmp eq %class.SkColorFilter* %40, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorFilter* %40 to %class.SkRefCntBase*
  %49 = bitcast %class.SkColorFilter* %40 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #5
  br label %53

53:                                               ; preds = %34, %43, %47
  %54 = load %class.SkColorFilter*, %class.SkColorFilter** %36, align 8
  %55 = icmp eq %class.SkColorFilter* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 -1 acq_rel
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %66

60:                                               ; preds = %56
  %61 = bitcast %class.SkColorFilter* %54 to %class.SkRefCntBase*
  %62 = bitcast %class.SkColorFilter* %54 to void (%class.SkRefCntBase*)***
  %63 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, i64 2
  %65 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %64, align 8
  call void %65(%class.SkRefCntBase* nonnull %61) #5
  br label %66

66:                                               ; preds = %53, %56, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  br label %67

67:                                               ; preds = %18, %66
  %68 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %69 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* %68, %class.SkPaint* nonnull %4) #5
  %70 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1, i32 0
  %71 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %70, align 8
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %71, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* nonnull %6) #5
  %72 = bitcast %class.SkPaint* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %72) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK4sksg10MaskEffect8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE.content_layer_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %8) #5
  %73 = load i32, i32* %30, align 8
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 5120, i32 7168
  %77 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %8, i64 0, i32 8, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, -261121
  %80 = or i32 %76, %79
  store i32 %80, i32* %77, align 8
  %81 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* %68, %class.SkPaint* nonnull %8) #5
  %82 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  call void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"* %82, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* null) #5
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %8) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %72) #5
  %83 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 2, i32 0
  %84 = load %class.SkShader*, %class.SkShader** %83, align 8
  %85 = icmp eq %class.SkShader* %84, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %67
  %87 = getelementptr inbounds %class.SkShader, %class.SkShader* %84, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = atomicrmw add i32* %87, i32 -1 acq_rel
  %89 = icmp eq i32 %88, 1
  br i1 %89, label %90, label %96

90:                                               ; preds = %86
  %91 = bitcast %class.SkShader* %84 to %class.SkRefCntBase*
  %92 = bitcast %class.SkShader* %84 to void (%class.SkRefCntBase*)***
  %93 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, i64 2
  %95 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %94, align 8
  call void %95(%class.SkRefCntBase* nonnull %91) #5
  br label %96

96:                                               ; preds = %90, %86, %67
  %97 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 1, i32 0
  %98 = load %class.SkShader*, %class.SkShader** %97, align 8
  %99 = icmp eq %class.SkShader* %98, null
  br i1 %99, label %110, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %class.SkShader, %class.SkShader* %98, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw add i32* %101, i32 -1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = bitcast %class.SkShader* %98 to %class.SkRefCntBase*
  %106 = bitcast %class.SkShader* %98 to void (%class.SkRefCntBase*)***
  %107 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %106, align 8
  %108 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, i64 2
  %109 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, align 8
  call void %109(%class.SkRefCntBase* nonnull %105) #5
  br label %110

110:                                              ; preds = %104, %100, %96
  %111 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %6, i64 0, i32 0, i32 0
  %112 = load %class.SkColorFilter*, %class.SkColorFilter** %111, align 8
  %113 = icmp eq %class.SkColorFilter* %112, null
  br i1 %113, label %124, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %112, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = atomicrmw add i32* %115, i32 -1 acq_rel
  %117 = icmp eq i32 %116, 1
  br i1 %117, label %118, label %124

118:                                              ; preds = %114
  %119 = bitcast %class.SkColorFilter* %112 to %class.SkRefCntBase*
  %120 = bitcast %class.SkColorFilter* %112 to void (%class.SkRefCntBase*)***
  %121 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %120, align 8
  %122 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, i64 2
  %123 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %122, align 8
  call void %123(%class.SkRefCntBase* nonnull %119) #5
  br label %124

124:                                              ; preds = %110, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %19) #5
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #5
  br i1 %9, label %126, label %125

125:                                              ; preds = %124
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %13) #5
  br label %126

126:                                              ; preds = %124, %125
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZNK4sksg10RenderNode13RenderContext13modulatePaintERK8SkMatrixP7SkPaintb(%"struct.sksg::RenderNode::RenderContext"*, %class.SkMatrix* dereferenceable(40), %class.SkPaint*, i1 zeroext) local_unnamed_addr #1

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #1

declare void @_ZN17SkLumaColorFilter4MakeEv(%class.sk_sp.11* sret) local_unnamed_addr #1

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #1

declare void @_ZNK4sksg10EffectNode8onRenderEP8SkCanvasPKNS_10RenderNode13RenderContextE(%"class.sksg::EffectNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sksg::RenderNode"* @_ZNK4sksg10MaskEffect8onNodeAtERK7SkPoint(%"class.sksg::MaskEffect"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %3, align 8
  %5 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"* %4, %struct.SkPoint* dereferenceable(8) %1) #5
  %6 = icmp ne %"class.sksg::RenderNode"* %5, null
  %7 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp ne i32 %9, 0
  %11 = xor i1 %6, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  %14 = tail call %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"* %13, %struct.SkPoint* dereferenceable(8) %1) #5
  br label %15

15:                                               ; preds = %2, %12
  %16 = phi %"class.sksg::RenderNode"* [ %14, %12 ], [ null, %2 ]
  ret %"class.sksg::RenderNode"* %16
}

declare %"class.sksg::RenderNode"* @_ZNK4sksg10RenderNode6nodeAtERK7SkPoint(%"class.sksg::RenderNode"*, %struct.SkPoint* dereferenceable(8)) local_unnamed_addr #1

declare %"class.sksg::RenderNode"* @_ZNK4sksg10EffectNode8onNodeAtERK7SkPoint(%"class.sksg::EffectNode"*, %struct.SkPoint* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN4sksg10MaskEffect12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::MaskEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca %struct.SkRect, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 1, i32 0
  %8 = bitcast %"class.sksg::RenderNode"** %7 to %"class.sksg::Node"**
  %9 = bitcast %struct.SkRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 -1, i64 16, i1 false)
  %10 = load %"class.sksg::Node"*, %"class.sksg::Node"** %8, align 8
  %11 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %10, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %12 = bitcast %struct.SkRect* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %6, i8* align 4 %12, i64 16, i1 false)
  %13 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1, i64 0
  %15 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 0
  %16 = tail call { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"* %15, %"class.sksg::InvalidationController"* %1, %class.SkMatrix* dereferenceable(40) %2) #5
  %17 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  %18 = extractvalue { <2 x float>, <2 x float> } %16, 0
  store <2 x float> %18, <2 x float>* %17, align 8
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  %20 = extractvalue { <2 x float>, <2 x float> } %16, 1
  store <2 x float> %20, <2 x float>* %19, align 8
  %21 = getelementptr inbounds %"class.sksg::MaskEffect", %"class.sksg::MaskEffect"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %32

25:                                               ; preds = %3
  %26 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRect*
  %27 = call zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect* nonnull %26, %struct.SkRect* nonnull dereferenceable(16) %4) #5
  br i1 %27, label %28, label %32

28:                                               ; preds = %25
  %29 = load <2 x float>, <2 x float>* %17, align 8
  %30 = bitcast float* %14 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 8
  br label %32

32:                                               ; preds = %28, %3, %25
  %33 = phi <2 x float> [ zeroinitializer, %25 ], [ %29, %28 ], [ %18, %3 ]
  %34 = phi <2 x float> [ zeroinitializer, %25 ], [ %31, %28 ], [ %20, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  %35 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %33, 0
  %36 = insertvalue { <2 x float>, <2 x float> } %35, <2 x float> %34, 1
  ret { <2 x float>, <2 x float> } %36
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN4sksg10EffectNode12onRevalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::EffectNode"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

declare zeroext i1 @_ZN6SkRect9intersectERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #5
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #1

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
