; ModuleID = '../../third_party/blink/renderer/core/script/module_record_resolver_impl.cc'
source_filename = "../../third_party/blink/renderer/core/script/module_record_resolver_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.21", i32, [4 x i8], %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.154", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.137", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.57" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.117", %"class.std::__1::__compressed_pair.124", %"class.std::__1::__compressed_pair.129", %"class.std::__1::__compressed_pair.131", [4 x i8] }>
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { i64 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { float }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.140", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163" }
%"class.WTF::VectorBufferBase.163" = type { %"struct.std::__1::pair.164"*, i32, i32 }
%"struct.std::__1::pair.164" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.205" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.299" }
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__cxx_atomic_impl.302" }
%"struct.std::__1::__cxx_atomic_impl.302" = type { %"struct.std::__1::__cxx_atomic_base_impl.303" }
%"struct.std::__1::__cxx_atomic_base_impl.303" = type { i32 }
%"class.blink::ModuleRecordResolverImpl" = type { %"class.blink::ModuleRecordResolver", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::HeapHashMap", %"class.blink::Member.13" }
%"class.blink::ModuleRecordResolver" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::Member", %"class.blink::Member.5" }
%"class.blink::Member" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::BoxedV8Module"* }
%"class.blink::BoxedV8Module" = type <{ %"class.blink::TraceWrapperV8Reference", i32, [4 x i8] }>
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::ModuleScript"* }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::ModuleScript" = type { %"class.blink::Script", %"class.blink::Member.13", %"class.blink::TraceWrapperV8Reference", %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference", %"class.WTF::HashMap.200", %"class.blink::KURL" }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias", [6 x i8] }>
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.10" }
%"class.WTF::HashTable.10" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.17", %class.scoped_refptr.20 }
%"class.blink::TraceWrapperV8Reference.17" = type { %"class.v8::TracedReference.18" }
%"class.v8::TracedReference.18" = type { %"class.v8::BasicTracedReference.19" }
%"class.v8::BasicTracedReference.19" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.20 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::HashMap.200" = type { %"class.WTF::HashTable.201" }
%"class.WTF::HashTable.201" = type <{ %"struct.WTF::KeyValuePair.204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.204" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.v8::Module" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.212, %"class.blink::Member.213", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.212 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.213" = type { %"class.blink::MemberBase.214" }
%"class.blink::MemberBase.214" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.217", %"class.blink::HeapHashMap.230", %"class.std::__1::unique_ptr.240", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.252", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.255" }
%"class.blink::HeapHashMap.217" = type { %"class.WTF::HashMap.220" }
%"class.WTF::HashMap.220" = type { %"class.WTF::HashTable.221" }
%"class.WTF::HashTable.221" = type <{ %"struct.WTF::KeyValuePair.223"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.223" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.227" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::TraceWrapperV8Reference.227" = type { %"class.v8::TracedReference.228" }
%"class.v8::TracedReference.228" = type { %"class.v8::BasicTracedReference.229" }
%"class.v8::BasicTracedReference.229" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::HeapHashMap.230" = type { %"class.WTF::HashMap.233" }
%"class.WTF::HashMap.233" = type { %"class.WTF::HashTable.234" }
%"class.WTF::HashTable.234" = type <{ %"struct.WTF::KeyValuePair.236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.236" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.237" }
%"class.blink::TraceWrapperV8Reference.237" = type { %"class.v8::TracedReference.238" }
%"class.v8::TracedReference.238" = type { %"class.v8::BasicTracedReference.239" }
%"class.v8::BasicTracedReference.239" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.243" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.252" = type { %"class.v8::Persistent.253" }
%"class.v8::Persistent.253" = type { %"class.v8::PersistentBase.254" }
%"class.v8::PersistentBase.254" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.255" = type { %"class.WTF::HashMap.258" }
%"class.WTF::HashMap.258" = type { %"class.WTF::HashTable.259" }
%"class.WTF::HashTable.259" = type <{ %"struct.WTF::KeyValuePair.261"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.261" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.262" }
%"class.blink::Persistent.262" = type { %"class.blink::PersistentBase.263" }
%"class.blink::PersistentBase.263" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.264" }
%"class.base::StrongAlias.264" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.v8::internal::Isolate" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.blink::ModuleRequest" = type { %"class.WTF::String", %"class.WTF::TextPosition", %"class.WTF::Vector.270" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"struct.blink::ImportAssertion"*, i32, i32 }
%"struct.blink::ImportAssertion" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.17" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.blink::ExecutionContext" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink24ModuleRecordResolverImplD2Ev = comdat any

$_ZN5blink24ModuleRecordResolverImplD0Ev = comdat any

$_ZThn8_N5blink24ModuleRecordResolverImplD1Ev = comdat any

$_ZThn8_N5blink24ModuleRecordResolverImplD0Ev = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZZN7logging15CheckOpValueStrIN3WTF29HashTableConstIteratorAdapterINS1_9HashTableIN5blink6MemberINS4_13BoxedV8ModuleEEENS1_12KeyValuePairIS7_NS5_IKNS4_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS4_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEESC_EEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINSN_14remove_pointerISP_E4typeEEE5valueEPcE4typeESR_ENUlRNSN_13basic_ostreamIcNSN_11char_traitsIcEEEEPKvE_8__invokeES12_S14_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_13BoxedV8ModuleEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_13BoxedV8ModuleEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS7_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS9_jSJ_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS1_12KeyValuePairIS5_NS3_IKNS_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13BoxedV8ModuleEEENS_12KeyValuePairIS6_NS4_IKNS3_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS3_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13BoxedV8ModuleEEENS4_IKNS_12ModuleScriptEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS9_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZNK3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [41 x i8] c"it != record_to_module_script_map_.end()\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/blink/renderer/core/script/module_record_resolver_impl.cc\00", align 1
@.str.2 = private unnamed_addr constant [72 x i8] c"Failed to find ModuleScript corresponding to the record.[[HostDefined]]\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"it->value\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"child_module_type != ModuleType::kInvalid\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"!record.IsEmpty()\00", align 1
@_ZTVN5blink24ModuleRecordResolverImplE = hidden unnamed_addr constant { [10 x i8*], [8 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZN5blink24ModuleRecordResolverImplD2Ev to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZN5blink24ModuleRecordResolverImplD0Ev to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink24ModuleRecordResolverImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::ModuleScript"*)* @_ZN5blink24ModuleRecordResolverImpl20RegisterModuleScriptEPKNS_12ModuleScriptE to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::ModuleScript"*)* @_ZN5blink24ModuleRecordResolverImpl22UnregisterModuleScriptEPKNS_12ModuleScriptE to i8*), i8* bitcast (%"class.blink::ModuleScript"* (%"class.blink::ModuleRecordResolverImpl"*, %"class.v8::Module"*)* @_ZNK5blink24ModuleRecordResolverImpl31GetModuleScriptFromModuleRecordEN2v85LocalINS1_6ModuleEEE to i8*), i8* bitcast (%"class.v8::Module"* (%"class.blink::ModuleRecordResolverImpl"*, %"struct.blink::ModuleRequest"*, %"class.v8::Module"*, %"class.blink::ExceptionState"*)* @_ZN5blink24ModuleRecordResolverImpl7ResolveERKNS_13ModuleRequestEN2v85LocalINS4_6ModuleEEERNS_14ExceptionStateE to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZN5blink24ModuleRecordResolverImpl16ContextDestroyedEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink24ModuleRecordResolverImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZThn8_N5blink24ModuleRecordResolverImplD1Ev to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZThn8_N5blink24ModuleRecordResolverImplD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::ModuleRecordResolverImpl"*)* @_ZThn8_N5blink24ModuleRecordResolverImpl16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [28 x i8] c"iterator representing <end>\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"iterator pointing to \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BoxedV8ModuleEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BoxedV8Module]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_13BoxedV8ModuleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.12 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/bindings/core/v8/boxed_v8_module.h\00", section "llvm.metadata"
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.14 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.15 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.17 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.18 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS6_NS4_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [503 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::BoxedV8Module>, WTF::KeyValuePair<blink::Member<blink::BoxedV8Module>, blink::Member<const blink::ModuleScript> >, WTF::KeyValuePairKeyExtractor, blink::BoxedV8ModuleHash, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::BoxedV8Module> >, WTF::HashTraits<blink::Member<const blink::ModuleScript> > >, WTF::HashTraits<blink::Member<blink::BoxedV8Module> >, blink::HeapAllocator> >]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ModuleRecordResolverImpl20RegisterModuleScriptEPKNS_12ModuleScriptE(%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ModuleScript"*, align 8
  %4 = alloca %"class.blink::BoxedV8Module"*, align 8
  store %"class.blink::ModuleScript"* %1, %"class.blink::ModuleScript"** %3, align 8
  %5 = tail call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %1) #7
  %6 = icmp eq %"class.v8::Module"* %5, null
  br i1 %6, label %51, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %8, align 8
  %10 = bitcast %"class.blink::Modulator"* %9 to %"class.blink::ScriptState"* (%"class.blink::Modulator"*)***
  %11 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)**, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %11, i64 6
  %13 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %12, align 8
  %14 = tail call %"class.blink::ScriptState"* %13(%"class.blink::Modulator"* %9) #7
  %15 = bitcast %"class.blink::ScriptState"* %14 to %"class.v8::internal::Isolate"**
  %16 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %15, align 8
  %17 = bitcast %"class.blink::BoxedV8Module"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  store %"class.blink::BoxedV8Module"* inttoptr (i64 -6148914691236517206 to %"class.blink::BoxedV8Module"*), %"class.blink::BoxedV8Module"** %4, align 8
  %18 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BoxedV8ModuleEEEPhm(i64 16) #7
  %19 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %20 = bitcast i8* %19 to i64**
  store i64* null, i64** %20, align 8
  %21 = bitcast %"class.v8::Module"* %5 to i64*
  %22 = bitcast i8* %19 to i64*
  %23 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %16, i64* nonnull %21, i64* %22, i1 zeroext false) #7
  %24 = ptrtoint i64* %23 to i64
  store atomic i64 %24, i64* %22 monotonic, align 8
  %25 = bitcast i8* %19 to %"class.blink::TraceWrapperV8Reference.17"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.17"* dereferenceable(8) %25) #7
  %26 = getelementptr inbounds i8, i8* %18, i64 8
  %27 = bitcast i8* %26 to i32*
  %28 = tail call i32 @_ZNK2v86Module15GetIdentityHashEv(%"class.v8::Module"* nonnull %5) #7
  store i32 %28, i32* %27, align 8
  %29 = getelementptr inbounds i8, i8* %18, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = bitcast %"class.blink::BoxedV8Module"** %4 to i8**
  store i8* %18, i8** %33, align 8
  %34 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %35 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS7_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"* %34, %"class.blink::BoxedV8Module"** nonnull dereferenceable(8) %4, %"class.blink::ModuleScript"** nonnull dereferenceable(8) %3) #7
  %36 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %35, 1
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %50

39:                                               ; preds = %7
  %40 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %35, 0
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %40, i64 0, i32 1
  %42 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %3, align 8
  %43 = ptrtoint %"class.blink::ModuleScript"* %42 to i64
  %44 = bitcast %"class.blink::Member.5"* %41 to i64*
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::ModuleScript"* %42 to i8*
  %49 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #7
  br label %50

50:                                               ; preds = %7, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %51

51:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ModuleRecordResolverImpl22UnregisterModuleScriptEPKNS_12ModuleScriptE(%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::ModuleScript"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %1) #7
  %4 = icmp eq %"class.v8::Module"* %3, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %6, align 8
  %8 = bitcast %"class.blink::Modulator"* %7 to %"class.blink::ScriptState"* (%"class.blink::Modulator"*)***
  %9 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)**, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %9, i64 6
  %11 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %10, align 8
  %12 = tail call %"class.blink::ScriptState"* %11(%"class.blink::Modulator"* %7) #7
  %13 = bitcast %"class.blink::ScriptState"* %12 to %"class.v8::internal::Isolate"**
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BoxedV8ModuleEEEPhm(i64 16) #7
  %16 = bitcast i8* %15 to %"class.blink::BoxedV8Module"*
  %17 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %18 = bitcast i8* %17 to i64**
  store i64* null, i64** %18, align 8
  %19 = bitcast %"class.v8::Module"* %3 to i64*
  %20 = bitcast i8* %17 to i64*
  %21 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %14, i64* nonnull %19, i64* %20, i1 zeroext false) #7
  %22 = ptrtoint i64* %21 to i64
  store atomic i64 %22, i64* %20 monotonic, align 8
  %23 = bitcast i8* %17 to %"class.blink::TraceWrapperV8Reference.17"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.17"* dereferenceable(8) %23) #7
  %24 = getelementptr inbounds i8, i8* %15, i64 8
  %25 = bitcast i8* %24 to i32*
  %26 = tail call i32 @_ZNK2v86Module15GetIdentityHashEv(%"class.v8::Module"* nonnull %3) #7
  store i32 %26, i32* %25, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %31, i64 0, i32 0
  %33 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %32, %"class.blink::BoxedV8Module"* %16) #7
  %34 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %33, 0
  %35 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %31, i64 0, i32 0, i32 0
  %36 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %39
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %34
  br i1 %41, label %43, label %42

42:                                               ; preds = %5
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable"* %32, %"struct.WTF::KeyValuePair"* %34) #7
  br label %43

43:                                               ; preds = %42, %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ModuleScript"* @_ZNK5blink24ModuleRecordResolverImpl31GetModuleScriptFromModuleRecordEN2v85LocalINS1_6ModuleEEE(%"class.blink::ModuleRecordResolverImpl"*, %"class.v8::Module"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"struct.WTF::HashTableConstIteratorAdapter", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"struct.WTF::HashTableConstIteratorAdapter", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %10 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %9, align 8
  %11 = bitcast %"class.blink::Modulator"* %10 to %"class.blink::ScriptState"* (%"class.blink::Modulator"*)***
  %12 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)**, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %12, i64 6
  %14 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %13, align 8
  %15 = tail call %"class.blink::ScriptState"* %14(%"class.blink::Modulator"* %10) #7
  %16 = bitcast %"class.blink::ScriptState"* %15 to %"class.v8::internal::Isolate"**
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8
  %18 = bitcast %"struct.WTF::HashTableConstIteratorAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #7
  %19 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %4, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %4, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0
  %22 = bitcast %"struct.WTF::HashTableConstIteratorAdapter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_13BoxedV8ModuleEEEPhm(i64 16) #7
  %24 = bitcast i8* %23 to %"class.blink::BoxedV8Module"*
  %25 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %23, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %26 = bitcast i8* %25 to i64**
  store i64* null, i64** %26, align 8
  %27 = icmp eq %"class.v8::Module"* %1, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %2
  %29 = bitcast %"class.v8::Module"* %1 to i64*
  %30 = bitcast i8* %25 to i64*
  %31 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %17, i64* nonnull %29, i64* %30, i1 zeroext false) #7
  %32 = ptrtoint i64* %31 to i64
  store atomic i64 %32, i64* %30 monotonic, align 8
  br label %33

33:                                               ; preds = %2, %28
  %34 = bitcast i8* %25 to %"class.blink::TraceWrapperV8Reference.17"*
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.17"* dereferenceable(8) %34) #7
  %35 = getelementptr inbounds i8, i8* %23, i64 8
  %36 = bitcast i8* %35 to i32*
  %37 = tail call i32 @_ZNK2v86Module15GetIdentityHashEv(%"class.v8::Module"* %1) #7
  store i32 %37, i32* %36, align 8
  %38 = getelementptr inbounds i8, i8* %23, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %21, i64 0, i32 0
  %43 = tail call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"* %42, %"class.blink::BoxedV8Module"* %24) #7
  %44 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %43, 0
  store %"struct.WTF::KeyValuePair"* %44, %"struct.WTF::KeyValuePair"** %19, align 8
  %45 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %43, 1
  store %"struct.WTF::KeyValuePair"* %45, %"struct.WTF::KeyValuePair"** %20, align 8
  %46 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %47, align 8
  %48 = bitcast %"struct.WTF::HashTableConstIteratorAdapter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #7
  %49 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %21, i64 0, i32 0, i32 0
  %50 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %53
  %55 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %6, i64 0, i32 0, i32 0
  store %"struct.WTF::KeyValuePair"* %54, %"struct.WTF::KeyValuePair"** %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::HashTableConstIteratorAdapter", %"struct.WTF::HashTableConstIteratorAdapter"* %6, i64 0, i32 0, i32 1
  store %"struct.WTF::KeyValuePair"* %54, %"struct.WTF::KeyValuePair"** %56, align 8
  %57 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  %58 = icmp eq %"struct.WTF::KeyValuePair"* %44, %54
  br i1 %58, label %60, label %59

59:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* null, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7
  br label %70

60:                                               ; preds = %33
  %61 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %18, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3WTF29HashTableConstIteratorAdapterINS1_9HashTableIN5blink6MemberINS4_13BoxedV8ModuleEEENS1_12KeyValuePairIS7_NS5_IKNS4_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS4_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEESC_EEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINSN_14remove_pointerISP_E4typeEEE5valueEPcE4typeESR_ENUlRNSN_13basic_ostreamIcNSN_11char_traitsIcEEEEPKvE_8__invokeES12_S14_) #7
  %62 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %48, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIN3WTF29HashTableConstIteratorAdapterINS1_9HashTableIN5blink6MemberINS4_13BoxedV8ModuleEEENS1_12KeyValuePairIS7_NS5_IKNS4_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS4_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEESC_EEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINSN_14remove_pointerISP_E4typeEEE5valueEPcE4typeESR_ENUlRNSN_13basic_ostreamIcNSN_11char_traitsIcEEEEPKvE_8__invokeES12_S14_) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i8* %61, i8* %62) #7
  %63 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  store i8* %64, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #7
  %65 = icmp eq i8* %64, null
  br i1 %65, label %70, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 53, %"class.logging::CheckOpResult"* nonnull %5) #7
  %68 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %68, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.2, i64 0, i64 0), i64 71) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #7
  br label %70

70:                                               ; preds = %59, %60, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  %71 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %72, align 8
  %74 = icmp eq %"class.blink::ModuleScript"* %73, null
  br i1 %74, label %75, label %81

75:                                               ; preds = %70
  %76 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0)) #7
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #7
  %78 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %78, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %79, align 8
  br label %81

81:                                               ; preds = %70, %75
  %82 = phi %"class.blink::ModuleScript"* [ %73, %70 ], [ %80, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #7
  ret %"class.blink::ModuleScript"* %82
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Module"* @_ZN5blink24ModuleRecordResolverImpl7ResolveERKNS_13ModuleRequestEN2v85LocalINS4_6ModuleEEERNS_14ExceptionStateE(%"class.blink::ModuleRecordResolverImpl"*, %"struct.blink::ModuleRequest"* dereferenceable(32), %"class.v8::Module"*, %"class.blink::ExceptionState"* nocapture readnone dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 4, i32 0, i32 0
  %11 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %10, align 8
  %12 = bitcast %"class.blink::Modulator"* %11 to %"class.blink::ScriptState"* (%"class.blink::Modulator"*)***
  %13 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)**, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %13, i64 6
  %15 = load %"class.blink::ScriptState"* (%"class.blink::Modulator"*)*, %"class.blink::ScriptState"* (%"class.blink::Modulator"*)** %14, align 8
  %16 = tail call %"class.blink::ScriptState"* %15(%"class.blink::Modulator"* %11) #7
  %17 = tail call %"class.blink::ModuleScript"* @_ZNK5blink24ModuleRecordResolverImpl31GetModuleScriptFromModuleRecordEN2v85LocalINS1_6ModuleEEE(%"class.blink::ModuleRecordResolverImpl"* %0, %"class.v8::Module"* %2)
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %18) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 112, i1 false)
  %19 = getelementptr inbounds %"struct.blink::ModuleRequest", %"struct.blink::ModuleRequest"* %1, i64 0, i32 0
  call void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* nonnull sret %6, %"class.blink::ModuleScript"* %17, %"class.WTF::String"* dereferenceable(8) %19, %"class.WTF::String"* null) #7
  %20 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %10, align 8
  %21 = bitcast %"class.blink::Modulator"* %20 to i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)***
  %22 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)**, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %22, i64 25
  %24 = load i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)*, i32 (%"class.blink::Modulator"*, %"struct.blink::ModuleRequest"*)** %23, align 8
  %25 = call i32 %24(%"class.blink::Modulator"* %20, %"struct.blink::ModuleRequest"* dereferenceable(32) %1) #7
  %26 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #7
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %27, align 8
  %28 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = icmp eq i32 %25, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* null, i8** %27, align 8
  br label %40

31:                                               ; preds = %4
  %32 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #7
  %33 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i8* %32, i8* %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  store i8* %35, i8** %27, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 103, %"class.logging::CheckOpResult"* nonnull %7) #7
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  br label %40

40:                                               ; preds = %30, %31, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #7
  %41 = load %"class.blink::Modulator"*, %"class.blink::Modulator"** %10, align 8
  %42 = bitcast %"class.blink::Modulator"* %41 to %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)***
  %43 = load %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)**, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)** %43, i64 12
  %45 = load %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)*, %"class.blink::ModuleScript"* (%"class.blink::Modulator"*, %"class.blink::KURL"*, i32)** %44, align 8
  %46 = call %"class.blink::ModuleScript"* %45(%"class.blink::Modulator"* %41, %"class.blink::KURL"* nonnull dereferenceable(112) %6, i32 %25) #7
  %47 = call %"class.v8::Module"* @_ZNK5blink12ModuleScript8V8ModuleEv(%"class.blink::ModuleScript"* %46) #7
  %48 = icmp eq %"class.v8::Module"* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %40
  %50 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 116, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0)) #7
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #7
  br label %52

52:                                               ; preds = %40, %49
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %18) #7
  ret %"class.v8::Module"* %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink12ModuleScript22ResolveModuleSpecifierERKN3WTF6StringEPS2_(%"class.blink::KURL"* sret, %"class.blink::ModuleScript"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ModuleRecordResolverImpl16ContextDestroyedEv(%"class.blink::ModuleRecordResolverImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.WTF::KeyValuePair"* %4 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %8) #7
  %9 = bitcast %"class.WTF::HashMap"* %2 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  store i32 0, i32* %7, align 8
  %10 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink24ModuleRecordResolverImpl16ContextDestroyedEv(%"class.blink::ModuleRecordResolverImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 4
  %4 = bitcast %"class.blink::Member.13"* %3 to %"struct.WTF::KeyValuePair"**
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::Member.13"* %2 to %"class.blink::ModuleRecordResolverImpl"*
  %9 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 5
  %10 = bitcast %"class.blink::Member.13"* %9 to i32*
  %11 = bitcast %"struct.WTF::KeyValuePair"* %5 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %11) #7
  %12 = bitcast %"class.blink::Member.13"* %3 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  store i32 0, i32* %10, align 8
  %13 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %8, i64 0, i32 3, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  br label %14

14:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24ModuleRecordResolverImpl5TraceEPNS_7VisitorE(%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::ExecutionContextLifecycleObserver.base"* %3 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %4, %"class.blink::Visitor"* %1) #7
  %5 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::HeapHashMap"* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = bitcast %"class.blink::HeapHashMap"* %5 to i8**
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %10 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, i64 11
  %12 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8** %8) #7
  %13 = icmp eq i64 %7, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = inttoptr i64 %7 to i8*
  %16 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, i64 5
  %19 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %1, i8* nonnull %15, i8* nonnull %15, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #7
  br label %20

20:                                               ; preds = %2, %14
  %21 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 4
  %22 = bitcast %"class.blink::Member.13"* %21 to i64*
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %23 to i8*
  %27 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %28, i64 5
  %30 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, align 8
  tail call void %30(%"class.blink::Visitor"* %1, i8* nonnull %26, i8* nonnull %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #7
  br label %31

31:                                               ; preds = %20, %25
  ret void
}

declare void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK5blink24ModuleRecordResolverImpl5TraceEPNS_7VisitorE(%"class.blink::ModuleRecordResolverImpl"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 -1, i32 4
  %4 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %3, i64 1
  %5 = bitcast %"class.blink::Member.13"* %4 to %"class.blink::ExecutionContextLifecycleObserver"*
  tail call void @_ZNK5blink33ExecutionContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ExecutionContextLifecycleObserver"* %5, %"class.blink::Visitor"* %1) #7
  %6 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %3, i64 4
  %7 = bitcast %"class.blink::Member.13"* %6 to i64*
  %8 = load atomic i64, i64* %7 monotonic, align 8
  %9 = bitcast %"class.blink::Member.13"* %6 to i8**
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %11 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %11, i64 11
  %13 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8** %9) #7
  %14 = icmp eq i64 %8, 0
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = inttoptr i64 %8 to i8*
  %17 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %18, i64 5
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %19, align 8
  tail call void %20(%"class.blink::Visitor"* %1, i8* nonnull %16, i8* nonnull %16, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #7
  br label %21

21:                                               ; preds = %15, %2
  %22 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %3, i64 7
  %23 = bitcast %"class.blink::Member.13"* %22 to i64*
  %24 = load atomic i64, i64* %23 monotonic, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = inttoptr i64 %24 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv) #7
  br label %32

32:                                               ; preds = %21, %26
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ModuleRecordResolverImplD2Ev(%"class.blink::ModuleRecordResolverImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %2) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24ModuleRecordResolverImplD0Ev(%"class.blink::ModuleRecordResolverImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %2) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink24ModuleRecordResolverImplD1Ev(%"class.blink::ModuleRecordResolverImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 1
  %4 = bitcast %"class.blink::Member.13"* %3 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink24ModuleRecordResolverImplD0Ev(%"class.blink::ModuleRecordResolverImpl"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ModuleRecordResolverImpl", %"class.blink::ModuleRecordResolverImpl"* %0, i64 -1, i32 4
  %3 = getelementptr inbounds %"class.blink::Member.13", %"class.blink::Member.13"* %2, i64 1
  %4 = bitcast %"class.blink::Member.13"* %3 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIN3WTF29HashTableConstIteratorAdapterINS1_9HashTableIN5blink6MemberINS4_13BoxedV8ModuleEEENS1_12KeyValuePairIS7_NS5_IKNS4_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS4_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS7_EENSG_ISB_EEEESH_NS4_13HeapAllocatorEEESC_EEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINSN_14remove_pointerISP_E4typeEEE5valueEPcE4typeESR_ENUlRNSN_13basic_ostreamIcNSN_11char_traitsIcEEEEPKvE_8__invokeES12_S14_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"**
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds i8, i8* %1, i64 8
  %6 = bitcast i8* %5 to %"struct.WTF::KeyValuePair"**
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = icmp eq %"struct.WTF::KeyValuePair"* %4, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0), i64 27) #7
  br label %16

11:                                               ; preds = %2
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i64 21) #7
  %13 = bitcast i8* %1 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %12, i8* %14) #7
  br label %16

16:                                               ; preds = %9, %11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #7
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #7
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #7
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #7
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #7
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #7
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #7
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #8
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #7
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #7
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #8
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #7
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #7
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_13BoxedV8ModuleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_13BoxedV8ModuleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BoxedV8ModuleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #7
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #7
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %21, i8* %22) #7
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #7
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #7
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %4 = bitcast i8* %3 to %"class.blink::TraceWrapperV8Reference.17"*
  %5 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)***
  %6 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)**, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)** %6, i64 7
  %8 = load void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)*, void (%"class.blink::Visitor"*, %"class.blink::TraceWrapperV8Reference.17"*)** %7, align 8
  tail call void %8(%"class.blink::Visitor"* %0, %"class.blink::TraceWrapperV8Reference.17"* dereferenceable(8) %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_13BoxedV8ModuleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #7

declare i32 @_ZNK2v86Module15GetIdentityHashEv(%"class.v8::Module"*) local_unnamed_addr #2

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.17"* dereferenceable(8)) local_unnamed_addr #2

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS7_EENS_18HashTableAddResultISI_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::BoxedV8Module"** dereferenceable(8), %"class.blink::ModuleScript"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %1, align 8
  %17 = getelementptr inbounds %"class.blink::BoxedV8Module", %"class.blink::BoxedV8Module"* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, %14
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %22, align 8
  %24 = icmp eq %"class.blink::BoxedV8Module"* %23, null
  br i1 %24, label %99, label %25

25:                                               ; preds = %10
  %26 = xor i32 %18, -1
  %27 = lshr i32 %18, 23
  %28 = add i32 %27, %26
  %29 = shl i32 %28, 12
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 7
  %32 = xor i32 %31, %30
  %33 = shl i32 %32, 2
  %34 = xor i32 %33, %32
  %35 = lshr i32 %34, 20
  %36 = xor i32 %35, %34
  %37 = or i32 %36, 1
  %38 = zext i32 %37 to i64
  br label %39

39:                                               ; preds = %87, %25
  %40 = phi %"class.blink::BoxedV8Module"* [ %23, %25 ], [ %85, %87 ]
  %41 = phi %"class.blink::BoxedV8Module"* [ %16, %25 ], [ %88, %87 ]
  %42 = phi %"class.blink::BoxedV8Module"** [ %22, %25 ], [ %84, %87 ]
  %43 = phi %"struct.WTF::KeyValuePair"* [ %21, %25 ], [ %83, %87 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %25 ], [ %78, %87 ]
  %45 = phi i64 [ %20, %25 ], [ %82, %87 ]
  %46 = phi i64 [ 0, %25 ], [ %80, %87 ]
  %47 = icmp eq %"class.blink::BoxedV8Module"* %40, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %48 = icmp eq %"class.blink::BoxedV8Module"* %41, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %49 = or i1 %48, %47
  %50 = and i1 %48, %47
  br i1 %49, label %73, label %51

51:                                               ; preds = %39
  %52 = icmp eq %"class.blink::BoxedV8Module"* %40, null
  %53 = icmp ne %"class.blink::BoxedV8Module"* %41, null
  br i1 %52, label %54, label %55

54:                                               ; preds = %51
  br i1 %53, label %75, label %131

55:                                               ; preds = %51
  br i1 %53, label %56, label %75

56:                                               ; preds = %55
  %57 = bitcast %"class.blink::BoxedV8Module"* %40 to i8*
  %58 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %57, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %59 = bitcast %"class.blink::BoxedV8Module"* %41 to i8*
  %60 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %59, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %61 = bitcast i8* %58 to i64**
  %62 = load i64*, i64** %61, align 8
  %63 = bitcast i8* %60 to i64**
  %64 = load i64*, i64** %63, align 8
  %65 = icmp eq i64* %62, null
  %66 = icmp eq i64* %64, null
  %67 = or i1 %65, %66
  %68 = and i1 %65, %66
  br i1 %67, label %73, label %69

69:                                               ; preds = %56
  %70 = load i64, i64* %62, align 8
  %71 = load i64, i64* %64, align 8
  %72 = icmp eq i64 %70, %71
  br i1 %72, label %131, label %75

73:                                               ; preds = %39, %56
  %74 = phi i1 [ %50, %39 ], [ %68, %56 ]
  br i1 %74, label %131, label %75

75:                                               ; preds = %54, %55, %69, %73
  %76 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %42, align 8
  %77 = icmp eq %"class.blink::BoxedV8Module"* %76, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %78 = select i1 %77, %"struct.WTF::KeyValuePair"* %43, %"struct.WTF::KeyValuePair"* %44
  %79 = icmp eq i64 %46, 0
  %80 = select i1 %79, i64 %38, i64 %46
  %81 = add i64 %80, %45
  %82 = and i64 %81, %15
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %82
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %84, align 8
  %86 = icmp eq %"class.blink::BoxedV8Module"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %1, align 8
  br label %39

89:                                               ; preds = %75
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %78, null
  br i1 %90, label %99, label %91

91:                                               ; preds = %89
  %92 = bitcast %"struct.WTF::KeyValuePair"* %78 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %92, i64 16) #7
  %93 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = add i32 %94, 2147483647
  %96 = and i32 %95, 2147483647
  %97 = and i32 %94, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %93, align 8
  br label %99

99:                                               ; preds = %10, %89, %91
  %100 = phi %"struct.WTF::KeyValuePair"* [ %78, %91 ], [ %83, %89 ], [ %21, %10 ]
  %101 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %1, align 8
  %102 = ptrtoint %"class.blink::BoxedV8Module"* %101 to i64
  %103 = bitcast %"struct.WTF::KeyValuePair"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::BoxedV8Module"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #7
  br label %109

109:                                              ; preds = %106, %99
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 0, i32 1
  %111 = load %"class.blink::ModuleScript"*, %"class.blink::ModuleScript"** %2, align 8
  %112 = ptrtoint %"class.blink::ModuleScript"* %111 to i64
  %113 = bitcast %"class.blink::Member.5"* %110 to i64*
  store atomic i64 %112, i64* %113 monotonic, align 8
  %114 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %119, label %116

116:                                              ; preds = %109
  %117 = bitcast %"class.blink::ModuleScript"* %111 to i8*
  %118 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %117) #7
  br label %119

119:                                              ; preds = %109, %116
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13BoxedV8ModuleEEENS4_IKNS_12ModuleScriptEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair"* %100) #7
  %120 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %100)
  br label %131

131:                                              ; preds = %54, %73, %69, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %69 ], [ 0, %73 ], [ 0, %54 ]
  %133 = phi %"struct.WTF::KeyValuePair"* [ %100, %119 ], [ %130, %129 ], [ %43, %69 ], [ %43, %73 ], [ %43, %54 ]
  %134 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %133, 0
  %135 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %134, i8 %132, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #7
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* %23, i8* %24) #7
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #7
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #7
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #7
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #7
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #7
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #7
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #7
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #7
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #7
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.15, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0)) #7
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #7
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #7
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #7
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.5"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.5"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS9_jSJ_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #7
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #7
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #7
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret %"struct.WTF::KeyValuePair"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"* nonnull %5, %"class.blink::Member"* dereferenceable(8) %67) #7
  %69 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.5"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.5"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair"* %69, %"struct.WTF::KeyValuePair"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.18, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS1_12KeyValuePairIS5_NS3_IKNS_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS1_12KeyValuePairIS5_NS3_IKNS_12ModuleScriptEEEEENS1_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #7
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([503 x i8], [503 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS6_NS4_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13BoxedV8ModuleEEENS_12KeyValuePairIS6_NS4_IKNS3_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS3_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13BoxedV8ModuleEEENS_12KeyValuePairIS6_NS4_IKNS3_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS3_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_ISA_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #7
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.5"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv) #7
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #7
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv) #7
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member.5"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #7
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ModuleScript"*
  %4 = bitcast i8* %1 to void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)**, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)*, void (%"class.blink::ModuleScript"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ModuleScript"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable"*, %"class.blink::Member"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::BoxedV8Module", %"class.blink::BoxedV8Module"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, %7
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %14
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %17, align 8
  %19 = icmp eq %"class.blink::BoxedV8Module"* %18, null
  br i1 %19, label %38, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::Member"* %1 to i8**
  %22 = xor i32 %12, -1
  %23 = lshr i32 %12, 23
  %24 = add i32 %23, %22
  %25 = shl i32 %24, 12
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 7
  %28 = xor i32 %27, %26
  %29 = shl i32 %28, 2
  %30 = xor i32 %29, %28
  %31 = lshr i32 %30, 20
  %32 = xor i32 %31, %30
  %33 = or i32 %32, 1
  %34 = zext i32 %33 to i64
  br label %44

35:                                               ; preds = %81
  %36 = ptrtoint %"struct.WTF::KeyValuePair"* %89 to i64
  %37 = inttoptr i64 %84 to %"struct.WTF::KeyValuePair"*
  br label %38

38:                                               ; preds = %35, %2
  %39 = phi i64 [ %36, %35 ], [ %16, %2 ]
  %40 = phi %"struct.WTF::KeyValuePair"* [ %37, %35 ], [ null, %2 ]
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, null
  %42 = ptrtoint %"struct.WTF::KeyValuePair"* %40 to i64
  %43 = select i1 %41, i64 %39, i64 %42
  br label %96

44:                                               ; preds = %94, %20
  %45 = phi %"class.blink::BoxedV8Module"* [ %10, %20 ], [ %95, %94 ]
  %46 = phi i64 [ 0, %20 ], [ %84, %94 ]
  %47 = phi %"class.blink::BoxedV8Module"** [ %17, %20 ], [ %90, %94 ]
  %48 = phi i64 [ %16, %20 ], [ %93, %94 ]
  %49 = phi i64 [ %14, %20 ], [ %88, %94 ]
  %50 = phi i64 [ 0, %20 ], [ %86, %94 ]
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %49, i32 0, i32 0, i32 0
  %52 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %51, align 8
  %53 = icmp eq %"class.blink::BoxedV8Module"* %52, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %54 = icmp eq %"class.blink::BoxedV8Module"* %45, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %55 = or i1 %54, %53
  %56 = and i1 %54, %53
  br i1 %55, label %79, label %57

57:                                               ; preds = %44
  %58 = icmp eq %"class.blink::BoxedV8Module"* %52, null
  %59 = icmp ne %"class.blink::BoxedV8Module"* %45, null
  br i1 %58, label %60, label %61

60:                                               ; preds = %57
  br i1 %59, label %81, label %96

61:                                               ; preds = %57
  br i1 %59, label %62, label %81

62:                                               ; preds = %61
  %63 = bitcast %"class.blink::BoxedV8Module"* %52 to i8*
  %64 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %63, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %65 = load i8*, i8** %21, align 8
  %66 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %65, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %67 = bitcast i8* %64 to i64**
  %68 = load i64*, i64** %67, align 8
  %69 = bitcast i8* %66 to i64**
  %70 = load i64*, i64** %69, align 8
  %71 = icmp eq i64* %68, null
  %72 = icmp eq i64* %70, null
  %73 = or i1 %71, %72
  %74 = and i1 %71, %72
  br i1 %73, label %79, label %75

75:                                               ; preds = %62
  %76 = load i64, i64* %68, align 8
  %77 = load i64, i64* %70, align 8
  %78 = icmp eq i64 %76, %77
  br i1 %78, label %96, label %81

79:                                               ; preds = %62, %44
  %80 = phi i1 [ %56, %44 ], [ %74, %62 ]
  br i1 %80, label %96, label %81

81:                                               ; preds = %79, %75, %61, %60
  %82 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %47, align 8
  %83 = icmp eq %"class.blink::BoxedV8Module"* %82, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %84 = select i1 %83, i64 %48, i64 %46
  %85 = icmp eq i64 %50, 0
  %86 = select i1 %85, i64 %34, i64 %50
  %87 = add i64 %86, %49
  %88 = and i64 %87, %8
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %88
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %90, align 8
  %92 = icmp eq %"class.blink::BoxedV8Module"* %91, null
  %93 = ptrtoint %"struct.WTF::KeyValuePair"* %89 to i64
  br i1 %92, label %35, label %94

94:                                               ; preds = %81
  %95 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %9, align 8
  br label %44

96:                                               ; preds = %60, %75, %79, %38
  %97 = phi i64 [ %43, %38 ], [ %48, %79 ], [ %48, %75 ], [ %48, %60 ]
  %98 = phi i8 [ 0, %38 ], [ 1, %79 ], [ 1, %75 ], [ 1, %60 ]
  %99 = inttoptr i64 %97 to %"struct.WTF::KeyValuePair"*
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %99, 0
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, i8 %98, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %101
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13BoxedV8ModuleEEENS4_IKNS_12ModuleScriptEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13BoxedV8ModuleEE5TraceEPNS_7VisitorEPKv) #7
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member.5"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12ModuleScriptEE5TraceEPNS_7VisitorEPKv) #7
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.5"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #7
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #7
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13BoxedV8ModuleEEENS2_12KeyValuePairIS6_NS4_IKNS_12ModuleScriptEEEEENS2_24KeyValuePairKeyExtractorENS_17BoxedV8ModuleHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_ISA_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #7
  %48 = bitcast %"class.blink::HeapHashTableBacking"* %47 to %"struct.WTF::KeyValuePair"*
  %49 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS9_jSJ_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %48, i32 %45, %"struct.WTF::KeyValuePair"* null) #7
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::BoxedV8Module"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::BoxedV8Module", %"class.blink::BoxedV8Module"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  %28 = icmp eq %"class.blink::BoxedV8Module"* %1, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %29 = icmp ne %"class.blink::BoxedV8Module"* %1, null
  %30 = bitcast %"class.blink::BoxedV8Module"* %1 to i8*
  br label %31

31:                                               ; preds = %65, %6
  %32 = phi i64 [ %67, %65 ], [ 0, %6 ]
  %33 = phi i64 [ %69, %65 ], [ %14, %6 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %35, align 8
  %37 = icmp eq %"class.blink::BoxedV8Module"* %36, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %38 = or i1 %28, %37
  %39 = and i1 %28, %37
  br i1 %38, label %60, label %40

40:                                               ; preds = %31
  %41 = icmp eq %"class.blink::BoxedV8Module"* %36, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  br i1 %29, label %62, label %70

43:                                               ; preds = %40
  br i1 %29, label %44, label %62

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::BoxedV8Module"* %36 to i8*
  %46 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %47 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %48 = bitcast i8* %46 to i64**
  %49 = load i64*, i64** %48, align 8
  %50 = bitcast i8* %47 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, null
  %53 = icmp eq i64* %51, null
  %54 = or i1 %52, %53
  %55 = and i1 %52, %53
  br i1 %54, label %60, label %56

56:                                               ; preds = %44
  %57 = load i64, i64* %49, align 8
  %58 = load i64, i64* %51, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %70, label %62

60:                                               ; preds = %44, %31
  %61 = phi i1 [ %39, %31 ], [ %55, %44 ]
  br i1 %61, label %70, label %62

62:                                               ; preds = %60, %56, %43, %42
  %63 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %35, align 8
  %64 = icmp eq %"class.blink::BoxedV8Module"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = icmp eq i64 %32, 0
  %67 = select i1 %66, i64 %27, i64 %32
  %68 = add i64 %67, %33
  %69 = and i64 %68, %10
  br label %31

70:                                               ; preds = %60, %56, %42
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %34, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %62, %70, %2
  %73 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %76
  br label %83

78:                                               ; preds = %70
  %79 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %80 = load i32, i32* %7, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 %81
  br label %83

83:                                               ; preds = %72, %78
  %84 = phi %"struct.WTF::KeyValuePair"* [ %34, %78 ], [ %77, %72 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %82, %78 ], [ %77, %72 ]
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %84, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %86, %"struct.WTF::KeyValuePair"* %85, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZNK3WTF9HashTableIN5blink6MemberINS1_13BoxedV8ModuleEEENS_12KeyValuePairIS4_NS2_IKNS1_12ModuleScriptEEEEENS_24KeyValuePairKeyExtractorENS1_17BoxedV8ModuleHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable"*, %"class.blink::BoxedV8Module"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %72, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::BoxedV8Module", %"class.blink::BoxedV8Module"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, %9
  %14 = zext i32 %13 to i64
  %15 = xor i32 %12, -1
  %16 = lshr i32 %12, 23
  %17 = add i32 %16, %15
  %18 = shl i32 %17, 12
  %19 = xor i32 %18, %17
  %20 = lshr i32 %19, 7
  %21 = xor i32 %20, %19
  %22 = shl i32 %21, 2
  %23 = xor i32 %22, %21
  %24 = lshr i32 %23, 20
  %25 = xor i32 %24, %23
  %26 = or i32 %25, 1
  %27 = zext i32 %26 to i64
  %28 = icmp eq %"class.blink::BoxedV8Module"* %1, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %29 = icmp ne %"class.blink::BoxedV8Module"* %1, null
  %30 = bitcast %"class.blink::BoxedV8Module"* %1 to i8*
  br label %31

31:                                               ; preds = %65, %6
  %32 = phi i64 [ %67, %65 ], [ 0, %6 ]
  %33 = phi i64 [ %69, %65 ], [ %14, %6 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %35, align 8
  %37 = icmp eq %"class.blink::BoxedV8Module"* %36, inttoptr (i64 -1 to %"class.blink::BoxedV8Module"*)
  %38 = or i1 %28, %37
  %39 = and i1 %28, %37
  br i1 %38, label %60, label %40

40:                                               ; preds = %31
  %41 = icmp eq %"class.blink::BoxedV8Module"* %36, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %40
  br i1 %29, label %62, label %70

43:                                               ; preds = %40
  br i1 %29, label %44, label %62

44:                                               ; preds = %43
  %45 = bitcast %"class.blink::BoxedV8Module"* %36 to i8*
  %46 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %47 = tail call i8* @llvm.ptr.annotation.p0i8(i8* nonnull %30, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.12, i64 0, i64 0), i32 41) #7
  %48 = bitcast i8* %46 to i64**
  %49 = load i64*, i64** %48, align 8
  %50 = bitcast i8* %47 to i64**
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, null
  %53 = icmp eq i64* %51, null
  %54 = or i1 %52, %53
  %55 = and i1 %52, %53
  br i1 %54, label %60, label %56

56:                                               ; preds = %44
  %57 = load i64, i64* %49, align 8
  %58 = load i64, i64* %51, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %70, label %62

60:                                               ; preds = %44, %31
  %61 = phi i1 [ %39, %31 ], [ %55, %44 ]
  br i1 %61, label %70, label %62

62:                                               ; preds = %60, %56, %43, %42
  %63 = load %"class.blink::BoxedV8Module"*, %"class.blink::BoxedV8Module"** %35, align 8
  %64 = icmp eq %"class.blink::BoxedV8Module"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = icmp eq i64 %32, 0
  %67 = select i1 %66, i64 %27, i64 %32
  %68 = add i64 %67, %33
  %69 = and i64 %68, %10
  br label %31

70:                                               ; preds = %60, %56, %42
  %71 = icmp eq %"struct.WTF::KeyValuePair"* %34, null
  br i1 %71, label %72, label %78

72:                                               ; preds = %62, %70, %2
  %73 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %76
  br label %83

78:                                               ; preds = %70
  %79 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %80 = load i32, i32* %7, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 %81
  br label %83

83:                                               ; preds = %72, %78
  %84 = phi %"struct.WTF::KeyValuePair"* [ %34, %78 ], [ %77, %72 ]
  %85 = phi %"struct.WTF::KeyValuePair"* [ %82, %78 ], [ %77, %72 ]
  %86 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %84, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %86, %"struct.WTF::KeyValuePair"* %85, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9ModulatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Modulator"*
  %4 = bitcast i8* %1 to void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)**, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)*, void (%"class.blink::Modulator"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Modulator"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
