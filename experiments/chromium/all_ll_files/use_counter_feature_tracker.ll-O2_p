; ModuleID = '../../third_party/blink/common/use_counter/use_counter_feature_tracker.cc'
source_filename = "../../third_party/blink/common/use_counter/use_counter_feature_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.0", %"class.std::__1::bitset.0", %"class.std::__1::bitset.2" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.0" = type { %"class.std::__1::__bitset.1" }
%"class.std::__1::__bitset.1" = type { [11 x i64] }
%"class.std::__1::bitset.2" = type { %"class.std::__1::__bitset.3" }
%"class.std::__1::__bitset.3" = type { [2 x i64] }
%"class.blink::UseCounterFeature" = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::UseCounterFeature"* }
%"class.std::__1::__vector_base_common" = type { i8 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink24UseCounterFeatureTracker4TestERKNS_17UseCounterFeatureE(%"class.blink::UseCounterFeatureTracker"* nocapture readonly, %"class.blink::UseCounterFeature"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %41 [
    i32 0, label %5
    i32 1, label %14
    i32 2, label %23
    i32 3, label %32
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp ugt i32 %7, 3926
  br i1 %9, label %10, label %11

10:                                               ; preds = %5
  tail call void @abort() #8
  unreachable

11:                                               ; preds = %5
  %12 = lshr i64 %8, 6
  %13 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 0, i32 0, i32 0, i64 %12
  br label %42

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = icmp ugt i32 %16, 696
  br i1 %18, label %19, label %20

19:                                               ; preds = %14
  tail call void @abort() #8
  unreachable

20:                                               ; preds = %14
  %21 = lshr i64 %17, 6
  %22 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %21
  br label %42

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = icmp ugt i32 %25, 696
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  tail call void @abort() #8
  unreachable

29:                                               ; preds = %23
  %30 = lshr i64 %26, 6
  %31 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 2, i32 0, i32 0, i64 %30
  br label %42

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = zext i32 %34 to i64
  %36 = icmp ugt i32 %34, 86
  br i1 %36, label %37, label %38

37:                                               ; preds = %32
  tail call void @abort() #8
  unreachable

38:                                               ; preds = %32
  %39 = lshr i64 %35, 6
  %40 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 3, i32 0, i32 0, i64 %39
  br label %42

41:                                               ; preds = %2
  unreachable

42:                                               ; preds = %38, %29, %20, %11
  %43 = phi i64 [ %35, %38 ], [ %26, %29 ], [ %17, %20 ], [ %8, %11 ]
  %44 = phi i64* [ %40, %38 ], [ %31, %29 ], [ %22, %20 ], [ %13, %11 ]
  %45 = and i64 %43, 63
  %46 = shl i64 1, %45
  %47 = load i64, i64* %44, align 8
  %48 = and i64 %47, %46
  %49 = icmp ne i64 %48, 0
  ret i1 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink24UseCounterFeatureTracker10TestAndSetERKNS_17UseCounterFeatureE(%"class.blink::UseCounterFeatureTracker"* nocapture, %"class.blink::UseCounterFeature"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink24UseCounterFeatureTracker4TestERKNS_17UseCounterFeatureE(%"class.blink::UseCounterFeatureTracker"* %0, %"class.blink::UseCounterFeature"* dereferenceable(8) %1)
  %4 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %37 [
    i32 0, label %6
    i32 1, label %12
    i32 2, label %18
    i32 3, label %24
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = lshr i64 %9, 6
  %11 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10
  br label %30

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i64
  %16 = lshr i64 %15, 6
  %17 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %16
  br label %30

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = lshr i64 %21, 6
  %23 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 2, i32 0, i32 0, i64 %22
  br label %30

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = lshr i64 %27, 6
  %29 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 3, i32 0, i32 0, i64 %28
  br label %30

30:                                               ; preds = %24, %18, %12, %6
  %31 = phi i64 [ %9, %6 ], [ %15, %12 ], [ %21, %18 ], [ %27, %24 ]
  %32 = phi i64* [ %11, %6 ], [ %17, %12 ], [ %23, %18 ], [ %29, %24 ]
  %33 = and i64 %31, 63
  %34 = shl i64 1, %33
  %35 = load i64, i64* %32, align 8
  %36 = or i64 %34, %35
  store i64 %36, i64* %32, align 8
  br label %37

37:                                               ; preds = %30, %2
  ret i1 %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24UseCounterFeatureTracker3SetERKNS_17UseCounterFeatureEb(%"class.blink::UseCounterFeatureTracker"*, %"class.blink::UseCounterFeature"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  switch i32 %5, label %66 [
    i32 0, label %6
    i32 1, label %21
    i32 2, label %36
    i32 3, label %51
  ]

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = lshr i64 %9, 6
  %11 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 0, i32 0, i32 0, i64 %10
  %12 = and i64 %9, 63
  %13 = shl i64 1, %12
  br i1 %2, label %14, label %17

14:                                               ; preds = %6
  %15 = load i64, i64* %11, align 8
  %16 = or i64 %15, %13
  store i64 %16, i64* %11, align 8
  br label %66

17:                                               ; preds = %6
  %18 = xor i64 %13, -1
  %19 = load i64, i64* %11, align 8
  %20 = and i64 %19, %18
  store i64 %20, i64* %11, align 8
  br label %66

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = lshr i64 %24, 6
  %26 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %25
  %27 = and i64 %24, 63
  %28 = shl i64 1, %27
  br i1 %2, label %29, label %32

29:                                               ; preds = %21
  %30 = load i64, i64* %26, align 8
  %31 = or i64 %30, %28
  store i64 %31, i64* %26, align 8
  br label %66

32:                                               ; preds = %21
  %33 = xor i64 %28, -1
  %34 = load i64, i64* %26, align 8
  %35 = and i64 %34, %33
  store i64 %35, i64* %26, align 8
  br label %66

36:                                               ; preds = %3
  %37 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  %40 = lshr i64 %39, 6
  %41 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 2, i32 0, i32 0, i64 %40
  %42 = and i64 %39, 63
  %43 = shl i64 1, %42
  br i1 %2, label %44, label %47

44:                                               ; preds = %36
  %45 = load i64, i64* %41, align 8
  %46 = or i64 %45, %43
  store i64 %46, i64* %41, align 8
  br label %66

47:                                               ; preds = %36
  %48 = xor i64 %43, -1
  %49 = load i64, i64* %41, align 8
  %50 = and i64 %49, %48
  store i64 %50, i64* %41, align 8
  br label %66

51:                                               ; preds = %3
  %52 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i64
  %55 = lshr i64 %54, 6
  %56 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 3, i32 0, i32 0, i64 %55
  %57 = and i64 %54, 63
  %58 = shl i64 1, %57
  br i1 %2, label %59, label %62

59:                                               ; preds = %51
  %60 = load i64, i64* %56, align 8
  %61 = or i64 %60, %58
  store i64 %61, i64* %56, align 8
  br label %66

62:                                               ; preds = %51
  %63 = xor i64 %58, -1
  %64 = load i64, i64* %56, align 8
  %65 = and i64 %64, %63
  store i64 %65, i64* %56, align 8
  br label %66

66:                                               ; preds = %62, %59, %47, %44, %32, %29, %17, %14, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24UseCounterFeatureTracker19GetRecordedFeaturesEv(%"class.std::__1::vector"* noalias sret, %"class.blink::UseCounterFeatureTracker"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::UseCounterFeature"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::UseCounterFeature"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::UseCounterFeature"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::UseCounterFeature"*
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #9
  %14 = bitcast i64* %3 to i8*
  %15 = bitcast %"class.blink::UseCounterFeature"** %11 to i64*
  %16 = bitcast %"class.std::__1::vector"* %0 to i64*
  %17 = bitcast %"class.blink::UseCounterFeature"** %12 to i64*
  br label %20

18:                                               ; preds = %86
  %19 = bitcast i64* %5 to i8*
  br label %91

20:                                               ; preds = %86, %2
  %21 = phi i64 [ 0, %2 ], [ %87, %86 ]
  %22 = lshr i64 %21, 6
  %23 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %1, i64 0, i32 0, i32 0, i32 0, i64 %22
  %24 = and i64 %21, 63
  %25 = shl i64 1, %24
  %26 = load i64, i64* %23, align 8
  %27 = and i64 %26, %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %86, label %29

29:                                               ; preds = %20
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %30 = trunc i64 %21 to i32
  call void @_ZN5blink17UseCounterFeatureC1ENS_5mojom21UseCounterFeatureTypeEj(%"class.blink::UseCounterFeature"* nonnull %4, i32 0, i32 %30) #9
  %31 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %11, align 8
  %32 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %12, align 8
  %33 = icmp ult %"class.blink::UseCounterFeature"* %31, %32
  %34 = ptrtoint %"class.blink::UseCounterFeature"* %32 to i64
  br i1 %33, label %35, label %40

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::UseCounterFeature"* %31 to i64*
  %37 = load i64, i64* %3, align 8
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %31, i64 1
  %39 = ptrtoint %"class.blink::UseCounterFeature"* %38 to i64
  store i64 %39, i64* %15, align 8
  br label %85

40:                                               ; preds = %29
  %41 = ptrtoint %"class.blink::UseCounterFeature"* %31 to i64
  %42 = load i64, i64* %16, align 8
  %43 = sub i64 %41, %42
  %44 = ashr exact i64 %43, 3
  %45 = add nsw i64 %44, 1
  %46 = icmp ugt i64 %45, 2305843009213693951
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #8
  unreachable

49:                                               ; preds = %40
  %50 = sub i64 %34, %42
  %51 = ashr exact i64 %50, 3
  %52 = icmp ult i64 %51, 1152921504606846975
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = ashr exact i64 %50, 2
  %55 = icmp ult i64 %54, %45
  %56 = select i1 %55, i64 %45, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %53
  %59 = icmp ugt i64 %56, 2305843009213693951
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  call void @abort() #8
  unreachable

61:                                               ; preds = %58, %49
  %62 = phi i64 [ %56, %58 ], [ 2305843009213693951, %49 ]
  %63 = shl i64 %62, 3
  %64 = call i8* @_Znwm(i64 %63) #10
  %65 = bitcast i8* %64 to %"class.blink::UseCounterFeature"*
  br label %66

66:                                               ; preds = %61, %53
  %67 = phi i64 [ %62, %61 ], [ 0, %53 ]
  %68 = phi i8* [ %64, %61 ], [ null, %53 ]
  %69 = phi %"class.blink::UseCounterFeature"* [ %65, %61 ], [ null, %53 ]
  %70 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %69, i64 %44
  %71 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %69, i64 %67
  %72 = ptrtoint %"class.blink::UseCounterFeature"* %71 to i64
  %73 = bitcast %"class.blink::UseCounterFeature"* %70 to i64*
  %74 = load i64, i64* %3, align 8
  store i64 %74, i64* %73, align 4
  %75 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %70, i64 1
  %76 = ptrtoint %"class.blink::UseCounterFeature"* %75 to i64
  %77 = ptrtoint %"class.blink::UseCounterFeature"* %69 to i64
  %78 = icmp sgt i64 %43, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %66
  %80 = inttoptr i64 %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %80, i64 %43, i1 false) #9
  br label %81

81:                                               ; preds = %79, %66
  store i64 %77, i64* %16, align 8
  store i64 %76, i64* %15, align 8
  store i64 %72, i64* %17, align 8
  %82 = icmp eq i64 %42, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = inttoptr i64 %42 to i8*
  call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %35, %81, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  br label %86

86:                                               ; preds = %20, %85
  %87 = add nuw nsw i64 %21, 1
  %88 = icmp eq i64 %87, 3927
  br i1 %88, label %18, label %20

89:                                               ; preds = %157
  %90 = bitcast i64* %7 to i8*
  br label %162

91:                                               ; preds = %157, %18
  %92 = phi i64 [ 0, %18 ], [ %158, %157 ]
  %93 = lshr i64 %92, 6
  %94 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %1, i64 0, i32 1, i32 0, i32 0, i64 %93
  %95 = and i64 %92, 63
  %96 = shl i64 1, %95
  %97 = load i64, i64* %94, align 8
  %98 = and i64 %97, %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %157, label %100

100:                                              ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  %101 = trunc i64 %92 to i32
  call void @_ZN5blink17UseCounterFeatureC1ENS_5mojom21UseCounterFeatureTypeEj(%"class.blink::UseCounterFeature"* nonnull %6, i32 1, i32 %101) #9
  %102 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %11, align 8
  %103 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %12, align 8
  %104 = icmp ult %"class.blink::UseCounterFeature"* %102, %103
  %105 = ptrtoint %"class.blink::UseCounterFeature"* %103 to i64
  br i1 %104, label %106, label %111

106:                                              ; preds = %100
  %107 = bitcast %"class.blink::UseCounterFeature"* %102 to i64*
  %108 = load i64, i64* %5, align 8
  store i64 %108, i64* %107, align 4
  %109 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %102, i64 1
  %110 = ptrtoint %"class.blink::UseCounterFeature"* %109 to i64
  store i64 %110, i64* %15, align 8
  br label %156

111:                                              ; preds = %100
  %112 = ptrtoint %"class.blink::UseCounterFeature"* %102 to i64
  %113 = load i64, i64* %16, align 8
  %114 = sub i64 %112, %113
  %115 = ashr exact i64 %114, 3
  %116 = add nsw i64 %115, 1
  %117 = icmp ugt i64 %116, 2305843009213693951
  br i1 %117, label %118, label %120

118:                                              ; preds = %111
  %119 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %119) #8
  unreachable

120:                                              ; preds = %111
  %121 = sub i64 %105, %113
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 1152921504606846975
  br i1 %123, label %124, label %132

124:                                              ; preds = %120
  %125 = ashr exact i64 %121, 2
  %126 = icmp ult i64 %125, %116
  %127 = select i1 %126, i64 %116, i64 %125
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %137, label %129

129:                                              ; preds = %124
  %130 = icmp ugt i64 %127, 2305843009213693951
  br i1 %130, label %131, label %132

131:                                              ; preds = %129
  call void @abort() #8
  unreachable

132:                                              ; preds = %129, %120
  %133 = phi i64 [ %127, %129 ], [ 2305843009213693951, %120 ]
  %134 = shl i64 %133, 3
  %135 = call i8* @_Znwm(i64 %134) #10
  %136 = bitcast i8* %135 to %"class.blink::UseCounterFeature"*
  br label %137

137:                                              ; preds = %132, %124
  %138 = phi i64 [ %133, %132 ], [ 0, %124 ]
  %139 = phi i8* [ %135, %132 ], [ null, %124 ]
  %140 = phi %"class.blink::UseCounterFeature"* [ %136, %132 ], [ null, %124 ]
  %141 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %140, i64 %115
  %142 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %140, i64 %138
  %143 = ptrtoint %"class.blink::UseCounterFeature"* %142 to i64
  %144 = bitcast %"class.blink::UseCounterFeature"* %141 to i64*
  %145 = load i64, i64* %5, align 8
  store i64 %145, i64* %144, align 4
  %146 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %141, i64 1
  %147 = ptrtoint %"class.blink::UseCounterFeature"* %146 to i64
  %148 = ptrtoint %"class.blink::UseCounterFeature"* %140 to i64
  %149 = icmp sgt i64 %114, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %137
  %151 = inttoptr i64 %113 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %151, i64 %114, i1 false) #9
  br label %152

152:                                              ; preds = %150, %137
  store i64 %148, i64* %16, align 8
  store i64 %147, i64* %15, align 8
  store i64 %143, i64* %17, align 8
  %153 = icmp eq i64 %113, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %113 to i8*
  call void @_ZdlPv(i8* %155) #10
  br label %156

156:                                              ; preds = %106, %152, %154
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  br label %157

157:                                              ; preds = %91, %156
  %158 = add nuw nsw i64 %92, 1
  %159 = icmp eq i64 %158, 697
  br i1 %159, label %89, label %91

160:                                              ; preds = %228
  %161 = bitcast i64* %9 to i8*
  br label %231

162:                                              ; preds = %228, %89
  %163 = phi i64 [ 0, %89 ], [ %229, %228 ]
  %164 = lshr i64 %163, 6
  %165 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %1, i64 0, i32 2, i32 0, i32 0, i64 %164
  %166 = and i64 %163, 63
  %167 = shl i64 1, %166
  %168 = load i64, i64* %165, align 8
  %169 = and i64 %168, %167
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %228, label %171

171:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #9
  %172 = trunc i64 %163 to i32
  call void @_ZN5blink17UseCounterFeatureC1ENS_5mojom21UseCounterFeatureTypeEj(%"class.blink::UseCounterFeature"* nonnull %8, i32 2, i32 %172) #9
  %173 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %11, align 8
  %174 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %12, align 8
  %175 = icmp ult %"class.blink::UseCounterFeature"* %173, %174
  %176 = ptrtoint %"class.blink::UseCounterFeature"* %174 to i64
  br i1 %175, label %177, label %182

177:                                              ; preds = %171
  %178 = bitcast %"class.blink::UseCounterFeature"* %173 to i64*
  %179 = load i64, i64* %7, align 8
  store i64 %179, i64* %178, align 4
  %180 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %173, i64 1
  %181 = ptrtoint %"class.blink::UseCounterFeature"* %180 to i64
  store i64 %181, i64* %15, align 8
  br label %227

182:                                              ; preds = %171
  %183 = ptrtoint %"class.blink::UseCounterFeature"* %173 to i64
  %184 = load i64, i64* %16, align 8
  %185 = sub i64 %183, %184
  %186 = ashr exact i64 %185, 3
  %187 = add nsw i64 %186, 1
  %188 = icmp ugt i64 %187, 2305843009213693951
  br i1 %188, label %189, label %191

189:                                              ; preds = %182
  %190 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %190) #8
  unreachable

191:                                              ; preds = %182
  %192 = sub i64 %176, %184
  %193 = ashr exact i64 %192, 3
  %194 = icmp ult i64 %193, 1152921504606846975
  br i1 %194, label %195, label %203

195:                                              ; preds = %191
  %196 = ashr exact i64 %192, 2
  %197 = icmp ult i64 %196, %187
  %198 = select i1 %197, i64 %187, i64 %196
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %208, label %200

200:                                              ; preds = %195
  %201 = icmp ugt i64 %198, 2305843009213693951
  br i1 %201, label %202, label %203

202:                                              ; preds = %200
  call void @abort() #8
  unreachable

203:                                              ; preds = %200, %191
  %204 = phi i64 [ %198, %200 ], [ 2305843009213693951, %191 ]
  %205 = shl i64 %204, 3
  %206 = call i8* @_Znwm(i64 %205) #10
  %207 = bitcast i8* %206 to %"class.blink::UseCounterFeature"*
  br label %208

208:                                              ; preds = %203, %195
  %209 = phi i64 [ %204, %203 ], [ 0, %195 ]
  %210 = phi i8* [ %206, %203 ], [ null, %195 ]
  %211 = phi %"class.blink::UseCounterFeature"* [ %207, %203 ], [ null, %195 ]
  %212 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %211, i64 %186
  %213 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %211, i64 %209
  %214 = ptrtoint %"class.blink::UseCounterFeature"* %213 to i64
  %215 = bitcast %"class.blink::UseCounterFeature"* %212 to i64*
  %216 = load i64, i64* %7, align 8
  store i64 %216, i64* %215, align 4
  %217 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %212, i64 1
  %218 = ptrtoint %"class.blink::UseCounterFeature"* %217 to i64
  %219 = ptrtoint %"class.blink::UseCounterFeature"* %211 to i64
  %220 = icmp sgt i64 %185, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %208
  %222 = inttoptr i64 %184 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %210, i8* align 4 %222, i64 %185, i1 false) #9
  br label %223

223:                                              ; preds = %221, %208
  store i64 %219, i64* %16, align 8
  store i64 %218, i64* %15, align 8
  store i64 %214, i64* %17, align 8
  %224 = icmp eq i64 %184, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %223
  %226 = inttoptr i64 %184 to i8*
  call void @_ZdlPv(i8* %226) #10
  br label %227

227:                                              ; preds = %177, %223, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #9
  br label %228

228:                                              ; preds = %162, %227
  %229 = add nuw nsw i64 %163, 1
  %230 = icmp eq i64 %229, 697
  br i1 %230, label %160, label %162

231:                                              ; preds = %297, %160
  %232 = phi i64 [ 0, %160 ], [ %298, %297 ]
  %233 = lshr i64 %232, 6
  %234 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %1, i64 0, i32 3, i32 0, i32 0, i64 %233
  %235 = and i64 %232, 63
  %236 = shl i64 1, %235
  %237 = load i64, i64* %234, align 8
  %238 = and i64 %237, %236
  %239 = icmp eq i64 %238, 0
  br i1 %239, label %297, label %240

240:                                              ; preds = %231
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #9
  %241 = trunc i64 %232 to i32
  call void @_ZN5blink17UseCounterFeatureC1ENS_5mojom21UseCounterFeatureTypeEj(%"class.blink::UseCounterFeature"* nonnull %10, i32 3, i32 %241) #9
  %242 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %11, align 8
  %243 = load %"class.blink::UseCounterFeature"*, %"class.blink::UseCounterFeature"** %12, align 8
  %244 = icmp ult %"class.blink::UseCounterFeature"* %242, %243
  %245 = ptrtoint %"class.blink::UseCounterFeature"* %243 to i64
  br i1 %244, label %246, label %251

246:                                              ; preds = %240
  %247 = bitcast %"class.blink::UseCounterFeature"* %242 to i64*
  %248 = load i64, i64* %9, align 8
  store i64 %248, i64* %247, align 4
  %249 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %242, i64 1
  %250 = ptrtoint %"class.blink::UseCounterFeature"* %249 to i64
  store i64 %250, i64* %15, align 8
  br label %296

251:                                              ; preds = %240
  %252 = ptrtoint %"class.blink::UseCounterFeature"* %242 to i64
  %253 = load i64, i64* %16, align 8
  %254 = sub i64 %252, %253
  %255 = ashr exact i64 %254, 3
  %256 = add nsw i64 %255, 1
  %257 = icmp ugt i64 %256, 2305843009213693951
  br i1 %257, label %258, label %260

258:                                              ; preds = %251
  %259 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %259) #8
  unreachable

260:                                              ; preds = %251
  %261 = sub i64 %245, %253
  %262 = ashr exact i64 %261, 3
  %263 = icmp ult i64 %262, 1152921504606846975
  br i1 %263, label %264, label %272

264:                                              ; preds = %260
  %265 = ashr exact i64 %261, 2
  %266 = icmp ult i64 %265, %256
  %267 = select i1 %266, i64 %256, i64 %265
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %277, label %269

269:                                              ; preds = %264
  %270 = icmp ugt i64 %267, 2305843009213693951
  br i1 %270, label %271, label %272

271:                                              ; preds = %269
  call void @abort() #8
  unreachable

272:                                              ; preds = %269, %260
  %273 = phi i64 [ %267, %269 ], [ 2305843009213693951, %260 ]
  %274 = shl i64 %273, 3
  %275 = call i8* @_Znwm(i64 %274) #10
  %276 = bitcast i8* %275 to %"class.blink::UseCounterFeature"*
  br label %277

277:                                              ; preds = %272, %264
  %278 = phi i64 [ %273, %272 ], [ 0, %264 ]
  %279 = phi i8* [ %275, %272 ], [ null, %264 ]
  %280 = phi %"class.blink::UseCounterFeature"* [ %276, %272 ], [ null, %264 ]
  %281 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %280, i64 %255
  %282 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %280, i64 %278
  %283 = ptrtoint %"class.blink::UseCounterFeature"* %282 to i64
  %284 = bitcast %"class.blink::UseCounterFeature"* %281 to i64*
  %285 = load i64, i64* %9, align 8
  store i64 %285, i64* %284, align 4
  %286 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %281, i64 1
  %287 = ptrtoint %"class.blink::UseCounterFeature"* %286 to i64
  %288 = ptrtoint %"class.blink::UseCounterFeature"* %280 to i64
  %289 = icmp sgt i64 %254, 0
  br i1 %289, label %290, label %292

290:                                              ; preds = %277
  %291 = inttoptr i64 %253 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %279, i8* align 4 %291, i64 %254, i1 false) #9
  br label %292

292:                                              ; preds = %290, %277
  store i64 %288, i64* %16, align 8
  store i64 %287, i64* %15, align 8
  store i64 %283, i64* %17, align 8
  %293 = icmp eq i64 %253, 0
  br i1 %293, label %296, label %294

294:                                              ; preds = %292
  %295 = inttoptr i64 %253 to i8*
  call void @_ZdlPv(i8* %295) #10
  br label %296

296:                                              ; preds = %246, %292, %294
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #9
  br label %297

297:                                              ; preds = %231, %296
  %298 = add nuw nsw i64 %232, 1
  %299 = icmp eq i64 %298, 87
  br i1 %299, label %300, label %231

300:                                              ; preds = %297
  ret void
}

declare void @_ZN5blink17UseCounterFeatureC1ENS_5mojom21UseCounterFeatureTypeEj(%"class.blink::UseCounterFeature"*, i32, i32) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24UseCounterFeatureTracker15ResetForTestingERKNS_17UseCounterFeatureE(%"class.blink::UseCounterFeatureTracker"* nocapture, %"class.blink::UseCounterFeature"* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %37 [
    i32 0, label %5
    i32 1, label %11
    i32 2, label %17
    i32 3, label %23
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = lshr i64 %8, 6
  %10 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 0, i32 0, i32 0, i64 %9
  br label %29

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = lshr i64 %14, 6
  %16 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 1, i32 0, i32 0, i64 %15
  br label %29

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = lshr i64 %20, 6
  %22 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 2, i32 0, i32 0, i64 %21
  br label %29

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::UseCounterFeature", %"class.blink::UseCounterFeature"* %1, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = lshr i64 %26, 6
  %28 = getelementptr inbounds %"class.blink::UseCounterFeatureTracker", %"class.blink::UseCounterFeatureTracker"* %0, i64 0, i32 3, i32 0, i32 0, i64 %27
  br label %29

29:                                               ; preds = %23, %17, %11, %5
  %30 = phi i64 [ %8, %5 ], [ %14, %11 ], [ %20, %17 ], [ %26, %23 ]
  %31 = phi i64* [ %10, %5 ], [ %16, %11 ], [ %22, %17 ], [ %28, %23 ]
  %32 = and i64 %30, 63
  %33 = shl i64 1, %32
  %34 = xor i64 %33, -1
  %35 = load i64, i64* %31, align 8
  %36 = and i64 %35, %34
  store i64 %36, i64* %31, align 8
  br label %37

37:                                               ; preds = %29, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
