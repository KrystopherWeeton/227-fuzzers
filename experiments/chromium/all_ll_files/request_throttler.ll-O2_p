; ModuleID = '../../components/feed/core/v2/request_throttler.cc'
source_filename = "../../components/feed/core/v2/request_throttler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.feed::RequestThrottler" = type { %class.PrefService* }
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %class.scoped_refptr.21, %"class.base::RepeatingCallback.22", %class.scoped_refptr.23, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.12" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.21 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.22" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.23 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.24", %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.39", [4 x i8] }>
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26", %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i32* }
%"struct.feed::Config" = type { i32, i32, i32, i32, i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, %"class.base::TimeDelta", i64, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.base::TimeDelta", i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i64, i32, i8, %"class.base::internal::flat_tree" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { i32*, i32*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

@_ZN4feed16RequestThrottlerC1EP11PrefService = hidden unnamed_addr alias void (%"class.feed::RequestThrottler"*, %class.PrefService*), void (%"class.feed::RequestThrottler"*, %class.PrefService*)* @_ZN4feed16RequestThrottlerC2EP11PrefService

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4feed16RequestThrottlerC2EP11PrefService(%"class.feed::RequestThrottler"* nocapture, %class.PrefService*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.feed::RequestThrottler", %"class.feed::RequestThrottler"* %0, i64 0, i32 0
  store %class.PrefService* %1, %class.PrefService** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4feed16RequestThrottler12RequestQuotaENS_18NetworkRequestTypeE(%"class.feed::RequestThrottler"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  tail call void @_ZN4feed16RequestThrottler25ResetCountersIfDayChangedEv(%"class.feed::RequestThrottler"* %0)
  %5 = tail call dereferenceable(200) %"struct.feed::Config"* @_ZN4feed13GetFeedConfigEv() #8
  switch i32 %1, label %16 [
    i32 0, label %6
    i32 7, label %6
    i32 8, label %6
    i32 9, label %6
    i32 1, label %8
    i32 2, label %10
    i32 10, label %10
    i32 3, label %12
    i32 6, label %14
    i32 4, label %96
    i32 5, label %96
  ]

6:                                                ; preds = %2, %2, %2, %2
  %7 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %5, i64 0, i32 0
  br label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %5, i64 0, i32 2
  br label %17

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %5, i64 0, i32 1
  br label %17

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %5, i64 0, i32 4
  br label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.feed::Config", %"struct.feed::Config"* %5, i64 0, i32 3
  br label %17

16:                                               ; preds = %2
  unreachable

17:                                               ; preds = %6, %8, %10, %12, %14
  %18 = phi i32* [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ]
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %96, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.feed::RequestThrottler", %"class.feed::RequestThrottler"* %0, i64 0, i32 0
  %26 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %class.PrefService*, %class.PrefService** %25, align 8
  call void @_ZN4feed5prefs25GetThrottlerRequestCountsER11PrefService(%"class.std::__1::vector"* nonnull sret %3, %class.PrefService* dereferenceable(88) %27) #8
  %28 = sext i32 %1 to i64
  %29 = bitcast i32** %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.std::__1::vector"* %3 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 2
  %35 = icmp ugt i64 %34, %28
  %36 = inttoptr i64 %32 to i32*
  br i1 %35, label %41, label %37

37:                                               ; preds = %21
  %38 = add nuw nsw i64 %28, 1
  %39 = sub nsw i64 %38, %34
  call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* nonnull %3, i64 %39) #8
  %40 = load i32*, i32** %23, align 8
  br label %41

41:                                               ; preds = %37, %21
  %42 = phi i32* [ %40, %37 ], [ %36, %21 ]
  %43 = getelementptr inbounds i32, i32* %42, i64 %28
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, %19
  br i1 %45, label %46, label %88

46:                                               ; preds = %41
  %47 = add nsw i32 %44, 1
  store i32 %47, i32* %43, align 4
  %48 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #8
  %49 = load i64, i64* %29, align 8
  %50 = load i64, i64* %31, align 8
  %51 = sub i64 %49, %50
  %52 = ashr exact i64 %51, 2
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %76, label %54

54:                                               ; preds = %46
  %55 = icmp ugt i64 %52, 4611686018427387903
  br i1 %55, label %56, label %58

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %57) #9
  unreachable

58:                                               ; preds = %54
  %59 = call i8* @_Znwm(i64 %51) #10
  %60 = bitcast i8* %59 to i32*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %62 = bitcast i32** %61 to i8**
  store i8* %59, i8** %62, align 8
  %63 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %59, i8** %63, align 8
  %64 = getelementptr inbounds i32, i32* %60, i64 %52
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %64, i32** %65, align 8
  %66 = bitcast i32** %61 to i64*
  %67 = ptrtoint i8* %59 to i64
  %68 = icmp sgt i64 %51, 0
  br i1 %68, label %69, label %74

69:                                               ; preds = %58
  %70 = lshr exact i64 %51, 2
  %71 = inttoptr i64 %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %59, i8* align 4 %71, i64 %51, i1 false) #8
  %72 = getelementptr inbounds i32, i32* %60, i64 %70
  %73 = ptrtoint i32* %72 to i64
  br label %74

74:                                               ; preds = %69, %58
  %75 = phi i64 [ %73, %69 ], [ %67, %58 ]
  store i64 %75, i64* %66, align 8
  br label %76

76:                                               ; preds = %46, %74
  %77 = load %class.PrefService*, %class.PrefService** %25, align 8
  call void @_ZN4feed5prefs25SetThrottlerRequestCountsENSt3__16vectorIiNS1_9allocatorIiEEEER11PrefService(%"class.std::__1::vector"* nonnull %4, %class.PrefService* dereferenceable(88) %77) #8
  %78 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %79 = load i32*, i32** %78, align 8
  %80 = icmp eq i32* %79, null
  br i1 %80, label %86, label %81

81:                                               ; preds = %76
  %82 = ptrtoint i32* %79 to i64
  %83 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %84 = bitcast i32** %83 to i64*
  store i64 %82, i64* %84, align 8
  %85 = bitcast i32* %79 to i8*
  call void @_ZdlPv(i8* %85) #10
  br label %86

86:                                               ; preds = %76, %81
  %87 = load i32*, i32** %23, align 8
  br label %88

88:                                               ; preds = %86, %41
  %89 = phi i32* [ %87, %86 ], [ %42, %41 ]
  %90 = phi i1 [ true, %86 ], [ false, %41 ]
  %91 = icmp eq i32* %89, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %88
  %93 = ptrtoint i32* %89 to i64
  store i64 %93, i64* %29, align 8
  %94 = bitcast i32* %89 to i8*
  call void @_ZdlPv(i8* %94) #10
  br label %95

95:                                               ; preds = %88, %92
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8
  br label %96

96:                                               ; preds = %2, %2, %17, %95
  %97 = phi i1 [ %90, %95 ], [ true, %17 ], [ true, %2 ], [ true, %2 ]
  ret i1 %97
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4feed16RequestThrottler25ResetCountersIfDayChangedEv(%"class.feed::RequestThrottler"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::TimeDelta", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::Time", align 8
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.base::Time"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %4, i64 0, i32 0, i32 0
  %9 = tail call i64 @_ZN4base4Time3NowEv() #8
  store i64 %9, i64* %8, align 8
  %10 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.feed::RequestThrottler", %"class.feed::RequestThrottler"* %0, i64 0, i32 0
  %12 = load %class.PrefService*, %class.PrefService** %11, align 8
  %13 = tail call i64 @_ZN4feed5prefs18GetLastRequestTimeER11PrefService(%class.PrefService* dereferenceable(88) %12) #8
  %14 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = tail call i64 @_ZN4base4Time9UnixEpochEv() #8
  %16 = icmp slt i64 %13, %15
  %17 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  br i1 %16, label %23, label %18

18:                                               ; preds = %1
  %19 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %5, i1 zeroext true) #8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %3) #8
  %22 = load i64, i64* %8, align 8
  br label %23

23:                                               ; preds = %1, %18
  %24 = phi i64 [ %22, %18 ], [ %9, %1 ]
  %25 = phi i32 [ %21, %18 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %26 = call i64 @_ZN4base4Time9UnixEpochEv() #8
  %27 = icmp slt i64 %24, %26
  %28 = bitcast %"class.base::TimeDelta"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  br i1 %27, label %34, label %29

29:                                               ; preds = %23
  %30 = call i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"* nonnull %4, i1 zeroext true) #8
  %31 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %2, i64 0, i32 0
  store i64 %30, i64* %31, align 8
  %32 = call i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"* nonnull %2) #8
  %33 = load i64, i64* %8, align 8
  br label %34

34:                                               ; preds = %23, %29
  %35 = phi i64 [ %33, %29 ], [ %24, %23 ]
  %36 = phi i32 [ %32, %29 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  %37 = icmp eq i32 %25, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  %38 = load %class.PrefService*, %class.PrefService** %11, align 8
  call void @_ZN4feed5prefs18SetLastRequestTimeEN4base4TimeER11PrefService(i64 %35, %class.PrefService* dereferenceable(88) %38) #8
  br i1 %37, label %50, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #8
  %41 = load %class.PrefService*, %class.PrefService** %11, align 8
  call void @_ZN4feed5prefs25SetThrottlerRequestCountsENSt3__16vectorIiNS1_9allocatorIiEEEER11PrefService(%"class.std::__1::vector"* nonnull %6, %class.PrefService* dereferenceable(88) %41) #8
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %39
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %39, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4feed5prefs25GetThrottlerRequestCountsER11PrefService(%"class.std::__1::vector"* sret, %class.PrefService* dereferenceable(88)) local_unnamed_addr #3

declare void @_ZN4feed5prefs25SetThrottlerRequestCountsENSt3__16vectorIiNS1_9allocatorIiEEEER11PrefService(%"class.std::__1::vector"*, %class.PrefService* dereferenceable(88)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #3

declare i64 @_ZN4feed5prefs18GetLastRequestTimeER11PrefService(%class.PrefService* dereferenceable(88)) local_unnamed_addr #3

declare void @_ZN4feed5prefs18SetLastRequestTimeEN4base4TimeER11PrefService(i64, %class.PrefService* dereferenceable(88)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare dereferenceable(200) %"struct.feed::Config"* @_ZN4feed13GetFeedConfigEv() local_unnamed_addr #3

declare i64 @_ZN4base4Time9UnixEpochEv() local_unnamed_addr #3

declare i32 @_ZNK4base9TimeDelta6InDaysEv(%"class.base::TimeDelta"*) local_unnamed_addr #3

declare i64 @_ZNK4base4Time8MidnightEb(%"class.base::Time"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #9
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #9
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
