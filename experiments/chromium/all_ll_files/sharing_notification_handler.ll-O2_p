; ModuleID = '../../chrome/browser/sharing/sharing_notification_handler.cc'
source_filename = "../../chrome/browser/sharing/sharing_notification_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SharingNotificationHandler = type { %class.NotificationHandler }
%class.NotificationHandler = type { i32 (...)** }
%class.Profile = type { %"class.content::BrowserContext", %"class.std::__1::unique_ptr.7", i8, i8, i32, %"class.base::ObserverList", %"class.std::__1::unique_ptr.24" }
%"class.content::BrowserContext" = type { %"class.base::SupportsUserData.base", %"class.std::__1::unique_ptr" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.content::BrowserContext::Impl"* }
%"class.content::BrowserContext::Impl" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.content::ResourceContext"* }
%"class.content::ResourceContext" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.19" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.variations::VariationsClient"* }
%"class.variations::VariationsClient" = type opaque
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.35" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.GURL* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.41 }
%union.anon.41 = type { i32 }
%"class.absl::optional.42" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.43 }
%class.scoped_refptr.43 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.44", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.44" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.SharingService = type { %class.KeyedService, %"class.syncer::SyncServiceObserver", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.syncer::SyncService"*, %"class.net::BackoffEntry", i32, %"class.std::__1::map.143", %"class.base::WeakPtrFactory.152" }
%class.KeyedService = type { i32 (...)** }
%"class.syncer::SyncServiceObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %class.SharingSyncPreference* }
%class.SharingSyncPreference = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.VapidKeyManager* }
%class.VapidKeyManager = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.SharingDeviceRegistration* }
%class.SharingDeviceRegistration = type { i32 (...)**, %class.PrefService*, %class.SharingSyncPreference*, %class.VapidKeyManager*, %"class.instance_id::InstanceIDDriver"*, %"class.syncer::SyncService"*, %"class.absl::optional.60", %"class.base::WeakPtrFactory" }
%class.PrefService = type opaque
%"class.instance_id::InstanceIDDriver" = type opaque
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.74 }
%class.scoped_refptr.74 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %class.SharingMessageSender* }
%class.SharingMessageSender = type { i32 (...)**, %"class.syncer::LocalDeviceInfoProvider"*, %"class.std::__1::map.81", %"class.std::__1::map.92", %"class.std::__1::map.101", %"class.std::__1::map.110", %"class.base::WeakPtrFactory.121" }
%"class.syncer::LocalDeviceInfoProvider" = type opaque
%"class.std::__1::map.81" = type { %"class.std::__1::__tree.82" }
%"class.std::__1::__tree.82" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.92" = type { %"class.std::__1::__tree.93" }
%"class.std::__1::__tree.93" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.94", %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.101" = type { %"class.std::__1::__tree.102" }
%"class.std::__1::__tree.102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.110" = type { %"class.std::__1::__tree.111" }
%"class.std::__1::__tree.111" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.112", %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.121" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %class.SharingDeviceSource* }
%class.SharingDeviceSource = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %class.SharingHandlerRegistry* }
%class.SharingHandlerRegistry = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %class.SharingFCMHandler* }
%class.SharingFCMHandler = type opaque
%"class.syncer::SyncService" = type opaque
%"class.net::BackoffEntry" = type { i32 (...)**, %"class.base::TimeTicks", i32, %"struct.net::BackoffEntry::Policy"*, %"class.base::TickClock"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"struct.net::BackoffEntry::Policy" = type { i32, i32, double, double, i64, i64, i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.std::__1::map.143" = type { %"class.std::__1::__tree.144" }
%"class.std::__1::__tree.144" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.145", %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.base::WeakPtrFactory.152" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.NotificationDisplayService = type { %class.KeyedService }

@_ZTV26SharingNotificationHandler = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SharingNotificationHandler*)* @_ZN26SharingNotificationHandlerD2Ev to i8*), i8* bitcast (void (%class.SharingNotificationHandler*)* @_ZN26SharingNotificationHandlerD0Ev to i8*), i8* bitcast (void (%class.NotificationHandler*, %class.Profile*, %"class.std::__1::basic_string"*)* @_ZN19NotificationHandler6OnShowEP7ProfileRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (void (%class.SharingNotificationHandler*, %class.Profile*, %class.GURL*, %"class.std::__1::basic_string"*, i1, %"class.base::OnceCallback"*)* @_ZN26SharingNotificationHandler7OnCloseEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%class.SharingNotificationHandler*, %class.Profile*, %class.GURL*, %"class.std::__1::basic_string"*, %"class.absl::optional"*, %"class.absl::optional.42"*, %"class.base::OnceCallback"*)* @_ZN26SharingNotificationHandler7OnClickEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKN4absl8optionalIiEERKNSF_INS6_IDsNS7_IDsEENS9_IDsEEEEEEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%class.NotificationHandler*, %class.Profile*, %class.GURL*)* @_ZN19NotificationHandler20DisableNotificationsEP7ProfileRK4GURL to i8*), i8* bitcast (void (%class.SharingNotificationHandler*, %class.Profile*, %class.GURL*)* @_ZN26SharingNotificationHandler12OpenSettingsEP7ProfileRK4GURL to i8*)] }, align 8

@_ZN26SharingNotificationHandlerC1Ev = hidden unnamed_addr alias void (%class.SharingNotificationHandler*), void (%class.SharingNotificationHandler*)* @_ZN26SharingNotificationHandlerC2Ev
@_ZN26SharingNotificationHandlerD1Ev = hidden unnamed_addr alias void (%class.SharingNotificationHandler*), void (%class.SharingNotificationHandler*)* @_ZN26SharingNotificationHandlerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN26SharingNotificationHandlerC2Ev(%class.SharingNotificationHandler* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SharingNotificationHandler, %class.SharingNotificationHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV26SharingNotificationHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SharingNotificationHandlerD2Ev(%class.SharingNotificationHandler*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SharingNotificationHandler, %class.SharingNotificationHandler* %0, i64 0, i32 0
  tail call void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SharingNotificationHandlerD0Ev(%class.SharingNotificationHandler*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SharingNotificationHandler, %class.SharingNotificationHandler* %0, i64 0, i32 0
  tail call void @_ZN19NotificationHandlerD2Ev(%class.NotificationHandler* %2) #7
  %3 = bitcast %class.SharingNotificationHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SharingNotificationHandler7OnClickEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKN4absl8optionalIiEERKNSF_INS6_IDsNS7_IDsEENS9_IDsEEEEEEN4base12OnceCallbackIFvvEEE(%class.SharingNotificationHandler* nocapture readnone, %class.Profile*, %class.GURL* nocapture readnone dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %"class.absl::optional"* nocapture readonly dereferenceable(8), %"class.absl::optional.42"* nocapture readnone, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %8 = alloca i64, align 8
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::RepeatingCallback", align 8
  %11 = bitcast %"class.base::RepeatingCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %12, align 8
  %13 = getelementptr inbounds %class.Profile, %class.Profile* %1, i64 0, i32 0
  %14 = tail call %class.SharingService* @_ZN21SharingServiceFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %13) #7
  call void @_ZNK14SharingService28GetNotificationActionHandlerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.base::RepeatingCallback"* nonnull sret %10, %class.SharingService* %14, %"class.std::__1::basic_string"* dereferenceable(24) %3) #7
  %15 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0, i32 0
  %16 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %12, align 8
  %17 = icmp eq %"class.base::internal::BindStateBase"* %16, null
  br i1 %17, label %26, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.absl::optional"* %4 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = bitcast i64* %8 to %"class.absl::optional"*
  store i64 %20, i64* %8, align 8
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %16, %"class.absl::optional"* nonnull dereferenceable(8) %22, i1 zeroext false) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  br label %32

26:                                               ; preds = %7
  %27 = call %class.NotificationDisplayService* @_ZN33NotificationDisplayServiceFactory13GetForProfileEP7Profile(%class.Profile* %1) #7
  %28 = bitcast %class.NotificationDisplayService* %27 to void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)***
  %29 = load void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)**, void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)*** %28, align 8
  %30 = getelementptr inbounds void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)*, void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)** %29, i64 4
  %31 = load void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)*, void (%class.NotificationDisplayService*, i32, %"class.std::__1::basic_string"*)** %30, align 8
  call void %31(%class.NotificationDisplayService* %27, i32 6, %"class.std::__1::basic_string"* dereferenceable(24) %3) #7
  br label %32

32:                                               ; preds = %26, %18
  %33 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  %39 = inttoptr i64 %36 to %"class.base::internal::BindStateBase"*
  %40 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %39, i64 0, i32 1
  %41 = bitcast void ()** %40 to void (%"class.base::internal::BindStateBase"*)**
  %42 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %41, align 8
  call void %42(%"class.base::internal::BindStateBase"* %39) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %class.SharingService* @_ZN21SharingServiceFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"*) local_unnamed_addr #5

declare void @_ZNK14SharingService28GetNotificationActionHandlerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.base::RepeatingCallback"* sret, %class.SharingService*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5

declare %class.NotificationDisplayService* @_ZN33NotificationDisplayServiceFactory13GetForProfileEP7Profile(%class.Profile*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SharingNotificationHandler7OnCloseEP7ProfileRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEbN4base12OnceCallbackIFvvEEE(%class.SharingNotificationHandler* nocapture readnone, %class.Profile*, %class.GURL* nocapture readnone dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext, %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %7 = alloca i64, align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.base::RepeatingCallback", align 8
  %10 = bitcast %"class.base::RepeatingCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %11, align 8
  %12 = getelementptr inbounds %class.Profile, %class.Profile* %1, i64 0, i32 0
  %13 = tail call %class.SharingService* @_ZN21SharingServiceFactory20GetForBrowserContextEPN7content14BrowserContextE(%"class.content::BrowserContext"* %12) #7
  call void @_ZNK14SharingService28GetNotificationActionHandlerERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.base::RepeatingCallback"* nonnull sret %9, %class.SharingService* %13, %"class.std::__1::basic_string"* dereferenceable(24) %3) #7
  %14 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %9, i64 0, i32 0, i32 0
  %15 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %11, align 8
  %16 = icmp eq %"class.base::internal::BindStateBase"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %6
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast i64* %7 to %"class.absl::optional"*
  store i64 0, i64* %7, align 8
  %20 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %15, i64 0, i32 1
  %21 = bitcast void ()** %20 to void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)**
  %22 = load void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)*, void (%"class.base::internal::BindStateBase"*, %"class.absl::optional"*, i1)** %21, align 8
  call void %22(%"class.base::internal::BindStateBase"* nonnull %15, %"class.absl::optional"* nonnull dereferenceable(8) %19, i1 zeroext true) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %23

23:                                               ; preds = %6, %17
  %24 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #7
  %25 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.base::OnceCallback"* %5 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %27, i64* %28, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %25, align 8
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %30 = inttoptr i64 %27 to %"class.base::internal::BindStateBase"*
  %31 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %30, i64 0, i32 1
  %32 = bitcast void ()** %31 to void (%"class.base::internal::BindStateBase"*)**
  %33 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %32, align 8
  call void %33(%"class.base::internal::BindStateBase"* %30) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #7
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN26SharingNotificationHandler12OpenSettingsEP7ProfileRK4GURL(%class.SharingNotificationHandler* nocapture, %class.Profile* nocapture, %class.GURL* nocapture dereferenceable(120)) unnamed_addr #6 align 2 {
  ret void
}

declare void @_ZN19NotificationHandler6OnShowEP7ProfileRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%class.NotificationHandler*, %class.Profile*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #5

declare void @_ZN19NotificationHandler20DisableNotificationsEP7ProfileRK4GURL(%class.NotificationHandler*, %class.Profile*, %class.GURL* dereferenceable(120)) unnamed_addr #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
