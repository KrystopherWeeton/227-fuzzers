; ModuleID = '../../cc/paint/paint_worklet_input.cc'
source_filename = "../../cc/paint/paint_worklet_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional", %"class.absl::optional.2", %"struct.cc::ElementId" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::PaintWorkletInput::PropertyValue" = type { %"class.absl::optional.7", %"class.absl::optional.12" }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { float }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN2cc17PaintWorkletInput11PropertyKeyC1ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9ElementIdE = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::basic_string"*, i64), void (%"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::basic_string"*, i64)* @_ZN2cc17PaintWorkletInput11PropertyKeyC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9ElementIdE
@_ZN2cc17PaintWorkletInput11PropertyKeyC1ENS0_18NativePropertyTypeENS_9ElementIdE = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyKey"*, i32, i64), void (%"struct.cc::PaintWorkletInput::PropertyKey"*, i32, i64)* @_ZN2cc17PaintWorkletInput11PropertyKeyC2ENS0_18NativePropertyTypeENS_9ElementIdE
@_ZN2cc17PaintWorkletInput11PropertyKeyC1ERKS1_ = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*), void (%"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*)* @_ZN2cc17PaintWorkletInput11PropertyKeyC2ERKS1_
@_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyKey"*), void (%"struct.cc::PaintWorkletInput::PropertyKey"*)* @_ZN2cc17PaintWorkletInput11PropertyKeyD2Ev
@_ZN2cc17PaintWorkletInput13PropertyValueC1Ev = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyValue"*), void (%"struct.cc::PaintWorkletInput::PropertyValue"*)* @_ZN2cc17PaintWorkletInput13PropertyValueC2Ev
@_ZN2cc17PaintWorkletInput13PropertyValueC1Ef = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyValue"*, float), void (%"struct.cc::PaintWorkletInput::PropertyValue"*, float)* @_ZN2cc17PaintWorkletInput13PropertyValueC2Ef
@_ZN2cc17PaintWorkletInput13PropertyValueC1Ej = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyValue"*, i32), void (%"struct.cc::PaintWorkletInput::PropertyValue"*, i32)* @_ZN2cc17PaintWorkletInput13PropertyValueC2Ej
@_ZN2cc17PaintWorkletInput13PropertyValueC1ERKS1_ = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyValue"*, %"struct.cc::PaintWorkletInput::PropertyValue"*), void (%"struct.cc::PaintWorkletInput::PropertyValue"*, %"struct.cc::PaintWorkletInput::PropertyValue"*)* @_ZN2cc17PaintWorkletInput13PropertyValueC2ERKS1_
@_ZN2cc17PaintWorkletInput13PropertyValueD1Ev = hidden unnamed_addr alias void (%"struct.cc::PaintWorkletInput::PropertyValue"*), void (%"struct.cc::PaintWorkletInput::PropertyValue"*)* @_ZN2cc17PaintWorkletInput13PropertyValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput11PropertyKeyC2ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_9ElementIdE(%"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #11
  br label %18

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* %15, i64 %17) #11
  br label %18

18:                                               ; preds = %10, %13
  %19 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %20, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput11PropertyKeyC2ENS0_18NativePropertyTypeENS_9ElementIdE(%"struct.cc::PaintWorkletInput::PropertyKey"* nocapture, i32, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %union.anon* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 2, i32 0
  store i64 %2, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput11PropertyKeyC2ERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #11
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %23, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %7
  %15 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %16 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #11
  br label %22

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %9, i8* %19, i64 %21) #11
  br label %22

22:                                               ; preds = %17, %14
  store i8 1, i8* %3, align 8
  br label %23

23:                                               ; preds = %2, %22
  %24 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput11PropertyKeyD2Ev(%"struct.cc::PaintWorkletInput::PropertyKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17PaintWorkletInput11PropertyKeyeqERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly, %"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %67, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = icmp eq i8 %7, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %12
  tail call void @llvm.trap() #11
  unreachable

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp eq i64 %25, %33
  br i1 %34, label %35, label %94

35:                                               ; preds = %16
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %39 = select i1 %21, i8* %37, i8* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %43 = select i1 %29, i8* %41, i8* %42
  %44 = icmp eq i64 %25, 0
  br i1 %21, label %51, label %45

45:                                               ; preds = %35
  br i1 %44, label %68, label %46

46:                                               ; preds = %45
  %47 = ptrtoint i8* %37 to i64
  %48 = trunc i64 %47 to i8
  %49 = load i8, i8* %43, align 1
  %50 = icmp eq i8 %49, %48
  br i1 %50, label %55, label %94

51:                                               ; preds = %35
  br i1 %44, label %68, label %52

52:                                               ; preds = %51
  %53 = tail call i32 @bcmp(i8* %39, i8* %43, i64 %25) #11
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %68, label %94

55:                                               ; preds = %46, %62
  %56 = phi i64 [ %59, %62 ], [ %24, %46 ]
  %57 = phi i8* [ %60, %62 ], [ %38, %46 ]
  %58 = phi i8* [ %63, %62 ], [ %43, %46 ]
  %59 = add i64 %56, -1
  %60 = getelementptr inbounds i8, i8* %57, i64 1
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  %64 = load i8, i8* %60, align 1
  %65 = load i8, i8* %63, align 1
  %66 = icmp eq i8 %64, %65
  br i1 %66, label %55, label %94

67:                                               ; preds = %2
  br i1 %9, label %94, label %68

68:                                               ; preds = %55, %67, %45, %51, %52
  %69 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp ne i8 %70, 0
  %72 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp ne i8 %73, 0
  %75 = xor i1 %71, %74
  %76 = xor i1 %71, true
  %77 = or i1 %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %68
  %79 = icmp eq i8 %73, 0
  br i1 %79, label %80, label %81, !prof !3

80:                                               ; preds = %78
  tail call void @llvm.trap() #11
  unreachable

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %88, label %94

87:                                               ; preds = %68
  br i1 %75, label %94, label %88

88:                                               ; preds = %87, %81
  %89 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 2, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 2, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %90, %92
  br label %94

94:                                               ; preds = %62, %46, %67, %87, %16, %81, %52, %88
  %95 = phi i1 [ false, %87 ], [ false, %67 ], [ %93, %88 ], [ false, %52 ], [ false, %81 ], [ false, %16 ], [ false, %46 ], [ false, %62 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17PaintWorkletInput11PropertyKeyneERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly, %"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK2cc17PaintWorkletInput11PropertyKeyeqERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"* %0, %"struct.cc::PaintWorkletInput::PropertyKey"* dereferenceable(48) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc17PaintWorkletInput11PropertyKeyltERKS1_(%"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly, %"struct.cc::PaintWorkletInput::PropertyKey"* nocapture readonly dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  br i1 %5, label %10, label %9

9:                                                ; preds = %2
  br i1 %8, label %11, label %115

10:                                               ; preds = %2
  br i1 %8, label %115, label %91

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = icmp eq i64 %21, %29
  br i1 %30, label %31, label %69

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %35 = select i1 %17, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %39 = select i1 %25, i8* %37, i8* %38
  %40 = icmp eq i64 %21, 0
  br i1 %17, label %47, label %41

41:                                               ; preds = %31
  br i1 %40, label %63, label %42

42:                                               ; preds = %41
  %43 = ptrtoint i8* %33 to i64
  %44 = trunc i64 %43 to i8
  %45 = load i8, i8* %39, align 1
  %46 = icmp eq i8 %45, %44
  br i1 %46, label %48, label %69

47:                                               ; preds = %31
  br i1 %40, label %63, label %60

48:                                               ; preds = %42, %55
  %49 = phi i64 [ %52, %55 ], [ %20, %42 ]
  %50 = phi i8* [ %53, %55 ], [ %34, %42 ]
  %51 = phi i8* [ %56, %55 ], [ %39, %42 ]
  %52 = add i64 %49, -1
  %53 = getelementptr inbounds i8, i8* %50, i64 1
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds i8, i8* %51, i64 1
  %57 = load i8, i8* %53, align 1
  %58 = load i8, i8* %56, align 1
  %59 = icmp eq i8 %57, %58
  br i1 %59, label %48, label %69

60:                                               ; preds = %47
  %61 = tail call i32 @bcmp(i8* %35, i8* %39, i64 %21) #11
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %48, %41, %47, %60
  %64 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 2, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 2, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %65, %67
  br label %115

69:                                               ; preds = %55, %42, %11, %60
  %70 = icmp ult i64 %29, %21
  %71 = select i1 %70, i64 %29, i64 %21
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %77 = select i1 %17, i8* %75, i8* %76
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %81 = select i1 %25, i8* %79, i8* %80
  %82 = tail call i32 @memcmp(i8* %77, i8* %81, i64 %71) #11
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %88

84:                                               ; preds = %73, %69
  %85 = icmp ult i64 %21, %29
  %86 = zext i1 %70 to i32
  %87 = select i1 %85, i32 -1, i32 %86
  br label %88

88:                                               ; preds = %73, %84
  %89 = phi i32 [ %87, %84 ], [ %82, %73 ]
  %90 = icmp slt i32 %89, 0
  br label %115

91:                                               ; preds = %10
  %92 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %93 = load i8, i8* %92, align 4, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %91
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 4, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %96
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

103:                                              ; preds = %96
  %104 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %98, %105
  br i1 %106, label %107, label %113

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %0, i64 0, i32 2, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %1, i64 0, i32 2, i32 0
  %111 = load i64, i64* %110, align 8
  %112 = icmp ult i64 %109, %111
  br label %115

113:                                              ; preds = %103
  %114 = icmp slt i32 %98, %105
  br label %115

115:                                              ; preds = %10, %9, %113, %107, %88, %63
  %116 = phi i1 [ %68, %63 ], [ %90, %88 ], [ %112, %107 ], [ %114, %113 ], [ true, %9 ], [ false, %10 ]
  ret i1 %116
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValueC2Ev(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValueC2Ef(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture, float) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store float %1, float* %4, align 4
  %5 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValueC2Ej(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 %1, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValueC2ERKS1_(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture, %"struct.cc::PaintWorkletInput::PropertyValue"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValueD2Ev(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc17PaintWorkletInput13PropertyValue9has_valueEv(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc17PaintWorkletInput13PropertyValue5resetEv(%"struct.cc::PaintWorkletInput::PropertyValue"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 4
  %3 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyValue", %"struct.cc::PaintWorkletInput::PropertyValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %3, align 4
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
