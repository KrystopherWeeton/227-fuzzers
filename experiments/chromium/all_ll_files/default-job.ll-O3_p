; ModuleID = '../../v8/src/libplatform/default-job.cc'
source_filename = "../../v8/src/libplatform/default-job.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.v8::platform::DefaultJobState::JobDelegate" = type <{ %"class.v8::JobDelegate", %"class.v8::platform::DefaultJobState"*, i8, i8, [6 x i8] }>
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.v8::platform::DefaultJobState" = type <{ i32 (...)**, %"class.std::__1::enable_shared_from_this", %"class.v8::Platform"*, %"class.std::__1::unique_ptr", %"class.v8::base::Mutex", i8, [7 x i8], i64, i64, %"struct.std::__1::atomic", [7 x i8], i64, %"class.v8::base::ConditionVariable", %"struct.std::__1::atomic.3", [4 x i8] }>
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::platform::DefaultJobState"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.v8::Platform" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::JobTask"* }
%"class.v8::JobTask" = type { i32 (...)** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.1 = type { i64 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i32 }
%"class.v8::platform::DefaultJobHandle" = type { %"class.v8::JobHandle", %"class.std::__1::shared_ptr" }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.v8::platform::DefaultJobState"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Task" = type { i32 (...)** }
%"class.v8::platform::DefaultJobWorker" = type { %"class.v8::Task", %"class.std::__1::weak_ptr", %"class.v8::JobTask"* }

$_ZN2v88platform15DefaultJobState11JobDelegate11ShouldYieldEv = comdat any

$_ZN2v88platform15DefaultJobState11JobDelegate25NotifyConcurrencyIncreaseEv = comdat any

$_ZNK2v88platform15DefaultJobState11JobDelegate15IsJoiningThreadEv = comdat any

$_ZN2v88platform16DefaultJobHandle25NotifyConcurrencyIncreaseEv = comdat any

$_ZN2v88platform16DefaultJobHandle7IsValidEv = comdat any

$_ZNK2v88platform16DefaultJobHandle21UpdatePriorityEnabledEv = comdat any

$_ZNSt3__120__throw_bad_weak_ptrEv = comdat any

$_ZN2v88platform16DefaultJobWorkerD2Ev = comdat any

$_ZN2v88platform16DefaultJobWorkerD0Ev = comdat any

$_ZN2v88platform16DefaultJobWorker3RunEv = comdat any

$_ZTVN2v88platform16DefaultJobWorkerE = comdat any

@_ZTVN2v88platform15DefaultJobState11JobDelegateE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i1 (%"class.v8::platform::DefaultJobState::JobDelegate"*)* @_ZN2v88platform15DefaultJobState11JobDelegate11ShouldYieldEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobState::JobDelegate"*)* @_ZN2v88platform15DefaultJobState11JobDelegate25NotifyConcurrencyIncreaseEv to i8*), i8* bitcast (i8 (%"class.v8::platform::DefaultJobState::JobDelegate"*)* @_ZN2v88platform15DefaultJobState11JobDelegate9GetTaskIdEv to i8*), i8* bitcast (i1 (%"class.v8::platform::DefaultJobState::JobDelegate"*)* @_ZNK2v88platform15DefaultJobState11JobDelegate15IsJoiningThreadEv to i8*)] }, align 8
@_ZTVN2v88platform15DefaultJobStateE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::platform::DefaultJobState"*)* @_ZN2v88platform15DefaultJobStateD2Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobState"*)* @_ZN2v88platform15DefaultJobStateD0Ev to i8*)] }, align 8
@_ZTVN2v88platform16DefaultJobHandleE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandleD2Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandleD0Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle25NotifyConcurrencyIncreaseEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle4JoinEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle6CancelEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle15CancelAndDetachEv to i8*), i8* bitcast (i1 (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle8IsActiveEv to i8*), i8* bitcast (i1 (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandle7IsValidEv to i8*), i8* bitcast (i1 (%"class.v8::platform::DefaultJobHandle"*)* @_ZNK2v88platform16DefaultJobHandle21UpdatePriorityEnabledEv to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobHandle"*, i8)* @_ZN2v88platform16DefaultJobHandle14UpdatePriorityENS_12TaskPriorityE to i8*)] }, align 8
@_ZTVN2v88platform16DefaultJobWorkerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::platform::DefaultJobWorker"*)* @_ZN2v88platform16DefaultJobWorkerD2Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobWorker"*)* @_ZN2v88platform16DefaultJobWorkerD0Ev to i8*), i8* bitcast (void (%"class.v8::platform::DefaultJobWorker"*)* @_ZN2v88platform16DefaultJobWorker3RunEv to i8*)] }, comdat, align 8

@_ZN2v88platform15DefaultJobState11JobDelegateD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::DefaultJobState::JobDelegate"*), void (%"class.v8::platform::DefaultJobState::JobDelegate"*)* @_ZN2v88platform15DefaultJobState11JobDelegateD2Ev
@_ZN2v88platform15DefaultJobStateC1EPNS_8PlatformENSt3__110unique_ptrINS_7JobTaskENS4_14default_deleteIS6_EEEENS_12TaskPriorityEm = hidden unnamed_addr alias void (%"class.v8::platform::DefaultJobState"*, %"class.v8::Platform"*, %"class.v8::JobTask"*, i8, i64), void (%"class.v8::platform::DefaultJobState"*, %"class.v8::Platform"*, %"class.v8::JobTask"*, i8, i64)* @_ZN2v88platform15DefaultJobStateC2EPNS_8PlatformENSt3__110unique_ptrINS_7JobTaskENS4_14default_deleteIS6_EEEENS_12TaskPriorityEm
@_ZN2v88platform15DefaultJobStateD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::DefaultJobState"*), void (%"class.v8::platform::DefaultJobState"*)* @_ZN2v88platform15DefaultJobStateD2Ev
@_ZN2v88platform16DefaultJobHandleC1ENSt3__110shared_ptrINS0_15DefaultJobStateEEE = hidden unnamed_addr alias void (%"class.v8::platform::DefaultJobHandle"*, %"class.v8::platform::DefaultJobState"*, %"class.std::__1::__shared_weak_count"*), void (%"class.v8::platform::DefaultJobHandle"*, %"class.v8::platform::DefaultJobState"*, %"class.std::__1::__shared_weak_count"*)* @_ZN2v88platform16DefaultJobHandleC2ENSt3__110shared_ptrINS0_15DefaultJobStateEEE
@_ZN2v88platform16DefaultJobHandleD1Ev = hidden unnamed_addr alias void (%"class.v8::platform::DefaultJobHandle"*), void (%"class.v8::platform::DefaultJobHandle"*)* @_ZN2v88platform16DefaultJobHandleD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState11JobDelegateD2Ev(%"class.v8::platform::DefaultJobState::JobDelegate"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, -1
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 1
  %8 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %7, align 8
  %9 = zext i8 %4 to i32
  %10 = shl i32 1, %9
  %11 = xor i32 %10, -1
  %12 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %8, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw and i32* %12, i32 %11 release
  br label %14

14:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState13ReleaseTaskIdEh(%"class.v8::platform::DefaultJobState"* nocapture, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i8 %1 to i32
  %4 = shl i32 1, %3
  %5 = xor i32 %4, -1
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw and i32* %6, i32 %5 release
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88platform15DefaultJobState11JobDelegate9GetTaskIdEv(%"class.v8::platform::DefaultJobState::JobDelegate"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, -1
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 1
  %7 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %7, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = xor i32 %9, -1
  %11 = tail call i32 @llvm.cttz.i32(i32 %10, i1 false) #11, !range !2
  %12 = shl i32 1, %11
  %13 = or i32 %12, %9
  %14 = cmpxchg weak i32* %8, i32 %9, i32 %13 acquire monotonic
  %15 = extractvalue { i32, i1 } %14, 1
  br i1 %15, label %25, label %16

16:                                               ; preds = %5, %16
  %17 = phi { i32, i1 } [ %23, %16 ], [ %14, %5 ]
  %18 = extractvalue { i32, i1 } %17, 0
  %19 = xor i32 %18, -1
  %20 = tail call i32 @llvm.cttz.i32(i32 %19, i1 false) #11, !range !2
  %21 = shl i32 1, %20
  %22 = or i32 %21, %18
  %23 = cmpxchg weak i32* %8, i32 %18, i32 %22 acquire monotonic
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %25, label %16

25:                                               ; preds = %16, %5
  %26 = phi i32 [ %11, %5 ], [ %20, %16 ]
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %2, align 8
  br label %28

28:                                               ; preds = %25, %1
  %29 = phi i8 [ %27, %25 ], [ %3, %1 ]
  ret i8 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2v88platform15DefaultJobState13AcquireTaskIdEv(%"class.v8::platform::DefaultJobState"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = xor i32 %3, -1
  %5 = tail call i32 @llvm.cttz.i32(i32 %4, i1 false) #11, !range !2
  %6 = shl i32 1, %5
  %7 = or i32 %6, %3
  %8 = cmpxchg weak i32* %2, i32 %3, i32 %7 acquire monotonic
  %9 = extractvalue { i32, i1 } %8, 1
  br i1 %9, label %19, label %10

10:                                               ; preds = %1, %10
  %11 = phi { i32, i1 } [ %17, %10 ], [ %8, %1 ]
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = xor i32 %12, -1
  %14 = tail call i32 @llvm.cttz.i32(i32 %13, i1 false) #11, !range !2
  %15 = shl i32 1, %14
  %16 = or i32 %15, %12
  %17 = cmpxchg weak i32* %2, i32 %12, i32 %16 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %19, label %10

19:                                               ; preds = %10, %1
  %20 = phi i32 [ %5, %1 ], [ %14, %10 ]
  %21 = trunc i32 %20 to i8
  ret i8 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobStateC2EPNS_8PlatformENSt3__110unique_ptrINS_7JobTaskENS4_14default_deleteIS6_EEEENS_12TaskPriorityEm(%"class.v8::platform::DefaultJobState"*, %"class.v8::Platform"*, %"class.v8::JobTask"*, i8 zeroext, i64) unnamed_addr #1 align 2 {
  %6 = ptrtoint %"class.v8::JobTask"* %2 to i64
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::enable_shared_from_this"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false) #11
  %9 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88platform15DefaultJobStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  store %"class.v8::Platform"* %1, %"class.v8::Platform"** %10, align 8
  %11 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3
  %12 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  store i64 %6, i64* %12, align 8
  %13 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %13) #11
  %14 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 5
  store i8 %3, i8* %14, align 8
  %15 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %16 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %17 = icmp ult i64 %4, 32
  %18 = select i1 %17, i64 %4, i64 32
  %19 = bitcast i64* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 17, i1 false)
  store i64 %18, i64* %16, align 8
  %20 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  tail call void @_ZN2v84base17ConditionVariableC1Ev(%"class.v8::base::ConditionVariable"* %20) #11
  %21 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %21, align 4
  ret void
}

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

declare void @_ZN2v84base17ConditionVariableC1Ev(%"class.v8::base::ConditionVariable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobStateD2Ev(%"class.v8::platform::DefaultJobState"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88platform15DefaultJobStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  tail call void @_ZN2v84base17ConditionVariableD1Ev(%"class.v8::base::ConditionVariable"* %3) #11
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %4) #11
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  store %"class.v8::JobTask"* null, %"class.v8::JobTask"** %5, align 8
  %7 = icmp eq %"class.v8::JobTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::JobTask"* %6 to void (%"class.v8::JobTask"*)***
  %10 = load void (%"class.v8::JobTask"*)**, void (%"class.v8::JobTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %10, i64 1
  %12 = load void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %11, align 8
  tail call void %12(%"class.v8::JobTask"* nonnull %6) #11
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %15) #11
  br label %18

18:                                               ; preds = %13, %17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v84base17ConditionVariableD1Ev(%"class.v8::base::ConditionVariable"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobStateD0Ev(%"class.v8::platform::DefaultJobState"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88platform15DefaultJobStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  tail call void @_ZN2v84base17ConditionVariableD1Ev(%"class.v8::base::ConditionVariable"* %3) #11
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %4) #11
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  store %"class.v8::JobTask"* null, %"class.v8::JobTask"** %5, align 8
  %7 = icmp eq %"class.v8::JobTask"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.v8::JobTask"* %6 to void (%"class.v8::JobTask"*)***
  %10 = load void (%"class.v8::JobTask"*)**, void (%"class.v8::JobTask"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %10, i64 1
  %12 = load void (%"class.v8::JobTask"*)*, void (%"class.v8::JobTask"*)** %11, align 8
  tail call void %12(%"class.v8::JobTask"* nonnull %6) #11
  br label %13

13:                                               ; preds = %8, %1
  %14 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %14, align 8
  %16 = icmp eq %"class.std::__1::__shared_weak_count"* %15, null
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %15) #11
  br label %18

18:                                               ; preds = %13, %17
  %19 = bitcast %"class.v8::platform::DefaultJobState"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %163

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %7) #11
  %8 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %11 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %10, align 8
  %12 = bitcast %"class.v8::JobTask"* %11 to i64 (%"class.v8::JobTask"*, i64)***
  %13 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %12, align 8
  %14 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %13, i64 3
  %15 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %14, align 8
  %16 = tail call i64 %15(%"class.v8::JobTask"* %11, i64 %9) #11
  %17 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %18 = load i64, i64* %17, align 8
  %19 = icmp ult i64 %18, %16
  %20 = select i1 %19, i64 %18, i64 %16
  %21 = load i64, i64* %8, align 8
  %22 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 8
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, %21
  %25 = icmp ugt i64 %20, %24
  br i1 %25, label %26, label %29

26:                                               ; preds = %6
  %27 = sub i64 %20, %21
  %28 = sub i64 %27, %23
  store i64 %27, i64* %22, align 8
  br label %29

29:                                               ; preds = %26, %6
  %30 = phi i64 [ %28, %26 ], [ 0, %6 ]
  %31 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 5
  %32 = load i8, i8* %31, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %7) #11
  %33 = icmp eq i64 %30, 0
  br i1 %33, label %163, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 0
  %36 = bitcast %"class.v8::platform::DefaultJobState"** %35 to i64*
  %37 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 1
  %38 = bitcast %"class.v8::JobTask"** %10 to i64*
  %39 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  switch i8 %32, label %40 [
    i8 0, label %81
    i8 2, label %42
  ]

40:                                               ; preds = %34
  %41 = icmp eq i8 %32, 1
  br label %120

42:                                               ; preds = %34, %78
  %43 = phi i64 [ %79, %78 ], [ 0, %34 ]
  %44 = load i64, i64* %36, align 8
  %45 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %46 = icmp eq %"class.std::__1::__shared_weak_count"* %45, null
  br i1 %46, label %128, label %47

47:                                               ; preds = %42
  %48 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %45) #11
  %49 = icmp eq %"class.std::__1::__shared_weak_count"* %48, null
  br i1 %49, label %128, label %50

50:                                               ; preds = %47
  %51 = load i64, i64* %38, align 8
  %52 = tail call i8* @_Znwm(i64 32) #12
  %53 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 1
  %54 = atomicrmw add i64* %53, i64 1 monotonic
  %55 = ptrtoint %"class.std::__1::__shared_weak_count"* %48 to i64
  %56 = bitcast i8* %52 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds i8, i8* %52, i64 8
  %58 = bitcast i8* %57 to i64*
  store i64 %44, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %52, i64 16
  %60 = bitcast i8* %59 to i64*
  store i64 %55, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %52, i64 24
  %62 = bitcast i8* %61 to i64*
  store i64 %51, i64* %62, align 8
  %63 = bitcast i8* %52 to %"class.v8::Task"*
  %64 = load %"class.v8::Platform"*, %"class.v8::Platform"** %39, align 8
  %65 = bitcast %"class.v8::Platform"* %64 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %66 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %66, i64 8
  %68 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %67, align 8
  tail call void %68(%"class.v8::Platform"* %64, %"class.v8::Task"* nonnull %63) #11
  %69 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0, i32 1
  %70 = atomicrmw add i64* %69, i64 -1 acq_rel
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %50
  %73 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %48, i64 0, i32 0
  %74 = bitcast %"class.std::__1::__shared_weak_count"* %48 to void (%"class.std::__1::__shared_count"*)***
  %75 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %75, i64 2
  %77 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %76, align 8
  tail call void %77(%"class.std::__1::__shared_count"* %73) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %48) #11
  br label %78

78:                                               ; preds = %72, %50
  %79 = add nuw i64 %43, 1
  %80 = icmp eq i64 %79, %30
  br i1 %80, label %163, label %42

81:                                               ; preds = %34, %117
  %82 = phi i64 [ %118, %117 ], [ 0, %34 ]
  %83 = load i64, i64* %36, align 8
  %84 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %85 = icmp eq %"class.std::__1::__shared_weak_count"* %84, null
  br i1 %85, label %128, label %86

86:                                               ; preds = %81
  %87 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %84) #11
  %88 = icmp eq %"class.std::__1::__shared_weak_count"* %87, null
  br i1 %88, label %128, label %89

89:                                               ; preds = %86
  %90 = load i64, i64* %38, align 8
  %91 = tail call i8* @_Znwm(i64 32) #12
  %92 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %87, i64 0, i32 1
  %93 = atomicrmw add i64* %92, i64 1 monotonic
  %94 = ptrtoint %"class.std::__1::__shared_weak_count"* %87 to i64
  %95 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %95, align 8
  %96 = getelementptr inbounds i8, i8* %91, i64 8
  %97 = bitcast i8* %96 to i64*
  store i64 %83, i64* %97, align 8
  %98 = getelementptr inbounds i8, i8* %91, i64 16
  %99 = bitcast i8* %98 to i64*
  store i64 %94, i64* %99, align 8
  %100 = getelementptr inbounds i8, i8* %91, i64 24
  %101 = bitcast i8* %100 to i64*
  store i64 %90, i64* %101, align 8
  %102 = bitcast i8* %91 to %"class.v8::Task"*
  %103 = load %"class.v8::Platform"*, %"class.v8::Platform"** %39, align 8
  %104 = bitcast %"class.v8::Platform"* %103 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %105 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %105, i64 9
  %107 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %106, align 8
  tail call void %107(%"class.v8::Platform"* %103, %"class.v8::Task"* nonnull %102) #11
  %108 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %87, i64 0, i32 0, i32 1
  %109 = atomicrmw add i64* %108, i64 -1 acq_rel
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %117

111:                                              ; preds = %89
  %112 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %87, i64 0, i32 0
  %113 = bitcast %"class.std::__1::__shared_weak_count"* %87 to void (%"class.std::__1::__shared_count"*)***
  %114 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %114, i64 2
  %116 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %115, align 8
  tail call void %116(%"class.std::__1::__shared_count"* %112) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %87) #11
  br label %117

117:                                              ; preds = %111, %89
  %118 = add nuw i64 %82, 1
  %119 = icmp eq i64 %118, %30
  br i1 %119, label %163, label %81

120:                                              ; preds = %40, %160
  %121 = phi i64 [ %161, %160 ], [ 0, %40 ]
  %122 = load i64, i64* %36, align 8
  %123 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %37, align 8
  %124 = icmp eq %"class.std::__1::__shared_weak_count"* %123, null
  br i1 %124, label %128, label %125

125:                                              ; preds = %120
  %126 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %123) #11
  %127 = icmp eq %"class.std::__1::__shared_weak_count"* %126, null
  br i1 %127, label %128, label %129

128:                                              ; preds = %47, %42, %81, %86, %125, %120
  tail call void @_ZNSt3__120__throw_bad_weak_ptrEv() #13
  unreachable

129:                                              ; preds = %125
  %130 = load i64, i64* %38, align 8
  %131 = tail call i8* @_Znwm(i64 32) #12
  %132 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %126, i64 0, i32 1
  %133 = atomicrmw add i64* %132, i64 1 monotonic
  %134 = ptrtoint %"class.std::__1::__shared_weak_count"* %126 to i64
  %135 = bitcast i8* %131 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds i8, i8* %131, i64 8
  %137 = bitcast i8* %136 to i64*
  store i64 %122, i64* %137, align 8
  %138 = getelementptr inbounds i8, i8* %131, i64 16
  %139 = bitcast i8* %138 to i64*
  store i64 %134, i64* %139, align 8
  %140 = getelementptr inbounds i8, i8* %131, i64 24
  %141 = bitcast i8* %140 to i64*
  store i64 %130, i64* %141, align 8
  br i1 %41, label %142, label %149

142:                                              ; preds = %129
  %143 = bitcast i8* %131 to %"class.v8::Task"*
  %144 = load %"class.v8::Platform"*, %"class.v8::Platform"** %39, align 8
  %145 = bitcast %"class.v8::Platform"* %144 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %146 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %146, i64 7
  %148 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %147, align 8
  tail call void %148(%"class.v8::Platform"* %144, %"class.v8::Task"* nonnull %143) #11
  br label %150

149:                                              ; preds = %129
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %126) #11
  tail call void @_ZdlPv(i8* nonnull %131) #12
  br label %150

150:                                              ; preds = %142, %149
  %151 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %126, i64 0, i32 0, i32 1
  %152 = atomicrmw add i64* %151, i64 -1 acq_rel
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %160

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %126, i64 0, i32 0
  %156 = bitcast %"class.std::__1::__shared_weak_count"* %126 to void (%"class.std::__1::__shared_count"*)***
  %157 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %157, i64 2
  %159 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %158, align 8
  tail call void %159(%"class.std::__1::__shared_count"* %155) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %126) #11
  br label %160

160:                                              ; preds = %150, %154
  %161 = add nuw i64 %121, 1
  %162 = icmp eq i64 %161, %30
  br i1 %162, label %163, label %120

163:                                              ; preds = %78, %117, %160, %29, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88platform15DefaultJobState20CappedMaxConcurrencyEm(%"class.v8::platform::DefaultJobState"* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %3, align 8
  %5 = bitcast %"class.v8::JobTask"* %4 to i64 (%"class.v8::JobTask"*, i64)***
  %6 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %5, align 8
  %7 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %6, i64 3
  %8 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %7, align 8
  %9 = tail call i64 %8(%"class.v8::JobTask"* %4, i64 %1) #11
  %10 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  %13 = select i1 %12, i64 %11, i64 %9
  ret i64 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState18CallOnWorkerThreadENS_12TaskPriorityENSt3__110unique_ptrINS_4TaskENS3_14default_deleteIS5_EEEE(%"class.v8::platform::DefaultJobState"* nocapture readonly, i8 zeroext, %"class.v8::Task"*) local_unnamed_addr #1 align 2 {
  switch i8 %1, label %25 [
    i8 0, label %4
    i8 1, label %11
    i8 2, label %18
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  %6 = load %"class.v8::Platform"*, %"class.v8::Platform"** %5, align 8
  %7 = bitcast %"class.v8::Platform"* %6 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %8 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %8, i64 9
  %10 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %9, align 8
  tail call void %10(%"class.v8::Platform"* %6, %"class.v8::Task"* %2) #11
  br label %32

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  %13 = load %"class.v8::Platform"*, %"class.v8::Platform"** %12, align 8
  %14 = bitcast %"class.v8::Platform"* %13 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %15 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %15, i64 7
  %17 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %16, align 8
  tail call void %17(%"class.v8::Platform"* %13, %"class.v8::Task"* %2) #11
  br label %32

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  %20 = load %"class.v8::Platform"*, %"class.v8::Platform"** %19, align 8
  %21 = bitcast %"class.v8::Platform"* %20 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %22 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %22, i64 8
  %24 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %23, align 8
  tail call void %24(%"class.v8::Platform"* %20, %"class.v8::Task"* %2) #11
  br label %32

25:                                               ; preds = %3
  %26 = icmp eq %"class.v8::Task"* %2, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %25
  %28 = bitcast %"class.v8::Task"* %2 to void (%"class.v8::Task"*)***
  %29 = load void (%"class.v8::Task"*)**, void (%"class.v8::Task"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %29, i64 1
  %31 = load void (%"class.v8::Task"*)*, void (%"class.v8::Task"*)** %30, align 8
  tail call void %31(%"class.v8::Task"* nonnull %2) #11
  br label %32

32:                                               ; preds = %4, %11, %18, %25, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState4JoinEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.v8::platform::DefaultJobState::JobDelegate", align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 5
  store i8 2, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  %6 = load %"class.v8::Platform"*, %"class.v8::Platform"** %5, align 8
  %7 = bitcast %"class.v8::Platform"* %6 to i32 (%"class.v8::Platform"*)***
  %8 = load i32 (%"class.v8::Platform"*)**, i32 (%"class.v8::Platform"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.v8::Platform"*)*, i32 (%"class.v8::Platform"*)** %8, i64 5
  %10 = load i32 (%"class.v8::Platform"*)*, i32 (%"class.v8::Platform"*)** %9, align 8
  %11 = tail call i32 %10(%"class.v8::Platform"* %6) #11
  %12 = add nsw i32 %11, 1
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %18, align 8
  %20 = bitcast %"class.v8::JobTask"* %19 to i64 (%"class.v8::JobTask"*, i64)***
  %21 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %20, align 8
  %22 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %21, i64 3
  %23 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %22, align 8
  %24 = tail call i64 %23(%"class.v8::JobTask"* %19, i64 %16) #11
  %25 = load i64, i64* %14, align 8
  %26 = icmp ult i64 %25, %24
  %27 = select i1 %26, i64 %25, i64 %24
  %28 = load i64, i64* %15, align 8
  %29 = icmp ugt i64 %28, %27
  %30 = icmp ugt i64 %28, 1
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %50

32:                                               ; preds = %1
  %33 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  br label %34

34:                                               ; preds = %34, %32
  tail call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %33, %"class.v8::base::Mutex"* %3) #11
  %35 = load i64, i64* %15, align 8
  %36 = add i64 %35, -1
  %37 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %18, align 8
  %38 = bitcast %"class.v8::JobTask"* %37 to i64 (%"class.v8::JobTask"*, i64)***
  %39 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %39, i64 3
  %41 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %40, align 8
  %42 = tail call i64 %41(%"class.v8::JobTask"* %37, i64 %36) #11
  %43 = load i64, i64* %14, align 8
  %44 = icmp ult i64 %43, %42
  %45 = select i1 %44, i64 %43, i64 %42
  %46 = load i64, i64* %15, align 8
  %47 = icmp ugt i64 %46, %45
  %48 = icmp ugt i64 %46, 1
  %49 = and i1 %48, %47
  br i1 %49, label %34, label %50

50:                                               ; preds = %34, %1
  %51 = phi i1 [ %29, %1 ], [ %47, %34 ]
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  store i64 0, i64* %15, align 8
  %53 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %53 monotonic, align 1
  br label %54

54:                                               ; preds = %50, %52
  %55 = phi i1 [ false, %52 ], [ true, %50 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  %56 = bitcast %"class.v8::platform::DefaultJobState::JobDelegate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %58 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 1
  store %"class.v8::platform::DefaultJobState"* %0, %"class.v8::platform::DefaultJobState"** %58, align 8
  %59 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 2
  store i8 -1, i8* %59, align 8
  %60 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 3
  store i8 1, i8* %60, align 1
  br i1 %55, label %62, label %61

61:                                               ; preds = %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  br label %116

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 0
  %64 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  br label %65

65:                                               ; preds = %104, %62
  %66 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %18, align 8
  %67 = bitcast %"class.v8::JobTask"* %66 to void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)***
  %68 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)**, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %68, i64 2
  %70 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %69, align 8
  call void %70(%"class.v8::JobTask"* %66, %"class.v8::JobDelegate"* nonnull %63) #11
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %71 = load i64, i64* %15, align 8
  %72 = add i64 %71, -1
  %73 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %18, align 8
  %74 = bitcast %"class.v8::JobTask"* %73 to i64 (%"class.v8::JobTask"*, i64)***
  %75 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %74, align 8
  %76 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %75, i64 3
  %77 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %76, align 8
  %78 = call i64 %77(%"class.v8::JobTask"* %73, i64 %72) #11
  %79 = load i64, i64* %14, align 8
  %80 = icmp ult i64 %79, %78
  %81 = select i1 %80, i64 %79, i64 %78
  %82 = load i64, i64* %15, align 8
  %83 = icmp ugt i64 %82, %81
  %84 = icmp ugt i64 %82, 1
  %85 = and i1 %84, %83
  br i1 %85, label %86, label %102

86:                                               ; preds = %65, %86
  call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %64, %"class.v8::base::Mutex"* %3) #11
  %87 = load i64, i64* %15, align 8
  %88 = add i64 %87, -1
  %89 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %18, align 8
  %90 = bitcast %"class.v8::JobTask"* %89 to i64 (%"class.v8::JobTask"*, i64)***
  %91 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %90, align 8
  %92 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %91, i64 3
  %93 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %92, align 8
  %94 = call i64 %93(%"class.v8::JobTask"* %89, i64 %88) #11
  %95 = load i64, i64* %14, align 8
  %96 = icmp ult i64 %95, %94
  %97 = select i1 %96, i64 %95, i64 %94
  %98 = load i64, i64* %15, align 8
  %99 = icmp ugt i64 %98, %97
  %100 = icmp ugt i64 %98, 1
  %101 = and i1 %100, %99
  br i1 %101, label %86, label %102

102:                                              ; preds = %86, %65
  %103 = phi i1 [ %83, %65 ], [ %99, %86 ]
  br i1 %103, label %105, label %104

104:                                              ; preds = %102
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  br label %65

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %15, align 8
  store atomic i8 1, i8* %106 monotonic, align 1
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  %107 = load i8, i8* %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %108 = icmp eq i8 %107, -1
  br i1 %108, label %116, label %109

109:                                              ; preds = %105
  %110 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %58, align 8
  %111 = zext i8 %107 to i32
  %112 = shl i32 1, %111
  %113 = xor i32 %112, -1
  %114 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %110, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw and i32* %114, i32 %113 release
  br label %116

116:                                              ; preds = %61, %105, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88platform15DefaultJobState43WaitForParticipationOpportunityLockRequiredEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, -1
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  %7 = bitcast %"class.v8::JobTask"* %6 to i64 (%"class.v8::JobTask"*, i64)***
  %8 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %8, i64 3
  %10 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.v8::JobTask"* %6, i64 %4) #11
  %12 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, %11
  %15 = select i1 %14, i64 %13, i64 %11
  %16 = load i64, i64* %2, align 8
  %17 = icmp ugt i64 %16, %15
  %18 = icmp ugt i64 %16, 1
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %39

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  %22 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  br label %23

23:                                               ; preds = %20, %23
  tail call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %21, %"class.v8::base::Mutex"* %22) #11
  %24 = load i64, i64* %2, align 8
  %25 = add i64 %24, -1
  %26 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  %27 = bitcast %"class.v8::JobTask"* %26 to i64 (%"class.v8::JobTask"*, i64)***
  %28 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %28, i64 3
  %30 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %29, align 8
  %31 = tail call i64 %30(%"class.v8::JobTask"* %26, i64 %25) #11
  %32 = load i64, i64* %12, align 8
  %33 = icmp ult i64 %32, %31
  %34 = select i1 %33, i64 %32, i64 %31
  %35 = load i64, i64* %2, align 8
  %36 = icmp ugt i64 %35, %34
  %37 = icmp ugt i64 %35, 1
  %38 = and i1 %36, %37
  br i1 %38, label %23, label %39

39:                                               ; preds = %23, %1
  %40 = phi i1 [ %17, %1 ], [ %36, %23 ]
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  store i64 0, i64* %2, align 8
  %42 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %42 monotonic, align 1
  br label %43

43:                                               ; preds = %39, %41
  %44 = phi i1 [ false, %41 ], [ true, %39 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState13CancelAndWaitEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %3 monotonic, align 1
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  br label %9

9:                                                ; preds = %7, %9
  tail call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %8, %"class.v8::base::Mutex"* %2) #11
  %10 = load i64, i64* %4, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %9

12:                                               ; preds = %9, %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret void
}

declare void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"*, %"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState15CancelAndDetachEv(%"class.v8::platform::DefaultJobState"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %2 monotonic, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88platform15DefaultJobState8IsActiveEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.v8::JobTask"* %4 to i64 (%"class.v8::JobTask"*, i64)***
  %8 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %8, i64 3
  %10 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %9, align 8
  %11 = tail call i64 %10(%"class.v8::JobTask"* %4, i64 %6) #11
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = load i64, i64* %5, align 8
  %15 = icmp ne i64 %14, 0
  br label %16

16:                                               ; preds = %1, %13
  %17 = phi i1 [ true, %1 ], [ %15, %13 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88platform15DefaultJobState15CanRunFirstTaskEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 8
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i8, i8* %6 monotonic, align 1
  %8 = and i8 %7, 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %14 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %13, align 8
  %15 = bitcast %"class.v8::JobTask"* %14 to i64 (%"class.v8::JobTask"*, i64)***
  %16 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %16, i64 3
  %18 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %17, align 8
  %19 = tail call i64 %18(%"class.v8::JobTask"* %14, i64 %12) #11
  %20 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %21, %19
  %23 = select i1 %22, i64 %21, i64 %19
  %24 = icmp ult i64 %12, %23
  br i1 %24, label %25, label %28

25:                                               ; preds = %10
  %26 = load i64, i64* %11, align 8
  %27 = add i64 %26, 1
  store i64 %27, i64* %11, align 8
  br label %28

28:                                               ; preds = %1, %10, %25
  %29 = phi i1 [ true, %25 ], [ false, %1 ], [ false, %10 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88platform15DefaultJobState10DidRunTaskEv(%"class.v8::platform::DefaultJobState"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, -1
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %6, align 8
  %8 = bitcast %"class.v8::JobTask"* %7 to i64 (%"class.v8::JobTask"*, i64)***
  %9 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %8, align 8
  %10 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %9, i64 3
  %11 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %10, align 8
  %12 = tail call i64 %11(%"class.v8::JobTask"* %7, i64 %5) #11
  %13 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 11
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = select i1 %15, i64 %14, i64 %12
  %17 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i8, i8* %17 monotonic, align 1
  %19 = and i8 %18, 1
  %20 = icmp ne i8 %19, 0
  %21 = load i64, i64* %3, align 8
  %22 = icmp ult i64 %16, %21
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %1
  %25 = add i64 %21, -1
  store i64 %25, i64* %3, align 8
  %26 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 12
  tail call void @_ZN2v84base17ConditionVariable9NotifyOneEv(%"class.v8::base::ConditionVariable"* %26) #11
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  br label %169

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, %21
  %31 = icmp ugt i64 %16, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = sub i64 %16, %21
  %34 = sub i64 %33, %29
  store i64 %33, i64* %28, align 8
  br label %35

35:                                               ; preds = %27, %32
  %36 = phi i64 [ %34, %32 ], [ 0, %27 ]
  %37 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 5
  %38 = load i8, i8* %37, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  %39 = icmp eq i64 %36, 0
  br i1 %39, label %169, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.v8::platform::DefaultJobState"** %41 to i64*
  %43 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 1, i32 0, i32 1
  %44 = bitcast %"class.v8::JobTask"** %6 to i64*
  %45 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 2
  switch i8 %38, label %46 [
    i8 0, label %87
    i8 2, label %48
  ]

46:                                               ; preds = %40
  %47 = icmp eq i8 %38, 1
  br label %126

48:                                               ; preds = %40, %84
  %49 = phi i64 [ %85, %84 ], [ 0, %40 ]
  %50 = load i64, i64* %42, align 8
  %51 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %52 = icmp eq %"class.std::__1::__shared_weak_count"* %51, null
  br i1 %52, label %134, label %53

53:                                               ; preds = %48
  %54 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %51) #11
  %55 = icmp eq %"class.std::__1::__shared_weak_count"* %54, null
  br i1 %55, label %134, label %56

56:                                               ; preds = %53
  %57 = load i64, i64* %44, align 8
  %58 = tail call i8* @_Znwm(i64 32) #12
  %59 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %54, i64 0, i32 1
  %60 = atomicrmw add i64* %59, i64 1 monotonic
  %61 = ptrtoint %"class.std::__1::__shared_weak_count"* %54 to i64
  %62 = bitcast i8* %58 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = getelementptr inbounds i8, i8* %58, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 %50, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %58, i64 16
  %66 = bitcast i8* %65 to i64*
  store i64 %61, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %58, i64 24
  %68 = bitcast i8* %67 to i64*
  store i64 %57, i64* %68, align 8
  %69 = bitcast i8* %58 to %"class.v8::Task"*
  %70 = load %"class.v8::Platform"*, %"class.v8::Platform"** %45, align 8
  %71 = bitcast %"class.v8::Platform"* %70 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %72 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %72, i64 8
  %74 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %73, align 8
  tail call void %74(%"class.v8::Platform"* %70, %"class.v8::Task"* nonnull %69) #11
  %75 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %54, i64 0, i32 0, i32 1
  %76 = atomicrmw add i64* %75, i64 -1 acq_rel
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %56
  %79 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %54, i64 0, i32 0
  %80 = bitcast %"class.std::__1::__shared_weak_count"* %54 to void (%"class.std::__1::__shared_count"*)***
  %81 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %81, i64 2
  %83 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %82, align 8
  tail call void %83(%"class.std::__1::__shared_count"* %79) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %54) #11
  br label %84

84:                                               ; preds = %78, %56
  %85 = add nuw i64 %49, 1
  %86 = icmp eq i64 %85, %36
  br i1 %86, label %169, label %48

87:                                               ; preds = %40, %123
  %88 = phi i64 [ %124, %123 ], [ 0, %40 ]
  %89 = load i64, i64* %42, align 8
  %90 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %91 = icmp eq %"class.std::__1::__shared_weak_count"* %90, null
  br i1 %91, label %134, label %92

92:                                               ; preds = %87
  %93 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %90) #11
  %94 = icmp eq %"class.std::__1::__shared_weak_count"* %93, null
  br i1 %94, label %134, label %95

95:                                               ; preds = %92
  %96 = load i64, i64* %44, align 8
  %97 = tail call i8* @_Znwm(i64 32) #12
  %98 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %93, i64 0, i32 1
  %99 = atomicrmw add i64* %98, i64 1 monotonic
  %100 = ptrtoint %"class.std::__1::__shared_weak_count"* %93 to i64
  %101 = bitcast i8* %97 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %101, align 8
  %102 = getelementptr inbounds i8, i8* %97, i64 8
  %103 = bitcast i8* %102 to i64*
  store i64 %89, i64* %103, align 8
  %104 = getelementptr inbounds i8, i8* %97, i64 16
  %105 = bitcast i8* %104 to i64*
  store i64 %100, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %97, i64 24
  %107 = bitcast i8* %106 to i64*
  store i64 %96, i64* %107, align 8
  %108 = bitcast i8* %97 to %"class.v8::Task"*
  %109 = load %"class.v8::Platform"*, %"class.v8::Platform"** %45, align 8
  %110 = bitcast %"class.v8::Platform"* %109 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %111 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %111, i64 9
  %113 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %112, align 8
  tail call void %113(%"class.v8::Platform"* %109, %"class.v8::Task"* nonnull %108) #11
  %114 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %93, i64 0, i32 0, i32 1
  %115 = atomicrmw add i64* %114, i64 -1 acq_rel
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %95
  %118 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %93, i64 0, i32 0
  %119 = bitcast %"class.std::__1::__shared_weak_count"* %93 to void (%"class.std::__1::__shared_count"*)***
  %120 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %120, i64 2
  %122 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %121, align 8
  tail call void %122(%"class.std::__1::__shared_count"* %118) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %93) #11
  br label %123

123:                                              ; preds = %117, %95
  %124 = add nuw i64 %88, 1
  %125 = icmp eq i64 %124, %36
  br i1 %125, label %169, label %87

126:                                              ; preds = %46, %166
  %127 = phi i64 [ %167, %166 ], [ 0, %46 ]
  %128 = load i64, i64* %42, align 8
  %129 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %43, align 8
  %130 = icmp eq %"class.std::__1::__shared_weak_count"* %129, null
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %129) #11
  %133 = icmp eq %"class.std::__1::__shared_weak_count"* %132, null
  br i1 %133, label %134, label %135

134:                                              ; preds = %53, %48, %87, %92, %131, %126
  tail call void @_ZNSt3__120__throw_bad_weak_ptrEv() #13
  unreachable

135:                                              ; preds = %131
  %136 = load i64, i64* %44, align 8
  %137 = tail call i8* @_Znwm(i64 32) #12
  %138 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %132, i64 0, i32 1
  %139 = atomicrmw add i64* %138, i64 1 monotonic
  %140 = ptrtoint %"class.std::__1::__shared_weak_count"* %132 to i64
  %141 = bitcast i8* %137 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  %142 = getelementptr inbounds i8, i8* %137, i64 8
  %143 = bitcast i8* %142 to i64*
  store i64 %128, i64* %143, align 8
  %144 = getelementptr inbounds i8, i8* %137, i64 16
  %145 = bitcast i8* %144 to i64*
  store i64 %140, i64* %145, align 8
  %146 = getelementptr inbounds i8, i8* %137, i64 24
  %147 = bitcast i8* %146 to i64*
  store i64 %136, i64* %147, align 8
  br i1 %47, label %148, label %155

148:                                              ; preds = %135
  %149 = bitcast i8* %137 to %"class.v8::Task"*
  %150 = load %"class.v8::Platform"*, %"class.v8::Platform"** %45, align 8
  %151 = bitcast %"class.v8::Platform"* %150 to void (%"class.v8::Platform"*, %"class.v8::Task"*)***
  %152 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)**, void (%"class.v8::Platform"*, %"class.v8::Task"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %152, i64 7
  %154 = load void (%"class.v8::Platform"*, %"class.v8::Task"*)*, void (%"class.v8::Platform"*, %"class.v8::Task"*)** %153, align 8
  tail call void %154(%"class.v8::Platform"* %150, %"class.v8::Task"* nonnull %149) #11
  br label %156

155:                                              ; preds = %135
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %141, align 8
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %132) #11
  tail call void @_ZdlPv(i8* nonnull %137) #12
  br label %156

156:                                              ; preds = %148, %155
  %157 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %132, i64 0, i32 0, i32 1
  %158 = atomicrmw add i64* %157, i64 -1 acq_rel
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %166

160:                                              ; preds = %156
  %161 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %132, i64 0, i32 0
  %162 = bitcast %"class.std::__1::__shared_weak_count"* %132 to void (%"class.std::__1::__shared_count"*)***
  %163 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %162, align 8
  %164 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %163, i64 2
  %165 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %164, align 8
  tail call void %165(%"class.std::__1::__shared_count"* %161) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %132) #11
  br label %166

166:                                              ; preds = %156, %160
  %167 = add nuw i64 %127, 1
  %168 = icmp eq i64 %167, %36
  br i1 %168, label %169, label %126

169:                                              ; preds = %84, %123, %166, %35, %24
  %170 = phi i1 [ false, %24 ], [ true, %35 ], [ true, %166 ], [ true, %123 ], [ true, %84 ]
  ret i1 %170
}

declare void @_ZN2v84base17ConditionVariable9NotifyOneEv(%"class.v8::base::ConditionVariable"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform15DefaultJobState14UpdatePriorityENS_12TaskPriorityE(%"class.v8::platform::DefaultJobState"*, i8 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %0, i64 0, i32 5
  store i8 %1, i8* %4, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandleC2ENSt3__110shared_ptrINS0_15DefaultJobStateEEE(%"class.v8::platform::DefaultJobHandle"* nocapture, %"class.v8::platform::DefaultJobState"*, %"class.std::__1::__shared_weak_count"*) unnamed_addr #1 align 2 {
  %4 = ptrtoint %"class.v8::platform::DefaultJobState"* %1 to i64
  %5 = ptrtoint %"class.std::__1::__shared_weak_count"* %2 to i64
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform16DefaultJobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::shared_ptr"* %7 to i64*
  store i64 %4, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  store i64 %5, i64* %10, align 8
  tail call void @_ZN2v88platform15DefaultJobState25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobState"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandleD2Ev(%"class.v8::platform::DefaultJobHandle"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform16DefaultJobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandleD0Ev(%"class.v8::platform::DefaultJobHandle"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN2v88platform16DefaultJobHandleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %"class.v8::platform::DefaultJobHandle"* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandle4JoinEv(%"class.v8::platform::DefaultJobHandle"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %4 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %3, align 8
  tail call void @_ZN2v88platform15DefaultJobState4JoinEv(%"class.v8::platform::DefaultJobState"* %4)
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %6 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %5, align 8
  %7 = bitcast %"class.std::__1::shared_ptr"* %2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %7, align 8
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %6, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0, i32 1
  %11 = atomicrmw add i64* %10, i64 -1 acq_rel
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %6, i64 0, i32 0
  %15 = bitcast %"class.std::__1::__shared_weak_count"* %6 to void (%"class.std::__1::__shared_count"*)***
  %16 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %16, i64 2
  %18 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %17, align 8
  tail call void %18(%"class.std::__1::__shared_count"* %14) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %6) #11
  br label %19

19:                                               ; preds = %13, %9, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandle6CancelEv(%"class.v8::platform::DefaultJobHandle"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %4 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %5) #11
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %6 monotonic, align 1
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 12
  br label %12

12:                                               ; preds = %12, %10
  tail call void @_ZN2v84base17ConditionVariable4WaitEPNS0_5MutexE(%"class.v8::base::ConditionVariable"* %11, %"class.v8::base::Mutex"* %5) #11
  %13 = load i64, i64* %7, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %12

15:                                               ; preds = %12, %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %5) #11
  %16 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %17 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %16, align 8
  %18 = bitcast %"class.std::__1::shared_ptr"* %2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %18, align 8
  %19 = icmp eq %"class.std::__1::__shared_weak_count"* %17, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0, i32 1
  %22 = atomicrmw add i64* %21, i64 -1 acq_rel
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %17, i64 0, i32 0
  %26 = bitcast %"class.std::__1::__shared_weak_count"* %17 to void (%"class.std::__1::__shared_count"*)***
  %27 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %27, i64 2
  %29 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %28, align 8
  tail call void %29(%"class.std::__1::__shared_count"* %25) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %17) #11
  br label %30

30:                                               ; preds = %24, %20, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandle15CancelAndDetachEv(%"class.v8::platform::DefaultJobHandle"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %2, i64 0, i32 0
  %4 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store atomic i8 1, i8* %5 monotonic, align 1
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 1
  %7 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %6, align 8
  %8 = bitcast %"class.std::__1::shared_ptr"* %2 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %8, align 8
  %9 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %12 = atomicrmw add i64* %11, i64 -1 acq_rel
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0
  %16 = bitcast %"class.std::__1::__shared_weak_count"* %7 to void (%"class.std::__1::__shared_count"*)***
  %17 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %17, i64 2
  %19 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %18, align 8
  tail call void %19(%"class.std::__1::__shared_count"* %15) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #11
  br label %20

20:                                               ; preds = %14, %10, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88platform16DefaultJobHandle8IsActiveEv(%"class.v8::platform::DefaultJobHandle"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %3, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %4) #11
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %6 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %3, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.v8::JobTask"* %6 to i64 (%"class.v8::JobTask"*, i64)***
  %10 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %10, i64 3
  %12 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %11, align 8
  %13 = tail call i64 %12(%"class.v8::JobTask"* %6, i64 %8) #11
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = load i64, i64* %7, align 8
  %17 = icmp ne i64 %16, 0
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi i1 [ true, %1 ], [ %17, %15 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %4) #11
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88platform16DefaultJobHandle14UpdatePriorityENS_12TaskPriorityE(%"class.v8::platform::DefaultJobHandle"* nocapture readonly, i8 zeroext) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %5) #11
  %6 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %4, i64 0, i32 5
  store i8 %1, i8* %6, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88platform15DefaultJobState11JobDelegate11ShouldYieldEv(%"class.v8::platform::DefaultJobState::JobDelegate"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 1
  %3 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %3, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i8, i8* %4 monotonic, align 1
  %6 = and i8 %5, 1
  %7 = icmp ne i8 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88platform15DefaultJobState11JobDelegate25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobState::JobDelegate"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 1
  %3 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %2, align 8
  tail call void @_ZN2v88platform15DefaultJobState25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88platform15DefaultJobState11JobDelegate15IsJoiningThreadEv(%"class.v8::platform::DefaultJobState::JobDelegate"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88platform16DefaultJobHandle25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobHandle"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %2, align 8
  tail call void @_ZN2v88platform15DefaultJobState25NotifyConcurrencyIncreaseEv(%"class.v8::platform::DefaultJobState"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88platform16DefaultJobHandle7IsValidEv(%"class.v8::platform::DefaultJobHandle"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobHandle", %"class.v8::platform::DefaultJobHandle"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %2, align 8
  %4 = icmp ne %"class.v8::platform::DefaultJobState"* %3, null
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88platform16DefaultJobHandle21UpdatePriorityEnabledEv(%"class.v8::platform::DefaultJobHandle"*) unnamed_addr #1 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #7

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_bad_weak_ptrEv() local_unnamed_addr #8 comdat {
  tail call void @abort() #13
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88platform16DefaultJobWorkerD2Ev(%"class.v8::platform::DefaultJobWorker"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88platform16DefaultJobWorkerD0Ev(%"class.v8::platform::DefaultJobWorker"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88platform16DefaultJobWorkerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %7

7:                                                ; preds = %1, %6
  %8 = bitcast %"class.v8::platform::DefaultJobWorker"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88platform16DefaultJobWorker3RunEv(%"class.v8::platform::DefaultJobWorker"*) unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.v8::platform::DefaultJobState::JobDelegate", align 8
  %3 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %75, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.std::__1::__shared_weak_count"* @_ZNSt3__119__shared_weak_count4lockEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  %8 = icmp eq %"class.std::__1::__shared_weak_count"* %7, null
  br i1 %8, label %75, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %10, align 8
  %12 = icmp eq %"class.v8::platform::DefaultJobState"* %11, null
  br i1 %12, label %65, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 4
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %14) #11
  %15 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 8
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %16, -1
  store i64 %17, i64* %15, align 8
  %18 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = and i8 %19, 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 7
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %25, align 8
  %27 = bitcast %"class.v8::JobTask"* %26 to i64 (%"class.v8::JobTask"*, i64)***
  %28 = load i64 (%"class.v8::JobTask"*, i64)**, i64 (%"class.v8::JobTask"*, i64)*** %27, align 8
  %29 = getelementptr inbounds i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %28, i64 3
  %30 = load i64 (%"class.v8::JobTask"*, i64)*, i64 (%"class.v8::JobTask"*, i64)** %29, align 8
  %31 = tail call i64 %30(%"class.v8::JobTask"* %26, i64 %24) #11
  %32 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %11, i64 0, i32 11
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  %35 = select i1 %34, i64 %33, i64 %31
  %36 = icmp ult i64 %24, %35
  br i1 %36, label %38, label %37

37:                                               ; preds = %13, %22
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %14) #11
  br label %65

38:                                               ; preds = %22
  %39 = load i64, i64* %23, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %23, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %14) #11
  %41 = bitcast %"class.v8::platform::DefaultJobState::JobDelegate"* %2 to i8*
  %42 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 1
  %44 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 2
  %45 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 3
  %46 = getelementptr inbounds %"class.v8::platform::DefaultJobWorker", %"class.v8::platform::DefaultJobWorker"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.v8::platform::DefaultJobState::JobDelegate", %"class.v8::platform::DefaultJobState::JobDelegate"* %2, i64 0, i32 0
  br label %48

48:                                               ; preds = %38, %63
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  store %"class.v8::platform::DefaultJobState"* %11, %"class.v8::platform::DefaultJobState"** %43, align 8
  store i8 -1, i8* %44, align 8
  store i8 0, i8* %45, align 1
  %49 = load %"class.v8::JobTask"*, %"class.v8::JobTask"** %46, align 8
  %50 = bitcast %"class.v8::JobTask"* %49 to void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)***
  %51 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)**, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %51, i64 2
  %53 = load void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)*, void (%"class.v8::JobTask"*, %"class.v8::JobDelegate"*)** %52, align 8
  call void %53(%"class.v8::JobTask"* %49, %"class.v8::JobDelegate"* nonnull %47) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88platform15DefaultJobState11JobDelegateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %54 = load i8, i8* %44, align 8
  %55 = icmp eq i8 %54, -1
  br i1 %55, label %63, label %56

56:                                               ; preds = %48
  %57 = load %"class.v8::platform::DefaultJobState"*, %"class.v8::platform::DefaultJobState"** %43, align 8
  %58 = zext i8 %54 to i32
  %59 = shl i32 1, %58
  %60 = xor i32 %59, -1
  %61 = getelementptr inbounds %"class.v8::platform::DefaultJobState", %"class.v8::platform::DefaultJobState"* %57, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw and i32* %61, i32 %60 release
  br label %63

63:                                               ; preds = %48, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  %64 = call zeroext i1 @_ZN2v88platform15DefaultJobState10DidRunTaskEv(%"class.v8::platform::DefaultJobState"* nonnull %11)
  br i1 %64, label %48, label %65

65:                                               ; preds = %63, %9, %37
  %66 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0, i32 1
  %67 = atomicrmw add i64* %66, i64 -1 acq_rel
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %7, i64 0, i32 0
  %71 = bitcast %"class.std::__1::__shared_weak_count"* %7 to void (%"class.std::__1::__shared_count"*)***
  %72 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %72, i64 2
  %74 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %73, align 8
  call void %74(%"class.std::__1::__shared_count"* %70) #11
  call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %7) #11
  br label %75

75:                                               ; preds = %6, %1, %65, %69
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{i8 0, i8 2}
