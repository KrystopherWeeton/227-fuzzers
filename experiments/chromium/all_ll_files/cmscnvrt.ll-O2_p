; ModuleID = '../../third_party/pdfium/third_party/lcms/src/cmscnvrt.c'
source_filename = "../../third_party/pdfium/third_party/lcms/src/cmscnvrt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._cmsIntentsPluginChunkType = type { %struct._cms_intents_list* }
%struct._cms_intents_list = type { i32, [256 x i8], %struct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)*, %struct._cms_intents_list* }
%struct._cmsPipeline_struct = type { %struct._cmsStage_struct*, i32, i32, i8*, void (i16*, i16*, i8*)*, void (float*, float*, i8*)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*)*, %struct._cmsContext_struct*, i32 }
%struct._cmsStage_struct = type { %struct._cmsContext_struct*, i32, i32, i32, i32, void (float*, float*, %struct._cmsStage_struct*)*, i8* (%struct._cmsStage_struct*)*, void (%struct._cmsStage_struct*)*, i8*, %struct._cmsStage_struct* }
%struct._cmsContext_struct = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator*, [15 x i8*], %struct._cmsMemPluginChunkType }
%struct._cmsSubAllocator = type { %struct._cmsContext_struct*, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsSubAllocator_chunk_st = type { i8*, i32, i32, %struct._cmsSubAllocator_chunk_st* }
%struct._cmsMemPluginChunkType = type { i8* (%struct._cmsContext_struct*, i32)*, i8* (%struct._cmsContext_struct*, i32)*, void (%struct._cmsContext_struct*, i8*)*, i8* (%struct._cmsContext_struct*, i8*, i32)*, i8* (%struct._cmsContext_struct*, i32, i32)*, i8* (%struct._cmsContext_struct*, i8*, i32)* }
%struct.cmsMAT3 = type { [3 x %struct.cmsVEC3] }
%struct.cmsVEC3 = type { [3 x double] }
%struct._cmsPluginBaseStruct = type { i32, i32, i32, %struct._cmsPluginBaseStruct* }
%struct.cmsCIEXYZ = type { double, double, double }
%struct.cmsCIExyY = type { double, double, double }
%struct.GrayOnlyParams = type { %struct._cmsPipeline_struct*, %struct._cms_curve_struct* }
%struct._cms_curve_struct = type { %struct._cms_interp_struc*, i32, %struct.cmsCurveSegment*, %struct._cms_interp_struc**, double (i32, double*, double)**, i32, i16* }
%struct._cms_interp_struc = type { %struct._cmsContext_struct*, i32, i32, i32, [8 x i32], [8 x i32], [8 x i32], i8*, %union.cmsInterpFunction }
%union.cmsInterpFunction = type { void (i16*, i16*, %struct._cms_interp_struc*)* }
%struct.cmsCurveSegment = type { float, float, i32, [10 x double], i32, float* }
%struct.PreserveKPlaneParams = type { %struct._cmsPipeline_struct*, i8*, i8*, %struct._cms_curve_struct*, %struct._cmsPipeline_struct*, double, i8*, double }
%struct.cmsCIELab = type { double, double, double }

@_cmsIntentsPluginChunk = hidden local_unnamed_addr global %struct._cmsIntentsPluginChunkType zeroinitializer, align 8
@_cmsAllocIntentsPluginChunk.IntentsPluginChunkType = internal global %struct._cmsIntentsPluginChunkType zeroinitializer, align 8
@.str = private unnamed_addr constant [28 x i8] c"Couldn't link '%d' profiles\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"Unsupported intent '%d'\00", align 1
@DefaultIntents = internal global [10 x %struct._cms_intents_list] [%struct._cms_intents_list { i32 0, [256 x i8] c"Perceptual\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @DefaultICCintents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 280) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 1, [256 x i8] c"Relative colorimetricstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @DefaultICCintents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 560) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 2, [256 x i8] c"Saturationstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @DefaultICCintents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 840) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 3, [256 x i8] c"Absolute colorimetricstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @DefaultICCintents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 1120) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 10, [256 x i8] c"Perceptual preserving black inkstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKOnlyIntents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 1400) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 11, [256 x i8] c"Relative colorimetric preserving black inkstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKOnlyIntents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 1680) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 12, [256 x i8] c"Saturation preserving black inkstruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKOnlyIntents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 1960) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 13, [256 x i8] c"Perceptual preserving black planestruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKPlaneIntents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 2240) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 14, [256 x i8] c"Relative colorimetric preserving black planestruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKPlaneIntents, %struct._cms_intents_list* bitcast (i8* getelementptr (i8, i8* bitcast ([10 x %struct._cms_intents_list]* @DefaultIntents to i8*), i64 2520) to %struct._cms_intents_list*) }, %struct._cms_intents_list { i32 15, [256 x i8] c"Saturation preserving black planestruct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)* @BlackPreservingKPlaneIntents, %struct._cms_intents_list* null }], align 16
@.str.2 = private unnamed_addr constant [20 x i8] c"ColorSpace mismatch\00", align 1
@switch.table.BlackPreservingKPlaneIntents = private unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 0, i32 1, i32 2], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_cmsAllocIntentsPluginChunk(%struct._cmsContext_struct* nocapture, %struct._cmsContext_struct* readonly) local_unnamed_addr #0 {
  %3 = alloca %struct._cmsIntentsPluginChunkType, align 8
  %4 = icmp eq %struct._cmsContext_struct* %1, null
  br i1 %4, label %48, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct._cmsIntentsPluginChunkType* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = bitcast %struct._cmsIntentsPluginChunkType* %3 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %1, i64 0, i32 2, i64 10
  %9 = bitcast i8** %8 to %struct._cmsIntentsPluginChunkType**
  %10 = load %struct._cmsIntentsPluginChunkType*, %struct._cmsIntentsPluginChunkType** %9, align 8
  %11 = getelementptr inbounds %struct._cmsIntentsPluginChunkType, %struct._cmsIntentsPluginChunkType* %10, i64 0, i32 0
  %12 = load %struct._cms_intents_list*, %struct._cms_intents_list** %11, align 8
  %13 = icmp eq %struct._cms_intents_list* %12, null
  %14 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %15 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %13, label %43, label %16

16:                                               ; preds = %5
  %17 = bitcast %struct._cmsIntentsPluginChunkType* %3 to i8**
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %struct._cms_intents_list* [ null, %16 ], [ %38, %37 ]
  %20 = phi %struct._cmsSubAllocator* [ %15, %16 ], [ %42, %37 ]
  %21 = phi %struct._cms_intents_list* [ %12, %16 ], [ %40, %37 ]
  %22 = phi %struct._cms_intents_list* [ null, %16 ], [ %25, %37 ]
  %23 = bitcast %struct._cms_intents_list* %21 to i8*
  %24 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %20, i8* nonnull %23, i32 280) #5
  %25 = bitcast i8* %24 to %struct._cms_intents_list*
  %26 = icmp eq i8* %24, null
  br i1 %26, label %47, label %27

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %24, i64 272
  %29 = bitcast i8* %28 to %struct._cms_intents_list**
  store %struct._cms_intents_list* null, %struct._cms_intents_list** %29, align 8
  %30 = icmp eq %struct._cms_intents_list* %22, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %22, i64 0, i32 3
  %33 = bitcast %struct._cms_intents_list** %32 to i8**
  store i8* %24, i8** %33, align 8
  br label %34

34:                                               ; preds = %31, %27
  %35 = icmp eq %struct._cms_intents_list* %19, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  store i8* %24, i8** %17, align 8
  br label %37

37:                                               ; preds = %36, %34
  %38 = phi %struct._cms_intents_list* [ %25, %36 ], [ %19, %34 ]
  %39 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %21, i64 0, i32 3
  %40 = load %struct._cms_intents_list*, %struct._cms_intents_list** %39, align 8
  %41 = icmp eq %struct._cms_intents_list* %40, null
  %42 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %14, align 8
  br i1 %41, label %43, label %18

43:                                               ; preds = %37, %5
  %44 = phi %struct._cmsSubAllocator* [ %15, %5 ], [ %42, %37 ]
  %45 = call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %44, i8* nonnull %6, i32 8) #5
  %46 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 10
  store i8* %45, i8** %46, align 8
  br label %47

47:                                               ; preds = %18, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  br label %53

48:                                               ; preds = %2
  %49 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 1
  %50 = load %struct._cmsSubAllocator*, %struct._cmsSubAllocator** %49, align 8
  %51 = tail call i8* @_cmsSubAllocDup(%struct._cmsSubAllocator* %50, i8* bitcast (%struct._cmsIntentsPluginChunkType* @_cmsAllocIntentsPluginChunk.IntentsPluginChunkType to i8*), i32 8) #5
  %52 = getelementptr inbounds %struct._cmsContext_struct, %struct._cmsContext_struct* %0, i64 0, i32 2, i64 10
  store i8* %51, i8** %52, align 8
  br label %53

53:                                               ; preds = %48, %47
  ret void
}

declare i8* @_cmsSubAllocDup(%struct._cmsSubAllocator*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsPipeline_struct* @_cmsDefaultICCintents(%struct._cmsContext_struct*, i32, i32* nocapture readonly, i8** nocapture readonly, i32* nocapture readonly, double* nocapture readonly, i32) local_unnamed_addr #0 {
  %8 = tail call %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct* %0, i32 %1, i32* %2, i8** %3, i32* %4, double* %5, i32 %6)
  ret %struct._cmsPipeline_struct* %8
}

; Function Attrs: nounwind ssp uwtable
define internal %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct*, i32, i32* nocapture readonly, i8** nocapture readonly, i32* nocapture readonly, double* nocapture readonly, i32) #0 {
  %8 = alloca %struct.cmsMAT3, align 8
  %9 = alloca %struct.cmsVEC3, align 8
  %10 = bitcast %struct.cmsMAT3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -1, i64 72, i1 false)
  %11 = bitcast %struct.cmsVEC3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #5
  %12 = icmp eq i32 %1, 0
  %13 = bitcast %struct.cmsVEC3* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 24, i1 false)
  br i1 %12, label %130, label %14

14:                                               ; preds = %7
  %15 = tail call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %0, i32 0, i32 0) #5
  %16 = icmp eq %struct._cmsPipeline_struct* %15, null
  br i1 %16, label %130, label %17

17:                                               ; preds = %14
  %18 = load i8*, i8** %3, align 8
  %19 = tail call i32 @cmsGetColorSpace(i8* %18) #5
  %20 = icmp eq i32 %1, 1
  %21 = zext i32 %1 to i64
  br label %22

22:                                               ; preds = %111, %17
  %23 = phi i64 [ 0, %17 ], [ %112, %111 ]
  %24 = phi i32 [ %19, %17 ], [ %49, %111 ]
  %25 = getelementptr inbounds i8*, i8** %3, i64 %23
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @cmsGetDeviceClass(i8* %26) #5
  %28 = icmp eq i32 %27, 1633842036
  %29 = icmp ne i64 %23, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22
  switch i32 %27, label %31 [
    i32 1818848875, label %33
    i32 1633842036, label %33
  ]

31:                                               ; preds = %30
  %32 = load i32, i32* %2, align 4
  br label %37

33:                                               ; preds = %22, %30, %30
  %34 = getelementptr inbounds i32, i32* %2, i64 %23
  %35 = load i32, i32* %34, align 4
  switch i32 %24, label %37 [
    i32 1482250784, label %36
    i32 1281450528, label %36
  ]

36:                                               ; preds = %33, %33
  switch i32 %27, label %42 [
    i32 1818848875, label %37
    i32 1633842036, label %37
  ]

37:                                               ; preds = %33, %31, %36, %36
  %38 = phi i1 [ true, %31 ], [ false, %36 ], [ false, %36 ], [ true, %33 ]
  %39 = phi i32 [ %32, %31 ], [ %35, %36 ], [ %35, %36 ], [ %35, %33 ]
  %40 = call i32 @cmsGetColorSpace(i8* %26) #5
  %41 = call i32 @cmsGetPCS(i8* %26) #5
  br label %45

42:                                               ; preds = %36
  %43 = call i32 @cmsGetPCS(i8* %26) #5
  %44 = call i32 @cmsGetColorSpace(i8* %26) #5
  br label %45

45:                                               ; preds = %42, %37
  %46 = phi i1 [ %38, %37 ], [ false, %42 ]
  %47 = phi i32 [ %39, %37 ], [ %35, %42 ]
  %48 = phi i32 [ %40, %37 ], [ %43, %42 ]
  %49 = phi i32 [ %41, %37 ], [ %44, %42 ]
  %50 = icmp eq i32 %48, %24
  br i1 %50, label %68, label %51

51:                                               ; preds = %45
  %52 = icmp eq i32 %48, 876825682
  %53 = icmp eq i32 %24, 1129142603
  %54 = and i1 %53, %52
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = icmp eq i32 %48, 1129142603
  %57 = icmp eq i32 %24, 876825682
  %58 = and i1 %57, %56
  br i1 %58, label %68, label %59

59:                                               ; preds = %55
  %60 = icmp eq i32 %48, 1482250784
  %61 = icmp eq i32 %24, 1281450528
  %62 = and i1 %61, %60
  br i1 %62, label %68, label %63

63:                                               ; preds = %59
  %64 = icmp ne i32 %48, 1281450528
  %65 = icmp ne i32 %24, 1482250784
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %68

67:                                               ; preds = %63
  call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0)) #5
  br label %129

68:                                               ; preds = %59, %55, %51, %45, %63
  switch i32 %27, label %69 [
    i32 1818848875, label %72
    i32 1633842036, label %72
  ]

69:                                               ; preds = %68
  %70 = icmp eq i32 %27, 1852662636
  %71 = and i1 %20, %70
  br i1 %71, label %72, label %89

72:                                               ; preds = %68, %68, %69
  %73 = call %struct._cmsPipeline_struct* @_cmsReadDevicelinkLUT(i8* %26, i32 %47) #5
  %74 = icmp eq %struct._cmsPipeline_struct* %73, null
  br i1 %74, label %129, label %75

75:                                               ; preds = %72
  %76 = and i1 %29, %28
  br i1 %76, label %77, label %85

77:                                               ; preds = %75
  %78 = getelementptr inbounds i32, i32* %4, i64 %23
  %79 = load i32, i32* %78, align 4
  %80 = getelementptr inbounds double, double* %5, i64 %23
  %81 = load double, double* %80, align 8
  %82 = trunc i64 %23 to i32
  %83 = call fastcc i32 @ComputeConversion(i32 %82, i8** %3, i32 %47, i32 %79, double %81, %struct.cmsMAT3* nonnull %8, %struct.cmsVEC3* nonnull %9)
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %127, label %86

85:                                               ; preds = %75
  call void @_cmsMAT3identity(%struct.cmsMAT3* nonnull %8) #5
  call void @_cmsVEC3init(%struct.cmsVEC3* nonnull %9, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #5
  br label %86

86:                                               ; preds = %77, %85
  %87 = call fastcc i32 @AddConversion(%struct._cmsPipeline_struct* nonnull %15, i32 %24, i32 %48, %struct.cmsMAT3* nonnull %8, %struct.cmsVEC3* nonnull %9)
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %127, label %107

89:                                               ; preds = %69
  br i1 %46, label %90, label %93

90:                                               ; preds = %89
  %91 = call %struct._cmsPipeline_struct* @_cmsReadInputLUT(i8* %26, i32 %47) #5
  %92 = icmp eq %struct._cmsPipeline_struct* %91, null
  br i1 %92, label %129, label %107

93:                                               ; preds = %89
  %94 = call %struct._cmsPipeline_struct* @_cmsReadOutputLUT(i8* %26, i32 %47) #5
  %95 = icmp eq %struct._cmsPipeline_struct* %94, null
  br i1 %95, label %129, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds i32, i32* %4, i64 %23
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds double, double* %5, i64 %23
  %100 = load double, double* %99, align 8
  %101 = trunc i64 %23 to i32
  %102 = call fastcc i32 @ComputeConversion(i32 %101, i8** %3, i32 %47, i32 %98, double %100, %struct.cmsMAT3* nonnull %8, %struct.cmsVEC3* nonnull %9)
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %127, label %104

104:                                              ; preds = %96
  %105 = call fastcc i32 @AddConversion(%struct._cmsPipeline_struct* nonnull %15, i32 %24, i32 %48, %struct.cmsMAT3* nonnull %8, %struct.cmsVEC3* nonnull %9)
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %127, label %107

107:                                              ; preds = %86, %104, %90
  %108 = phi %struct._cmsPipeline_struct* [ %73, %86 ], [ %91, %90 ], [ %94, %104 ]
  %109 = call i32 @cmsPipelineCat(%struct._cmsPipeline_struct* nonnull %15, %struct._cmsPipeline_struct* nonnull %108) #5
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %127, label %111

111:                                              ; preds = %107
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %108) #5
  %112 = add nuw nsw i64 %23, 1
  %113 = icmp eq i64 %112, %21
  br i1 %113, label %114, label %22

114:                                              ; preds = %111
  %115 = trunc i32 %6 to i16
  %116 = icmp slt i16 %115, 0
  br i1 %116, label %117, label %130

117:                                              ; preds = %114
  switch i32 %49, label %130 [
    i32 1380401696, label %118
    i32 1196573017, label %118
    i32 1129142603, label %118
  ]

118:                                              ; preds = %117, %117, %117
  %119 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %15, i64 0, i32 8
  %120 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %119, align 8
  %121 = call i32 @cmsChannelsOf(i32 %49) #5
  %122 = call %struct._cmsStage_struct* @_cmsStageClipNegatives(%struct._cmsContext_struct* %120, i32 %121) #5
  %123 = icmp eq %struct._cmsStage_struct* %122, null
  br i1 %123, label %129, label %124

124:                                              ; preds = %118
  %125 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %15, i32 1, %struct._cmsStage_struct* nonnull %122) #5
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %129, label %130

127:                                              ; preds = %107, %104, %96, %86, %77
  %128 = phi %struct._cmsPipeline_struct* [ %73, %77 ], [ %73, %86 ], [ %94, %96 ], [ %94, %104 ], [ %108, %107 ]
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %128) #5
  br label %129

129:                                              ; preds = %93, %90, %72, %118, %124, %67, %127
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %15) #5
  br label %130

130:                                              ; preds = %124, %114, %117, %14, %7, %129
  %131 = phi %struct._cmsPipeline_struct* [ null, %129 ], [ null, %7 ], [ null, %14 ], [ %15, %117 ], [ %15, %114 ], [ %15, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %10) #5
  ret %struct._cmsPipeline_struct* %131
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._cmsPipeline_struct* @_cmsLinkProfiles(%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32) local_unnamed_addr #0 {
  %8 = add i32 %1, -1
  %9 = icmp ugt i32 %8, 254
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = zext i32 %1 to i64
  br label %13

12:                                               ; preds = %7
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %1) #5
  br label %67

13:                                               ; preds = %30, %10
  %14 = phi i64 [ 0, %10 ], [ %31, %30 ]
  %15 = getelementptr inbounds i32, i32* %2, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds i32, i32* %4, i64 %14
  store i32 0, i32* %19, align 4
  %20 = load i32, i32* %15, align 4
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi i32 [ %20, %18 ], [ %16, %13 ]
  switch i32 %22, label %30 [
    i32 0, label %23
    i32 2, label %23
  ]

23:                                               ; preds = %21, %21
  %24 = getelementptr inbounds i8*, i8** %3, i64 %14
  %25 = load i8*, i8** %24, align 8
  %26 = tail call i32 @cmsGetEncodedICCversion(i8* %25) #5
  %27 = icmp ugt i32 %26, 67108863
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds i32, i32* %4, i64 %14
  store i32 1, i32* %29, align 4
  br label %30

30:                                               ; preds = %21, %28, %23
  %31 = add nuw nsw i64 %14, 1
  %32 = icmp eq i64 %31, %11
  br i1 %32, label %33, label %13

33:                                               ; preds = %30
  %34 = load i32, i32* %2, align 4
  %35 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 10) #5
  %36 = bitcast i8* %35 to %struct._cms_intents_list**
  %37 = load %struct._cms_intents_list*, %struct._cms_intents_list** %36, align 8
  %38 = icmp eq %struct._cms_intents_list* %37, null
  br i1 %38, label %48, label %39

39:                                               ; preds = %33, %44
  %40 = phi %struct._cms_intents_list* [ %46, %44 ], [ %37, %33 ]
  %41 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, %34
  br i1 %43, label %62, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %40, i64 0, i32 3
  %46 = load %struct._cms_intents_list*, %struct._cms_intents_list** %45, align 8
  %47 = icmp eq %struct._cms_intents_list* %46, null
  br i1 %47, label %48, label %39

48:                                               ; preds = %44, %33
  br label %49

49:                                               ; preds = %48, %54
  %50 = phi %struct._cms_intents_list* [ %56, %54 ], [ getelementptr inbounds ([10 x %struct._cms_intents_list], [10 x %struct._cms_intents_list]* @DefaultIntents, i64 0, i64 0), %48 ]
  %51 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, %34
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %50, i64 0, i32 3
  %56 = load %struct._cms_intents_list*, %struct._cms_intents_list** %55, align 8
  %57 = icmp eq %struct._cms_intents_list* %56, null
  br i1 %57, label %60, label %49

58:                                               ; preds = %49
  %59 = icmp eq %struct._cms_intents_list* %50, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %54, %58
  %61 = load i32, i32* %2, align 4
  tail call void (%struct._cmsContext_struct*, i32, i8*, ...) @cmsSignalError(%struct._cmsContext_struct* %0, i32 8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i32 %61) #5
  br label %67

62:                                               ; preds = %39, %58
  %63 = phi %struct._cms_intents_list* [ %50, %58 ], [ %40, %39 ]
  %64 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %63, i64 0, i32 2
  %65 = load %struct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)*, %struct._cmsPipeline_struct* (%struct._cmsContext_struct*, i32, i32*, i8**, i32*, double*, i32)** %64, align 8
  %66 = tail call %struct._cmsPipeline_struct* %65(%struct._cmsContext_struct* %0, i32 %1, i32* %2, i8** %3, i32* %4, double* %5, i32 %6) #5
  br label %67

67:                                               ; preds = %62, %60, %12
  %68 = phi %struct._cmsPipeline_struct* [ null, %12 ], [ null, %60 ], [ %66, %62 ]
  ret %struct._cmsPipeline_struct* %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @cmsSignalError(%struct._cmsContext_struct*, i32, i8*, ...) local_unnamed_addr #1

declare i32 @cmsGetEncodedICCversion(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsGetSupportedIntentsTHR(%struct._cmsContext_struct*, i32, i32*, i8**) local_unnamed_addr #0 {
  %5 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 10) #5
  %6 = bitcast i8* %5 to %struct._cms_intents_list**
  %7 = load %struct._cms_intents_list*, %struct._cms_intents_list** %6, align 8
  %8 = icmp eq %struct._cms_intents_list* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %4
  %10 = icmp eq i32* %2, null
  %11 = icmp eq i8** %3, null
  br label %15

12:                                               ; preds = %30, %4
  %13 = icmp eq i32* %2, null
  %14 = icmp eq i8** %3, null
  br label %35

15:                                               ; preds = %9, %30
  %16 = phi %struct._cms_intents_list* [ %7, %9 ], [ %33, %30 ]
  %17 = phi i32 [ 0, %9 ], [ %31, %30 ]
  %18 = icmp ult i32 %17, %1
  br i1 %18, label %19, label %30

19:                                               ; preds = %15
  br i1 %10, label %25, label %20

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %16, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %17 to i64
  %24 = getelementptr inbounds i32, i32* %2, i64 %23
  store i32 %22, i32* %24, align 4
  br label %25

25:                                               ; preds = %19, %20
  br i1 %11, label %30, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %16, i64 0, i32 1, i64 0
  %28 = zext i32 %17 to i64
  %29 = getelementptr inbounds i8*, i8** %3, i64 %28
  store i8* %27, i8** %29, align 8
  br label %30

30:                                               ; preds = %25, %26, %15
  %31 = add i32 %17, 1
  %32 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %16, i64 0, i32 3
  %33 = load %struct._cms_intents_list*, %struct._cms_intents_list** %32, align 8
  %34 = icmp eq %struct._cms_intents_list* %33, null
  br i1 %34, label %12, label %15

35:                                               ; preds = %12, %50
  %36 = phi i32 [ 0, %12 ], [ %51, %50 ]
  %37 = phi %struct._cms_intents_list* [ getelementptr inbounds ([10 x %struct._cms_intents_list], [10 x %struct._cms_intents_list]* @DefaultIntents, i64 0, i64 0), %12 ], [ %53, %50 ]
  %38 = icmp ult i32 %36, %1
  br i1 %38, label %39, label %50

39:                                               ; preds = %35
  br i1 %13, label %45, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %37, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = zext i32 %36 to i64
  %44 = getelementptr inbounds i32, i32* %2, i64 %43
  store i32 %42, i32* %44, align 4
  br label %45

45:                                               ; preds = %39, %40
  br i1 %14, label %50, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %37, i64 0, i32 1, i64 0
  %48 = zext i32 %36 to i64
  %49 = getelementptr inbounds i8*, i8** %3, i64 %48
  store i8* %47, i8** %49, align 8
  br label %50

50:                                               ; preds = %45, %46, %35
  %51 = add i32 %36, 1
  %52 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %37, i64 0, i32 3
  %53 = load %struct._cms_intents_list*, %struct._cms_intents_list** %52, align 8
  %54 = icmp eq %struct._cms_intents_list* %53, null
  br i1 %54, label %55, label %35

55:                                               ; preds = %50
  ret i32 %51
}

declare i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cmsGetSupportedIntents(i32, i32*, i8**) local_unnamed_addr #0 {
  %4 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* null, i32 10) #5
  %5 = bitcast i8* %4 to %struct._cms_intents_list**
  %6 = load %struct._cms_intents_list*, %struct._cms_intents_list** %5, align 8
  %7 = icmp eq %struct._cms_intents_list* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  %9 = icmp eq i32* %1, null
  %10 = icmp eq i8** %2, null
  br label %14

11:                                               ; preds = %29, %3
  %12 = icmp eq i32* %1, null
  %13 = icmp eq i8** %2, null
  br label %34

14:                                               ; preds = %29, %8
  %15 = phi %struct._cms_intents_list* [ %6, %8 ], [ %32, %29 ]
  %16 = phi i32 [ 0, %8 ], [ %30, %29 ]
  %17 = icmp ult i32 %16, %0
  br i1 %17, label %18, label %29

18:                                               ; preds = %14
  br i1 %9, label %24, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %15, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = zext i32 %16 to i64
  %23 = getelementptr inbounds i32, i32* %1, i64 %22
  store i32 %21, i32* %23, align 4
  br label %24

24:                                               ; preds = %19, %18
  br i1 %10, label %29, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %15, i64 0, i32 1, i64 0
  %27 = zext i32 %16 to i64
  %28 = getelementptr inbounds i8*, i8** %2, i64 %27
  store i8* %26, i8** %28, align 8
  br label %29

29:                                               ; preds = %25, %24, %14
  %30 = add i32 %16, 1
  %31 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %15, i64 0, i32 3
  %32 = load %struct._cms_intents_list*, %struct._cms_intents_list** %31, align 8
  %33 = icmp eq %struct._cms_intents_list* %32, null
  br i1 %33, label %11, label %14

34:                                               ; preds = %49, %11
  %35 = phi i32 [ 0, %11 ], [ %50, %49 ]
  %36 = phi %struct._cms_intents_list* [ getelementptr inbounds ([10 x %struct._cms_intents_list], [10 x %struct._cms_intents_list]* @DefaultIntents, i64 0, i64 0), %11 ], [ %52, %49 ]
  %37 = icmp ult i32 %35, %0
  br i1 %37, label %38, label %49

38:                                               ; preds = %34
  br i1 %12, label %44, label %39

39:                                               ; preds = %38
  %40 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %36, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = zext i32 %35 to i64
  %43 = getelementptr inbounds i32, i32* %1, i64 %42
  store i32 %41, i32* %43, align 4
  br label %44

44:                                               ; preds = %39, %38
  br i1 %13, label %49, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %36, i64 0, i32 1, i64 0
  %47 = zext i32 %35 to i64
  %48 = getelementptr inbounds i8*, i8** %2, i64 %47
  store i8* %46, i8** %48, align 8
  br label %49

49:                                               ; preds = %45, %44, %34
  %50 = add i32 %35, 1
  %51 = getelementptr inbounds %struct._cms_intents_list, %struct._cms_intents_list* %36, i64 0, i32 3
  %52 = load %struct._cms_intents_list*, %struct._cms_intents_list** %51, align 8
  %53 = icmp eq %struct._cms_intents_list* %52, null
  br i1 %53, label %54, label %34

54:                                               ; preds = %49
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_cmsRegisterRenderingIntentPlugin(%struct._cmsContext_struct*, %struct._cmsPluginBaseStruct* readonly) local_unnamed_addr #0 {
  %3 = tail call i8* @_cmsContextGetClientChunk(%struct._cmsContext_struct* %0, i32 10) #5
  %4 = icmp eq %struct._cmsPluginBaseStruct* %1, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast i8* %3 to %struct._cms_intents_list**
  store %struct._cms_intents_list* null, %struct._cms_intents_list** %6, align 8
  br label %29

7:                                                ; preds = %2
  %8 = tail call i8* @_cmsPluginMalloc(%struct._cmsContext_struct* %0, i32 280) #5
  %9 = icmp eq i8* %8, null
  br i1 %9, label %29, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = bitcast i8* %8 to i32*
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 4
  %15 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 3
  %16 = bitcast %struct._cmsPluginBaseStruct** %15 to i8*
  %17 = tail call i8* @strncpy(i8* %14, i8* %16, i64 255) #5
  %18 = getelementptr inbounds i8, i8* %8, i64 259
  store i8 0, i8* %18, align 1
  %19 = getelementptr inbounds %struct._cmsPluginBaseStruct, %struct._cmsPluginBaseStruct* %1, i64 1, i32 2
  %20 = bitcast i32* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %8, i64 264
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast i8* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %8, i64 272
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = bitcast i8* %3 to i8**
  store i8* %8, i8** %28, align 8
  br label %29

29:                                               ; preds = %7, %10, %5
  %30 = phi i32 [ 1, %5 ], [ 1, %10 ], [ 0, %7 ]
  ret i32 %30
}

declare i8* @_cmsPluginMalloc(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i8* @strncpy(i8* returned, i8* nocapture readonly, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct*, i32, i32) local_unnamed_addr #1

declare i32 @cmsGetColorSpace(i8*) local_unnamed_addr #1

declare i32 @cmsGetDeviceClass(i8*) local_unnamed_addr #1

declare i32 @cmsGetPCS(i8*) local_unnamed_addr #1

declare %struct._cmsPipeline_struct* @_cmsReadDevicelinkLUT(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ComputeConversion(i32, i8** nocapture readonly, i32, i32, double, %struct.cmsMAT3*, %struct.cmsVEC3*) unnamed_addr #0 {
  %8 = alloca %struct.cmsCIEXYZ, align 8
  %9 = alloca %struct.cmsCIExyY, align 8
  %10 = alloca %struct.cmsMAT3, align 8
  %11 = alloca %struct.cmsMAT3, align 8
  %12 = alloca %struct.cmsMAT3, align 8
  %13 = alloca %struct.cmsMAT3, align 8
  %14 = alloca %struct.cmsMAT3, align 8
  %15 = alloca %struct.cmsMAT3, align 8
  %16 = alloca %struct.cmsCIEXYZ, align 8
  %17 = alloca %struct.cmsCIEXYZ, align 8
  %18 = alloca %struct.cmsMAT3, align 8
  %19 = alloca %struct.cmsMAT3, align 8
  %20 = alloca %struct.cmsCIEXYZ, align 8
  %21 = alloca %struct.cmsCIEXYZ, align 8
  tail call void @_cmsMAT3identity(%struct.cmsMAT3* %5) #5
  tail call void @_cmsVEC3init(%struct.cmsVEC3* %6, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00) #5
  %22 = icmp eq i32 %2, 3
  br i1 %22, label %23, label %119

23:                                               ; preds = %7
  %24 = bitcast %struct.cmsCIEXYZ* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #5
  %25 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %16, i64 0, i32 0
  %26 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %16, i64 0, i32 1
  %27 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %16, i64 0, i32 2
  %28 = bitcast %struct.cmsCIEXYZ* %17 to i8*
  %29 = bitcast %struct.cmsCIEXYZ* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #5
  %30 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %17, i64 0, i32 0
  %31 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %17, i64 0, i32 1
  %32 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %17, i64 0, i32 2
  %33 = bitcast %struct.cmsMAT3* %18 to i8*
  %34 = bitcast %struct.cmsCIEXYZ* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %33) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -1, i64 72, i1 false)
  %35 = bitcast %struct.cmsMAT3* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -1, i64 72, i1 false)
  %36 = add i32 %0, -1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8*, i8** %1, i64 %37
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @_cmsReadMediaWhitePoint(%struct.cmsCIEXYZ* nonnull %16, i8* %39) #5
  %41 = load i8*, i8** %38, align 8
  %42 = call i32 @_cmsReadCHAD(%struct.cmsMAT3* nonnull %18, i8* %41) #5
  %43 = zext i32 %0 to i64
  %44 = getelementptr inbounds i8*, i8** %1, i64 %43
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @_cmsReadMediaWhitePoint(%struct.cmsCIEXYZ* nonnull %17, i8* %45) #5
  %47 = load i8*, i8** %44, align 8
  %48 = call i32 @_cmsReadCHAD(%struct.cmsMAT3* nonnull %19, i8* %47) #5
  %49 = bitcast %struct.cmsMAT3* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %49) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -1, i64 72, i1 false) #5
  %50 = bitcast %struct.cmsMAT3* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %50) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -1, i64 72, i1 false) #5
  %51 = bitcast %struct.cmsMAT3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %51) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -1, i64 72, i1 false) #5
  %52 = bitcast %struct.cmsMAT3* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %52) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -1, i64 72, i1 false) #5
  %53 = bitcast %struct.cmsMAT3* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %53) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -1, i64 72, i1 false) #5
  %54 = fcmp oeq double %4, 1.000000e+00
  br i1 %54, label %55, label %68

55:                                               ; preds = %23
  %56 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 0
  %57 = load double, double* %25, align 8
  %58 = load double, double* %30, align 8
  %59 = fdiv double %57, %58
  call void @_cmsVEC3init(%struct.cmsVEC3* %56, double %59, double 0.000000e+00, double 0.000000e+00) #5
  %60 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 1
  %61 = load double, double* %26, align 8
  %62 = load double, double* %31, align 8
  %63 = fdiv double %61, %62
  call void @_cmsVEC3init(%struct.cmsVEC3* %60, double 0.000000e+00, double %63, double 0.000000e+00) #5
  %64 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 2
  %65 = load double, double* %27, align 8
  %66 = load double, double* %32, align 8
  %67 = fdiv double %65, %66
  call void @_cmsVEC3init(%struct.cmsVEC3* %64, double 0.000000e+00, double 0.000000e+00, double %67) #5
  br label %116

68:                                               ; preds = %23
  %69 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 0
  %70 = load double, double* %25, align 8
  %71 = load double, double* %30, align 8
  %72 = fdiv double %70, %71
  call void @_cmsVEC3init(%struct.cmsVEC3* nonnull %69, double %72, double 0.000000e+00, double 0.000000e+00) #5
  %73 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 1
  %74 = load double, double* %26, align 8
  %75 = load double, double* %31, align 8
  %76 = fdiv double %74, %75
  call void @_cmsVEC3init(%struct.cmsVEC3* %73, double 0.000000e+00, double %76, double 0.000000e+00) #5
  %77 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %10, i64 0, i32 0, i64 2
  %78 = load double, double* %27, align 8
  %79 = load double, double* %32, align 8
  %80 = fdiv double %78, %79
  call void @_cmsVEC3init(%struct.cmsVEC3* %77, double 0.000000e+00, double 0.000000e+00, double %80) #5
  %81 = fcmp oeq double %4, 0.000000e+00
  br i1 %81, label %82, label %86

82:                                               ; preds = %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %35, i64 72, i1 false) #5
  call void @_cmsMAT3per(%struct.cmsMAT3* nonnull %12, %struct.cmsMAT3* nonnull %11, %struct.cmsMAT3* nonnull %10) #5
  call void @_cmsMAT3per(%struct.cmsMAT3* %5, %struct.cmsMAT3* nonnull %12, %struct.cmsMAT3* nonnull %19) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %33, i64 72, i1 false) #5
  %83 = call i32 @_cmsMAT3inverse(%struct.cmsMAT3* nonnull %13, %struct.cmsMAT3* nonnull %14) #5
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %116, label %85

85:                                               ; preds = %82
  call void @_cmsMAT3per(%struct.cmsMAT3* %5, %struct.cmsMAT3* nonnull %12, %struct.cmsMAT3* nonnull %14) #5
  br label %116

86:                                               ; preds = %68
  %87 = bitcast %struct.cmsMAT3* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %87) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -1, i64 72, i1 false) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %33, i64 72, i1 false) #5
  %88 = call i32 @_cmsMAT3inverse(%struct.cmsMAT3* nonnull %11, %struct.cmsMAT3* nonnull %12) #5
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %104, label %90

90:                                               ; preds = %86
  call void @_cmsMAT3per(%struct.cmsMAT3* nonnull %13, %struct.cmsMAT3* nonnull %12, %struct.cmsMAT3* nonnull %10) #5
  %91 = call fastcc double @CHAD2Temp(%struct.cmsMAT3* nonnull %18) #5
  %92 = call fastcc double @CHAD2Temp(%struct.cmsMAT3* nonnull %19) #5
  %93 = fcmp olt double %91, 0.000000e+00
  %94 = fcmp olt double %92, 0.000000e+00
  %95 = or i1 %93, %94
  br i1 %95, label %104, label %96

96:                                               ; preds = %90
  %97 = call i32 @_cmsMAT3isIdentity(%struct.cmsMAT3* nonnull %10) #5
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = fsub double %91, %92
  %101 = call double @llvm.fabs.f64(double %100) #5
  %102 = fcmp olt double %101, 1.000000e-02
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  call void @_cmsMAT3identity(%struct.cmsMAT3* %5) #5
  br label %104

104:                                              ; preds = %103, %90, %86
  %105 = phi i32 [ 0, %90 ], [ 0, %86 ], [ 1, %103 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %87) #5
  br label %116

106:                                              ; preds = %99, %96
  %107 = fsub double 1.000000e+00, %4
  %108 = fmul double %107, %92
  %109 = fmul double %91, %4
  %110 = fadd double %109, %108
  %111 = bitcast %struct.cmsCIEXYZ* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #5
  %112 = bitcast %struct.cmsCIExyY* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -1, i64 24, i1 false) #5
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -1, i64 24, i1 false) #5
  %113 = call i32 @cmsWhitePointFromTemp(%struct.cmsCIExyY* nonnull %9, double %110) #5
  call void @cmsxyY2XYZ(%struct.cmsCIEXYZ* nonnull %8, %struct.cmsCIExyY* nonnull %9) #5
  %114 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %115 = call i32 @_cmsAdaptationMatrix(%struct.cmsMAT3* nonnull %15, %struct.cmsMAT3* null, %struct.cmsCIEXYZ* nonnull %8, %struct.cmsCIEXYZ* %114) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #5
  call void @_cmsMAT3per(%struct.cmsMAT3* %5, %struct.cmsMAT3* nonnull %13, %struct.cmsMAT3* nonnull %15) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %87) #5
  br label %116

116:                                              ; preds = %55, %82, %85, %104, %106
  %117 = phi i32 [ 0, %82 ], [ %105, %104 ], [ 1, %106 ], [ 1, %85 ], [ 1, %55 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %53) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %52) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %51) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %50) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %49) #5
  %118 = icmp eq i32 %117, 0
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %33) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #5
  br i1 %118, label %224, label %216

119:                                              ; preds = %7
  %120 = icmp eq i32 %3, 0
  br i1 %120, label %216, label %121

121:                                              ; preds = %119
  %122 = bitcast %struct.cmsCIEXYZ* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #5
  %123 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %20, i64 0, i32 0
  %124 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %20, i64 0, i32 1
  %125 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %20, i64 0, i32 2
  %126 = bitcast %struct.cmsCIEXYZ* %21 to i8*
  %127 = bitcast %struct.cmsCIEXYZ* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #5
  %128 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %21, i64 0, i32 0
  %129 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %21, i64 0, i32 1
  %130 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %21, i64 0, i32 2
  %131 = add i32 %0, -1
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8*, i8** %1, i64 %132
  %134 = bitcast %struct.cmsCIEXYZ* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -1, i64 24, i1 false)
  %135 = load i8*, i8** %133, align 8
  %136 = call i32 @cmsDetectBlackPoint(%struct.cmsCIEXYZ* nonnull %20, i8* %135, i32 %2, i32 0) #5
  %137 = zext i32 %0 to i64
  %138 = getelementptr inbounds i8*, i8** %1, i64 %137
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 @cmsDetectDestinationBlackPoint(%struct.cmsCIEXYZ* nonnull %21, i8* %139, i32 %2, i32 0) #5
  %141 = load double, double* %123, align 8
  %142 = load double, double* %128, align 8
  %143 = fcmp une double %141, %142
  br i1 %143, label %152, label %144

144:                                              ; preds = %121
  %145 = load double, double* %124, align 8
  %146 = load double, double* %129, align 8
  %147 = fcmp une double %145, %146
  br i1 %147, label %152, label %148

148:                                              ; preds = %144
  %149 = load double, double* %125, align 8
  %150 = load double, double* %130, align 8
  %151 = fcmp une double %149, %150
  br i1 %151, label %152, label %215

152:                                              ; preds = %148, %144, %121
  %153 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %154 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %153, i64 0, i32 0
  %155 = load double, double* %154, align 8
  %156 = fsub double %141, %155
  %157 = load double, double* %124, align 8
  %158 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %159 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %158, i64 0, i32 1
  %160 = load double, double* %159, align 8
  %161 = fsub double %157, %160
  %162 = load double, double* %125, align 8
  %163 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %164 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %163, i64 0, i32 2
  %165 = load double, double* %164, align 8
  %166 = fsub double %162, %165
  %167 = load double, double* %128, align 8
  %168 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %169 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %168, i64 0, i32 0
  %170 = load double, double* %169, align 8
  %171 = fsub double %167, %170
  %172 = fdiv double %171, %156
  %173 = load double, double* %129, align 8
  %174 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %175 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %174, i64 0, i32 1
  %176 = load double, double* %175, align 8
  %177 = fsub double %173, %176
  %178 = fdiv double %177, %161
  %179 = load double, double* %130, align 8
  %180 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %181 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %180, i64 0, i32 2
  %182 = load double, double* %181, align 8
  %183 = fsub double %179, %182
  %184 = fdiv double %183, %166
  %185 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %186 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %185, i64 0, i32 0
  %187 = load double, double* %186, align 8
  %188 = load double, double* %128, align 8
  %189 = load double, double* %123, align 8
  %190 = fsub double %188, %189
  %191 = fmul double %187, %190
  %192 = fsub double -0.000000e+00, %191
  %193 = fdiv double %192, %156
  %194 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %195 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %194, i64 0, i32 1
  %196 = load double, double* %195, align 8
  %197 = load double, double* %129, align 8
  %198 = load double, double* %124, align 8
  %199 = fsub double %197, %198
  %200 = fmul double %196, %199
  %201 = fsub double -0.000000e+00, %200
  %202 = fdiv double %201, %161
  %203 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %204 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %203, i64 0, i32 2
  %205 = load double, double* %204, align 8
  %206 = load double, double* %130, align 8
  %207 = load double, double* %125, align 8
  %208 = fsub double %206, %207
  %209 = fmul double %205, %208
  %210 = fsub double -0.000000e+00, %209
  %211 = fdiv double %210, %166
  %212 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 0
  call void @_cmsVEC3init(%struct.cmsVEC3* %212, double %172, double 0.000000e+00, double 0.000000e+00) #5
  %213 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 1
  call void @_cmsVEC3init(%struct.cmsVEC3* %213, double 0.000000e+00, double %178, double 0.000000e+00) #5
  %214 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %5, i64 0, i32 0, i64 2
  call void @_cmsVEC3init(%struct.cmsVEC3* %214, double 0.000000e+00, double 0.000000e+00, double %184) #5
  call void @_cmsVEC3init(%struct.cmsVEC3* %6, double %193, double %202, double %211) #5
  br label %215

215:                                              ; preds = %152, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #5
  br label %216

216:                                              ; preds = %116, %119, %215
  %217 = bitcast %struct.cmsVEC3* %6 to <2 x double>*
  %218 = load <2 x double>, <2 x double>* %217, align 8
  %219 = fdiv <2 x double> %218, <double 0x3FFFFFE000000000, double 0x3FFFFFE000000000>
  %220 = bitcast %struct.cmsVEC3* %6 to <2 x double>*
  store <2 x double> %219, <2 x double>* %220, align 8
  %221 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %6, i64 0, i32 0, i64 2
  %222 = load double, double* %221, align 8
  %223 = fdiv double %222, 0x3FFFFFE000000000
  store double %223, double* %221, align 8
  br label %224

224:                                              ; preds = %216, %116
  %225 = phi i32 [ 0, %116 ], [ 1, %216 ]
  ret i32 %225
}

declare void @_cmsMAT3identity(%struct.cmsMAT3*) local_unnamed_addr #1

declare void @_cmsVEC3init(%struct.cmsVEC3*, double, double, double) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @AddConversion(%struct._cmsPipeline_struct*, i32, i32, %struct.cmsMAT3*, %struct.cmsVEC3*) unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 0
  %7 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %4, i64 0, i32 0, i64 0
  switch i32 %1, label %67 [
    i32 1482250784, label %8
    i32 1281450528, label %33
  ]

8:                                                ; preds = %5
  switch i32 %2, label %70 [
    i32 1482250784, label %9
    i32 1281450528, label %18
  ]

9:                                                ; preds = %8
  %10 = tail call fastcc i32 @IsEmptyLayer(%struct.cmsMAT3* %3, %struct.cmsVEC3* %4)
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %69

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %14 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %13, align 8
  %15 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %14, i32 3, i32 3, double* %6, double* %7) #5
  %16 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %15) #5
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %70, label %69

18:                                               ; preds = %8
  %19 = tail call fastcc i32 @IsEmptyLayer(%struct.cmsMAT3* %3, %struct.cmsVEC3* %4)
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %23 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %22, align 8
  %24 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %23, i32 3, i32 3, double* %6, double* %7) #5
  %25 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %24) #5
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %21, %18
  %28 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %29 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %28, align 8
  %30 = tail call %struct._cmsStage_struct* @_cmsStageAllocXYZ2Lab(%struct._cmsContext_struct* %29) #5
  %31 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %30) #5
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %70, label %69

33:                                               ; preds = %5
  switch i32 %2, label %70 [
    i32 1482250784, label %34
    i32 1281450528, label %48
  ]

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %36 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %37 = tail call %struct._cmsStage_struct* @_cmsStageAllocLab2XYZ(%struct._cmsContext_struct* %36) #5
  %38 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %37) #5
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %70, label %40

40:                                               ; preds = %34
  %41 = tail call fastcc i32 @IsEmptyLayer(%struct.cmsMAT3* %3, %struct.cmsVEC3* %4)
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %69

43:                                               ; preds = %40
  %44 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %35, align 8
  %45 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %44, i32 3, i32 3, double* %6, double* %7) #5
  %46 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %45) #5
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %70, label %69

48:                                               ; preds = %33
  %49 = tail call fastcc i32 @IsEmptyLayer(%struct.cmsMAT3* %3, %struct.cmsVEC3* %4)
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %69

51:                                               ; preds = %48
  %52 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %0, i64 0, i32 8
  %53 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %52, align 8
  %54 = tail call %struct._cmsStage_struct* @_cmsStageAllocLab2XYZ(%struct._cmsContext_struct* %53) #5
  %55 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %54) #5
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %70, label %57

57:                                               ; preds = %51
  %58 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %52, align 8
  %59 = tail call %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct* %58, i32 3, i32 3, double* %6, double* %7) #5
  %60 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %59) #5
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = load %struct._cmsContext_struct*, %struct._cmsContext_struct** %52, align 8
  %64 = tail call %struct._cmsStage_struct* @_cmsStageAllocXYZ2Lab(%struct._cmsContext_struct* %63) #5
  %65 = tail call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* %0, i32 1, %struct._cmsStage_struct* %64) #5
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %69

67:                                               ; preds = %5
  %68 = icmp eq i32 %1, %2
  br i1 %68, label %69, label %70

69:                                               ; preds = %67, %12, %9, %27, %43, %40, %62, %48
  br label %70

70:                                               ; preds = %67, %33, %51, %57, %62, %43, %34, %8, %27, %21, %12, %69
  %71 = phi i32 [ 1, %69 ], [ 0, %12 ], [ 0, %21 ], [ 0, %27 ], [ 0, %8 ], [ 0, %34 ], [ 0, %43 ], [ 0, %62 ], [ 0, %57 ], [ 0, %51 ], [ 0, %33 ], [ 0, %67 ]
  ret i32 %71
}

declare %struct._cmsPipeline_struct* @_cmsReadInputLUT(i8*, i32) local_unnamed_addr #1

declare %struct._cmsPipeline_struct* @_cmsReadOutputLUT(i8*, i32) local_unnamed_addr #1

declare i32 @cmsPipelineCat(%struct._cmsPipeline_struct*, %struct._cmsPipeline_struct*) local_unnamed_addr #1

declare void @cmsPipelineFree(%struct._cmsPipeline_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @_cmsStageClipNegatives(%struct._cmsContext_struct*, i32) local_unnamed_addr #1

declare i32 @cmsChannelsOf(i32) local_unnamed_addr #1

declare i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct*, i32, %struct._cmsStage_struct*) local_unnamed_addr #1

declare i32 @_cmsReadMediaWhitePoint(%struct.cmsCIEXYZ*, i8*) local_unnamed_addr #1

declare i32 @_cmsReadCHAD(%struct.cmsMAT3*, i8*) local_unnamed_addr #1

declare i32 @cmsDetectBlackPoint(%struct.cmsCIEXYZ*, i8*, i32, i32) local_unnamed_addr #1

declare i32 @cmsDetectDestinationBlackPoint(%struct.cmsCIEXYZ*, i8*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_cmsMAT3per(%struct.cmsMAT3*, %struct.cmsMAT3*, %struct.cmsMAT3*) local_unnamed_addr #1

declare i32 @_cmsMAT3inverse(%struct.cmsMAT3*, %struct.cmsMAT3*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc double @CHAD2Temp(%struct.cmsMAT3* nocapture readonly) unnamed_addr #0 {
  %2 = alloca %struct.cmsVEC3, align 16
  %3 = alloca %struct.cmsVEC3, align 8
  %4 = alloca %struct.cmsCIEXYZ, align 16
  %5 = alloca %struct.cmsCIExyY, align 8
  %6 = alloca double, align 8
  %7 = alloca %struct.cmsMAT3, align 8
  %8 = alloca %struct.cmsMAT3, align 8
  %9 = bitcast %struct.cmsVEC3* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #5
  %10 = bitcast %struct.cmsVEC3* %3 to i8*
  %11 = bitcast %struct.cmsVEC3* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %11, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #5
  %12 = bitcast %struct.cmsCIEXYZ* %4 to i8*
  %13 = bitcast %struct.cmsVEC3* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #5
  %14 = bitcast %struct.cmsCIExyY* %5 to i8*
  %15 = bitcast %struct.cmsCIEXYZ* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %15, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #5
  %16 = bitcast double* %6 to i8*
  %17 = bitcast %struct.cmsCIExyY* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %18 = bitcast %struct.cmsMAT3* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %18) #5
  %19 = bitcast %struct.cmsMAT3* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %19) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -1, i64 72, i1 false)
  %20 = bitcast %struct.cmsMAT3* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 8 %20, i64 72, i1 false)
  %21 = call i32 @_cmsMAT3inverse(%struct.cmsMAT3* nonnull %7, %struct.cmsMAT3* nonnull %8) #5
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %52, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %4, i64 0, i32 2
  %25 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %3, i64 0, i32 0, i64 2
  %26 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %3, i64 0, i32 0, i64 1
  %27 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %2, i64 0, i32 0, i64 2
  %28 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %29 = bitcast %struct.cmsCIEXYZ* %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %struct.cmsVEC3* %3 to i64*
  store i64 %30, i64* %31, align 8
  %32 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %33 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %32, i64 0, i32 1
  %34 = bitcast double* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast double* %26 to i64*
  store i64 %35, i64* %36, align 8
  %37 = call %struct.cmsCIEXYZ* @cmsD50_XYZ() #5
  %38 = getelementptr inbounds %struct.cmsCIEXYZ, %struct.cmsCIEXYZ* %37, i64 0, i32 2
  %39 = bitcast double* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast double* %25 to i64*
  store i64 %40, i64* %41, align 8
  call void @_cmsMAT3eval(%struct.cmsVEC3* nonnull %2, %struct.cmsMAT3* nonnull %8, %struct.cmsVEC3* nonnull %3) #5
  %42 = bitcast %struct.cmsVEC3* %2 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 16
  %44 = bitcast %struct.cmsCIEXYZ* %4 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 16
  %45 = bitcast double* %27 to i64*
  %46 = load i64, i64* %45, align 16
  %47 = bitcast double* %24 to i64*
  store i64 %46, i64* %47, align 16
  call void @cmsXYZ2xyY(%struct.cmsCIExyY* nonnull %5, %struct.cmsCIEXYZ* nonnull %4) #5
  %48 = call i32 @cmsTempFromWhitePoint(double* nonnull %6, %struct.cmsCIExyY* nonnull %5) #5
  %49 = icmp eq i32 %48, 0
  %50 = load double, double* %6, align 8
  %51 = select i1 %49, double -1.000000e+00, double %50
  br label %52

52:                                               ; preds = %23, %1
  %53 = phi double [ 0.000000e+00, %1 ], [ %51, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %18) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #5
  ret double %53
}

declare i32 @_cmsMAT3isIdentity(%struct.cmsMAT3*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #4

declare %struct.cmsCIEXYZ* @cmsD50_XYZ() local_unnamed_addr #1

declare void @_cmsMAT3eval(%struct.cmsVEC3*, %struct.cmsMAT3*, %struct.cmsVEC3*) local_unnamed_addr #1

declare void @cmsXYZ2xyY(%struct.cmsCIExyY*, %struct.cmsCIEXYZ*) local_unnamed_addr #1

declare i32 @cmsTempFromWhitePoint(double*, %struct.cmsCIExyY*) local_unnamed_addr #1

declare i32 @cmsWhitePointFromTemp(%struct.cmsCIExyY*, double) local_unnamed_addr #1

declare void @cmsxyY2XYZ(%struct.cmsCIEXYZ*, %struct.cmsCIExyY*) local_unnamed_addr #1

declare i32 @_cmsAdaptationMatrix(%struct.cmsMAT3*, %struct.cmsMAT3*, %struct.cmsCIEXYZ*, %struct.cmsCIEXYZ*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @IsEmptyLayer(%struct.cmsMAT3* readonly, %struct.cmsVEC3* readonly) unnamed_addr #0 {
  %3 = alloca %struct.cmsMAT3, align 16
  %4 = bitcast %struct.cmsMAT3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %4) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -1, i64 72, i1 false)
  %5 = icmp eq %struct.cmsMAT3* %0, null
  %6 = icmp eq %struct.cmsVEC3* %1, null
  %7 = and i1 %5, %6
  br i1 %7, label %84, label %8

8:                                                ; preds = %2
  %9 = icmp ne %struct.cmsVEC3* %1, null
  %10 = and i1 %5, %9
  br i1 %10, label %84, label %11

11:                                               ; preds = %8
  call void @_cmsMAT3identity(%struct.cmsMAT3* nonnull %3) #5
  %12 = bitcast %struct.cmsMAT3* %0 to <2 x double>*
  %13 = load <2 x double>, <2 x double>* %12, align 8
  %14 = bitcast %struct.cmsMAT3* %3 to <2 x double>*
  %15 = load <2 x double>, <2 x double>* %14, align 16
  %16 = fsub <2 x double> %13, %15
  %17 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %16)
  %18 = extractelement <2 x double> %17, i32 0
  %19 = extractelement <2 x double> %17, i32 1
  %20 = fadd double %18, %19
  %21 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 2
  %22 = load double, double* %21, align 8
  %23 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 2
  %24 = load double, double* %23, align 16
  %25 = fsub double %22, %24
  %26 = call double @llvm.fabs.f64(double %25)
  %27 = fadd double %20, %26
  %28 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 3
  %29 = load double, double* %28, align 8
  %30 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 3
  %31 = load double, double* %30, align 8
  %32 = fsub double %29, %31
  %33 = call double @llvm.fabs.f64(double %32)
  %34 = fadd double %27, %33
  %35 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 4
  %36 = load double, double* %35, align 8
  %37 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 4
  %38 = load double, double* %37, align 16
  %39 = fsub double %36, %38
  %40 = call double @llvm.fabs.f64(double %39)
  %41 = fadd double %34, %40
  %42 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 5
  %43 = load double, double* %42, align 8
  %44 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 5
  %45 = load double, double* %44, align 8
  %46 = fsub double %43, %45
  %47 = call double @llvm.fabs.f64(double %46)
  %48 = fadd double %41, %47
  %49 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 6
  %50 = load double, double* %49, align 8
  %51 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 6
  %52 = load double, double* %51, align 16
  %53 = fsub double %50, %52
  %54 = call double @llvm.fabs.f64(double %53)
  %55 = fadd double %48, %54
  %56 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 7
  %57 = load double, double* %56, align 8
  %58 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 7
  %59 = load double, double* %58, align 8
  %60 = fsub double %57, %59
  %61 = call double @llvm.fabs.f64(double %60)
  %62 = fadd double %55, %61
  %63 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %0, i64 0, i32 0, i64 0, i32 0, i64 8
  %64 = load double, double* %63, align 8
  %65 = getelementptr inbounds %struct.cmsMAT3, %struct.cmsMAT3* %3, i64 0, i32 0, i64 0, i32 0, i64 8
  %66 = load double, double* %65, align 16
  %67 = fsub double %64, %66
  %68 = call double @llvm.fabs.f64(double %67)
  %69 = fadd double %62, %68
  %70 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %1, i64 0, i32 0, i64 0
  %71 = load double, double* %70, align 8
  %72 = call double @llvm.fabs.f64(double %71)
  %73 = fadd double %69, %72
  %74 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %1, i64 0, i32 0, i64 1
  %75 = load double, double* %74, align 8
  %76 = call double @llvm.fabs.f64(double %75)
  %77 = fadd double %73, %76
  %78 = getelementptr inbounds %struct.cmsVEC3, %struct.cmsVEC3* %1, i64 0, i32 0, i64 2
  %79 = load double, double* %78, align 8
  %80 = call double @llvm.fabs.f64(double %79)
  %81 = fadd double %77, %80
  %82 = fcmp olt double %81, 2.000000e-03
  %83 = zext i1 %82 to i32
  br label %84

84:                                               ; preds = %8, %2, %11
  %85 = phi i32 [ %83, %11 ], [ 1, %2 ], [ 0, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %4) #5
  ret i32 %85
}

declare %struct._cmsStage_struct* @cmsStageAllocMatrix(%struct._cmsContext_struct*, i32, i32, double*, double*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @_cmsStageAllocXYZ2Lab(%struct._cmsContext_struct*) local_unnamed_addr #1

declare %struct._cmsStage_struct* @_cmsStageAllocLab2XYZ(%struct._cmsContext_struct*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal %struct._cmsPipeline_struct* @BlackPreservingKOnlyIntents(%struct._cmsContext_struct*, i32, i32* nocapture readonly, i8**, i32*, double*, i32) #0 {
  %8 = alloca %struct.GrayOnlyParams, align 8
  %9 = alloca [256 x i32], align 16
  %10 = bitcast %struct.GrayOnlyParams* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #5
  %11 = getelementptr inbounds %struct.GrayOnlyParams, %struct.GrayOnlyParams* %8, i64 0, i32 0
  %12 = getelementptr inbounds %struct.GrayOnlyParams, %struct.GrayOnlyParams* %8, i64 0, i32 1
  %13 = bitcast [256 x i32]* %9 to i8*
  %14 = bitcast %struct.GrayOnlyParams* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %13) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 1024, i1 false)
  %15 = add i32 %1, -1
  %16 = icmp ugt i32 %15, 254
  br i1 %16, label %102, label %17

17:                                               ; preds = %7
  %18 = zext i32 %1 to i64
  %19 = and i64 %18, 1
  %20 = icmp eq i32 %1, 1
  br i1 %20, label %42, label %21

21:                                               ; preds = %17
  %22 = sub nsw i64 %18, %19
  br label %23

23:                                               ; preds = %108, %21
  %24 = phi i64 [ 0, %21 ], [ %111, %108 ]
  %25 = phi i64 [ %22, %21 ], [ %112, %108 ]
  %26 = getelementptr inbounds i32, i32* %2, i64 %24
  %27 = load i32, i32* %26, align 4
  %28 = add i32 %27, -10
  %29 = icmp ult i32 %28, 6
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = sext i32 %28 to i64
  %32 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %23, %30
  %35 = phi i32 [ %33, %30 ], [ %27, %23 ]
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %24
  store i32 %35, i32* %36, align 8
  %37 = or i64 %24, 1
  %38 = getelementptr inbounds i32, i32* %2, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -10
  %41 = icmp ult i32 %40, 6
  br i1 %41, label %104, label %108

42:                                               ; preds = %108, %17
  %43 = phi i64 [ 0, %17 ], [ %111, %108 ]
  %44 = icmp eq i64 %19, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds i32, i32* %2, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, -10
  %49 = icmp ult i32 %48, 6
  br i1 %49, label %50, label %54

50:                                               ; preds = %45
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %50, %45
  %55 = phi i32 [ %53, %50 ], [ %47, %45 ]
  %56 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %43
  store i32 %55, i32* %56, align 4
  br label %57

57:                                               ; preds = %42, %54
  %58 = load i8*, i8** %3, align 8
  %59 = tail call i32 @cmsGetColorSpace(i8* %58) #5
  %60 = icmp eq i32 %59, 1129142603
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = zext i32 %15 to i64
  %63 = getelementptr inbounds i8*, i8** %3, i64 %62
  %64 = load i8*, i8** %63, align 8
  %65 = tail call i32 @cmsGetColorSpace(i8* %64) #5
  %66 = icmp eq i32 %65, 1129142603
  br i1 %66, label %70, label %67

67:                                               ; preds = %61, %57
  %68 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %69 = call %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct* %0, i32 %1, i32* nonnull %68, i8** %3, i32* %4, double* %5, i32 %6)
  br label %102

70:                                               ; preds = %61
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false)
  %71 = tail call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %0, i32 4, i32 4) #5
  %72 = icmp eq %struct._cmsPipeline_struct* %71, null
  br i1 %72, label %102, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %75 = call %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct* %0, i32 %1, i32* nonnull %74, i8** %3, i32* %4, double* %5, i32 %6)
  store %struct._cmsPipeline_struct* %75, %struct._cmsPipeline_struct** %11, align 8
  %76 = icmp eq %struct._cmsPipeline_struct* %75, null
  br i1 %76, label %97, label %77

77:                                               ; preds = %73
  %78 = call %struct._cms_curve_struct* @_cmsBuildKToneCurve(%struct._cmsContext_struct* %0, i32 4096, i32 %1, i32* nonnull %74, i8** %3, i32* %4, double* %5, i32 %6) #5
  store %struct._cms_curve_struct* %78, %struct._cms_curve_struct** %12, align 8
  %79 = icmp eq %struct._cms_curve_struct* %78, null
  br i1 %79, label %95, label %80

80:                                               ; preds = %77
  %81 = call i32 @_cmsReasonableGridpointsByColorspace(i32 1129142603, i32 %6) #5
  %82 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %0, i32 %81, i32 4, i32 4, i16* null) #5
  %83 = icmp eq %struct._cmsStage_struct* %82, null
  br i1 %83, label %95, label %84

84:                                               ; preds = %80
  %85 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %71, i32 0, %struct._cmsStage_struct* nonnull %82) #5
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %95, label %87

87:                                               ; preds = %84
  %88 = call i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* nonnull %82, i32 (i16*, i16*, i8*)* nonnull @BlackPreservingGrayOnlySampler, i8* nonnull %10, i32 0) #5
  %89 = icmp eq i32 %88, 0
  %90 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %11, align 8
  br i1 %89, label %93, label %91

91:                                               ; preds = %87
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* %90) #5
  %92 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %12, align 8
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* %92) #5
  br label %102

93:                                               ; preds = %87
  %94 = icmp eq %struct._cmsPipeline_struct* %90, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %77, %80, %84, %93
  %96 = phi %struct._cmsPipeline_struct* [ %90, %93 ], [ %75, %84 ], [ %75, %80 ], [ %75, %77 ]
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %96) #5
  br label %97

97:                                               ; preds = %73, %93, %95
  %98 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %12, align 8
  %99 = icmp eq %struct._cms_curve_struct* %98, null
  br i1 %99, label %101, label %100

100:                                              ; preds = %97
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %98) #5
  br label %101

101:                                              ; preds = %100, %97
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %71) #5
  br label %102

102:                                              ; preds = %70, %7, %101, %91, %67
  %103 = phi %struct._cmsPipeline_struct* [ %69, %67 ], [ null, %101 ], [ %71, %91 ], [ null, %7 ], [ null, %70 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %13) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #5
  ret %struct._cmsPipeline_struct* %103

104:                                              ; preds = %34
  %105 = sext i32 %40 to i64
  %106 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  br label %108

108:                                              ; preds = %104, %34
  %109 = phi i32 [ %107, %104 ], [ %39, %34 ]
  %110 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %37
  store i32 %109, i32* %110, align 4
  %111 = add nuw nsw i64 %24, 2
  %112 = add i64 %25, -2
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %42, label %23
}

; Function Attrs: nounwind ssp uwtable
define internal %struct._cmsPipeline_struct* @BlackPreservingKPlaneIntents(%struct._cmsContext_struct*, i32, i32* nocapture readonly, i8**, i32*, double*, i32) #0 {
  %8 = alloca %struct.PreserveKPlaneParams, align 8
  %9 = alloca [256 x i32], align 16
  %10 = bitcast %struct.PreserveKPlaneParams* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %10) #5
  %11 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 0
  %12 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 1
  %13 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 2
  %14 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 3
  %15 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 4
  %16 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 5
  %17 = bitcast %struct.PreserveKPlaneParams* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 40, i1 false)
  store double 0xFFFFFFFFFFFFFFFF, double* %16, align 8
  %18 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 6
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = getelementptr inbounds %struct.PreserveKPlaneParams, %struct.PreserveKPlaneParams* %8, i64 0, i32 7
  store double 0xFFFFFFFFFFFFFFFF, double* %19, align 8
  %20 = bitcast [256 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %20) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 1024, i1 false)
  %21 = add i32 %1, -1
  %22 = icmp ugt i32 %21, 254
  br i1 %22, label %138, label %23

23:                                               ; preds = %7
  %24 = zext i32 %1 to i64
  %25 = and i64 %24, 1
  %26 = icmp eq i32 %1, 1
  br i1 %26, label %48, label %27

27:                                               ; preds = %23
  %28 = sub nsw i64 %24, %25
  br label %29

29:                                               ; preds = %144, %27
  %30 = phi i64 [ 0, %27 ], [ %147, %144 ]
  %31 = phi i64 [ %28, %27 ], [ %148, %144 ]
  %32 = getelementptr inbounds i32, i32* %2, i64 %30
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, -10
  %35 = icmp ult i32 %34, 6
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = sext i32 %34 to i64
  %38 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %29, %36
  %41 = phi i32 [ %39, %36 ], [ %33, %29 ]
  %42 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %30
  store i32 %41, i32* %42, align 8
  %43 = or i64 %30, 1
  %44 = getelementptr inbounds i32, i32* %2, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -10
  %47 = icmp ult i32 %46, 6
  br i1 %47, label %140, label %144

48:                                               ; preds = %144, %23
  %49 = phi i64 [ 0, %23 ], [ %147, %144 ]
  %50 = icmp eq i64 %25, 0
  br i1 %50, label %63, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds i32, i32* %2, i64 %49
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, -10
  %55 = icmp ult i32 %54, 6
  br i1 %55, label %56, label %60

56:                                               ; preds = %51
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %57
  %59 = load i32, i32* %58, align 4
  br label %60

60:                                               ; preds = %56, %51
  %61 = phi i32 [ %59, %56 ], [ %53, %51 ]
  %62 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %49
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %48, %60
  %64 = load i8*, i8** %3, align 8
  %65 = tail call i32 @cmsGetColorSpace(i8* %64) #5
  %66 = icmp eq i32 %65, 1129142603
  br i1 %66, label %67, label %77

67:                                               ; preds = %63
  %68 = zext i32 %21 to i64
  %69 = getelementptr inbounds i8*, i8** %3, i64 %68
  %70 = load i8*, i8** %69, align 8
  %71 = tail call i32 @cmsGetColorSpace(i8* %70) #5
  %72 = icmp eq i32 %71, 1129142603
  br i1 %72, label %80, label %73

73:                                               ; preds = %67
  %74 = load i8*, i8** %69, align 8
  %75 = tail call i32 @cmsGetDeviceClass(i8* %74) #5
  %76 = icmp eq i32 %75, 1886549106
  br i1 %76, label %80, label %77

77:                                               ; preds = %63, %73
  %78 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %79 = call %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct* %0, i32 %1, i32* nonnull %78, i8** %3, i32* %4, double* %5, i32 %6)
  br label %138

80:                                               ; preds = %73, %67
  %81 = tail call %struct._cmsPipeline_struct* @cmsPipelineAlloc(%struct._cmsContext_struct* %0, i32 4, i32 4) #5
  %82 = icmp eq %struct._cmsPipeline_struct* %81, null
  br i1 %82, label %138, label %83

83:                                               ; preds = %80
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 64, i1 false)
  %84 = load i8*, i8** %69, align 8
  %85 = tail call %struct._cmsPipeline_struct* @_cmsReadInputLUT(i8* %84, i32 1) #5
  store %struct._cmsPipeline_struct* %85, %struct._cmsPipeline_struct** %15, align 8
  %86 = icmp eq %struct._cmsPipeline_struct* %85, null
  br i1 %86, label %122, label %87

87:                                               ; preds = %83
  %88 = load i8*, i8** %69, align 8
  %89 = tail call double @cmsDetectTAC(i8* %88) #5
  %90 = fdiv double %89, 1.000000e+02
  store double %90, double* %19, align 8
  %91 = fcmp ugt double %90, 0.000000e+00
  br i1 %91, label %92, label %122

92:                                               ; preds = %87
  %93 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 0
  %94 = call %struct._cmsPipeline_struct* @DefaultICCintents(%struct._cmsContext_struct* %0, i32 %1, i32* nonnull %93, i8** %3, i32* %4, double* %5, i32 %6)
  store %struct._cmsPipeline_struct* %94, %struct._cmsPipeline_struct** %11, align 8
  %95 = icmp eq %struct._cmsPipeline_struct* %94, null
  br i1 %95, label %122, label %96

96:                                               ; preds = %92
  %97 = call %struct._cms_curve_struct* @_cmsBuildKToneCurve(%struct._cmsContext_struct* %0, i32 4096, i32 %1, i32* nonnull %93, i8** %3, i32* %4, double* %5, i32 %6) #5
  store %struct._cms_curve_struct* %97, %struct._cms_curve_struct** %14, align 8
  %98 = icmp eq %struct._cms_curve_struct* %97, null
  br i1 %98, label %120, label %99

99:                                               ; preds = %96
  %100 = call i8* @cmsCreateLab4ProfileTHR(%struct._cmsContext_struct* %0, %struct.cmsCIExyY* null) #5
  %101 = load i8*, i8** %69, align 8
  %102 = call i8* @cmsCreateTransformTHR(%struct._cmsContext_struct* %0, i8* %101, i32 34, i8* %100, i32 4849688, i32 1, i32 320) #5
  store i8* %102, i8** %12, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %120, label %104

104:                                              ; preds = %99
  %105 = load i8*, i8** %69, align 8
  %106 = call i8* @cmsCreateTransformTHR(%struct._cmsContext_struct* %0, i8* %105, i32 4194340, i8* %100, i32 4194332, i32 1, i32 320) #5
  store i8* %106, i8** %13, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %120, label %108

108:                                              ; preds = %104
  %109 = call i32 @cmsCloseProfile(i8* %100) #5
  store double 0.000000e+00, double* %16, align 8
  %110 = call i32 @_cmsReasonableGridpointsByColorspace(i32 1129142603, i32 %6) #5
  %111 = call %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct* %0, i32 %110, i32 4, i32 4, i16* null) #5
  %112 = icmp eq %struct._cmsStage_struct* %111, null
  br i1 %112, label %120, label %113

113:                                              ; preds = %108
  %114 = call i32 @cmsPipelineInsertStage(%struct._cmsPipeline_struct* nonnull %81, i32 0, %struct._cmsStage_struct* nonnull %111) #5
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %120, label %116

116:                                              ; preds = %113
  %117 = call i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct* nonnull %111, i32 (i16*, i16*, i8*)* nonnull @BlackPreservingSampler, i8* nonnull %10, i32 0) #5
  %118 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %11, align 8
  %119 = icmp eq %struct._cmsPipeline_struct* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %96, %99, %104, %108, %113, %116
  %121 = phi %struct._cmsPipeline_struct* [ %118, %116 ], [ %94, %113 ], [ %94, %108 ], [ %94, %104 ], [ %94, %99 ], [ %94, %96 ]
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %121) #5
  br label %122

122:                                              ; preds = %83, %87, %92, %116, %120
  %123 = load i8*, i8** %13, align 8
  %124 = icmp eq i8* %123, null
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @cmsDeleteTransform(i8* nonnull %123) #5
  br label %126

126:                                              ; preds = %122, %125
  %127 = load i8*, i8** %12, align 8
  %128 = icmp eq i8* %127, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %126
  call void @cmsDeleteTransform(i8* nonnull %127) #5
  br label %130

130:                                              ; preds = %126, %129
  %131 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %14, align 8
  %132 = icmp eq %struct._cms_curve_struct* %131, null
  br i1 %132, label %134, label %133

133:                                              ; preds = %130
  call void @cmsFreeToneCurve(%struct._cms_curve_struct* nonnull %131) #5
  br label %134

134:                                              ; preds = %130, %133
  %135 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %15, align 8
  %136 = icmp eq %struct._cmsPipeline_struct* %135, null
  br i1 %136, label %138, label %137

137:                                              ; preds = %134
  call void @cmsPipelineFree(%struct._cmsPipeline_struct* nonnull %135) #5
  br label %138

138:                                              ; preds = %137, %134, %80, %7, %77
  %139 = phi %struct._cmsPipeline_struct* [ %79, %77 ], [ null, %7 ], [ null, %80 ], [ %81, %134 ], [ %81, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %20) #5
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %10) #5
  ret %struct._cmsPipeline_struct* %139

140:                                              ; preds = %40
  %141 = sext i32 %46 to i64
  %142 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table.BlackPreservingKPlaneIntents, i64 0, i64 %141
  %143 = load i32, i32* %142, align 4
  br label %144

144:                                              ; preds = %140, %40
  %145 = phi i32 [ %143, %140 ], [ %45, %40 ]
  %146 = getelementptr inbounds [256 x i32], [256 x i32]* %9, i64 0, i64 %43
  store i32 %145, i32* %146, align 4
  %147 = add nuw nsw i64 %30, 2
  %148 = add i64 %31, -2
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %48, label %29
}

declare %struct._cms_curve_struct* @_cmsBuildKToneCurve(%struct._cmsContext_struct*, i32, i32, i32*, i8**, i32*, double*, i32) local_unnamed_addr #1

declare i32 @_cmsReasonableGridpointsByColorspace(i32, i32) local_unnamed_addr #1

declare %struct._cmsStage_struct* @cmsStageAllocCLut16bit(%struct._cmsContext_struct*, i32, i32, i32, i16*) local_unnamed_addr #1

declare i32 @cmsStageSampleCLut16bit(%struct._cmsStage_struct*, i32 (i16*, i16*, i8*)*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @BlackPreservingGrayOnlySampler(i16*, i16*, i8* nocapture readonly) #0 {
  %4 = load i16, i16* %0, align 2
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = getelementptr inbounds i16, i16* %0, i64 1
  %8 = load i16, i16* %7, align 2
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = getelementptr inbounds i16, i16* %0, i64 2
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %10
  %15 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 0, i16* %15, align 2
  %16 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 0, i16* %16, align 2
  store i16 0, i16* %1, align 2
  %17 = getelementptr inbounds i8, i8* %2, i64 8
  %18 = bitcast i8* %17 to %struct._cms_curve_struct**
  %19 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %18, align 8
  %20 = getelementptr inbounds i16, i16* %0, i64 3
  %21 = load i16, i16* %20, align 2
  %22 = tail call zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct* %19, i16 zeroext %21) #5
  %23 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %22, i16* %23, align 2
  br label %31

24:                                               ; preds = %10, %6, %3
  %25 = bitcast i8* %2 to %struct._cmsPipeline_struct**
  %26 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %25, align 8
  %27 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %26, i64 0, i32 4
  %28 = load void (i16*, i16*, i8*)*, void (i16*, i16*, i8*)** %27, align 8
  %29 = getelementptr inbounds %struct._cmsPipeline_struct, %struct._cmsPipeline_struct* %26, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  tail call void %28(i16* %0, i16* %1, i8* %30) #5
  br label %31

31:                                               ; preds = %24, %14
  ret i32 1
}

declare void @cmsFreeToneCurve(%struct._cms_curve_struct*) local_unnamed_addr #1

declare zeroext i16 @cmsEvalToneCurve16(%struct._cms_curve_struct*, i16 zeroext) local_unnamed_addr #1

declare double @cmsDetectTAC(i8*) local_unnamed_addr #1

declare i8* @cmsCreateLab4ProfileTHR(%struct._cmsContext_struct*, %struct.cmsCIExyY*) local_unnamed_addr #1

declare i8* @cmsCreateTransformTHR(%struct._cmsContext_struct*, i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #1

declare i32 @cmsCloseProfile(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @BlackPreservingSampler(i16* nocapture readonly, i16*, i8* nocapture) #0 {
  %4 = alloca [4 x float], align 16
  %5 = alloca [4 x float], align 16
  %6 = alloca [4 x float], align 16
  %7 = alloca %struct.cmsCIELab, align 8
  %8 = alloca %struct.cmsCIELab, align 8
  %9 = bitcast [4 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #5
  %10 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %11 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 1
  %12 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 2
  %13 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 3
  %14 = bitcast [4 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #5
  %15 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 0
  %16 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 1
  %17 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 2
  %18 = getelementptr inbounds [4 x float], [4 x float]* %5, i64 0, i64 3
  %19 = bitcast [4 x float]* %6 to i8*
  %20 = bitcast [4 x float]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #5
  %21 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 0
  %22 = getelementptr inbounds [4 x float], [4 x float]* %6, i64 0, i64 3
  %23 = bitcast %struct.cmsCIELab* %7 to i8*
  %24 = bitcast [4 x float]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #5
  %25 = bitcast %struct.cmsCIELab* %8 to i8*
  %26 = bitcast %struct.cmsCIELab* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -1, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #5
  %27 = bitcast %struct.cmsCIELab* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -1, i64 24, i1 false)
  %28 = load i16, i16* %0, align 2
  %29 = uitofp i16 %28 to double
  %30 = fdiv double %29, 6.553500e+04
  %31 = fptrunc double %30 to float
  store float %31, float* %10, align 16
  %32 = getelementptr inbounds i16, i16* %0, i64 1
  %33 = load i16, i16* %32, align 2
  %34 = uitofp i16 %33 to double
  %35 = fdiv double %34, 6.553500e+04
  %36 = fptrunc double %35 to float
  store float %36, float* %11, align 4
  %37 = getelementptr inbounds i16, i16* %0, i64 2
  %38 = load i16, i16* %37, align 2
  %39 = uitofp i16 %38 to double
  %40 = fdiv double %39, 6.553500e+04
  %41 = fptrunc double %40 to float
  store float %41, float* %12, align 8
  %42 = getelementptr inbounds i16, i16* %0, i64 3
  %43 = load i16, i16* %42, align 2
  %44 = uitofp i16 %43 to double
  %45 = fdiv double %44, 6.553500e+04
  %46 = fptrunc double %45 to float
  store float %46, float* %13, align 4
  %47 = getelementptr inbounds i8, i8* %2, i64 24
  %48 = bitcast i8* %47 to %struct._cms_curve_struct**
  %49 = load %struct._cms_curve_struct*, %struct._cms_curve_struct** %48, align 8
  %50 = tail call float @cmsEvalToneCurveFloat(%struct._cms_curve_struct* %49, float %46) #5
  store float %50, float* %22, align 4
  %51 = load i16, i16* %0, align 2
  %52 = icmp eq i16 %51, 0
  br i1 %52, label %53, label %77

53:                                               ; preds = %3
  %54 = load i16, i16* %32, align 2
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %77

56:                                               ; preds = %53
  %57 = load i16, i16* %37, align 2
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %77

59:                                               ; preds = %56
  %60 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 0, i16* %60, align 2
  %61 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 0, i16* %61, align 2
  store i16 0, i16* %1, align 2
  %62 = fpext float %50 to double
  %63 = fmul double %62, 6.553500e+04
  %64 = fadd double %63, 5.000000e-01
  %65 = fcmp ugt double %64, 0.000000e+00
  br i1 %65, label %66, label %74

66:                                               ; preds = %59
  %67 = fcmp ult double %64, 6.553500e+04
  br i1 %67, label %68, label %74

68:                                               ; preds = %66
  %69 = fadd double %64, -3.276700e+04
  %70 = tail call double @llvm.floor.f64(double %69) #5
  %71 = fptosi double %70 to i32
  %72 = trunc i32 %71 to i16
  %73 = add i16 %72, 32767
  br label %74

74:                                               ; preds = %59, %66, %68
  %75 = phi i16 [ %73, %68 ], [ 0, %59 ], [ -1, %66 ]
  %76 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %75, i16* %76, align 2
  br label %200

77:                                               ; preds = %56, %53, %3
  %78 = bitcast i8* %2 to %struct._cmsPipeline_struct**
  %79 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %78, align 8
  call void @cmsPipelineEvalFloat(float* nonnull %10, float* nonnull %15, %struct._cmsPipeline_struct* %79) #5
  %80 = load float, float* %15, align 16
  %81 = fpext float %80 to double
  %82 = fmul double %81, 6.553500e+04
  %83 = fadd double %82, 5.000000e-01
  %84 = fcmp ugt double %83, 0.000000e+00
  br i1 %84, label %85, label %93

85:                                               ; preds = %77
  %86 = fcmp ult double %83, 6.553500e+04
  br i1 %86, label %87, label %93

87:                                               ; preds = %85
  %88 = fadd double %83, -3.276700e+04
  %89 = call double @llvm.floor.f64(double %88) #5
  %90 = fptosi double %89 to i32
  %91 = trunc i32 %90 to i16
  %92 = add i16 %91, 32767
  br label %93

93:                                               ; preds = %77, %85, %87
  %94 = phi i16 [ %92, %87 ], [ 0, %77 ], [ -1, %85 ]
  store i16 %94, i16* %1, align 2
  %95 = load float, float* %16, align 4
  %96 = fpext float %95 to double
  %97 = fmul double %96, 6.553500e+04
  %98 = fadd double %97, 5.000000e-01
  %99 = fcmp ugt double %98, 0.000000e+00
  br i1 %99, label %201, label %209

100:                                              ; preds = %241
  %101 = getelementptr inbounds i8, i8* %2, i64 8
  %102 = bitcast i8* %101 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = bitcast i16* %1 to i8*
  call void @cmsDoTransform(i8* %103, i8* %104, i8* nonnull %23, i32 1) #5
  %105 = getelementptr inbounds i8, i8* %2, i64 16
  %106 = bitcast i8* %105 to i8**
  %107 = load i8*, i8** %106, align 8
  call void @cmsDoTransform(i8* %107, i8* nonnull %14, i8* nonnull %19, i32 1) #5
  %108 = getelementptr inbounds i8, i8* %2, i64 32
  %109 = bitcast i8* %108 to %struct._cmsPipeline_struct**
  %110 = load %struct._cmsPipeline_struct*, %struct._cmsPipeline_struct** %109, align 8
  %111 = call i32 @cmsPipelineEvalReverseFloat(float* nonnull %21, float* nonnull %15, float* nonnull %15, %struct._cmsPipeline_struct* %110) #5
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %200, label %113

113:                                              ; preds = %100
  %114 = load float, float* %22, align 4
  store float %114, float* %18, align 4
  %115 = bitcast [4 x float]* %5 to <2 x float>*
  %116 = load <2 x float>, <2 x float>* %115, align 16
  %117 = fpext <2 x float> %116 to <2 x double>
  %118 = extractelement <2 x double> %117, i32 0
  %119 = extractelement <2 x double> %117, i32 1
  %120 = fadd double %118, %119
  %121 = load float, float* %17, align 8
  %122 = fpext float %121 to double
  %123 = fadd double %120, %122
  %124 = fpext float %114 to double
  %125 = fadd double %123, %124
  %126 = getelementptr inbounds i8, i8* %2, i64 56
  %127 = bitcast i8* %126 to double*
  %128 = load double, double* %127, align 8
  %129 = fcmp ogt double %125, %128
  br i1 %129, label %130, label %136

130:                                              ; preds = %113
  %131 = fsub double %125, %128
  %132 = fdiv double %131, %123
  %133 = fsub double 1.000000e+00, %132
  %134 = fcmp olt double %133, 0.000000e+00
  br i1 %134, label %135, label %136

135:                                              ; preds = %130
  br label %136

136:                                              ; preds = %113, %130, %135
  %137 = phi double [ 0.000000e+00, %135 ], [ %133, %130 ], [ 1.000000e+00, %113 ]
  %138 = fmul double %137, %118
  %139 = fmul double %138, 6.553500e+04
  %140 = fadd double %139, 5.000000e-01
  %141 = fcmp ugt double %140, 0.000000e+00
  br i1 %141, label %142, label %150

142:                                              ; preds = %136
  %143 = fcmp ult double %140, 6.553500e+04
  br i1 %143, label %144, label %150

144:                                              ; preds = %142
  %145 = fadd double %140, -3.276700e+04
  %146 = call double @llvm.floor.f64(double %145) #5
  %147 = fptosi double %146 to i32
  %148 = trunc i32 %147 to i16
  %149 = add i16 %148, 32767
  br label %150

150:                                              ; preds = %136, %142, %144
  %151 = phi i16 [ %149, %144 ], [ 0, %136 ], [ -1, %142 ]
  store i16 %151, i16* %1, align 2
  %152 = fmul double %137, %119
  %153 = fmul double %152, 6.553500e+04
  %154 = fadd double %153, 5.000000e-01
  %155 = fcmp ugt double %154, 0.000000e+00
  br i1 %155, label %156, label %164

156:                                              ; preds = %150
  %157 = fcmp ult double %154, 6.553500e+04
  br i1 %157, label %158, label %164

158:                                              ; preds = %156
  %159 = fadd double %154, -3.276700e+04
  %160 = call double @llvm.floor.f64(double %159) #5
  %161 = fptosi double %160 to i32
  %162 = trunc i32 %161 to i16
  %163 = add i16 %162, 32767
  br label %164

164:                                              ; preds = %150, %156, %158
  %165 = phi i16 [ %163, %158 ], [ 0, %150 ], [ -1, %156 ]
  store i16 %165, i16* %211, align 2
  %166 = fmul double %137, %122
  %167 = fmul double %166, 6.553500e+04
  %168 = fadd double %167, 5.000000e-01
  %169 = fcmp ugt double %168, 0.000000e+00
  br i1 %169, label %170, label %178

170:                                              ; preds = %164
  %171 = fcmp ult double %168, 6.553500e+04
  br i1 %171, label %172, label %178

172:                                              ; preds = %170
  %173 = fadd double %168, -3.276700e+04
  %174 = call double @llvm.floor.f64(double %173) #5
  %175 = fptosi double %174 to i32
  %176 = trunc i32 %175 to i16
  %177 = add i16 %176, 32767
  br label %178

178:                                              ; preds = %164, %170, %172
  %179 = phi i16 [ %177, %172 ], [ 0, %164 ], [ -1, %170 ]
  store i16 %179, i16* %227, align 2
  %180 = fmul double %124, 6.553500e+04
  %181 = fadd double %180, 5.000000e-01
  %182 = fcmp ugt double %181, 0.000000e+00
  br i1 %182, label %183, label %191

183:                                              ; preds = %178
  %184 = fcmp ult double %181, 6.553500e+04
  br i1 %184, label %185, label %191

185:                                              ; preds = %183
  %186 = fadd double %181, -3.276700e+04
  %187 = call double @llvm.floor.f64(double %186) #5
  %188 = fptosi double %187 to i32
  %189 = trunc i32 %188 to i16
  %190 = add i16 %189, 32767
  br label %191

191:                                              ; preds = %178, %183, %185
  %192 = phi i16 [ %190, %185 ], [ 0, %178 ], [ -1, %183 ]
  store i16 %192, i16* %243, align 2
  %193 = load i8*, i8** %102, align 8
  call void @cmsDoTransform(i8* %193, i8* %104, i8* nonnull %25, i32 1) #5
  %194 = call double @cmsDeltaE(%struct.cmsCIELab* nonnull %7, %struct.cmsCIELab* nonnull %8) #5
  %195 = getelementptr inbounds i8, i8* %2, i64 40
  %196 = bitcast i8* %195 to double*
  %197 = load double, double* %196, align 8
  %198 = fcmp ogt double %194, %197
  br i1 %198, label %199, label %200

199:                                              ; preds = %191
  store double %194, double* %196, align 8
  br label %200

200:                                              ; preds = %191, %199, %100, %241, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #5
  ret i32 1

201:                                              ; preds = %93
  %202 = fcmp ult double %98, 6.553500e+04
  br i1 %202, label %203, label %209

203:                                              ; preds = %201
  %204 = fadd double %98, -3.276700e+04
  %205 = call double @llvm.floor.f64(double %204) #5
  %206 = fptosi double %205 to i32
  %207 = trunc i32 %206 to i16
  %208 = add i16 %207, 32767
  br label %209

209:                                              ; preds = %203, %201, %93
  %210 = phi i16 [ %208, %203 ], [ 0, %93 ], [ -1, %201 ]
  %211 = getelementptr inbounds i16, i16* %1, i64 1
  store i16 %210, i16* %211, align 2
  %212 = load float, float* %17, align 8
  %213 = fpext float %212 to double
  %214 = fmul double %213, 6.553500e+04
  %215 = fadd double %214, 5.000000e-01
  %216 = fcmp ugt double %215, 0.000000e+00
  br i1 %216, label %217, label %225

217:                                              ; preds = %209
  %218 = fcmp ult double %215, 6.553500e+04
  br i1 %218, label %219, label %225

219:                                              ; preds = %217
  %220 = fadd double %215, -3.276700e+04
  %221 = call double @llvm.floor.f64(double %220) #5
  %222 = fptosi double %221 to i32
  %223 = trunc i32 %222 to i16
  %224 = add i16 %223, 32767
  br label %225

225:                                              ; preds = %219, %217, %209
  %226 = phi i16 [ %224, %219 ], [ 0, %209 ], [ -1, %217 ]
  %227 = getelementptr inbounds i16, i16* %1, i64 2
  store i16 %226, i16* %227, align 2
  %228 = load float, float* %18, align 4
  %229 = fpext float %228 to double
  %230 = fmul double %229, 6.553500e+04
  %231 = fadd double %230, 5.000000e-01
  %232 = fcmp ugt double %231, 0.000000e+00
  br i1 %232, label %233, label %241

233:                                              ; preds = %225
  %234 = fcmp ult double %231, 6.553500e+04
  br i1 %234, label %235, label %241

235:                                              ; preds = %233
  %236 = fadd double %231, -3.276700e+04
  %237 = call double @llvm.floor.f64(double %236) #5
  %238 = fptosi double %237 to i32
  %239 = trunc i32 %238 to i16
  %240 = add i16 %239, 32767
  br label %241

241:                                              ; preds = %235, %233, %225
  %242 = phi i16 [ %240, %235 ], [ 0, %225 ], [ -1, %233 ]
  %243 = getelementptr inbounds i16, i16* %1, i64 3
  store i16 %242, i16* %243, align 2
  %244 = fsub float %228, %50
  %245 = call float @llvm.fabs.f32(float %244)
  %246 = fpext float %245 to double
  %247 = fcmp olt double %246, 0x3F08001800180018
  br i1 %247, label %200, label %100
}

declare void @cmsDeleteTransform(i8*) local_unnamed_addr #1

declare float @cmsEvalToneCurveFloat(%struct._cms_curve_struct*, float) local_unnamed_addr #1

declare void @cmsPipelineEvalFloat(float*, float*, %struct._cmsPipeline_struct*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

declare void @cmsDoTransform(i8*, i8*, i8*, i32) local_unnamed_addr #1

declare i32 @cmsPipelineEvalReverseFloat(float*, float*, float*, %struct._cmsPipeline_struct*) local_unnamed_addr #1

declare double @cmsDeltaE(%struct.cmsCIELab*, %struct.cmsCIELab*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #4

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
