; ModuleID = '../../third_party/blink/renderer/core/dom/flat_tree_traversal.cc'
source_filename = "../../third_party/blink/renderer/core/dom/flat_tree_traversal.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.51", %"class.blink::HeapVector.53" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.100", %"class.WTF::Vector.100", i8, i32, %"class.blink::Member.111", %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.124", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.59", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.135", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.151", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.160", double, double, i64, i64, %"class.blink::HeapHashSet.162", %"class.blink::HeapHashSet.169", i16, i8, %"class.blink::Member.176", %"class.blink::Member.178", %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::TextLinkColors", %"class.blink::Member.184", i8, [7 x i8], %"class.blink::HeapHashMap.186", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.193", %"class.blink::Member.198", %"class.blink::Member.200", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.202", %"class.blink::HeapVector.204", %"class.std::__1::unique_ptr.212", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.218", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.230", %"class.WTF::Vector.232", i8, i8, %"class.std::__1::unique_ptr.237", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.243", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.251", i8, i32, %"class.blink::Member.253", %"class.blink::Member.255", %"class.blink::Member.257", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.259", %"class.WTF::HashMap.261", %"class.blink::Member.266", %"class.blink::Member.268", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.274", i8, i32, %"class.blink::Member.281", %"class.blink::Member.283", i32, %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.std::__1::unique_ptr.291", i64, %"class.std::__1::unique_ptr.297", i32, i32, %"class.blink::Member.303", %"class.blink::Member.305", %"class.blink::Member.307", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.309", %"class.WTF::Vector.311", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.316", %"class.blink::Member.323", %"class.std::__1::unique_ptr.325", %"class.blink::Member.331", i8, i8, %"class.WTF::String", %"class.blink::Member.333", i8, [7 x i8], %"class.blink::HeapHashMap.335", %"class.blink::HeapObserverSet", %"class.blink::Member.349", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.351", i32, i8, i8, %"class.blink::WeakMember.353", %"class.blink::Member.354" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.93" }
%"class.blink::HeapHashMap.93" = type { %"class.WTF::HashMap.96" }
%"class.WTF::HashMap.96" = type { %"class.WTF::HashTable.97" }
%"class.WTF::HashTable.97" = type <{ %"struct.WTF::KeyValuePair.99"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.99" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.100" = type { %"class.WTF::VectorBuffer.101" }
%"class.WTF::VectorBuffer.101" = type { %"class.WTF::VectorBufferBase.102" }
%"class.WTF::VectorBufferBase.102" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.103 }
%class.scoped_refptr.103 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.104" }
%"struct.std::__1::atomic.104" = type { %"struct.std::__1::__atomic_base.105" }
%"struct.std::__1::__atomic_base.105" = type { %"struct.std::__1::__atomic_base.106" }
%"struct.std::__1::__atomic_base.106" = type { %"struct.std::__1::__cxx_atomic_impl.107" }
%"struct.std::__1::__cxx_atomic_impl.107" = type { %"struct.std::__1::__cxx_atomic_base_impl.108" }
%"struct.std::__1::__cxx_atomic_base_impl.108" = type { i32 }
%"class.blink::Member.111" = type { %"class.blink::MemberBase.112" }
%"class.blink::MemberBase.112" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.59" = type { %"class.blink::MemberBase.60" }
%"class.blink::MemberBase.60" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.61", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.63, %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.blink::Member", %"class.blink::Member.69", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.77", %"class.WTF::TextPosition", %"class.blink::Member.81", %"class.blink::HeapVector.83", %"class.blink::Member.90" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.63 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.69" = type { %"class.blink::MemberBase.70" }
%"class.blink::MemberBase.70" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.71" }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.75" }
%"class.WTF::HashTable.75" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.77" = type { %"class.WTF::HashTable.78" }
%"class.WTF::HashTable.78" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.83" = type { %"class.WTF::Vector.86" }
%"class.WTF::Vector.86" = type { %"class.WTF::VectorBuffer.87" }
%"class.WTF::VectorBuffer.87" = type { %"class.WTF::VectorBufferBase.88" }
%"class.WTF::VectorBufferBase.88" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.134 }
%class.scoped_refptr.134 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.153" }
%"class.blink::HeapHashMap.153" = type { %"class.WTF::HashMap.156" }
%"class.WTF::HashMap.156" = type { %"class.WTF::HashTable.157" }
%"class.WTF::HashTable.157" = type <{ %"struct.WTF::KeyValuePair.159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.159" = type opaque
%"class.blink::Member.160" = type { %"class.blink::MemberBase.161" }
%"class.blink::MemberBase.161" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.162" = type { %"class.WTF::HashSet.165" }
%"class.WTF::HashSet.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"class.blink::WeakMember.168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.168" = type opaque
%"class.blink::HeapHashSet.169" = type { %"class.WTF::HashSet.172" }
%"class.WTF::HashSet.172" = type { %"class.WTF::HashTable.173" }
%"class.WTF::HashTable.173" = type <{ %"class.blink::WeakMember.175"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.175" = type opaque
%"class.blink::Member.176" = type { %"class.blink::MemberBase.177" }
%"class.blink::MemberBase.177" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.178" = type { %"class.blink::MemberBase.179" }
%"class.blink::MemberBase.179" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.53" }
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.186" = type { %"class.WTF::HashMap.189" }
%"class.WTF::HashMap.189" = type { %"class.WTF::HashTable.190" }
%"class.WTF::HashTable.190" = type <{ %"struct.WTF::KeyValuePair.192"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.192" = type opaque
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.198" = type { %"class.blink::MemberBase.199" }
%"class.blink::MemberBase.199" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.32 }
%class.scoped_refptr.32 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.33", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.33" = type { %"class.base::RefCounted.34" }
%"class.base::RefCounted.34" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.204" = type { %"class.WTF::Vector.207" }
%"class.WTF::Vector.207" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"class.blink::Member.210"*, i32, i32 }
%"class.blink::Member.210" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.218" = type { %"class.WTF::HashSet.221" }
%"class.WTF::HashSet.221" = type { %"class.WTF::HashTable.222" }
%"class.WTF::HashTable.222" = type <{ %"class.blink::WeakMember.224"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.224" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.225", i32, [4 x i8] }>
%"class.WTF::Vector.225" = type { %"class.WTF::VectorBuffer.226" }
%"class.WTF::VectorBuffer.226" = type { %"class.WTF::VectorBufferBase.227" }
%"class.WTF::VectorBufferBase.227" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.230" = type { %"class.blink::MemberBase.231" }
%"class.blink::MemberBase.231" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.232" = type { %"class.WTF::VectorBuffer.233" }
%"class.WTF::VectorBuffer.233" = type { %"class.WTF::VectorBufferBase.234" }
%"class.WTF::VectorBufferBase.234" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.243" = type { %"class.WTF::Vector.246" }
%"class.WTF::Vector.246" = type { %"class.WTF::VectorBuffer.247" }
%"class.WTF::VectorBuffer.247" = type { %"class.WTF::VectorBufferBase.248" }
%"class.WTF::VectorBufferBase.248" = type { %"class.blink::Member.249"*, i32, i32 }
%"class.blink::Member.249" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.253" = type { %"class.blink::MemberBase.254" }
%"class.blink::MemberBase.254" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.261" = type { %"class.WTF::HashTable.262" }
%"class.WTF::HashTable.262" = type <{ %"struct.WTF::KeyValuePair.265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.265" = type opaque
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.268" = type { %"class.blink::MemberBase.269" }
%"class.blink::MemberBase.269" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.150", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.141, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.141 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.142" }>
%"class.base::RefCountedThreadSafe.142" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.143 }
%class.scoped_refptr.143 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.144", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.144" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.145" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__atomic_base.147" }
%"struct.std::__1::__atomic_base.147" = type { %"struct.std::__1::__cxx_atomic_impl.148" }
%"struct.std::__1::__cxx_atomic_impl.148" = type { %"struct.std::__1::__cxx_atomic_base_impl.149" }
%"struct.std::__1::__cxx_atomic_base_impl.149" = type { i8 }
%"class.blink::WeakMember.150" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.274" = type { %"class.WTF::HashSet.277" }
%"class.WTF::HashSet.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"class.blink::Member.280"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.280" = type opaque
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.303" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.311" = type { %"class.WTF::VectorBuffer.312" }
%"class.WTF::VectorBuffer.312" = type { %"class.WTF::VectorBufferBase.313" }
%"class.WTF::VectorBufferBase.313" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.316" = type { %"class.WTF::HashMap.319" }
%"class.WTF::HashMap.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"struct.WTF::KeyValuePair.322"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.322" = type opaque
%"class.blink::Member.323" = type { %"class.blink::MemberBase.324" }
%"class.blink::MemberBase.324" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.335" = type { %"class.WTF::HashMap.338" }
%"class.WTF::HashMap.338" = type { %"class.WTF::HashTable.339" }
%"class.WTF::HashTable.339" = type <{ %"struct.WTF::KeyValuePair.341"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.341" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.342" }
%"class.blink::HeapHashSet.342" = type { %"class.WTF::HashSet.345" }
%"class.WTF::HashSet.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"class.blink::WeakMember.348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.348" = type opaque
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.351" = type { %"class.blink::MemberBase.352" }
%"class.blink::MemberBase.352" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.358", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.365", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.358" = type { %"class.WTF::HashSet.361" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::Member.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.364" = type opaque
%"class.blink::HeapTaskRunnerTimer.365" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.366", { i64, i64 } }
%"class.blink::WeakMember.366" = type { %"class.blink::MemberBase.352" }
%"class.blink::WeakMember.353" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.48" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::HeapHashMap.50"* }
%"class.blink::HeapHashMap.50" = type opaque
%"class.blink::Member.51" = type { %"class.blink::MemberBase.52" }
%"class.blink::MemberBase.52" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.53" = type { %"class.WTF::Vector.56" }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %"class.blink::Member.59"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::HTMLSlotElement" = type { %"class.blink::HTMLElement", %"class.blink::HeapVector.367", %"class.blink::HeapVector.367", i8, %"class.blink::HeapLinkedHashSet" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::HeapVector.367" = type { %"class.WTF::Vector.370" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.376", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.376" = type { %"class.WTF::HashTable.377" }
%"class.WTF::HashTable.377" = type <{ %"struct.WTF::KeyValuePair.379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.379" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.380", i32, i32 }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.180", %"class.blink::Member.384", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type { %"class.blink::HeapVector.388", %"class.blink::Member.10", %"class.blink::WeakMember.396", i32, [4 x i8], %"class.blink::HeapHashSet.398" }
%"class.blink::HeapVector.388" = type { %"class.WTF::Vector.391" }
%"class.WTF::Vector.391" = type { %"class.WTF::VectorBuffer.392" }
%"class.WTF::VectorBuffer.392" = type { %"class.WTF::VectorBufferBase.393" }
%"class.WTF::VectorBufferBase.393" = type { %"class.blink::Member.394"*, i32, i32 }
%"class.blink::Member.394" = type opaque
%"class.blink::WeakMember.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::ShadowRoot"* }
%"class.blink::HeapHashSet.398" = type { %"class.WTF::HashSet.401" }
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"class.blink::Member"*, i32, i32, i32, [4 x i8] }>
%"class.blink::FlatTreeNodeData" = type { %"class.blink::WeakMember.406", %"class.blink::WeakMember.353", %"class.blink::WeakMember.353", %"class.blink::WeakMember.406" }
%"class.blink::WeakMember.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::HTMLSlotElement"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@_ZN5blink10html_names8kSlotTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 48
  %6 = icmp ne i32 %5, 0
  %7 = icmp eq %"class.blink::Node"* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %58, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %11 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %14 = bitcast %"class.blink::Member"* %13 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %15 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, %19
  br i1 %20, label %21, label %58

21:                                               ; preds = %9
  %22 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLSlotElement"*
  %23 = and i32 %4, 512
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %21
  %26 = tail call dereferenceable(16) %"class.blink::HeapVector.367"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* nonnull %22) #5
  %27 = getelementptr inbounds %"class.blink::HeapVector.367", %"class.blink::HeapVector.367"* %26, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = icmp eq i32 %1, 0
  br i1 %29, label %31, label %40

31:                                               ; preds = %25
  br i1 %30, label %32, label %36

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %34 = bitcast %"class.blink::Node"* %33 to %"class.blink::Node"**
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  br label %97

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.blink::TraceWrapperV8Reference"* %37 to %"class.blink::Node"**
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  br label %97

40:                                               ; preds = %25
  %41 = tail call dereferenceable(16) %"class.blink::HeapVector.367"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* nonnull %22) #5
  %42 = getelementptr inbounds %"class.blink::HeapVector.367", %"class.blink::HeapVector.367"* %41, i64 0, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %30, label %45, label %51

45:                                               ; preds = %40
  br i1 %44, label %97, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"class.blink::HeapVector.367", %"class.blink::HeapVector.367"* %41, i64 0, i32 0
  %48 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.370"* %47, i32 0) #5
  %49 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %48, i64 0, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  br label %97

51:                                               ; preds = %40
  br i1 %44, label %97, label %52

52:                                               ; preds = %51
  %53 = getelementptr inbounds %"class.blink::HeapVector.367", %"class.blink::HeapVector.367"* %41, i64 0, i32 0
  %54 = add i32 %43, -1
  %55 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.370"* %53, i32 %54) #5
  %56 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %55, i64 0, i32 0, i32 0
  %57 = load %"class.blink::Node"*, %"class.blink::Node"** %56, align 8
  br label %97

58:                                               ; preds = %21, %9, %2
  %59 = xor i1 %7, true
  %60 = and i32 %4, 12
  %61 = icmp eq i32 %60, 0
  %62 = and i1 %61, %59
  br i1 %62, label %65, label %63

63:                                               ; preds = %58
  %64 = icmp eq i32 %1, 0
  br i1 %64, label %79, label %88

65:                                               ; preds = %58
  %66 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %67 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %66) #5
  %68 = icmp eq %"class.blink::ShadowRoot"* %67, null
  %69 = icmp eq i32 %1, 0
  br i1 %68, label %77, label %70

70:                                               ; preds = %65
  br i1 %69, label %71, label %74

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %67, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  br label %97

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %67, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::Node"*, %"class.blink::Node"** %75, align 8
  br label %97

77:                                               ; preds = %65
  %78 = load i32, i32* %3, align 8
  br i1 %69, label %80, label %89

79:                                               ; preds = %63
  br i1 %7, label %97, label %80

80:                                               ; preds = %77, %79
  %81 = phi i32 [ %4, %79 ], [ %78, %77 ]
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1
  %86 = bitcast %"class.blink::Node"* %85 to %"class.blink::Node"**
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  br label %97

88:                                               ; preds = %63
  br i1 %7, label %97, label %89

89:                                               ; preds = %77, %88
  %90 = phi i32 [ %4, %88 ], [ %78, %77 ]
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %97, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 0, i32 0, i32 1
  %95 = bitcast %"class.blink::TraceWrapperV8Reference"* %94 to %"class.blink::Node"**
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  br label %97

97:                                               ; preds = %52, %51, %46, %45, %32, %36, %93, %89, %88, %84, %80, %79, %74, %71
  %98 = phi %"class.blink::Node"* [ %73, %71 ], [ %76, %74 ], [ %87, %84 ], [ null, %79 ], [ null, %80 ], [ %96, %93 ], [ null, %88 ], [ null, %89 ], [ null, %51 ], [ %57, %52 ], [ null, %45 ], [ %50, %46 ], [ %39, %36 ], [ %35, %32 ]
  ret %"class.blink::Node"* %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(16) %"class.blink::HeapVector.367"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16TraverseSiblingsERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %3, label %4, label %24

4:                                                ; preds = %2
  %5 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %6 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %6, align 8
  %8 = icmp eq %"class.blink::SlotAssignment"* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %4
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %7) #5
  %10 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %11 = icmp eq %"class.blink::FlatTreeNodeData"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %10, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %13, align 8
  %15 = icmp eq %"class.blink::HTMLSlotElement"* %14, null
  br i1 %15, label %32, label %16

16:                                               ; preds = %12
  %17 = icmp eq i32 %1, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %10, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  br label %32

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %10, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  br label %32

24:                                               ; preds = %2
  %25 = icmp eq i32 %1, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  br label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  br label %32

32:                                               ; preds = %21, %18, %12, %9, %4, %26, %29
  %33 = phi %"class.blink::Node"* [ %28, %26 ], [ %31, %29 ], [ null, %4 ], [ null, %9 ], [ %20, %18 ], [ %23, %21 ], [ null, %12 ]
  ret %"class.blink::Node"* %33
}

declare zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal28TraverseSiblingsForHostChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %4 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %3, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %4, align 8
  %6 = icmp eq %"class.blink::SlotAssignment"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %5) #5
  %8 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %9 = icmp eq %"class.blink::FlatTreeNodeData"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %8, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %11, align 8
  %13 = icmp eq %"class.blink::HTMLSlotElement"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %10
  %15 = icmp eq i32 %1, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %8, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  br label %22

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %8, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  br label %22

22:                                               ; preds = %2, %7, %19, %16, %10
  %23 = phi %"class.blink::Node"* [ null, %2 ], [ null, %7 ], [ %18, %16 ], [ %21, %19 ], [ null, %10 ]
  ret %"class.blink::Node"* %23
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"*) local_unnamed_addr #2

declare %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::Node"* %0 to i8 (%"class.blink::Node"*)***
  %3 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %2, align 8
  %4 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %3, i64 34
  %5 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %4, align 8
  %6 = tail call zeroext i8 %5(%"class.blink::Node"* %0) #5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to %"class.blink::ContainerNode"**
  %11 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %10, align 8
  br label %72

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = tail call %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"* %0) #5
  %16 = getelementptr inbounds %"class.blink::HTMLSlotElement", %"class.blink::HTMLSlotElement"* %15, i64 0, i32 0, i32 0, i32 0
  br label %72

17:                                               ; preds = %12
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #5
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %53, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %53

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %53

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSlotTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1, i32 2
  %36 = bitcast %"class.blink::Member"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp ne %"class.WTF::StringImpl"* %39, %41
  %43 = and i32 %27, 512
  %44 = icmp eq i32 %43, 0
  %45 = or i1 %44, %42
  br i1 %45, label %53, label %46

46:                                               ; preds = %30
  %47 = bitcast %"class.blink::ContainerNode"* %18 to %"class.blink::HTMLSlotElement"*
  %48 = tail call dereferenceable(16) %"class.blink::HeapVector.367"* @_ZNK5blink15HTMLSlotElement13AssignedNodesEv(%"class.blink::HTMLSlotElement"* nonnull %47) #5
  %49 = getelementptr inbounds %"class.blink::HeapVector.367", %"class.blink::HeapVector.367"* %48, i64 0, i32 0, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  %52 = select i1 %51, %"class.blink::ContainerNode"* %18, %"class.blink::ContainerNode"* null
  br label %72

53:                                               ; preds = %17, %20, %30, %25
  %54 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #5
  %55 = icmp eq %"class.blink::ContainerNode"* %54, null
  br i1 %55, label %72, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 12
  %60 = icmp eq i32 %59, 8
  br i1 %60, label %61, label %72

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %64, align 8
  %66 = icmp eq %"class.blink::ContainerNode"* %65, %54
  br i1 %66, label %67, label %72

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %54, i64 0, i32 0, i32 2, i32 0, i32 0
  %69 = bitcast %"class.blink::Node"** %68 to %"class.blink::Element"**
  %70 = load %"class.blink::Element"*, %"class.blink::Element"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %70, i64 0, i32 0
  br label %72

72:                                               ; preds = %67, %61, %56, %53, %46, %14, %8
  %73 = phi %"class.blink::ContainerNode"* [ %11, %8 ], [ %16, %14 ], [ %52, %46 ], [ null, %53 ], [ %71, %67 ], [ %54, %61 ], [ %54, %56 ]
  ret %"class.blink::ContainerNode"* %73
}

declare %"class.blink::HTMLSlotElement"* @_ZNK5blink4Node12AssignedSlotEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal20TraverseParentOrHostERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %0) #5
  %3 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 12
  %8 = icmp eq i32 %7, 8
  br i1 %8, label %9, label %20

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %12, align 8
  %14 = icmp eq %"class.blink::ContainerNode"* %13, %2
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.blink::Node"** %16 to %"class.blink::Element"**
  %18 = load %"class.blink::Element"*, %"class.blink::Element"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %18, i64 0, i32 0
  br label %20

20:                                               ; preds = %9, %4, %15, %1
  %21 = phi %"class.blink::ContainerNode"* [ null, %1 ], [ %19, %15 ], [ %2, %9 ], [ %2, %4 ]
  ret %"class.blink::ContainerNode"* %21
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal7ChildAtERKNS_4NodeEj(%"class.blink::Node"* dereferenceable(64), i32) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %0, i32 0) #5
  %4 = icmp ne %"class.blink::Node"* %3, null
  %5 = icmp ne i32 %1, 0
  %6 = and i1 %5, %4
  br i1 %6, label %7, label %38

7:                                                ; preds = %2
  %8 = zext i1 %4 to i32
  %9 = sub nuw i32 %1, %8
  br label %10

10:                                               ; preds = %7, %30
  %11 = phi i32 [ %36, %30 ], [ %9, %7 ]
  %12 = phi %"class.blink::Node"* [ %32, %30 ], [ %3, %7 ]
  %13 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* nonnull %12) #5
  br i1 %13, label %14, label %28

14:                                               ; preds = %10
  %15 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* nonnull %12) #5
  %16 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %16, align 8
  %18 = icmp eq %"class.blink::SlotAssignment"* %17, null
  br i1 %18, label %38, label %19

19:                                               ; preds = %14
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %17) #5
  %20 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %12) #5
  %21 = icmp eq %"class.blink::FlatTreeNodeData"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %20, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %23, align 8
  %25 = icmp eq %"class.blink::HTMLSlotElement"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %20, i64 0, i32 2, i32 0, i32 0
  br label %30

28:                                               ; preds = %10
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 5, i32 0, i32 0
  br label %30

30:                                               ; preds = %26, %28
  %31 = phi %"class.blink::Node"** [ %29, %28 ], [ %27, %26 ]
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp ne %"class.blink::Node"* %32, null
  %34 = icmp ne i32 %11, 0
  %35 = zext i1 %33 to i32
  %36 = sub i32 %11, %35
  %37 = and i1 %34, %33
  br i1 %37, label %10, label %38

38:                                               ; preds = %22, %19, %14, %30, %2
  %39 = phi %"class.blink::Node"* [ %3, %2 ], [ null, %22 ], [ null, %19 ], [ null, %14 ], [ %32, %30 ]
  ret %"class.blink::Node"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal20NextSkippingChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %2, label %3, label %17

3:                                                ; preds = %1
  %4 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %5 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %5, align 8
  %7 = icmp eq %"class.blink::SlotAssignment"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %6) #5
  %9 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %10 = icmp eq %"class.blink::FlatTreeNodeData"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %12, align 8
  %14 = icmp eq %"class.blink::HTMLSlotElement"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 2, i32 0, i32 0
  br label %19

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 5, i32 0, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.blink::Node"** [ %18, %17 ], [ %16, %15 ]
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %11, %8, %3, %19
  %24 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal27TraverseNextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::Node"* [ %24, %23 ], [ %21, %19 ]
  ret %"class.blink::Node"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal27TraverseNextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  %3 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %1, %28
  %5 = phi %"class.blink::ContainerNode"* [ %29, %28 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %6) #5
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %6) #5
  %10 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %10, align 8
  %12 = icmp eq %"class.blink::SlotAssignment"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %11) #5
  %14 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %6) #5
  %15 = icmp eq %"class.blink::FlatTreeNodeData"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %17, align 8
  %19 = icmp eq %"class.blink::HTMLSlotElement"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %14, i64 0, i32 2, i32 0, i32 0
  br label %24

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi %"class.blink::Node"** [ %23, %22 ], [ %21, %20 ]
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %16, %13, %8, %24
  %29 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6)
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %31, label %4

31:                                               ; preds = %24, %28, %1
  %32 = phi %"class.blink::Node"* [ null, %1 ], [ null, %28 ], [ %26, %24 ]
  ret %"class.blink::Node"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17FlatTreeTraversal30ContainsIncludingPseudoElementERKNS_13ContainerNodeERKNS_4NodeE(%"class.blink::ContainerNode"* readnone dereferenceable(80), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %0, i64 0, i32 0
  %4 = icmp eq %"class.blink::Node"* %1, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %2, %8
  %6 = phi %"class.blink::Node"* [ %10, %8 ], [ %1, %2 ]
  %7 = icmp eq %"class.blink::Node"* %6, %3
  br i1 %7, label %12, label %8

8:                                                ; preds = %5
  %9 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6)
  %10 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %9, i64 0, i32 0
  %11 = icmp eq %"class.blink::ContainerNode"* %9, null
  br i1 %11, label %12, label %5

12:                                               ; preds = %5, %8, %2
  %13 = phi i1 [ false, %2 ], [ false, %8 ], [ true, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal23PreviousAbsoluteSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %2, label %3, label %17

3:                                                ; preds = %1
  %4 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %5 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %5, align 8
  %7 = icmp eq %"class.blink::SlotAssignment"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %6) #5
  %9 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %10 = icmp eq %"class.blink::FlatTreeNodeData"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %12, align 8
  %14 = icmp eq %"class.blink::HTMLSlotElement"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %19

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.blink::Node"** [ %18, %17 ], [ %16, %15 ]
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %11, %8, %3, %19
  %24 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal31TraversePreviousAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::Node"* [ %24, %23 ], [ %21, %19 ]
  ret %"class.blink::Node"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal31TraversePreviousAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  %3 = icmp eq %"class.blink::ContainerNode"* %2, null
  br i1 %3, label %31, label %4

4:                                                ; preds = %1, %28
  %5 = phi %"class.blink::ContainerNode"* [ %29, %28 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %6) #5
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %6) #5
  %10 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %9, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %10, align 8
  %12 = icmp eq %"class.blink::SlotAssignment"* %11, null
  br i1 %12, label %28, label %13

13:                                               ; preds = %8
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %11) #5
  %14 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %6) #5
  %15 = icmp eq %"class.blink::FlatTreeNodeData"* %14, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %14, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %17, align 8
  %19 = icmp eq %"class.blink::HTMLSlotElement"* %18, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %14, i64 0, i32 1, i32 0, i32 0
  br label %24

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %5, i64 0, i32 0, i32 4, i32 0, i32 0
  br label %24

24:                                               ; preds = %20, %22
  %25 = phi %"class.blink::Node"** [ %23, %22 ], [ %21, %20 ]
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %28, label %31

28:                                               ; preds = %16, %13, %8, %24
  %29 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %6)
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %31, label %4

31:                                               ; preds = %24, %28, %1
  %32 = phi %"class.blink::Node"* [ null, %1 ], [ null, %28 ], [ %26, %24 ]
  ret %"class.blink::Node"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal32PreviousAncestorSiblingPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #5
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %3, i64 0, i32 0
  %5 = icmp eq %"class.blink::ContainerNode"* %3, null
  %6 = icmp eq %"class.blink::Node"* %4, %1
  %7 = or i1 %5, %6
  br i1 %7, label %38, label %8

8:                                                ; preds = %2, %32
  %9 = phi %"class.blink::Node"* [ %34, %32 ], [ %4, %2 ]
  %10 = phi %"class.blink::ContainerNode"* [ %33, %32 ], [ %3, %2 ]
  %11 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %9) #5
  br i1 %11, label %12, label %26

12:                                               ; preds = %8
  %13 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %9) #5
  %14 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %14, align 8
  %16 = icmp eq %"class.blink::SlotAssignment"* %15, null
  br i1 %16, label %32, label %17

17:                                               ; preds = %12
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %15) #5
  %18 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %9) #5
  %19 = icmp eq %"class.blink::FlatTreeNodeData"* %18, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %18, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %21, align 8
  %23 = icmp eq %"class.blink::HTMLSlotElement"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 4, i32 0, i32 0
  br label %28

28:                                               ; preds = %24, %26
  %29 = phi %"class.blink::Node"** [ %27, %26 ], [ %25, %24 ]
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %38

32:                                               ; preds = %20, %17, %12, %28
  %33 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %9) #5
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %33, i64 0, i32 0
  %35 = icmp eq %"class.blink::ContainerNode"* %33, null
  %36 = icmp eq %"class.blink::Node"* %34, %1
  %37 = or i1 %35, %36
  br i1 %37, label %38, label %8

38:                                               ; preds = %32, %28, %2
  %39 = phi %"class.blink::Node"* [ null, %2 ], [ %30, %28 ], [ null, %32 ]
  ret %"class.blink::Node"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal17PreviousPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* readnone) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %0, i32 1) #5
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %31

5:                                                ; preds = %2
  %6 = icmp eq %"class.blink::Node"* %0, %1
  br i1 %6, label %31, label %7

7:                                                ; preds = %5
  %8 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %8, label %9, label %23

9:                                                ; preds = %7
  %10 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %11 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %11, align 8
  %13 = icmp eq %"class.blink::SlotAssignment"* %12, null
  br i1 %13, label %29, label %14

14:                                               ; preds = %9
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %12) #5
  %15 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %16 = icmp eq %"class.blink::FlatTreeNodeData"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %18, align 8
  %20 = icmp eq %"class.blink::HTMLSlotElement"* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %15, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  br label %25

25:                                               ; preds = %21, %23
  %26 = phi %"class.blink::Node"** [ %24, %23 ], [ %22, %21 ]
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %17, %14, %9, %25
  %30 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal32PreviousAncestorSiblingPostOrderERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %0, %"class.blink::Node"* %1)
  br label %31

31:                                               ; preds = %25, %2, %5, %29
  %32 = phi %"class.blink::Node"* [ %30, %29 ], [ null, %5 ], [ %3, %2 ], [ %27, %25 ]
  ret %"class.blink::Node"* %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17FlatTreeTraversal14IsDescendantOfERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %1, i32 0) #5
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp ne i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 256
  %13 = icmp ne i32 %12, 0
  %14 = xor i1 %9, %13
  br i1 %14, label %25, label %15

15:                                               ; preds = %5
  %16 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0)
  %17 = icmp eq %"class.blink::ContainerNode"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %15, %22
  %19 = phi %"class.blink::ContainerNode"* [ %23, %22 ], [ %16, %15 ]
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %19, i64 0, i32 0
  %21 = icmp eq %"class.blink::Node"* %20, %1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %20)
  %24 = icmp eq %"class.blink::ContainerNode"* %23, null
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %22, %15, %2, %5
  %26 = phi i1 [ false, %2 ], [ false, %5 ], [ false, %15 ], [ true, %18 ], [ false, %22 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Node"* @_ZNK5blink4Node14CommonAncestorERKS0_PFPNS_13ContainerNodeES2_E(%"class.blink::Node"* %0, %"class.blink::Node"* dereferenceable(64) %1, %"class.blink::ContainerNode"* (%"class.blink::Node"*)* nonnull @"_ZZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_EN3$_08__invokeES3_") #5
  ret %"class.blink::Node"* %3
}

declare %"class.blink::Node"* @_ZNK5blink4Node14CommonAncestorERKS0_PFPNS_13ContainerNodeES2_E(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::ContainerNode"* (%"class.blink::Node"*)*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17FlatTreeTraversal5IndexERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* %0) #5
  br i1 %2, label %3, label %17

3:                                                ; preds = %1
  %4 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* %0) #5
  %5 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %5, align 8
  %7 = icmp eq %"class.blink::SlotAssignment"* %6, null
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %6) #5
  %9 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* %0) #5
  %10 = icmp eq %"class.blink::FlatTreeNodeData"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %12, align 8
  %14 = icmp eq %"class.blink::HTMLSlotElement"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %19

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 4, i32 0, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi %"class.blink::Node"** [ %18, %17 ], [ %16, %15 ]
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %38, %35, %30, %46, %11, %8, %3, %19
  %24 = phi i32 [ 0, %19 ], [ 0, %3 ], [ 0, %8 ], [ 0, %11 ], [ %28, %46 ], [ %28, %30 ], [ %28, %35 ], [ %28, %38 ]
  ret i32 %24

25:                                               ; preds = %19, %46
  %26 = phi %"class.blink::Node"* [ %48, %46 ], [ %21, %19 ]
  %27 = phi i32 [ %28, %46 ], [ 0, %19 ]
  %28 = add i32 %27, 1
  %29 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* nonnull %26) #5
  br i1 %29, label %30, label %44

30:                                               ; preds = %25
  %31 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* nonnull %26) #5
  %32 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %32, align 8
  %34 = icmp eq %"class.blink::SlotAssignment"* %33, null
  br i1 %34, label %23, label %35

35:                                               ; preds = %30
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %33) #5
  %36 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %26) #5
  %37 = icmp eq %"class.blink::FlatTreeNodeData"* %36, null
  br i1 %37, label %23, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %36, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %39, align 8
  %41 = icmp eq %"class.blink::HTMLSlotElement"* %40, null
  br i1 %41, label %23, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %36, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %25
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %26, i64 0, i32 4, i32 0, i32 0
  br label %46

46:                                               ; preds = %42, %44
  %47 = phi %"class.blink::Node"** [ %45, %44 ], [ %43, %42 ]
  %48 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %49 = icmp eq %"class.blink::Node"* %48, null
  br i1 %49, label %23, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17FlatTreeTraversal13CountChildrenERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %0, i32 0) #5
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %19, %16, %11, %27, %1
  %5 = phi i32 [ 0, %1 ], [ %9, %27 ], [ %9, %11 ], [ %9, %16 ], [ %9, %19 ]
  ret i32 %5

6:                                                ; preds = %1, %27
  %7 = phi %"class.blink::Node"* [ %29, %27 ], [ %2, %1 ]
  %8 = phi i32 [ %9, %27 ], [ 0, %1 ]
  %9 = add i32 %8, 1
  %10 = tail call zeroext i1 @_ZNK5blink4Node19IsChildOfShadowHostEv(%"class.blink::Node"* nonnull %7) #5
  br i1 %10, label %11, label %25

11:                                               ; preds = %6
  %12 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node23ParentElementShadowRootEv(%"class.blink::Node"* nonnull %7) #5
  %13 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::SlotAssignment"*, %"class.blink::SlotAssignment"** %13, align 8
  %15 = icmp eq %"class.blink::SlotAssignment"* %14, null
  br i1 %15, label %4, label %16

16:                                               ; preds = %11
  tail call void @_ZN5blink14SlotAssignment16RecalcAssignmentEv(%"class.blink::SlotAssignment"* nonnull %14) #5
  %17 = tail call %"class.blink::FlatTreeNodeData"* @_ZNK5blink4Node19GetFlatTreeNodeDataEv(%"class.blink::Node"* nonnull %7) #5
  %18 = icmp eq %"class.blink::FlatTreeNodeData"* %17, null
  br i1 %18, label %4, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HTMLSlotElement"*, %"class.blink::HTMLSlotElement"** %20, align 8
  %22 = icmp eq %"class.blink::HTMLSlotElement"* %21, null
  br i1 %22, label %4, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::FlatTreeNodeData", %"class.blink::FlatTreeNodeData"* %17, i64 0, i32 2, i32 0, i32 0
  br label %27

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 0, i32 5, i32 0, i32 0
  br label %27

27:                                               ; preds = %23, %25
  %28 = phi %"class.blink::Node"** [ %26, %25 ], [ %24, %23 ]
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %4, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal10LastWithinERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %0, i32 1) #5
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %6, %1
  %5 = phi %"class.blink::Node"* [ null, %1 ], [ %7, %6 ]
  ret %"class.blink::Node"* %5

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::Node"* [ %8, %6 ], [ %2, %1 ]
  %8 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %7, i32 1) #5
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %4, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(64) %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal16LastWithinOrSelfERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* dereferenceable(64) %0, i32 1) #5
  %3 = icmp eq %"class.blink::Node"* %2, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %1, %4
  %5 = phi %"class.blink::Node"* [ %6, %4 ], [ %2, %1 ]
  %6 = tail call %"class.blink::Node"* @_ZN5blink17FlatTreeTraversal13TraverseChildERKNS_4NodeENS0_18TraversalDirectionE(%"class.blink::Node"* nonnull dereferenceable(64) %5, i32 1) #5
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %4

8:                                                ; preds = %4, %1
  %9 = phi %"class.blink::Node"* [ null, %1 ], [ %5, %4 ]
  %10 = icmp eq %"class.blink::Node"* %9, null
  %11 = select i1 %10, %"class.blink::Node"* %0, %"class.blink::Node"* %9
  ret %"class.blink::Node"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.370"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #5
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.370", %"class.WTF::Vector.370"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #5
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #5
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #5
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #5
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #5
  %23 = getelementptr inbounds %"class.WTF::Vector.370", %"class.WTF::Vector.370"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal %"class.blink::ContainerNode"* @"_ZZN5blink17FlatTreeTraversal14CommonAncestorERKNS_4NodeES3_EN3$_08__invokeES3_"(%"class.blink::Node"* dereferenceable(64)) #4 align 2 {
  %2 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %0) #5
  ret %"class.blink::ContainerNode"* %2
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
