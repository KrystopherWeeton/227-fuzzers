; ModuleID = '../../content/browser/conversions/conversion_storage_sql.cc'
source_filename = "../../content/browser/conversions/conversion_storage_sql.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.content::ConversionStorageSql" = type { %"class.content::ConversionStorage", i8, %"class.base::FilePath", %"class.absl::optional", %"class.std::__1::unique_ptr", %"class.content::RateLimitTable", %"class.sql::MetaTable", %"class.base::Clock"*, %"class.std::__1::unique_ptr.30", %"class.base::WeakPtrFactory" }
%"class.content::ConversionStorage" = type { i32 (...)** }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.sql::Database"* }
%"class.sql::Database" = type { %struct.sqlite3*, %"struct.sql::DatabaseOptions", %"class.base::flat_map", %"class.std::__1::set", i32, i8, i8, i8, i8, i8, i8, i32, %"class.base::RepeatingCallback", %"class.std::__1::basic_string", %"class.base::HistogramBase"*, %"class.std::__1::unique_ptr.23" }
%struct.sqlite3 = type opaque
%"struct.sql::DatabaseOptions" = type { i8, i8, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.4" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.18", [4 x i8] }>
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.sql::DatabaseMemoryDumpProvider"* }
%"class.sql::DatabaseMemoryDumpProvider" = type opaque
%"class.content::RateLimitTable" = type { %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"* }
%"class.sql::MetaTable" = type { %"class.sql::Database"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.content::ConversionStorage::Delegate"* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.37", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.37" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.38" }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i8 }
%"class.content::ConversionStorage::Delegate" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.content::StorableImpression" = type { i64, %"class.url::Origin", %"class.url::Origin", %"class.url::Origin", %"class.base::Time", %"class.base::Time", i32, i64, %"class.absl::optional.48" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.43" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i64 }
%"class.sql::Transaction" = type <{ %"class.sql::Database"*, i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.sql::Statement" = type <{ %class.scoped_refptr.53, i8, i8, [6 x i8] }>
%class.scoped_refptr.53 = type { %"class.sql::Database::StatementRef"* }
%"class.sql::Database::StatementRef" = type <{ %"class.base::RefCounted", [4 x i8], %"class.sql::Database"*, %struct.sqlite3_stmt*, i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%struct.sqlite3_stmt = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.95 }
%class.scoped_refptr.95 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.content::StorableConversion" = type { i64, %"class.net::SchemefulSite", %"class.url::Origin" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.content::StorableImpression"*, %"class.content::StorableImpression"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.content::StorableImpression"* }
%"class.base::flat_map.61" = type { %"class.base::internal::flat_tree.62" }
%"class.base::internal::flat_tree.62" = type { %"class.std::__1::vector.63" }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"class.std::__1::__compressed_pair.66" }
%"struct.std::__1::pair.65" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::pair.65"* }
%"struct.content::ConversionReport" = type { %"class.content::StorableImpression", i64, %"class.base::Time", %"class.base::Time", %"class.base::TimeDelta", %"class.absl::optional.48" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"*, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.content::ConversionReport"* }
%"class.base::RepeatingCallback.80" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare" = type { i8 }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { i64*, i64*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i64* }
%"class.base::internal::flat_tree.89" = type { %"class.std::__1::vector.82" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__split_buffer.113" = type { %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"*, %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::allocator.69"* }
%"class.std::__1::allocator.69" = type { i8 }
%"struct.std::__1::__split_buffer.121" = type { i64*, i64*, i64*, %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.85", %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.std::__1::allocator.87"* }
%"class.std::__1::allocator.87" = type { i8 }

$_ZNSt3__16vectorIN7content18StorableImpressionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJRlRS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJRlRS4_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJlS4_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJlS4_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN7content16ConversionReportENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl = comdat any

$_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_ = comdat any

$_ZN4base8internal9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE = comdat any

@_ZN7content20ConversionStorageSql16g_run_in_memory_E = hidden local_unnamed_addr global i8 0, align 1
@_ZTVN7content20ConversionStorageSqlE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::ConversionStorageSql"*)* @_ZN7content20ConversionStorageSqlD2Ev to i8*), i8* bitcast (void (%"class.content::ConversionStorageSql"*)* @_ZN7content20ConversionStorageSqlD0Ev to i8*), i8* bitcast (void (%"class.content::ConversionStorageSql"*, %"class.content::StorableImpression"*)* @_ZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionE to i8*), i8* bitcast (i1 (%"class.content::ConversionStorageSql"*, %"class.content::StorableConversion"*)* @_ZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionE to i8*), i8* bitcast (void (%"class.std::__1::vector.73"*, %"class.content::ConversionStorageSql"*, i64, i32)* @_ZN7content20ConversionStorageSql22GetConversionsToReportEN4base4TimeEi to i8*), i8* bitcast (void (%"class.std::__1::vector.54"*, %"class.content::ConversionStorageSql"*, i32)* @_ZN7content20ConversionStorageSql20GetActiveImpressionsEi to i8*), i8* bitcast (i32 (%"class.content::ConversionStorageSql"*)* @_ZN7content20ConversionStorageSql24DeleteExpiredImpressionsEv to i8*), i8* bitcast (i1 (%"class.content::ConversionStorageSql"*, i64)* @_ZN7content20ConversionStorageSql16DeleteConversionEl to i8*), i8* bitcast (void (%"class.content::ConversionStorageSql"*, i64, i64, %"class.base::RepeatingCallback.80"*)* @_ZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEE to i8*)] }, align 8
@_ZN7content12_GLOBAL__N_113kInMemoryPathE = internal constant [8 x i8] c":memory\00", align 1
@_ZZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionEE42kDeactivateMatchingConvertedImpressionsSql = internal constant [131 x i8] c"UPDATE impressions SET active = 0 WHERE conversion_destination = ? AND reporting_origin = ? AND active = 1 AND num_conversions > 0\00", align 16
@.str = private unnamed_addr constant [60 x i8] c"../../content/browser/conversions/conversion_storage_sql.cc\00", align 1
@_ZZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionEE20kInsertImpressionSql = internal constant [226 x i8] c"INSERT INTO impressions(impression_data, impression_origin, conversion_origin, conversion_destination, reporting_origin, impression_time, expiry_time, source_type, attributed_truthfully, priority) VALUES (?,?,?,?,?,?,?,?,?,?)\00", align 16
@_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE26kGetMatchingImpressionsSql = internal constant [298 x i8] c"SELECT impression_id, impression_data, impression_origin, conversion_origin, impression_time, expiry_time, priority, attributed_truthfully FROM impressions WHERE conversion_destination = ? AND reporting_origin = ? AND active = 1 AND expiry_time > ? AND source_type = ?ORDER BY impression_time DESC\00", align 16
@_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE19kStoreConversionSql = internal constant [103 x i8] c"INSERT INTO conversions (impression_id, conversion_data, conversion_time, report_time) VALUES(?,?,?,?)\00", align 16
@_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE33kUpdateImpressionForConversionSql = internal constant [115 x i8] c"UPDATE impressions SET num_conversions = num_conversions + 1, active = num_conversions < ? WHERE impression_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE33kDeleteUnattributedImpressionsSql = internal constant [48 x i8] c"DELETE FROM impressions WHERE impression_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql22GetConversionsToReportEN4base4TimeEiE25kGetExpiredConversionsSql = internal constant [343 x i8] c"SELECT C.conversion_data, C.conversion_time, C.report_time, C.conversion_id, I.impression_origin, I.conversion_origin, I.reporting_origin, I.impression_data, I.impression_time, I.expiry_time, I.impression_id, I.source_type, I.priority FROM conversions C JOIN impressions I ON C.impression_id = I.impression_id WHERE C.report_time <= ? LIMIT ?\00", align 16
@_ZZN7content20ConversionStorageSql24DeleteExpiredImpressionsEvE28kDeleteExpiredImpressionsSql = internal constant [112 x i8] c"DELETE FROM impressions WHERE expiry_time <= ? AND impression_id NOT IN (SELECT impression_id FROM conversions)\00", align 16
@_ZZN7content20ConversionStorageSql24DeleteExpiredImpressionsEvE29kDeleteInactiveImpressionsSql = internal constant [106 x i8] c"DELETE FROM impressions WHERE active = 0 AND impression_id NOT IN (SELECT impression_id FROM conversions)\00", align 16
@_ZZN7content20ConversionStorageSql16DeleteConversionElE24kDeleteSentConversionSql = internal constant [48 x i8] c"DELETE FROM conversions WHERE conversion_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE18kScanCandidateData = internal constant [264 x i8] c"SELECT C.conversion_id, I.impression_id,I.impression_origin, I.conversion_origin, I.reporting_origin FROM impressions I LEFT JOIN conversions C ON C.impression_id = I.impression_id WHERE(I.impression_time BETWEEN ?1 AND ?2) OR(C.conversion_time BETWEEN ?1 AND ?2)\00", align 16
@_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE20kDeleteImpressionSql = internal constant [48 x i8] c"DELETE FROM impressions WHERE impression_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE20kDeleteConversionSql = internal constant [48 x i8] c"DELETE FROM conversions WHERE conversion_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE29kDeleteVestigialConversionSql = internal constant [48 x i8] c"DELETE FROM conversions WHERE impression_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E25kSelectImpressionRangeSql = internal constant [180 x i8] c"SELECT impression_id FROM impressions WHERE (impression_time BETWEEN ?1 AND ?2) OR impression_id in (SELECT impression_id FROM conversions WHERE conversion_time BETWEEN ?1 AND ?2)\00", align 16
@_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E20kDeleteImpressionSql = internal constant [48 x i8] c"DELETE FROM impressions WHERE impression_id = ?\00", align 16
@_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E25kDeleteConversionRangeSql = internal constant [128 x i8] c"DELETE FROM conversions WHERE (conversion_time BETWEEN ? AND ?) OR impression_id NOT IN (SELECT impression_id FROM impressions)\00", align 16
@_ZZN7content20ConversionStorageSql19ClearAllDataAllTimeEvE24kDeleteAllConversionsSql = internal constant [24 x i8] c"DELETE FROM conversions\00", align 16
@_ZZN7content20ConversionStorageSql19ClearAllDataAllTimeEvE24kDeleteAllImpressionsSql = internal constant [24 x i8] c"DELETE FROM impressions\00", align 16
@_ZZN7content20ConversionStorageSql31HasCapacityForStoringImpressionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20kCountImpressionsSql = internal constant [77 x i8] c"SELECT COUNT(impression_origin) FROM impressions WHERE impression_origin = ?\00", align 16
@_ZZN7content20ConversionStorageSql31GetCapacityForStoringConversionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20kCountConversionsSql = internal constant [167 x i8] c"SELECT COUNT(conversion_id) FROM conversions C JOIN impressions I ON I.impression_id = C.impression_id WHERE I.conversion_destination = ? AND (active BETWEEN 0 AND 1)\00", align 16
@_ZZN7content20ConversionStorageSql20GetActiveImpressionsEiE24kGetActiveImpressionsSql = internal constant [209 x i8] c"SELECT impression_data, impression_origin, conversion_origin, reporting_origin, impression_time, expiry_time, impression_id, source_type, priority FROM impressions WHERE active = 1 and expiry_time > ? LIMIT ?\00", align 16
@_ZN3sql8features23kEnableWALModeByDefaultE = external global %"struct.base::Feature", align 8
@.str.1 = private constant [12 x i8] c"Conversions\00", align 1
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE19kImpressionTableSql = internal constant [451 x i8] c"CREATE TABLE IF NOT EXISTS impressions(impression_id INTEGER PRIMARY KEY,impression_data TEXT NOT NULL,impression_origin TEXT NOT NULL,conversion_origin TEXT NOT NULL,reporting_origin TEXT NOT NULL,impression_time INTEGER NOT NULL,expiry_time INTEGER NOT NULL,num_conversions INTEGER DEFAULT 0,active INTEGER DEFAULT 1,conversion_destination TEXT NOT NULL,source_type INTEGER NOT NULL,attributed_truthfully INTEGER NOT NULL,priority INTEGER NOT NULL)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE30kConversionDestinationIndexSql = internal constant [119 x i8] c"CREATE INDEX IF NOT EXISTS conversion_destination_idx ON impressions(active, conversion_destination, reporting_origin)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE25kImpressionExpiryIndexSql = internal constant [77 x i8] c"CREATE INDEX IF NOT EXISTS impression_expiry_idx ON impressions(expiry_time)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE25kImpressionOriginIndexSql = internal constant [83 x i8] c"CREATE INDEX IF NOT EXISTS impression_origin_idx ON impressions(impression_origin)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE19kConversionTableSql = internal constant [193 x i8] c"CREATE TABLE IF NOT EXISTS conversions (conversion_id INTEGER PRIMARY KEY, impression_id INTEGER, conversion_data TEXT NOT NULL, conversion_time INTEGER NOT NULL, report_time INTEGER NOT NULL)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE29kConversionReportTimeIndexSql = internal constant [77 x i8] c"CREATE INDEX IF NOT EXISTS conversion_report_idx ON conversions(report_time)\00", align 16
@_ZZN7content20ConversionStorageSql12CreateSchemaEvE26kConversionClickIdIndexSql = internal constant [86 x i8] c"CREATE INDEX IF NOT EXISTS conversion_impression_id_idx ON conversions(impression_id)\00", align 16
@.str.2 = private unnamed_addr constant [33 x i8] c"Conversions.Storage.CreationTime\00", align 1
@.str.5 = private unnamed_addr constant [51 x i8] c"Conversions.ImpressionsDeletedInDataClearOperation\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"Conversions.ReportsDeletedInDataClearOperation\00", align 1
@.str.7 = private unnamed_addr constant [48 x i8] c"Conversions.Storage.ClearDataWithFilterDuration\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"Conversions.ClearDataTime\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"Conversions.Storage.Sql.InitStatus\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer1D1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN7content20ConversionStorageSqlC1ERKN4base8FilePathENSt3__110unique_ptrINS_17ConversionStorage8DelegateENS5_14default_deleteIS8_EEEEPKNS1_5ClockE = hidden unnamed_addr alias void (%"class.content::ConversionStorageSql"*, %"class.base::FilePath"*, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*), void (%"class.content::ConversionStorageSql"*, %"class.base::FilePath"*, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*)* @_ZN7content20ConversionStorageSqlC2ERKN4base8FilePathENSt3__110unique_ptrINS_17ConversionStorage8DelegateENS5_14default_deleteIS8_EEEEPKNS1_5ClockE
@_ZN7content20ConversionStorageSqlD1Ev = hidden unnamed_addr alias void (%"class.content::ConversionStorageSql"*), void (%"class.content::ConversionStorageSql"*)* @_ZN7content20ConversionStorageSqlD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7content20ConversionStorageSql21RunInMemoryForTestingEv() local_unnamed_addr #0 align 2 {
  store i8 1, i8* @_ZN7content20ConversionStorageSql16g_run_in_memory_E, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSqlC2ERKN4base8FilePathENSt3__110unique_ptrINS_17ConversionStorage8DelegateENS5_14default_deleteIS8_EEEEPKNS1_5ClockE(%"class.content::ConversionStorageSql"*, %"class.base::FilePath"* dereferenceable(24), %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*) unnamed_addr #1 align 2 {
  %5 = ptrtoint %"class.content::ConversionStorage::Delegate"* %2 to i64
  %6 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN7content20ConversionStorageSqlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2
  %9 = load i8, i8* @_ZN7content20ConversionStorageSql16g_run_in_memory_E, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %4
  tail call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN7content12_GLOBAL__N_113kInMemoryPathE, i64 0, i64 0), i64 7) #12
  br label %13

12:                                               ; preds = %4
  tail call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret %8, %"class.base::FilePath"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11) #12
  br label %13

13:                                               ; preds = %11, %12
  %14 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 4
  %15 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4
  %16 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  tail call void @_ZN7content14RateLimitTableC1EPKNS_17ConversionStorage8DelegateEPKN4base5ClockE(%"class.content::RateLimitTable"* %17, %"class.content::ConversionStorage::Delegate"* %2, %"class.base::Clock"* %3) #12
  %18 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 6
  tail call void @_ZN3sql9MetaTableC1Ev(%"class.sql::MetaTable"* %18) #12
  %19 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 7
  store %"class.base::Clock"* %3, %"class.base::Clock"** %19, align 8
  %20 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8
  %21 = bitcast %"class.std::__1::unique_ptr.30"* %20 to i64*
  store i64 %5, i64* %21, align 8
  %22 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 9, i32 0
  %23 = ptrtoint %"class.content::ConversionStorageSql"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %22, i64 %23) #12
  ret void
}

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #2

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7content14RateLimitTableC1EPKNS_17ConversionStorage8DelegateEPKN4base5ClockE(%"class.content::RateLimitTable"*, %"class.content::ConversionStorage::Delegate"*, %"class.base::Clock"*) unnamed_addr #2

declare void @_ZN3sql9MetaTableC1Ev(%"class.sql::MetaTable"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSqlD2Ev(%"class.content::ConversionStorageSql"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN7content20ConversionStorageSqlE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #12
  %4 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %4, align 8
  store %"class.content::ConversionStorage::Delegate"* null, %"class.content::ConversionStorage::Delegate"** %4, align 8
  %6 = icmp eq %"class.content::ConversionStorage::Delegate"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.content::ConversionStorage::Delegate"* %5 to void (%"class.content::ConversionStorage::Delegate"*)***
  %9 = load void (%"class.content::ConversionStorage::Delegate"*)**, void (%"class.content::ConversionStorage::Delegate"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.content::ConversionStorage::Delegate"*)*, void (%"class.content::ConversionStorage::Delegate"*)** %9, i64 1
  %11 = load void (%"class.content::ConversionStorage::Delegate"*)*, void (%"class.content::ConversionStorage::Delegate"*)** %10, align 8
  tail call void %11(%"class.content::ConversionStorage::Delegate"* nonnull %5) #12
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 6
  tail call void @_ZN3sql9MetaTableD1Ev(%"class.sql::MetaTable"* %13) #12
  %14 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  tail call void @_ZN7content14RateLimitTableD1Ev(%"class.content::RateLimitTable"* %14) #12
  %15 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %15, align 8
  %17 = icmp eq %"class.sql::Database"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %12
  tail call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %16) #12
  %19 = bitcast %"class.sql::Database"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #13
  br label %20

20:                                               ; preds = %12, %18
  %21 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %21) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql9MetaTableD1Ev(%"class.sql::MetaTable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7content14RateLimitTableD1Ev(%"class.content::RateLimitTable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSqlD0Ev(%"class.content::ConversionStorageSql"*) unnamed_addr #1 align 2 {
  tail call void @_ZN7content20ConversionStorageSqlD2Ev(%"class.content::ConversionStorageSql"* %0) #12
  %2 = bitcast %"class.content::ConversionStorageSql"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionE(%"class.content::ConversionStorageSql"*, %"class.content::StorableImpression"* dereferenceable(296)) unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.sql::Transaction", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::SchemefulSite", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %"class.sql::Statement", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %0, i32 0)
  br i1 %12, label %13, label %122

13:                                               ; preds = %2
  %14 = bitcast %"class.content::ConversionStorageSql"* %0 to i32 (%"class.content::ConversionStorageSql"*)***
  %15 = load i32 (%"class.content::ConversionStorageSql"*)**, i32 (%"class.content::ConversionStorageSql"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.content::ConversionStorageSql"*)*, i32 (%"class.content::ConversionStorageSql"*)** %15, i64 6
  %17 = load i32 (%"class.content::ConversionStorageSql"*)*, i32 (%"class.content::ConversionStorageSql"*)** %16, align 8
  %18 = tail call i32 %17(%"class.content::ConversionStorageSql"* %0) #12
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN7content15SerializeOriginERKN3url6OriginE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.url::Origin"* dereferenceable(80) %21) #12
  %23 = call zeroext i1 @_ZN7content20ConversionStorageSql31HasCapacityForStoringImpressionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::ConversionStorageSql"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  br i1 %23, label %24, label %114

24:                                               ; preds = %13
  %25 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %28 = load %"class.sql::Database"*, %"class.sql::Database"** %26, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %4, %"class.sql::Database"* %28) #12
  %29 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %4) #12
  br i1 %29, label %30, label %113

30:                                               ; preds = %24
  %31 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.net::SchemefulSite"* %6 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %33) #12
  call void @_ZNK7content18StorableImpression21ConversionDestinationEv(%"class.net::SchemefulSite"* nonnull sret %6, %"class.content::StorableImpression"* %1) #12
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::SchemefulSite"* nonnull %6) #12
  %35 = getelementptr inbounds %"class.net::SchemefulSite", %"class.net::SchemefulSite"* %6, i64 0, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %33) #12
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 3
  %39 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call void @_ZN7content15SerializeOriginERKN3url6OriginE(%"class.std::__1::basic_string"* nonnull sret %7, %"class.url::Origin"* dereferenceable(80) %38) #12
  %40 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #12
  %41 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  %42 = load %"class.sql::Database"*, %"class.sql::Database"** %26, align 8
  %43 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %42, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 159, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @_ZZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionEE42kDeactivateMatchingConvertedImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %43) #12
  %44 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %8, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %45 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %8, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %46 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %8) #12
  %47 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #12
  %48 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false)
  %49 = load %"class.sql::Database"*, %"class.sql::Database"** %26, align 8
  %50 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %49, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 172, i8* getelementptr inbounds ([226 x i8], [226 x i8]* @_ZZN7content20ConversionStorageSql15StoreImpressionERKNS_18StorableImpressionEE20kInsertImpressionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %9, %"class.sql::Database::StatementRef"* %50) #12
  %51 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 0
  %53 = load i64, i64* %52, align 8
  call void @_ZN7content35SerializeImpressionOrConversionDataEm(%"class.std::__1::basic_string"* nonnull sret %10, i64 %53) #12
  %54 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %55 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %30
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %30, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  %63 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %64 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #12
  %65 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 2
  call void @_ZN7content15SerializeOriginERKN3url6OriginE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.url::Origin"* dereferenceable(80) %65) #12
  %66 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %67 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %62
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #13
  br label %74

74:                                               ; preds = %62, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #12
  %75 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %76 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %9, i32 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %77 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 4, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %9, i32 5, i64 %78) #12
  %80 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 5, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %9, i32 6, i64 %81) #12
  %83 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  %85 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %9, i32 7, i32 %84) #12
  %86 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %87 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %86, align 8
  %88 = bitcast %"class.content::ConversionStorage::Delegate"* %87 to i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)***
  %89 = load i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)**, i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)*, i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)** %89, i64 8
  %91 = load i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)*, i32 (%"class.content::ConversionStorage::Delegate"*, %"class.content::StorableImpression"*)** %90, align 8
  %92 = call i32 %91(%"class.content::ConversionStorage::Delegate"* %87, %"class.content::StorableImpression"* dereferenceable(296) %1) #12
  %93 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %9, i32 8, i32 %92) #12
  %94 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %1, i64 0, i32 7
  %95 = load i64, i64* %94, align 8
  %96 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %9, i32 9, i64 %95) #12
  %97 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %9) #12
  %98 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %4) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #12
  %99 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %74
  %104 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %74, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  %106 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  %111 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %111) #13
  br label %112

112:                                              ; preds = %105, %110
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br label %113

113:                                              ; preds = %24, %112
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #12
  br label %114

114:                                              ; preds = %13, %113
  %115 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  %117 = load i8, i8* %116, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %114
  %120 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %120) #13
  br label %121

121:                                              ; preds = %114, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  br label %122

122:                                              ; preds = %2, %121
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"*, i32) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  br label %29

15:                                               ; preds = %2
  %16 = load i8, i8* @_ZN7content20ConversionStorageSql16g_run_in_memory_E, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.absl::optional"* %8 to i64*
  store i64 1, i64* %19, align 8
  %20 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %32

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2
  %23 = tail call zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24) %22) #12
  %24 = bitcast %"class.absl::optional"* %8 to i64*
  %25 = zext i1 %23 to i64
  %26 = shl nuw nsw i64 %25, 32
  %27 = or i64 %26, 1
  store i64 %27, i64* %24, align 8
  %28 = zext i1 %23 to i32
  br label %29

29:                                               ; preds = %21, %12
  %30 = phi i32 [ %14, %12 ], [ %28, %21 ]
  %31 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  switch i32 %30, label %36 [
    i32 0, label %32
    i32 3, label %35
    i32 2, label %163
  ]

32:                                               ; preds = %18, %29
  %33 = phi i32* [ %20, %18 ], [ %31, %29 ]
  %34 = icmp eq i32 %1, 1
  br i1 %34, label %163, label %36

35:                                               ; preds = %29
  br label %163

36:                                               ; preds = %32, %29
  %37 = phi i32* [ %33, %32 ], [ %31, %29 ]
  %38 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3sql8features23kEnableWALModeByDefaultE) #12
  %39 = tail call i8* @_Znwm(i64 136) #13
  %40 = bitcast i8* %39 to %"class.sql::Database"*
  %41 = zext i1 %38 to i64
  %42 = shl nuw nsw i64 %41, 8
  %43 = or i64 %42, 17592186044417
  tail call void @_ZN3sql8DatabaseC1ENS_15DatabaseOptionsE(%"class.sql::Database"* nonnull %40, i64 %43, i32 32) #12
  %44 = ptrtoint i8* %39 to i64
  %45 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.sql::Database"*, %"class.sql::Database"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr"* %45 to i64*
  store i64 %44, i64* %48, align 8
  %49 = icmp eq %"class.sql::Database"* %47, null
  %50 = bitcast i8* %39 to %"class.sql::Database"*
  br i1 %49, label %54, label %51

51:                                               ; preds = %36
  tail call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %47) #12
  %52 = bitcast %"class.sql::Database"* %47 to i8*
  tail call void @_ZdlPv(i8* %52) #13
  %53 = load %"class.sql::Database"*, %"class.sql::Database"** %46, align 8
  br label %54

54:                                               ; preds = %51, %36
  %55 = phi %"class.sql::Database"* [ %53, %51 ], [ %50, %36 ]
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  %57 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  store i8 11, i8* %58, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i64 11, i1 false) #12
  %59 = getelementptr inbounds i8, i8* %56, i64 11
  store i8 0, i8* %59, align 1
  call void @_ZN3sql8Database17set_histogram_tagERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Database"* %55, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %60 = load i8, i8* %58, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #13
  br label %65

65:                                               ; preds = %54, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  %66 = load %"class.sql::Database"*, %"class.sql::Database"** %46, align 8
  %67 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %68 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #12
  %69 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #12, !noalias !3
  %70 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 9, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %70) #12, !noalias !3
  %71 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 9, i32 0, i32 1
  %72 = load i64, i64* %71, align 8, !noalias !3
  %73 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %73, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %72) #12
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #12, !noalias !3
  %74 = call i8* @_Znwm(i64 64) #13, !noalias !6
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.sql::Statement"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE) #12, !noalias !6
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)* @_ZN7content20ConversionStorageSql21DatabaseErrorCallbackEiPN3sql9StatementE to i64), i64 0>, <2 x i64>* %77, align 8, !noalias !6
  %78 = getelementptr inbounds i8, i8* %74, i64 48
  %79 = bitcast i8* %78 to %"class.base::internal::WeakReference"*
  %80 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %79, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %80) #12, !noalias !6
  %81 = getelementptr inbounds i8, i8* %74, i64 56
  %82 = bitcast i8* %81 to i64*
  %83 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8, !noalias !6
  store i64 %84, i64* %82, align 8, !noalias !6
  %85 = bitcast %"class.base::RepeatingCallback"* %5 to i8**
  store i8* %74, i8** %85, align 8, !alias.scope !6
  %86 = getelementptr inbounds %"class.sql::Database", %"class.sql::Database"* %66, i64 0, i32 12, i32 0
  %87 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  %88 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"* %86, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %87) #12
  %89 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #12
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  %90 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2
  %91 = bitcast %"class.base::FilePath"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %93 to i64
  %98 = select i1 %94, i64 %96, i64 %97
  %99 = icmp eq i64 %98, 7
  br i1 %99, label %100, label %116

100:                                              ; preds = %65
  %101 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %90, i64 0, i32 0
  %102 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %101, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN7content12_GLOBAL__N_113kInMemoryPathE, i64 0, i64 0), i64 7) #12
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %100
  %105 = load %"class.sql::Database"*, %"class.sql::Database"** %46, align 8
  %106 = call zeroext i1 @_ZN3sql8Database12OpenInMemoryEv(%"class.sql::Database"* %105) #12
  br i1 %106, label %143, label %107

107:                                              ; preds = %104
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 4) #12
  %108 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.sql::Database"*, %"class.sql::Database"** %108, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %108, align 8
  %110 = icmp eq %"class.sql::Database"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %107
  call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %109) #12
  %112 = bitcast %"class.sql::Database"* %109 to i8*
  call void @_ZdlPv(i8* %112) #13
  br label %113

113:                                              ; preds = %107, %111
  %114 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast i8* %114 to i64*
  store i64 8589934593, i64* %115, align 8
  br label %163

116:                                              ; preds = %65, %100
  %117 = bitcast %"class.base::FilePath"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #12
  call void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* nonnull sret %7, %"class.base::FilePath"* %90) #12
  %118 = call zeroext i1 @_ZN4base15DirectoryExistsERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %7) #12
  br i1 %118, label %130, label %119

119:                                              ; preds = %116
  %120 = call zeroext i1 @_ZN4base15CreateDirectoryERKNS_8FilePathE(%"class.base::FilePath"* nonnull dereferenceable(24) %7) #12
  br i1 %120, label %130, label %121

121:                                              ; preds = %119
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 3, i32 4) #12
  %122 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.sql::Database"*, %"class.sql::Database"** %122, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %122, align 8
  %124 = icmp eq %"class.sql::Database"* %123, null
  br i1 %124, label %127, label %125

125:                                              ; preds = %121
  call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %123) #12
  %126 = bitcast %"class.sql::Database"* %123 to i8*
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %121, %125
  %128 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %129 = bitcast i8* %128 to i64*
  store i64 8589934593, i64* %129, align 8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %163

130:                                              ; preds = %119, %116
  %131 = load %"class.sql::Database"*, %"class.sql::Database"** %46, align 8
  %132 = call zeroext i1 @_ZN3sql8Database4OpenERKN4base8FilePathE(%"class.sql::Database"* %131, %"class.base::FilePath"* dereferenceable(24) %90) #12
  br i1 %132, label %142, label %133

133:                                              ; preds = %130
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 2, i32 4) #12
  %134 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %135 = load %"class.sql::Database"*, %"class.sql::Database"** %134, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %134, align 8
  %136 = icmp eq %"class.sql::Database"* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %135) #12
  %138 = bitcast %"class.sql::Database"* %135 to i8*
  call void @_ZdlPv(i8* %138) #13
  br label %139

139:                                              ; preds = %133, %137
  %140 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %141 = bitcast i8* %140 to i64*
  store i64 8589934593, i64* %141, align 8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %163

142:                                              ; preds = %130
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #12
  br label %143

143:                                              ; preds = %142, %104
  %144 = load i8, i8* %9, align 4, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %37, align 4
  %148 = icmp eq i32 %147, 0
  br label %149

149:                                              ; preds = %143, %146
  %150 = phi i1 [ %148, %146 ], [ false, %143 ]
  %151 = call zeroext i1 @_ZN7content20ConversionStorageSql16InitializeSchemaEb(%"class.content::ConversionStorageSql"* %0, i1 zeroext %150)
  br i1 %151, label %161, label %152

152:                                              ; preds = %149
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 4, i32 4) #12
  %153 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %154 = load %"class.sql::Database"*, %"class.sql::Database"** %153, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %153, align 8
  %155 = icmp eq %"class.sql::Database"* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %152
  call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %154) #12
  %157 = bitcast %"class.sql::Database"* %154 to i8*
  call void @_ZdlPv(i8* %157) #13
  br label %158

158:                                              ; preds = %152, %156
  %159 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %160 = bitcast i8* %159 to i64*
  store i64 8589934593, i64* %160, align 8
  br label %163

161:                                              ; preds = %149
  %162 = bitcast %"class.absl::optional"* %8 to i64*
  store i64 12884901889, i64* %162, align 8
  call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 0, i32 4) #12
  br label %163

163:                                              ; preds = %139, %127, %29, %32, %161, %158, %113, %35
  %164 = phi i1 [ false, %158 ], [ true, %161 ], [ false, %113 ], [ true, %35 ], [ false, %32 ], [ false, %29 ], [ false, %127 ], [ false, %139 ]
  ret i1 %164
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN7content15SerializeOriginERKN3url6OriginE(%"class.std::__1::basic_string"* sret, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql31HasCapacityForStoringImpressionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::ConversionStorageSql"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 734, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @_ZZN7content20ConversionStorageSql31HasCapacityForStoringImpressionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20kCountImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #12
  %9 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %3, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %10 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #12
  br i1 %10, label %11, label %22

11:                                               ; preds = %2
  %12 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #12
  %13 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %14 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %13, align 8
  %15 = bitcast %"class.content::ConversionStorage::Delegate"* %14 to i32 (%"class.content::ConversionStorage::Delegate"*)***
  %16 = load i32 (%"class.content::ConversionStorage::Delegate"*)**, i32 (%"class.content::ConversionStorage::Delegate"*)*** %15, align 8
  %17 = getelementptr inbounds i32 (%"class.content::ConversionStorage::Delegate"*)*, i32 (%"class.content::ConversionStorage::Delegate"*)** %16, i64 5
  %18 = load i32 (%"class.content::ConversionStorage::Delegate"*)*, i32 (%"class.content::ConversionStorage::Delegate"*)** %17, align 8
  %19 = call i32 %18(%"class.content::ConversionStorage::Delegate"* %14) #12
  %20 = sext i32 %19 to i64
  %21 = icmp slt i64 %12, %20
  br label %22

22:                                               ; preds = %2, %11
  %23 = phi i1 [ %21, %11 ], [ false, %2 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret i1 %23
}

declare void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"*, %"class.sql::Database"*) unnamed_addr #2

declare zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"*) local_unnamed_addr #2

declare void @_ZNK7content18StorableImpression21ConversionDestinationEv(%"class.net::SchemefulSite"* sret, %"class.content::StorableImpression"*) local_unnamed_addr #2

declare void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.net::SchemefulSite"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"*, i8*, i64, i8*) local_unnamed_addr #2

declare void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"*, %"class.sql::Database::StatementRef"*) unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"*) local_unnamed_addr #2

declare void @_ZN7content35SerializeImpressionOrConversionDataEm(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"*, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"*, i32, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionE(%"class.content::ConversionStorageSql"*, %"class.content::StorableConversion"* dereferenceable(168)) unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::vector.54", align 8
  %8 = alloca %"class.base::flat_map.61", align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.content::StorableImpression", align 8
  %17 = alloca %"class.absl::optional.48", align 8
  %18 = alloca %"struct.content::ConversionReport", align 8
  %19 = alloca %"class.absl::optional.48", align 8
  %20 = alloca %"class.sql::Transaction", align 8
  %21 = alloca %"class.absl::optional.48", align 8
  %22 = alloca %"class.sql::Statement", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.sql::Statement", align 8
  %25 = alloca %"class.sql::Statement", align 8
  %26 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %0, i32 1)
  br i1 %26, label %27, label %379

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.content::StorableConversion", %"class.content::StorableConversion"* %1, i64 0, i32 1
  %29 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZNK3net13SchemefulSite9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.net::SchemefulSite"* %28) #12
  %32 = call i32 @_ZN7content20ConversionStorageSql31GetCapacityForStoringConversionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::ConversionStorageSql"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %370, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.content::StorableConversion", %"class.content::StorableConversion"* %1, i64 0, i32 2
  %36 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 7
  %37 = load %"class.base::Clock"*, %"class.base::Clock"** %36, align 8
  %38 = bitcast %"class.base::Clock"* %37 to i64 (%"class.base::Clock"*)***
  %39 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %39, i64 2
  %41 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %40, align 8
  %42 = call i64 %41(%"class.base::Clock"* %37) #12
  %43 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  %46 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %47 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %46, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 229, i8* getelementptr inbounds ([298 x i8], [298 x i8]* @_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE26kGetMatchingImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %47) #12
  %48 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %5, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #12
  %49 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12
  call void @_ZN7content15SerializeOriginERKN3url6OriginE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.url::Origin"* dereferenceable(80) %35) #12
  %50 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %5, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %51 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %34, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12
  %59 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 2, i64 %42) #12
  %60 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %5, i32 3, i32 0) #12
  %61 = bitcast %"class.std::__1::vector.54"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  %62 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %7, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %7, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 24, i1 false) #12
  %65 = bitcast %"class.base::flat_map.61"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 24, i1 false) #12
  %68 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %68, label %69, label %166

69:                                               ; preds = %58
  %70 = bitcast i64* %9 to i8*
  %71 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.url::Origin"* %11 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %77 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.url::Origin"* %13 to i8*
  %81 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %86 = bitcast i32* %15 to i8*
  %87 = bitcast %"class.content::StorableImpression"* %16 to i8*
  %88 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %90 = bitcast %"class.content::StorableImpression"** %63 to i64*
  %91 = bitcast %"struct.std::__1::pair.65"** %67 to i64*
  %92 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %8, i64 0, i32 0, i32 0
  br label %93

93:                                               ; preds = %69, %164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #12
  store i64 -6148914691236517206, i64* %9, align 8
  %94 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 0) #12
  store i64 %94, i64* %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %10, %"class.sql::Statement"* nonnull %5, i32 1) #12
  %95 = call i64 @_ZN7content37DeserializeImpressionOrConversionDataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %96 = load i8, i8* %73, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %99) #13
  br label %100

100:                                              ; preds = %93, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %75) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %12, %"class.sql::Statement"* nonnull %5, i32 2) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #12
  %101 = load i8, i8* %78, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %100, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %80) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %14, %"class.sql::Statement"* nonnull %5, i32 3) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #12
  %106 = load i8, i8* %83, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i8*, i8** %84, align 8
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #12
  %111 = load i8, i8* %85, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %164

113:                                              ; preds = %110
  %114 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 4) #12
  %115 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 5) #12
  %116 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 6) #12
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %86) #12
  store i32 -1431655766, i32* %15, align 4
  %117 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %5, i32 7) #12
  store i32 %117, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %87) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 296, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #12
  store i8 1, i8* %88, align 8
  %118 = load i64, i64* %9, align 8
  store i64 %118, i64* %89, align 8
  call void @_ZN7content18StorableImpressionC1EmRKN3url6OriginES4_S4_N4base4TimeES6_NS0_10SourceTypeElRKN4absl8optionalIlEE(%"class.content::StorableImpression"* nonnull %16, i64 %95, %"class.url::Origin"* nonnull dereferenceable(80) %11, %"class.url::Origin"* nonnull dereferenceable(80) %13, %"class.url::Origin"* dereferenceable(80) %35, i64 %114, i64 %115, i32 0, i64 %116, %"class.absl::optional.48"* nonnull dereferenceable(16) %17) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #12
  %119 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %63, align 8
  %120 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %64, align 8
  %121 = icmp ult %"class.content::StorableImpression"* %119, %120
  br i1 %121, label %122, label %125

122:                                              ; preds = %113
  call void @_ZN7content18StorableImpressionC1ERKS0_(%"class.content::StorableImpression"* %119, %"class.content::StorableImpression"* nonnull dereferenceable(296) %16) #12
  %123 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %119, i64 1
  %124 = ptrtoint %"class.content::StorableImpression"* %123 to i64
  store i64 %124, i64* %90, align 8
  br label %126

125:                                              ; preds = %113
  call void @_ZNSt3__16vectorIN7content18StorableImpressionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"* nonnull %7, %"class.content::StorableImpression"* nonnull dereferenceable(296) %16) #12
  br label %126

126:                                              ; preds = %122, %125
  %127 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %66, align 8
  %128 = load i64, i64* %91, align 8
  %129 = ptrtoint %"struct.std::__1::pair.65"* %127 to i64
  %130 = sub i64 %128, %129
  %131 = icmp eq i64 %130, 0
  %132 = inttoptr i64 %128 to %"struct.std::__1::pair.65"*
  br i1 %131, label %150, label %133

133:                                              ; preds = %126
  %134 = ashr exact i64 %130, 4
  %135 = load i64, i64* %9, align 8
  br label %136

136:                                              ; preds = %136, %133
  %137 = phi %"struct.std::__1::pair.65"* [ %127, %133 ], [ %148, %136 ]
  %138 = phi i64 [ %134, %133 ], [ %147, %136 ]
  %139 = lshr i64 %138, 1
  %140 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %137, i64 %139
  %141 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = icmp slt i64 %142, %135
  %144 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 1
  %145 = xor i64 %139, -1
  %146 = add i64 %138, %145
  %147 = select i1 %143, i64 %146, i64 %139
  %148 = select i1 %143, %"struct.std::__1::pair.65"* %144, %"struct.std::__1::pair.65"* %137
  %149 = icmp eq i64 %147, 0
  br i1 %149, label %150, label %136

150:                                              ; preds = %136, %126
  %151 = phi %"struct.std::__1::pair.65"* [ %127, %126 ], [ %148, %136 ]
  %152 = icmp eq %"struct.std::__1::pair.65"* %151, %132
  br i1 %152, label %158, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %151, i64 0, i32 0
  %155 = load i64, i64* %9, align 8
  %156 = load i64, i64* %154, align 8
  %157 = icmp slt i64 %155, %156
  br i1 %157, label %158, label %160

158:                                              ; preds = %153, %150
  %159 = call %"struct.std::__1::pair.65"* @_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJRlRS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.63"* nonnull %92, %"struct.std::__1::pair.65"* %151, i64* nonnull dereferenceable(8) %9, i32* nonnull dereferenceable(4) %15) #12
  br label %163

160:                                              ; preds = %153
  %161 = load i32, i32* %15, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %151, i64 0, i32 1
  store i32 %161, i32* %162, align 8
  br label %163

163:                                              ; preds = %158, %160
  call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %87) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %86) #12
  br label %164

164:                                              ; preds = %110, %163
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %80) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %75) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #12
  %165 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %165, label %93, label %166

166:                                              ; preds = %164, %58
  %167 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %167, label %168, label %345

168:                                              ; preds = %166
  %169 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %62, align 8
  %170 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %63, align 8
  %171 = icmp eq %"class.content::StorableImpression"* %169, %170
  br i1 %171, label %345, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %174 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %173, align 8
  %175 = bitcast %"class.content::ConversionStorage::Delegate"* %174 to %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)***
  %176 = load %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)**, %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)*** %175, align 8
  %177 = getelementptr inbounds %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)*, %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)** %176, i64 2
  %178 = load %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)*, %"class.content::StorableImpression"* (%"class.content::ConversionStorage::Delegate"*, %"class.std::__1::vector.54"*)** %177, align 8
  %179 = call dereferenceable(296) %"class.content::StorableImpression"* %178(%"class.content::ConversionStorage::Delegate"* %174, %"class.std::__1::vector.54"* nonnull dereferenceable(24) %7) #12
  %180 = bitcast %"struct.content::ConversionReport"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %180) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %180, i8 -86, i64 344, i1 false)
  %181 = getelementptr inbounds %"class.content::StorableConversion", %"class.content::StorableConversion"* %1, i64 0, i32 0
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #12
  store i8 0, i8* %183, align 8
  call void @_ZN7content16ConversionReportC1ERKNS_18StorableImpressionEmN4base4TimeES5_RKN4absl8optionalIlEE(%"struct.content::ConversionReport"* nonnull %18, %"class.content::StorableImpression"* dereferenceable(296) %179, i64 %182, i64 %42, i64 %42, %"class.absl::optional.48"* nonnull dereferenceable(16) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #12
  %184 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %173, align 8
  %185 = bitcast %"class.content::ConversionStorage::Delegate"* %184 to void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)***
  %186 = load void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)**, void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)*** %185, align 8
  %187 = getelementptr inbounds void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)*, void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)** %186, i64 3
  %188 = load void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)*, void (%"class.content::ConversionStorage::Delegate"*, %"struct.content::ConversionReport"*)** %187, align 8
  call void %188(%"class.content::ConversionStorage::Delegate"* %184, %"struct.content::ConversionReport"* nonnull dereferenceable(344) %18) #12
  %189 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  %190 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %191 = call zeroext i1 @_ZN7content14RateLimitTable20IsAttributionAllowedEPN3sql8DatabaseERKNS_16ConversionReportEN4base4TimeE(%"class.content::RateLimitTable"* %189, %"class.sql::Database"* %190, %"struct.content::ConversionReport"* nonnull dereferenceable(344) %18, i64 %42) #12
  br i1 %191, label %192, label %343

192:                                              ; preds = %172
  %193 = bitcast %"class.sql::Transaction"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %193) #12
  %194 = bitcast %"class.sql::Transaction"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 -86, i64 16, i1 false)
  %195 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %20, %"class.sql::Database"* %195) #12
  %196 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %20) #12
  br i1 %196, label %197, label %341

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %198) #12
  %199 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %18, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %200 = load i8, i8* %199, align 8
  %201 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %18, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %202 = load i64, i64* %201, align 8
  store i8 %200, i8* %198, align 8
  %203 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %21, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %202, i64* %203, align 8
  %204 = icmp eq i8 %200, 0
  br i1 %204, label %205, label %206, !prof !11

205:                                              ; preds = %197
  call void @llvm.trap() #12
  unreachable

206:                                              ; preds = %197
  %207 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %66, align 8
  %208 = bitcast %"struct.std::__1::pair.65"** %67 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = ptrtoint %"struct.std::__1::pair.65"* %207 to i64
  %211 = sub i64 %209, %210
  %212 = icmp eq i64 %211, 0
  %213 = inttoptr i64 %209 to %"struct.std::__1::pair.65"*
  br i1 %212, label %230, label %214

214:                                              ; preds = %206
  %215 = ashr exact i64 %211, 4
  br label %216

216:                                              ; preds = %216, %214
  %217 = phi %"struct.std::__1::pair.65"* [ %207, %214 ], [ %228, %216 ]
  %218 = phi i64 [ %215, %214 ], [ %227, %216 ]
  %219 = lshr i64 %218, 1
  %220 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %217, i64 %219
  %221 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %220, i64 0, i32 0
  %222 = load i64, i64* %221, align 8
  %223 = icmp slt i64 %222, %202
  %224 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %220, i64 1
  %225 = xor i64 %219, -1
  %226 = add i64 %218, %225
  %227 = select i1 %223, i64 %226, i64 %219
  %228 = select i1 %223, %"struct.std::__1::pair.65"* %224, %"struct.std::__1::pair.65"* %217
  %229 = icmp eq i64 %227, 0
  br i1 %229, label %230, label %216

230:                                              ; preds = %216, %206
  %231 = phi %"struct.std::__1::pair.65"* [ %207, %206 ], [ %228, %216 ]
  %232 = icmp eq %"struct.std::__1::pair.65"* %231, %213
  br i1 %232, label %237, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %231, i64 0, i32 0
  %235 = load i64, i64* %234, align 8
  %236 = icmp slt i64 %202, %235
  br i1 %236, label %237, label %241

237:                                              ; preds = %233, %230
  %238 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %238) #12
  store i32 0, i32* %3, align 4
  %239 = getelementptr inbounds %"class.base::flat_map.61", %"class.base::flat_map.61"* %8, i64 0, i32 0, i32 0
  %240 = call %"struct.std::__1::pair.65"* @_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJlS4_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_(%"class.std::__1::vector.63"* nonnull %239, %"struct.std::__1::pair.65"* %231, i64* dereferenceable(8) %203, i32* nonnull dereferenceable(4) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %238) #12
  br label %241

241:                                              ; preds = %233, %237
  %242 = phi %"struct.std::__1::pair.65"* [ %240, %237 ], [ %231, %233 ]
  %243 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 0, i32 1
  %244 = load i32, i32* %243, align 4
  %245 = icmp eq i32 %244, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #12
  br i1 %245, label %246, label %274

246:                                              ; preds = %241
  %247 = bitcast %"class.sql::Statement"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %247) #12
  %248 = bitcast %"class.sql::Statement"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 -86, i64 16, i1 false)
  %249 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %250 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %249, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 305, i8* getelementptr inbounds ([103 x i8], [103 x i8]* @_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE19kStoreConversionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %22, %"class.sql::Database::StatementRef"* %250) #12
  %251 = load i8, i8* %199, align 8
  %252 = icmp eq i8 %251, 0
  br i1 %252, label %253, label %254, !prof !11

253:                                              ; preds = %246
  call void @llvm.trap() #12
  unreachable

254:                                              ; preds = %246
  %255 = load i64, i64* %201, align 8
  %256 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %22, i32 0, i64 %255) #12
  %257 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #12
  %258 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %18, i64 0, i32 1
  %259 = load i64, i64* %258, align 8
  call void @_ZN7content35SerializeImpressionOrConversionDataEm(%"class.std::__1::basic_string"* nonnull sret %23, i64 %259) #12
  %260 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %22, i32 1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23) #12
  %261 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %262 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %261, i64 0, i32 1, i32 0
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %254
  %266 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #13
  br label %268

268:                                              ; preds = %254, %265
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #12
  %269 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %22, i32 2, i64 %42) #12
  %270 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %18, i64 0, i32 3, i32 0, i32 0
  %271 = load i64, i64* %270, align 8
  %272 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %22, i32 3, i64 %271) #12
  %273 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %22) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %247) #12
  br i1 %273, label %274, label %341

274:                                              ; preds = %268, %241
  %275 = bitcast %"class.sql::Statement"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %275) #12
  %276 = bitcast %"class.sql::Statement"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %276, i8 -86, i64 16, i1 false)
  %277 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %278 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %277, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 326, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE33kUpdateImpressionForConversionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %24, %"class.sql::Database::StatementRef"* %278) #12
  %279 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %173, align 8
  %280 = bitcast %"class.content::ConversionStorage::Delegate"* %279 to i32 (%"class.content::ConversionStorage::Delegate"*, i32)***
  %281 = load i32 (%"class.content::ConversionStorage::Delegate"*, i32)**, i32 (%"class.content::ConversionStorage::Delegate"*, i32)*** %280, align 8
  %282 = getelementptr inbounds i32 (%"class.content::ConversionStorage::Delegate"*, i32)*, i32 (%"class.content::ConversionStorage::Delegate"*, i32)** %281, i64 4
  %283 = load i32 (%"class.content::ConversionStorage::Delegate"*, i32)*, i32 (%"class.content::ConversionStorage::Delegate"*, i32)** %282, align 8
  %284 = call i32 %283(%"class.content::ConversionStorage::Delegate"* %279, i32 0) #12
  %285 = add nsw i32 %284, -1
  %286 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %24, i32 0, i32 %285) #12
  %287 = load i8, i8* %199, align 8
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %290, !prof !11

289:                                              ; preds = %274
  call void @llvm.trap() #12
  unreachable

290:                                              ; preds = %274
  %291 = load i64, i64* %201, align 8
  %292 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %24, i32 1, i64 %291) #12
  %293 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %24) #12
  br i1 %293, label %294, label %339

294:                                              ; preds = %290
  %295 = bitcast %"class.sql::Statement"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #12
  %296 = bitcast %"class.sql::Statement"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %296, i8 -86, i64 16, i1 false)
  %297 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %298 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %297, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 345, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql35MaybeCreateAndStoreConversionReportERKNS_18StorableConversionEE33kDeleteUnattributedImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %25, %"class.sql::Database::StatementRef"* %298) #12
  %299 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %62, align 8
  %300 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %63, align 8
  %301 = icmp eq %"class.content::StorableImpression"* %299, %300
  br i1 %301, label %330, label %302

302:                                              ; preds = %294
  %303 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %179, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %304 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %179, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %305

305:                                              ; preds = %302, %327
  %306 = phi %"class.content::StorableImpression"* [ %299, %302 ], [ %328, %327 ]
  %307 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %306, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %308 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %306, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %309 = load i8, i8* %303, align 8
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %312, !prof !11

311:                                              ; preds = %305
  call void @llvm.trap() #12
  unreachable

312:                                              ; preds = %305
  %313 = load i64, i64* %304, align 8
  %314 = load i8, i8* %307, align 8
  %315 = load i64, i64* %308, align 8
  %316 = icmp ne i8 %314, 0
  %317 = icmp eq i64 %315, %313
  %318 = and i1 %316, %317
  br i1 %318, label %327, label %319

319:                                              ; preds = %312
  call void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"* nonnull %25, i1 zeroext true) #12
  %320 = load i8, i8* %307, align 8
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %322, label %323, !prof !11

322:                                              ; preds = %319
  call void @llvm.trap() #12
  unreachable

323:                                              ; preds = %319
  %324 = load i64, i64* %308, align 8
  %325 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %25, i32 0, i64 %324) #12
  %326 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %25) #12
  br i1 %326, label %327, label %337

327:                                              ; preds = %312, %323
  %328 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %306, i64 1
  %329 = icmp eq %"class.content::StorableImpression"* %328, %300
  br i1 %329, label %330, label %305

330:                                              ; preds = %327, %294
  br i1 %245, label %331, label %334

331:                                              ; preds = %330
  %332 = load %"class.sql::Database"*, %"class.sql::Database"** %44, align 8
  %333 = call zeroext i1 @_ZN7content14RateLimitTable12AddRateLimitEPN3sql8DatabaseERKNS_16ConversionReportE(%"class.content::RateLimitTable"* %189, %"class.sql::Database"* %332, %"struct.content::ConversionReport"* nonnull dereferenceable(344) %18) #12
  br i1 %333, label %334, label %337

334:                                              ; preds = %331, %330
  %335 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %20) #12
  %336 = and i1 %245, %335
  br label %337

337:                                              ; preds = %323, %334, %331
  %338 = phi i1 [ false, %331 ], [ %336, %334 ], [ false, %323 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #12
  br label %339

339:                                              ; preds = %290, %337
  %340 = phi i1 [ %338, %337 ], [ false, %290 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %275) #12
  br label %341

341:                                              ; preds = %339, %268, %192
  %342 = phi i1 [ false, %192 ], [ %340, %339 ], [ false, %268 ]
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %193) #12
  br label %343

343:                                              ; preds = %172, %341
  %344 = phi i1 [ %342, %341 ], [ false, %172 ]
  call void @_ZN7content16ConversionReportD1Ev(%"struct.content::ConversionReport"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %180) #12
  br label %345

345:                                              ; preds = %166, %168, %343
  %346 = phi i1 [ %344, %343 ], [ false, %168 ], [ false, %166 ]
  %347 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %66, align 8
  %348 = icmp eq %"struct.std::__1::pair.65"* %347, null
  br i1 %348, label %353, label %349

349:                                              ; preds = %345
  %350 = ptrtoint %"struct.std::__1::pair.65"* %347 to i64
  %351 = bitcast %"struct.std::__1::pair.65"** %67 to i64*
  store i64 %350, i64* %351, align 8
  %352 = bitcast %"struct.std::__1::pair.65"* %347 to i8*
  call void @_ZdlPv(i8* %352) #13
  br label %353

353:                                              ; preds = %345, %349
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  %354 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %62, align 8
  %355 = icmp eq %"class.content::StorableImpression"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %353
  %357 = bitcast %"class.content::StorableImpression"* %354 to i8*
  %358 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %63, align 8
  %359 = icmp eq %"class.content::StorableImpression"* %358, %354
  br i1 %359, label %367, label %360

360:                                              ; preds = %356, %360
  %361 = phi %"class.content::StorableImpression"* [ %362, %360 ], [ %358, %356 ]
  %362 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %361, i64 -1
  call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* %362) #12
  %363 = icmp eq %"class.content::StorableImpression"* %362, %354
  br i1 %363, label %364, label %360

364:                                              ; preds = %360
  %365 = bitcast %"class.std::__1::vector.54"* %7 to i8**
  %366 = load i8*, i8** %365, align 8
  br label %367

367:                                              ; preds = %364, %356
  %368 = phi i8* [ %366, %364 ], [ %357, %356 ]
  store %"class.content::StorableImpression"* %354, %"class.content::StorableImpression"** %63, align 8
  call void @_ZdlPv(i8* %368) #13
  br label %369

369:                                              ; preds = %353, %367
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #12
  br label %370

370:                                              ; preds = %27, %369
  %371 = phi i1 [ %346, %369 ], [ false, %27 ]
  %372 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %373 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %374 = load i8, i8* %373, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %370
  %377 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %377) #13
  br label %378

378:                                              ; preds = %370, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #12
  br label %379

379:                                              ; preds = %2, %378
  %380 = phi i1 [ %371, %378 ], [ false, %2 ]
  ret i1 %380
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content20ConversionStorageSql31GetCapacityForStoringConversionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.content::ConversionStorageSql"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %5, align 8
  %8 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 756, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @_ZZN7content20ConversionStorageSql31GetCapacityForStoringConversionERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE20kCountConversionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %8) #12
  %9 = call zeroext i1 @_ZN3sql9Statement10BindStringEiRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Statement"* nonnull %3, i32 0, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %10 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %3) #12
  br i1 %10, label %11, label %24

11:                                               ; preds = %2
  %12 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %3, i32 0) #12
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %15 = load %"class.content::ConversionStorage::Delegate"*, %"class.content::ConversionStorage::Delegate"** %14, align 8
  %16 = bitcast %"class.content::ConversionStorage::Delegate"* %15 to i32 (%"class.content::ConversionStorage::Delegate"*)***
  %17 = load i32 (%"class.content::ConversionStorage::Delegate"*)**, i32 (%"class.content::ConversionStorage::Delegate"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.content::ConversionStorage::Delegate"*)*, i32 (%"class.content::ConversionStorage::Delegate"*)** %17, i64 6
  %19 = load i32 (%"class.content::ConversionStorage::Delegate"*)*, i32 (%"class.content::ConversionStorage::Delegate"*)** %18, align 8
  %20 = call i32 %19(%"class.content::ConversionStorage::Delegate"* %15) #12
  %21 = sub nsw i32 %20, %13
  %22 = icmp sgt i32 %21, 0
  %23 = select i1 %22, i32 %21, i32 0
  br label %24

24:                                               ; preds = %2, %11
  %25 = phi i32 [ %23, %11 ], [ 0, %2 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #12
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"*) local_unnamed_addr #2

declare i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"*, i32) local_unnamed_addr #2

declare i64 @_ZN7content37DeserializeImpressionOrConversionDataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* sret, %"class.sql::Statement"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"*, i32) local_unnamed_addr #2

declare i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"*, i32) local_unnamed_addr #2

declare void @_ZN7content18StorableImpressionC1EmRKN3url6OriginES4_S4_N4base4TimeES6_NS0_10SourceTypeElRKN4absl8optionalIlEE(%"class.content::StorableImpression"*, i64, %"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80), i64, i64, i32, i64, %"class.absl::optional.48"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"*) local_unnamed_addr #2

declare void @_ZN7content16ConversionReportC1ERKNS_18StorableImpressionEmN4base4TimeES5_RKN4absl8optionalIlEE(%"struct.content::ConversionReport"*, %"class.content::StorableImpression"* dereferenceable(296), i64, i64, i64, %"class.absl::optional.48"* dereferenceable(16)) unnamed_addr #2

declare zeroext i1 @_ZN7content14RateLimitTable20IsAttributionAllowedEPN3sql8DatabaseERKNS_16ConversionReportEN4base4TimeE(%"class.content::RateLimitTable"*, %"class.sql::Database"*, %"struct.content::ConversionReport"* dereferenceable(344), i64) local_unnamed_addr #2

declare void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN7content14RateLimitTable12AddRateLimitEPN3sql8DatabaseERKNS_16ConversionReportE(%"class.content::RateLimitTable"*, %"class.sql::Database"*, %"struct.content::ConversionReport"* dereferenceable(344)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content16ConversionReportD1Ev(%"struct.content::ConversionReport"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql22GetConversionsToReportEN4base4TimeEi(%"class.std::__1::vector.73"* noalias nocapture sret, %"class.content::ConversionStorageSql"*, i64, i32) unnamed_addr #1 align 2 {
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.std::__1::vector.73", align 16
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.url::Origin", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.url::Origin", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.url::Origin", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.content::StorableImpression", align 8
  %16 = alloca %"class.absl::optional.48", align 8
  %17 = alloca %"struct.content::ConversionReport", align 8
  %18 = alloca %"class.absl::optional.48", align 8
  %19 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %1, i32 1)
  br i1 %19, label %22, label %20

20:                                               ; preds = %4
  %21 = bitcast %"class.std::__1::vector.73"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  br label %150

22:                                               ; preds = %4
  %23 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false)
  %26 = load %"class.sql::Database"*, %"class.sql::Database"** %24, align 8
  %27 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %26, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 392, i8* getelementptr inbounds ([343 x i8], [343 x i8]* @_ZZN7content20ConversionStorageSql22GetConversionsToReportEN4base4TimeEiE25kGetExpiredConversionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %27) #12
  %28 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 0, i64 %2) #12
  %29 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %5, i32 1, i32 %3) #12
  %30 = bitcast %"class.std::__1::vector.73"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %6, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %6, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 24, i1 false) #12
  %34 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %34, label %35, label %122

35:                                               ; preds = %22
  %36 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.url::Origin"* %8 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %42 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.url::Origin"* %10 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.url::Origin"* %12 to i8*
  %51 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.content::StorableImpression"* %15 to i8*
  %63 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = bitcast %"struct.content::ConversionReport"* %17 to i8*
  %66 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = bitcast %"struct.content::ConversionReport"** %32 to i64*
  br label %69

69:                                               ; preds = %35, %120
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %7, %"class.sql::Statement"* nonnull %5, i32 0) #12
  %70 = call i64 @_ZN7content37DeserializeImpressionOrConversionDataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #12
  %71 = load i8, i8* %38, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = load i8*, i8** %39, align 8
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %69, %73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  %76 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 1) #12
  %77 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 2) #12
  %78 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 3) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %40) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %9, %"class.sql::Statement"* nonnull %5, i32 4) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #12
  %79 = load i8, i8* %43, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %75, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %45) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %11, %"class.sql::Statement"* nonnull %5, i32 5) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %10, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #12
  %84 = load i8, i8* %48, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %83
  %87 = load i8*, i8** %49, align 8
  call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %83, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %50) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %13, %"class.sql::Statement"* nonnull %5, i32 6) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #12
  %89 = load i8, i8* %53, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %88
  %92 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %92) #13
  br label %93

93:                                               ; preds = %88, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %14, %"class.sql::Statement"* nonnull %5, i32 7) #12
  %94 = call i64 @_ZN7content37DeserializeImpressionOrConversionDataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #12
  %95 = load i8, i8* %57, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = load i8*, i8** %58, align 8
  call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %93, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #12
  %100 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 8) #12
  %101 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %5, i32 9) #12
  %102 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 10) #12
  %103 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %5, i32 11) #12
  %104 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 12) #12
  %105 = load i8, i8* %59, align 8, !range !2
  %106 = load i8, i8* %60, align 8
  %107 = or i8 %105, %106
  %108 = load i8, i8* %61, align 8
  %109 = or i8 %107, %108
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %120

111:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %62) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 296, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #12
  store i8 1, i8* %63, align 8
  store i64 %102, i64* %64, align 8
  call void @_ZN7content18StorableImpressionC1EmRKN3url6OriginES4_S4_N4base4TimeES6_NS0_10SourceTypeElRKN4absl8optionalIlEE(%"class.content::StorableImpression"* nonnull %15, i64 %94, %"class.url::Origin"* nonnull dereferenceable(80) %8, %"class.url::Origin"* nonnull dereferenceable(80) %10, %"class.url::Origin"* nonnull dereferenceable(80) %12, i64 %100, i64 %101, i32 %103, i64 %104, %"class.absl::optional.48"* nonnull dereferenceable(16) %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #12
  call void @llvm.lifetime.start.p0i8(i64 344, i8* nonnull %65) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 344, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #12
  store i8 1, i8* %66, align 8
  store i64 %78, i64* %67, align 8
  call void @_ZN7content16ConversionReportC1ERKNS_18StorableImpressionEmN4base4TimeES5_RKN4absl8optionalIlEE(%"struct.content::ConversionReport"* nonnull %17, %"class.content::StorableImpression"* nonnull dereferenceable(296) %15, i64 %70, i64 %76, i64 %77, %"class.absl::optional.48"* nonnull dereferenceable(16) %18) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #12
  %112 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %32, align 8
  %113 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %33, align 16
  %114 = icmp ult %"struct.content::ConversionReport"* %112, %113
  br i1 %114, label %115, label %118

115:                                              ; preds = %111
  call void @_ZN7content16ConversionReportC1ERKS0_(%"struct.content::ConversionReport"* %112, %"struct.content::ConversionReport"* nonnull dereferenceable(344) %17) #12
  %116 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %112, i64 1
  %117 = ptrtoint %"struct.content::ConversionReport"* %116 to i64
  store i64 %117, i64* %68, align 8
  br label %119

118:                                              ; preds = %111
  call void @_ZNSt3__16vectorIN7content16ConversionReportENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.73"* nonnull %6, %"struct.content::ConversionReport"* nonnull dereferenceable(344) %17) #12
  br label %119

119:                                              ; preds = %115, %118
  call void @_ZN7content16ConversionReportD1Ev(%"struct.content::ConversionReport"* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 344, i8* nonnull %65) #12
  call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %62) #12
  br label %120

120:                                              ; preds = %99, %119
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %50) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %45) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %40) #12
  %121 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %121, label %69, label %122

122:                                              ; preds = %120, %22
  %123 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %5) #12
  %124 = bitcast %"class.std::__1::vector.73"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 24, i1 false) #12
  br i1 %123, label %125, label %133

125:                                              ; preds = %122
  %126 = bitcast %"class.std::__1::vector.73"* %6 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 16
  %128 = bitcast %"class.std::__1::vector.73"* %0 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 8
  %129 = bitcast %"struct.content::ConversionReport"** %33 to i64*
  %130 = load i64, i64* %129, align 16
  %131 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast %"struct.content::ConversionReport"** %131 to i64*
  store i64 %130, i64* %132, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 0, i64 24, i1 false) #12
  br label %149

133:                                              ; preds = %122
  %134 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %31, align 16
  %135 = icmp eq %"struct.content::ConversionReport"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = bitcast %"struct.content::ConversionReport"* %134 to i8*
  %138 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %32, align 8
  %139 = icmp eq %"struct.content::ConversionReport"* %138, %134
  br i1 %139, label %147, label %140

140:                                              ; preds = %136, %140
  %141 = phi %"struct.content::ConversionReport"* [ %142, %140 ], [ %138, %136 ]
  %142 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %141, i64 -1
  call void @_ZN7content16ConversionReportD1Ev(%"struct.content::ConversionReport"* %142) #12
  %143 = icmp eq %"struct.content::ConversionReport"* %142, %134
  br i1 %143, label %144, label %140

144:                                              ; preds = %140
  %145 = bitcast %"class.std::__1::vector.73"* %6 to i8**
  %146 = load i8*, i8** %145, align 16
  br label %147

147:                                              ; preds = %144, %136
  %148 = phi i8* [ %146, %144 ], [ %137, %136 ]
  store %"struct.content::ConversionReport"* %134, %"struct.content::ConversionReport"** %32, align 8
  call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %125, %133, %147
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  br label %150

150:                                              ; preds = %149, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content20ConversionStorageSql24DeleteExpiredImpressionsEv(%"class.content::ConversionStorageSql"*) unnamed_addr #1 align 2 {
  %2 = alloca %"class.sql::Statement", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %0, i32 1)
  br i1 %4, label %5, label %36

5:                                                ; preds = %1
  %6 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = bitcast %"class.sql::Statement"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %10 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 455, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @_ZZN7content20ConversionStorageSql24DeleteExpiredImpressionsEvE28kDeleteExpiredImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %2, %"class.sql::Database::StatementRef"* %10) #12
  %11 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 7
  %12 = load %"class.base::Clock"*, %"class.base::Clock"** %11, align 8
  %13 = bitcast %"class.base::Clock"* %12 to i64 (%"class.base::Clock"*)***
  %14 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %13, align 8
  %15 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %14, i64 2
  %16 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %15, align 8
  %17 = call i64 %16(%"class.base::Clock"* %12) #12
  %18 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %2, i32 0, i64 %17) #12
  %19 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %2) #12
  br i1 %19, label %20, label %34

20:                                               ; preds = %5
  %21 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %22 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %21) #12
  %23 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #12
  %24 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false)
  %25 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %26 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %25, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 469, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @_ZZN7content20ConversionStorageSql24DeleteExpiredImpressionsEvE29kDeleteInactiveImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %26) #12
  %27 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #12
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %30 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %29) #12
  %31 = add nsw i32 %30, %22
  br label %32

32:                                               ; preds = %20, %28
  %33 = phi i32 [ %31, %28 ], [ %22, %20 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #12
  br label %34

34:                                               ; preds = %5, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %5 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br label %36

36:                                               ; preds = %1, %34
  %37 = phi i32 [ %35, %34 ], [ 0, %1 ]
  ret i32 %37
}

declare i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql16DeleteConversionEl(%"class.content::ConversionStorageSql"*, i64) unnamed_addr #1 align 2 {
  %3 = alloca %"class.sql::Statement", align 8
  %4 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %0, i32 1)
  br i1 %4, label %5, label %19

5:                                                ; preds = %2
  %6 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %8 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %10 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %9, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 485, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql16DeleteConversionElE24kDeleteSentConversionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %10) #12
  %11 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %3, i32 0, i64 %1) #12
  %12 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #12
  br i1 %12, label %13, label %17

13:                                               ; preds = %5
  %14 = load %"class.sql::Database"*, %"class.sql::Database"** %7, align 8
  %15 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %14) #12
  %16 = icmp sgt i32 %15, 0
  br label %17

17:                                               ; preds = %5, %13
  %18 = phi i1 [ %16, %13 ], [ false, %5 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br label %19

19:                                               ; preds = %2, %17
  %20 = phi i1 [ %18, %17 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEE(%"class.content::ConversionStorageSql"*, i64, i64, %"class.base::RepeatingCallback.80"*) unnamed_addr #1 align 2 {
  %5 = alloca %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", align 1
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = alloca %"class.base::TimeDelta", align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %"class.std::__1::vector.82", align 8
  %10 = alloca %"class.std::__1::vector.82", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.url::Origin", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::internal::flat_tree.89", align 8
  %18 = alloca %"class.sql::Transaction", align 8
  %19 = alloca %"class.sql::Statement", align 8
  %20 = alloca %"class.sql::Statement", align 8
  %21 = alloca %"class.sql::Statement", align 8
  %22 = alloca %"class.base::RepeatingCallback.80", align 8
  %23 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %0, i32 1)
  br i1 %23, label %24, label %501

24:                                               ; preds = %4
  %25 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %26 = getelementptr inbounds %"class.base::RepeatingCallback.80", %"class.base::RepeatingCallback.80"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %28 = icmp eq %"class.base::internal::BindStateBase"* %27, null
  br i1 %28, label %29, label %30

29:                                               ; preds = %24
  tail call void @_ZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_(%"class.content::ConversionStorageSql"* %0, i64 %1, i64 %2)
  br label %488

30:                                               ; preds = %24
  %31 = tail call i64 @_ZN4base9TimeTicks3NowEv() #12
  %32 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #12
  %33 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 16, i1 false)
  %35 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %36 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %35, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 524, i8* getelementptr inbounds ([264 x i8], [264 x i8]* @_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE18kScanCandidateData, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %36) #12
  %37 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %8, i32 0, i64 %1) #12
  %38 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %8, i32 1, i64 %2) #12
  %39 = bitcast %"class.std::__1::vector.82"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %9, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %9, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #12
  %43 = bitcast %"class.std::__1::vector.82"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #12
  %44 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %10, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %10, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #12
  %47 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #12
  br i1 %47, label %50, label %48

48:                                               ; preds = %30
  %49 = bitcast i64** %41 to i64*
  br label %221

50:                                               ; preds = %30
  %51 = bitcast %"class.url::Origin"* %11 to i8*
  %52 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %53 = bitcast %"class.url::Origin"* %13 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %55 = bitcast %"class.url::Origin"* %15 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast i64** %41 to i64*
  %67 = bitcast %"class.std::__1::vector.82"* %9 to i64*
  %68 = bitcast i64** %42 to i64*
  %69 = bitcast i64** %45 to i64*
  %70 = bitcast %"class.std::__1::vector.82"* %10 to i64*
  %71 = bitcast i64** %46 to i64*
  br label %72

72:                                               ; preds = %50, %215
  %73 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %8, i32 0) #12
  %74 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %8, i32 1) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %51) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %12, %"class.sql::Statement"* nonnull %8, i32 2) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #12
  %75 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %76 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %75, i64 0, i32 1
  %77 = bitcast void ()** %76 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %78 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %77, align 8
  %79 = call zeroext i1 %78(%"class.base::internal::BindStateBase"* %75, %"class.url::Origin"* nonnull dereferenceable(80) %11) #12
  br i1 %79, label %104, label %80

80:                                               ; preds = %72
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %53) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %14, %"class.sql::Statement"* nonnull %8, i32 3) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %13, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14) #12
  %81 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %82 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %81, i64 0, i32 1
  %83 = bitcast void ()** %82 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %84 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %83, align 8
  %85 = call zeroext i1 %84(%"class.base::internal::BindStateBase"* %81, %"class.url::Origin"* nonnull dereferenceable(80) %13) #12
  br i1 %85, label %97, label %86

86:                                               ; preds = %80
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %55) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %16, %"class.sql::Statement"* nonnull %8, i32 4) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16) #12
  %87 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %26, align 8
  %88 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %87, i64 0, i32 1
  %89 = bitcast void ()** %88 to i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)**
  %90 = load i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)*, i1 (%"class.base::internal::BindStateBase"*, %"class.url::Origin"*)** %89, align 8
  %91 = call zeroext i1 %90(%"class.base::internal::BindStateBase"* %87, %"class.url::Origin"* nonnull dereferenceable(80) %15) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %15) #12
  %92 = load i8, i8* %58, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  %95 = load i8*, i8** %59, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %94, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %55) #12
  br label %97

97:                                               ; preds = %80, %96
  %98 = phi i1 [ %91, %96 ], [ true, %80 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #12
  %99 = load i8, i8* %61, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %97, %101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %53) #12
  br label %104

104:                                              ; preds = %72, %103
  %105 = phi i1 [ %98, %103 ], [ true, %72 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %11) #12
  %106 = load i8, i8* %64, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %109) #13
  br label %110

110:                                              ; preds = %104, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %51) #12
  br i1 %105, label %111, label %215

111:                                              ; preds = %110
  %112 = load i64*, i64** %41, align 8
  %113 = load i64*, i64** %42, align 8
  %114 = icmp eq i64* %112, %113
  %115 = ptrtoint i64* %113 to i64
  br i1 %114, label %119, label %116

116:                                              ; preds = %111
  store i64 %74, i64* %112, align 8
  %117 = getelementptr inbounds i64, i64* %112, i64 1
  %118 = ptrtoint i64* %117 to i64
  store i64 %118, i64* %66, align 8
  br label %162

119:                                              ; preds = %111
  %120 = ptrtoint i64* %112 to i64
  %121 = load i64, i64* %67, align 8
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = add nsw i64 %123, 1
  %125 = icmp ugt i64 %124, 2305843009213693951
  br i1 %125, label %126, label %128

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::vector.82"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %127) #14
  unreachable

128:                                              ; preds = %119
  %129 = sub i64 %115, %121
  %130 = ashr exact i64 %129, 3
  %131 = icmp ult i64 %130, 1152921504606846975
  br i1 %131, label %132, label %140

132:                                              ; preds = %128
  %133 = ashr exact i64 %129, 2
  %134 = icmp ult i64 %133, %124
  %135 = select i1 %134, i64 %124, i64 %133
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %145, label %137

137:                                              ; preds = %132
  %138 = icmp ugt i64 %135, 2305843009213693951
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  call void @abort() #14
  unreachable

140:                                              ; preds = %137, %128
  %141 = phi i64 [ %135, %137 ], [ 2305843009213693951, %128 ]
  %142 = shl i64 %141, 3
  %143 = call i8* @_Znwm(i64 %142) #13
  %144 = bitcast i8* %143 to i64*
  br label %145

145:                                              ; preds = %140, %132
  %146 = phi i64 [ %141, %140 ], [ 0, %132 ]
  %147 = phi i8* [ %143, %140 ], [ null, %132 ]
  %148 = phi i64* [ %144, %140 ], [ null, %132 ]
  %149 = getelementptr inbounds i64, i64* %148, i64 %123
  %150 = getelementptr inbounds i64, i64* %148, i64 %146
  %151 = ptrtoint i64* %150 to i64
  store i64 %74, i64* %149, align 8
  %152 = getelementptr inbounds i64, i64* %149, i64 1
  %153 = ptrtoint i64* %152 to i64
  %154 = ptrtoint i64* %148 to i64
  %155 = icmp sgt i64 %122, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %145
  %157 = inttoptr i64 %121 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %157, i64 %122, i1 false) #12
  br label %158

158:                                              ; preds = %156, %145
  store i64 %154, i64* %67, align 8
  store i64 %153, i64* %66, align 8
  store i64 %151, i64* %68, align 8
  %159 = icmp eq i64 %121, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %158
  %161 = inttoptr i64 %121 to i8*
  call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %116, %158, %160
  %163 = icmp eq i64 %73, 0
  br i1 %163, label %215, label %164

164:                                              ; preds = %162
  %165 = load i64*, i64** %45, align 8
  %166 = load i64*, i64** %46, align 8
  %167 = icmp eq i64* %165, %166
  %168 = ptrtoint i64* %166 to i64
  br i1 %167, label %172, label %169

169:                                              ; preds = %164
  store i64 %73, i64* %165, align 8
  %170 = getelementptr inbounds i64, i64* %165, i64 1
  %171 = ptrtoint i64* %170 to i64
  store i64 %171, i64* %69, align 8
  br label %215

172:                                              ; preds = %164
  %173 = ptrtoint i64* %165 to i64
  %174 = load i64, i64* %70, align 8
  %175 = sub i64 %173, %174
  %176 = ashr exact i64 %175, 3
  %177 = add nsw i64 %176, 1
  %178 = icmp ugt i64 %177, 2305843009213693951
  br i1 %178, label %179, label %181

179:                                              ; preds = %172
  %180 = bitcast %"class.std::__1::vector.82"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %180) #14
  unreachable

181:                                              ; preds = %172
  %182 = sub i64 %168, %174
  %183 = ashr exact i64 %182, 3
  %184 = icmp ult i64 %183, 1152921504606846975
  br i1 %184, label %185, label %193

185:                                              ; preds = %181
  %186 = ashr exact i64 %182, 2
  %187 = icmp ult i64 %186, %177
  %188 = select i1 %187, i64 %177, i64 %186
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %198, label %190

190:                                              ; preds = %185
  %191 = icmp ugt i64 %188, 2305843009213693951
  br i1 %191, label %192, label %193

192:                                              ; preds = %190
  call void @abort() #14
  unreachable

193:                                              ; preds = %190, %181
  %194 = phi i64 [ %188, %190 ], [ 2305843009213693951, %181 ]
  %195 = shl i64 %194, 3
  %196 = call i8* @_Znwm(i64 %195) #13
  %197 = bitcast i8* %196 to i64*
  br label %198

198:                                              ; preds = %193, %185
  %199 = phi i64 [ %194, %193 ], [ 0, %185 ]
  %200 = phi i8* [ %196, %193 ], [ null, %185 ]
  %201 = phi i64* [ %197, %193 ], [ null, %185 ]
  %202 = getelementptr inbounds i64, i64* %201, i64 %176
  %203 = getelementptr inbounds i64, i64* %201, i64 %199
  %204 = ptrtoint i64* %203 to i64
  store i64 %73, i64* %202, align 8
  %205 = getelementptr inbounds i64, i64* %202, i64 1
  %206 = ptrtoint i64* %205 to i64
  %207 = ptrtoint i64* %201 to i64
  %208 = icmp sgt i64 %175, 0
  br i1 %208, label %209, label %211

209:                                              ; preds = %198
  %210 = inttoptr i64 %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %200, i8* align 8 %210, i64 %175, i1 false) #12
  br label %211

211:                                              ; preds = %209, %198
  store i64 %207, i64* %70, align 8
  store i64 %206, i64* %69, align 8
  store i64 %204, i64* %71, align 8
  %212 = icmp eq i64 %174, 0
  br i1 %212, label %215, label %213

213:                                              ; preds = %211
  %214 = inttoptr i64 %174 to i8*
  call void @_ZdlPv(i8* %214) #13
  br label %215

215:                                              ; preds = %213, %211, %169, %162, %110
  %216 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %8) #12
  br i1 %216, label %72, label %217

217:                                              ; preds = %215
  %218 = load i64, i64* %66, align 8
  %219 = load i64, i64* %67, align 8
  %220 = inttoptr i64 %219 to i64*
  br label %221

221:                                              ; preds = %48, %217
  %222 = phi i64* [ %49, %48 ], [ %66, %217 ]
  %223 = phi i64* [ null, %48 ], [ %220, %217 ]
  %224 = phi i64 [ 0, %48 ], [ %219, %217 ]
  %225 = phi i64 [ 0, %48 ], [ %218, %217 ]
  %226 = bitcast %"class.base::internal::flat_tree.89"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #12
  %227 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %17, i64 0, i32 0, i32 0, i32 0
  %228 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %17, i64 0, i32 0, i32 0, i32 1
  %229 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %226, i8 0, i64 24, i1 false) #12
  %230 = sub i64 %225, %224
  %231 = ashr exact i64 %230, 3
  %232 = icmp eq i64 %230, 0
  br i1 %232, label %256, label %233

233:                                              ; preds = %221
  %234 = icmp ugt i64 %231, 2305843009213693951
  br i1 %234, label %235, label %237

235:                                              ; preds = %233
  %236 = bitcast %"class.base::internal::flat_tree.89"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %236) #14
  unreachable

237:                                              ; preds = %233
  %238 = call i8* @_Znwm(i64 %230) #13
  %239 = bitcast i8* %238 to i64*
  %240 = bitcast i64** %228 to i8**
  store i8* %238, i8** %240, align 8
  %241 = bitcast %"class.base::internal::flat_tree.89"* %17 to i8**
  store i8* %238, i8** %241, align 8
  %242 = getelementptr inbounds i64, i64* %239, i64 %231
  store i64* %242, i64** %229, align 8
  %243 = bitcast i64** %228 to i64*
  %244 = ptrtoint i8* %238 to i64
  %245 = ptrtoint i64* %223 to i64
  %246 = sub i64 %225, %245
  %247 = icmp sgt i64 %246, 0
  br i1 %247, label %248, label %253

248:                                              ; preds = %237
  %249 = lshr exact i64 %246, 3
  %250 = bitcast i64* %223 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %238, i8* align 8 %250, i64 %246, i1 false) #12
  %251 = getelementptr inbounds i64, i64* %239, i64 %249
  %252 = ptrtoint i64* %251 to i64
  br label %253

253:                                              ; preds = %248, %237
  %254 = phi i64 [ %252, %248 ], [ %244, %237 ]
  store i64 %254, i64* %243, align 8
  %255 = inttoptr i64 %254 to i64*
  br label %256

256:                                              ; preds = %221, %253
  %257 = phi i64* [ null, %221 ], [ %255, %253 ]
  %258 = phi i64* [ null, %221 ], [ %239, %253 ]
  %259 = ptrtoint i64* %257 to i64
  %260 = getelementptr inbounds %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare", %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %260)
  %261 = ptrtoint i64* %258 to i64
  %262 = sub i64 %259, %261
  %263 = ashr exact i64 %262, 3
  %264 = icmp sgt i64 %262, 1024
  br i1 %264, label %265, label %276

265:                                              ; preds = %256
  %266 = icmp slt i64 %263, 1152921504606846975
  %267 = select i1 %266, i64 %263, i64 1152921504606846975
  br label %268

268:                                              ; preds = %273, %265
  %269 = phi i64 [ %274, %273 ], [ %267, %265 ]
  %270 = shl i64 %269, 3
  %271 = call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %270, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %272 = icmp eq i8* %271, null
  br i1 %272, label %273, label %277

273:                                              ; preds = %268
  %274 = lshr i64 %269, 1
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %276, label %268

276:                                              ; preds = %273, %256
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %258, i64* %257, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %263, i64* null, i64 0) #12
  br label %279

277:                                              ; preds = %268
  %278 = bitcast i8* %271 to i64*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %258, i64* %257, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* nonnull dereferenceable(1) %5, i64 %263, i64* nonnull %278, i64 %269) #12
  call void @_ZdlPv(i8* nonnull %271) #13
  br label %279

279:                                              ; preds = %276, %277
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %260)
  %280 = icmp eq i64* %258, %257
  br i1 %280, label %330, label %281

281:                                              ; preds = %279, %285
  %282 = phi i64* [ %283, %285 ], [ %258, %279 ]
  %283 = getelementptr inbounds i64, i64* %282, i64 1
  %284 = icmp eq i64* %283, %257
  br i1 %284, label %330, label %285

285:                                              ; preds = %281
  %286 = load i64, i64* %282, align 8
  %287 = load i64, i64* %283, align 8
  %288 = icmp slt i64 %286, %287
  br i1 %288, label %281, label %289

289:                                              ; preds = %285
  %290 = icmp eq i64* %282, %257
  br i1 %290, label %330, label %291

291:                                              ; preds = %289
  %292 = getelementptr inbounds i64, i64* %282, i64 2
  %293 = icmp eq i64* %292, %257
  br i1 %293, label %315, label %294

294:                                              ; preds = %291
  %295 = ptrtoint i64* %282 to i64
  br label %296

296:                                              ; preds = %311, %294
  %297 = phi i64 [ %312, %311 ], [ %286, %294 ]
  %298 = phi i64* [ %310, %311 ], [ %282, %294 ]
  %299 = phi i64* [ %308, %311 ], [ %292, %294 ]
  %300 = phi i64 [ %307, %311 ], [ %295, %294 ]
  %301 = load i64, i64* %299, align 8
  %302 = icmp slt i64 %297, %301
  br i1 %302, label %303, label %306

303:                                              ; preds = %296
  %304 = getelementptr inbounds i64, i64* %298, i64 1
  %305 = ptrtoint i64* %304 to i64
  store i64 %301, i64* %304, align 8
  br label %306

306:                                              ; preds = %303, %296
  %307 = phi i64 [ %300, %296 ], [ %305, %303 ]
  %308 = getelementptr inbounds i64, i64* %299, i64 1
  %309 = icmp eq i64* %308, %257
  %310 = inttoptr i64 %307 to i64*
  br i1 %309, label %313, label %311

311:                                              ; preds = %306
  %312 = load i64, i64* %310, align 8
  br label %296

313:                                              ; preds = %306
  %314 = inttoptr i64 %307 to i64*
  br label %315

315:                                              ; preds = %313, %291
  %316 = phi i64* [ %282, %291 ], [ %314, %313 ]
  %317 = getelementptr inbounds i64, i64* %316, i64 1
  %318 = icmp eq i64* %317, %257
  br i1 %318, label %330, label %319

319:                                              ; preds = %315
  %320 = bitcast i64** %228 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = sub i64 %321, %259
  %323 = ashr exact i64 %322, 3
  %324 = icmp eq i64 %322, 0
  br i1 %324, label %328, label %325

325:                                              ; preds = %319
  %326 = bitcast i64* %317 to i8*
  %327 = bitcast i64* %257 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %326, i8* align 8 %327, i64 %322, i1 false) #12
  br label %328

328:                                              ; preds = %325, %319
  %329 = getelementptr inbounds i64, i64* %317, i64 %323
  store i64* %329, i64** %228, align 8
  br label %330

330:                                              ; preds = %281, %279, %289, %315, %328
  %331 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %8) #12
  br i1 %331, label %332, label %455

332:                                              ; preds = %330
  %333 = bitcast %"class.sql::Transaction"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %333) #12
  %334 = bitcast %"class.sql::Transaction"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %334, i8 -86, i64 16, i1 false)
  %335 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %18, %"class.sql::Database"* %335) #12
  %336 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %18) #12
  br i1 %336, label %337, label %454

337:                                              ; preds = %332
  %338 = load i64*, i64** %227, align 8
  %339 = load i64*, i64** %228, align 8
  %340 = icmp eq i64* %338, %339
  br i1 %340, label %354, label %341

341:                                              ; preds = %337
  %342 = bitcast %"class.sql::Statement"* %19 to i8*
  %343 = bitcast %"class.sql::Statement"* %19 to i8*
  br label %346

344:                                              ; preds = %346
  %345 = icmp eq i64* %353, %339
  br i1 %345, label %354, label %346

346:                                              ; preds = %341, %344
  %347 = phi i64* [ %338, %341 ], [ %353, %344 ]
  %348 = load i64, i64* %347, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %342) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %343, i8 -86, i64 16, i1 false)
  %349 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %350 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %349, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 565, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE20kDeleteImpressionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %19, %"class.sql::Database::StatementRef"* %350) #12
  %351 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %19, i32 0, i64 %348) #12
  %352 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %19) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %342) #12
  %353 = getelementptr inbounds i64, i64* %347, i64 1
  br i1 %352, label %344, label %454

354:                                              ; preds = %344, %337
  %355 = load i64*, i64** %44, align 8
  %356 = load i64*, i64** %45, align 8
  %357 = icmp eq i64* %355, %356
  br i1 %357, label %358, label %361

358:                                              ; preds = %354
  %359 = ptrtoint i64* %355 to i64
  %360 = ptrtoint i64* %356 to i64
  br label %379

361:                                              ; preds = %354
  %362 = bitcast %"class.sql::Statement"* %20 to i8*
  %363 = bitcast %"class.sql::Statement"* %20 to i8*
  br label %366

364:                                              ; preds = %366
  %365 = icmp eq i64* %373, %356
  br i1 %365, label %374, label %366

366:                                              ; preds = %361, %364
  %367 = phi i64* [ %355, %361 ], [ %373, %364 ]
  %368 = load i64, i64* %367, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %362) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %363, i8 -86, i64 16, i1 false)
  %369 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %370 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %369, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 575, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE20kDeleteConversionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %20, %"class.sql::Database::StatementRef"* %370) #12
  %371 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %20, i32 0, i64 %368) #12
  %372 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %20) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %362) #12
  %373 = getelementptr inbounds i64, i64* %367, i64 1
  br i1 %372, label %364, label %454

374:                                              ; preds = %364
  %375 = bitcast i64** %45 to i64*
  %376 = load i64, i64* %375, align 8
  %377 = bitcast %"class.std::__1::vector.82"* %10 to i64*
  %378 = load i64, i64* %377, align 8
  br label %379

379:                                              ; preds = %358, %374
  %380 = phi i64 [ %378, %374 ], [ %359, %358 ]
  %381 = phi i64 [ %376, %374 ], [ %360, %358 ]
  %382 = sub i64 %381, %380
  %383 = lshr exact i64 %382, 3
  %384 = trunc i64 %383 to i32
  %385 = load i64*, i64** %227, align 8
  %386 = load i64*, i64** %228, align 8
  %387 = icmp eq i64* %385, %386
  br i1 %387, label %409, label %388

388:                                              ; preds = %379
  %389 = bitcast %"class.sql::Statement"* %21 to i8*
  %390 = bitcast %"class.sql::Statement"* %21 to i8*
  br label %393

391:                                              ; preds = %405
  %392 = icmp eq i64* %408, %386
  br i1 %392, label %409, label %393

393:                                              ; preds = %388, %391
  %394 = phi i32 [ %384, %388 ], [ %406, %391 ]
  %395 = phi i64* [ %385, %388 ], [ %408, %391 ]
  %396 = load i64, i64* %395, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %389) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %390, i8 -86, i64 16, i1 false)
  %397 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %398 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %397, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 594, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEE29kDeleteVestigialConversionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %21, %"class.sql::Database::StatementRef"* %398) #12
  %399 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %21, i32 0, i64 %396) #12
  %400 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %21) #12
  br i1 %400, label %401, label %405

401:                                              ; preds = %393
  %402 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %403 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %402) #12
  %404 = add nsw i32 %403, %394
  br label %405

405:                                              ; preds = %393, %401
  %406 = phi i32 [ %404, %401 ], [ %394, %393 ]
  %407 = phi i1 [ true, %401 ], [ false, %393 ]
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %389) #12
  %408 = getelementptr inbounds i64, i64* %395, i64 1
  br i1 %407, label %391, label %454

409:                                              ; preds = %391, %379
  %410 = phi i32 [ %384, %379 ], [ %406, %391 ]
  %411 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  %412 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %413 = call zeroext i1 @_ZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEE(%"class.content::RateLimitTable"* %411, %"class.sql::Database"* %412, %"class.base::internal::flat_tree.89"* nonnull dereferenceable(24) %17) #12
  br i1 %413, label %414, label %454

414:                                              ; preds = %409
  %415 = load %"class.sql::Database"*, %"class.sql::Database"** %33, align 8
  %416 = getelementptr inbounds %"class.base::RepeatingCallback.80", %"class.base::RepeatingCallback.80"* %22, i64 0, i32 0
  %417 = getelementptr inbounds %"class.base::RepeatingCallback.80", %"class.base::RepeatingCallback.80"* %3, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %416, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %417) #12
  %418 = call zeroext i1 @_ZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEE(%"class.content::RateLimitTable"* %411, %"class.sql::Database"* %415, i64 %1, i64 %2, %"class.base::RepeatingCallback.80"* nonnull %22) #12
  %419 = getelementptr inbounds %"class.base::RepeatingCallback.80", %"class.base::RepeatingCallback.80"* %22, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %419) #12
  br i1 %418, label %420, label %454

420:                                              ; preds = %414
  %421 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %18) #12
  br i1 %421, label %422, label %454

422:                                              ; preds = %420
  %423 = bitcast i64** %228 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.base::internal::flat_tree.89"* %17 to i64*
  %426 = load i64, i64* %425, align 8
  %427 = sub i64 %424, %426
  %428 = lshr exact i64 %427, 3
  %429 = trunc i64 %428 to i32
  %430 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %431 = inttoptr i64 %430 to %"class.base::HistogramBase"*
  %432 = icmp eq i64 %430, 0
  br i1 %432, label %433, label %436

433:                                              ; preds = %422
  %434 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %435 = ptrtoint %"class.base::HistogramBase"* %434 to i64
  store atomic i64 %435, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %436

436:                                              ; preds = %422, %433
  %437 = phi %"class.base::HistogramBase"* [ %431, %422 ], [ %434, %433 ]
  %438 = bitcast %"class.base::HistogramBase"* %437 to void (%"class.base::HistogramBase"*, i32)***
  %439 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %439, i64 6
  %441 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %440, align 8
  call void %441(%"class.base::HistogramBase"* %437, i32 %429) #12
  %442 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %443 = inttoptr i64 %442 to %"class.base::HistogramBase"*
  %444 = icmp eq i64 %442, 0
  br i1 %444, label %445, label %448

445:                                              ; preds = %436
  %446 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %447 = ptrtoint %"class.base::HistogramBase"* %446 to i64
  store atomic i64 %447, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %448

448:                                              ; preds = %436, %445
  %449 = phi %"class.base::HistogramBase"* [ %443, %436 ], [ %446, %445 ]
  %450 = bitcast %"class.base::HistogramBase"* %449 to void (%"class.base::HistogramBase"*, i32)***
  %451 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %450, align 8
  %452 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %451, i64 6
  %453 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %452, align 8
  call void %453(%"class.base::HistogramBase"* %449, i32 %410) #12
  br label %454

454:                                              ; preds = %346, %366, %405, %448, %409, %414, %420, %332
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %333) #12
  br label %455

455:                                              ; preds = %330, %454
  %456 = load i64*, i64** %227, align 8
  %457 = icmp eq i64* %456, null
  br i1 %457, label %462, label %458

458:                                              ; preds = %455
  %459 = ptrtoint i64* %456 to i64
  %460 = bitcast i64** %228 to i64*
  store i64 %459, i64* %460, align 8
  %461 = bitcast i64* %456 to i8*
  call void @_ZdlPv(i8* %461) #13
  br label %462

462:                                              ; preds = %455, %458
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #12
  %463 = load i64*, i64** %44, align 8
  %464 = icmp eq i64* %463, null
  br i1 %464, label %469, label %465

465:                                              ; preds = %462
  %466 = ptrtoint i64* %463 to i64
  %467 = bitcast i64** %45 to i64*
  store i64 %466, i64* %467, align 8
  %468 = bitcast i64* %463 to i8*
  call void @_ZdlPv(i8* %468) #13
  br label %469

469:                                              ; preds = %462, %465
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #12
  %470 = load i64*, i64** %40, align 8
  %471 = icmp eq i64* %470, null
  br i1 %471, label %475, label %472

472:                                              ; preds = %469
  %473 = ptrtoint i64* %470 to i64
  store i64 %473, i64* %222, align 8
  %474 = bitcast i64* %470 to i8*
  call void @_ZdlPv(i8* %474) #13
  br label %475

475:                                              ; preds = %469, %472
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #12
  %476 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %476) #12
  %477 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  %478 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %479 = sub nsw i64 %478, %31
  store i64 %479, i64* %477, align 8
  %480 = load atomic i64, i64* @_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer1D1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %481 = inttoptr i64 %480 to %"class.base::HistogramBase"*
  %482 = icmp eq i64 %480, 0
  br i1 %482, label %483, label %486

483:                                              ; preds = %475
  %484 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.7, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %485 = ptrtoint %"class.base::HistogramBase"* %484 to i64
  store atomic i64 %485, i64* @_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer1D1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %486

486:                                              ; preds = %475, %483
  %487 = phi %"class.base::HistogramBase"* [ %481, %475 ], [ %484, %483 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %487, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %476) #12
  br label %488

488:                                              ; preds = %486, %29
  %489 = bitcast %"class.base::TimeDelta"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %489) #12
  %490 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %7, i64 0, i32 0
  %491 = call i64 @_ZN4base9TimeTicks3NowEv() #12
  %492 = sub nsw i64 %491, %25
  store i64 %492, i64* %490, align 8
  %493 = load atomic i64, i64* @_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %494 = inttoptr i64 %493 to %"class.base::HistogramBase"*
  %495 = icmp eq i64 %493, 0
  br i1 %495, label %496, label %499

496:                                              ; preds = %488
  %497 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #12
  %498 = ptrtoint %"class.base::HistogramBase"* %497 to i64
  store atomic i64 %498, i64* @_ZZZN7content20ConversionStorageSql9ClearDataEN4base4TimeES2_NS1_17RepeatingCallbackIFbRKN3url6OriginEEEEEN21ScopedHistogramTimer0D1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %499

499:                                              ; preds = %488, %496
  %500 = phi %"class.base::HistogramBase"* [ %494, %488 ], [ %497, %496 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %500, %"class.base::TimeDelta"* nonnull dereferenceable(8) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %489) #12
  br label %501

501:                                              ; preds = %4, %499
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_(%"class.content::ConversionStorageSql"*, i64, i64) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.sql::Transaction", align 8
  %5 = alloca %"class.sql::Statement", align 8
  %6 = alloca %"class.base::internal::flat_tree.89", align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.sql::Statement", align 8
  %9 = alloca %"class.sql::Statement", align 8
  switch i64 %1, label %13 [
    i64 0, label %10
    i64 -9223372036854775808, label %10
  ]

10:                                               ; preds = %3, %3
  %11 = icmp eq i64 %2, 9223372036854775807
  br i1 %11, label %12, label %13

12:                                               ; preds = %10
  tail call void @_ZN7content20ConversionStorageSql19ClearAllDataAllTimeEv(%"class.content::ConversionStorageSql"* %0)
  br label %147

13:                                               ; preds = %3, %10
  %14 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = bitcast %"class.sql::Transaction"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %4, %"class.sql::Database"* %17) #12
  %18 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %4) #12
  br i1 %18, label %19, label %146

19:                                               ; preds = %13
  %20 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  %21 = bitcast %"class.sql::Statement"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %23 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 647, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E25kSelectImpressionRangeSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %5, %"class.sql::Database::StatementRef"* %23) #12
  %24 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 0, i64 %1) #12
  %25 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %5, i32 1, i64 %2) #12
  %26 = bitcast %"class.base::internal::flat_tree.89"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %6, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %6, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 24, i1 false) #12
  %29 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %29, label %30, label %67

30:                                               ; preds = %19
  %31 = bitcast i64* %7 to i8*
  %32 = bitcast i64** %28 to i64*
  %33 = getelementptr inbounds %"class.base::internal::flat_tree.89", %"class.base::internal::flat_tree.89"* %6, i64 0, i32 0
  br label %34

34:                                               ; preds = %30, %65
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %35 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %5, i32 0) #12
  store i64 %35, i64* %7, align 8
  %36 = load i64*, i64** %27, align 8
  %37 = load i64, i64* %32, align 8
  %38 = ptrtoint i64* %36 to i64
  %39 = sub i64 %37, %38
  %40 = icmp eq i64 %39, 0
  %41 = inttoptr i64 %37 to i64*
  br i1 %40, label %57, label %42

42:                                               ; preds = %34
  %43 = ashr exact i64 %39, 3
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64* [ %36, %42 ], [ %55, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %54, %44 ]
  %47 = lshr i64 %46, 1
  %48 = getelementptr inbounds i64, i64* %45, i64 %47
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %49, %35
  %51 = getelementptr inbounds i64, i64* %48, i64 1
  %52 = xor i64 %47, -1
  %53 = add i64 %46, %52
  %54 = select i1 %50, i64 %53, i64 %47
  %55 = select i1 %50, i64* %51, i64* %45
  %56 = icmp eq i64 %54, 0
  br i1 %56, label %57, label %44

57:                                               ; preds = %44, %34
  %58 = phi i64* [ %36, %34 ], [ %55, %44 ]
  %59 = icmp eq i64* %58, %41
  br i1 %59, label %63, label %60

60:                                               ; preds = %57
  %61 = load i64, i64* %58, align 8
  %62 = icmp slt i64 %35, %61
  br i1 %62, label %63, label %65

63:                                               ; preds = %60, %57
  %64 = call i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.82"* nonnull %33, i64* %58, i64* nonnull dereferenceable(8) %7) #12
  br label %65

65:                                               ; preds = %60, %63
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  %66 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %66, label %34, label %67

67:                                               ; preds = %65, %19
  %68 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %5) #12
  br i1 %68, label %69, label %138

69:                                               ; preds = %67
  %70 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #12
  %71 = bitcast %"class.sql::Statement"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  %72 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %73 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 662, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E20kDeleteImpressionSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %8, %"class.sql::Database::StatementRef"* %73) #12
  %74 = load i64*, i64** %27, align 8
  %75 = load i64*, i64** %28, align 8
  %76 = icmp eq i64* %74, %75
  br i1 %76, label %85, label %79

77:                                               ; preds = %79
  %78 = icmp eq i64* %84, %75
  br i1 %78, label %85, label %79

79:                                               ; preds = %69, %77
  %80 = phi i64* [ %84, %77 ], [ %74, %69 ]
  %81 = load i64, i64* %80, align 8
  call void @_ZN3sql9Statement5ResetEb(%"class.sql::Statement"* nonnull %8, i1 zeroext true) #12
  %82 = call zeroext i1 @_ZN3sql9Statement9BindInt64Eil(%"class.sql::Statement"* nonnull %8, i32 0, i64 %81) #12
  %83 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %8) #12
  %84 = getelementptr inbounds i64, i64* %80, i64 1
  br i1 %83, label %77, label %137

85:                                               ; preds = %77, %69
  %86 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #12
  %87 = bitcast %"class.sql::Statement"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false)
  %88 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %89 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %88, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 674, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @_ZZN7content20ConversionStorageSql19ClearAllDataInRangeEN4base4TimeES2_E25kDeleteConversionRangeSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %9, %"class.sql::Database::StatementRef"* %89) #12
  %90 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %9, i32 0, i64 %1) #12
  %91 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %9, i32 1, i64 %2) #12
  %92 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %9) #12
  br i1 %92, label %93, label %136

93:                                               ; preds = %85
  %94 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %95 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %94) #12
  %96 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  %97 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %98 = call zeroext i1 @_ZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEE(%"class.content::RateLimitTable"* %96, %"class.sql::Database"* %97, %"class.base::internal::flat_tree.89"* nonnull dereferenceable(24) %6) #12
  br i1 %98, label %99, label %136

99:                                               ; preds = %93
  %100 = load %"class.sql::Database"*, %"class.sql::Database"** %15, align 8
  %101 = call zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataInRangeEPN3sql8DatabaseEN4base4TimeES5_(%"class.content::RateLimitTable"* %96, %"class.sql::Database"* %100, i64 %1, i64 %2) #12
  br i1 %101, label %102, label %136

102:                                              ; preds = %99
  %103 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %4) #12
  br i1 %103, label %104, label %136

104:                                              ; preds = %102
  %105 = bitcast i64** %28 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.base::internal::flat_tree.89"* %6 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = sub i64 %106, %108
  %110 = lshr exact i64 %109, 3
  %111 = trunc i64 %110 to i32
  %112 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %113 = inttoptr i64 %112 to %"class.base::HistogramBase"*
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %117 = ptrtoint %"class.base::HistogramBase"* %116 to i64
  store atomic i64 %117, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %118

118:                                              ; preds = %104, %115
  %119 = phi %"class.base::HistogramBase"* [ %113, %104 ], [ %116, %115 ]
  %120 = bitcast %"class.base::HistogramBase"* %119 to void (%"class.base::HistogramBase"*, i32)***
  %121 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %121, i64 6
  %123 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %122, align 8
  call void %123(%"class.base::HistogramBase"* %119, i32 %111) #12
  %124 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %125 = inttoptr i64 %124 to %"class.base::HistogramBase"*
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %118
  %128 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %129 = ptrtoint %"class.base::HistogramBase"* %128 to i64
  store atomic i64 %129, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %130

130:                                              ; preds = %118, %127
  %131 = phi %"class.base::HistogramBase"* [ %125, %118 ], [ %128, %127 ]
  %132 = bitcast %"class.base::HistogramBase"* %131 to void (%"class.base::HistogramBase"*, i32)***
  %133 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %133, i64 6
  %135 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %134, align 8
  call void %135(%"class.base::HistogramBase"* %131, i32 %95) #12
  br label %136

136:                                              ; preds = %130, %93, %99, %102, %85
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #12
  br label %137

137:                                              ; preds = %79, %136
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #12
  br label %138

138:                                              ; preds = %67, %137
  %139 = load i64*, i64** %27, align 8
  %140 = icmp eq i64* %139, null
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  %142 = ptrtoint i64* %139 to i64
  %143 = bitcast i64** %28 to i64*
  store i64 %142, i64* %143, align 8
  %144 = bitcast i64* %139 to i8*
  call void @_ZdlPv(i8* %144) #13
  br label %145

145:                                              ; preds = %138, %141
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  br label %146

146:                                              ; preds = %13, %145
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  br label %147

147:                                              ; preds = %146, %12
  ret void
}

declare zeroext i1 @_ZN7content14RateLimitTable25ClearDataForImpressionIdsEPN3sql8DatabaseERKN4base8internal9flat_treeIlNS4_8identityENSt3__14lessIvEENS8_6vectorIlNS8_9allocatorIlEEEEEE(%"class.content::RateLimitTable"*, %"class.sql::Database"*, %"class.base::internal::flat_tree.89"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN7content14RateLimitTable26ClearDataForOriginsInRangeEPN3sql8DatabaseEN4base4TimeES5_NS4_17RepeatingCallbackIFbRKN3url6OriginEEEE(%"class.content::RateLimitTable"*, %"class.sql::Database"*, i64, i64, %"class.base::RepeatingCallback.80"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql19ClearAllDataAllTimeEv(%"class.content::ConversionStorageSql"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.sql::Transaction", align 8
  %3 = alloca %"class.sql::Statement", align 8
  %4 = alloca %"class.sql::Statement", align 8
  %5 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = bitcast %"class.sql::Transaction"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  call void @_ZN3sql11TransactionC1EPNS_8DatabaseE(%"class.sql::Transaction"* nonnull %2, %"class.sql::Database"* %8) #12
  %9 = call zeroext i1 @_ZN3sql11Transaction5BeginEv(%"class.sql::Transaction"* nonnull %2) #12
  br i1 %9, label %10, label %58

10:                                               ; preds = %1
  %11 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = bitcast %"class.sql::Statement"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %14 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %13, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 704, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZN7content20ConversionStorageSql19ClearAllDataAllTimeEvE24kDeleteAllConversionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %3, %"class.sql::Database::StatementRef"* %14) #12
  %15 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #12
  %16 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %18 = call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %17, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 706, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZZN7content20ConversionStorageSql19ClearAllDataAllTimeEvE24kDeleteAllImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %18) #12
  %19 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %3) #12
  br i1 %19, label %20, label %57

20:                                               ; preds = %10
  %21 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %22 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %21) #12
  %23 = call zeroext i1 @_ZN3sql9Statement3RunEv(%"class.sql::Statement"* nonnull %4) #12
  br i1 %23, label %24, label %57

24:                                               ; preds = %20
  %25 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %26 = call i32 @_ZNK3sql8Database18GetLastChangeCountEv(%"class.sql::Database"* %25) #12
  %27 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  %28 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %29 = call zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataAllTimeEPN3sql8DatabaseE(%"class.content::RateLimitTable"* %27, %"class.sql::Database"* %28) #12
  br i1 %29, label %30, label %57

30:                                               ; preds = %24
  %31 = call zeroext i1 @_ZN3sql11Transaction6CommitEv(%"class.sql::Transaction"* nonnull %2) #12
  br i1 %31, label %32, label %57

32:                                               ; preds = %30
  %33 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %34 = inttoptr i64 %33 to %"class.base::HistogramBase"*
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %38 = ptrtoint %"class.base::HistogramBase"* %37 to i64
  store atomic i64 %38, i64* @_ZZN7content12_GLOBAL__N_124RecordImpressionsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %39

39:                                               ; preds = %32, %36
  %40 = phi %"class.base::HistogramBase"* [ %34, %32 ], [ %37, %36 ]
  %41 = bitcast %"class.base::HistogramBase"* %40 to void (%"class.base::HistogramBase"*, i32)***
  %42 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %42, i64 6
  %44 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %43, align 8
  call void %44(%"class.base::HistogramBase"* %40, i32 %26) #12
  %45 = load atomic i64, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %46 = inttoptr i64 %45 to %"class.base::HistogramBase"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %39
  %49 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 1000, i32 50, i32 1) #12
  %50 = ptrtoint %"class.base::HistogramBase"* %49 to i64
  store atomic i64 %50, i64* @_ZZN7content12_GLOBAL__N_120RecordReportsDeletedEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %51

51:                                               ; preds = %39, %48
  %52 = phi %"class.base::HistogramBase"* [ %46, %39 ], [ %49, %48 ]
  %53 = bitcast %"class.base::HistogramBase"* %52 to void (%"class.base::HistogramBase"*, i32)***
  %54 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %54, i64 6
  %56 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %55, align 8
  call void %56(%"class.base::HistogramBase"* %52, i32 %22) #12
  br label %57

57:                                               ; preds = %20, %30, %24, %51, %10
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  br label %58

58:                                               ; preds = %1, %57
  call void @_ZN3sql11TransactionD1Ev(%"class.sql::Transaction"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret void
}

declare zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataInRangeEPN3sql8DatabaseEN4base4TimeES5_(%"class.content::RateLimitTable"*, %"class.sql::Database"*, i64, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN7content14RateLimitTable19ClearAllDataAllTimeEPN3sql8DatabaseE(%"class.content::RateLimitTable"*, %"class.sql::Database"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql20GetActiveImpressionsEi(%"class.std::__1::vector.54"* noalias nocapture sret, %"class.content::ConversionStorageSql"*, i32) unnamed_addr #1 align 2 {
  %4 = alloca %"class.sql::Statement", align 8
  %5 = alloca %"class.std::__1::vector.54", align 16
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.url::Origin", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.url::Origin", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.content::StorableImpression", align 8
  %14 = alloca %"class.absl::optional.48", align 8
  %15 = tail call zeroext i1 @_ZN7content20ConversionStorageSql8LazyInitENS0_16DbCreationPolicyE(%"class.content::ConversionStorageSql"* %1, i32 1)
  br i1 %15, label %18, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #12
  br label %126

18:                                               ; preds = %3
  %19 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = bitcast %"class.sql::Statement"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = load %"class.sql::Database"*, %"class.sql::Database"** %20, align 8
  %23 = tail call %"class.sql::Database::StatementRef"* @_ZN3sql8Database18GetCachedStatementENS_11StatementIDEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 781, i8* getelementptr inbounds ([209 x i8], [209 x i8]* @_ZZN7content20ConversionStorageSql20GetActiveImpressionsEiE24kGetActiveImpressionsSql, i64 0, i64 0)) #12
  call void @_ZN3sql9StatementC1E13scoped_refptrINS_8Database12StatementRefEE(%"class.sql::Statement"* nonnull %4, %"class.sql::Database::StatementRef"* %23) #12
  %24 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %1, i64 0, i32 7
  %25 = load %"class.base::Clock"*, %"class.base::Clock"** %24, align 8
  %26 = bitcast %"class.base::Clock"* %25 to i64 (%"class.base::Clock"*)***
  %27 = load i64 (%"class.base::Clock"*)**, i64 (%"class.base::Clock"*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %27, i64 2
  %29 = load i64 (%"class.base::Clock"*)*, i64 (%"class.base::Clock"*)** %28, align 8
  %30 = call i64 %29(%"class.base::Clock"* %25) #12
  %31 = call zeroext i1 @_ZN3sql9Statement8BindTimeEiN4base4TimeE(%"class.sql::Statement"* nonnull %4, i32 0, i64 %30) #12
  %32 = call zeroext i1 @_ZN3sql9Statement7BindIntEii(%"class.sql::Statement"* nonnull %4, i32 1, i32 %2) #12
  %33 = bitcast %"class.std::__1::vector.54"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #12
  %34 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %5, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %5, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #12
  %37 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #12
  br i1 %37, label %38, label %98

38:                                               ; preds = %18
  %39 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %40 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.url::Origin"* %7 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.url::Origin"* %9 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.url::Origin"* %11 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %55 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.content::StorableImpression"* %13 to i8*
  %59 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.absl::optional.48", %"class.absl::optional.48"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = bitcast %"class.content::StorableImpression"** %35 to i64*
  br label %62

62:                                               ; preds = %38, %96
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %6, %"class.sql::Statement"* nonnull %4, i32 0) #12
  %63 = call i64 @_ZN7content37DeserializeImpressionOrConversionDataERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %64 = load i8, i8* %41, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %62
  %67 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %8, %"class.sql::Statement"* nonnull %4, i32 1) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #12
  %69 = load i8, i8* %46, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %68
  %72 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %72) #13
  br label %73

73:                                               ; preds = %68, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %10, %"class.sql::Statement"* nonnull %4, i32 2) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %9, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %10) #12
  %74 = load i8, i8* %51, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %73
  %77 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 80, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  call void @_ZNK3sql9Statement12ColumnStringEi(%"class.std::__1::basic_string"* nonnull sret %12, %"class.sql::Statement"* nonnull %4, i32 3) #12
  call void @_ZN7content17DeserializeOriginERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.url::Origin"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12) #12
  %79 = load i8, i8* %56, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %78
  %82 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %82) #13
  br label %83

83:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %84 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %4, i32 4) #12
  %85 = call i64 @_ZNK3sql9Statement10ColumnTimeEi(%"class.sql::Statement"* nonnull %4, i32 5) #12
  %86 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 6) #12
  %87 = call i32 @_ZNK3sql9Statement9ColumnIntEi(%"class.sql::Statement"* nonnull %4, i32 7) #12
  %88 = call i64 @_ZNK3sql9Statement11ColumnInt64Ei(%"class.sql::Statement"* nonnull %4, i32 8) #12
  call void @llvm.lifetime.start.p0i8(i64 296, i8* nonnull %58) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 296, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #12
  store i8 1, i8* %59, align 8
  store i64 %86, i64* %60, align 8
  call void @_ZN7content18StorableImpressionC1EmRKN3url6OriginES4_S4_N4base4TimeES6_NS0_10SourceTypeElRKN4absl8optionalIlEE(%"class.content::StorableImpression"* nonnull %13, i64 %63, %"class.url::Origin"* nonnull dereferenceable(80) %7, %"class.url::Origin"* nonnull dereferenceable(80) %9, %"class.url::Origin"* nonnull dereferenceable(80) %11, i64 %84, i64 %85, i32 %87, i64 %88, %"class.absl::optional.48"* nonnull dereferenceable(16) %14) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #12
  %89 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %35, align 8
  %90 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %36, align 16
  %91 = icmp ult %"class.content::StorableImpression"* %89, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %83
  call void @_ZN7content18StorableImpressionC1ERKS0_(%"class.content::StorableImpression"* %89, %"class.content::StorableImpression"* nonnull dereferenceable(296) %13) #12
  %93 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %89, i64 1
  %94 = ptrtoint %"class.content::StorableImpression"* %93 to i64
  store i64 %94, i64* %61, align 8
  br label %96

95:                                               ; preds = %83
  call void @_ZNSt3__16vectorIN7content18StorableImpressionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"* nonnull %5, %"class.content::StorableImpression"* nonnull dereferenceable(296) %13) #12
  br label %96

96:                                               ; preds = %92, %95
  call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 296, i8* nonnull %58) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %53) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %48) #12
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %43) #12
  %97 = call zeroext i1 @_ZN3sql9Statement4StepEv(%"class.sql::Statement"* nonnull %4) #12
  br i1 %97, label %62, label %98

98:                                               ; preds = %96, %18
  %99 = call zeroext i1 @_ZNK3sql9Statement9SucceededEv(%"class.sql::Statement"* nonnull %4) #12
  %100 = bitcast %"class.std::__1::vector.54"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 24, i1 false) #12
  br i1 %99, label %101, label %109

101:                                              ; preds = %98
  %102 = bitcast %"class.std::__1::vector.54"* %5 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 16
  %104 = bitcast %"class.std::__1::vector.54"* %0 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %104, align 8
  %105 = bitcast %"class.content::StorableImpression"** %36 to i64*
  %106 = load i64, i64* %105, align 16
  %107 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast %"class.content::StorableImpression"** %107 to i64*
  store i64 %106, i64* %108, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 0, i64 24, i1 false) #12
  br label %125

109:                                              ; preds = %98
  %110 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %34, align 16
  %111 = icmp eq %"class.content::StorableImpression"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.content::StorableImpression"* %110 to i8*
  %114 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %35, align 8
  %115 = icmp eq %"class.content::StorableImpression"* %114, %110
  br i1 %115, label %123, label %116

116:                                              ; preds = %112, %116
  %117 = phi %"class.content::StorableImpression"* [ %118, %116 ], [ %114, %112 ]
  %118 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %117, i64 -1
  call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* %118) #12
  %119 = icmp eq %"class.content::StorableImpression"* %118, %110
  br i1 %119, label %120, label %116

120:                                              ; preds = %116
  %121 = bitcast %"class.std::__1::vector.54"* %5 to i8**
  %122 = load i8*, i8** %121, align 16
  br label %123

123:                                              ; preds = %120, %112
  %124 = phi i8* [ %122, %120 ], [ %113, %112 ]
  store %"class.content::StorableImpression"* %110, %"class.content::StorableImpression"** %35, align 8
  call void @_ZdlPv(i8* %124) #13
  br label %125

125:                                              ; preds = %101, %109, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #12
  call void @_ZN3sql9StatementD1Ev(%"class.sql::Statement"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  br label %126

126:                                              ; preds = %125, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql27HandleInitializationFailureENS0_10InitStatusE(%"class.content::ConversionStorageSql"* nocapture, i32) local_unnamed_addr #1 align 2 {
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i32 %1, i32 4) #12
  %3 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  store %"class.sql::Database"* null, %"class.sql::Database"** %3, align 8
  %5 = icmp eq %"class.sql::Database"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"* nonnull %4) #12
  %7 = bitcast %"class.sql::Database"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #13
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast i8* %9 to i64*
  store i64 8589934593, i64* %10, align 8
  ret void
}

declare zeroext i1 @_ZN4base10PathExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN3sql8Database17set_histogram_tagERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.sql::Database"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content20ConversionStorageSql21DatabaseErrorCallbackEiPN3sql9StatementE(%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"* nocapture readnone) #1 align 2 {
  %4 = tail call zeroext i1 @_ZN3sql8Recovery13ShouldRecoverEi(i32 %1) #12
  br i1 %4, label %5, label %26

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2
  %7 = bitcast %"class.base::FilePath"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %9 to i64
  %14 = select i1 %10, i64 %12, i64 %13
  %15 = icmp eq i64 %14, 7
  br i1 %15, label %16, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %6, i64 0, i32 0
  %18 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %17, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN7content12_GLOBAL__N_113kInMemoryPathE, i64 0, i64 0), i64 7) #12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %16, %5
  %21 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load %"class.sql::Database"*, %"class.sql::Database"** %21, align 8
  %23 = getelementptr inbounds %"class.sql::Database", %"class.sql::Database"* %22, i64 0, i32 12, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %23) #12
  %24 = load %"class.sql::Database"*, %"class.sql::Database"** %21, align 8
  tail call void @_ZN3sql8Recovery30RecoverDatabaseWithMetaVersionEPNS_8DatabaseERKN4base8FilePathE(%"class.sql::Database"* %24, %"class.base::FilePath"* dereferenceable(24) %6) #12
  %25 = tail call zeroext i1 @_ZN3sql8Database21IsExpectedSqliteErrorEi(i32 %1) #12
  br label %30

26:                                               ; preds = %16, %3
  %27 = tail call zeroext i1 @_ZN3sql8Database21IsExpectedSqliteErrorEi(i32 %1) #12
  %28 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %29 = bitcast i8* %28 to i64*
  store i64 8589934593, i64* %29, align 8
  br label %30

30:                                               ; preds = %26, %20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

declare zeroext i1 @_ZN3sql8Database12OpenInMemoryEv(%"class.sql::Database"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath7DirNameEv(%"class.base::FilePath"* sret, %"class.base::FilePath"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15DirectoryExistsERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base15CreateDirectoryERKNS_8FilePathE(%"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql8Database4OpenERKN4base8FilePathE(%"class.sql::Database"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql16InitializeSchemaEb(%"class.content::ConversionStorageSql"*, i1 zeroext) local_unnamed_addr #1 align 2 {
  br i1 %1, label %3, label %5

3:                                                ; preds = %2
  %4 = tail call zeroext i1 @_ZN7content20ConversionStorageSql12CreateSchemaEv(%"class.content::ConversionStorageSql"* %0)
  br label %33

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %8 = tail call zeroext i1 @_ZN3sql9MetaTable14DoesTableExistEPNS_8DatabaseE(%"class.sql::Database"* %7) #12
  %9 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 6
  %10 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  br i1 %8, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"* %9, %"class.sql::Database"* %10, i32 1, i32 6) #12
  br i1 %12, label %24, label %33

13:                                               ; preds = %5
  %14 = tail call zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"* %9, %"class.sql::Database"* %10, i32 6, i32 6) #12
  br i1 %14, label %15, label %33

15:                                               ; preds = %13
  %16 = tail call i32 @_ZN3sql9MetaTable16GetVersionNumberEv(%"class.sql::MetaTable"* %9) #12
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %33, label %18

18:                                               ; preds = %15
  %19 = icmp slt i32 %16, 1
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  %22 = tail call zeroext i1 @_ZN3sql8Database4RazeEv(%"class.sql::Database"* %21) #12
  %23 = tail call zeroext i1 @_ZN7content20ConversionStorageSql12CreateSchemaEv(%"class.content::ConversionStorageSql"* %0)
  br label %33

24:                                               ; preds = %11, %18
  %25 = tail call i32 @_ZN3sql9MetaTable26GetCompatibleVersionNumberEv(%"class.sql::MetaTable"* %9) #12
  %26 = icmp sgt i32 %25, 6
  %27 = load %"class.sql::Database"*, %"class.sql::Database"** %6, align 8
  br i1 %26, label %28, label %31

28:                                               ; preds = %24
  %29 = tail call zeroext i1 @_ZN3sql8Database4RazeEv(%"class.sql::Database"* %27) #12
  %30 = tail call zeroext i1 @_ZN7content20ConversionStorageSql12CreateSchemaEv(%"class.content::ConversionStorageSql"* %0)
  br label %33

31:                                               ; preds = %24
  %32 = tail call zeroext i1 @_ZN7content30ConversionStorageSqlMigrations13UpgradeSchemaEPNS_20ConversionStorageSqlEPN3sql8DatabaseEPNS3_9MetaTableE(%"class.content::ConversionStorageSql"* %0, %"class.sql::Database"* %27, %"class.sql::MetaTable"* %9) #12
  br label %33

33:                                               ; preds = %20, %28, %31, %11, %13, %15, %3
  %34 = phi i1 [ %4, %3 ], [ %23, %20 ], [ %30, %28 ], [ %32, %31 ], [ false, %11 ], [ false, %13 ], [ true, %15 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7content20ConversionStorageSql12CreateSchemaEv(%"class.content::ConversionStorageSql"*) local_unnamed_addr #1 align 2 {
  %2 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %3 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %4, i8* getelementptr inbounds ([451 x i8], [451 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE19kImpressionTableSql, i64 0, i64 0)) #12
  br i1 %5, label %6, label %35

6:                                                ; preds = %1
  %7 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %8 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %7, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE30kConversionDestinationIndexSql, i64 0, i64 0)) #12
  br i1 %8, label %9, label %35

9:                                                ; preds = %6
  %10 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %11 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %10, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE25kImpressionExpiryIndexSql, i64 0, i64 0)) #12
  br i1 %11, label %12, label %35

12:                                               ; preds = %9
  %13 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %14 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %13, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE25kImpressionOriginIndexSql, i64 0, i64 0)) #12
  br i1 %14, label %15, label %35

15:                                               ; preds = %12
  %16 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %17 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %16, i8* getelementptr inbounds ([193 x i8], [193 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE19kConversionTableSql, i64 0, i64 0)) #12
  br i1 %17, label %18, label %35

18:                                               ; preds = %15
  %19 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %20 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %19, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE29kConversionReportTimeIndexSql, i64 0, i64 0)) #12
  br i1 %20, label %21, label %35

21:                                               ; preds = %18
  %22 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %23 = tail call zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"* %22, i8* getelementptr inbounds ([86 x i8], [86 x i8]* @_ZZN7content20ConversionStorageSql12CreateSchemaEvE26kConversionClickIdIndexSql, i64 0, i64 0)) #12
  br i1 %23, label %24, label %35

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 5
  %26 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %27 = tail call zeroext i1 @_ZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseE(%"class.content::RateLimitTable"* %25, %"class.sql::Database"* %26) #12
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.content::ConversionStorageSql", %"class.content::ConversionStorageSql"* %0, i64 0, i32 6
  %30 = load %"class.sql::Database"*, %"class.sql::Database"** %3, align 8
  %31 = tail call zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"* %29, %"class.sql::Database"* %30, i32 6, i32 6) #12
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = tail call i64 @_ZN4base11ThreadTicks3NowEv() #12
  %34 = sub nsw i64 %33, %2
  tail call void @_ZN4base23UmaHistogramMediumTimesEPKcNS_9TimeDeltaE(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i64 %34) #12
  br label %35

35:                                               ; preds = %28, %24, %21, %18, %15, %12, %9, %6, %1, %32
  %36 = phi i1 [ true, %32 ], [ false, %1 ], [ false, %6 ], [ false, %9 ], [ false, %12 ], [ false, %15 ], [ false, %18 ], [ false, %21 ], [ false, %24 ], [ false, %28 ]
  ret i1 %36
}

declare zeroext i1 @_ZN3sql9MetaTable14DoesTableExistEPNS_8DatabaseE(%"class.sql::Database"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql9MetaTable4InitEPNS_8DatabaseEii(%"class.sql::MetaTable"*, %"class.sql::Database"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN3sql9MetaTable16GetVersionNumberEv(%"class.sql::MetaTable"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql8Database4RazeEv(%"class.sql::Database"*) local_unnamed_addr #2

declare i32 @_ZN3sql9MetaTable26GetCompatibleVersionNumberEv(%"class.sql::MetaTable"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7content30ConversionStorageSqlMigrations13UpgradeSchemaEPNS_20ConversionStorageSqlEPN3sql8DatabaseEPNS3_9MetaTableE(%"class.content::ConversionStorageSql"*, %"class.sql::Database"*, %"class.sql::MetaTable"*) local_unnamed_addr #2

declare i64 @_ZN4base11ThreadTicks3NowEv() local_unnamed_addr #2

declare zeroext i1 @_ZN3sql8Database7ExecuteEPKc(%"class.sql::Database"*, i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN7content14RateLimitTable11CreateTableEPN3sql8DatabaseE(%"class.content::RateLimitTable"*, %"class.sql::Database"*) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramMediumTimesEPKcNS_9TimeDeltaE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql8Recovery13ShouldRecoverEi(i32) local_unnamed_addr #2

declare void @_ZN3sql8Recovery30RecoverDatabaseWithMetaVersionEPNS_8DatabaseERKN4base8FilePathE(%"class.sql::Database"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN3sql8Database21IsExpectedSqliteErrorEi(i32) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #2

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #2

declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content18StorableImpressionENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.54"*, %"class.content::StorableImpression"* dereferenceable(296)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.content::StorableImpression"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.54"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 296
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 62320081330099836
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.54"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.content::StorableImpression"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 296
  %20 = icmp ult i64 %19, 31160040665049918
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 62320081330099836, %14 ]
  %28 = mul i64 %27, 296
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.content::StorableImpression"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.content::StorableImpression"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %33, i64 %9
  %35 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %33, i64 %32
  %36 = ptrtoint %"class.content::StorableImpression"* %35 to i64
  tail call void @_ZN7content18StorableImpressionC1ERKS0_(%"class.content::StorableImpression"* %34, %"class.content::StorableImpression"* dereferenceable(296) %1) #12
  %37 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %34, i64 1
  %38 = ptrtoint %"class.content::StorableImpression"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %39, align 8
  %41 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %3, align 8
  %42 = icmp eq %"class.content::StorableImpression"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.content::StorableImpression"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.content::StorableImpression"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.content::StorableImpression"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %46, i64 -1
  %49 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %47, i64 -1
  tail call void @_ZN7content18StorableImpressionC1ERKS0_(%"class.content::StorableImpression"* %48, %"class.content::StorableImpression"* dereferenceable(296) %49) #12
  %50 = icmp eq %"class.content::StorableImpression"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.content::StorableImpression"*, %"class.content::StorableImpression"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.content::StorableImpression"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.content::StorableImpression"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.content::StorableImpression"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.content::StorableImpression"*
  %60 = icmp eq %"class.content::StorableImpression"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.content::StorableImpression"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.content::StorableImpression", %"class.content::StorableImpression"* %62, i64 -1
  tail call void @_ZN7content18StorableImpressionD1Ev(%"class.content::StorableImpression"* %63) #12
  %64 = icmp eq %"class.content::StorableImpression"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN7content18StorableImpressionC1ERKS0_(%"class.content::StorableImpression"*, %"class.content::StorableImpression"* dereferenceable(296)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.65"* @_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJRlRS4_EEENS_11__wrap_iterIPS5_EENSC_IPKS5_EEDpOT_(%"class.std::__1::vector.63"*, %"struct.std::__1::pair.65"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.65"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.113", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.65"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.65"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.65"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.65"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 0
  %19 = load i64, i64* %2, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 1
  %21 = load i32, i32* %3, align 4
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair.65"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i64, i64* %2, align 8
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair.65"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair.65"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %9, i64 %36, i32 0
  %38 = bitcast i64* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair.65"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair.65"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair.65"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair.65"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  %52 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !12

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair.65"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair.65"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair.65"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair.65"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair.65"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair.65"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair.65"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %77, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %78, i64 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %75, i64 -1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %74, i64 -1, i32 1
  store i32 %83, i32* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !14

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair.65"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair.65"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair.65"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair.65"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -1, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -1, i32 0
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -1, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -1, i32 1
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -2, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -2, i32 0
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -2, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -2, i32 1
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -3, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -3, i32 0
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -3, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -3, i32 1
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %112, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %113, i64 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -4, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -4, i32 1
  store i32 %118, i32* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair.65"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair.65"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair.65"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair.65"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair.65"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair.65"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair.65"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #12
  %130 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair.65"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair.65"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #12
  %134 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair.65"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair.65"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #12
  %138 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair.65"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 0
  store i64 %26, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 1
  store i32 %27, i32* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #14
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair.65"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair.65"* null, %"struct.std::__1::pair.65"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.69"** %151 to %"class.std::__1::__compressed_pair.66"**
  store %"class.std::__1::__compressed_pair.66"* %145, %"class.std::__1::__compressed_pair.66"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair.65"* null, %"struct.std::__1::pair.65"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.69"** %151 to %"class.std::__1::__compressed_pair.66"**
  store %"class.std::__1::__compressed_pair.66"* %145, %"class.std::__1::__compressed_pair.66"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #14
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #13
  %187 = bitcast i8* %186 to %"struct.std::__1::pair.65"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair.65"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair.65"* %191, %"struct.std::__1::pair.65"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %191, i64 %189
  store %"struct.std::__1::pair.65"* %192, %"struct.std::__1::pair.65"** %149, align 8
  store %"struct.std::__1::pair.65"* %192, %"struct.std::__1::pair.65"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %191, i64 %190
  store %"struct.std::__1::pair.65"* %193, %"struct.std::__1::pair.65"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJRlRS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.113"* nonnull %6, i64* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  %194 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %148, align 8
  %195 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair.65"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %194, i64 %199
  store %"struct.std::__1::pair.65"* %200, %"struct.std::__1::pair.65"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair.65"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair.65"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #12
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair.65"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair.65"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair.65"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair.65"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %206, i64 -1, i32 0
  %216 = ptrtoint i64* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair.65"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair.65"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #12
  %227 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %224, i64 1
  %228 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %228, i64 1
  store %"struct.std::__1::pair.65"* %229, %"struct.std::__1::pair.65"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair.65"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !15

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair.65"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair.65"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair.65"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair.65"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair.65"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #12
  %244 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 1
  %245 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %245, i64 1
  store %"struct.std::__1::pair.65"* %246, %"struct.std::__1::pair.65"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair.65"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair.65"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #12
  %249 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 2
  %250 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %250, i64 1
  store %"struct.std::__1::pair.65"* %251, %"struct.std::__1::pair.65"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair.65"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair.65"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #12
  %254 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 3
  %255 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %255, i64 1
  store %"struct.std::__1::pair.65"* %256, %"struct.std::__1::pair.65"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair.65"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair.65"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #12
  %259 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 4
  %260 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %260, i64 1
  store %"struct.std::__1::pair.65"* %261, %"struct.std::__1::pair.65"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair.65"* %259, %206
  %263 = bitcast %"struct.std::__1::pair.65"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair.65"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair.65"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair.65"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair.65"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair.65"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair.65"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair.65"*
  %282 = icmp eq %"struct.std::__1::pair.65"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %281, i64 -1, i32 0
  %285 = ptrtoint i64* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %281, i64 %288
  store %"struct.std::__1::pair.65"* %289, %"struct.std::__1::pair.65"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #13
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #12
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair.65"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair.65"* %296
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJRlRS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.113"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.65"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.65"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.65"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.65"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.65"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.65"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.65"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %5, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.65"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.65"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !16

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.65"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.65"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.65"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.65"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.65"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.65"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.65"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.65"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.65"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.65"* %88, %"struct.std::__1::pair.65"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %87, i64 %23
  store %"struct.std::__1::pair.65"* %89, %"struct.std::__1::pair.65"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair.65"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.113"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #14
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #13
  %103 = bitcast i8* %102 to %"struct.std::__1::pair.65"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair.65"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair.65"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair.65"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair.65"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair.65"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair.65"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #12
  %127 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair.65"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !17

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair.65"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair.65"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair.65"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair.65"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair.65"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair.65"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #12
  %145 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair.65"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair.65"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #12
  %149 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair.65"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair.65"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #12
  %153 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair.65"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair.65"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #12
  %157 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair.65"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair.65"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair.65"* %112 to i64
  %163 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair.65"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair.65"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair.65"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair.65"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.65"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair.65"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #13
  %173 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair.65"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %175, i64 0, i32 0
  %177 = load i64, i64* %1, align 8
  store i64 %177, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %175, i64 0, i32 1
  %179 = load i32, i32* %2, align 4
  store i32 %179, i32* %178, align 8
  %180 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %180, i64 1
  store %"struct.std::__1::pair.65"* %181, %"struct.std::__1::pair.65"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair.65"* @_ZNSt3__16vectorINS_4pairIlN7content18StorableImpression16AttributionLogicEEENS_9allocatorIS5_EEE7emplaceIJlS4_EEENS_11__wrap_iterIPS5_EENSA_IPKS5_EEDpOT_(%"class.std::__1::vector.63"*, %"struct.std::__1::pair.65"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair.65"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.113", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %10, align 8
  %12 = icmp ult %"struct.std::__1::pair.65"* %9, %11
  %13 = ptrtoint %"struct.std::__1::pair.65"* %9 to i64
  %14 = ptrtoint %"struct.std::__1::pair.65"* %11 to i64
  br i1 %12, label %15, label %144

15:                                               ; preds = %4
  %16 = icmp eq %"struct.std::__1::pair.65"* %9, %1
  br i1 %16, label %17, label %25

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 0
  %19 = load i64, i64* %2, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 1
  %21 = load i32, i32* %3, align 4
  store i32 %21, i32* %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 1
  %23 = ptrtoint %"struct.std::__1::pair.65"* %22 to i64
  %24 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  store i64 %23, i64* %24, align 8
  br label %295

25:                                               ; preds = %15
  %26 = load i64, i64* %2, align 8
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 1
  %29 = ptrtoint %"struct.std::__1::pair.65"* %28 to i64
  %30 = sub i64 %13, %29
  %31 = ashr exact i64 %30, 4
  %32 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 %31
  %33 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  %34 = icmp ult %"struct.std::__1::pair.65"* %32, %9
  br i1 %34, label %35, label %64

35:                                               ; preds = %25
  %36 = sub nsw i64 0, %31
  %37 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %9, i64 %36, i32 0
  %38 = bitcast i64* %37 to i8*
  %39 = xor i64 %5, -1
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 4
  %43 = add nuw nsw i64 %42, 1
  %44 = and i64 %43, 3
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.std::__1::pair.65"* [ %53, %46 ], [ %9, %35 ]
  %48 = phi %"struct.std::__1::pair.65"* [ %52, %46 ], [ %32, %35 ]
  %49 = phi i64 [ %54, %46 ], [ %44, %35 ]
  %50 = bitcast %"struct.std::__1::pair.65"* %47 to i8*
  %51 = bitcast %"struct.std::__1::pair.65"* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false) #12
  %52 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %48, i64 1
  %53 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %47, i64 1
  %54 = add i64 %49, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %46, !llvm.loop !18

56:                                               ; preds = %46, %35
  %57 = phi %"struct.std::__1::pair.65"* [ %9, %35 ], [ %53, %46 ]
  %58 = phi %"struct.std::__1::pair.65"* [ %32, %35 ], [ %52, %46 ]
  %59 = phi %"struct.std::__1::pair.65"* [ undef, %35 ], [ %53, %46 ]
  %60 = icmp ult i8* %40, inttoptr (i64 48 to i8*)
  br i1 %60, label %61, label %121

61:                                               ; preds = %121, %56
  %62 = phi %"struct.std::__1::pair.65"* [ %59, %56 ], [ %139, %121 ]
  %63 = ptrtoint %"struct.std::__1::pair.65"* %62 to i64
  br label %64

64:                                               ; preds = %61, %25
  %65 = phi i64 [ %63, %61 ], [ %13, %25 ]
  store i64 %65, i64* %33, align 8
  %66 = icmp eq i64 %30, 0
  br i1 %66, label %141, label %67

67:                                               ; preds = %64
  %68 = add i64 %30, -16
  %69 = lshr i64 %68, 4
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %67, %73
  %74 = phi %"struct.std::__1::pair.65"* [ %78, %73 ], [ %9, %67 ]
  %75 = phi %"struct.std::__1::pair.65"* [ %77, %73 ], [ %32, %67 ]
  %76 = phi i64 [ %85, %73 ], [ %71, %67 ]
  %77 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %75, i64 -1
  %78 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %74, i64 -1
  %79 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %77, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %78, i64 0, i32 0
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %75, i64 -1, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %74, i64 -1, i32 1
  store i32 %83, i32* %84, align 8
  %85 = add i64 %76, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73, !llvm.loop !19

87:                                               ; preds = %73, %67
  %88 = phi %"struct.std::__1::pair.65"* [ %9, %67 ], [ %78, %73 ]
  %89 = phi %"struct.std::__1::pair.65"* [ %32, %67 ], [ %77, %73 ]
  %90 = icmp ult i64 %68, 48
  br i1 %90, label %141, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::pair.65"* [ %113, %91 ], [ %88, %87 ]
  %93 = phi %"struct.std::__1::pair.65"* [ %112, %91 ], [ %89, %87 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -1, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -1, i32 0
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -1, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -1, i32 1
  store i32 %98, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -2, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -2, i32 0
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -2, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -2, i32 1
  store i32 %104, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -3, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -3, i32 0
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -3, i32 1
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -3, i32 1
  store i32 %110, i32* %111, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -4
  %113 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -4
  %114 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %112, i64 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %113, i64 0, i32 0
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %93, i64 -4, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %92, i64 -4, i32 1
  store i32 %118, i32* %119, align 8
  %120 = icmp eq %"struct.std::__1::pair.65"* %112, %1
  br i1 %120, label %141, label %91

121:                                              ; preds = %56, %121
  %122 = phi %"struct.std::__1::pair.65"* [ %139, %121 ], [ %57, %56 ]
  %123 = phi %"struct.std::__1::pair.65"* [ %138, %121 ], [ %58, %56 ]
  %124 = bitcast %"struct.std::__1::pair.65"* %122 to i8*
  %125 = bitcast %"struct.std::__1::pair.65"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #12
  %126 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 1
  %127 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 1
  %128 = bitcast %"struct.std::__1::pair.65"* %127 to i8*
  %129 = bitcast %"struct.std::__1::pair.65"* %126 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #12
  %130 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 2
  %131 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 2
  %132 = bitcast %"struct.std::__1::pair.65"* %131 to i8*
  %133 = bitcast %"struct.std::__1::pair.65"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %132, i8* align 8 %133, i64 16, i1 false) #12
  %134 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 3
  %135 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 3
  %136 = bitcast %"struct.std::__1::pair.65"* %135 to i8*
  %137 = bitcast %"struct.std::__1::pair.65"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #12
  %138 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 4
  %139 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %122, i64 4
  %140 = icmp ult %"struct.std::__1::pair.65"* %138, %9
  br i1 %140, label %121, label %61

141:                                              ; preds = %87, %91, %64
  %142 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 0
  store i64 %26, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %1, i64 0, i32 1
  store i32 %27, i32* %143, align 8
  br label %295

144:                                              ; preds = %4
  %145 = getelementptr inbounds %"class.std::__1::vector.63", %"class.std::__1::vector.63"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #12
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %6, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"struct.std::__1::pair.65"** %8 to i64*
  %153 = bitcast %"class.std::__1::vector.63"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %13, %155
  %157 = ashr exact i64 %156, 4
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 1152921504606846975
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.63"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #14
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"struct.std::__1::pair.65"** %10 to i64*
  %164 = sub i64 %14, %155
  %165 = ashr exact i64 %164, 4
  %166 = icmp ult i64 %165, 576460752303423487
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %5, %155
  %169 = ashr exact i64 %168, 4
  store %"struct.std::__1::pair.65"* null, %"struct.std::__1::pair.65"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.69"** %151 to %"class.std::__1::__compressed_pair.66"**
  store %"class.std::__1::__compressed_pair.66"* %145, %"class.std::__1::__compressed_pair.66"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 3
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %5, %155
  %176 = ashr exact i64 %175, 4
  store %"struct.std::__1::pair.65"* null, %"struct.std::__1::pair.65"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.69"** %151 to %"class.std::__1::__compressed_pair.66"**
  store %"class.std::__1::__compressed_pair.66"* %145, %"class.std::__1::__compressed_pair.66"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 1152921504606846975
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #14
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 1152921504606846975, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 4
  %186 = tail call i8* @_Znwm(i64 %185) #13
  %187 = bitcast i8* %186 to %"struct.std::__1::pair.65"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"struct.std::__1::pair.65"* [ %187, %182 ], [ null, %171 ]
  store %"struct.std::__1::pair.65"* %191, %"struct.std::__1::pair.65"** %147, align 8
  %192 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %191, i64 %189
  store %"struct.std::__1::pair.65"* %192, %"struct.std::__1::pair.65"** %149, align 8
  store %"struct.std::__1::pair.65"* %192, %"struct.std::__1::pair.65"** %148, align 8
  %193 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %191, i64 %190
  store %"struct.std::__1::pair.65"* %193, %"struct.std::__1::pair.65"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJlS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.113"* nonnull %6, i64* dereferenceable(8) %2, i32* dereferenceable(4) %3)
  %194 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %148, align 8
  %195 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %7, align 8
  %196 = ptrtoint %"struct.std::__1::pair.65"* %195 to i64
  %197 = sub i64 %5, %196
  %198 = ashr exact i64 %197, 4
  %199 = sub nsw i64 0, %198
  %200 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %194, i64 %199
  store %"struct.std::__1::pair.65"* %200, %"struct.std::__1::pair.65"** %148, align 8
  %201 = icmp sgt i64 %197, 0
  br i1 %201, label %202, label %205

202:                                              ; preds = %188
  %203 = bitcast %"struct.std::__1::pair.65"* %200 to i8*
  %204 = bitcast %"struct.std::__1::pair.65"* %195 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %203, i8* align 8 %204, i64 %197, i1 false) #12
  br label %205

205:                                              ; preds = %202, %188
  %206 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %8, align 8
  %207 = icmp eq %"struct.std::__1::pair.65"* %206, %1
  br i1 %207, label %208, label %212

208:                                              ; preds = %205
  %209 = ptrtoint %"struct.std::__1::pair.65"* %206 to i64
  %210 = bitcast %"struct.std::__1::pair.65"** %149 to i64*
  %211 = load i64, i64* %210, align 8
  br label %269

212:                                              ; preds = %205
  %213 = bitcast %"struct.std::__1::pair.65"** %149 to i8**
  %214 = load i8*, i8** %213, align 8
  %215 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %206, i64 -1, i32 0
  %216 = ptrtoint i64* %215 to i64
  %217 = sub i64 %216, %5
  %218 = lshr i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %235, label %222

222:                                              ; preds = %212, %222
  %223 = phi i8* [ %230, %222 ], [ %214, %212 ]
  %224 = phi %"struct.std::__1::pair.65"* [ %227, %222 ], [ %1, %212 ]
  %225 = phi i64 [ %231, %222 ], [ %220, %212 ]
  %226 = bitcast %"struct.std::__1::pair.65"* %224 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %226, i64 16, i1 false) #12
  %227 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %224, i64 1
  %228 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %229 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %228, i64 1
  store %"struct.std::__1::pair.65"* %229, %"struct.std::__1::pair.65"** %149, align 8
  %230 = bitcast %"struct.std::__1::pair.65"* %229 to i8*
  %231 = add i64 %225, -1
  %232 = icmp eq i64 %231, 0
  br i1 %232, label %233, label %222, !llvm.loop !20

233:                                              ; preds = %222
  %234 = bitcast %"struct.std::__1::pair.65"* %229 to i8*
  br label %235

235:                                              ; preds = %212, %233
  %236 = phi %"struct.std::__1::pair.65"* [ undef, %212 ], [ %229, %233 ]
  %237 = phi i8* [ %214, %212 ], [ %234, %233 ]
  %238 = phi %"struct.std::__1::pair.65"* [ %1, %212 ], [ %227, %233 ]
  %239 = icmp ult i64 %217, 48
  br i1 %239, label %264, label %240

240:                                              ; preds = %235, %240
  %241 = phi i8* [ %263, %240 ], [ %237, %235 ]
  %242 = phi %"struct.std::__1::pair.65"* [ %259, %240 ], [ %238, %235 ]
  %243 = bitcast %"struct.std::__1::pair.65"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %243, i64 16, i1 false) #12
  %244 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 1
  %245 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %246 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %245, i64 1
  store %"struct.std::__1::pair.65"* %246, %"struct.std::__1::pair.65"** %149, align 8
  %247 = bitcast %"struct.std::__1::pair.65"* %246 to i8*
  %248 = bitcast %"struct.std::__1::pair.65"* %244 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 16, i1 false) #12
  %249 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 2
  %250 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %251 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %250, i64 1
  store %"struct.std::__1::pair.65"* %251, %"struct.std::__1::pair.65"** %149, align 8
  %252 = bitcast %"struct.std::__1::pair.65"* %251 to i8*
  %253 = bitcast %"struct.std::__1::pair.65"* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 16, i1 false) #12
  %254 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 3
  %255 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %256 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %255, i64 1
  store %"struct.std::__1::pair.65"* %256, %"struct.std::__1::pair.65"** %149, align 8
  %257 = bitcast %"struct.std::__1::pair.65"* %256 to i8*
  %258 = bitcast %"struct.std::__1::pair.65"* %254 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %257, i8* align 8 %258, i64 16, i1 false) #12
  %259 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %242, i64 4
  %260 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %149, align 8
  %261 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %260, i64 1
  store %"struct.std::__1::pair.65"* %261, %"struct.std::__1::pair.65"** %149, align 8
  %262 = icmp eq %"struct.std::__1::pair.65"* %259, %206
  %263 = bitcast %"struct.std::__1::pair.65"* %261 to i8*
  br i1 %262, label %264, label %240

264:                                              ; preds = %240, %235
  %265 = phi %"struct.std::__1::pair.65"* [ %236, %235 ], [ %261, %240 ]
  %266 = ptrtoint %"struct.std::__1::pair.65"* %265 to i64
  %267 = load i64, i64* %152, align 8
  %268 = bitcast %"struct.std::__1::pair.65"** %149 to i64*
  br label %269

269:                                              ; preds = %208, %264
  %270 = phi i64* [ %210, %208 ], [ %268, %264 ]
  %271 = phi i64 [ %211, %208 ], [ %266, %264 ]
  %272 = phi i64 [ %209, %208 ], [ %267, %264 ]
  %273 = load i64, i64* %153, align 8
  %274 = bitcast %"struct.std::__1::pair.65"** %148 to i64*
  %275 = load i64, i64* %274, align 8
  store i64 %275, i64* %153, align 8
  store i64 %273, i64* %274, align 8
  store i64 %271, i64* %152, align 8
  store i64 %272, i64* %270, align 8
  %276 = load i64, i64* %163, align 8
  %277 = bitcast %"struct.std::__1::pair.65"** %150 to i64*
  %278 = load i64, i64* %277, align 8
  store i64 %278, i64* %163, align 8
  store i64 %276, i64* %277, align 8
  %279 = bitcast %"struct.std::__1::__split_buffer.113"* %6 to i64*
  store i64 %273, i64* %279, align 8
  %280 = inttoptr i64 %273 to %"struct.std::__1::pair.65"*
  %281 = inttoptr i64 %272 to %"struct.std::__1::pair.65"*
  %282 = icmp eq %"struct.std::__1::pair.65"* %281, %280
  br i1 %282, label %290, label %283

283:                                              ; preds = %269
  %284 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %281, i64 -1, i32 0
  %285 = ptrtoint i64* %284 to i64
  %286 = sub i64 %285, %273
  %287 = lshr i64 %286, 4
  %288 = xor i64 %287, -1
  %289 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %281, i64 %288
  store %"struct.std::__1::pair.65"* %289, %"struct.std::__1::pair.65"** %149, align 8
  br label %290

290:                                              ; preds = %283, %269
  %291 = icmp eq i64 %273, 0
  br i1 %291, label %294, label %292

292:                                              ; preds = %290
  %293 = inttoptr i64 %273 to i8*
  call void @_ZdlPv(i8* %293) #13
  br label %294

294:                                              ; preds = %290, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #12
  br label %295

295:                                              ; preds = %17, %141, %294
  %296 = phi %"struct.std::__1::pair.65"* [ %1, %17 ], [ %1, %141 ], [ %194, %294 ]
  ret %"struct.std::__1::pair.65"* %296
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIlN7content18StorableImpression16AttributionLogicEEERNS_9allocatorIS5_EEE12emplace_backIJlS4_EEEvDpOT_(%"struct.std::__1::__split_buffer.113"*, i64* dereferenceable(8), i32* dereferenceable(4)) local_unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair.65"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair.65"* %7 to i64
  br i1 %8, label %10, label %174

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair.65"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.113", %"struct.std::__1::__split_buffer.113"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair.65"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair.65"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair.65"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair.65"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %5, i64 -1, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair.65"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair.65"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 0, i32 0
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !21

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair.65"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair.65"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair.65"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 48
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair.65"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair.65"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 0, i32 0
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 1, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 1, i32 0
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 2, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 2, i32 0
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 3, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 3, i32 0
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair.65"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair.65"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair.65"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair.65"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair.65"* %88, %"struct.std::__1::pair.65"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %87, i64 %23
  store %"struct.std::__1::pair.65"* %89, %"struct.std::__1::pair.65"** %11, align 8
  br label %174

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair.65"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.113"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 3
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 1152921504606846975
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #14
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 4
  %102 = tail call i8* @_Znwm(i64 %101) #13
  %103 = bitcast i8* %102 to %"struct.std::__1::pair.65"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair.65"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair.65"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair.65"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %164, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -16
  %116 = lshr i64 %115, 4
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 3
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %134, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair.65"* [ %127, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %128, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair.65"* [ %129, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %130, %120 ], [ %118, %114 ]
  %125 = inttoptr i64 %122 to i8*
  %126 = bitcast %"struct.std::__1::pair.65"* %123 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 16, i1 false) #12
  %127 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %121, i64 1
  %128 = ptrtoint %"struct.std::__1::pair.65"* %127 to i64
  %129 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %123, i64 1
  %130 = add i64 %124, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %120, !llvm.loop !22

132:                                              ; preds = %120
  %133 = ptrtoint %"struct.std::__1::pair.65"* %127 to i64
  br label %134

134:                                              ; preds = %114, %132
  %135 = phi %"struct.std::__1::pair.65"* [ %105, %114 ], [ %127, %132 ]
  %136 = phi i64 [ %106, %114 ], [ %133, %132 ]
  %137 = phi %"struct.std::__1::pair.65"* [ %12, %114 ], [ %129, %132 ]
  %138 = icmp ult i64 %115, 48
  br i1 %138, label %161, label %139

139:                                              ; preds = %134, %139
  %140 = phi %"struct.std::__1::pair.65"* [ %157, %139 ], [ %135, %134 ]
  %141 = phi i64 [ %158, %139 ], [ %136, %134 ]
  %142 = phi %"struct.std::__1::pair.65"* [ %159, %139 ], [ %137, %134 ]
  %143 = inttoptr i64 %141 to i8*
  %144 = bitcast %"struct.std::__1::pair.65"* %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #12
  %145 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 1
  %146 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 1
  %147 = bitcast %"struct.std::__1::pair.65"* %145 to i8*
  %148 = bitcast %"struct.std::__1::pair.65"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 8 %148, i64 16, i1 false) #12
  %149 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 2
  %150 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 2
  %151 = bitcast %"struct.std::__1::pair.65"* %149 to i8*
  %152 = bitcast %"struct.std::__1::pair.65"* %150 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 16, i1 false) #12
  %153 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 3
  %154 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 3
  %155 = bitcast %"struct.std::__1::pair.65"* %153 to i8*
  %156 = bitcast %"struct.std::__1::pair.65"* %154 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 16, i1 false) #12
  %157 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %140, i64 4
  %158 = ptrtoint %"struct.std::__1::pair.65"* %157 to i64
  %159 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %142, i64 4
  %160 = icmp eq %"struct.std::__1::pair.65"* %112, %157
  br i1 %160, label %161, label %139

161:                                              ; preds = %139, %134
  %162 = ptrtoint %"struct.std::__1::pair.65"* %112 to i64
  %163 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %14, align 8
  br label %164

164:                                              ; preds = %99, %161
  %165 = phi %"struct.std::__1::pair.65"* [ %163, %161 ], [ %15, %99 ]
  %166 = phi i64 [ %162, %161 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %167 = bitcast %"struct.std::__1::pair.65"** %11 to i64*
  store i64 %106, i64* %167, align 8
  %168 = bitcast %"struct.std::__1::pair.65"** %4 to i64*
  store i64 %166, i64* %168, align 8
  store i64 %108, i64* %91, align 8
  %169 = icmp eq %"struct.std::__1::pair.65"* %165, null
  %170 = inttoptr i64 %166 to %"struct.std::__1::pair.65"*
  br i1 %169, label %174, label %171

171:                                              ; preds = %164
  %172 = bitcast %"struct.std::__1::pair.65"* %165 to i8*
  tail call void @_ZdlPv(i8* %172) #13
  %173 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  br label %174

174:                                              ; preds = %171, %164, %86, %3
  %175 = phi %"struct.std::__1::pair.65"* [ %173, %171 ], [ %170, %164 ], [ %88, %86 ], [ %5, %3 ]
  %176 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %175, i64 0, i32 0
  %177 = load i64, i64* %1, align 8
  store i64 %177, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %175, i64 0, i32 1
  %179 = load i32, i32* %2, align 4
  store i32 %179, i32* %178, align 8
  %180 = load %"struct.std::__1::pair.65"*, %"struct.std::__1::pair.65"** %4, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.65", %"struct.std::__1::pair.65"* %180, i64 1
  store %"struct.std::__1::pair.65"* %181, %"struct.std::__1::pair.65"** %4, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7content16ConversionReportENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.73"*, %"struct.content::ConversionReport"* dereferenceable(344)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.content::ConversionReport"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.73"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 344
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 53624256028225440
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.73"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.content::ConversionReport"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 344
  %20 = icmp ult i64 %19, 26812128014112720
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 53624256028225440, %14 ]
  %28 = mul i64 %27, 344
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"struct.content::ConversionReport"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.content::ConversionReport"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %33, i64 %32
  %36 = ptrtoint %"struct.content::ConversionReport"* %35 to i64
  tail call void @_ZN7content16ConversionReportC1ERKS0_(%"struct.content::ConversionReport"* %34, %"struct.content::ConversionReport"* dereferenceable(344) %1) #12
  %37 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %34, i64 1
  %38 = ptrtoint %"struct.content::ConversionReport"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %39, align 8
  %41 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %3, align 8
  %42 = icmp eq %"struct.content::ConversionReport"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.content::ConversionReport"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.content::ConversionReport"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.content::ConversionReport"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %47, i64 -1
  tail call void @_ZN7content16ConversionReportC1ERKS0_(%"struct.content::ConversionReport"* %48, %"struct.content::ConversionReport"* dereferenceable(344) %49) #12
  %50 = icmp eq %"struct.content::ConversionReport"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.content::ConversionReport"*, %"struct.content::ConversionReport"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.content::ConversionReport"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.content::ConversionReport"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.content::ConversionReport"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.content::ConversionReport"*
  %60 = icmp eq %"struct.content::ConversionReport"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.content::ConversionReport"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.content::ConversionReport", %"struct.content::ConversionReport"* %62, i64 -1
  tail call void @_ZN7content16ConversionReportD1Ev(%"struct.content::ConversionReport"* %63) #12
  %64 = icmp eq %"struct.content::ConversionReport"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN7content16ConversionReportC1ERKS0_(%"struct.content::ConversionReport"*, %"struct.content::ConversionReport"* dereferenceable(344)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*, i64) local_unnamed_addr #1 comdat {
  %7 = ptrtoint i64* %0 to i64
  switch i64 %3, label %14 [
    i64 0, label %400
    i64 1, label %400
    i64 2, label %8
  ]

8:                                                ; preds = %6
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %400

13:                                               ; preds = %8
  store i64 %10, i64* %0, align 8
  store i64 %11, i64* %9, align 8
  br label %400

14:                                               ; preds = %6
  %15 = icmp slt i64 %3, 129
  br i1 %15, label %16, label %58

16:                                               ; preds = %14
  %17 = icmp eq i64* %0, %1
  br i1 %17, label %400, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds i64, i64* %0, i64 1
  %20 = icmp eq i64* %19, %1
  br i1 %20, label %400, label %21

21:                                               ; preds = %18
  %22 = getelementptr i64, i64* %1, i64 -2
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %23, %7
  %25 = and i64 %24, 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %21
  %28 = load i64, i64* %19, align 8
  br label %29

29:                                               ; preds = %34, %27
  %30 = phi i64* [ %31, %34 ], [ %19, %27 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 -1
  %32 = load i64, i64* %31, align 8
  %33 = icmp slt i64 %28, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  store i64 %32, i64* %30, align 8
  %35 = icmp eq i64* %31, %0
  br i1 %35, label %36, label %29

36:                                               ; preds = %29, %34
  %37 = phi i64* [ %30, %29 ], [ %0, %34 ]
  store i64 %28, i64* %37, align 8
  %38 = getelementptr inbounds i64, i64* %0, i64 2
  br label %39

39:                                               ; preds = %36, %21
  %40 = phi i64* [ %19, %21 ], [ %38, %36 ]
  %41 = icmp ult i64 %24, 8
  br i1 %41, label %400, label %42

42:                                               ; preds = %39, %408
  %43 = phi i64* [ %410, %408 ], [ %40, %39 ]
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64* %43, %0
  br i1 %45, label %51, label %46

46:                                               ; preds = %42, %56
  %47 = phi i64* [ %48, %56 ], [ %43, %42 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 -1
  %49 = load i64, i64* %48, align 8
  %50 = icmp slt i64 %44, %49
  br i1 %50, label %56, label %51

51:                                               ; preds = %56, %46, %42
  %52 = phi i64* [ %0, %42 ], [ %47, %46 ], [ %0, %56 ]
  store i64 %44, i64* %52, align 8
  %53 = getelementptr inbounds i64, i64* %43, i64 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64* %53, %0
  br i1 %55, label %408, label %401

56:                                               ; preds = %46
  store i64 %49, i64* %47, align 8
  %57 = icmp eq i64* %48, %0
  br i1 %57, label %51, label %46

58:                                               ; preds = %14
  %59 = lshr i64 %3, 1
  %60 = getelementptr inbounds i64, i64* %0, i64 %59
  %61 = icmp sgt i64 %3, %5
  br i1 %61, label %398, label %62

62:                                               ; preds = %58
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4)
  %63 = sub nsw i64 %3, %59
  %64 = getelementptr inbounds i64, i64* %4, i64 %59
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %63, i64* %64)
  %65 = getelementptr inbounds i64, i64* %4, i64 %3
  br label %195

66:                                               ; preds = %365
  %67 = ptrtoint i64* %366 to i64
  %68 = icmp eq i64* %366, %65
  br i1 %68, label %400, label %69

69:                                               ; preds = %66
  %70 = add i64 %3, -1
  %71 = getelementptr i64, i64* %4, i64 %70
  %72 = ptrtoint i64* %71 to i64
  %73 = sub i64 %72, %67
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = icmp ult i64 %75, 4
  br i1 %76, label %77, label %102

77:                                               ; preds = %193, %102, %69
  %78 = phi i64* [ %366, %102 ], [ %366, %69 ], [ %116, %193 ]
  %79 = phi i64* [ %368, %102 ], [ %368, %69 ], [ %117, %193 ]
  %80 = ptrtoint i64* %78 to i64
  %81 = add i64 %3, -1
  %82 = getelementptr i64, i64* %4, i64 %81
  %83 = ptrtoint i64* %82 to i64
  %84 = sub i64 %83, %80
  %85 = lshr i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 7
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %98, label %89

89:                                               ; preds = %77, %89
  %90 = phi i64* [ %94, %89 ], [ %78, %77 ]
  %91 = phi i64* [ %95, %89 ], [ %79, %77 ]
  %92 = phi i64 [ %96, %89 ], [ %87, %77 ]
  %93 = load i64, i64* %90, align 8
  store i64 %93, i64* %91, align 8
  %94 = getelementptr inbounds i64, i64* %90, i64 1
  %95 = getelementptr inbounds i64, i64* %91, i64 1
  %96 = add i64 %92, -1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %89, !llvm.loop !23

98:                                               ; preds = %89, %77
  %99 = phi i64* [ %78, %77 ], [ %94, %89 ]
  %100 = phi i64* [ %79, %77 ], [ %95, %89 ]
  %101 = icmp ult i64 %84, 56
  br i1 %101, label %400, label %370

102:                                              ; preds = %69
  %103 = add i64 %3, -1
  %104 = getelementptr i64, i64* %4, i64 %103
  %105 = ptrtoint i64* %104 to i64
  %106 = sub i64 %105, %67
  %107 = lshr i64 %106, 3
  %108 = add nuw nsw i64 %107, 1
  %109 = getelementptr i64, i64* %368, i64 %108
  %110 = getelementptr i64, i64* %366, i64 %108
  %111 = icmp ult i64* %368, %110
  %112 = icmp ult i64* %366, %109
  %113 = and i1 %111, %112
  br i1 %113, label %77, label %114

114:                                              ; preds = %102
  %115 = and i64 %75, 4611686018427387900
  %116 = getelementptr i64, i64* %366, i64 %115
  %117 = getelementptr i64, i64* %368, i64 %115
  %118 = add nsw i64 %115, -4
  %119 = lshr exact i64 %118, 2
  %120 = add nuw nsw i64 %119, 1
  %121 = and i64 %120, 3
  %122 = icmp ult i64 %118, 12
  br i1 %122, label %174, label %123

123:                                              ; preds = %114
  %124 = sub nsw i64 %120, %121
  br label %125

125:                                              ; preds = %125, %123
  %126 = phi i64 [ 0, %123 ], [ %171, %125 ]
  %127 = phi i64 [ %124, %123 ], [ %172, %125 ]
  %128 = getelementptr i64, i64* %366, i64 %126
  %129 = getelementptr i64, i64* %368, i64 %126
  %130 = bitcast i64* %128 to <2 x i64>*
  %131 = load <2 x i64>, <2 x i64>* %130, align 8, !alias.scope !24
  %132 = getelementptr i64, i64* %128, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !24
  %135 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %131, <2 x i64>* %135, align 8, !alias.scope !27, !noalias !24
  %136 = getelementptr i64, i64* %129, i64 2
  %137 = bitcast i64* %136 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %137, align 8, !alias.scope !27, !noalias !24
  %138 = or i64 %126, 4
  %139 = getelementptr i64, i64* %366, i64 %138
  %140 = getelementptr i64, i64* %368, i64 %138
  %141 = bitcast i64* %139 to <2 x i64>*
  %142 = load <2 x i64>, <2 x i64>* %141, align 8, !alias.scope !24
  %143 = getelementptr i64, i64* %139, i64 2
  %144 = bitcast i64* %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !24
  %146 = bitcast i64* %140 to <2 x i64>*
  store <2 x i64> %142, <2 x i64>* %146, align 8, !alias.scope !27, !noalias !24
  %147 = getelementptr i64, i64* %140, i64 2
  %148 = bitcast i64* %147 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %148, align 8, !alias.scope !27, !noalias !24
  %149 = or i64 %126, 8
  %150 = getelementptr i64, i64* %366, i64 %149
  %151 = getelementptr i64, i64* %368, i64 %149
  %152 = bitcast i64* %150 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !24
  %154 = getelementptr i64, i64* %150, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !24
  %157 = bitcast i64* %151 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !27, !noalias !24
  %158 = getelementptr i64, i64* %151, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !27, !noalias !24
  %160 = or i64 %126, 12
  %161 = getelementptr i64, i64* %366, i64 %160
  %162 = getelementptr i64, i64* %368, i64 %160
  %163 = bitcast i64* %161 to <2 x i64>*
  %164 = load <2 x i64>, <2 x i64>* %163, align 8, !alias.scope !24
  %165 = getelementptr i64, i64* %161, i64 2
  %166 = bitcast i64* %165 to <2 x i64>*
  %167 = load <2 x i64>, <2 x i64>* %166, align 8, !alias.scope !24
  %168 = bitcast i64* %162 to <2 x i64>*
  store <2 x i64> %164, <2 x i64>* %168, align 8, !alias.scope !27, !noalias !24
  %169 = getelementptr i64, i64* %162, i64 2
  %170 = bitcast i64* %169 to <2 x i64>*
  store <2 x i64> %167, <2 x i64>* %170, align 8, !alias.scope !27, !noalias !24
  %171 = add i64 %126, 16
  %172 = add i64 %127, -4
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %125, !llvm.loop !29

174:                                              ; preds = %125, %114
  %175 = phi i64 [ 0, %114 ], [ %171, %125 ]
  %176 = icmp eq i64 %121, 0
  br i1 %176, label %193, label %177

177:                                              ; preds = %174, %177
  %178 = phi i64 [ %190, %177 ], [ %175, %174 ]
  %179 = phi i64 [ %191, %177 ], [ %121, %174 ]
  %180 = getelementptr i64, i64* %366, i64 %178
  %181 = getelementptr i64, i64* %368, i64 %178
  %182 = bitcast i64* %180 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8, !alias.scope !24
  %184 = getelementptr i64, i64* %180, i64 2
  %185 = bitcast i64* %184 to <2 x i64>*
  %186 = load <2 x i64>, <2 x i64>* %185, align 8, !alias.scope !24
  %187 = bitcast i64* %181 to <2 x i64>*
  store <2 x i64> %183, <2 x i64>* %187, align 8, !alias.scope !27, !noalias !24
  %188 = getelementptr i64, i64* %181, i64 2
  %189 = bitcast i64* %188 to <2 x i64>*
  store <2 x i64> %186, <2 x i64>* %189, align 8, !alias.scope !27, !noalias !24
  %190 = add i64 %178, 4
  %191 = add i64 %179, -1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %193, label %177, !llvm.loop !31

193:                                              ; preds = %177, %174
  %194 = icmp eq i64 %75, %115
  br i1 %194, label %400, label %77

195:                                              ; preds = %62, %365
  %196 = phi i64* [ %367, %365 ], [ %4, %62 ]
  %197 = phi i64* [ %366, %365 ], [ %64, %62 ]
  %198 = phi i64* [ %368, %365 ], [ %0, %62 ]
  %199 = icmp eq i64* %197, %65
  br i1 %199, label %200, label %357

200:                                              ; preds = %195
  %201 = ptrtoint i64* %196 to i64
  %202 = icmp eq i64* %196, %64
  br i1 %202, label %400, label %203

203:                                              ; preds = %200
  %204 = add nsw i64 %59, -1
  %205 = getelementptr i64, i64* %4, i64 %204
  %206 = ptrtoint i64* %205 to i64
  %207 = sub i64 %206, %201
  %208 = lshr i64 %207, 3
  %209 = add nuw nsw i64 %208, 1
  %210 = icmp ult i64 %209, 4
  br i1 %210, label %304, label %211

211:                                              ; preds = %203
  %212 = add nsw i64 %59, -1
  %213 = getelementptr i64, i64* %4, i64 %212
  %214 = ptrtoint i64* %213 to i64
  %215 = sub i64 %214, %201
  %216 = lshr i64 %215, 3
  %217 = add nuw nsw i64 %216, 1
  %218 = getelementptr i64, i64* %198, i64 %217
  %219 = getelementptr i64, i64* %196, i64 %217
  %220 = icmp ult i64* %198, %219
  %221 = icmp ult i64* %196, %218
  %222 = and i1 %220, %221
  br i1 %222, label %304, label %223

223:                                              ; preds = %211
  %224 = and i64 %209, 4611686018427387900
  %225 = getelementptr i64, i64* %196, i64 %224
  %226 = getelementptr i64, i64* %198, i64 %224
  %227 = add nsw i64 %224, -4
  %228 = lshr exact i64 %227, 2
  %229 = add nuw nsw i64 %228, 1
  %230 = and i64 %229, 3
  %231 = icmp ult i64 %227, 12
  br i1 %231, label %283, label %232

232:                                              ; preds = %223
  %233 = sub nsw i64 %229, %230
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %280, %234 ]
  %236 = phi i64 [ %233, %232 ], [ %281, %234 ]
  %237 = getelementptr i64, i64* %196, i64 %235
  %238 = getelementptr i64, i64* %198, i64 %235
  %239 = bitcast i64* %237 to <2 x i64>*
  %240 = load <2 x i64>, <2 x i64>* %239, align 8, !alias.scope !32
  %241 = getelementptr i64, i64* %237, i64 2
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !32
  %244 = bitcast i64* %238 to <2 x i64>*
  store <2 x i64> %240, <2 x i64>* %244, align 8, !alias.scope !35, !noalias !32
  %245 = getelementptr i64, i64* %238, i64 2
  %246 = bitcast i64* %245 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %246, align 8, !alias.scope !35, !noalias !32
  %247 = or i64 %235, 4
  %248 = getelementptr i64, i64* %196, i64 %247
  %249 = getelementptr i64, i64* %198, i64 %247
  %250 = bitcast i64* %248 to <2 x i64>*
  %251 = load <2 x i64>, <2 x i64>* %250, align 8, !alias.scope !32
  %252 = getelementptr i64, i64* %248, i64 2
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !32
  %255 = bitcast i64* %249 to <2 x i64>*
  store <2 x i64> %251, <2 x i64>* %255, align 8, !alias.scope !35, !noalias !32
  %256 = getelementptr i64, i64* %249, i64 2
  %257 = bitcast i64* %256 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %257, align 8, !alias.scope !35, !noalias !32
  %258 = or i64 %235, 8
  %259 = getelementptr i64, i64* %196, i64 %258
  %260 = getelementptr i64, i64* %198, i64 %258
  %261 = bitcast i64* %259 to <2 x i64>*
  %262 = load <2 x i64>, <2 x i64>* %261, align 8, !alias.scope !32
  %263 = getelementptr i64, i64* %259, i64 2
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !32
  %266 = bitcast i64* %260 to <2 x i64>*
  store <2 x i64> %262, <2 x i64>* %266, align 8, !alias.scope !35, !noalias !32
  %267 = getelementptr i64, i64* %260, i64 2
  %268 = bitcast i64* %267 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %268, align 8, !alias.scope !35, !noalias !32
  %269 = or i64 %235, 12
  %270 = getelementptr i64, i64* %196, i64 %269
  %271 = getelementptr i64, i64* %198, i64 %269
  %272 = bitcast i64* %270 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !32
  %274 = getelementptr i64, i64* %270, i64 2
  %275 = bitcast i64* %274 to <2 x i64>*
  %276 = load <2 x i64>, <2 x i64>* %275, align 8, !alias.scope !32
  %277 = bitcast i64* %271 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %277, align 8, !alias.scope !35, !noalias !32
  %278 = getelementptr i64, i64* %271, i64 2
  %279 = bitcast i64* %278 to <2 x i64>*
  store <2 x i64> %276, <2 x i64>* %279, align 8, !alias.scope !35, !noalias !32
  %280 = add i64 %235, 16
  %281 = add i64 %236, -4
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %234, !llvm.loop !37

283:                                              ; preds = %234, %223
  %284 = phi i64 [ 0, %223 ], [ %280, %234 ]
  %285 = icmp eq i64 %230, 0
  br i1 %285, label %302, label %286

286:                                              ; preds = %283, %286
  %287 = phi i64 [ %299, %286 ], [ %284, %283 ]
  %288 = phi i64 [ %300, %286 ], [ %230, %283 ]
  %289 = getelementptr i64, i64* %196, i64 %287
  %290 = getelementptr i64, i64* %198, i64 %287
  %291 = bitcast i64* %289 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !32
  %293 = getelementptr i64, i64* %289, i64 2
  %294 = bitcast i64* %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !32
  %296 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !35, !noalias !32
  %297 = getelementptr i64, i64* %290, i64 2
  %298 = bitcast i64* %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !35, !noalias !32
  %299 = add i64 %287, 4
  %300 = add i64 %288, -1
  %301 = icmp eq i64 %300, 0
  br i1 %301, label %302, label %286, !llvm.loop !38

302:                                              ; preds = %286, %283
  %303 = icmp eq i64 %209, %224
  br i1 %303, label %400, label %304

304:                                              ; preds = %302, %211, %203
  %305 = phi i64* [ %196, %211 ], [ %196, %203 ], [ %225, %302 ]
  %306 = phi i64* [ %198, %211 ], [ %198, %203 ], [ %226, %302 ]
  %307 = ptrtoint i64* %305 to i64
  %308 = add nsw i64 %59, -1
  %309 = getelementptr i64, i64* %4, i64 %308
  %310 = ptrtoint i64* %309 to i64
  %311 = sub i64 %310, %307
  %312 = lshr i64 %311, 3
  %313 = add nuw nsw i64 %312, 1
  %314 = and i64 %313, 7
  %315 = icmp eq i64 %314, 0
  br i1 %315, label %325, label %316

316:                                              ; preds = %304, %316
  %317 = phi i64* [ %321, %316 ], [ %305, %304 ]
  %318 = phi i64* [ %322, %316 ], [ %306, %304 ]
  %319 = phi i64 [ %323, %316 ], [ %314, %304 ]
  %320 = load i64, i64* %317, align 8
  store i64 %320, i64* %318, align 8
  %321 = getelementptr inbounds i64, i64* %317, i64 1
  %322 = getelementptr inbounds i64, i64* %318, i64 1
  %323 = add i64 %319, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %316, !llvm.loop !39

325:                                              ; preds = %316, %304
  %326 = phi i64* [ %305, %304 ], [ %321, %316 ]
  %327 = phi i64* [ %306, %304 ], [ %322, %316 ]
  %328 = icmp ult i64 %311, 56
  br i1 %328, label %400, label %329

329:                                              ; preds = %325, %329
  %330 = phi i64* [ %354, %329 ], [ %326, %325 ]
  %331 = phi i64* [ %355, %329 ], [ %327, %325 ]
  %332 = load i64, i64* %330, align 8
  store i64 %332, i64* %331, align 8
  %333 = getelementptr inbounds i64, i64* %330, i64 1
  %334 = getelementptr inbounds i64, i64* %331, i64 1
  %335 = load i64, i64* %333, align 8
  store i64 %335, i64* %334, align 8
  %336 = getelementptr inbounds i64, i64* %330, i64 2
  %337 = getelementptr inbounds i64, i64* %331, i64 2
  %338 = load i64, i64* %336, align 8
  store i64 %338, i64* %337, align 8
  %339 = getelementptr inbounds i64, i64* %330, i64 3
  %340 = getelementptr inbounds i64, i64* %331, i64 3
  %341 = load i64, i64* %339, align 8
  store i64 %341, i64* %340, align 8
  %342 = getelementptr inbounds i64, i64* %330, i64 4
  %343 = getelementptr inbounds i64, i64* %331, i64 4
  %344 = load i64, i64* %342, align 8
  store i64 %344, i64* %343, align 8
  %345 = getelementptr inbounds i64, i64* %330, i64 5
  %346 = getelementptr inbounds i64, i64* %331, i64 5
  %347 = load i64, i64* %345, align 8
  store i64 %347, i64* %346, align 8
  %348 = getelementptr inbounds i64, i64* %330, i64 6
  %349 = getelementptr inbounds i64, i64* %331, i64 6
  %350 = load i64, i64* %348, align 8
  store i64 %350, i64* %349, align 8
  %351 = getelementptr inbounds i64, i64* %330, i64 7
  %352 = getelementptr inbounds i64, i64* %331, i64 7
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds i64, i64* %330, i64 8
  %355 = getelementptr inbounds i64, i64* %331, i64 8
  %356 = icmp eq i64* %354, %64
  br i1 %356, label %400, label %329, !llvm.loop !40

357:                                              ; preds = %195
  %358 = load i64, i64* %197, align 8
  %359 = load i64, i64* %196, align 8
  %360 = icmp slt i64 %358, %359
  br i1 %360, label %361, label %363

361:                                              ; preds = %357
  store i64 %358, i64* %198, align 8
  %362 = getelementptr inbounds i64, i64* %197, i64 1
  br label %365

363:                                              ; preds = %357
  store i64 %359, i64* %198, align 8
  %364 = getelementptr inbounds i64, i64* %196, i64 1
  br label %365

365:                                              ; preds = %363, %361
  %366 = phi i64* [ %362, %361 ], [ %197, %363 ]
  %367 = phi i64* [ %196, %361 ], [ %364, %363 ]
  %368 = getelementptr inbounds i64, i64* %198, i64 1
  %369 = icmp eq i64* %367, %64
  br i1 %369, label %66, label %195

370:                                              ; preds = %98, %370
  %371 = phi i64* [ %395, %370 ], [ %99, %98 ]
  %372 = phi i64* [ %396, %370 ], [ %100, %98 ]
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %371, i64 1
  %375 = getelementptr inbounds i64, i64* %372, i64 1
  %376 = load i64, i64* %374, align 8
  store i64 %376, i64* %375, align 8
  %377 = getelementptr inbounds i64, i64* %371, i64 2
  %378 = getelementptr inbounds i64, i64* %372, i64 2
  %379 = load i64, i64* %377, align 8
  store i64 %379, i64* %378, align 8
  %380 = getelementptr inbounds i64, i64* %371, i64 3
  %381 = getelementptr inbounds i64, i64* %372, i64 3
  %382 = load i64, i64* %380, align 8
  store i64 %382, i64* %381, align 8
  %383 = getelementptr inbounds i64, i64* %371, i64 4
  %384 = getelementptr inbounds i64, i64* %372, i64 4
  %385 = load i64, i64* %383, align 8
  store i64 %385, i64* %384, align 8
  %386 = getelementptr inbounds i64, i64* %371, i64 5
  %387 = getelementptr inbounds i64, i64* %372, i64 5
  %388 = load i64, i64* %386, align 8
  store i64 %388, i64* %387, align 8
  %389 = getelementptr inbounds i64, i64* %371, i64 6
  %390 = getelementptr inbounds i64, i64* %372, i64 6
  %391 = load i64, i64* %389, align 8
  store i64 %391, i64* %390, align 8
  %392 = getelementptr inbounds i64, i64* %371, i64 7
  %393 = getelementptr inbounds i64, i64* %372, i64 7
  %394 = load i64, i64* %392, align 8
  store i64 %394, i64* %393, align 8
  %395 = getelementptr inbounds i64, i64* %371, i64 8
  %396 = getelementptr inbounds i64, i64* %372, i64 8
  %397 = icmp eq i64* %395, %65
  br i1 %397, label %400, label %370, !llvm.loop !41

398:                                              ; preds = %58
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %60, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64* %4, i64 %5)
  %399 = sub nsw i64 %3, %59
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %399, i64* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %0, i64* %60, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %59, i64 %399, i64* %4, i64 %5)
  ret void

400:                                              ; preds = %98, %370, %325, %329, %39, %408, %193, %302, %200, %66, %18, %16, %8, %13, %6, %6
  ret void

401:                                              ; preds = %51, %406
  %402 = phi i64* [ %403, %406 ], [ %53, %51 ]
  %403 = getelementptr inbounds i64, i64* %402, i64 -1
  %404 = load i64, i64* %403, align 8
  %405 = icmp slt i64 %54, %404
  br i1 %405, label %406, label %408

406:                                              ; preds = %401
  store i64 %404, i64* %402, align 8
  %407 = icmp eq i64* %403, %0
  br i1 %407, label %408, label %401

408:                                              ; preds = %401, %406, %51
  %409 = phi i64* [ %0, %51 ], [ %402, %401 ], [ %0, %406 ]
  store i64 %54, i64* %409, align 8
  %410 = getelementptr inbounds i64, i64* %43, i64 2
  %411 = icmp eq i64* %410, %1
  br i1 %411, label %400, label %42
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeE(i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64*) local_unnamed_addr #1 comdat {
  switch i64 %3, label %19 [
    i64 0, label %390
    i64 1, label %6
    i64 2, label %8
  ]

6:                                                ; preds = %5
  %7 = load i64, i64* %0, align 8
  store i64 %7, i64* %4, align 8
  br label %390

8:                                                ; preds = %5
  %9 = getelementptr inbounds i64, i64* %1, i64 -1
  %10 = load i64, i64* %9, align 8
  %11 = load i64, i64* %0, align 8
  %12 = icmp slt i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  store i64 %10, i64* %4, align 8
  %14 = getelementptr inbounds i64, i64* %4, i64 1
  %15 = load i64, i64* %0, align 8
  store i64 %15, i64* %14, align 8
  br label %390

16:                                               ; preds = %8
  store i64 %11, i64* %4, align 8
  %17 = getelementptr inbounds i64, i64* %4, i64 1
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %17, align 8
  br label %390

19:                                               ; preds = %5
  %20 = icmp slt i64 %3, 9
  br i1 %20, label %21, label %53

21:                                               ; preds = %19
  %22 = icmp eq i64* %0, %1
  br i1 %22, label %390, label %23

23:                                               ; preds = %21
  %24 = load i64, i64* %0, align 8
  store i64 %24, i64* %4, align 8
  %25 = getelementptr inbounds i64, i64* %0, i64 1
  %26 = icmp eq i64* %25, %1
  br i1 %26, label %390, label %27

27:                                               ; preds = %23, %51
  %28 = phi i64 [ %52, %51 ], [ %24, %23 ]
  %29 = phi i64* [ %49, %51 ], [ %25, %23 ]
  %30 = phi i64* [ %31, %51 ], [ %4, %23 ]
  %31 = getelementptr inbounds i64, i64* %30, i64 1
  %32 = load i64, i64* %29, align 8
  %33 = icmp slt i64 %32, %28
  br i1 %33, label %34, label %47

34:                                               ; preds = %27
  store i64 %28, i64* %31, align 8
  %35 = icmp eq i64* %30, %4
  br i1 %35, label %44, label %36

36:                                               ; preds = %34, %42
  %37 = phi i64* [ %38, %42 ], [ %30, %34 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 -1
  %39 = load i64, i64* %29, align 8
  %40 = load i64, i64* %38, align 8
  %41 = icmp slt i64 %39, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  store i64 %40, i64* %37, align 8
  %43 = icmp eq i64* %38, %4
  br i1 %43, label %44, label %36

44:                                               ; preds = %42, %36, %34
  %45 = phi i64* [ %4, %34 ], [ %37, %36 ], [ %4, %42 ]
  %46 = load i64, i64* %29, align 8
  store i64 %46, i64* %45, align 8
  br label %48

47:                                               ; preds = %27
  store i64 %32, i64* %31, align 8
  br label %48

48:                                               ; preds = %47, %44
  %49 = getelementptr inbounds i64, i64* %29, i64 1
  %50 = icmp eq i64* %49, %1
  br i1 %50, label %390, label %51

51:                                               ; preds = %48
  %52 = load i64, i64* %31, align 8
  br label %27

53:                                               ; preds = %19
  %54 = lshr i64 %3, 1
  %55 = getelementptr inbounds i64, i64* %0, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %0, i64* %55, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %54, i64* %4, i64 %54)
  %56 = sub nsw i64 %3, %54
  %57 = getelementptr inbounds i64, i64* %4, i64 %54
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_T_NS_15iterator_traitsISH_E15difference_typeEPNSK_10value_typeEl(i64* %55, i64* %1, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %2, i64 %56, i64* %57, i64 %56)
  %58 = icmp eq i64 %54, 0
  br i1 %58, label %59, label %215

59:                                               ; preds = %385, %53
  %60 = phi i64* [ %55, %53 ], [ %386, %385 ]
  %61 = phi i64* [ %4, %53 ], [ %388, %385 ]
  %62 = ptrtoint i64* %60 to i64
  %63 = icmp eq i64* %60, %1
  br i1 %63, label %390, label %64

64:                                               ; preds = %59
  %65 = getelementptr i64, i64* %1, i64 -1
  %66 = ptrtoint i64* %65 to i64
  %67 = sub i64 %66, %62
  %68 = lshr i64 %67, 3
  %69 = add nuw nsw i64 %68, 1
  %70 = icmp ult i64 %69, 4
  br i1 %70, label %163, label %71

71:                                               ; preds = %64
  %72 = getelementptr i64, i64* %1, i64 -1
  %73 = ptrtoint i64* %72 to i64
  %74 = sub i64 %73, %62
  %75 = lshr i64 %74, 3
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr i64, i64* %61, i64 %76
  %78 = getelementptr i64, i64* %60, i64 %76
  %79 = icmp ult i64* %61, %78
  %80 = icmp ult i64* %60, %77
  %81 = and i1 %79, %80
  br i1 %81, label %163, label %82

82:                                               ; preds = %71
  %83 = and i64 %69, 4611686018427387900
  %84 = getelementptr i64, i64* %61, i64 %83
  %85 = getelementptr i64, i64* %60, i64 %83
  %86 = add nsw i64 %83, -4
  %87 = lshr exact i64 %86, 2
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 12
  br i1 %90, label %142, label %91

91:                                               ; preds = %82
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %139, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %140, %93 ]
  %96 = getelementptr i64, i64* %61, i64 %94
  %97 = getelementptr i64, i64* %60, i64 %94
  %98 = bitcast i64* %97 to <2 x i64>*
  %99 = load <2 x i64>, <2 x i64>* %98, align 8, !alias.scope !42
  %100 = getelementptr i64, i64* %97, i64 2
  %101 = bitcast i64* %100 to <2 x i64>*
  %102 = load <2 x i64>, <2 x i64>* %101, align 8, !alias.scope !42
  %103 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %103, align 8, !alias.scope !45, !noalias !42
  %104 = getelementptr i64, i64* %96, i64 2
  %105 = bitcast i64* %104 to <2 x i64>*
  store <2 x i64> %102, <2 x i64>* %105, align 8, !alias.scope !45, !noalias !42
  %106 = or i64 %94, 4
  %107 = getelementptr i64, i64* %61, i64 %106
  %108 = getelementptr i64, i64* %60, i64 %106
  %109 = bitcast i64* %108 to <2 x i64>*
  %110 = load <2 x i64>, <2 x i64>* %109, align 8, !alias.scope !42
  %111 = getelementptr i64, i64* %108, i64 2
  %112 = bitcast i64* %111 to <2 x i64>*
  %113 = load <2 x i64>, <2 x i64>* %112, align 8, !alias.scope !42
  %114 = bitcast i64* %107 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %114, align 8, !alias.scope !45, !noalias !42
  %115 = getelementptr i64, i64* %107, i64 2
  %116 = bitcast i64* %115 to <2 x i64>*
  store <2 x i64> %113, <2 x i64>* %116, align 8, !alias.scope !45, !noalias !42
  %117 = or i64 %94, 8
  %118 = getelementptr i64, i64* %61, i64 %117
  %119 = getelementptr i64, i64* %60, i64 %117
  %120 = bitcast i64* %119 to <2 x i64>*
  %121 = load <2 x i64>, <2 x i64>* %120, align 8, !alias.scope !42
  %122 = getelementptr i64, i64* %119, i64 2
  %123 = bitcast i64* %122 to <2 x i64>*
  %124 = load <2 x i64>, <2 x i64>* %123, align 8, !alias.scope !42
  %125 = bitcast i64* %118 to <2 x i64>*
  store <2 x i64> %121, <2 x i64>* %125, align 8, !alias.scope !45, !noalias !42
  %126 = getelementptr i64, i64* %118, i64 2
  %127 = bitcast i64* %126 to <2 x i64>*
  store <2 x i64> %124, <2 x i64>* %127, align 8, !alias.scope !45, !noalias !42
  %128 = or i64 %94, 12
  %129 = getelementptr i64, i64* %61, i64 %128
  %130 = getelementptr i64, i64* %60, i64 %128
  %131 = bitcast i64* %130 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8, !alias.scope !42
  %133 = getelementptr i64, i64* %130, i64 2
  %134 = bitcast i64* %133 to <2 x i64>*
  %135 = load <2 x i64>, <2 x i64>* %134, align 8, !alias.scope !42
  %136 = bitcast i64* %129 to <2 x i64>*
  store <2 x i64> %132, <2 x i64>* %136, align 8, !alias.scope !45, !noalias !42
  %137 = getelementptr i64, i64* %129, i64 2
  %138 = bitcast i64* %137 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %138, align 8, !alias.scope !45, !noalias !42
  %139 = add i64 %94, 16
  %140 = add i64 %95, -4
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %142, label %93, !llvm.loop !47

142:                                              ; preds = %93, %82
  %143 = phi i64 [ 0, %82 ], [ %139, %93 ]
  %144 = icmp eq i64 %89, 0
  br i1 %144, label %161, label %145

145:                                              ; preds = %142, %145
  %146 = phi i64 [ %158, %145 ], [ %143, %142 ]
  %147 = phi i64 [ %159, %145 ], [ %89, %142 ]
  %148 = getelementptr i64, i64* %61, i64 %146
  %149 = getelementptr i64, i64* %60, i64 %146
  %150 = bitcast i64* %149 to <2 x i64>*
  %151 = load <2 x i64>, <2 x i64>* %150, align 8, !alias.scope !42
  %152 = getelementptr i64, i64* %149, i64 2
  %153 = bitcast i64* %152 to <2 x i64>*
  %154 = load <2 x i64>, <2 x i64>* %153, align 8, !alias.scope !42
  %155 = bitcast i64* %148 to <2 x i64>*
  store <2 x i64> %151, <2 x i64>* %155, align 8, !alias.scope !45, !noalias !42
  %156 = getelementptr i64, i64* %148, i64 2
  %157 = bitcast i64* %156 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %157, align 8, !alias.scope !45, !noalias !42
  %158 = add i64 %146, 4
  %159 = add i64 %147, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %145, !llvm.loop !48

161:                                              ; preds = %145, %142
  %162 = icmp eq i64 %69, %83
  br i1 %162, label %390, label %163

163:                                              ; preds = %161, %71, %64
  %164 = phi i64* [ %61, %71 ], [ %61, %64 ], [ %84, %161 ]
  %165 = phi i64* [ %60, %71 ], [ %60, %64 ], [ %85, %161 ]
  %166 = ptrtoint i64* %165 to i64
  %167 = getelementptr i64, i64* %1, i64 -1
  %168 = ptrtoint i64* %167 to i64
  %169 = sub i64 %168, %166
  %170 = lshr i64 %169, 3
  %171 = add nuw nsw i64 %170, 1
  %172 = and i64 %171, 7
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %183, label %174

174:                                              ; preds = %163, %174
  %175 = phi i64* [ %180, %174 ], [ %164, %163 ]
  %176 = phi i64* [ %179, %174 ], [ %165, %163 ]
  %177 = phi i64 [ %181, %174 ], [ %172, %163 ]
  %178 = load i64, i64* %176, align 8
  store i64 %178, i64* %175, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 1
  %180 = getelementptr inbounds i64, i64* %175, i64 1
  %181 = add i64 %177, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %174, !llvm.loop !49

183:                                              ; preds = %174, %163
  %184 = phi i64* [ %164, %163 ], [ %180, %174 ]
  %185 = phi i64* [ %165, %163 ], [ %179, %174 ]
  %186 = icmp ult i64 %169, 56
  br i1 %186, label %390, label %187

187:                                              ; preds = %183, %187
  %188 = phi i64* [ %213, %187 ], [ %184, %183 ]
  %189 = phi i64* [ %212, %187 ], [ %185, %183 ]
  %190 = load i64, i64* %189, align 8
  store i64 %190, i64* %188, align 8
  %191 = getelementptr inbounds i64, i64* %189, i64 1
  %192 = getelementptr inbounds i64, i64* %188, i64 1
  %193 = load i64, i64* %191, align 8
  store i64 %193, i64* %192, align 8
  %194 = getelementptr inbounds i64, i64* %189, i64 2
  %195 = getelementptr inbounds i64, i64* %188, i64 2
  %196 = load i64, i64* %194, align 8
  store i64 %196, i64* %195, align 8
  %197 = getelementptr inbounds i64, i64* %189, i64 3
  %198 = getelementptr inbounds i64, i64* %188, i64 3
  %199 = load i64, i64* %197, align 8
  store i64 %199, i64* %198, align 8
  %200 = getelementptr inbounds i64, i64* %189, i64 4
  %201 = getelementptr inbounds i64, i64* %188, i64 4
  %202 = load i64, i64* %200, align 8
  store i64 %202, i64* %201, align 8
  %203 = getelementptr inbounds i64, i64* %189, i64 5
  %204 = getelementptr inbounds i64, i64* %188, i64 5
  %205 = load i64, i64* %203, align 8
  store i64 %205, i64* %204, align 8
  %206 = getelementptr inbounds i64, i64* %189, i64 6
  %207 = getelementptr inbounds i64, i64* %188, i64 6
  %208 = load i64, i64* %206, align 8
  store i64 %208, i64* %207, align 8
  %209 = getelementptr inbounds i64, i64* %189, i64 7
  %210 = getelementptr inbounds i64, i64* %188, i64 7
  %211 = load i64, i64* %209, align 8
  store i64 %211, i64* %210, align 8
  %212 = getelementptr inbounds i64, i64* %189, i64 8
  %213 = getelementptr inbounds i64, i64* %188, i64 8
  %214 = icmp eq i64* %212, %1
  br i1 %214, label %390, label %187, !llvm.loop !50

215:                                              ; preds = %53, %385
  %216 = phi i64* [ %388, %385 ], [ %4, %53 ]
  %217 = phi i64* [ %387, %385 ], [ %0, %53 ]
  %218 = phi i64* [ %386, %385 ], [ %55, %53 ]
  %219 = icmp eq i64* %218, %1
  br i1 %219, label %220, label %377

220:                                              ; preds = %215
  %221 = ptrtoint i64* %217 to i64
  %222 = icmp eq i64* %217, %55
  br i1 %222, label %390, label %223

223:                                              ; preds = %220
  %224 = add nsw i64 %54, -1
  %225 = getelementptr i64, i64* %0, i64 %224
  %226 = ptrtoint i64* %225 to i64
  %227 = sub i64 %226, %221
  %228 = lshr i64 %227, 3
  %229 = add nuw nsw i64 %228, 1
  %230 = icmp ult i64 %229, 4
  br i1 %230, label %324, label %231

231:                                              ; preds = %223
  %232 = add nsw i64 %54, -1
  %233 = getelementptr i64, i64* %0, i64 %232
  %234 = ptrtoint i64* %233 to i64
  %235 = sub i64 %234, %221
  %236 = lshr i64 %235, 3
  %237 = add nuw nsw i64 %236, 1
  %238 = getelementptr i64, i64* %216, i64 %237
  %239 = getelementptr i64, i64* %217, i64 %237
  %240 = icmp ult i64* %216, %239
  %241 = icmp ult i64* %217, %238
  %242 = and i1 %240, %241
  br i1 %242, label %324, label %243

243:                                              ; preds = %231
  %244 = and i64 %229, 4611686018427387900
  %245 = getelementptr i64, i64* %216, i64 %244
  %246 = getelementptr i64, i64* %217, i64 %244
  %247 = add nsw i64 %244, -4
  %248 = lshr exact i64 %247, 2
  %249 = add nuw nsw i64 %248, 1
  %250 = and i64 %249, 3
  %251 = icmp ult i64 %247, 12
  br i1 %251, label %303, label %252

252:                                              ; preds = %243
  %253 = sub nsw i64 %249, %250
  br label %254

254:                                              ; preds = %254, %252
  %255 = phi i64 [ 0, %252 ], [ %300, %254 ]
  %256 = phi i64 [ %253, %252 ], [ %301, %254 ]
  %257 = getelementptr i64, i64* %216, i64 %255
  %258 = getelementptr i64, i64* %217, i64 %255
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8, !alias.scope !51
  %261 = getelementptr i64, i64* %258, i64 2
  %262 = bitcast i64* %261 to <2 x i64>*
  %263 = load <2 x i64>, <2 x i64>* %262, align 8, !alias.scope !51
  %264 = bitcast i64* %257 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8, !alias.scope !54, !noalias !51
  %265 = getelementptr i64, i64* %257, i64 2
  %266 = bitcast i64* %265 to <2 x i64>*
  store <2 x i64> %263, <2 x i64>* %266, align 8, !alias.scope !54, !noalias !51
  %267 = or i64 %255, 4
  %268 = getelementptr i64, i64* %216, i64 %267
  %269 = getelementptr i64, i64* %217, i64 %267
  %270 = bitcast i64* %269 to <2 x i64>*
  %271 = load <2 x i64>, <2 x i64>* %270, align 8, !alias.scope !51
  %272 = getelementptr i64, i64* %269, i64 2
  %273 = bitcast i64* %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !51
  %275 = bitcast i64* %268 to <2 x i64>*
  store <2 x i64> %271, <2 x i64>* %275, align 8, !alias.scope !54, !noalias !51
  %276 = getelementptr i64, i64* %268, i64 2
  %277 = bitcast i64* %276 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %277, align 8, !alias.scope !54, !noalias !51
  %278 = or i64 %255, 8
  %279 = getelementptr i64, i64* %216, i64 %278
  %280 = getelementptr i64, i64* %217, i64 %278
  %281 = bitcast i64* %280 to <2 x i64>*
  %282 = load <2 x i64>, <2 x i64>* %281, align 8, !alias.scope !51
  %283 = getelementptr i64, i64* %280, i64 2
  %284 = bitcast i64* %283 to <2 x i64>*
  %285 = load <2 x i64>, <2 x i64>* %284, align 8, !alias.scope !51
  %286 = bitcast i64* %279 to <2 x i64>*
  store <2 x i64> %282, <2 x i64>* %286, align 8, !alias.scope !54, !noalias !51
  %287 = getelementptr i64, i64* %279, i64 2
  %288 = bitcast i64* %287 to <2 x i64>*
  store <2 x i64> %285, <2 x i64>* %288, align 8, !alias.scope !54, !noalias !51
  %289 = or i64 %255, 12
  %290 = getelementptr i64, i64* %216, i64 %289
  %291 = getelementptr i64, i64* %217, i64 %289
  %292 = bitcast i64* %291 to <2 x i64>*
  %293 = load <2 x i64>, <2 x i64>* %292, align 8, !alias.scope !51
  %294 = getelementptr i64, i64* %291, i64 2
  %295 = bitcast i64* %294 to <2 x i64>*
  %296 = load <2 x i64>, <2 x i64>* %295, align 8, !alias.scope !51
  %297 = bitcast i64* %290 to <2 x i64>*
  store <2 x i64> %293, <2 x i64>* %297, align 8, !alias.scope !54, !noalias !51
  %298 = getelementptr i64, i64* %290, i64 2
  %299 = bitcast i64* %298 to <2 x i64>*
  store <2 x i64> %296, <2 x i64>* %299, align 8, !alias.scope !54, !noalias !51
  %300 = add i64 %255, 16
  %301 = add i64 %256, -4
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %303, label %254, !llvm.loop !56

303:                                              ; preds = %254, %243
  %304 = phi i64 [ 0, %243 ], [ %300, %254 ]
  %305 = icmp eq i64 %250, 0
  br i1 %305, label %322, label %306

306:                                              ; preds = %303, %306
  %307 = phi i64 [ %319, %306 ], [ %304, %303 ]
  %308 = phi i64 [ %320, %306 ], [ %250, %303 ]
  %309 = getelementptr i64, i64* %216, i64 %307
  %310 = getelementptr i64, i64* %217, i64 %307
  %311 = bitcast i64* %310 to <2 x i64>*
  %312 = load <2 x i64>, <2 x i64>* %311, align 8, !alias.scope !51
  %313 = getelementptr i64, i64* %310, i64 2
  %314 = bitcast i64* %313 to <2 x i64>*
  %315 = load <2 x i64>, <2 x i64>* %314, align 8, !alias.scope !51
  %316 = bitcast i64* %309 to <2 x i64>*
  store <2 x i64> %312, <2 x i64>* %316, align 8, !alias.scope !54, !noalias !51
  %317 = getelementptr i64, i64* %309, i64 2
  %318 = bitcast i64* %317 to <2 x i64>*
  store <2 x i64> %315, <2 x i64>* %318, align 8, !alias.scope !54, !noalias !51
  %319 = add i64 %307, 4
  %320 = add i64 %308, -1
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %322, label %306, !llvm.loop !57

322:                                              ; preds = %306, %303
  %323 = icmp eq i64 %229, %244
  br i1 %323, label %390, label %324

324:                                              ; preds = %322, %231, %223
  %325 = phi i64* [ %216, %231 ], [ %216, %223 ], [ %245, %322 ]
  %326 = phi i64* [ %217, %231 ], [ %217, %223 ], [ %246, %322 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add nsw i64 %54, -1
  %329 = getelementptr i64, i64* %0, i64 %328
  %330 = ptrtoint i64* %329 to i64
  %331 = sub i64 %330, %327
  %332 = lshr i64 %331, 3
  %333 = add nuw nsw i64 %332, 1
  %334 = and i64 %333, 7
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %345, label %336

336:                                              ; preds = %324, %336
  %337 = phi i64* [ %342, %336 ], [ %325, %324 ]
  %338 = phi i64* [ %341, %336 ], [ %326, %324 ]
  %339 = phi i64 [ %343, %336 ], [ %334, %324 ]
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %337, align 8
  %341 = getelementptr inbounds i64, i64* %338, i64 1
  %342 = getelementptr inbounds i64, i64* %337, i64 1
  %343 = add i64 %339, -1
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %345, label %336, !llvm.loop !58

345:                                              ; preds = %336, %324
  %346 = phi i64* [ %325, %324 ], [ %342, %336 ]
  %347 = phi i64* [ %326, %324 ], [ %341, %336 ]
  %348 = icmp ult i64 %331, 56
  br i1 %348, label %390, label %349

349:                                              ; preds = %345, %349
  %350 = phi i64* [ %375, %349 ], [ %346, %345 ]
  %351 = phi i64* [ %374, %349 ], [ %347, %345 ]
  %352 = load i64, i64* %351, align 8
  store i64 %352, i64* %350, align 8
  %353 = getelementptr inbounds i64, i64* %351, i64 1
  %354 = getelementptr inbounds i64, i64* %350, i64 1
  %355 = load i64, i64* %353, align 8
  store i64 %355, i64* %354, align 8
  %356 = getelementptr inbounds i64, i64* %351, i64 2
  %357 = getelementptr inbounds i64, i64* %350, i64 2
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  %359 = getelementptr inbounds i64, i64* %351, i64 3
  %360 = getelementptr inbounds i64, i64* %350, i64 3
  %361 = load i64, i64* %359, align 8
  store i64 %361, i64* %360, align 8
  %362 = getelementptr inbounds i64, i64* %351, i64 4
  %363 = getelementptr inbounds i64, i64* %350, i64 4
  %364 = load i64, i64* %362, align 8
  store i64 %364, i64* %363, align 8
  %365 = getelementptr inbounds i64, i64* %351, i64 5
  %366 = getelementptr inbounds i64, i64* %350, i64 5
  %367 = load i64, i64* %365, align 8
  store i64 %367, i64* %366, align 8
  %368 = getelementptr inbounds i64, i64* %351, i64 6
  %369 = getelementptr inbounds i64, i64* %350, i64 6
  %370 = load i64, i64* %368, align 8
  store i64 %370, i64* %369, align 8
  %371 = getelementptr inbounds i64, i64* %351, i64 7
  %372 = getelementptr inbounds i64, i64* %350, i64 7
  %373 = load i64, i64* %371, align 8
  store i64 %373, i64* %372, align 8
  %374 = getelementptr inbounds i64, i64* %351, i64 8
  %375 = getelementptr inbounds i64, i64* %350, i64 8
  %376 = icmp eq i64* %374, %55
  br i1 %376, label %390, label %349, !llvm.loop !59

377:                                              ; preds = %215
  %378 = load i64, i64* %218, align 8
  %379 = load i64, i64* %217, align 8
  %380 = icmp slt i64 %378, %379
  br i1 %380, label %381, label %383

381:                                              ; preds = %377
  store i64 %378, i64* %216, align 8
  %382 = getelementptr inbounds i64, i64* %218, i64 1
  br label %385

383:                                              ; preds = %377
  store i64 %379, i64* %216, align 8
  %384 = getelementptr inbounds i64, i64* %217, i64 1
  br label %385

385:                                              ; preds = %383, %381
  %386 = phi i64* [ %382, %381 ], [ %218, %383 ]
  %387 = phi i64* [ %217, %381 ], [ %384, %383 ]
  %388 = getelementptr inbounds i64, i64* %216, i64 1
  %389 = icmp eq i64* %387, %55
  br i1 %389, label %59, label %215

390:                                              ; preds = %345, %349, %183, %187, %48, %322, %161, %220, %59, %23, %21, %13, %16, %5, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64*, i64*, i64*, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1), i64, i64, i64*, i64) local_unnamed_addr #1 comdat {
  %9 = ptrtoint i64* %6 to i64
  %10 = icmp eq i64 %5, 0
  br i1 %10, label %887, label %11

11:                                               ; preds = %8
  %12 = ptrtoint i64* %1 to i64
  %13 = ptrtoint i64* %0 to i64
  br label %14

14:                                               ; preds = %11, %880
  %15 = phi i64* [ %885, %880 ], [ %2, %11 ]
  %16 = phi i64 [ %884, %880 ], [ %4, %11 ]
  %17 = phi i64 [ %883, %880 ], [ %5, %11 ]
  %18 = phi i64 [ %882, %880 ], [ %12, %11 ]
  %19 = phi i64 [ %881, %880 ], [ %13, %11 ]
  %20 = icmp sgt i64 %16, %7
  %21 = icmp sgt i64 %17, %7
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %28

23:                                               ; preds = %14
  %24 = icmp eq i64 %16, 0
  br i1 %24, label %887, label %25

25:                                               ; preds = %23
  %26 = inttoptr i64 %18 to i64*
  %27 = load i64, i64* %26, align 8
  br label %548

28:                                               ; preds = %14
  %29 = inttoptr i64 %19 to i64*
  %30 = inttoptr i64 %19 to i8*
  %31 = inttoptr i64 %18 to i64*
  %32 = inttoptr i64 %18 to i8*
  %33 = icmp sgt i64 %16, %17
  br i1 %33, label %165, label %34

34:                                               ; preds = %28
  %35 = icmp eq i64* %29, %31
  br i1 %35, label %887, label %36

36:                                               ; preds = %34
  %37 = getelementptr i64, i64* %31, i64 -1
  %38 = bitcast i64* %37 to i8*
  %39 = sub i64 0, %19
  %40 = getelementptr i8, i8* %38, i64 %39
  %41 = ptrtoint i8* %40 to i64
  %42 = lshr i64 %41, 3
  %43 = add nuw nsw i64 %42, 1
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %70

45:                                               ; preds = %163, %70, %36
  %46 = phi i64* [ %6, %70 ], [ %6, %36 ], [ %86, %163 ]
  %47 = phi i64* [ %29, %70 ], [ %29, %36 ], [ %87, %163 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = getelementptr i64, i64* %31, i64 -1
  %50 = ptrtoint i64* %49 to i64
  %51 = sub i64 %50, %48
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %45, %56
  %57 = phi i64* [ %62, %56 ], [ %46, %45 ]
  %58 = phi i64* [ %61, %56 ], [ %47, %45 ]
  %59 = phi i64 [ %63, %56 ], [ %54, %45 ]
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %57, align 8
  %61 = getelementptr inbounds i64, i64* %58, i64 1
  %62 = getelementptr inbounds i64, i64* %57, i64 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %56, !llvm.loop !60

65:                                               ; preds = %56, %45
  %66 = phi i64* [ undef, %45 ], [ %62, %56 ]
  %67 = phi i64* [ %46, %45 ], [ %62, %56 ]
  %68 = phi i64* [ %47, %45 ], [ %61, %56 ]
  %69 = icmp ult i64 %51, 56
  br i1 %69, label %296, label %325

70:                                               ; preds = %36
  %71 = getelementptr i64, i64* %31, i64 -1
  %72 = bitcast i64* %71 to i8*
  %73 = sub i64 0, %19
  %74 = getelementptr i8, i8* %72, i64 %73
  %75 = ptrtoint i8* %74 to i64
  %76 = lshr i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = getelementptr i64, i64* %6, i64 %77
  %79 = bitcast i64* %78 to i8*
  %80 = getelementptr i64, i64* %29, i64 %77
  %81 = icmp ugt i64* %80, %6
  %82 = icmp ult i8* %30, %79
  %83 = and i1 %81, %82
  br i1 %83, label %45, label %84

84:                                               ; preds = %70
  %85 = and i64 %43, 4611686018427387900
  %86 = getelementptr i64, i64* %6, i64 %85
  %87 = getelementptr i64, i64* %29, i64 %85
  %88 = add nsw i64 %85, -4
  %89 = lshr exact i64 %88, 2
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 12
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr i64, i64* %6, i64 %96
  %99 = getelementptr i64, i64* %29, i64 %96
  %100 = bitcast i64* %99 to <2 x i64>*
  %101 = load <2 x i64>, <2 x i64>* %100, align 8, !alias.scope !61
  %102 = getelementptr i64, i64* %99, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !61
  %105 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %105, align 8, !alias.scope !64, !noalias !61
  %106 = getelementptr i64, i64* %98, i64 2
  %107 = bitcast i64* %106 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %107, align 8, !alias.scope !64, !noalias !61
  %108 = or i64 %96, 4
  %109 = getelementptr i64, i64* %6, i64 %108
  %110 = getelementptr i64, i64* %29, i64 %108
  %111 = bitcast i64* %110 to <2 x i64>*
  %112 = load <2 x i64>, <2 x i64>* %111, align 8, !alias.scope !61
  %113 = getelementptr i64, i64* %110, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  %115 = load <2 x i64>, <2 x i64>* %114, align 8, !alias.scope !61
  %116 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %116, align 8, !alias.scope !64, !noalias !61
  %117 = getelementptr i64, i64* %109, i64 2
  %118 = bitcast i64* %117 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %118, align 8, !alias.scope !64, !noalias !61
  %119 = or i64 %96, 8
  %120 = getelementptr i64, i64* %6, i64 %119
  %121 = getelementptr i64, i64* %29, i64 %119
  %122 = bitcast i64* %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !61
  %124 = getelementptr i64, i64* %121, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !61
  %127 = bitcast i64* %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !64, !noalias !61
  %128 = getelementptr i64, i64* %120, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !64, !noalias !61
  %130 = or i64 %96, 12
  %131 = getelementptr i64, i64* %6, i64 %130
  %132 = getelementptr i64, i64* %29, i64 %130
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8, !alias.scope !61
  %135 = getelementptr i64, i64* %132, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  %137 = load <2 x i64>, <2 x i64>* %136, align 8, !alias.scope !61
  %138 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> %134, <2 x i64>* %138, align 8, !alias.scope !64, !noalias !61
  %139 = getelementptr i64, i64* %131, i64 2
  %140 = bitcast i64* %139 to <2 x i64>*
  store <2 x i64> %137, <2 x i64>* %140, align 8, !alias.scope !64, !noalias !61
  %141 = add i64 %96, 16
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !66

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr i64, i64* %6, i64 %148
  %151 = getelementptr i64, i64* %29, i64 %148
  %152 = bitcast i64* %151 to <2 x i64>*
  %153 = load <2 x i64>, <2 x i64>* %152, align 8, !alias.scope !61
  %154 = getelementptr i64, i64* %151, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  %156 = load <2 x i64>, <2 x i64>* %155, align 8, !alias.scope !61
  %157 = bitcast i64* %150 to <2 x i64>*
  store <2 x i64> %153, <2 x i64>* %157, align 8, !alias.scope !64, !noalias !61
  %158 = getelementptr i64, i64* %150, i64 2
  %159 = bitcast i64* %158 to <2 x i64>*
  store <2 x i64> %156, <2 x i64>* %159, align 8, !alias.scope !64, !noalias !61
  %160 = add i64 %148, 4
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !67

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %43, %85
  br i1 %164, label %296, label %45

165:                                              ; preds = %28
  %166 = icmp eq i64* %15, %31
  br i1 %166, label %887, label %167

167:                                              ; preds = %165
  %168 = getelementptr i64, i64* %15, i64 -1
  %169 = bitcast i64* %168 to i8*
  %170 = sub i64 0, %18
  %171 = getelementptr i8, i8* %169, i64 %170
  %172 = ptrtoint i8* %171 to i64
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = icmp ult i64 %174, 4
  br i1 %175, label %176, label %201

176:                                              ; preds = %294, %201, %167
  %177 = phi i64* [ %6, %201 ], [ %6, %167 ], [ %217, %294 ]
  %178 = phi i64* [ %31, %201 ], [ %31, %167 ], [ %218, %294 ]
  %179 = ptrtoint i64* %178 to i64
  %180 = getelementptr i64, i64* %15, i64 -1
  %181 = ptrtoint i64* %180 to i64
  %182 = sub i64 %181, %179
  %183 = lshr i64 %182, 3
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 7
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %196, label %187

187:                                              ; preds = %176, %187
  %188 = phi i64* [ %193, %187 ], [ %177, %176 ]
  %189 = phi i64* [ %192, %187 ], [ %178, %176 ]
  %190 = phi i64 [ %194, %187 ], [ %185, %176 ]
  %191 = load i64, i64* %189, align 8
  store i64 %191, i64* %188, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %188, i64 1
  %194 = add i64 %190, -1
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %187, !llvm.loop !68

196:                                              ; preds = %187, %176
  %197 = phi i64* [ undef, %176 ], [ %193, %187 ]
  %198 = phi i64* [ %177, %176 ], [ %193, %187 ]
  %199 = phi i64* [ %178, %176 ], [ %192, %187 ]
  %200 = icmp ult i64 %182, 56
  br i1 %200, label %353, label %520

201:                                              ; preds = %167
  %202 = getelementptr i64, i64* %15, i64 -1
  %203 = bitcast i64* %202 to i8*
  %204 = sub i64 0, %18
  %205 = getelementptr i8, i8* %203, i64 %204
  %206 = ptrtoint i8* %205 to i64
  %207 = lshr i64 %206, 3
  %208 = add nuw nsw i64 %207, 1
  %209 = getelementptr i64, i64* %6, i64 %208
  %210 = bitcast i64* %209 to i8*
  %211 = getelementptr i64, i64* %31, i64 %208
  %212 = icmp ugt i64* %211, %6
  %213 = icmp ult i8* %32, %210
  %214 = and i1 %212, %213
  br i1 %214, label %176, label %215

215:                                              ; preds = %201
  %216 = and i64 %174, 4611686018427387900
  %217 = getelementptr i64, i64* %6, i64 %216
  %218 = getelementptr i64, i64* %31, i64 %216
  %219 = add nsw i64 %216, -4
  %220 = lshr exact i64 %219, 2
  %221 = add nuw nsw i64 %220, 1
  %222 = and i64 %221, 3
  %223 = icmp ult i64 %219, 12
  br i1 %223, label %275, label %224

224:                                              ; preds = %215
  %225 = sub nsw i64 %221, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %272, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %273, %226 ]
  %229 = getelementptr i64, i64* %6, i64 %227
  %230 = getelementptr i64, i64* %31, i64 %227
  %231 = bitcast i64* %230 to <2 x i64>*
  %232 = load <2 x i64>, <2 x i64>* %231, align 8, !alias.scope !69
  %233 = getelementptr i64, i64* %230, i64 2
  %234 = bitcast i64* %233 to <2 x i64>*
  %235 = load <2 x i64>, <2 x i64>* %234, align 8, !alias.scope !69
  %236 = bitcast i64* %229 to <2 x i64>*
  store <2 x i64> %232, <2 x i64>* %236, align 8, !alias.scope !72, !noalias !69
  %237 = getelementptr i64, i64* %229, i64 2
  %238 = bitcast i64* %237 to <2 x i64>*
  store <2 x i64> %235, <2 x i64>* %238, align 8, !alias.scope !72, !noalias !69
  %239 = or i64 %227, 4
  %240 = getelementptr i64, i64* %6, i64 %239
  %241 = getelementptr i64, i64* %31, i64 %239
  %242 = bitcast i64* %241 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8, !alias.scope !69
  %244 = getelementptr i64, i64* %241, i64 2
  %245 = bitcast i64* %244 to <2 x i64>*
  %246 = load <2 x i64>, <2 x i64>* %245, align 8, !alias.scope !69
  %247 = bitcast i64* %240 to <2 x i64>*
  store <2 x i64> %243, <2 x i64>* %247, align 8, !alias.scope !72, !noalias !69
  %248 = getelementptr i64, i64* %240, i64 2
  %249 = bitcast i64* %248 to <2 x i64>*
  store <2 x i64> %246, <2 x i64>* %249, align 8, !alias.scope !72, !noalias !69
  %250 = or i64 %227, 8
  %251 = getelementptr i64, i64* %6, i64 %250
  %252 = getelementptr i64, i64* %31, i64 %250
  %253 = bitcast i64* %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !69
  %255 = getelementptr i64, i64* %252, i64 2
  %256 = bitcast i64* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8, !alias.scope !69
  %258 = bitcast i64* %251 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %258, align 8, !alias.scope !72, !noalias !69
  %259 = getelementptr i64, i64* %251, i64 2
  %260 = bitcast i64* %259 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %260, align 8, !alias.scope !72, !noalias !69
  %261 = or i64 %227, 12
  %262 = getelementptr i64, i64* %6, i64 %261
  %263 = getelementptr i64, i64* %31, i64 %261
  %264 = bitcast i64* %263 to <2 x i64>*
  %265 = load <2 x i64>, <2 x i64>* %264, align 8, !alias.scope !69
  %266 = getelementptr i64, i64* %263, i64 2
  %267 = bitcast i64* %266 to <2 x i64>*
  %268 = load <2 x i64>, <2 x i64>* %267, align 8, !alias.scope !69
  %269 = bitcast i64* %262 to <2 x i64>*
  store <2 x i64> %265, <2 x i64>* %269, align 8, !alias.scope !72, !noalias !69
  %270 = getelementptr i64, i64* %262, i64 2
  %271 = bitcast i64* %270 to <2 x i64>*
  store <2 x i64> %268, <2 x i64>* %271, align 8, !alias.scope !72, !noalias !69
  %272 = add i64 %227, 16
  %273 = add i64 %228, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %226, !llvm.loop !74

275:                                              ; preds = %226, %215
  %276 = phi i64 [ 0, %215 ], [ %272, %226 ]
  %277 = icmp eq i64 %222, 0
  br i1 %277, label %294, label %278

278:                                              ; preds = %275, %278
  %279 = phi i64 [ %291, %278 ], [ %276, %275 ]
  %280 = phi i64 [ %292, %278 ], [ %222, %275 ]
  %281 = getelementptr i64, i64* %6, i64 %279
  %282 = getelementptr i64, i64* %31, i64 %279
  %283 = bitcast i64* %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !69
  %285 = getelementptr i64, i64* %282, i64 2
  %286 = bitcast i64* %285 to <2 x i64>*
  %287 = load <2 x i64>, <2 x i64>* %286, align 8, !alias.scope !69
  %288 = bitcast i64* %281 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %288, align 8, !alias.scope !72, !noalias !69
  %289 = getelementptr i64, i64* %281, i64 2
  %290 = bitcast i64* %289 to <2 x i64>*
  store <2 x i64> %287, <2 x i64>* %290, align 8, !alias.scope !72, !noalias !69
  %291 = add i64 %279, 4
  %292 = add i64 %280, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %278, !llvm.loop !75

294:                                              ; preds = %278, %275
  %295 = icmp eq i64 %174, %216
  br i1 %295, label %353, label %176

296:                                              ; preds = %65, %325, %163
  %297 = phi i64* [ %86, %163 ], [ %66, %65 ], [ %351, %325 ]
  %298 = icmp eq i64* %297, %6
  br i1 %298, label %887, label %299

299:                                              ; preds = %296, %320
  %300 = phi i64* [ %322, %320 ], [ %6, %296 ]
  %301 = phi i64* [ %323, %320 ], [ %29, %296 ]
  %302 = phi i64* [ %321, %320 ], [ %31, %296 ]
  %303 = icmp eq i64* %302, %15
  br i1 %303, label %304, label %312

304:                                              ; preds = %299
  %305 = ptrtoint i64* %297 to i64
  %306 = ptrtoint i64* %300 to i64
  %307 = sub i64 %305, %306
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %887, label %309

309:                                              ; preds = %304
  %310 = bitcast i64* %301 to i8*
  %311 = bitcast i64* %300 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 %307, i1 false) #12
  br label %887

312:                                              ; preds = %299
  %313 = load i64, i64* %302, align 8
  %314 = load i64, i64* %300, align 8
  %315 = icmp slt i64 %313, %314
  br i1 %315, label %316, label %318

316:                                              ; preds = %312
  store i64 %313, i64* %301, align 8
  %317 = getelementptr inbounds i64, i64* %302, i64 1
  br label %320

318:                                              ; preds = %312
  store i64 %314, i64* %301, align 8
  %319 = getelementptr inbounds i64, i64* %300, i64 1
  br label %320

320:                                              ; preds = %318, %316
  %321 = phi i64* [ %317, %316 ], [ %302, %318 ]
  %322 = phi i64* [ %300, %316 ], [ %319, %318 ]
  %323 = getelementptr inbounds i64, i64* %301, i64 1
  %324 = icmp eq i64* %322, %297
  br i1 %324, label %887, label %299

325:                                              ; preds = %65, %325
  %326 = phi i64* [ %351, %325 ], [ %67, %65 ]
  %327 = phi i64* [ %350, %325 ], [ %68, %65 ]
  %328 = load i64, i64* %327, align 8
  store i64 %328, i64* %326, align 8
  %329 = getelementptr inbounds i64, i64* %327, i64 1
  %330 = getelementptr inbounds i64, i64* %326, i64 1
  %331 = load i64, i64* %329, align 8
  store i64 %331, i64* %330, align 8
  %332 = getelementptr inbounds i64, i64* %327, i64 2
  %333 = getelementptr inbounds i64, i64* %326, i64 2
  %334 = load i64, i64* %332, align 8
  store i64 %334, i64* %333, align 8
  %335 = getelementptr inbounds i64, i64* %327, i64 3
  %336 = getelementptr inbounds i64, i64* %326, i64 3
  %337 = load i64, i64* %335, align 8
  store i64 %337, i64* %336, align 8
  %338 = getelementptr inbounds i64, i64* %327, i64 4
  %339 = getelementptr inbounds i64, i64* %326, i64 4
  %340 = load i64, i64* %338, align 8
  store i64 %340, i64* %339, align 8
  %341 = getelementptr inbounds i64, i64* %327, i64 5
  %342 = getelementptr inbounds i64, i64* %326, i64 5
  %343 = load i64, i64* %341, align 8
  store i64 %343, i64* %342, align 8
  %344 = getelementptr inbounds i64, i64* %327, i64 6
  %345 = getelementptr inbounds i64, i64* %326, i64 6
  %346 = load i64, i64* %344, align 8
  store i64 %346, i64* %345, align 8
  %347 = getelementptr inbounds i64, i64* %327, i64 7
  %348 = getelementptr inbounds i64, i64* %326, i64 7
  %349 = load i64, i64* %347, align 8
  store i64 %349, i64* %348, align 8
  %350 = getelementptr inbounds i64, i64* %327, i64 8
  %351 = getelementptr inbounds i64, i64* %326, i64 8
  %352 = icmp eq i64* %350, %31
  br i1 %352, label %296, label %325, !llvm.loop !76

353:                                              ; preds = %196, %520, %294
  %354 = phi i64* [ %217, %294 ], [ %197, %196 ], [ %546, %520 ]
  %355 = icmp eq i64* %354, %6
  br i1 %355, label %887, label %356

356:                                              ; preds = %353, %509
  %357 = phi i64* [ %515, %509 ], [ %15, %353 ]
  %358 = phi i64* [ %518, %509 ], [ %354, %353 ]
  %359 = phi i64* [ %517, %509 ], [ %31, %353 ]
  %360 = icmp eq i64* %359, %29
  br i1 %360, label %361, label %509

361:                                              ; preds = %356
  %362 = getelementptr i64, i64* %358, i64 -1
  %363 = ptrtoint i64* %362 to i64
  %364 = sub i64 %363, %9
  %365 = lshr i64 %364, 3
  %366 = add nuw nsw i64 %365, 1
  %367 = icmp ult i64 %366, 4
  br i1 %367, label %458, label %368

368:                                              ; preds = %361
  %369 = getelementptr i64, i64* %358, i64 -1
  %370 = ptrtoint i64* %369 to i64
  %371 = sub i64 %370, %9
  %372 = lshr i64 %371, 3
  %373 = xor i64 %372, -1
  %374 = getelementptr i64, i64* %357, i64 %373
  %375 = getelementptr i64, i64* %358, i64 %373
  %376 = icmp ult i64* %374, %358
  %377 = icmp ult i64* %375, %357
  %378 = and i1 %376, %377
  br i1 %378, label %458, label %379

379:                                              ; preds = %368
  %380 = and i64 %366, 4611686018427387900
  %381 = sub nsw i64 0, %380
  %382 = getelementptr i64, i64* %358, i64 %381
  %383 = sub nsw i64 0, %380
  %384 = getelementptr i64, i64* %357, i64 %383
  %385 = add nsw i64 %380, -4
  %386 = lshr exact i64 %385, 2
  %387 = add nuw nsw i64 %386, 1
  %388 = and i64 %387, 1
  %389 = icmp eq i64 %385, 0
  br i1 %389, label %436, label %390

390:                                              ; preds = %379
  %391 = sub nuw nsw i64 %387, %388
  %392 = getelementptr i64, i64* %358, i64 -1
  %393 = getelementptr i64, i64* %357, i64 -1
  %394 = getelementptr i64, i64* %358, i64 -1
  %395 = getelementptr i64, i64* %357, i64 -1
  br label %396

396:                                              ; preds = %396, %390
  %397 = phi i64 [ 0, %390 ], [ %431, %396 ]
  %398 = phi i64 [ %391, %390 ], [ %432, %396 ]
  %399 = sub i64 0, %397
  %400 = sub i64 0, %397
  %401 = getelementptr inbounds i64, i64* %392, i64 %399
  %402 = getelementptr inbounds i64, i64* %401, i64 -1
  %403 = bitcast i64* %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !77
  %405 = getelementptr inbounds i64, i64* %401, i64 -2
  %406 = getelementptr inbounds i64, i64* %405, i64 -1
  %407 = bitcast i64* %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !77
  %409 = getelementptr inbounds i64, i64* %393, i64 %400
  %410 = getelementptr inbounds i64, i64* %409, i64 -1
  %411 = bitcast i64* %410 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %411, align 8, !alias.scope !80, !noalias !77
  %412 = getelementptr inbounds i64, i64* %409, i64 -2
  %413 = getelementptr inbounds i64, i64* %412, i64 -1
  %414 = bitcast i64* %413 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %414, align 8, !alias.scope !80, !noalias !77
  %415 = sub nuw nsw i64 -4, %397
  %416 = sub nuw nsw i64 -4, %397
  %417 = getelementptr inbounds i64, i64* %394, i64 %415
  %418 = getelementptr inbounds i64, i64* %417, i64 -1
  %419 = bitcast i64* %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !77
  %421 = getelementptr inbounds i64, i64* %417, i64 -2
  %422 = getelementptr inbounds i64, i64* %421, i64 -1
  %423 = bitcast i64* %422 to <2 x i64>*
  %424 = load <2 x i64>, <2 x i64>* %423, align 8, !alias.scope !77
  %425 = getelementptr inbounds i64, i64* %395, i64 %416
  %426 = getelementptr inbounds i64, i64* %425, i64 -1
  %427 = bitcast i64* %426 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %427, align 8, !alias.scope !80, !noalias !77
  %428 = getelementptr inbounds i64, i64* %425, i64 -2
  %429 = getelementptr inbounds i64, i64* %428, i64 -1
  %430 = bitcast i64* %429 to <2 x i64>*
  store <2 x i64> %424, <2 x i64>* %430, align 8, !alias.scope !80, !noalias !77
  %431 = add i64 %397, 8
  %432 = add i64 %398, -2
  %433 = icmp eq i64 %432, 0
  br i1 %433, label %434, label %396, !llvm.loop !82

434:                                              ; preds = %396
  %435 = sub nuw nsw i64 -8, %397
  br label %436

436:                                              ; preds = %434, %379
  %437 = phi i64 [ 0, %379 ], [ %435, %434 ]
  %438 = icmp eq i64 %388, 0
  br i1 %438, label %456, label %439

439:                                              ; preds = %436
  %440 = getelementptr i64, i64* %358, i64 -1
  %441 = getelementptr i64, i64* %357, i64 -1
  %442 = getelementptr inbounds i64, i64* %440, i64 %437
  %443 = getelementptr inbounds i64, i64* %442, i64 -1
  %444 = bitcast i64* %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !77
  %446 = getelementptr inbounds i64, i64* %442, i64 -2
  %447 = getelementptr inbounds i64, i64* %446, i64 -1
  %448 = bitcast i64* %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !77
  %450 = getelementptr inbounds i64, i64* %441, i64 %437
  %451 = getelementptr inbounds i64, i64* %450, i64 -1
  %452 = bitcast i64* %451 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %452, align 8, !alias.scope !80, !noalias !77
  %453 = getelementptr inbounds i64, i64* %450, i64 -2
  %454 = getelementptr inbounds i64, i64* %453, i64 -1
  %455 = bitcast i64* %454 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %455, align 8, !alias.scope !80, !noalias !77
  br label %456

456:                                              ; preds = %436, %439
  %457 = icmp eq i64 %366, %380
  br i1 %457, label %887, label %458

458:                                              ; preds = %456, %368, %361
  %459 = phi i64* [ %358, %368 ], [ %358, %361 ], [ %382, %456 ]
  %460 = phi i64* [ %357, %368 ], [ %357, %361 ], [ %384, %456 ]
  %461 = getelementptr i64, i64* %459, i64 -1
  %462 = ptrtoint i64* %461 to i64
  %463 = sub i64 %462, %9
  %464 = lshr i64 %463, 3
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 7
  %467 = icmp eq i64 %466, 0
  br i1 %467, label %477, label %468

468:                                              ; preds = %458, %468
  %469 = phi i64* [ %472, %468 ], [ %459, %458 ]
  %470 = phi i64* [ %474, %468 ], [ %460, %458 ]
  %471 = phi i64 [ %475, %468 ], [ %466, %458 ]
  %472 = getelementptr inbounds i64, i64* %469, i64 -1
  %473 = load i64, i64* %472, align 8
  %474 = getelementptr inbounds i64, i64* %470, i64 -1
  store i64 %473, i64* %474, align 8
  %475 = add i64 %471, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %468, !llvm.loop !83

477:                                              ; preds = %468, %458
  %478 = phi i64* [ %459, %458 ], [ %472, %468 ]
  %479 = phi i64* [ %460, %458 ], [ %474, %468 ]
  %480 = icmp ult i64 %463, 56
  br i1 %480, label %887, label %481

481:                                              ; preds = %477, %481
  %482 = phi i64* [ %505, %481 ], [ %478, %477 ]
  %483 = phi i64* [ %507, %481 ], [ %479, %477 ]
  %484 = getelementptr inbounds i64, i64* %482, i64 -1
  %485 = load i64, i64* %484, align 8
  %486 = getelementptr inbounds i64, i64* %483, i64 -1
  store i64 %485, i64* %486, align 8
  %487 = getelementptr inbounds i64, i64* %482, i64 -2
  %488 = load i64, i64* %487, align 8
  %489 = getelementptr inbounds i64, i64* %483, i64 -2
  store i64 %488, i64* %489, align 8
  %490 = getelementptr inbounds i64, i64* %482, i64 -3
  %491 = load i64, i64* %490, align 8
  %492 = getelementptr inbounds i64, i64* %483, i64 -3
  store i64 %491, i64* %492, align 8
  %493 = getelementptr inbounds i64, i64* %482, i64 -4
  %494 = load i64, i64* %493, align 8
  %495 = getelementptr inbounds i64, i64* %483, i64 -4
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds i64, i64* %482, i64 -5
  %497 = load i64, i64* %496, align 8
  %498 = getelementptr inbounds i64, i64* %483, i64 -5
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds i64, i64* %482, i64 -6
  %500 = load i64, i64* %499, align 8
  %501 = getelementptr inbounds i64, i64* %483, i64 -6
  store i64 %500, i64* %501, align 8
  %502 = getelementptr inbounds i64, i64* %482, i64 -7
  %503 = load i64, i64* %502, align 8
  %504 = getelementptr inbounds i64, i64* %483, i64 -7
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds i64, i64* %482, i64 -8
  %506 = load i64, i64* %505, align 8
  %507 = getelementptr inbounds i64, i64* %483, i64 -8
  store i64 %506, i64* %507, align 8
  %508 = icmp eq i64* %505, %6
  br i1 %508, label %887, label %481, !llvm.loop !84

509:                                              ; preds = %356
  %510 = getelementptr inbounds i64, i64* %359, i64 -1
  %511 = getelementptr inbounds i64, i64* %358, i64 -1
  %512 = load i64, i64* %511, align 8
  %513 = load i64, i64* %510, align 8
  %514 = icmp slt i64 %512, %513
  %515 = getelementptr inbounds i64, i64* %357, i64 -1
  %516 = select i1 %514, i64 %513, i64 %512
  %517 = select i1 %514, i64* %510, i64* %359
  %518 = select i1 %514, i64* %358, i64* %511
  store i64 %516, i64* %515, align 8
  %519 = icmp eq i64* %518, %6
  br i1 %519, label %887, label %356

520:                                              ; preds = %196, %520
  %521 = phi i64* [ %546, %520 ], [ %198, %196 ]
  %522 = phi i64* [ %545, %520 ], [ %199, %196 ]
  %523 = load i64, i64* %522, align 8
  store i64 %523, i64* %521, align 8
  %524 = getelementptr inbounds i64, i64* %522, i64 1
  %525 = getelementptr inbounds i64, i64* %521, i64 1
  %526 = load i64, i64* %524, align 8
  store i64 %526, i64* %525, align 8
  %527 = getelementptr inbounds i64, i64* %522, i64 2
  %528 = getelementptr inbounds i64, i64* %521, i64 2
  %529 = load i64, i64* %527, align 8
  store i64 %529, i64* %528, align 8
  %530 = getelementptr inbounds i64, i64* %522, i64 3
  %531 = getelementptr inbounds i64, i64* %521, i64 3
  %532 = load i64, i64* %530, align 8
  store i64 %532, i64* %531, align 8
  %533 = getelementptr inbounds i64, i64* %522, i64 4
  %534 = getelementptr inbounds i64, i64* %521, i64 4
  %535 = load i64, i64* %533, align 8
  store i64 %535, i64* %534, align 8
  %536 = getelementptr inbounds i64, i64* %522, i64 5
  %537 = getelementptr inbounds i64, i64* %521, i64 5
  %538 = load i64, i64* %536, align 8
  store i64 %538, i64* %537, align 8
  %539 = getelementptr inbounds i64, i64* %522, i64 6
  %540 = getelementptr inbounds i64, i64* %521, i64 6
  %541 = load i64, i64* %539, align 8
  store i64 %541, i64* %540, align 8
  %542 = getelementptr inbounds i64, i64* %522, i64 7
  %543 = getelementptr inbounds i64, i64* %521, i64 7
  %544 = load i64, i64* %542, align 8
  store i64 %544, i64* %543, align 8
  %545 = getelementptr inbounds i64, i64* %522, i64 8
  %546 = getelementptr inbounds i64, i64* %521, i64 8
  %547 = icmp eq i64* %545, %15
  br i1 %547, label %353, label %520, !llvm.loop !85

548:                                              ; preds = %25, %554
  %549 = phi i64 [ %16, %25 ], [ %557, %554 ]
  %550 = phi i64 [ %19, %25 ], [ %556, %554 ]
  %551 = inttoptr i64 %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = icmp slt i64 %27, %552
  br i1 %553, label %559, label %554

554:                                              ; preds = %548
  %555 = getelementptr inbounds i64, i64* %551, i64 1
  %556 = ptrtoint i64* %555 to i64
  %557 = add nsw i64 %549, -1
  %558 = icmp eq i64 %557, 0
  br i1 %558, label %887, label %548

559:                                              ; preds = %548
  %560 = inttoptr i64 %550 to i64*
  %561 = icmp slt i64 %549, %17
  br i1 %561, label %562, label %589

562:                                              ; preds = %559
  %563 = sdiv i64 %17, 2
  %564 = getelementptr inbounds i64, i64* %26, i64 %563
  %565 = ptrtoint i64* %564 to i64
  %566 = sub i64 %18, %550
  %567 = icmp eq i64 %566, 0
  br i1 %567, label %584, label %568

568:                                              ; preds = %562
  %569 = ashr exact i64 %566, 3
  %570 = load i64, i64* %564, align 8
  br label %571

571:                                              ; preds = %571, %568
  %572 = phi i64* [ %560, %568 ], [ %582, %571 ]
  %573 = phi i64 [ %569, %568 ], [ %581, %571 ]
  %574 = lshr i64 %573, 1
  %575 = getelementptr inbounds i64, i64* %572, i64 %574
  %576 = load i64, i64* %575, align 8
  %577 = icmp slt i64 %570, %576
  %578 = getelementptr inbounds i64, i64* %575, i64 1
  %579 = xor i64 %574, -1
  %580 = add i64 %573, %579
  %581 = select i1 %577, i64 %574, i64 %580
  %582 = select i1 %577, i64* %572, i64* %578
  %583 = icmp eq i64 %581, 0
  br i1 %583, label %584, label %571

584:                                              ; preds = %571, %562
  %585 = phi i64* [ %560, %562 ], [ %582, %571 ]
  %586 = ptrtoint i64* %585 to i64
  %587 = sub i64 %586, %550
  %588 = ashr exact i64 %587, 3
  br label %622

589:                                              ; preds = %559
  %590 = icmp eq i64 %549, 1
  br i1 %590, label %591, label %594

591:                                              ; preds = %589
  %592 = inttoptr i64 %18 to i64*
  %593 = inttoptr i64 %550 to i64*
  store i64 %27, i64* %593, align 8
  store i64 %552, i64* %592, align 8
  br label %887

594:                                              ; preds = %589
  %595 = sdiv i64 %549, 2
  %596 = getelementptr inbounds i64, i64* %560, i64 %595
  %597 = ptrtoint i64* %596 to i64
  %598 = ptrtoint i64* %15 to i64
  %599 = sub i64 %598, %18
  %600 = icmp eq i64 %599, 0
  br i1 %600, label %617, label %601

601:                                              ; preds = %594
  %602 = ashr exact i64 %599, 3
  %603 = load i64, i64* %596, align 8
  br label %604

604:                                              ; preds = %604, %601
  %605 = phi i64* [ %26, %601 ], [ %615, %604 ]
  %606 = phi i64 [ %602, %601 ], [ %614, %604 ]
  %607 = lshr i64 %606, 1
  %608 = getelementptr inbounds i64, i64* %605, i64 %607
  %609 = load i64, i64* %608, align 8
  %610 = icmp slt i64 %609, %603
  %611 = getelementptr inbounds i64, i64* %608, i64 1
  %612 = xor i64 %607, -1
  %613 = add i64 %606, %612
  %614 = select i1 %610, i64 %613, i64 %607
  %615 = select i1 %610, i64* %611, i64* %605
  %616 = icmp eq i64 %614, 0
  br i1 %616, label %617, label %604

617:                                              ; preds = %604, %594
  %618 = phi i64* [ %26, %594 ], [ %615, %604 ]
  %619 = ptrtoint i64* %618 to i64
  %620 = sub i64 %619, %18
  %621 = ashr exact i64 %620, 3
  br label %622

622:                                              ; preds = %617, %584
  %623 = phi i64 [ %586, %584 ], [ %597, %617 ]
  %624 = phi i64 [ %565, %584 ], [ %619, %617 ]
  %625 = phi i64 [ %563, %584 ], [ %621, %617 ]
  %626 = phi i64 [ %588, %584 ], [ %595, %617 ]
  %627 = sub nsw i64 %549, %626
  %628 = sub nsw i64 %17, %625
  %629 = inttoptr i64 %623 to i64*
  %630 = inttoptr i64 %624 to i64*
  %631 = inttoptr i64 %623 to i8*
  %632 = inttoptr i64 %18 to i8*
  %633 = icmp eq i64* %629, %26
  br i1 %633, label %872, label %634

634:                                              ; preds = %622
  %635 = icmp eq i64* %26, %630
  br i1 %635, label %872, label %636

636:                                              ; preds = %634
  %637 = getelementptr inbounds i64, i64* %629, i64 1
  %638 = icmp eq i64* %637, %26
  br i1 %638, label %639, label %647

639:                                              ; preds = %636
  %640 = load i64, i64* %629, align 8
  %641 = sub i64 %624, %18
  %642 = ashr exact i64 %641, 3
  %643 = icmp eq i64 %641, 0
  br i1 %643, label %645, label %644

644:                                              ; preds = %639
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 %641, i1 false) #12
  br label %645

645:                                              ; preds = %644, %639
  %646 = getelementptr inbounds i64, i64* %629, i64 %642
  store i64 %640, i64* %646, align 8
  br label %872

647:                                              ; preds = %636
  %648 = getelementptr inbounds i64, i64* %26, i64 1
  %649 = icmp eq i64* %648, %630
  br i1 %649, label %650, label %663

650:                                              ; preds = %647
  %651 = getelementptr inbounds i64, i64* %630, i64 -1
  %652 = load i64, i64* %651, align 8
  %653 = ptrtoint i64* %651 to i64
  %654 = sub i64 %653, %623
  %655 = icmp eq i64 %654, 0
  br i1 %655, label %661, label %656

656:                                              ; preds = %650
  %657 = ashr exact i64 %654, 3
  %658 = sub nsw i64 0, %657
  %659 = getelementptr inbounds i64, i64* %630, i64 %658
  %660 = bitcast i64* %659 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %660, i8* align 8 %631, i64 %654, i1 false) #12
  br label %661

661:                                              ; preds = %656, %650
  %662 = phi i64* [ %659, %656 ], [ %630, %650 ]
  store i64 %652, i64* %629, align 8
  br label %872

663:                                              ; preds = %647
  %664 = sub i64 %18, %623
  %665 = ashr exact i64 %664, 3
  %666 = sub i64 %624, %18
  %667 = ashr exact i64 %666, 3
  %668 = icmp eq i64 %665, %667
  br i1 %668, label %669, label %814

669:                                              ; preds = %663
  %670 = load i64, i64* %629, align 8
  store i64 %27, i64* %629, align 8
  store i64 %670, i64* %26, align 8
  %671 = getelementptr inbounds i64, i64* %629, i64 1
  %672 = getelementptr inbounds i64, i64* %26, i64 1
  %673 = icmp eq i64* %671, %26
  br i1 %673, label %872, label %674

674:                                              ; preds = %669
  %675 = getelementptr i64, i64* %26, i64 -2
  %676 = bitcast i64* %675 to i8*
  %677 = sub i64 0, %623
  %678 = getelementptr i8, i8* %676, i64 %677
  %679 = ptrtoint i8* %678 to i64
  %680 = lshr i64 %679, 3
  %681 = add nuw nsw i64 %680, 1
  %682 = icmp ult i64 %681, 4
  br i1 %682, label %769, label %683

683:                                              ; preds = %674
  %684 = getelementptr i64, i64* %629, i64 2
  %685 = getelementptr i64, i64* %26, i64 -2
  %686 = bitcast i64* %685 to i8*
  %687 = sub i64 0, %623
  %688 = getelementptr i8, i8* %686, i64 %687
  %689 = ptrtoint i8* %688 to i64
  %690 = lshr i64 %689, 3
  %691 = getelementptr i64, i64* %684, i64 %690
  %692 = getelementptr i64, i64* %26, i64 2
  %693 = getelementptr i64, i64* %692, i64 %690
  %694 = icmp ult i64* %671, %693
  %695 = icmp ult i64* %672, %691
  %696 = and i1 %694, %695
  br i1 %696, label %769, label %697

697:                                              ; preds = %683
  %698 = and i64 %681, 4611686018427387900
  %699 = getelementptr i64, i64* %672, i64 %698
  %700 = getelementptr i64, i64* %671, i64 %698
  %701 = add nsw i64 %698, -4
  %702 = lshr exact i64 %701, 2
  %703 = add nuw nsw i64 %702, 1
  %704 = and i64 %703, 1
  %705 = icmp eq i64 %701, 0
  br i1 %705, label %747, label %706

706:                                              ; preds = %697
  %707 = sub nuw nsw i64 %703, %704
  br label %708

708:                                              ; preds = %708, %706
  %709 = phi i64 [ 0, %706 ], [ %744, %708 ]
  %710 = phi i64 [ %707, %706 ], [ %745, %708 ]
  %711 = getelementptr i64, i64* %672, i64 %709
  %712 = getelementptr i64, i64* %671, i64 %709
  %713 = bitcast i64* %711 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8, !alias.scope !86
  %715 = getelementptr i64, i64* %711, i64 2
  %716 = bitcast i64* %715 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8, !alias.scope !86
  %718 = bitcast i64* %712 to <2 x i64>*
  %719 = load <2 x i64>, <2 x i64>* %718, align 8, !alias.scope !89, !noalias !86
  %720 = getelementptr i64, i64* %712, i64 2
  %721 = bitcast i64* %720 to <2 x i64>*
  %722 = load <2 x i64>, <2 x i64>* %721, align 8, !alias.scope !89, !noalias !86
  %723 = bitcast i64* %712 to <2 x i64>*
  store <2 x i64> %714, <2 x i64>* %723, align 8, !alias.scope !89, !noalias !86
  %724 = bitcast i64* %720 to <2 x i64>*
  store <2 x i64> %717, <2 x i64>* %724, align 8, !alias.scope !89, !noalias !86
  %725 = bitcast i64* %711 to <2 x i64>*
  store <2 x i64> %719, <2 x i64>* %725, align 8, !alias.scope !86
  %726 = bitcast i64* %715 to <2 x i64>*
  store <2 x i64> %722, <2 x i64>* %726, align 8, !alias.scope !86
  %727 = or i64 %709, 4
  %728 = getelementptr i64, i64* %672, i64 %727
  %729 = getelementptr i64, i64* %671, i64 %727
  %730 = bitcast i64* %728 to <2 x i64>*
  %731 = load <2 x i64>, <2 x i64>* %730, align 8, !alias.scope !86
  %732 = getelementptr i64, i64* %728, i64 2
  %733 = bitcast i64* %732 to <2 x i64>*
  %734 = load <2 x i64>, <2 x i64>* %733, align 8, !alias.scope !86
  %735 = bitcast i64* %729 to <2 x i64>*
  %736 = load <2 x i64>, <2 x i64>* %735, align 8, !alias.scope !89, !noalias !86
  %737 = getelementptr i64, i64* %729, i64 2
  %738 = bitcast i64* %737 to <2 x i64>*
  %739 = load <2 x i64>, <2 x i64>* %738, align 8, !alias.scope !89, !noalias !86
  %740 = bitcast i64* %729 to <2 x i64>*
  store <2 x i64> %731, <2 x i64>* %740, align 8, !alias.scope !89, !noalias !86
  %741 = bitcast i64* %737 to <2 x i64>*
  store <2 x i64> %734, <2 x i64>* %741, align 8, !alias.scope !89, !noalias !86
  %742 = bitcast i64* %728 to <2 x i64>*
  store <2 x i64> %736, <2 x i64>* %742, align 8, !alias.scope !86
  %743 = bitcast i64* %732 to <2 x i64>*
  store <2 x i64> %739, <2 x i64>* %743, align 8, !alias.scope !86
  %744 = add i64 %709, 8
  %745 = add i64 %710, -2
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %708, !llvm.loop !91

747:                                              ; preds = %708, %697
  %748 = phi i64 [ 0, %697 ], [ %744, %708 ]
  %749 = icmp eq i64 %704, 0
  br i1 %749, label %767, label %750

750:                                              ; preds = %747
  %751 = getelementptr i64, i64* %672, i64 %748
  %752 = getelementptr i64, i64* %671, i64 %748
  %753 = bitcast i64* %751 to <2 x i64>*
  %754 = load <2 x i64>, <2 x i64>* %753, align 8, !alias.scope !86
  %755 = getelementptr i64, i64* %751, i64 2
  %756 = bitcast i64* %755 to <2 x i64>*
  %757 = load <2 x i64>, <2 x i64>* %756, align 8, !alias.scope !86
  %758 = bitcast i64* %752 to <2 x i64>*
  %759 = load <2 x i64>, <2 x i64>* %758, align 8, !alias.scope !89, !noalias !86
  %760 = getelementptr i64, i64* %752, i64 2
  %761 = bitcast i64* %760 to <2 x i64>*
  %762 = load <2 x i64>, <2 x i64>* %761, align 8, !alias.scope !89, !noalias !86
  %763 = bitcast i64* %752 to <2 x i64>*
  store <2 x i64> %754, <2 x i64>* %763, align 8, !alias.scope !89, !noalias !86
  %764 = bitcast i64* %760 to <2 x i64>*
  store <2 x i64> %757, <2 x i64>* %764, align 8, !alias.scope !89, !noalias !86
  %765 = bitcast i64* %751 to <2 x i64>*
  store <2 x i64> %759, <2 x i64>* %765, align 8, !alias.scope !86
  %766 = bitcast i64* %755 to <2 x i64>*
  store <2 x i64> %762, <2 x i64>* %766, align 8, !alias.scope !86
  br label %767

767:                                              ; preds = %747, %750
  %768 = icmp eq i64 %681, %698
  br i1 %768, label %872, label %769

769:                                              ; preds = %767, %683, %674
  %770 = phi i64* [ %672, %683 ], [ %672, %674 ], [ %699, %767 ]
  %771 = phi i64* [ %671, %683 ], [ %671, %674 ], [ %700, %767 ]
  %772 = ptrtoint i64* %771 to i64
  %773 = getelementptr i64, i64* %26, i64 -1
  %774 = ptrtoint i64* %773 to i64
  %775 = sub i64 %774, %772
  %776 = lshr i64 %775, 3
  %777 = add nuw nsw i64 %776, 1
  %778 = and i64 %777, 3
  %779 = icmp eq i64 %778, 0
  br i1 %779, label %790, label %780

780:                                              ; preds = %769, %780
  %781 = phi i64* [ %787, %780 ], [ %770, %769 ]
  %782 = phi i64* [ %786, %780 ], [ %771, %769 ]
  %783 = phi i64 [ %788, %780 ], [ %778, %769 ]
  %784 = load i64, i64* %781, align 8
  %785 = load i64, i64* %782, align 8
  store i64 %784, i64* %782, align 8
  store i64 %785, i64* %781, align 8
  %786 = getelementptr inbounds i64, i64* %782, i64 1
  %787 = getelementptr inbounds i64, i64* %781, i64 1
  %788 = add i64 %783, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %780, !llvm.loop !92

790:                                              ; preds = %780, %769
  %791 = phi i64* [ %770, %769 ], [ %787, %780 ]
  %792 = phi i64* [ %771, %769 ], [ %786, %780 ]
  %793 = icmp ult i64 %775, 24
  br i1 %793, label %872, label %794

794:                                              ; preds = %790, %794
  %795 = phi i64* [ %812, %794 ], [ %791, %790 ]
  %796 = phi i64* [ %811, %794 ], [ %792, %790 ]
  %797 = load i64, i64* %795, align 8
  %798 = load i64, i64* %796, align 8
  store i64 %797, i64* %796, align 8
  store i64 %798, i64* %795, align 8
  %799 = getelementptr inbounds i64, i64* %796, i64 1
  %800 = getelementptr inbounds i64, i64* %795, i64 1
  %801 = load i64, i64* %800, align 8
  %802 = load i64, i64* %799, align 8
  store i64 %801, i64* %799, align 8
  store i64 %802, i64* %800, align 8
  %803 = getelementptr inbounds i64, i64* %796, i64 2
  %804 = getelementptr inbounds i64, i64* %795, i64 2
  %805 = load i64, i64* %804, align 8
  %806 = load i64, i64* %803, align 8
  store i64 %805, i64* %803, align 8
  store i64 %806, i64* %804, align 8
  %807 = getelementptr inbounds i64, i64* %796, i64 3
  %808 = getelementptr inbounds i64, i64* %795, i64 3
  %809 = load i64, i64* %808, align 8
  %810 = load i64, i64* %807, align 8
  store i64 %809, i64* %807, align 8
  store i64 %810, i64* %808, align 8
  %811 = getelementptr inbounds i64, i64* %796, i64 4
  %812 = getelementptr inbounds i64, i64* %795, i64 4
  %813 = icmp eq i64* %811, %26
  br i1 %813, label %872, label %794, !llvm.loop !93

814:                                              ; preds = %663, %814
  %815 = phi i64 [ %817, %814 ], [ %667, %663 ]
  %816 = phi i64 [ %815, %814 ], [ %665, %663 ]
  %817 = srem i64 %816, %815
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %814

819:                                              ; preds = %814
  %820 = icmp eq i64 %815, 0
  br i1 %820, label %848, label %821

821:                                              ; preds = %819
  %822 = getelementptr inbounds i64, i64* %629, i64 %815
  %823 = shl nsw i64 %815, 3
  %824 = add i64 %823, -8
  %825 = and i64 %824, 8
  %826 = icmp eq i64 %825, 0
  br i1 %826, label %827, label %845

827:                                              ; preds = %821
  %828 = getelementptr inbounds i64, i64* %822, i64 -1
  %829 = load i64, i64* %828, align 8
  %830 = getelementptr inbounds i64, i64* %828, i64 %665
  br label %831

831:                                              ; preds = %831, %827
  %832 = phi i64* [ %828, %827 ], [ %833, %831 ]
  %833 = phi i64* [ %830, %827 ], [ %842, %831 ]
  %834 = ptrtoint i64* %833 to i64
  %835 = load i64, i64* %833, align 8
  store i64 %835, i64* %832, align 8
  %836 = sub i64 %624, %834
  %837 = ashr exact i64 %836, 3
  %838 = icmp slt i64 %665, %837
  %839 = getelementptr inbounds i64, i64* %833, i64 %665
  %840 = sub nsw i64 %665, %837
  %841 = getelementptr inbounds i64, i64* %629, i64 %840
  %842 = select i1 %838, i64* %839, i64* %841
  %843 = icmp eq i64* %842, %828
  br i1 %843, label %844, label %831

844:                                              ; preds = %831
  store i64 %829, i64* %833, align 8
  br label %845

845:                                              ; preds = %844, %821
  %846 = phi i64* [ %828, %844 ], [ %822, %821 ]
  %847 = icmp eq i64 %824, 0
  br i1 %847, label %848, label %850

848:                                              ; preds = %845, %901, %819
  %849 = getelementptr inbounds i64, i64* %629, i64 %667
  br label %872

850:                                              ; preds = %845, %901
  %851 = phi i64* [ %869, %901 ], [ %846, %845 ]
  %852 = getelementptr inbounds i64, i64* %851, i64 -1
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds i64, i64* %852, i64 %665
  br label %855

855:                                              ; preds = %855, %850
  %856 = phi i64* [ %852, %850 ], [ %857, %855 ]
  %857 = phi i64* [ %854, %850 ], [ %866, %855 ]
  %858 = ptrtoint i64* %857 to i64
  %859 = load i64, i64* %857, align 8
  store i64 %859, i64* %856, align 8
  %860 = sub i64 %624, %858
  %861 = ashr exact i64 %860, 3
  %862 = icmp slt i64 %665, %861
  %863 = getelementptr inbounds i64, i64* %857, i64 %665
  %864 = sub nsw i64 %665, %861
  %865 = getelementptr inbounds i64, i64* %629, i64 %864
  %866 = select i1 %862, i64* %863, i64* %865
  %867 = icmp eq i64* %866, %852
  br i1 %867, label %868, label %855

868:                                              ; preds = %855
  store i64 %853, i64* %857, align 8
  %869 = getelementptr inbounds i64, i64* %851, i64 -2
  %870 = load i64, i64* %869, align 8
  %871 = getelementptr inbounds i64, i64* %869, i64 %665
  br label %888

872:                                              ; preds = %790, %794, %669, %767, %622, %634, %645, %661, %848
  %873 = phi i64* [ %629, %634 ], [ %630, %622 ], [ %646, %645 ], [ %662, %661 ], [ %849, %848 ], [ %26, %767 ], [ %26, %669 ], [ %26, %794 ], [ %26, %790 ]
  %874 = add nsw i64 %626, %625
  %875 = add nsw i64 %627, %628
  %876 = icmp slt i64 %874, %875
  br i1 %876, label %877, label %879

877:                                              ; preds = %872
  %878 = ptrtoint i64* %873 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %560, i64* %629, i64* %873, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %626, i64 %625, i64* %6, i64 %7)
  br label %880

879:                                              ; preds = %872
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeIlNS1_8identityENS_4lessIvEENS_6vectorIlNS_9allocatorIlEEEEE13value_compareENS_11__wrap_iterIPlEEEEvT0_SH_SH_T_NS_15iterator_traitsISH_E15difference_typeESL_PNSK_10value_typeEl(i64* %873, i64* %630, i64* %15, %"struct.base::internal::flat_tree<long, base::identity, std::__1::less<void>, std::__1::vector<long, std::__1::allocator<long> > >::value_compare"* dereferenceable(1) %3, i64 %627, i64 %628, i64* %6, i64 %7)
  br label %880

880:                                              ; preds = %877, %879
  %881 = phi i64 [ %878, %877 ], [ %550, %879 ]
  %882 = phi i64 [ %624, %877 ], [ %623, %879 ]
  %883 = phi i64 [ %628, %877 ], [ %625, %879 ]
  %884 = phi i64 [ %627, %877 ], [ %626, %879 ]
  %885 = phi i64* [ %15, %877 ], [ %873, %879 ]
  %886 = icmp eq i64 %883, 0
  br i1 %886, label %887, label %14

887:                                              ; preds = %880, %23, %554, %320, %509, %477, %481, %456, %8, %591, %353, %309, %304, %296, %165, %34
  ret void

888:                                              ; preds = %888, %868
  %889 = phi i64* [ %869, %868 ], [ %890, %888 ]
  %890 = phi i64* [ %871, %868 ], [ %899, %888 ]
  %891 = ptrtoint i64* %890 to i64
  %892 = load i64, i64* %890, align 8
  store i64 %892, i64* %889, align 8
  %893 = sub i64 %624, %891
  %894 = ashr exact i64 %893, 3
  %895 = icmp slt i64 %665, %894
  %896 = getelementptr inbounds i64, i64* %890, i64 %665
  %897 = sub nsw i64 %665, %894
  %898 = getelementptr inbounds i64, i64* %629, i64 %897
  %899 = select i1 %895, i64* %896, i64* %898
  %900 = icmp eq i64* %899, %869
  br i1 %900, label %901, label %888

901:                                              ; preds = %888
  store i64 %870, i64* %890, align 8
  %902 = icmp eq i64* %869, %629
  br i1 %902, label %848, label %850
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNSt3__16vectorIlNS_9allocatorIlEEE7emplaceIJRKlEEENS_11__wrap_iterIPlEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.82"*, i64*, i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = ptrtoint i64* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.121", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 1
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp ult i64* %8, %10
  %12 = ptrtoint i64* %8 to i64
  %13 = ptrtoint i64* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i64* %8, %1
  %16 = load i64, i64* %2, align 8
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i64 %16, i64* %1, align 8
  %18 = getelementptr inbounds i64, i64* %1, i64 1
  %19 = ptrtoint i64* %18 to i64
  %20 = bitcast i64** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i64, i64* %1, i64 1
  %23 = ptrtoint i64* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 3
  %26 = getelementptr inbounds i64, i64* %1, i64 %25
  %27 = bitcast i64** %7 to i64*
  %28 = icmp ult i64* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i64, i64* %8, i64 %30
  %32 = bitcast i64* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 4
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i64* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i64* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i64, i64* %8, i64 %43
  %45 = bitcast i64* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i64, i64* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add nsw i64 %52, 1
  %54 = getelementptr i64, i64* %1, i64 %53
  %55 = icmp ult i64* %8, %54
  %56 = icmp ult i64* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 4611686018427387900
  %60 = getelementptr i64, i64* %8, i64 %59
  %61 = getelementptr i64, i64* %26, i64 %59
  %62 = add nsw i64 %59, -4
  %63 = lshr exact i64 %62, 2
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 12
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i64, i64* %8, i64 %70
  %73 = getelementptr i64, i64* %26, i64 %70
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8, !alias.scope !94
  %76 = getelementptr i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !94
  %79 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> %75, <2 x i64>* %79, align 8, !alias.scope !97, !noalias !94
  %80 = getelementptr i64, i64* %72, i64 2
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %81, align 8, !alias.scope !97, !noalias !94
  %82 = or i64 %70, 4
  %83 = getelementptr i64, i64* %8, i64 %82
  %84 = getelementptr i64, i64* %26, i64 %82
  %85 = bitcast i64* %84 to <2 x i64>*
  %86 = load <2 x i64>, <2 x i64>* %85, align 8, !alias.scope !94
  %87 = getelementptr i64, i64* %84, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !94
  %90 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %86, <2 x i64>* %90, align 8, !alias.scope !97, !noalias !94
  %91 = getelementptr i64, i64* %83, i64 2
  %92 = bitcast i64* %91 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %92, align 8, !alias.scope !97, !noalias !94
  %93 = or i64 %70, 8
  %94 = getelementptr i64, i64* %8, i64 %93
  %95 = getelementptr i64, i64* %26, i64 %93
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !94
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !94
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !97, !noalias !94
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !97, !noalias !94
  %104 = or i64 %70, 12
  %105 = getelementptr i64, i64* %8, i64 %104
  %106 = getelementptr i64, i64* %26, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !94
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !94
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !97, !noalias !94
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !97, !noalias !94
  %115 = add i64 %70, 16
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !99

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i64, i64* %8, i64 %122
  %125 = getelementptr i64, i64* %26, i64 %122
  %126 = bitcast i64* %125 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8, !alias.scope !94
  %128 = getelementptr i64, i64* %125, i64 2
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !94
  %131 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %131, align 8, !alias.scope !97, !noalias !94
  %132 = getelementptr i64, i64* %124, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %133, align 8, !alias.scope !97, !noalias !94
  %134 = add i64 %122, 4
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !100

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i64* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i64* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i64, i64* %8, i64 %146
  %148 = bitcast i64* %147 to i8*
  %149 = bitcast i64* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 %24, i1 false) #12
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i64* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i64* [ %154, %150 ], [ %41, %39 ]
  %153 = load i64, i64* %152, align 8
  store i64 %153, i64* %151, align 8
  %154 = getelementptr inbounds i64, i64* %152, i64 1
  %155 = getelementptr inbounds i64, i64* %151, i64 1
  %156 = icmp ult i64* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !101

157:                                              ; preds = %142, %145
  store i64 %16, i64* %1, align 8
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.82", %"class.std::__1::vector.82"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.121"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #12
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i64** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.82"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.121"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 3
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 2305843009213693951
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.82"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #14
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i64** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 3
  %180 = icmp ult i64 %179, 1152921504606846975
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 3
  store i64* null, i64** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.87"** %165 to %"class.std::__1::__compressed_pair.84"**
  store %"class.std::__1::__compressed_pair.84"* %159, %"class.std::__1::__compressed_pair.84"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 2
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 3
  store i64* null, i64** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.87"** %165 to %"class.std::__1::__compressed_pair.84"**
  store %"class.std::__1::__compressed_pair.84"* %159, %"class.std::__1::__compressed_pair.84"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #14
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 2305843009213693951, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 3
  %200 = tail call i8* @_Znwm(i64 %199) #13
  %201 = bitcast i8* %200 to i64*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i64* [ %201, %196 ], [ null, %185 ]
  store i64* %205, i64** %161, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 %203
  store i64* %206, i64** %163, align 8
  store i64* %206, i64** %162, align 8
  %207 = getelementptr inbounds i64, i64* %205, i64 %204
  store i64* %207, i64** %164, align 8
  call void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_(%"struct.std::__1::__split_buffer.121"* nonnull %5, i64* dereferenceable(8) %2)
  %208 = load i64*, i64** %162, align 8
  %209 = load i64*, i64** %6, align 8
  %210 = ptrtoint i64* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 3
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i64, i64* %208, i64 %213
  store i64* %214, i64** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i64* %214 to i8*
  %218 = bitcast i64* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %211, i1 false) #12
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i64*, i64** %7, align 8
  %221 = icmp eq i64* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i64* %220 to i64
  %224 = bitcast i64** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i64*, i64** %163, align 8
  %228 = getelementptr i64, i64* %220, i64 -1
  %229 = ptrtoint i64* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i64* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i64* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %236, align 8
  %240 = getelementptr inbounds i64, i64* %237, i64 1
  %241 = load i64*, i64** %163, align 8
  %242 = getelementptr inbounds i64, i64* %241, i64 1
  store i64* %242, i64** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !102

245:                                              ; preds = %235, %226
  %246 = phi i64* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i64* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i64* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 24
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i64* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i64* [ %266, %250 ], [ %248, %245 ]
  %253 = load i64, i64* %252, align 8
  store i64 %253, i64* %251, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64*, i64** %163, align 8
  %256 = getelementptr inbounds i64, i64* %255, i64 1
  store i64* %256, i64** %163, align 8
  %257 = load i64, i64* %254, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 2
  %259 = load i64*, i64** %163, align 8
  %260 = getelementptr inbounds i64, i64* %259, i64 1
  store i64* %260, i64** %163, align 8
  %261 = load i64, i64* %258, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 3
  %263 = load i64*, i64** %163, align 8
  %264 = getelementptr inbounds i64, i64* %263, i64 1
  store i64* %264, i64** %163, align 8
  %265 = load i64, i64* %262, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 4
  %267 = load i64*, i64** %163, align 8
  %268 = getelementptr inbounds i64, i64* %267, i64 1
  store i64* %268, i64** %163, align 8
  %269 = icmp eq i64* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i64* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i64* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i64** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i64** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i64** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.121"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i64*
  %287 = inttoptr i64 %278 to i64*
  %288 = icmp eq i64* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i64, i64* %287, i64 -1
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 3
  %294 = xor i64 %293, -1
  %295 = getelementptr i64, i64* %287, i64 %294
  store i64* %295, i64** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #13
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #12
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i64* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i64* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIlRNS_9allocatorIlEEE12emplace_backIJRKlEEEvDpOT_(%"struct.std::__1::__split_buffer.121"*, i64* dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %0, i64 0, i32 2
  %4 = load i64*, i64** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = icmp eq i64* %4, %6
  %8 = ptrtoint i64* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %0, i64 0, i32 1
  %11 = load i64*, i64** %10, align 8
  %12 = bitcast i64* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.121", %"struct.std::__1::__split_buffer.121"* %0, i64 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp ugt i64* %11, %14
  %16 = ptrtoint i64* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i64* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i64, i64* %11, i64 %22
  %24 = ptrtoint i64* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i64* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #12
  %30 = load i64*, i64** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i64* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i64, i64* %23, i64 %26
  store i64* %33, i64** %3, align 8
  %34 = getelementptr inbounds i64, i64* %32, i64 %22
  store i64* %34, i64** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i64** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.121"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #14
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #13
  %48 = bitcast i8* %47 to i64*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i64, i64* %48, i64 %45
  %51 = ptrtoint i64* %50 to i64
  %52 = getelementptr inbounds i64, i64* %48, i64 %41
  %53 = ptrtoint i64* %52 to i64
  %54 = ptrtoint i64* %11 to i64
  %55 = ptrtoint i64* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds i64, i64* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i64, i64* %11, i64 %74
  %76 = bitcast i64* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr i64, i64* %50, i64 %81
  %83 = getelementptr i64, i64* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i64, i64* %50, i64 %92
  %95 = getelementptr i64, i64* %11, i64 %92
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !103
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !103
  %101 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !106, !noalias !103
  %102 = getelementptr i64, i64* %94, i64 2
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !106, !noalias !103
  %104 = or i64 %92, 4
  %105 = getelementptr i64, i64* %50, i64 %104
  %106 = getelementptr i64, i64* %11, i64 %104
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !103
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !103
  %112 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !106, !noalias !103
  %113 = getelementptr i64, i64* %105, i64 2
  %114 = bitcast i64* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !106, !noalias !103
  %115 = or i64 %92, 8
  %116 = getelementptr i64, i64* %50, i64 %115
  %117 = getelementptr i64, i64* %11, i64 %115
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !103
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !103
  %123 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !106, !noalias !103
  %124 = getelementptr i64, i64* %116, i64 2
  %125 = bitcast i64* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !106, !noalias !103
  %126 = or i64 %92, 12
  %127 = getelementptr i64, i64* %50, i64 %126
  %128 = getelementptr i64, i64* %11, i64 %126
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !103
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !103
  %134 = bitcast i64* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !106, !noalias !103
  %135 = getelementptr i64, i64* %127, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !106, !noalias !103
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !108

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i64, i64* %50, i64 %144
  %147 = getelementptr i64, i64* %11, i64 %144
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !103
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !103
  %153 = bitcast i64* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !106, !noalias !103
  %154 = getelementptr i64, i64* %146, i64 2
  %155 = bitcast i64* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !106, !noalias !103
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !109

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i64* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i64* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i64* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i64* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i64* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i64, i64* %177, align 8
  store i64 %179, i64* %176, align 8
  %180 = getelementptr inbounds i64, i64* %176, i64 1
  %181 = getelementptr inbounds i64, i64* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !110

184:                                              ; preds = %175, %161
  %185 = phi i64* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i64* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i64* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i64* [ %214, %188 ], [ %186, %184 ]
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %189, align 8
  %192 = getelementptr inbounds i64, i64* %189, i64 1
  %193 = getelementptr inbounds i64, i64* %190, i64 1
  %194 = load i64, i64* %193, align 8
  store i64 %194, i64* %192, align 8
  %195 = getelementptr inbounds i64, i64* %189, i64 2
  %196 = getelementptr inbounds i64, i64* %190, i64 2
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds i64, i64* %189, i64 3
  %199 = getelementptr inbounds i64, i64* %190, i64 3
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %198, align 8
  %201 = getelementptr inbounds i64, i64* %189, i64 4
  %202 = getelementptr inbounds i64, i64* %190, i64 4
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %201, align 8
  %204 = getelementptr inbounds i64, i64* %189, i64 5
  %205 = getelementptr inbounds i64, i64* %190, i64 5
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %204, align 8
  %207 = getelementptr inbounds i64, i64* %189, i64 6
  %208 = getelementptr inbounds i64, i64* %190, i64 6
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %207, align 8
  %210 = getelementptr inbounds i64, i64* %189, i64 7
  %211 = getelementptr inbounds i64, i64* %190, i64 7
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %210, align 8
  %213 = getelementptr inbounds i64, i64* %189, i64 8
  %214 = getelementptr inbounds i64, i64* %190, i64 8
  %215 = icmp eq i64* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !111

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i64* %58 to i64
  %218 = load i64*, i64** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i64* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i64** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i64** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i64* %220, null
  %225 = inttoptr i64 %221 to i64*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i64* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  %228 = load i64*, i64** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i64* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i64, i64* %1, align 8
  store i64 %231, i64* %230, align 8
  %232 = load i64*, i64** %3, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64* %233, i64** %3, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3sql8DatabaseD1Ev(%"class.sql::Database"*) unnamed_addr #3

declare void @_ZN3sql8DatabaseC1ENS_15DatabaseOptionsE(%"class.sql::Database"*, i64, i32) unnamed_addr #2

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #3

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_(%"class.base::internal::BindStateBase"*, i32, %"class.sql::Statement"*) #1 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %8, label %9, label %44

9:                                                ; preds = %3
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %6, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.content::ConversionStorageSql"**
  %12 = load %"class.content::ConversionStorageSql"*, %"class.content::ConversionStorageSql"** %11, align 8
  %13 = icmp eq %"class.content::ConversionStorageSql"* %12, null
  br i1 %13, label %44, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %5 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0)) #12
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #12
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.content::ConversionStorageSql"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)**
  %39 = load void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)*, void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.content::ConversionStorageSql"*, i32, %"class.sql::Statement"*)* [ %39, %33 ], [ %41, %40 ]
  call void %43(%"class.content::ConversionStorageSql"* %30, i32 %1, %"class.sql::Statement"* %2) #12
  br label %44

44:                                               ; preds = %3, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #12
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSD_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #1 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #12
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.content::ConversionStorageSql"**
  %9 = load %"class.content::ConversionStorageSql"*, %"class.content::ConversionStorageSql"** %8, align 8
  %10 = icmp ne %"class.content::ConversionStorageSql"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #12
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN7content20ConversionStorageSqlEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN7content20ConversionStorageSqlEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base13BindRepeatingIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!10 = distinct !{!10, !"_ZN4base13BindRepeatingIMN7content20ConversionStorageSqlEFviPN3sql9StatementEEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!11 = !{!"branch_weights", i32 1, i32 2000}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = distinct !{!15, !13}
!16 = distinct !{!16, !13}
!17 = distinct !{!17, !13}
!18 = distinct !{!18, !13}
!19 = distinct !{!19, !13}
!20 = distinct !{!20, !13}
!21 = distinct !{!21, !13}
!22 = distinct !{!22, !13}
!23 = distinct !{!23, !13}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !30}
!30 = !{!"llvm.loop.isvectorized", i32 1}
!31 = distinct !{!31, !13}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !30}
!38 = distinct !{!38, !13}
!39 = distinct !{!39, !13}
!40 = distinct !{!40, !30}
!41 = distinct !{!41, !30}
!42 = !{!43}
!43 = distinct !{!43, !44}
!44 = distinct !{!44, !"LVerDomain"}
!45 = !{!46}
!46 = distinct !{!46, !44}
!47 = distinct !{!47, !30}
!48 = distinct !{!48, !13}
!49 = distinct !{!49, !13}
!50 = distinct !{!50, !30}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !30}
!57 = distinct !{!57, !13}
!58 = distinct !{!58, !13}
!59 = distinct !{!59, !30}
!60 = distinct !{!60, !13}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !30}
!67 = distinct !{!67, !13}
!68 = distinct !{!68, !13}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !30}
!75 = distinct !{!75, !13}
!76 = distinct !{!76, !30}
!77 = !{!78}
!78 = distinct !{!78, !79}
!79 = distinct !{!79, !"LVerDomain"}
!80 = !{!81}
!81 = distinct !{!81, !79}
!82 = distinct !{!82, !30}
!83 = distinct !{!83, !13}
!84 = distinct !{!84, !30}
!85 = distinct !{!85, !30}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !30}
!92 = distinct !{!92, !13}
!93 = distinct !{!93, !30}
!94 = !{!95}
!95 = distinct !{!95, !96}
!96 = distinct !{!96, !"LVerDomain"}
!97 = !{!98}
!98 = distinct !{!98, !96}
!99 = distinct !{!99, !30}
!100 = distinct !{!100, !13}
!101 = distinct !{!101, !30}
!102 = distinct !{!102, !13}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !30}
!109 = distinct !{!109, !13}
!110 = distinct !{!110, !13}
!111 = distinct !{!111, !30}
