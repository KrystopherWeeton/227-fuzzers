; ModuleID = '../../components/omnibox/browser/autocomplete_input.cc'
source_filename = "../../components/omnibox/browser/autocomplete_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.AutocompleteInput = type { %"class.std::__1::basic_string", i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"struct.url::Parsed", %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::basic_string.1", i8, i8, i8, i32, i8, i32, %"class.std::__1::vector", %"class.absl::optional", i8, i8, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.1", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.GURL* }
%"class.std::__1::basic_string.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.4 }
%union.anon.4 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.18 }
%union.anon.18 = type { %"class.std::__1::basic_string.1" }
%class.AutocompleteSchemeClassifier = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.5 }
%struct.anon.5 = type { i8 }
%"class.std::__1::allocator.8" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.re2::StringPiece" = type { i8*, i64 }
%"class.re2::RE2" = type { %"class.std::__1::basic_string.1", %"class.re2::RE2::Options", %"class.re2::Regexp"*, %"class.std::__1::basic_string.1"*, i32, %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1", i8, %"class.re2::Regexp"*, %"class.re2::Prog"*, i32, i8, %"class.re2::Prog"*, %"class.std::__1::map"*, %"class.std::__1::map.20"*, %"struct.std::__1::once_flag", %"struct.std::__1::once_flag", %"struct.std::__1::once_flag" }
%"class.re2::RE2::Options" = type { i32, i8, i8, i8, i64, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.re2::Regexp" = type opaque
%"class.re2::Prog" = type opaque
%"class.std::__1::map" = type opaque
%"class.std::__1::map.20" = type opaque
%"struct.std::__1::once_flag" = type { i64 }
%"struct.url::CanonHostInfo" = type { i32, i32, %"struct.url::Component", [16 x i8] }
%"class.re2::RE2::Arg" = type { i8*, i1 (i8*, i64, i8*)* }
%"class.url::StringPieceReplacements" = type { %"class.url::Replacements" }
%"class.url::Replacements" = type { %"struct.url::URLComponentSource", %"struct.url::Parsed" }
%"struct.url::URLComponentSource" = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_ = comdat any

$_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"deprecated-requested-url\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"query\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"deprecated-forced-query\00", align 1
@_ZN4base16kWhitespaceUTF16E = external constant [0 x i16], align 2
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"(?i)javascript:([^;=().\22]*)\00", align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1
@_ZN3url24kStandardSchemeSeparatorE = external constant [0 x i8], align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"example\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@_ZN12_GLOBAL__N_117kViewSourceSchemeE = internal constant [12 x i8] c"view-source\00", align 1
@_ZN3url11kBlobSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1
@.str.12 = private unnamed_addr constant [2 x i16] [i16 32, i16 0], align 2

@_ZN17AutocompleteInputC1Ev = hidden unnamed_addr alias void (%class.AutocompleteInput*), void (%class.AutocompleteInput*)* @_ZN17AutocompleteInputC2Ev
@_ZN17AutocompleteInputC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi = hidden unnamed_addr alias void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i32, %class.AutocompleteSchemeClassifier*, i1, i32), void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i32, %class.AutocompleteSchemeClassifier*, i1, i32)* @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi
@_ZN17AutocompleteInputC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi = hidden unnamed_addr alias void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i64, i32, %class.AutocompleteSchemeClassifier*, i1, i32), void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i64, i32, %class.AutocompleteSchemeClassifier*, i1, i32)* @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi
@_ZN17AutocompleteInputC1ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKNS1_IcNS2_IcEENS4_IcEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi = hidden unnamed_addr alias void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i64, %"class.std::__1::basic_string.1"*, i32, %class.AutocompleteSchemeClassifier*, i1, i32), void (%class.AutocompleteInput*, %"class.std::__1::basic_string"*, i64, %"class.std::__1::basic_string.1"*, i32, %class.AutocompleteSchemeClassifier*, i1, i32)* @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKNS1_IcNS2_IcEENS4_IcEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi
@_ZN17AutocompleteInputC1ERKS_ = hidden unnamed_addr alias void (%class.AutocompleteInput*, %class.AutocompleteInput*), void (%class.AutocompleteInput*, %class.AutocompleteInput*)* @_ZN17AutocompleteInputC2ERKS_
@_ZN17AutocompleteInputD1Ev = hidden unnamed_addr alias void (%class.AutocompleteInput*), void (%class.AutocompleteInput*)* @_ZN17AutocompleteInputD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputC2Ev(%class.AutocompleteInput*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.AutocompleteInput* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #11
  %3 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 -1, i64* %3, align 8
  %4 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %4) #11
  %5 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %6 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false)
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %6) #11
  %8 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  tail call void @_ZN4GURLC1Ev(%class.GURL* %10) #11
  %11 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 12
  %13 = bitcast %"class.std::__1::basic_string.1"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 26, i1 false)
  store i8 1, i8* %12, align 2
  %14 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 13
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 14
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 15
  %17 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 20
  store i32 0, i32* %18, align 4
  %19 = bitcast i32* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 29, i1 false)
  %20 = bitcast %union.anon.18* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 26, i1 false)
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), i32, %class.AutocompleteSchemeClassifier* dereferenceable(8), i1 zeroext, i32) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 0, i8* %10, align 1
  store i8 0, i8* %8, align 8
  call void @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKNS1_IcNS2_IcEENS4_IcEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi(%class.AutocompleteInput* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 -1, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7, i32 %2, %class.AutocompleteSchemeClassifier* dereferenceable(8) %3, i1 zeroext %4, i32 %5) #11
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #12
  br label %16

16:                                               ; preds = %6, %13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i32, %class.AutocompleteSchemeClassifier* dereferenceable(8), i1 zeroext, i32) unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  store i8 0, i8* %11, align 1
  store i8 0, i8* %9, align 8
  call void @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKNS1_IcNS2_IcEENS4_IcEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi(%class.AutocompleteInput* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %2, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %8, i32 %3, %class.AutocompleteSchemeClassifier* dereferenceable(8) %4, i1 zeroext %5, i32 %6)
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %7, %14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputC2ERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKNS1_IcNS2_IcEENS4_IcEEEEN7metrics36OmniboxEventProto_PageClassificationERK28AutocompleteSchemeClassifierbi(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), i64, %"class.std::__1::basic_string.1"* dereferenceable(24), i32, %class.AutocompleteSchemeClassifier* dereferenceable(8), i1 zeroext, i32) unnamed_addr #0 align 2 {
  %9 = zext i1 %6 to i8
  %10 = bitcast %class.AutocompleteInput* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 -1, i64* %11, align 8
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %12) #11
  %13 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %14 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %15 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #11
  tail call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %14) #11
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #11
  %18 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  tail call void @_ZN4GURLC1Ev(%class.GURL* %18) #11
  %19 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %20 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 12
  %21 = bitcast %"class.std::__1::basic_string.1"* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 26, i1 false) #11
  store i8 1, i8* %20, align 2
  %22 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 13
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 14
  store i8 1, i8* %23, align 8
  %24 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 15
  %25 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 20
  store i32 0, i32* %26, align 4
  %27 = bitcast i32* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 29, i1 false) #11
  %28 = bitcast %union.anon.18* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 26, i1 false) #11
  store i64 %2, i64* %11, align 8
  %29 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 4
  store i32 %4, i32* %29, align 8
  %30 = icmp eq %"class.std::__1::basic_string.1"* %19, %3
  br i1 %30, label %44, label %31

31:                                               ; preds = %8
  %32 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %37, i64 24, i1 false) #11
  br label %44

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = tail call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"* %19, i8* %40, i64 %42) #11
  br label %44

44:                                               ; preds = %8, %36, %38
  %45 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 18
  store i8 %9, i8* %45, align 8
  store i32 %7, i32* %26, align 4
  tail call void @_ZN17AutocompleteInput4InitERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK28AutocompleteSchemeClassifier(%class.AutocompleteInput* %0, %"class.std::__1::basic_string"* dereferenceable(24) %1, %class.AutocompleteSchemeClassifier* dereferenceable(8) %5)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput4InitERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK28AutocompleteSchemeClassifier(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string.1", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string.1", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::allocator.8", align 1
  %10 = alloca %class.GURL, align 8
  %11 = alloca %class.GURL, align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string.1", align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %17, i16* %19, i16* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  %26 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  %27 = tail call i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16* %21, i64 %25, i32 1, %"class.std::__1::basic_string"* %26) #11
  %28 = and i32 %27, 1
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %3
  %31 = load i8, i8* %15, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %22, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = bitcast %class.AutocompleteInput* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %30
  %41 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  br label %45

43:                                               ; preds = %30
  %44 = zext i8 %38 to i64
  br label %45

45:                                               ; preds = %40, %43
  %46 = phi i64 [ %42, %40 ], [ %44, %43 ]
  %47 = sub i64 %35, %46
  %48 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, -1
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = icmp ugt i64 %49, %47
  br i1 %52, label %53, label %55

53:                                               ; preds = %51
  %54 = sub i64 %49, %47
  store i64 %54, i64* %48, align 8
  br label %56

55:                                               ; preds = %51
  store i64 0, i64* %48, align 8
  br label %56

56:                                               ; preds = %55, %53, %45, %3
  %57 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %57) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %10) #11
  %58 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %59 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %60 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %61 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* dereferenceable(24) %26, %"class.std::__1::basic_string.1"* dereferenceable(24) %58, %class.AutocompleteSchemeClassifier* dereferenceable(8) %2, %"struct.url::Parsed"* %59, %"class.std::__1::basic_string"* %60, %class.GURL* nonnull %10)
  %62 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 5
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %64 = bitcast %"class.std::__1::basic_string.1"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 24, i1 false) #11
  %68 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #11
  %69 = icmp ugt i64 %68, -17
  br i1 %69, label %70, label %72

70:                                               ; preds = %56
  %71 = bitcast %"class.std::__1::basic_string.1"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %71) #13
  unreachable

72:                                               ; preds = %56
  %73 = icmp ult i64 %68, 23
  br i1 %73, label %79, label %74

74:                                               ; preds = %72
  %75 = add nuw i64 %68, 16
  %76 = and i64 %75, -16
  %77 = call i8* @_Znwm(i64 %76) #12
  store i8* %77, i8** %65, align 8
  %78 = or i64 %76, -9223372036854775808
  store i64 %78, i64* %67, align 8
  store i64 %68, i64* %66, align 8
  br label %84

79:                                               ; preds = %72
  %80 = trunc i64 %68 to i8
  %81 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  store i8 %80, i8* %82, align 1
  %83 = icmp eq i64 %68, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %79, %74
  %85 = phi i8* [ %77, %74 ], [ %64, %79 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0), i64 %68, i1 false) #11
  br label %86

86:                                               ; preds = %84, %79
  %87 = phi i8* [ %64, %79 ], [ %85, %84 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 %68
  store i8 0, i8* %88, align 1
  %89 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #11
  %90 = bitcast %class.AutocompleteInput* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i16*, i16** %93, align 8
  %95 = bitcast %class.AutocompleteInput* %0 to i16*
  %96 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %92 to i64
  %99 = icmp slt i8 %92, 0
  %100 = select i1 %99, i16* %94, i16* %95
  %101 = select i1 %99, i64 %97, i64 %98
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %5, i16* %100, i64 %101, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @.str.12, i64 0, i64 0), i64 1, i32 1, i32 0) #11
  %102 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %103 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %105 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %106 = icmp eq %"class.std::__1::basic_string"* %103, %105
  br i1 %106, label %127, label %107

107:                                              ; preds = %86
  %108 = bitcast %"class.std::__1::basic_string.1"* %6 to i8*
  %109 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  %112 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  %116 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %116, i64 0, i32 1, i32 0
  %118 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %119 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 1
  %120 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast %"class.std::__1::basic_string"** %119 to i64*
  %122 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  br label %158

125:                                              ; preds = %190
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %102, align 8
  br label %127

127:                                              ; preds = %125, %86
  %128 = phi %"class.std::__1::basic_string"* [ %126, %125 ], [ %103, %86 ]
  %129 = icmp eq %"class.std::__1::basic_string"* %128, null
  br i1 %129, label %151, label %130

130:                                              ; preds = %127
  %131 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  %132 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %104, align 8
  %133 = icmp eq %"class.std::__1::basic_string"* %132, %128
  br i1 %133, label %149, label %134

134:                                              ; preds = %130, %144
  %135 = phi %"class.std::__1::basic_string"* [ %136, %144 ], [ %132, %130 ]
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %135, i64 -1
  %137 = bitcast %"class.std::__1::basic_string"* %136 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %138 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %137, i64 0, i32 1, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %144

141:                                              ; preds = %134
  %142 = bitcast %"class.std::__1::basic_string"* %136 to i8**
  %143 = load i8*, i8** %142, align 8
  call void @_ZdlPv(i8* %143) #12
  br label %144

144:                                              ; preds = %141, %134
  %145 = icmp eq %"class.std::__1::basic_string"* %136, %128
  br i1 %145, label %146, label %134

146:                                              ; preds = %144
  %147 = bitcast %"class.std::__1::vector"* %5 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %130
  %150 = phi i8* [ %148, %146 ], [ %131, %130 ]
  store %"class.std::__1::basic_string"* %128, %"class.std::__1::basic_string"** %104, align 8
  call void @_ZdlPv(i8* %150) #12
  br label %151

151:                                              ; preds = %149, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #11
  %152 = bitcast %"class.std::__1::basic_string.1"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %240

156:                                              ; preds = %151
  %157 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %157) #12
  br label %240

158:                                              ; preds = %190, %107
  %159 = phi %"class.std::__1::basic_string"* [ %103, %107 ], [ %191, %190 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  %160 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %160, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #11
  %162 = load i8, i8* %161, align 1
  %163 = icmp slt i8 %162, 0
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load i16*, i16** %164, align 8
  %166 = bitcast %"class.std::__1::basic_string"* %159 to i16*
  %167 = select i1 %163, i16* %165, i16* %166
  %168 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %169 = load i64, i64* %168, align 8
  %170 = zext i8 %162 to i64
  %171 = select i1 %163, i64 %169, i64 %170
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %6, i16* %167, i64 %171) #11
  %172 = bitcast %"class.std::__1::basic_string"* %159 to %"class.std::__1::allocator"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false) #11
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.1"* nonnull sret %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %4) #11
  %173 = load i8, i8* %115, align 1
  %174 = icmp slt i8 %173, 0
  %175 = load i8*, i8** %109, align 8
  %176 = select i1 %174, i8* %175, i8* %108
  %177 = load i64, i64* %110, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = load i8, i8* %117, align 1
  %181 = icmp slt i8 %180, 0
  %182 = load i8*, i8** %112, align 8
  %183 = select i1 %181, i8* %182, i8* %111
  %184 = load i64, i64* %113, align 8
  %185 = zext i8 %180 to i64
  %186 = select i1 %181, i64 %184, i64 %185
  %187 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %176, i64 %179, i8* %183, i64 %186, i32 1) #11
  br i1 %187, label %193, label %219

188:                                              ; preds = %350
  %189 = load i8*, i8** %109, align 8
  call void @_ZdlPv(i8* %189) #12
  br label %190

190:                                              ; preds = %188, %350
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  %191 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 1
  %192 = icmp eq %"class.std::__1::basic_string"* %191, %105
  br i1 %192, label %125, label %158

193:                                              ; preds = %158
  %194 = load i8, i8* %115, align 1
  %195 = icmp slt i8 %194, 0
  %196 = load i64, i64* %110, align 8
  %197 = zext i8 %194 to i64
  %198 = select i1 %195, i64 %196, i64 %197
  %199 = load i8, i8* %117, align 1
  %200 = icmp slt i8 %199, 0
  %201 = load i64, i64* %113, align 8
  %202 = zext i8 %199 to i64
  %203 = select i1 %200, i64 %201, i64 %202
  %204 = icmp ugt i64 %198, %203
  br i1 %204, label %205, label %219

205:                                              ; preds = %193
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %159, i64 %203, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %172) #11
  %206 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %119, align 8
  %207 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  %208 = icmp ult %"class.std::__1::basic_string"* %206, %207
  br i1 %208, label %209, label %213

209:                                              ; preds = %205
  %210 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %210, i8* nonnull align 8 %118, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #11
  %211 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %206, i64 1
  %212 = ptrtoint %"class.std::__1::basic_string"* %211 to i64
  store i64 %212, i64* %121, align 8
  br label %218

213:                                              ; preds = %205
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %214 = load i8, i8* %123, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %218

216:                                              ; preds = %213
  %217 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %217) #12
  br label %218

218:                                              ; preds = %216, %213, %209
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  br label %219

219:                                              ; preds = %218, %193, %158
  %220 = load i8, i8* %117, align 1
  %221 = icmp slt i8 %220, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %219
  %223 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %223) #12
  br label %224

224:                                              ; preds = %222, %219
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false) #11
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.1"* nonnull sret %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %4) #11
  %225 = load i8, i8* %115, align 1
  %226 = icmp slt i8 %225, 0
  %227 = load i8*, i8** %109, align 8
  %228 = select i1 %226, i8* %227, i8* %108
  %229 = load i64, i64* %110, align 8
  %230 = zext i8 %225 to i64
  %231 = select i1 %226, i64 %229, i64 %230
  %232 = load i8, i8* %117, align 1
  %233 = icmp slt i8 %232, 0
  %234 = load i8*, i8** %112, align 8
  %235 = select i1 %233, i8* %234, i8* %111
  %236 = load i64, i64* %113, align 8
  %237 = zext i8 %232 to i64
  %238 = select i1 %233, i64 %236, i64 %237
  %239 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %228, i64 %231, i8* %235, i64 %238, i32 1) #11
  br i1 %239, label %319, label %345

240:                                              ; preds = %151, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #11
  %241 = bitcast %class.GURL* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %241) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %241, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %11) #11
  %242 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 18
  %243 = load i8, i8* %242, align 8, !range !2
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %273, label %245

245:                                              ; preds = %240
  %246 = load i32, i32* %62, align 4
  %247 = icmp eq i32 %246, 3
  br i1 %247, label %248, label %275

248:                                              ; preds = %245
  %249 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 20
  %250 = load i32, i32* %249, align 4
  %251 = call zeroext i1 @_ZN17AutocompleteInput20ShouldUpgradeToHttpsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK4GURLiPS9_(%"class.std::__1::basic_string"* dereferenceable(24) %1, %class.GURL* nonnull dereferenceable(120) %10, i32 %250, %class.GURL* nonnull %11)
  br i1 %251, label %252, label %273

252:                                              ; preds = %248
  %253 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 19
  store i8 1, i8* %253, align 1
  %254 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #11
  %255 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #11
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %255) #11
  %256 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %256, i64 0, i32 1, i32 1
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  br i1 %259, label %260, label %263

260:                                              ; preds = %252
  %261 = bitcast %"class.std::__1::basic_string"* %60 to i8**
  %262 = load i8*, i8** %261, align 8
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %260, %252
  %264 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* nonnull align 8 %254, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #11
  %265 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* nonnull %10, %class.GURL* nonnull dereferenceable(120) %11) #11
  %266 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 1
  %267 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 2
  %268 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 3
  %269 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 4
  %270 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 5
  %271 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 6
  %272 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6, i32 7
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %266) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %267) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %268) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %269) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %270) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %271) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 1, %"struct.url::Component"* %272) #11
  br label %273

273:                                              ; preds = %248, %263, %240
  %274 = load i32, i32* %62, align 4
  br label %275

275:                                              ; preds = %273, %245
  %276 = phi i32 [ %274, %273 ], [ %246, %245 ]
  switch i32 %276, label %318 [
    i32 1, label %277
    i32 3, label %277
  ]

277:                                              ; preds = %275, %275
  %278 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 1
  %279 = load i8, i8* %278, align 8, !range !2
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %318, label %281

281:                                              ; preds = %277
  %282 = call zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL* nonnull %10) #11
  br i1 %282, label %283, label %315

283:                                              ; preds = %281
  %284 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #11
  %285 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %284) #11
  br i1 %285, label %315, label %286

286:                                              ; preds = %283
  %287 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #11
  %288 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %10, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %287) #11
  br i1 %288, label %315, label %289

289:                                              ; preds = %286
  %290 = bitcast %"class.std::__1::basic_string.1"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #11
  %291 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 2, i32 3, i32 1
  %292 = load i32, i32* %291, align 4, !noalias !3
  %293 = icmp slt i32 %292, 1
  br i1 %293, label %294, label %295

294:                                              ; preds = %289
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #11
  br label %318

295:                                              ; preds = %289
  %296 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 0
  %297 = getelementptr inbounds %class.GURL, %class.GURL* %10, i64 0, i32 2, i32 3, i32 0
  %298 = load i32, i32* %297, align 8, !noalias !3
  %299 = sext i32 %298 to i64
  %300 = sext i32 %292 to i64
  %301 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %301) #11, !noalias !3
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %13, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %296, i64 %299, i64 %300, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %301) #11, !noalias !3
  %302 = bitcast %"class.std::__1::basic_string.1"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %302, i64 0, i32 1, i32 0
  %304 = load i8, i8* %303, align 1
  %305 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %306 = load i64, i64* %305, align 8
  %307 = icmp slt i8 %304, 0
  %308 = zext i8 %304 to i64
  %309 = select i1 %307, i64 %306, i64 %308
  %310 = icmp eq i64 %309, 0
  br i1 %307, label %311, label %314

311:                                              ; preds = %295
  %312 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  call void @_ZdlPv(i8* %313) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #11
  br i1 %310, label %318, label %315

314:                                              ; preds = %295
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #11
  br i1 %310, label %318, label %315

315:                                              ; preds = %311, %314, %283, %286, %281
  %316 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %317 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %316, %class.GURL* nonnull dereferenceable(120) %10) #11
  br label %318

318:                                              ; preds = %311, %294, %314, %277, %275, %315
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %241) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %57) #11
  ret void

319:                                              ; preds = %224
  %320 = load i8, i8* %115, align 1
  %321 = icmp slt i8 %320, 0
  %322 = load i64, i64* %110, align 8
  %323 = zext i8 %320 to i64
  %324 = select i1 %321, i64 %322, i64 %323
  %325 = load i8, i8* %117, align 1
  %326 = icmp slt i8 %325, 0
  %327 = load i64, i64* %113, align 8
  %328 = zext i8 %325 to i64
  %329 = select i1 %326, i64 %327, i64 %328
  %330 = icmp ugt i64 %324, %329
  br i1 %330, label %331, label %345

331:                                              ; preds = %319
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %159, i64 %329, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %172) #11
  %332 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %119, align 8
  %333 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  %334 = icmp ult %"class.std::__1::basic_string"* %332, %333
  br i1 %334, label %340, label %335

335:                                              ; preds = %331
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %63, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #11
  %336 = load i8, i8* %123, align 1
  %337 = icmp slt i8 %336, 0
  br i1 %337, label %338, label %344

338:                                              ; preds = %335
  %339 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %339) #12
  br label %344

340:                                              ; preds = %331
  %341 = bitcast %"class.std::__1::basic_string"* %332 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %341, i8* nonnull align 8 %118, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #11
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %332, i64 1
  %343 = ptrtoint %"class.std::__1::basic_string"* %342 to i64
  store i64 %343, i64* %121, align 8
  br label %344

344:                                              ; preds = %340, %338, %335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  br label %345

345:                                              ; preds = %344, %319, %224
  %346 = load i8, i8* %117, align 1
  %347 = icmp slt i8 %346, 0
  br i1 %347, label %348, label %350

348:                                              ; preds = %345
  %349 = load i8*, i8** %112, align 8
  call void @_ZdlPv(i8* %349) #12
  br label %350

350:                                              ; preds = %348, %345
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #11
  %351 = load i8, i8* %115, align 1
  %352 = icmp slt i8 %351, 0
  br i1 %352, label %188, label %190
}

declare i32 @_ZN4base14TrimWhitespaceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS_13TrimPositionsEPNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEE(i16*, i64, i32, %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24), %class.AutocompleteSchemeClassifier* dereferenceable(8), %"struct.url::Parsed"*, %"class.std::__1::basic_string"*, %class.GURL*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::allocator.8", align 1
  %8 = alloca %"class.std::__1::allocator.8", align 1
  %9 = alloca %"class.std::__1::allocator.8", align 1
  %10 = alloca %"class.re2::StringPiece", align 8
  %11 = alloca %"class.std::__1::allocator.8", align 1
  %12 = alloca %"struct.url::Parsed", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.std::__1::basic_string.1", align 8
  %15 = alloca %class.GURL, align 8
  %16 = alloca %class.GURL, align 8
  %17 = alloca %"class.std::__1::basic_string.1", align 8
  %18 = alloca %"class.std::__1::basic_string.1", align 8
  %19 = alloca %"class.re2::RE2", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string.1", align 8
  %22 = alloca %"class.std::__1::basic_string.1", align 8
  %23 = alloca %"struct.url::Parsed", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %class.GURL, align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"struct.url::CanonHostInfo", align 16
  %28 = alloca %"class.std::__1::basic_string.1", align 8
  %29 = alloca %"class.std::__1::basic_string.1", align 8
  %30 = alloca %"class.std::__1::basic_string.1", align 8
  %31 = alloca %"class.std::__1::basic_string", align 8
  %32 = alloca %"class.std::__1::basic_string.1", align 8
  %33 = alloca %"class.std::__1::basic_string.1", align 8
  %34 = alloca %"class.std::__1::basic_string.1", align 8
  %35 = alloca %"class.std::__1::basic_string", align 8
  %36 = alloca %"class.std::__1::basic_string.1", align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %46 = zext i8 %39 to i64
  %47 = select i1 %40, i16* %42, i16* %45
  %48 = select i1 %40, i64 %44, i64 %46
  %49 = load i16, i16* getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), align 2
  %50 = icmp eq i16 %49, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %6, %51
  %52 = phi i64 [ %54, %51 ], [ 0, %6 ]
  %53 = phi i16* [ %55, %51 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %6 ]
  %54 = add i64 %52, 1
  %55 = getelementptr inbounds i16, i16* %53, i64 1
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %51

58:                                               ; preds = %51, %6
  %59 = phi i64 [ 0, %6 ], [ %54, %51 ]
  %60 = icmp eq i64 %48, 0
  br i1 %60, label %777, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds i16, i16* %47, i64 %48
  %63 = icmp eq i64 %59, 0
  br label %64

64:                                               ; preds = %79, %61
  %65 = phi i16* [ %47, %61 ], [ %80, %79 ]
  br i1 %63, label %82, label %66

66:                                               ; preds = %64
  %67 = load i16, i16* %65, align 2
  br label %68

68:                                               ; preds = %73, %66
  %69 = phi i64 [ %59, %66 ], [ %75, %73 ]
  %70 = phi i16* [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %66 ], [ %74, %73 ]
  %71 = load i16, i16* %70, align 2
  %72 = icmp eq i16 %71, %67
  br i1 %72, label %77, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds i16, i16* %70, i64 1
  %75 = add i64 %69, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %82, label %68

77:                                               ; preds = %68
  %78 = icmp eq i16* %70, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds i16, i16* %65, i64 1
  %81 = icmp eq i16* %80, %62
  br i1 %81, label %777, label %64

82:                                               ; preds = %64, %77, %73
  %83 = phi i16* [ %65, %73 ], [ %47, %64 ], [ %65, %77 ]
  %84 = ptrtoint i16* %83 to i64
  %85 = ptrtoint i16* %47 to i64
  %86 = sub i64 %84, %85
  %87 = icmp eq i64 %86, -2
  br i1 %87, label %777, label %88

88:                                               ; preds = %82
  %89 = bitcast %"struct.url::Parsed"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %89) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %12) #11
  %90 = icmp eq %"struct.url::Parsed"* %3, null
  %91 = select i1 %90, %"struct.url::Parsed"* %12, %"struct.url::Parsed"* %3
  %92 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false)
  call void @_ZN13url_formatter10SegmentURLERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN3url6ParsedE(%"class.std::__1::basic_string"* nonnull sret %13, %"class.std::__1::basic_string"* dereferenceable(24) %0, %"struct.url::Parsed"* %91) #11
  %96 = icmp ne %"class.std::__1::basic_string"* %4, null
  br i1 %96, label %97, label %99

97:                                               ; preds = %88
  %98 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13)
  br label %99

99:                                               ; preds = %97, %88
  %100 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %103 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %104 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %103, i64 0, i32 1, i32 1
  %105 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 24, i1 false)
  %106 = load i8, i8* %104, align 1
  %107 = icmp slt i8 %106, 0
  %108 = load i16*, i16** %93, align 8
  %109 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %110 = select i1 %107, i16* %108, i16* %109
  %111 = load i64, i64* %94, align 8
  %112 = zext i8 %106 to i64
  %113 = select i1 %107, i64 %111, i64 %112
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %14, i16* %110, i64 %113) #11
  %114 = bitcast %class.GURL* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %114) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %114, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %15) #11
  %115 = icmp eq %class.GURL* %5, null
  %116 = select i1 %115, %class.GURL* %15, %class.GURL* %5
  %117 = bitcast %class.GURL* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %117) #11
  %118 = bitcast %"class.std::__1::basic_string.1"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %119 = load i8, i8* %38, align 1
  %120 = icmp slt i8 %119, 0
  %121 = load i16*, i16** %41, align 8
  %122 = select i1 %120, i16* %121, i16* %45
  %123 = load i64, i64* %43, align 8
  %124 = zext i8 %119 to i64
  %125 = select i1 %120, i64 %123, i64 %124
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %17, i16* %122, i64 %125) #11
  call void @_ZN13url_formatter8FixupURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.GURL* nonnull sret %16, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %17, %"class.std::__1::basic_string.1"* dereferenceable(24) %1) #11
  %126 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %116, %class.GURL* nonnull dereferenceable(120) %16) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %16) #11
  %127 = bitcast %"class.std::__1::basic_string.1"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  %129 = load i8, i8* %128, align 1
  %130 = icmp slt i8 %129, 0
  br i1 %130, label %131, label %134

131:                                              ; preds = %99
  %132 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_ZdlPv(i8* %133) #12
  br label %134

134:                                              ; preds = %99, %131
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %117) #11
  %135 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 1
  %136 = load i8, i8* %135, align 8, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %137, label %763, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %141 = load i8, i8* %140, align 1
  %142 = icmp slt i8 %141, 0
  %143 = load i8*, i8** %101, align 8
  %144 = select i1 %142, i8* %143, i8* %100
  %145 = load i64, i64* %102, align 8
  %146 = zext i8 %141 to i64
  %147 = select i1 %142, i64 %145, i64 %146
  %148 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #11
  %149 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %144, i64 %147, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %148) #11
  br i1 %149, label %763, label %150

150:                                              ; preds = %139
  %151 = bitcast %"class.std::__1::basic_string.1"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %151) #11
  %152 = load i8, i8* %38, align 1
  %153 = icmp slt i8 %152, 0
  %154 = load i16*, i16** %41, align 8
  %155 = select i1 %153, i16* %154, i16* %45
  %156 = load i64, i64* %43, align 8
  %157 = zext i8 %152 to i64
  %158 = select i1 %153, i64 %156, i64 %157
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %18, i16* %155, i64 %158) #11
  %159 = bitcast %"class.std::__1::basic_string.1"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %160 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %159, i64 0, i32 1, i32 0
  %161 = load i8, i8* %160, align 1
  %162 = icmp slt i8 %161, 0
  %163 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i8*, i8** %163, align 8
  %165 = select i1 %162, i8* %164, i8* %151
  %166 = ptrtoint i8* %165 to i64
  %167 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i64, i64* %167, align 8
  %169 = zext i8 %161 to i64
  %170 = select i1 %162, i64 %168, i64 %169
  %171 = bitcast %"class.re2::RE2"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %171) #11
  call void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"* nonnull %19, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #11
  %172 = bitcast %"class.re2::StringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %172) #11
  %173 = bitcast %"class.re2::StringPiece"* %10 to i64*
  store i64 %166, i64* %173, align 8
  %174 = getelementptr inbounds %"class.re2::StringPiece", %"class.re2::StringPiece"* %10, i64 0, i32 1
  store i64 %170, i64* %174, align 8
  %175 = call zeroext i1 @_ZN3re23RE210FullMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* nonnull dereferenceable(16) %10, %"class.re2::RE2"* nonnull dereferenceable(200) %19, %"class.re2::RE2::Arg"** null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %172) #11
  call void @_ZN3re23RE2D1Ev(%"class.re2::RE2"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %171) #11
  %176 = load i8, i8* %160, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %180

178:                                              ; preds = %150
  %179 = load i8*, i8** %163, align 8
  call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %150, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %151) #11
  br i1 %175, label %763, label %181

181:                                              ; preds = %180
  %182 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %341

185:                                              ; preds = %181
  %186 = load i8, i8* %140, align 1
  %187 = icmp slt i8 %186, 0
  %188 = load i8*, i8** %101, align 8
  %189 = select i1 %187, i8* %188, i8* %100
  %190 = load i64, i64* %102, align 8
  %191 = zext i8 %186 to i64
  %192 = select i1 %187, i64 %190, i64 %191
  %193 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #11
  %194 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %189, i64 %192, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %193) #11
  br i1 %194, label %341, label %195

195:                                              ; preds = %185
  %196 = load i8, i8* %140, align 1
  %197 = icmp slt i8 %196, 0
  %198 = load i8*, i8** %101, align 8
  %199 = select i1 %197, i8* %198, i8* %100
  %200 = load i64, i64* %102, align 8
  %201 = zext i8 %196 to i64
  %202 = select i1 %197, i64 %200, i64 %201
  %203 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #11
  %204 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %199, i64 %202, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %203) #11
  br i1 %204, label %341, label %205

205:                                              ; preds = %195
  %206 = bitcast %class.AutocompleteSchemeClassifier* %2 to i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)***
  %207 = load i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)**, i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)*** %206, align 8
  %208 = getelementptr inbounds i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)*, i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)** %207, i64 2
  %209 = load i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)*, i32 (%class.AutocompleteSchemeClassifier*, %"class.std::__1::basic_string.1"*)** %208, align 8
  %210 = call i32 %209(%class.AutocompleteSchemeClassifier* %2, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %14) #11
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %763

212:                                              ; preds = %205
  %213 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #11
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %215 = bitcast %"class.std::__1::basic_string.1"* %21 to i8*
  %216 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %216, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %215) #11
  %217 = bitcast %"class.std::__1::basic_string.1"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %217) #11
  %218 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #11
  %219 = icmp ugt i64 %218, -17
  br i1 %219, label %220, label %222

220:                                              ; preds = %212
  %221 = bitcast %"class.std::__1::basic_string.1"* %22 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %221) #13
  unreachable

222:                                              ; preds = %212
  %223 = icmp ult i64 %218, 23
  br i1 %223, label %232, label %224

224:                                              ; preds = %222
  %225 = add nuw i64 %218, 16
  %226 = and i64 %225, -16
  %227 = call i8* @_Znwm(i64 %226) #12
  %228 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %227, i8** %228, align 8
  %229 = or i64 %226, -9223372036854775808
  %230 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %229, i64* %230, align 8
  %231 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %218, i64* %231, align 8
  br label %237

232:                                              ; preds = %222
  %233 = trunc i64 %218 to i8
  %234 = bitcast %"class.std::__1::basic_string.1"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  store i8 %233, i8* %235, align 1
  %236 = icmp eq i64 %218, 0
  br i1 %236, label %239, label %237

237:                                              ; preds = %232, %224
  %238 = phi i8* [ %227, %224 ], [ %217, %232 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %238, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %218, i1 false) #11
  br label %239

239:                                              ; preds = %232, %237
  %240 = phi i8* [ %217, %232 ], [ %238, %237 ]
  %241 = getelementptr inbounds i8, i8* %240, i64 %218
  store i8 0, i8* %241, align 1
  %242 = call dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.1"* nonnull %22, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url24kStandardSchemeSeparatorE, i64 0, i64 0)) #11, !noalias !8
  %243 = bitcast %"class.std::__1::basic_string.1"* %242 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %215, i8* align 8 %243, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %243, i8 0, i64 24, i1 false) #11, !noalias !8
  %244 = bitcast %"class.std::__1::basic_string.1"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %245 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %244, i64 0, i32 1, i32 0
  %246 = load i8, i8* %245, align 1
  %247 = icmp slt i8 %246, 0
  %248 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i8*, i8** %248, align 8
  %250 = select i1 %247, i8* %249, i8* %215
  %251 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = zext i8 %246 to i64
  %254 = select i1 %247, i64 %252, i64 %253
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %20, i8* %250, i64 %254) #11
  %255 = load i8, i8* %245, align 1
  %256 = icmp slt i8 %255, 0
  br i1 %256, label %257, label %259

257:                                              ; preds = %239
  %258 = load i8*, i8** %248, align 8
  call void @_ZdlPv(i8* %258) #12
  br label %259

259:                                              ; preds = %239, %257
  %260 = bitcast %"class.std::__1::basic_string.1"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %261 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %260, i64 0, i32 1, i32 0
  %262 = load i8, i8* %261, align 1
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load i8*, i8** %265, align 8
  call void @_ZdlPv(i8* %266) #12
  br label %267

267:                                              ; preds = %259, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %217) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %215) #11
  %268 = bitcast %"struct.url::Parsed"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %268) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %268, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %23) #11
  %269 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %269) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %269, i8 0, i64 24, i1 false) #11
  %270 = bitcast %class.GURL* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %270) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %270, i8 -86, i64 120, i1 false)
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %25) #11
  %271 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %271) #11
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* nonnull sret %26, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string"* dereferenceable(24) %0)
  %272 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %26, %"class.std::__1::basic_string.1"* dereferenceable(24) %1, %class.AutocompleteSchemeClassifier* dereferenceable(8) %2, %"struct.url::Parsed"* nonnull %23, %"class.std::__1::basic_string"* nonnull %24, %class.GURL* nonnull %25)
  %273 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %274 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %273, i64 0, i32 1, i32 1
  %275 = load i8, i8* %274, align 1
  %276 = icmp slt i8 %275, 0
  br i1 %276, label %277, label %280

277:                                              ; preds = %267
  %278 = bitcast %"class.std::__1::basic_string"* %26 to i8**
  %279 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %279) #12
  br label %280

280:                                              ; preds = %267, %277
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %271) #11
  %281 = icmp eq i32 %272, 3
  br i1 %281, label %282, label %323

282:                                              ; preds = %280
  %283 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 1
  %284 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 1, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = icmp sgt i32 %285, 0
  br i1 %286, label %287, label %323

287:                                              ; preds = %282
  %288 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 2, i32 1
  %289 = load i32, i32* %288, align 4
  %290 = icmp sgt i32 %289, 0
  br i1 %290, label %291, label %323

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 2
  %293 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 0, i32 0
  store i32 0, i32* %293, align 8
  %294 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 0, i32 1
  store i32 -1, i32* %294, align 4
  %295 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %296 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %295, i64 0, i32 1, i32 1
  %297 = load i8, i8* %296, align 1
  %298 = icmp slt i8 %297, 0
  %299 = load i64, i64* %214, align 8
  %300 = zext i8 %297 to i64
  %301 = select i1 %298, i64 %299, i64 %300
  %302 = trunc i64 %301 to i32
  %303 = sub nsw i32 0, %302
  %304 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 3
  %305 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 4
  %306 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 5
  %307 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 6
  %308 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %23, i64 0, i32 7
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %283) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %292) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %304) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %305) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %306) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %307) #11
  call void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32 %303, %"struct.url::Component"* %308) #11
  %309 = call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %91, %"struct.url::Parsed"* nonnull dereferenceable(80) %23) #11
  br i1 %96, label %310, label %321

310:                                              ; preds = %291
  %311 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %312 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %311, i64 0, i32 1, i32 1
  %313 = load i8, i8* %312, align 1
  %314 = icmp slt i8 %313, 0
  br i1 %314, label %315, label %319

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load i16*, i16** %316, align 8
  store i16 0, i16* %317, align 2
  %318 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %318, align 8
  br label %321

319:                                              ; preds = %310
  %320 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  store i16 0, i16* %320, align 2
  store i8 0, i8* %312, align 1
  br label %321

321:                                              ; preds = %319, %315, %291
  %322 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %116, %class.GURL* nonnull dereferenceable(120) %25) #11
  br label %323

323:                                              ; preds = %280, %282, %287, %321
  %324 = phi i32 [ 3, %321 ], [ 1, %287 ], [ 1, %282 ], [ 1, %280 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %270) #11
  %325 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %325, i64 0, i32 1, i32 1
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %323
  %330 = bitcast %"class.std::__1::basic_string"* %24 to i8**
  %331 = load i8*, i8** %330, align 8
  call void @_ZdlPv(i8* %331) #12
  br label %332

332:                                              ; preds = %323, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %269) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %268) #11
  %333 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %334 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %333, i64 0, i32 1, i32 1
  %335 = load i8, i8* %334, align 1
  %336 = icmp slt i8 %335, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %332
  %338 = bitcast %"class.std::__1::basic_string"* %20 to i8**
  %339 = load i8*, i8** %338, align 8
  call void @_ZdlPv(i8* %339) #12
  br label %340

340:                                              ; preds = %332, %337
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #11
  br label %763

341:                                              ; preds = %195, %181, %185
  %342 = bitcast %"struct.url::CanonHostInfo"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %342) #11
  %343 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 0
  %344 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 1
  %345 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 3, i64 0
  %346 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 3, i64 1
  %347 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 3, i64 2
  %348 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 3, i64 3
  %349 = getelementptr inbounds %"struct.url::CanonHostInfo", %"struct.url::CanonHostInfo"* %27, i64 0, i32 3, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %349, i8 -86, i64 16, i1 false)
  %350 = bitcast %"struct.url::CanonHostInfo"* %27 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 -1>, <4 x i32>* %350, align 16
  %351 = bitcast %"class.std::__1::basic_string.1"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %351) #11
  %352 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 3, i32 1
  %353 = load i32, i32* %352, align 4, !noalias !11
  %354 = icmp slt i32 %353, 1
  br i1 %354, label %355, label %357

355:                                              ; preds = %341
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %351, i8 0, i64 24, i1 false) #11, !alias.scope !11
  %356 = bitcast %"class.std::__1::basic_string.1"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %371

357:                                              ; preds = %341
  %358 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 0
  %359 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 3, i32 0
  %360 = load i32, i32* %359, align 4, !noalias !11
  %361 = sext i32 %360 to i64
  %362 = sext i32 %353 to i64
  %363 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %363) #11, !noalias !11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %29, %"class.std::__1::basic_string.1"* dereferenceable(24) %358, i64 %361, i64 %362, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %363) #11, !noalias !11
  %364 = bitcast %"class.std::__1::basic_string.1"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %365 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %364, i64 0, i32 1, i32 0
  %366 = load i8, i8* %365, align 1
  %367 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %370 = load i64, i64* %369, align 8
  br label %371

371:                                              ; preds = %355, %357
  %372 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %356, %355 ], [ %364, %357 ]
  %373 = phi i64 [ 0, %355 ], [ %370, %357 ]
  %374 = phi i8* [ null, %355 ], [ %368, %357 ]
  %375 = phi i8 [ 0, %355 ], [ %366, %357 ]
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %372, i64 0, i32 1, i32 0
  %377 = icmp slt i8 %375, 0
  %378 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = select i1 %377, i8* %374, i8* %351
  %380 = zext i8 %375 to i64
  %381 = select i1 %377, i64 %373, i64 %380
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string.1"* nonnull sret %28, i8* %379, i64 %381, %"struct.url::CanonHostInfo"* nonnull %27) #11
  %382 = bitcast %"class.std::__1::basic_string.1"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %383 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %382, i64 0, i32 1, i32 0
  %384 = load i8, i8* %383, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %371
  %387 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load i8*, i8** %387, align 8
  call void @_ZdlPv(i8* %388) #12
  br label %389

389:                                              ; preds = %371, %386
  %390 = load i8, i8* %376, align 1
  %391 = icmp slt i8 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %389
  %393 = load i8*, i8** %378, align 8
  call void @_ZdlPv(i8* %393) #12
  br label %394

394:                                              ; preds = %389, %392
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %351) #11
  %395 = bitcast %"class.std::__1::basic_string.1"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %395) #11
  %396 = load i32, i32* %352, align 4, !noalias !16
  %397 = icmp slt i32 %396, 1
  br i1 %397, label %398, label %400

398:                                              ; preds = %394
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %395, i8 0, i64 24, i1 false) #11, !alias.scope !16
  %399 = bitcast %"class.std::__1::basic_string.1"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %414

400:                                              ; preds = %394
  %401 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 0
  %402 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 3, i32 0
  %403 = load i32, i32* %402, align 4, !noalias !16
  %404 = sext i32 %403 to i64
  %405 = sext i32 %396 to i64
  %406 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %406) #11, !noalias !16
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %30, %"class.std::__1::basic_string.1"* dereferenceable(24) %401, i64 %404, i64 %405, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %406) #11, !noalias !16
  %407 = bitcast %"class.std::__1::basic_string.1"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %408 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %407, i64 0, i32 1, i32 0
  %409 = load i8, i8* %408, align 1
  %410 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %413 = load i64, i64* %412, align 8
  br label %414

414:                                              ; preds = %398, %400
  %415 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %399, %398 ], [ %407, %400 ]
  %416 = phi i64 [ 0, %398 ], [ %413, %400 ]
  %417 = phi i8* [ null, %398 ], [ %411, %400 ]
  %418 = phi i8 [ 0, %398 ], [ %409, %400 ]
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %415, i64 0, i32 1, i32 0
  %420 = icmp slt i8 %418, 0
  %421 = select i1 %420, i8* %417, i8* %395
  %422 = zext i8 %418 to i64
  %423 = select i1 %420, i64 %416, i64 %422
  %424 = call i64 @_ZN3net27registry_controlled_domains30GetCanonicalHostRegistryLengthEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %421, i64 %423, i32 0, i32 0) #11
  %425 = load i8, i8* %419, align 1
  %426 = icmp slt i8 %425, 0
  br i1 %426, label %427, label %430

427:                                              ; preds = %414
  %428 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load i8*, i8** %428, align 8
  call void @_ZdlPv(i8* %429) #12
  br label %430

430:                                              ; preds = %414, %427
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %395) #11
  %431 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %431) #11
  %432 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %434 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 3, i32 0
  %435 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %435, i8 -86, i64 24, i1 false)
  %436 = load i32, i32* %434, align 8
  %437 = sext i32 %436 to i64
  %438 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 3, i32 1
  %439 = load i32, i32* %438, align 4
  %440 = sext i32 %439 to i64
  %441 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %31, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %437, i64 %440, %"class.std::__1::allocator"* dereferenceable(1) %441) #11
  %442 = icmp ne i64 %424, 0
  %443 = load i8, i8* %38, align 1
  %444 = icmp slt i8 %443, 0
  %445 = load i64, i64* %43, align 8
  %446 = zext i8 %443 to i64
  %447 = select i1 %444, i64 %445, i64 %446
  %448 = icmp eq i64 %447, 7
  br i1 %448, label %449, label %458

449:                                              ; preds = %430
  %450 = load i16*, i16** %41, align 8
  %451 = select i1 %444, i16* %450, i16* %45
  %452 = load i16, i16* %451, align 2
  %453 = icmp eq i16 %452, 105
  br i1 %453, label %454, label %458

454:                                              ; preds = %449
  %455 = getelementptr inbounds i16, i16* %451, i64 1
  %456 = load i16, i16* %455, align 2
  %457 = icmp eq i16 %456, 110
  br i1 %457, label %799, label %458

458:                                              ; preds = %454, %799, %803, %807, %811, %815, %430, %449
  %459 = load i32, i32* %343, align 16
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %524

461:                                              ; preds = %458
  %462 = bitcast %"class.std::__1::basic_string.1"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %462) #11
  %463 = load i32, i32* %352, align 4, !noalias !21
  %464 = icmp slt i32 %463, 1
  br i1 %464, label %465, label %466

465:                                              ; preds = %461
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %462, i8 0, i64 24, i1 false) #11, !alias.scope !21
  br label %473

466:                                              ; preds = %461
  %467 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 0
  %468 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 3, i32 0
  %469 = load i32, i32* %468, align 4, !noalias !21
  %470 = sext i32 %469 to i64
  %471 = sext i32 %463 to i64
  %472 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %472) #11, !noalias !21
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %32, %"class.std::__1::basic_string.1"* dereferenceable(24) %467, i64 %470, i64 %471, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %472) #11, !noalias !21
  br label %473

473:                                              ; preds = %465, %466
  %474 = call zeroext i1 @_ZN3net28IsCanonicalizedHostCompliantERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %32) #11
  br i1 %474, label %475, label %477

475:                                              ; preds = %473
  %476 = call zeroext i1 @_ZNK4GURL8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %116, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #11
  br label %477

477:                                              ; preds = %475, %473
  %478 = phi i1 [ true, %473 ], [ %476, %475 ]
  %479 = bitcast %"class.std::__1::basic_string.1"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %480 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %479, i64 0, i32 1, i32 0
  %481 = load i8, i8* %480, align 1
  %482 = icmp slt i8 %481, 0
  br i1 %482, label %483, label %486

483:                                              ; preds = %477
  %484 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load i8*, i8** %484, align 8
  call void @_ZdlPv(i8* %485) #12
  br label %486

486:                                              ; preds = %483, %477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %462) #11
  br i1 %478, label %487, label %522

487:                                              ; preds = %486
  %488 = load i32, i32* %182, align 4
  %489 = icmp sgt i32 %488, 0
  %490 = xor i1 %442, true
  %491 = or i1 %489, %490
  %492 = select i1 %489, i32 1, i32 4
  br i1 %491, label %753, label %493

493:                                              ; preds = %487
  %494 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %495 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %494, i64 0, i32 1, i32 1
  %496 = load i8, i8* %495, align 1
  %497 = icmp slt i8 %496, 0
  %498 = load i16*, i16** %432, align 8
  %499 = load i64, i64* %433, align 8
  %500 = bitcast %"class.std::__1::basic_string"* %31 to i16*
  %501 = zext i8 %496 to i64
  %502 = select i1 %497, i16* %498, i16* %500
  %503 = select i1 %497, i64 %499, i64 %501
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %521, label %505

505:                                              ; preds = %493, %510
  %506 = phi i64 [ %512, %510 ], [ %503, %493 ]
  %507 = phi i16* [ %511, %510 ], [ %502, %493 ]
  %508 = load i16, i16* %507, align 2
  %509 = icmp eq i16 %508, 32
  br i1 %509, label %514, label %510

510:                                              ; preds = %505
  %511 = getelementptr inbounds i16, i16* %507, i64 1
  %512 = add i64 %506, -1
  %513 = icmp eq i64 %512, 0
  br i1 %513, label %521, label %505

514:                                              ; preds = %505
  %515 = icmp eq i16* %507, null
  %516 = ptrtoint i16* %507 to i64
  %517 = ptrtoint i16* %502 to i64
  %518 = sub i64 %516, %517
  %519 = icmp eq i64 %518, -2
  %520 = or i1 %515, %519
  br i1 %520, label %521, label %753

521:                                              ; preds = %510, %493, %514
  br label %753

522:                                              ; preds = %815, %486
  %523 = load i32, i32* %343, align 16
  br label %524

524:                                              ; preds = %522, %458
  %525 = phi i32 [ %523, %522 ], [ %459, %458 ]
  switch i32 %525, label %580 [
    i32 3, label %753
    i32 2, label %526
  ]

526:                                              ; preds = %524
  %527 = load i8, i8* %345, align 16
  %528 = icmp eq i8 %527, 0
  br i1 %528, label %529, label %536

529:                                              ; preds = %526
  %530 = load i8, i8* %346, align 1
  %531 = load i8, i8* %347, align 2
  %532 = or i8 %531, %530
  %533 = load i8, i8* %348, align 1
  %534 = or i8 %532, %533
  %535 = icmp eq i8 %534, 0
  br i1 %535, label %536, label %753

536:                                              ; preds = %529, %526
  %537 = bitcast %"class.std::__1::basic_string.1"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %537) #11
  %538 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %539 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %538, i64 0, i32 1, i32 1
  %540 = load i8, i8* %539, align 1
  %541 = icmp slt i8 %540, 0
  %542 = load i16*, i16** %432, align 8
  %543 = bitcast %"class.std::__1::basic_string"* %31 to i16*
  %544 = select i1 %541, i16* %542, i16* %543
  %545 = load i64, i64* %433, align 8
  %546 = zext i8 %540 to i64
  %547 = select i1 %541, i64 %545, i64 %546
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %34, i16* %544, i64 %547) #11
  %548 = bitcast %"class.std::__1::basic_string.1"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %549 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %548, i64 0, i32 1, i32 0
  %550 = load i8, i8* %549, align 1
  %551 = icmp slt i8 %550, 0
  %552 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load i8*, i8** %552, align 8
  %554 = select i1 %551, i8* %553, i8* %537
  %555 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = zext i8 %550 to i64
  %558 = select i1 %551, i64 %556, i64 %557
  call void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string.1"* nonnull sret %33, i8* %554, i64 %558, %"struct.url::CanonHostInfo"* nonnull %27) #11
  %559 = bitcast %"class.std::__1::basic_string.1"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %560 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %559, i64 0, i32 1, i32 0
  %561 = load i8, i8* %560, align 1
  %562 = icmp slt i8 %561, 0
  br i1 %562, label %563, label %566

563:                                              ; preds = %536
  %564 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %565 = load i8*, i8** %564, align 8
  call void @_ZdlPv(i8* %565) #12
  br label %566

566:                                              ; preds = %536, %563
  %567 = load i8, i8* %549, align 1
  %568 = icmp slt i8 %567, 0
  br i1 %568, label %569, label %571

569:                                              ; preds = %566
  %570 = load i8*, i8** %552, align 8
  call void @_ZdlPv(i8* %570) #12
  br label %571

571:                                              ; preds = %566, %569
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %537) #11
  %572 = load i32, i32* %343, align 16
  %573 = icmp eq i32 %572, 2
  %574 = load i32, i32* %344, align 4
  %575 = icmp eq i32 %574, 4
  %576 = and i1 %573, %575
  br i1 %576, label %753, label %577

577:                                              ; preds = %571
  %578 = load i8, i8* %345, align 16
  %579 = icmp eq i8 %578, 0
  br i1 %579, label %753, label %580

580:                                              ; preds = %524, %577
  %581 = load i32, i32* %182, align 4
  %582 = icmp sgt i32 %581, 0
  br i1 %582, label %753, label %583

583:                                              ; preds = %580
  %584 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 1, i32 1
  %585 = load i32, i32* %584, align 4
  %586 = icmp sgt i32 %585, 0
  br i1 %586, label %587, label %645

587:                                              ; preds = %583
  %588 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %588) #11
  %589 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 1, i32 0
  %590 = load i32, i32* %589, align 8
  %591 = sext i32 %590 to i64
  %592 = sext i32 %585 to i64
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %35, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %591, i64 %592, %"class.std::__1::allocator"* dereferenceable(1) %441) #11
  %593 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %594 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %593, i64 0, i32 1, i32 1
  %595 = load i8, i8* %594, align 1
  %596 = icmp slt i8 %595, 0
  %597 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load i16*, i16** %597, align 8
  %599 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %600 = load i64, i64* %599, align 8
  %601 = bitcast %"class.std::__1::basic_string"* %35 to i16*
  %602 = zext i8 %595 to i64
  %603 = select i1 %596, i16* %598, i16* %601
  %604 = select i1 %596, i64 %600, i64 %602
  %605 = bitcast i16* %598 to i8*
  br i1 %50, label %641, label %606

606:                                              ; preds = %587, %606
  %607 = phi i64 [ %609, %606 ], [ 0, %587 ]
  %608 = phi i16* [ %610, %606 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %587 ]
  %609 = add i64 %607, 1
  %610 = getelementptr inbounds i16, i16* %608, i64 1
  %611 = load i16, i16* %610, align 2
  %612 = icmp eq i16 %611, 0
  br i1 %612, label %613, label %606

613:                                              ; preds = %606
  %614 = icmp eq i64 %604, 0
  %615 = icmp eq i64 %609, 0
  %616 = or i1 %614, %615
  br i1 %616, label %641, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds i16, i16* %603, i64 %604
  %619 = getelementptr inbounds [0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 %609
  br label %620

620:                                              ; preds = %630, %617
  %621 = phi i16* [ %603, %617 ], [ %631, %630 ]
  %622 = load i16, i16* %621, align 2
  br label %625

623:                                              ; preds = %625
  %624 = icmp eq i16* %629, %619
  br i1 %624, label %630, label %625

625:                                              ; preds = %623, %620
  %626 = phi i16* [ %629, %623 ], [ getelementptr inbounds ([0 x i16], [0 x i16]* @_ZN4base16kWhitespaceUTF16E, i64 0, i64 0), %620 ]
  %627 = load i16, i16* %626, align 2
  %628 = icmp eq i16 %622, %627
  %629 = getelementptr inbounds i16, i16* %626, i64 1
  br i1 %628, label %633, label %623

630:                                              ; preds = %623
  %631 = getelementptr inbounds i16, i16* %621, i64 1
  %632 = icmp eq i16* %631, %618
  br i1 %632, label %633, label %620

633:                                              ; preds = %630, %625
  %634 = phi i16* [ %621, %625 ], [ %618, %630 ]
  %635 = icmp ne i16* %634, %618
  %636 = ptrtoint i16* %634 to i64
  %637 = ptrtoint i16* %603 to i64
  %638 = sub i64 %636, %637
  %639 = icmp ne i64 %638, -2
  %640 = and i1 %635, %639
  br label %641

641:                                              ; preds = %633, %613, %587
  %642 = phi i1 [ false, %613 ], [ %640, %633 ], [ false, %587 ]
  br i1 %596, label %643, label %644

643:                                              ; preds = %641
  call void @_ZdlPv(i8* %605) #12
  br label %644

644:                                              ; preds = %641, %643
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %588) #11
  br label %645

645:                                              ; preds = %583, %644
  %646 = phi i1 [ %642, %644 ], [ false, %583 ]
  %647 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 5, i32 1
  %648 = load i32, i32* %647, align 4
  %649 = icmp slt i32 %648, 1
  %650 = or i1 %646, %649
  br i1 %650, label %663, label %651

651:                                              ; preds = %645
  %652 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 5, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = add nsw i32 %648, -1
  %655 = add i32 %654, %653
  %656 = sext i32 %655 to i64
  %657 = load i8, i8* %38, align 1
  %658 = icmp slt i8 %657, 0
  %659 = load i16*, i16** %41, align 8
  %660 = select i1 %658, i16* %659, i16* %45
  %661 = getelementptr inbounds i16, i16* %660, i64 %656
  %662 = load i16, i16* %661, align 2
  switch i16 %662, label %663 [
    i16 92, label %753
    i16 47, label %753
  ]

663:                                              ; preds = %651, %645
  %664 = load i32, i32* %343, align 16
  %665 = icmp eq i32 %664, 2
  %666 = load i32, i32* %344, align 4
  %667 = icmp sgt i32 %666, 1
  %668 = and i1 %665, %667
  %669 = or i1 %646, %668
  %670 = select i1 %668, i32 4, i32 1
  br i1 %669, label %753, label %671

671:                                              ; preds = %663
  %672 = load i32, i32* %182, align 4
  %673 = icmp sgt i32 %672, 0
  %674 = zext i1 %673 to i32
  %675 = load i32, i32* %584, align 4
  %676 = icmp sgt i32 %675, 0
  %677 = select i1 %673, i32 2, i32 1
  %678 = select i1 %676, i32 %677, i32 %674
  %679 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 2, i32 1
  %680 = load i32, i32* %679, align 4
  %681 = icmp sgt i32 %680, 0
  %682 = zext i1 %681 to i32
  %683 = add nuw nsw i32 %678, %682
  %684 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 4, i32 1
  %685 = load i32, i32* %684, align 4
  %686 = icmp sgt i32 %685, 0
  %687 = zext i1 %686 to i32
  %688 = add nuw nsw i32 %683, %687
  %689 = icmp sgt i32 %648, 0
  %690 = zext i1 %689 to i32
  %691 = add nuw nsw i32 %688, %690
  %692 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 6, i32 1
  %693 = load i32, i32* %692, align 4
  %694 = icmp sgt i32 %693, 0
  %695 = zext i1 %694 to i32
  %696 = add nuw nsw i32 %691, %695
  %697 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %91, i64 0, i32 7, i32 1
  %698 = load i32, i32* %697, align 4
  %699 = icmp sgt i32 %698, 0
  %700 = zext i1 %699 to i32
  %701 = add nuw nsw i32 %696, %700
  %702 = icmp sgt i32 %701, 1
  br i1 %702, label %753, label %703

703:                                              ; preds = %671
  %704 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 1, i32 1
  %705 = load i32, i32* %704, align 4
  %706 = icmp sgt i32 %705, -1
  br i1 %706, label %707, label %719

707:                                              ; preds = %703
  %708 = bitcast %"class.std::__1::basic_string.1"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %709 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %708, i64 0, i32 1, i32 0
  %710 = load i8, i8* %709, align 1
  %711 = icmp slt i8 %710, 0
  %712 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %713 = load i64, i64* %712, align 8
  %714 = zext i8 %710 to i64
  %715 = select i1 %711, i64 %713, i64 %714
  %716 = icmp eq i64 %715, 0
  %717 = or i1 %442, %716
  %718 = select i1 %716, i32 1, i32 3
  br i1 %717, label %753, label %720

719:                                              ; preds = %703
  br i1 %442, label %753, label %720

720:                                              ; preds = %707, %719
  %721 = call zeroext i1 @_ZNK4GURL8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %116, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9) #11
  br i1 %721, label %753, label %722

722:                                              ; preds = %720
  %723 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 4, i32 1
  %724 = load i32, i32* %723, align 4
  %725 = icmp sgt i32 %724, -1
  br i1 %725, label %753, label %726

726:                                              ; preds = %722
  %727 = bitcast %"class.std::__1::basic_string.1"* %36 to i8*
  %728 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 0
  %729 = getelementptr inbounds %class.GURL, %class.GURL* %116, i64 0, i32 2, i32 3, i32 0
  %730 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %11, i64 0, i32 0
  %731 = bitcast %"class.std::__1::basic_string.1"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %732 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %731, i64 0, i32 1, i32 0
  %733 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %734 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = call zeroext i1 @_ZNK4GURL8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %116, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #11
  br i1 %735, label %736, label %779

736:                                              ; preds = %726
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #11
  %737 = load i32, i32* %352, align 4, !noalias !26
  %738 = icmp slt i32 %737, 1
  br i1 %738, label %739, label %740

739:                                              ; preds = %736
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br label %779

740:                                              ; preds = %736
  %741 = load i32, i32* %729, align 4, !noalias !26
  %742 = sext i32 %741 to i64
  %743 = sext i32 %737 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %730) #11, !noalias !26
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %36, %"class.std::__1::basic_string.1"* dereferenceable(24) %728, i64 %742, i64 %743, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %730) #11, !noalias !26
  %744 = load i8, i8* %732, align 1
  %745 = load i64, i64* %733, align 8
  %746 = icmp slt i8 %744, 0
  %747 = zext i8 %744 to i64
  %748 = select i1 %746, i64 %745, i64 %747
  %749 = icmp ugt i64 %748, 8
  br i1 %746, label %750, label %752

750:                                              ; preds = %740
  %751 = load i8*, i8** %734, align 8
  call void @_ZdlPv(i8* %751) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br i1 %749, label %753, label %779

752:                                              ; preds = %740
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br i1 %749, label %753, label %779

753:                                              ; preds = %529, %795, %752, %797, %798, %750, %514, %521, %707, %663, %651, %651, %671, %719, %720, %722, %580, %577, %571, %524, %487
  %754 = phi i32 [ %492, %487 ], [ %525, %524 ], [ 3, %571 ], [ 4, %577 ], [ 3, %580 ], [ 3, %651 ], [ 3, %651 ], [ %670, %663 ], [ 3, %671 ], [ %718, %707 ], [ 3, %719 ], [ 3, %720 ], [ 3, %722 ], [ 1, %521 ], [ 4, %514 ], [ 3, %752 ], [ 3, %797 ], [ 1, %798 ], [ 3, %750 ], [ 3, %795 ], [ 4, %529 ]
  %755 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %756 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %755, i64 0, i32 1, i32 1
  %757 = load i8, i8* %756, align 1
  %758 = icmp slt i8 %757, 0
  br i1 %758, label %759, label %762

759:                                              ; preds = %753
  %760 = bitcast %"class.std::__1::basic_string"* %31 to i8**
  %761 = load i8*, i8** %760, align 8
  call void @_ZdlPv(i8* %761) #12
  br label %762

762:                                              ; preds = %753, %759
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %431) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %342) #11
  br label %763

763:                                              ; preds = %134, %340, %205, %180, %139, %762
  %764 = phi i32 [ %324, %340 ], [ %210, %205 ], [ 1, %180 ], [ 3, %139 ], [ %754, %762 ], [ 4, %134 ]
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %114) #11
  %765 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %766 = load i8, i8* %765, align 1
  %767 = icmp slt i8 %766, 0
  br i1 %767, label %768, label %770

768:                                              ; preds = %763
  %769 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %769) #12
  br label %770

770:                                              ; preds = %763, %768
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #11
  %771 = load i8, i8* %104, align 1
  %772 = icmp slt i8 %771, 0
  br i1 %772, label %773, label %776

773:                                              ; preds = %770
  %774 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %775 = load i8*, i8** %774, align 8
  call void @_ZdlPv(i8* %775) #12
  br label %776

776:                                              ; preds = %770, %773
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %89) #11
  br label %777

777:                                              ; preds = %79, %58, %82, %776
  %778 = phi i32 [ %764, %776 ], [ 0, %82 ], [ 0, %58 ], [ 0, %79 ]
  ret i32 %778

779:                                              ; preds = %750, %739, %726, %752
  %780 = call zeroext i1 @_ZNK4GURL8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %116, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i64 4) #11
  br i1 %780, label %781, label %798

781:                                              ; preds = %779
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %727) #11
  %782 = load i32, i32* %352, align 4, !noalias !26
  %783 = icmp slt i32 %782, 1
  br i1 %783, label %784, label %785

784:                                              ; preds = %781
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br label %798

785:                                              ; preds = %781
  %786 = load i32, i32* %729, align 4, !noalias !26
  %787 = sext i32 %786 to i64
  %788 = sext i32 %782 to i64
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %730) #11, !noalias !26
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %36, %"class.std::__1::basic_string.1"* dereferenceable(24) %728, i64 %787, i64 %788, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %730) #11, !noalias !26
  %789 = load i8, i8* %732, align 1
  %790 = load i64, i64* %733, align 8
  %791 = icmp slt i8 %789, 0
  %792 = zext i8 %789 to i64
  %793 = select i1 %791, i64 %790, i64 %792
  %794 = icmp ugt i64 %793, 5
  br i1 %791, label %795, label %797

795:                                              ; preds = %785
  %796 = load i8*, i8** %734, align 8
  call void @_ZdlPv(i8* %796) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br i1 %794, label %753, label %798

797:                                              ; preds = %785
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %727) #11
  br i1 %794, label %753, label %798

798:                                              ; preds = %795, %784, %797, %779
  br label %753

799:                                              ; preds = %454
  %800 = getelementptr inbounds i16, i16* %451, i64 2
  %801 = load i16, i16* %800, align 2
  %802 = icmp eq i16 %801, 118
  br i1 %802, label %803, label %458

803:                                              ; preds = %799
  %804 = getelementptr inbounds i16, i16* %451, i64 3
  %805 = load i16, i16* %804, align 2
  %806 = icmp eq i16 %805, 97
  br i1 %806, label %807, label %458

807:                                              ; preds = %803
  %808 = getelementptr inbounds i16, i16* %451, i64 4
  %809 = load i16, i16* %808, align 2
  %810 = icmp eq i16 %809, 108
  br i1 %810, label %811, label %458

811:                                              ; preds = %807
  %812 = getelementptr inbounds i16, i16* %451, i64 5
  %813 = load i16, i16* %812, align 2
  %814 = icmp eq i16 %813, 105
  br i1 %814, label %815, label %458

815:                                              ; preds = %811
  %816 = getelementptr inbounds i16, i16* %451, i64 6
  %817 = load i16, i16* %816, align 2
  %818 = icmp eq i16 %817, 100
  br i1 %818, label %522, label %458
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17AutocompleteInput20ShouldUpgradeToHttpsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK4GURLiPS9_(%"class.std::__1::basic_string"* dereferenceable(24), %class.GURL* dereferenceable(120), i32, %class.GURL*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::allocator.8", align 1
  %6 = alloca %"class.std::__1::allocator.8", align 1
  %7 = alloca %"class.std::__1::allocator.8", align 1
  %8 = alloca %"class.std::__1::allocator.8", align 1
  %9 = alloca %"class.std::__1::basic_string.1", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string.1", align 8
  %12 = alloca %"class.std::__1::basic_string.1", align 8
  %13 = alloca %"class.std::__1::basic_string.1", align 8
  %14 = alloca %"class.std::__1::basic_string.1", align 8
  %15 = alloca %"class.url::StringPieceReplacements", align 8
  %16 = alloca %"class.std::__1::basic_string.1", align 8
  %17 = alloca %class.GURL, align 8
  %18 = bitcast %"class.std::__1::basic_string.1"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #11
  %19 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %20 = load i32, i32* %19, align 4, !noalias !31
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #11, !alias.scope !31
  %23 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %36

24:                                               ; preds = %4
  %25 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %26 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %27 = load i32, i32* %26, align 4, !noalias !31
  %28 = sext i32 %27 to i64
  %29 = sext i32 %20 to i64
  %30 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %30) #11, !noalias !31
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %9, %"class.std::__1::basic_string.1"* dereferenceable(24) %25, i64 %28, i64 %29, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %30) #11, !noalias !31
  %31 = bitcast %"class.std::__1::basic_string.1"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %22, %24
  %37 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %23, %22 ], [ %31, %24 ]
  %38 = phi i64 [ 0, %22 ], [ %35, %24 ]
  %39 = phi i8 [ 0, %22 ], [ %33, %24 ]
  %40 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #11
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %42 = icmp slt i8 %39, 0
  %43 = zext i8 %39 to i64
  %44 = select i1 %42, i64 %38, i64 %43
  %45 = icmp eq i64 %40, %44
  br i1 %45, label %46, label %208

46:                                               ; preds = %36
  %47 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"* nonnull %9, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %40) #11
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %208

49:                                               ; preds = %46
  %50 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i16*, i16** %54, align 8
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %57 = select i1 %53, i16* %55, i16* %56
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = zext i8 %52 to i64
  %61 = select i1 %53, i64 %59, i64 %60
  %62 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #11
  %63 = bitcast %"class.std::__1::basic_string.1"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = load i32, i32* %19, align 4, !noalias !36
  %65 = icmp slt i32 %64, 1
  br i1 %65, label %66, label %68

66:                                               ; preds = %49
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #11, !alias.scope !36
  %67 = bitcast %"class.std::__1::basic_string.1"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %82

68:                                               ; preds = %49
  %69 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %70 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %71 = load i32, i32* %70, align 4, !noalias !36
  %72 = sext i32 %71 to i64
  %73 = sext i32 %64 to i64
  %74 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %74) #11, !noalias !36
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %11, %"class.std::__1::basic_string.1"* dereferenceable(24) %69, i64 %72, i64 %73, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %74) #11, !noalias !36
  %75 = bitcast %"class.std::__1::basic_string.1"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  br label %82

82:                                               ; preds = %66, %68
  %83 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %66 ], [ %75, %68 ]
  %84 = phi i64 [ 0, %66 ], [ %81, %68 ]
  %85 = phi i8* [ null, %66 ], [ %79, %68 ]
  %86 = phi i8 [ 0, %66 ], [ %77, %68 ]
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %88 = icmp slt i8 %86, 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = select i1 %88, i8* %85, i8* %63
  %91 = zext i8 %86 to i64
  %92 = select i1 %88, i64 %84, i64 %91
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %10, i8* %90, i64 %92) #11
  %93 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %93, i64 0, i32 1, i32 1
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i16*, i16** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %100 = select i1 %96, i16* %98, i16* %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %95 to i64
  %104 = select i1 %96, i64 %102, i64 %103
  %105 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16* %57, i64 %61, i16* %100, i64 %104, i32 1) #11
  br i1 %105, label %195, label %106

106:                                              ; preds = %82
  %107 = bitcast %"class.std::__1::basic_string.1"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #11
  %108 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 1
  %109 = load i32, i32* %108, align 4, !noalias !41
  %110 = icmp slt i32 %109, 1
  br i1 %110, label %111, label %113

111:                                              ; preds = %106
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 0, i64 24, i1 false) #11, !alias.scope !41
  %112 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %127

113:                                              ; preds = %106
  %114 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %115 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 3, i32 0
  %116 = load i32, i32* %115, align 4, !noalias !41
  %117 = sext i32 %116 to i64
  %118 = sext i32 %109 to i64
  %119 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %119) #11, !noalias !41
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %12, %"class.std::__1::basic_string.1"* dereferenceable(24) %114, i64 %117, i64 %118, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %119) #11, !noalias !41
  %120 = bitcast %"class.std::__1::basic_string.1"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load i8*, i8** %123, align 8
  %125 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  br label %127

127:                                              ; preds = %111, %113
  %128 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %112, %111 ], [ %120, %113 ]
  %129 = phi i64 [ 0, %111 ], [ %126, %113 ]
  %130 = phi i8* [ null, %111 ], [ %124, %113 ]
  %131 = phi i8 [ 0, %111 ], [ %122, %113 ]
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %133 = icmp slt i8 %131, 0
  %134 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = select i1 %133, i8* %130, i8* %107
  %136 = zext i8 %131 to i64
  %137 = select i1 %133, i64 %129, i64 %136
  %138 = call zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %135, i64 %137) #11
  br i1 %138, label %188, label %139

139:                                              ; preds = %127
  %140 = bitcast %"class.std::__1::basic_string.1"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #11
  %141 = load i8, i8* %51, align 1
  %142 = icmp slt i8 %141, 0
  %143 = load i16*, i16** %54, align 8
  %144 = select i1 %142, i16* %143, i16* %56
  %145 = load i64, i64* %58, align 8
  %146 = zext i8 %141 to i64
  %147 = select i1 %142, i64 %145, i64 %146
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %13, i16* %144, i64 %147) #11
  %148 = call zeroext i1 @_ZN3net19IsHostnameNonUniqueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %13) #11
  br i1 %148, label %178, label %149

149:                                              ; preds = %139
  %150 = bitcast %"class.std::__1::basic_string.1"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #11
  %151 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 4, i32 1
  %152 = load i32, i32* %151, align 4, !noalias !46
  %153 = icmp slt i32 %152, 1
  br i1 %153, label %154, label %155

154:                                              ; preds = %149
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 0, i64 24, i1 false) #11, !alias.scope !46
  br label %176

155:                                              ; preds = %149
  %156 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %157 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 4, i32 0
  %158 = load i32, i32* %157, align 4, !noalias !46
  %159 = sext i32 %158 to i64
  %160 = sext i32 %152 to i64
  %161 = getelementptr inbounds %"class.std::__1::allocator.8", %"class.std::__1::allocator.8"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %161) #11, !noalias !46
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"* nonnull %14, %"class.std::__1::basic_string.1"* dereferenceable(24) %156, i64 %159, i64 %160, %"class.std::__1::allocator.8"* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %161) #11, !noalias !46
  %162 = bitcast %"class.std::__1::basic_string.1"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  %167 = icmp slt i8 %164, 0
  %168 = zext i8 %164 to i64
  %169 = select i1 %167, i64 %166, i64 %168
  %170 = icmp eq i64 %169, 0
  %171 = icmp ne i32 %2, 0
  %172 = or i1 %171, %170
  br i1 %167, label %173, label %176

173:                                              ; preds = %155
  %174 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  call void @_ZdlPv(i8* %175) #12
  br label %176

176:                                              ; preds = %154, %173, %155
  %177 = phi i1 [ true, %154 ], [ %172, %173 ], [ %172, %155 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #11
  br label %178

178:                                              ; preds = %139, %176
  %179 = phi i1 [ %177, %176 ], [ false, %139 ]
  %180 = bitcast %"class.std::__1::basic_string.1"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %183, label %184, label %187

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #12
  br label %187

187:                                              ; preds = %184, %178
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #11
  br label %188

188:                                              ; preds = %127, %187
  %189 = phi i1 [ %179, %187 ], [ false, %127 ]
  %190 = load i8, i8* %132, align 1
  %191 = icmp slt i8 %190, 0
  br i1 %191, label %192, label %194

192:                                              ; preds = %188
  %193 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %192, %188
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #11
  br label %195

195:                                              ; preds = %82, %194
  %196 = phi i1 [ %189, %194 ], [ false, %82 ]
  %197 = load i8, i8* %94, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %202

199:                                              ; preds = %195
  %200 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %201 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %201) #12
  br label %202

202:                                              ; preds = %195, %199
  %203 = load i8, i8* %87, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %202
  %206 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %206) #12
  br label %207

207:                                              ; preds = %202, %205
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62) #11
  br label %208

208:                                              ; preds = %36, %46, %207
  %209 = phi i1 [ %196, %207 ], [ false, %46 ], [ false, %36 ]
  %210 = load i8, i8* %41, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load i8*, i8** %213, align 8
  call void @_ZdlPv(i8* %214) #12
  br label %215

215:                                              ; preds = %208, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #11
  br i1 %209, label %216, label %258

216:                                              ; preds = %215
  %217 = bitcast %"class.url::StringPieceReplacements"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %217) #11
  %218 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 1
  %219 = bitcast %"struct.url::Parsed"* %218 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %219, i8 -86, i64 80, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 0, i64 64, i1 false) #11
  %220 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 1
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* %220) #11
  %221 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #11
  %222 = shl i64 %221, 32
  %223 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i8** %223, align 8
  %224 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 1, i32 0
  %225 = bitcast %"struct.url::Component"* %224 to i64*
  store i64 %222, i64* %225, align 8
  %226 = bitcast %"class.std::__1::basic_string.1"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %226) #11
  %227 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %228 = bitcast %"class.std::__1::basic_string.1"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 -86, i64 24, i1 false)
  call void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string.1"* nonnull sret %16, i32 %2) #11
  %229 = icmp eq i32 %2, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %216
  %231 = bitcast %"class.std::__1::basic_string.1"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %247

232:                                              ; preds = %216
  %233 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %234 = bitcast %"class.std::__1::basic_string.1"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = load i8, i8* %235, align 1
  %237 = icmp slt i8 %236, 0
  %238 = load i8*, i8** %227, align 8
  %239 = select i1 %237, i8* %238, i8* %226
  %240 = load i64, i64* %233, align 8
  %241 = zext i8 %236 to i64
  %242 = select i1 %237, i64 %240, i64 %241
  %243 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 0, i32 4
  store i8* %239, i8** %243, align 8
  %244 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0, i32 1, i32 4
  %245 = bitcast %"struct.url::Component"* %244 to i64*
  %246 = shl i64 %242, 32
  store i64 %246, i64* %245, align 8
  br label %247

247:                                              ; preds = %230, %232
  %248 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %231, %230 ], [ %234, %232 ]
  %249 = bitcast %class.GURL* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %249) #11
  %250 = getelementptr inbounds %"class.url::StringPieceReplacements", %"class.url::StringPieceReplacements"* %15, i64 0, i32 0
  call void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* nonnull sret %17, %class.GURL* %1, %"class.url::Replacements"* nonnull dereferenceable(144) %250) #11
  %251 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %3, %class.GURL* nonnull dereferenceable(120) %17) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %249) #11
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %248, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %247
  %256 = load i8*, i8** %227, align 8
  call void @_ZdlPv(i8* %256) #12
  br label %257

257:                                              ; preds = %247, %255
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %226) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %220) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %217) #11
  br label %258

258:                                              ; preds = %215, %257
  %259 = phi i1 [ true, %257 ], [ false, %215 ]
  ret i1 %259
}

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputC2ERKS_(%class.AutocompleteInput*, %class.AutocompleteInput* dereferenceable(512)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.AutocompleteInput* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %class.AutocompleteInput* %0 to i8*
  %9 = bitcast %class.AutocompleteInput* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #11
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %class.AutocompleteInput* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %class.AutocompleteInput* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %class.AutocompleteInput* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #13
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #13
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %class.AutocompleteInput* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !51
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !51
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !54, !noalias !51
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !54, !noalias !51
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !51
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !51
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !54, !noalias !51
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !54, !noalias !51
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !51
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !51
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !54, !noalias !51
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !54, !noalias !51
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !51
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !51
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !54, !noalias !51
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !54, !noalias !51
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !56

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !51
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !51
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !54, !noalias !51
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !54, !noalias !51
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !58

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !60

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !61

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  %187 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  store i64 %188, i64* %186, align 8
  %189 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  %190 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 2
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %189, %class.GURL* dereferenceable(120) %190) #11
  %191 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %192 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 3
  %193 = bitcast %"class.std::__1::basic_string"* %192 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %194 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %193, i64 0, i32 1, i32 1
  %195 = load i8, i8* %194, align 1
  %196 = icmp slt i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %185
  %198 = bitcast %"class.std::__1::basic_string"* %191 to i8*
  %199 = bitcast %"class.std::__1::basic_string"* %192 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 24, i1 false) #11
  br label %375

200:                                              ; preds = %185
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i16*, i16** %201, align 8
  %203 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = icmp ult i64 %204, 11
  br i1 %205, label %206, label %211

206:                                              ; preds = %200
  %207 = bitcast %"class.std::__1::basic_string"* %191 to i16*
  %208 = trunc i64 %204 to i8
  %209 = bitcast %"class.std::__1::basic_string"* %191 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %209, i64 0, i32 1, i32 1
  store i8 %208, i8* %210, align 1
  br label %228

211:                                              ; preds = %200
  %212 = icmp ugt i64 %204, 9223372036854775791
  br i1 %212, label %213, label %215

213:                                              ; preds = %211
  %214 = bitcast %"class.std::__1::basic_string"* %191 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %214) #13
  unreachable

215:                                              ; preds = %211
  %216 = add nuw nsw i64 %204, 8
  %217 = and i64 %216, -8
  %218 = icmp slt i64 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %215
  tail call void @abort() #13
  unreachable

220:                                              ; preds = %215
  %221 = shl i64 %217, 1
  %222 = tail call i8* @_Znwm(i64 %221) #12
  %223 = bitcast i8* %222 to i16*
  %224 = bitcast %"class.std::__1::basic_string"* %191 to i8**
  store i8* %222, i8** %224, align 8
  %225 = or i64 %217, -9223372036854775808
  %226 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %204, i64* %227, align 8
  br label %228

228:                                              ; preds = %220, %206
  %229 = phi i16* [ %207, %206 ], [ %223, %220 ]
  %230 = add nuw nsw i64 %204, 1
  %231 = add i64 %204, 1
  %232 = icmp ult i64 %231, 16
  br i1 %232, label %322, label %233

233:                                              ; preds = %228
  %234 = add i64 %204, 1
  %235 = getelementptr i16, i16* %229, i64 %234
  %236 = getelementptr i16, i16* %202, i64 %234
  %237 = icmp ult i16* %229, %236
  %238 = icmp ult i16* %202, %235
  %239 = and i1 %237, %238
  br i1 %239, label %322, label %240

240:                                              ; preds = %233
  %241 = and i64 %231, -16
  %242 = sub i64 %230, %241
  %243 = getelementptr i16, i16* %202, i64 %241
  %244 = getelementptr i16, i16* %229, i64 %241
  %245 = add i64 %241, -16
  %246 = lshr exact i64 %245, 4
  %247 = add nuw nsw i64 %246, 1
  %248 = and i64 %247, 3
  %249 = icmp ult i64 %245, 48
  br i1 %249, label %301, label %250

250:                                              ; preds = %240
  %251 = sub nsw i64 %247, %248
  br label %252

252:                                              ; preds = %252, %250
  %253 = phi i64 [ 0, %250 ], [ %298, %252 ]
  %254 = phi i64 [ %251, %250 ], [ %299, %252 ]
  %255 = getelementptr i16, i16* %202, i64 %253
  %256 = getelementptr i16, i16* %229, i64 %253
  %257 = bitcast i16* %255 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !62
  %259 = getelementptr i16, i16* %255, i64 8
  %260 = bitcast i16* %259 to <8 x i16>*
  %261 = load <8 x i16>, <8 x i16>* %260, align 2, !alias.scope !62
  %262 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %262, align 2, !alias.scope !65, !noalias !62
  %263 = getelementptr i16, i16* %256, i64 8
  %264 = bitcast i16* %263 to <8 x i16>*
  store <8 x i16> %261, <8 x i16>* %264, align 2, !alias.scope !65, !noalias !62
  %265 = or i64 %253, 16
  %266 = getelementptr i16, i16* %202, i64 %265
  %267 = getelementptr i16, i16* %229, i64 %265
  %268 = bitcast i16* %266 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !62
  %270 = getelementptr i16, i16* %266, i64 8
  %271 = bitcast i16* %270 to <8 x i16>*
  %272 = load <8 x i16>, <8 x i16>* %271, align 2, !alias.scope !62
  %273 = bitcast i16* %267 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %273, align 2, !alias.scope !65, !noalias !62
  %274 = getelementptr i16, i16* %267, i64 8
  %275 = bitcast i16* %274 to <8 x i16>*
  store <8 x i16> %272, <8 x i16>* %275, align 2, !alias.scope !65, !noalias !62
  %276 = or i64 %253, 32
  %277 = getelementptr i16, i16* %202, i64 %276
  %278 = getelementptr i16, i16* %229, i64 %276
  %279 = bitcast i16* %277 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !62
  %281 = getelementptr i16, i16* %277, i64 8
  %282 = bitcast i16* %281 to <8 x i16>*
  %283 = load <8 x i16>, <8 x i16>* %282, align 2, !alias.scope !62
  %284 = bitcast i16* %278 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %284, align 2, !alias.scope !65, !noalias !62
  %285 = getelementptr i16, i16* %278, i64 8
  %286 = bitcast i16* %285 to <8 x i16>*
  store <8 x i16> %283, <8 x i16>* %286, align 2, !alias.scope !65, !noalias !62
  %287 = or i64 %253, 48
  %288 = getelementptr i16, i16* %202, i64 %287
  %289 = getelementptr i16, i16* %229, i64 %287
  %290 = bitcast i16* %288 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !62
  %292 = getelementptr i16, i16* %288, i64 8
  %293 = bitcast i16* %292 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !62
  %295 = bitcast i16* %289 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %295, align 2, !alias.scope !65, !noalias !62
  %296 = getelementptr i16, i16* %289, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %297, align 2, !alias.scope !65, !noalias !62
  %298 = add i64 %253, 64
  %299 = add i64 %254, -4
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %301, label %252, !llvm.loop !67

301:                                              ; preds = %252, %240
  %302 = phi i64 [ 0, %240 ], [ %298, %252 ]
  %303 = icmp eq i64 %248, 0
  br i1 %303, label %320, label %304

304:                                              ; preds = %301, %304
  %305 = phi i64 [ %317, %304 ], [ %302, %301 ]
  %306 = phi i64 [ %318, %304 ], [ %248, %301 ]
  %307 = getelementptr i16, i16* %202, i64 %305
  %308 = getelementptr i16, i16* %229, i64 %305
  %309 = bitcast i16* %307 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !62
  %311 = getelementptr i16, i16* %307, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  %313 = load <8 x i16>, <8 x i16>* %312, align 2, !alias.scope !62
  %314 = bitcast i16* %308 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %314, align 2, !alias.scope !65, !noalias !62
  %315 = getelementptr i16, i16* %308, i64 8
  %316 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %313, <8 x i16>* %316, align 2, !alias.scope !65, !noalias !62
  %317 = add i64 %305, 16
  %318 = add i64 %306, -1
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %304, !llvm.loop !68

320:                                              ; preds = %304, %301
  %321 = icmp eq i64 %231, %241
  br i1 %321, label %375, label %322

322:                                              ; preds = %320, %233, %228
  %323 = phi i64 [ %230, %233 ], [ %230, %228 ], [ %242, %320 ]
  %324 = phi i16* [ %202, %233 ], [ %202, %228 ], [ %243, %320 ]
  %325 = phi i16* [ %229, %233 ], [ %229, %228 ], [ %244, %320 ]
  %326 = add i64 %323, -1
  %327 = and i64 %323, 7
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %322, %329
  %330 = phi i64 [ %335, %329 ], [ %323, %322 ]
  %331 = phi i16* [ %337, %329 ], [ %324, %322 ]
  %332 = phi i16* [ %336, %329 ], [ %325, %322 ]
  %333 = phi i64 [ %338, %329 ], [ %327, %322 ]
  %334 = load i16, i16* %331, align 2
  store i16 %334, i16* %332, align 2
  %335 = add i64 %330, -1
  %336 = getelementptr inbounds i16, i16* %332, i64 1
  %337 = getelementptr inbounds i16, i16* %331, i64 1
  %338 = add i64 %333, -1
  %339 = icmp eq i64 %338, 0
  br i1 %339, label %340, label %329, !llvm.loop !69

340:                                              ; preds = %329, %322
  %341 = phi i64 [ %323, %322 ], [ %335, %329 ]
  %342 = phi i16* [ %324, %322 ], [ %337, %329 ]
  %343 = phi i16* [ %325, %322 ], [ %336, %329 ]
  %344 = icmp ult i64 %326, 7
  br i1 %344, label %375, label %345

345:                                              ; preds = %340, %345
  %346 = phi i64 [ %371, %345 ], [ %341, %340 ]
  %347 = phi i16* [ %373, %345 ], [ %342, %340 ]
  %348 = phi i16* [ %372, %345 ], [ %343, %340 ]
  %349 = load i16, i16* %347, align 2
  store i16 %349, i16* %348, align 2
  %350 = getelementptr inbounds i16, i16* %348, i64 1
  %351 = getelementptr inbounds i16, i16* %347, i64 1
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %348, i64 2
  %354 = getelementptr inbounds i16, i16* %347, i64 2
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %348, i64 3
  %357 = getelementptr inbounds i16, i16* %347, i64 3
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %348, i64 4
  %360 = getelementptr inbounds i16, i16* %347, i64 4
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %348, i64 5
  %363 = getelementptr inbounds i16, i16* %347, i64 5
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %348, i64 6
  %366 = getelementptr inbounds i16, i16* %347, i64 6
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = getelementptr inbounds i16, i16* %348, i64 7
  %369 = getelementptr inbounds i16, i16* %347, i64 7
  %370 = load i16, i16* %369, align 2
  store i16 %370, i16* %368, align 2
  %371 = add i64 %346, -8
  %372 = getelementptr inbounds i16, i16* %348, i64 8
  %373 = getelementptr inbounds i16, i16* %347, i64 8
  %374 = icmp eq i64 %371, 0
  br i1 %374, label %375, label %345, !llvm.loop !70

375:                                              ; preds = %340, %345, %320, %197
  %376 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 4
  %377 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 4
  %378 = bitcast i32* %377 to i64*
  %379 = bitcast i32* %376 to i64*
  %380 = load i64, i64* %378, align 8
  store i64 %380, i64* %379, align 8
  %381 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %382 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 6
  tail call void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"* %381, %"struct.url::Parsed"* dereferenceable(80) %382) #11
  %383 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %384 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 7
  %385 = bitcast %"class.std::__1::basic_string"* %384 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %386 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %385, i64 0, i32 1, i32 1
  %387 = load i8, i8* %386, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %392, label %389

389:                                              ; preds = %375
  %390 = bitcast %"class.std::__1::basic_string"* %383 to i8*
  %391 = bitcast %"class.std::__1::basic_string"* %384 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %390, i8* align 8 %391, i64 24, i1 false) #11
  br label %567

392:                                              ; preds = %375
  %393 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %384, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load i16*, i16** %393, align 8
  %395 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %396 = load i64, i64* %395, align 8
  %397 = icmp ult i64 %396, 11
  br i1 %397, label %398, label %403

398:                                              ; preds = %392
  %399 = bitcast %"class.std::__1::basic_string"* %383 to i16*
  %400 = trunc i64 %396 to i8
  %401 = bitcast %"class.std::__1::basic_string"* %383 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %402 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %401, i64 0, i32 1, i32 1
  store i8 %400, i8* %402, align 1
  br label %420

403:                                              ; preds = %392
  %404 = icmp ugt i64 %396, 9223372036854775791
  br i1 %404, label %405, label %407

405:                                              ; preds = %403
  %406 = bitcast %"class.std::__1::basic_string"* %383 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %406) #13
  unreachable

407:                                              ; preds = %403
  %408 = add nuw nsw i64 %396, 8
  %409 = and i64 %408, -8
  %410 = icmp slt i64 %409, 0
  br i1 %410, label %411, label %412

411:                                              ; preds = %407
  tail call void @abort() #13
  unreachable

412:                                              ; preds = %407
  %413 = shl i64 %409, 1
  %414 = tail call i8* @_Znwm(i64 %413) #12
  %415 = bitcast i8* %414 to i16*
  %416 = bitcast %"class.std::__1::basic_string"* %383 to i8**
  store i8* %414, i8** %416, align 8
  %417 = or i64 %409, -9223372036854775808
  %418 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %417, i64* %418, align 8
  %419 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %396, i64* %419, align 8
  br label %420

420:                                              ; preds = %412, %398
  %421 = phi i16* [ %399, %398 ], [ %415, %412 ]
  %422 = add nuw nsw i64 %396, 1
  %423 = add i64 %396, 1
  %424 = icmp ult i64 %423, 16
  br i1 %424, label %514, label %425

425:                                              ; preds = %420
  %426 = add i64 %396, 1
  %427 = getelementptr i16, i16* %421, i64 %426
  %428 = getelementptr i16, i16* %394, i64 %426
  %429 = icmp ult i16* %421, %428
  %430 = icmp ult i16* %394, %427
  %431 = and i1 %429, %430
  br i1 %431, label %514, label %432

432:                                              ; preds = %425
  %433 = and i64 %423, -16
  %434 = sub i64 %422, %433
  %435 = getelementptr i16, i16* %394, i64 %433
  %436 = getelementptr i16, i16* %421, i64 %433
  %437 = add i64 %433, -16
  %438 = lshr exact i64 %437, 4
  %439 = add nuw nsw i64 %438, 1
  %440 = and i64 %439, 3
  %441 = icmp ult i64 %437, 48
  br i1 %441, label %493, label %442

442:                                              ; preds = %432
  %443 = sub nsw i64 %439, %440
  br label %444

444:                                              ; preds = %444, %442
  %445 = phi i64 [ 0, %442 ], [ %490, %444 ]
  %446 = phi i64 [ %443, %442 ], [ %491, %444 ]
  %447 = getelementptr i16, i16* %394, i64 %445
  %448 = getelementptr i16, i16* %421, i64 %445
  %449 = bitcast i16* %447 to <8 x i16>*
  %450 = load <8 x i16>, <8 x i16>* %449, align 2, !alias.scope !71
  %451 = getelementptr i16, i16* %447, i64 8
  %452 = bitcast i16* %451 to <8 x i16>*
  %453 = load <8 x i16>, <8 x i16>* %452, align 2, !alias.scope !71
  %454 = bitcast i16* %448 to <8 x i16>*
  store <8 x i16> %450, <8 x i16>* %454, align 2, !alias.scope !74, !noalias !71
  %455 = getelementptr i16, i16* %448, i64 8
  %456 = bitcast i16* %455 to <8 x i16>*
  store <8 x i16> %453, <8 x i16>* %456, align 2, !alias.scope !74, !noalias !71
  %457 = or i64 %445, 16
  %458 = getelementptr i16, i16* %394, i64 %457
  %459 = getelementptr i16, i16* %421, i64 %457
  %460 = bitcast i16* %458 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !71
  %462 = getelementptr i16, i16* %458, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 2, !alias.scope !71
  %465 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %465, align 2, !alias.scope !74, !noalias !71
  %466 = getelementptr i16, i16* %459, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %464, <8 x i16>* %467, align 2, !alias.scope !74, !noalias !71
  %468 = or i64 %445, 32
  %469 = getelementptr i16, i16* %394, i64 %468
  %470 = getelementptr i16, i16* %421, i64 %468
  %471 = bitcast i16* %469 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !71
  %473 = getelementptr i16, i16* %469, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !71
  %476 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %476, align 2, !alias.scope !74, !noalias !71
  %477 = getelementptr i16, i16* %470, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %478, align 2, !alias.scope !74, !noalias !71
  %479 = or i64 %445, 48
  %480 = getelementptr i16, i16* %394, i64 %479
  %481 = getelementptr i16, i16* %421, i64 %479
  %482 = bitcast i16* %480 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !71
  %484 = getelementptr i16, i16* %480, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !71
  %487 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %487, align 2, !alias.scope !74, !noalias !71
  %488 = getelementptr i16, i16* %481, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %489, align 2, !alias.scope !74, !noalias !71
  %490 = add i64 %445, 64
  %491 = add i64 %446, -4
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %493, label %444, !llvm.loop !76

493:                                              ; preds = %444, %432
  %494 = phi i64 [ 0, %432 ], [ %490, %444 ]
  %495 = icmp eq i64 %440, 0
  br i1 %495, label %512, label %496

496:                                              ; preds = %493, %496
  %497 = phi i64 [ %509, %496 ], [ %494, %493 ]
  %498 = phi i64 [ %510, %496 ], [ %440, %493 ]
  %499 = getelementptr i16, i16* %394, i64 %497
  %500 = getelementptr i16, i16* %421, i64 %497
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !71
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !71
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !74, !noalias !71
  %507 = getelementptr i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !74, !noalias !71
  %509 = add i64 %497, 16
  %510 = add i64 %498, -1
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %512, label %496, !llvm.loop !77

512:                                              ; preds = %496, %493
  %513 = icmp eq i64 %423, %433
  br i1 %513, label %567, label %514

514:                                              ; preds = %512, %425, %420
  %515 = phi i64 [ %422, %425 ], [ %422, %420 ], [ %434, %512 ]
  %516 = phi i16* [ %394, %425 ], [ %394, %420 ], [ %435, %512 ]
  %517 = phi i16* [ %421, %425 ], [ %421, %420 ], [ %436, %512 ]
  %518 = add i64 %515, -1
  %519 = and i64 %515, 7
  %520 = icmp eq i64 %519, 0
  br i1 %520, label %532, label %521

521:                                              ; preds = %514, %521
  %522 = phi i64 [ %527, %521 ], [ %515, %514 ]
  %523 = phi i16* [ %529, %521 ], [ %516, %514 ]
  %524 = phi i16* [ %528, %521 ], [ %517, %514 ]
  %525 = phi i64 [ %530, %521 ], [ %519, %514 ]
  %526 = load i16, i16* %523, align 2
  store i16 %526, i16* %524, align 2
  %527 = add i64 %522, -1
  %528 = getelementptr inbounds i16, i16* %524, i64 1
  %529 = getelementptr inbounds i16, i16* %523, i64 1
  %530 = add i64 %525, -1
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %532, label %521, !llvm.loop !78

532:                                              ; preds = %521, %514
  %533 = phi i64 [ %515, %514 ], [ %527, %521 ]
  %534 = phi i16* [ %516, %514 ], [ %529, %521 ]
  %535 = phi i16* [ %517, %514 ], [ %528, %521 ]
  %536 = icmp ult i64 %518, 7
  br i1 %536, label %567, label %537

537:                                              ; preds = %532, %537
  %538 = phi i64 [ %563, %537 ], [ %533, %532 ]
  %539 = phi i16* [ %565, %537 ], [ %534, %532 ]
  %540 = phi i16* [ %564, %537 ], [ %535, %532 ]
  %541 = load i16, i16* %539, align 2
  store i16 %541, i16* %540, align 2
  %542 = getelementptr inbounds i16, i16* %540, i64 1
  %543 = getelementptr inbounds i16, i16* %539, i64 1
  %544 = load i16, i16* %543, align 2
  store i16 %544, i16* %542, align 2
  %545 = getelementptr inbounds i16, i16* %540, i64 2
  %546 = getelementptr inbounds i16, i16* %539, i64 2
  %547 = load i16, i16* %546, align 2
  store i16 %547, i16* %545, align 2
  %548 = getelementptr inbounds i16, i16* %540, i64 3
  %549 = getelementptr inbounds i16, i16* %539, i64 3
  %550 = load i16, i16* %549, align 2
  store i16 %550, i16* %548, align 2
  %551 = getelementptr inbounds i16, i16* %540, i64 4
  %552 = getelementptr inbounds i16, i16* %539, i64 4
  %553 = load i16, i16* %552, align 2
  store i16 %553, i16* %551, align 2
  %554 = getelementptr inbounds i16, i16* %540, i64 5
  %555 = getelementptr inbounds i16, i16* %539, i64 5
  %556 = load i16, i16* %555, align 2
  store i16 %556, i16* %554, align 2
  %557 = getelementptr inbounds i16, i16* %540, i64 6
  %558 = getelementptr inbounds i16, i16* %539, i64 6
  %559 = load i16, i16* %558, align 2
  store i16 %559, i16* %557, align 2
  %560 = getelementptr inbounds i16, i16* %540, i64 7
  %561 = getelementptr inbounds i16, i16* %539, i64 7
  %562 = load i16, i16* %561, align 2
  store i16 %562, i16* %560, align 2
  %563 = add i64 %538, -8
  %564 = getelementptr inbounds i16, i16* %540, i64 8
  %565 = getelementptr inbounds i16, i16* %539, i64 8
  %566 = icmp eq i64 %563, 0
  br i1 %566, label %567, label %537, !llvm.loop !79

567:                                              ; preds = %532, %537, %512, %389
  %568 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %569 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 8
  tail call void @_ZN4GURLC1ERKS_(%class.GURL* %568, %class.GURL* dereferenceable(120) %569) #11
  %570 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %571 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9
  %572 = bitcast %"class.std::__1::basic_string.1"* %571 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %573 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %572, i64 0, i32 1, i32 0
  %574 = load i8, i8* %573, align 1
  %575 = icmp slt i8 %574, 0
  br i1 %575, label %579, label %576

576:                                              ; preds = %567
  %577 = bitcast %"class.std::__1::basic_string.1"* %570 to i8*
  %578 = bitcast %"class.std::__1::basic_string.1"* %571 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %577, i8* align 8 %578, i64 24, i1 false) #11
  br label %584

579:                                              ; preds = %567
  %580 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %571, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = load i8*, i8** %580, align 8
  %582 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %583 = load i64, i64* %582, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %570, i8* %581, i64 %583) #11
  br label %584

584:                                              ; preds = %576, %579
  %585 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  %586 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %585, i8* align 8 %586, i64 16, i1 false)
  %587 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %588 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16
  %589 = bitcast %"class.std::__1::vector"* %587 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %589, i8 0, i64 24, i1 false) #11
  %590 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 16, i32 0, i32 1
  %591 = bitcast %"class.std::__1::basic_string"** %590 to i64*
  %592 = load i64, i64* %591, align 8
  %593 = bitcast %"class.std::__1::vector"* %588 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = sub i64 %592, %594
  %596 = sdiv exact i64 %595, 24
  %597 = icmp eq i64 %595, 0
  br i1 %597, label %812, label %598

598:                                              ; preds = %584
  %599 = icmp ugt i64 %596, 768614336404564650
  br i1 %599, label %600, label %602

600:                                              ; preds = %598
  %601 = bitcast %"class.std::__1::vector"* %587 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %601) #13
  unreachable

602:                                              ; preds = %598
  %603 = tail call i8* @_Znwm(i64 %595) #12
  %604 = bitcast i8* %603 to %"class.std::__1::basic_string"*
  %605 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 1
  %606 = bitcast %"class.std::__1::basic_string"** %605 to i8**
  store i8* %603, i8** %606, align 8
  %607 = bitcast %"class.std::__1::vector"* %587 to i8**
  store i8* %603, i8** %607, align 8
  %608 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %604, i64 %596
  %609 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %608, %"class.std::__1::basic_string"** %609, align 8
  %610 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %588, i64 0, i32 0, i32 0
  %611 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %610, align 8
  %612 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %590, align 8
  %613 = bitcast %"class.std::__1::basic_string"** %605 to i64*
  %614 = ptrtoint i8* %603 to i64
  %615 = icmp eq %"class.std::__1::basic_string"* %611, %612
  br i1 %615, label %810, label %616

616:                                              ; preds = %602
  %617 = bitcast i8* %603 to %"class.std::__1::basic_string"*
  br label %618

618:                                              ; preds = %804, %616
  %619 = phi %"class.std::__1::basic_string"* [ %806, %804 ], [ %617, %616 ]
  %620 = phi %"class.std::__1::basic_string"* [ %805, %804 ], [ %611, %616 ]
  %621 = bitcast %"class.std::__1::basic_string"* %620 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %622 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %621, i64 0, i32 1, i32 1
  %623 = load i8, i8* %622, align 1
  %624 = icmp slt i8 %623, 0
  br i1 %624, label %628, label %625

625:                                              ; preds = %618
  %626 = bitcast %"class.std::__1::basic_string"* %619 to i8*
  %627 = bitcast %"class.std::__1::basic_string"* %620 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* align 8 %627, i64 24, i1 false) #11
  br label %804

628:                                              ; preds = %618
  %629 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = load i16*, i16** %629, align 8
  %631 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %632 = load i64, i64* %631, align 8
  %633 = icmp ult i64 %632, 11
  br i1 %633, label %634, label %639

634:                                              ; preds = %628
  %635 = bitcast %"class.std::__1::basic_string"* %619 to i16*
  %636 = trunc i64 %632 to i8
  %637 = bitcast %"class.std::__1::basic_string"* %619 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %638 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %637, i64 0, i32 1, i32 1
  store i8 %636, i8* %638, align 1
  br label %656

639:                                              ; preds = %628
  %640 = icmp ugt i64 %632, 9223372036854775791
  br i1 %640, label %641, label %643

641:                                              ; preds = %639
  %642 = bitcast %"class.std::__1::basic_string"* %619 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %642) #13
  unreachable

643:                                              ; preds = %639
  %644 = add nuw nsw i64 %632, 8
  %645 = and i64 %644, -8
  %646 = icmp slt i64 %645, 0
  br i1 %646, label %647, label %648

647:                                              ; preds = %643
  tail call void @abort() #13
  unreachable

648:                                              ; preds = %643
  %649 = shl i64 %645, 1
  %650 = tail call i8* @_Znwm(i64 %649) #12
  %651 = bitcast i8* %650 to i16*
  %652 = bitcast %"class.std::__1::basic_string"* %619 to i8**
  store i8* %650, i8** %652, align 8
  %653 = or i64 %645, -9223372036854775808
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %619, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %653, i64* %654, align 8
  %655 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %619, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %632, i64* %655, align 8
  br label %656

656:                                              ; preds = %648, %634
  %657 = phi i16* [ %635, %634 ], [ %651, %648 ]
  %658 = add nuw nsw i64 %632, 1
  %659 = add i64 %632, 1
  %660 = icmp ult i64 %659, 16
  br i1 %660, label %751, label %661

661:                                              ; preds = %656
  %662 = getelementptr i16, i16* %657, i64 1
  %663 = getelementptr i16, i16* %662, i64 %632
  %664 = getelementptr i16, i16* %630, i64 1
  %665 = getelementptr i16, i16* %664, i64 %632
  %666 = icmp ult i16* %657, %665
  %667 = icmp ult i16* %630, %663
  %668 = and i1 %666, %667
  br i1 %668, label %751, label %669

669:                                              ; preds = %661
  %670 = and i64 %659, -16
  %671 = sub i64 %658, %670
  %672 = getelementptr i16, i16* %630, i64 %670
  %673 = getelementptr i16, i16* %657, i64 %670
  %674 = add i64 %670, -16
  %675 = lshr exact i64 %674, 4
  %676 = add nuw nsw i64 %675, 1
  %677 = and i64 %676, 3
  %678 = icmp ult i64 %674, 48
  br i1 %678, label %730, label %679

679:                                              ; preds = %669
  %680 = sub nsw i64 %676, %677
  br label %681

681:                                              ; preds = %681, %679
  %682 = phi i64 [ 0, %679 ], [ %727, %681 ]
  %683 = phi i64 [ %680, %679 ], [ %728, %681 ]
  %684 = getelementptr i16, i16* %630, i64 %682
  %685 = getelementptr i16, i16* %657, i64 %682
  %686 = bitcast i16* %684 to <8 x i16>*
  %687 = load <8 x i16>, <8 x i16>* %686, align 2, !alias.scope !80
  %688 = getelementptr i16, i16* %684, i64 8
  %689 = bitcast i16* %688 to <8 x i16>*
  %690 = load <8 x i16>, <8 x i16>* %689, align 2, !alias.scope !80
  %691 = bitcast i16* %685 to <8 x i16>*
  store <8 x i16> %687, <8 x i16>* %691, align 2, !alias.scope !83, !noalias !80
  %692 = getelementptr i16, i16* %685, i64 8
  %693 = bitcast i16* %692 to <8 x i16>*
  store <8 x i16> %690, <8 x i16>* %693, align 2, !alias.scope !83, !noalias !80
  %694 = or i64 %682, 16
  %695 = getelementptr i16, i16* %630, i64 %694
  %696 = getelementptr i16, i16* %657, i64 %694
  %697 = bitcast i16* %695 to <8 x i16>*
  %698 = load <8 x i16>, <8 x i16>* %697, align 2, !alias.scope !80
  %699 = getelementptr i16, i16* %695, i64 8
  %700 = bitcast i16* %699 to <8 x i16>*
  %701 = load <8 x i16>, <8 x i16>* %700, align 2, !alias.scope !80
  %702 = bitcast i16* %696 to <8 x i16>*
  store <8 x i16> %698, <8 x i16>* %702, align 2, !alias.scope !83, !noalias !80
  %703 = getelementptr i16, i16* %696, i64 8
  %704 = bitcast i16* %703 to <8 x i16>*
  store <8 x i16> %701, <8 x i16>* %704, align 2, !alias.scope !83, !noalias !80
  %705 = or i64 %682, 32
  %706 = getelementptr i16, i16* %630, i64 %705
  %707 = getelementptr i16, i16* %657, i64 %705
  %708 = bitcast i16* %706 to <8 x i16>*
  %709 = load <8 x i16>, <8 x i16>* %708, align 2, !alias.scope !80
  %710 = getelementptr i16, i16* %706, i64 8
  %711 = bitcast i16* %710 to <8 x i16>*
  %712 = load <8 x i16>, <8 x i16>* %711, align 2, !alias.scope !80
  %713 = bitcast i16* %707 to <8 x i16>*
  store <8 x i16> %709, <8 x i16>* %713, align 2, !alias.scope !83, !noalias !80
  %714 = getelementptr i16, i16* %707, i64 8
  %715 = bitcast i16* %714 to <8 x i16>*
  store <8 x i16> %712, <8 x i16>* %715, align 2, !alias.scope !83, !noalias !80
  %716 = or i64 %682, 48
  %717 = getelementptr i16, i16* %630, i64 %716
  %718 = getelementptr i16, i16* %657, i64 %716
  %719 = bitcast i16* %717 to <8 x i16>*
  %720 = load <8 x i16>, <8 x i16>* %719, align 2, !alias.scope !80
  %721 = getelementptr i16, i16* %717, i64 8
  %722 = bitcast i16* %721 to <8 x i16>*
  %723 = load <8 x i16>, <8 x i16>* %722, align 2, !alias.scope !80
  %724 = bitcast i16* %718 to <8 x i16>*
  store <8 x i16> %720, <8 x i16>* %724, align 2, !alias.scope !83, !noalias !80
  %725 = getelementptr i16, i16* %718, i64 8
  %726 = bitcast i16* %725 to <8 x i16>*
  store <8 x i16> %723, <8 x i16>* %726, align 2, !alias.scope !83, !noalias !80
  %727 = add i64 %682, 64
  %728 = add i64 %683, -4
  %729 = icmp eq i64 %728, 0
  br i1 %729, label %730, label %681, !llvm.loop !85

730:                                              ; preds = %681, %669
  %731 = phi i64 [ 0, %669 ], [ %727, %681 ]
  %732 = icmp eq i64 %677, 0
  br i1 %732, label %749, label %733

733:                                              ; preds = %730, %733
  %734 = phi i64 [ %746, %733 ], [ %731, %730 ]
  %735 = phi i64 [ %747, %733 ], [ %677, %730 ]
  %736 = getelementptr i16, i16* %630, i64 %734
  %737 = getelementptr i16, i16* %657, i64 %734
  %738 = bitcast i16* %736 to <8 x i16>*
  %739 = load <8 x i16>, <8 x i16>* %738, align 2, !alias.scope !80
  %740 = getelementptr i16, i16* %736, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  %742 = load <8 x i16>, <8 x i16>* %741, align 2, !alias.scope !80
  %743 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %739, <8 x i16>* %743, align 2, !alias.scope !83, !noalias !80
  %744 = getelementptr i16, i16* %737, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %742, <8 x i16>* %745, align 2, !alias.scope !83, !noalias !80
  %746 = add i64 %734, 16
  %747 = add i64 %735, -1
  %748 = icmp eq i64 %747, 0
  br i1 %748, label %749, label %733, !llvm.loop !86

749:                                              ; preds = %733, %730
  %750 = icmp eq i64 %659, %670
  br i1 %750, label %804, label %751

751:                                              ; preds = %749, %661, %656
  %752 = phi i64 [ %658, %661 ], [ %658, %656 ], [ %671, %749 ]
  %753 = phi i16* [ %630, %661 ], [ %630, %656 ], [ %672, %749 ]
  %754 = phi i16* [ %657, %661 ], [ %657, %656 ], [ %673, %749 ]
  %755 = add i64 %752, -1
  %756 = and i64 %752, 7
  %757 = icmp eq i64 %756, 0
  br i1 %757, label %769, label %758

758:                                              ; preds = %751, %758
  %759 = phi i64 [ %764, %758 ], [ %752, %751 ]
  %760 = phi i16* [ %766, %758 ], [ %753, %751 ]
  %761 = phi i16* [ %765, %758 ], [ %754, %751 ]
  %762 = phi i64 [ %767, %758 ], [ %756, %751 ]
  %763 = load i16, i16* %760, align 2
  store i16 %763, i16* %761, align 2
  %764 = add i64 %759, -1
  %765 = getelementptr inbounds i16, i16* %761, i64 1
  %766 = getelementptr inbounds i16, i16* %760, i64 1
  %767 = add i64 %762, -1
  %768 = icmp eq i64 %767, 0
  br i1 %768, label %769, label %758, !llvm.loop !87

769:                                              ; preds = %758, %751
  %770 = phi i64 [ %752, %751 ], [ %764, %758 ]
  %771 = phi i16* [ %753, %751 ], [ %766, %758 ]
  %772 = phi i16* [ %754, %751 ], [ %765, %758 ]
  %773 = icmp ult i64 %755, 7
  br i1 %773, label %804, label %774

774:                                              ; preds = %769, %774
  %775 = phi i64 [ %800, %774 ], [ %770, %769 ]
  %776 = phi i16* [ %802, %774 ], [ %771, %769 ]
  %777 = phi i16* [ %801, %774 ], [ %772, %769 ]
  %778 = load i16, i16* %776, align 2
  store i16 %778, i16* %777, align 2
  %779 = getelementptr inbounds i16, i16* %777, i64 1
  %780 = getelementptr inbounds i16, i16* %776, i64 1
  %781 = load i16, i16* %780, align 2
  store i16 %781, i16* %779, align 2
  %782 = getelementptr inbounds i16, i16* %777, i64 2
  %783 = getelementptr inbounds i16, i16* %776, i64 2
  %784 = load i16, i16* %783, align 2
  store i16 %784, i16* %782, align 2
  %785 = getelementptr inbounds i16, i16* %777, i64 3
  %786 = getelementptr inbounds i16, i16* %776, i64 3
  %787 = load i16, i16* %786, align 2
  store i16 %787, i16* %785, align 2
  %788 = getelementptr inbounds i16, i16* %777, i64 4
  %789 = getelementptr inbounds i16, i16* %776, i64 4
  %790 = load i16, i16* %789, align 2
  store i16 %790, i16* %788, align 2
  %791 = getelementptr inbounds i16, i16* %777, i64 5
  %792 = getelementptr inbounds i16, i16* %776, i64 5
  %793 = load i16, i16* %792, align 2
  store i16 %793, i16* %791, align 2
  %794 = getelementptr inbounds i16, i16* %777, i64 6
  %795 = getelementptr inbounds i16, i16* %776, i64 6
  %796 = load i16, i16* %795, align 2
  store i16 %796, i16* %794, align 2
  %797 = getelementptr inbounds i16, i16* %777, i64 7
  %798 = getelementptr inbounds i16, i16* %776, i64 7
  %799 = load i16, i16* %798, align 2
  store i16 %799, i16* %797, align 2
  %800 = add i64 %775, -8
  %801 = getelementptr inbounds i16, i16* %777, i64 8
  %802 = getelementptr inbounds i16, i16* %776, i64 8
  %803 = icmp eq i64 %800, 0
  br i1 %803, label %804, label %774, !llvm.loop !88

804:                                              ; preds = %769, %774, %749, %625
  %805 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 1
  %806 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %619, i64 1
  %807 = icmp eq %"class.std::__1::basic_string"* %805, %612
  br i1 %807, label %808, label %618

808:                                              ; preds = %804
  %809 = ptrtoint %"class.std::__1::basic_string"* %806 to i64
  br label %810

810:                                              ; preds = %602, %808
  %811 = phi i64 [ %614, %602 ], [ %809, %808 ]
  store i64 %811, i64* %613, align 8
  br label %812

812:                                              ; preds = %584, %810
  %813 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %814 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %813, i8 0, i64 32, i1 false) #11
  %815 = load i8, i8* %814, align 8, !range !2
  %816 = icmp eq i8 %815, 0
  br i1 %816, label %833, label %817

817:                                              ; preds = %812
  %818 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %819 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %820 = bitcast %"class.std::__1::basic_string.1"* %818 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %821 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %820, i64 0, i32 1, i32 0
  %822 = load i8, i8* %821, align 1
  %823 = icmp slt i8 %822, 0
  br i1 %823, label %827, label %824

824:                                              ; preds = %817
  %825 = bitcast %"class.std::__1::basic_string.1"* %819 to i8*
  %826 = bitcast %"class.std::__1::basic_string.1"* %818 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %825, i8* align 8 %826, i64 24, i1 false) #11
  br label %832

827:                                              ; preds = %817
  %828 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %818, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %829 = load i8*, i8** %828, align 8
  %830 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %831 = load i64, i64* %830, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"* %819, i8* %829, i64 %831) #11
  br label %832

832:                                              ; preds = %827, %824
  store i8 1, i8* %813, align 8
  br label %833

833:                                              ; preds = %812, %832
  %834 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 18
  %835 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %1, i64 0, i32 18
  %836 = bitcast i8* %835 to i64*
  %837 = bitcast i8* %834 to i64*
  %838 = load i64, i64* %836, align 8
  store i64 %838, i64* %837, align 8
  ret void
}

declare void @_ZN4GURLC1ERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3url6ParsedC1ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInputD2Ev(%class.AutocompleteInput*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = bitcast %"class.std::__1::basic_string.1"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #12
  br label %14

14:                                               ; preds = %11, %5
  store i8 0, i8* %2, align 8
  br label %15

15:                                               ; preds = %1, %14
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  %19 = icmp eq %"class.std::__1::basic_string"* %18, null
  br i1 %19, label %42, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %22 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 1
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %24 = icmp eq %"class.std::__1::basic_string"* %23, %18
  br i1 %24, label %40, label %25

25:                                               ; preds = %20, %35
  %26 = phi %"class.std::__1::basic_string"* [ %27, %35 ], [ %23, %20 ]
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 -1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = bitcast %"class.std::__1::basic_string"* %27 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %32, %25
  %36 = icmp eq %"class.std::__1::basic_string"* %27, %18
  br i1 %36, label %37, label %25

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %16 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %20
  %41 = phi i8* [ %39, %37 ], [ %21, %20 ]
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %22, align 8
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %15, %40
  %43 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %44 = bitcast %"class.std::__1::basic_string.1"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %42, %48
  %52 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  tail call void @_ZN4GURLD1Ev(%class.GURL* %52) #11
  %53 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %54 = bitcast %"class.std::__1::basic_string"* %53 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %54, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::basic_string"* %53 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %51, %58
  %62 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  tail call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %62) #11
  %63 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #12
  br label %71

71:                                               ; preds = %61, %68
  %72 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  tail call void @_ZN4GURLD1Ev(%class.GURL* %72) #11
  %73 = bitcast %class.AutocompleteInput* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %73, i64 0, i32 1, i32 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = bitcast %class.AutocompleteInput* %0 to i8**
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %71, %77
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput12TypeToStringEN7metrics16OmniboxInputTypeE(%"class.std::__1::basic_string.1"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %35 [
    i32 0, label %3
    i32 1, label %8
    i32 2, label %13
    i32 3, label %19
    i32 4, label %24
    i32 5, label %29
  ]

3:                                                ; preds = %2
  %4 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  store i8 7, i8* %5, align 1
  %6 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #11
  %7 = getelementptr inbounds i8, i8* %6, i64 7
  store i8 0, i8* %7, align 1
  br label %37

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 7, i8* %10, align 1
  %11 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i1 false) #11
  %12 = getelementptr inbounds i8, i8* %11, i64 7
  store i8 0, i8* %12, align 1
  br label %37

13:                                               ; preds = %2
  %14 = tail call i8* @_Znwm(i64 32) #12
  %15 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %17, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 24, i1 false) #11
  %18 = getelementptr inbounds i8, i8* %14, i64 24
  store i8 0, i8* %18, align 1
  br label %37

19:                                               ; preds = %2
  %20 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 3, i8* %21, align 1
  %22 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 3, i1 false) #11
  %23 = getelementptr inbounds i8, i8* %22, i64 3
  store i8 0, i8* %23, align 1
  br label %37

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::basic_string.1"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  store i8 5, i8* %26, align 1
  %27 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i64 5, i1 false) #11
  %28 = getelementptr inbounds i8, i8* %27, i64 5
  store i8 0, i8* %28, align 1
  br label %37

29:                                               ; preds = %2
  %30 = tail call i8* @_Znwm(i64 32) #12
  %31 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast i64* %32 to <2 x i64>*
  store <2 x i64> <i64 23, i64 -9223372036854775776>, <2 x i64>* %33, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %30, i8* align 1 getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i64 23, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %30, i64 23
  store i8 0, i8* %34, align 1
  br label %37

35:                                               ; preds = %2
  %36 = bitcast %"class.std::__1::basic_string.1"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #11
  br label %37

37:                                               ; preds = %35, %29, %24, %19, %13, %8, %3
  ret void
}

declare void @_ZN13url_formatter10SegmentURLERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPN3url6ParsedE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"struct.url::Parsed"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !89
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !89
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !92, !noalias !89
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !92, !noalias !89
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !89
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !89
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !92, !noalias !89
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !92, !noalias !89
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !89
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !89
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !92, !noalias !89
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !92, !noalias !89
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !89
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !89
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !92, !noalias !89
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !92, !noalias !89
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !94

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !89
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !89
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !92, !noalias !89
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !92, !noalias !89
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !95

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !96

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !97

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !98
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !98
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !101, !noalias !98
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !101, !noalias !98
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !98
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !98
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !101, !noalias !98
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !101, !noalias !98
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !98
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !98
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !101, !noalias !98
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !101, !noalias !98
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !98
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !98
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !101, !noalias !98
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !101, !noalias !98
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !103

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !98
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !98
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !101, !noalias !98
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !101, !noalias !98
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !104

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !105

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !106

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !107
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !107
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !110, !noalias !107
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !110, !noalias !107
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !107
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !107
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !110, !noalias !107
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !110, !noalias !107
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !107
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !107
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !110, !noalias !107
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !110, !noalias !107
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !107
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !107
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !110, !noalias !107
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !110, !noalias !107
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !112

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !107
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !107
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !110, !noalias !107
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !110, !noalias !107
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !113

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !114

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !115

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* sret, i16*, i64) local_unnamed_addr #1

declare void @_ZN13url_formatter8FixupURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(%class.GURL* sret, %"class.std::__1::basic_string.1"* dereferenceable(24), %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #3

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN3re23RE2C1EPKc(%"class.re2::RE2"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3re23RE2D1Ev(%"class.re2::RE2"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_SB_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i16*, i16** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %27 = select i1 %11, i16* %25, i16* %26
  %28 = add i64 %23, %15
  %29 = icmp ugt i64 %28, 9223372036854775791
  br i1 %29, label %30, label %32

30:                                               ; preds = %3
  %31 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %31) #13
  unreachable

32:                                               ; preds = %3
  %33 = icmp ult i64 %28, 11
  br i1 %33, label %34, label %39

34:                                               ; preds = %32
  %35 = trunc i64 %15 to i8
  %36 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 %35, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %50

39:                                               ; preds = %32
  %40 = add nuw nsw i64 %28, 8
  %41 = and i64 %40, -8
  %42 = icmp slt i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @abort() #13
  unreachable

44:                                               ; preds = %39
  %45 = shl i64 %41, 1
  %46 = tail call i8* @_Znwm(i64 %45) #12
  %47 = bitcast i8* %46 to i16*
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %46, i8** %48, align 8
  %49 = or i64 %41, -9223372036854775808
  store i64 %49, i64* %6, align 8
  store i64 %15, i64* %5, align 8
  br label %50

50:                                               ; preds = %44, %34
  %51 = phi i16* [ %38, %34 ], [ %47, %44 ]
  %52 = icmp eq i64 %15, 0
  br i1 %52, label %198, label %53

53:                                               ; preds = %50
  %54 = icmp ult i64 %15, 16
  br i1 %54, label %143, label %55

55:                                               ; preds = %53
  %56 = getelementptr i16, i16* %51, i64 %15
  %57 = getelementptr i16, i16* %27, i64 %15
  %58 = icmp ult i16* %51, %57
  %59 = icmp ult i16* %27, %56
  %60 = and i1 %58, %59
  br i1 %60, label %143, label %61

61:                                               ; preds = %55
  %62 = and i64 %15, -16
  %63 = sub i64 %15, %62
  %64 = getelementptr i16, i16* %27, i64 %62
  %65 = getelementptr i16, i16* %51, i64 %62
  %66 = add i64 %62, -16
  %67 = lshr exact i64 %66, 4
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 3
  %70 = icmp ult i64 %66, 48
  br i1 %70, label %122, label %71

71:                                               ; preds = %61
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %119, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %120, %73 ]
  %76 = getelementptr i16, i16* %27, i64 %74
  %77 = getelementptr i16, i16* %51, i64 %74
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !116
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !116
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !119, !noalias !116
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !119, !noalias !116
  %86 = or i64 %74, 16
  %87 = getelementptr i16, i16* %27, i64 %86
  %88 = getelementptr i16, i16* %51, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !116
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !116
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !119, !noalias !116
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !119, !noalias !116
  %97 = or i64 %74, 32
  %98 = getelementptr i16, i16* %27, i64 %97
  %99 = getelementptr i16, i16* %51, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !116
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !116
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !119, !noalias !116
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !119, !noalias !116
  %108 = or i64 %74, 48
  %109 = getelementptr i16, i16* %27, i64 %108
  %110 = getelementptr i16, i16* %51, i64 %108
  %111 = bitcast i16* %109 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !116
  %113 = getelementptr i16, i16* %109, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !116
  %116 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %116, align 2, !alias.scope !119, !noalias !116
  %117 = getelementptr i16, i16* %110, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %118, align 2, !alias.scope !119, !noalias !116
  %119 = add i64 %74, 64
  %120 = add i64 %75, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %73, !llvm.loop !121

122:                                              ; preds = %73, %61
  %123 = phi i64 [ 0, %61 ], [ %119, %73 ]
  %124 = icmp eq i64 %69, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %138, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %139, %125 ], [ %69, %122 ]
  %128 = getelementptr i16, i16* %27, i64 %126
  %129 = getelementptr i16, i16* %51, i64 %126
  %130 = bitcast i16* %128 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !116
  %132 = getelementptr i16, i16* %128, i64 8
  %133 = bitcast i16* %132 to <8 x i16>*
  %134 = load <8 x i16>, <8 x i16>* %133, align 2, !alias.scope !116
  %135 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %135, align 2, !alias.scope !119, !noalias !116
  %136 = getelementptr i16, i16* %129, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  store <8 x i16> %134, <8 x i16>* %137, align 2, !alias.scope !119, !noalias !116
  %138 = add i64 %126, 16
  %139 = add i64 %127, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !122

141:                                              ; preds = %125, %122
  %142 = icmp eq i64 %15, %62
  br i1 %142, label %196, label %143

143:                                              ; preds = %141, %55, %53
  %144 = phi i64 [ %15, %55 ], [ %15, %53 ], [ %63, %141 ]
  %145 = phi i16* [ %27, %55 ], [ %27, %53 ], [ %64, %141 ]
  %146 = phi i16* [ %51, %55 ], [ %51, %53 ], [ %65, %141 ]
  %147 = add i64 %144, -1
  %148 = and i64 %144, 7
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %143, %150
  %151 = phi i64 [ %156, %150 ], [ %144, %143 ]
  %152 = phi i16* [ %158, %150 ], [ %145, %143 ]
  %153 = phi i16* [ %157, %150 ], [ %146, %143 ]
  %154 = phi i64 [ %159, %150 ], [ %148, %143 ]
  %155 = load i16, i16* %152, align 2
  store i16 %155, i16* %153, align 2
  %156 = add i64 %151, -1
  %157 = getelementptr inbounds i16, i16* %153, i64 1
  %158 = getelementptr inbounds i16, i16* %152, i64 1
  %159 = add i64 %154, -1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %150, !llvm.loop !123

161:                                              ; preds = %150, %143
  %162 = phi i64 [ %144, %143 ], [ %156, %150 ]
  %163 = phi i16* [ %145, %143 ], [ %158, %150 ]
  %164 = phi i16* [ %146, %143 ], [ %157, %150 ]
  %165 = icmp ult i64 %147, 7
  br i1 %165, label %196, label %166

166:                                              ; preds = %161, %166
  %167 = phi i64 [ %192, %166 ], [ %162, %161 ]
  %168 = phi i16* [ %194, %166 ], [ %163, %161 ]
  %169 = phi i16* [ %193, %166 ], [ %164, %161 ]
  %170 = load i16, i16* %168, align 2
  store i16 %170, i16* %169, align 2
  %171 = getelementptr inbounds i16, i16* %169, i64 1
  %172 = getelementptr inbounds i16, i16* %168, i64 1
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %169, i64 2
  %175 = getelementptr inbounds i16, i16* %168, i64 2
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %169, i64 3
  %178 = getelementptr inbounds i16, i16* %168, i64 3
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %169, i64 4
  %181 = getelementptr inbounds i16, i16* %168, i64 4
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %169, i64 5
  %184 = getelementptr inbounds i16, i16* %168, i64 5
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %169, i64 6
  %187 = getelementptr inbounds i16, i16* %168, i64 6
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = getelementptr inbounds i16, i16* %169, i64 7
  %190 = getelementptr inbounds i16, i16* %168, i64 7
  %191 = load i16, i16* %190, align 2
  store i16 %191, i16* %189, align 2
  %192 = add i64 %167, -8
  %193 = getelementptr inbounds i16, i16* %169, i64 8
  %194 = getelementptr inbounds i16, i16* %168, i64 8
  %195 = icmp eq i64 %192, 0
  br i1 %195, label %196, label %166, !llvm.loop !124

196:                                              ; preds = %161, %166, %141
  %197 = load i8, i8* %17, align 1
  br label %198

198:                                              ; preds = %196, %50
  %199 = phi i8 [ %197, %196 ], [ %18, %50 ]
  %200 = getelementptr inbounds i16, i16* %51, i64 %15
  store i16 0, i16* %200, align 2
  %201 = icmp slt i8 %199, 0
  %202 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i16*, i16** %202, align 8
  %204 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %205 = select i1 %201, i16* %203, i16* %204
  %206 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = load i8, i8* %207, align 1
  %209 = icmp slt i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %198
  %211 = load i64, i64* %6, align 8
  %212 = and i64 %211, 9223372036854775807
  %213 = add nsw i64 %212, -1
  %214 = load i64, i64* %5, align 8
  br label %217

215:                                              ; preds = %198
  %216 = zext i8 %208 to i64
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64 [ %213, %210 ], [ 10, %215 ]
  %219 = phi i64 [ %214, %210 ], [ %216, %215 ]
  %220 = sub i64 %218, %219
  %221 = icmp ult i64 %220, %23
  br i1 %221, label %381, label %222

222:                                              ; preds = %217
  %223 = icmp eq i64 %23, 0
  br i1 %223, label %384, label %224

224:                                              ; preds = %222
  %225 = load i16*, i16** %4, align 8
  %226 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %227 = select i1 %209, i16* %225, i16* %226
  %228 = getelementptr inbounds i16, i16* %227, i64 %219
  %229 = icmp ult i64 %23, 16
  br i1 %229, label %319, label %230

230:                                              ; preds = %224
  %231 = add i64 %23, %219
  %232 = getelementptr i16, i16* %227, i64 %231
  %233 = getelementptr i16, i16* %205, i64 %23
  %234 = icmp ult i16* %228, %233
  %235 = icmp ult i16* %205, %232
  %236 = and i1 %234, %235
  br i1 %236, label %319, label %237

237:                                              ; preds = %230
  %238 = and i64 %23, -16
  %239 = sub i64 %23, %238
  %240 = getelementptr i16, i16* %205, i64 %238
  %241 = getelementptr i16, i16* %228, i64 %238
  %242 = add i64 %238, -16
  %243 = lshr exact i64 %242, 4
  %244 = add nuw nsw i64 %243, 1
  %245 = and i64 %244, 3
  %246 = icmp ult i64 %242, 48
  br i1 %246, label %298, label %247

247:                                              ; preds = %237
  %248 = sub nsw i64 %244, %245
  br label %249

249:                                              ; preds = %249, %247
  %250 = phi i64 [ 0, %247 ], [ %295, %249 ]
  %251 = phi i64 [ %248, %247 ], [ %296, %249 ]
  %252 = getelementptr i16, i16* %205, i64 %250
  %253 = getelementptr i16, i16* %228, i64 %250
  %254 = bitcast i16* %252 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !125
  %256 = getelementptr i16, i16* %252, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  %258 = load <8 x i16>, <8 x i16>* %257, align 2, !alias.scope !125
  %259 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %259, align 2, !alias.scope !128, !noalias !125
  %260 = getelementptr i16, i16* %253, i64 8
  %261 = bitcast i16* %260 to <8 x i16>*
  store <8 x i16> %258, <8 x i16>* %261, align 2, !alias.scope !128, !noalias !125
  %262 = or i64 %250, 16
  %263 = getelementptr i16, i16* %205, i64 %262
  %264 = getelementptr i16, i16* %228, i64 %262
  %265 = bitcast i16* %263 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !125
  %267 = getelementptr i16, i16* %263, i64 8
  %268 = bitcast i16* %267 to <8 x i16>*
  %269 = load <8 x i16>, <8 x i16>* %268, align 2, !alias.scope !125
  %270 = bitcast i16* %264 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %270, align 2, !alias.scope !128, !noalias !125
  %271 = getelementptr i16, i16* %264, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %269, <8 x i16>* %272, align 2, !alias.scope !128, !noalias !125
  %273 = or i64 %250, 32
  %274 = getelementptr i16, i16* %205, i64 %273
  %275 = getelementptr i16, i16* %228, i64 %273
  %276 = bitcast i16* %274 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !125
  %278 = getelementptr i16, i16* %274, i64 8
  %279 = bitcast i16* %278 to <8 x i16>*
  %280 = load <8 x i16>, <8 x i16>* %279, align 2, !alias.scope !125
  %281 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %281, align 2, !alias.scope !128, !noalias !125
  %282 = getelementptr i16, i16* %275, i64 8
  %283 = bitcast i16* %282 to <8 x i16>*
  store <8 x i16> %280, <8 x i16>* %283, align 2, !alias.scope !128, !noalias !125
  %284 = or i64 %250, 48
  %285 = getelementptr i16, i16* %205, i64 %284
  %286 = getelementptr i16, i16* %228, i64 %284
  %287 = bitcast i16* %285 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !125
  %289 = getelementptr i16, i16* %285, i64 8
  %290 = bitcast i16* %289 to <8 x i16>*
  %291 = load <8 x i16>, <8 x i16>* %290, align 2, !alias.scope !125
  %292 = bitcast i16* %286 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %292, align 2, !alias.scope !128, !noalias !125
  %293 = getelementptr i16, i16* %286, i64 8
  %294 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %291, <8 x i16>* %294, align 2, !alias.scope !128, !noalias !125
  %295 = add i64 %250, 64
  %296 = add i64 %251, -4
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %249, !llvm.loop !130

298:                                              ; preds = %249, %237
  %299 = phi i64 [ 0, %237 ], [ %295, %249 ]
  %300 = icmp eq i64 %245, 0
  br i1 %300, label %317, label %301

301:                                              ; preds = %298, %301
  %302 = phi i64 [ %314, %301 ], [ %299, %298 ]
  %303 = phi i64 [ %315, %301 ], [ %245, %298 ]
  %304 = getelementptr i16, i16* %205, i64 %302
  %305 = getelementptr i16, i16* %228, i64 %302
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !125
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !125
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !128, !noalias !125
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !128, !noalias !125
  %314 = add i64 %302, 16
  %315 = add i64 %303, -1
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %301, !llvm.loop !131

317:                                              ; preds = %301, %298
  %318 = icmp eq i64 %23, %238
  br i1 %318, label %372, label %319

319:                                              ; preds = %317, %230, %224
  %320 = phi i64 [ %23, %230 ], [ %23, %224 ], [ %239, %317 ]
  %321 = phi i16* [ %205, %230 ], [ %205, %224 ], [ %240, %317 ]
  %322 = phi i16* [ %228, %230 ], [ %228, %224 ], [ %241, %317 ]
  %323 = add i64 %320, -1
  %324 = and i64 %320, 7
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %337, label %326

326:                                              ; preds = %319, %326
  %327 = phi i64 [ %332, %326 ], [ %320, %319 ]
  %328 = phi i16* [ %334, %326 ], [ %321, %319 ]
  %329 = phi i16* [ %333, %326 ], [ %322, %319 ]
  %330 = phi i64 [ %335, %326 ], [ %324, %319 ]
  %331 = load i16, i16* %328, align 2
  store i16 %331, i16* %329, align 2
  %332 = add i64 %327, -1
  %333 = getelementptr inbounds i16, i16* %329, i64 1
  %334 = getelementptr inbounds i16, i16* %328, i64 1
  %335 = add i64 %330, -1
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %326, !llvm.loop !132

337:                                              ; preds = %326, %319
  %338 = phi i64 [ %320, %319 ], [ %332, %326 ]
  %339 = phi i16* [ %321, %319 ], [ %334, %326 ]
  %340 = phi i16* [ %322, %319 ], [ %333, %326 ]
  %341 = icmp ult i64 %323, 7
  br i1 %341, label %372, label %342

342:                                              ; preds = %337, %342
  %343 = phi i64 [ %368, %342 ], [ %338, %337 ]
  %344 = phi i16* [ %370, %342 ], [ %339, %337 ]
  %345 = phi i16* [ %369, %342 ], [ %340, %337 ]
  %346 = load i16, i16* %344, align 2
  store i16 %346, i16* %345, align 2
  %347 = getelementptr inbounds i16, i16* %345, i64 1
  %348 = getelementptr inbounds i16, i16* %344, i64 1
  %349 = load i16, i16* %348, align 2
  store i16 %349, i16* %347, align 2
  %350 = getelementptr inbounds i16, i16* %345, i64 2
  %351 = getelementptr inbounds i16, i16* %344, i64 2
  %352 = load i16, i16* %351, align 2
  store i16 %352, i16* %350, align 2
  %353 = getelementptr inbounds i16, i16* %345, i64 3
  %354 = getelementptr inbounds i16, i16* %344, i64 3
  %355 = load i16, i16* %354, align 2
  store i16 %355, i16* %353, align 2
  %356 = getelementptr inbounds i16, i16* %345, i64 4
  %357 = getelementptr inbounds i16, i16* %344, i64 4
  %358 = load i16, i16* %357, align 2
  store i16 %358, i16* %356, align 2
  %359 = getelementptr inbounds i16, i16* %345, i64 5
  %360 = getelementptr inbounds i16, i16* %344, i64 5
  %361 = load i16, i16* %360, align 2
  store i16 %361, i16* %359, align 2
  %362 = getelementptr inbounds i16, i16* %345, i64 6
  %363 = getelementptr inbounds i16, i16* %344, i64 6
  %364 = load i16, i16* %363, align 2
  store i16 %364, i16* %362, align 2
  %365 = getelementptr inbounds i16, i16* %345, i64 7
  %366 = getelementptr inbounds i16, i16* %344, i64 7
  %367 = load i16, i16* %366, align 2
  store i16 %367, i16* %365, align 2
  %368 = add i64 %343, -8
  %369 = getelementptr inbounds i16, i16* %345, i64 8
  %370 = getelementptr inbounds i16, i16* %344, i64 8
  %371 = icmp eq i64 %368, 0
  br i1 %371, label %372, label %342, !llvm.loop !133

372:                                              ; preds = %337, %342, %317
  %373 = add i64 %219, %23
  %374 = load i8, i8* %207, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %372
  store i64 %373, i64* %5, align 8
  br label %379

377:                                              ; preds = %372
  %378 = trunc i64 %373 to i8
  store i8 %378, i8* %207, align 1
  br label %379

379:                                              ; preds = %377, %376
  %380 = getelementptr inbounds i16, i16* %227, i64 %373
  store i16 0, i16* %380, align 2
  br label %384

381:                                              ; preds = %217
  %382 = add i64 %219, %23
  %383 = sub i64 %382, %218
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %218, i64 %383, i64 %219, i64 %219, i64 0, i64 %23, i16* %205) #11
  br label %384

384:                                              ; preds = %222, %379, %381
  ret void
}

declare dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZN3net16CanonicalizeHostEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPN3url13CanonHostInfoE(%"class.std::__1::basic_string.1"* sret, i8*, i64, %"struct.url::CanonHostInfo"*) local_unnamed_addr #1

declare i64 @_ZN3net27registry_controlled_domains30GetCanonicalHostRegistryLengthEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8*, i64, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3net28IsCanonicalizedHostCompliantERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN17AutocompleteInput20NumNonHostComponentsERKN3url6ParsedE(%"struct.url::Parsed"* nocapture readonly dereferenceable(80)) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  %9 = select i1 %4, i32 2, i32 1
  %10 = select i1 %8, i32 %9, i32 %5
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  %14 = zext i1 %13 to i32
  %15 = add nuw nsw i32 %10, %14
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = zext i1 %18 to i32
  %20 = add nuw nsw i32 %15, %19
  %21 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  %24 = zext i1 %23 to i32
  %25 = add nuw nsw i32 %20, %24
  %26 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 0
  %29 = zext i1 %28 to i32
  %30 = add nuw nsw i32 %25, %29
  %31 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %32, 0
  %34 = zext i1 %33 to i32
  %35 = add nuw nsw i32 %30, %34
  ret i32 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput27ParseForEmphasizeComponentsERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPN3url9ComponentESE_(%"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier* dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.url::Parsed", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"struct.url::Parsed", align 8
  %10 = alloca %"class.std::__1::basic_string.1", align 8
  %11 = bitcast %"struct.url::Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %11) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %5) #11
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #11
  %15 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #11
  %16 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7, %class.AutocompleteSchemeClassifier* dereferenceable(8) %1, %"struct.url::Parsed"* nonnull %5, %"class.std::__1::basic_string"* nonnull %6, %class.GURL* null)
  %17 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %4, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  %25 = bitcast %"struct.url::Parsed"* %5 to i64*
  %26 = bitcast %"struct.url::Component"* %2 to i64*
  %27 = load i64, i64* %25, align 8
  store i64 %27, i64* %26, align 4
  %28 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3
  %29 = bitcast %"struct.url::Component"* %28 to i64*
  %30 = bitcast %"struct.url::Component"* %3 to i64*
  %31 = load i64, i64* %29, align 8
  store i64 %31, i64* %30, align 4
  %32 = trunc i64 %27 to i32
  %33 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %32, 1
  %36 = add i32 %35, %34
  %37 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i16*, i16** %13, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %43 = select i1 %40, i16* %41, i16* %42
  %44 = load i64, i64* %14, align 8
  %45 = zext i8 %39 to i64
  %46 = select i1 %40, i64 %44, i64 %45
  %47 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16* %43, i64 %46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_117kViewSourceSchemeE, i64 0, i64 0), i64 11) #11
  br i1 %47, label %58, label %48

48:                                               ; preds = %24
  %49 = load i8, i8* %38, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i16*, i16** %13, align 8
  %52 = select i1 %50, i16* %51, i16* %42
  %53 = load i64, i64* %14, align 8
  %54 = zext i8 %49 to i64
  %55 = select i1 %50, i64 %53, i64 %54
  %56 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #11
  %57 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16* %52, i64 %55, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i64 %56) #11
  br i1 %57, label %58, label %127

58:                                               ; preds = %48, %24
  %59 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = trunc i64 %66 to i32
  %68 = icmp slt i32 %36, %67
  br i1 %68, label %69, label %127

69:                                               ; preds = %58
  %70 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70) #11
  %71 = sext i32 %36 to i64
  %72 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  %73 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %71, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %72) #11
  %74 = bitcast %"struct.url::Parsed"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %74) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 80, i1 false)
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %9) #11
  %75 = bitcast %"class.std::__1::basic_string.1"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %75) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 24, i1 false) #11
  %76 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %10, %class.AutocompleteSchemeClassifier* dereferenceable(8) %1, %"struct.url::Parsed"* nonnull %9, %"class.std::__1::basic_string"* null, %class.GURL* null)
  %77 = bitcast %"class.std::__1::basic_string.1"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %78 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %77, i64 0, i32 1, i32 0
  %79 = load i8, i8* %78, align 1
  %80 = icmp slt i8 %79, 0
  br i1 %80, label %81, label %84

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %69, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  %85 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %9, i64 0, i32 0, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp sgt i32 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %9, i64 0, i32 3, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp sgt i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %94, align 4
  br label %106

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %9, i64 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, %36
  %99 = zext i32 %86 to i64
  %100 = shl nuw i64 %99, 32
  %101 = zext i32 %98 to i64
  %102 = or i64 %100, %101
  store i64 %102, i64* %26, align 4
  %103 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %9, i64 0, i32 3, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %106, label %115

106:                                              ; preds = %92, %95
  %107 = phi i32 [ %90, %92 ], [ %104, %95 ]
  %108 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %9, i64 0, i32 3, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = add nsw i32 %109, %36
  %111 = zext i32 %107 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %110 to i64
  %114 = or i64 %112, %113
  store i64 %114, i64* %30, align 4
  br label %118

115:                                              ; preds = %95
  %116 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %116, align 4
  %117 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %117, align 4
  br label %118

118:                                              ; preds = %106, %115, %88
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %74) #11
  %119 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %120 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %119, i64 0, i32 1, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %126

123:                                              ; preds = %118
  %124 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %118, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70) #11
  br label %149

127:                                              ; preds = %48, %58
  %128 = load i8, i8* %38, align 1
  %129 = icmp slt i8 %128, 0
  %130 = load i16*, i16** %13, align 8
  %131 = select i1 %129, i16* %130, i16* %42
  %132 = load i64, i64* %14, align 8
  %133 = zext i8 %128 to i64
  %134 = select i1 %129, i64 %132, i64 %133
  %135 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #11
  %136 = call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16* %131, i64 %134, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %135) #11
  br i1 %136, label %137, label %149

137:                                              ; preds = %127
  %138 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 9
  %139 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %138, align 8
  %140 = icmp eq %"struct.url::Parsed"* %139, null
  br i1 %140, label %149, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %139, i64 0, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %139, i64 0, i32 3
  %147 = bitcast %"struct.url::Component"* %146 to i64*
  %148 = load i64, i64* %147, align 4
  store i64 %148, i64* %30, align 4
  br label %149

149:                                              ; preds = %141, %137, %145, %127, %126
  %150 = load i8, i8* %38, align 1
  %151 = icmp slt i8 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %154 = load i8*, i8** %153, align 8
  call void @_ZdlPv(i8* %154) #12
  br label %155

155:                                              ; preds = %149, %152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %11) #11
  ret void
}

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS0_IcNS2_IcEEEE(i16*, i64, i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_11CompareCaseE(i16*, i64, i16*, i64, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN3net19IsHostnameNonUniqueERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEi(%"class.std::__1::basic_string.1"* sret, i32) local_unnamed_addr #1

declare void @_ZNK4GURL17ReplaceComponentsERKN3url12ReplacementsIcEE(%class.GURL* sret, %class.GURL*, %"class.url::Replacements"* dereferenceable(144)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput36FormattedStringWithEquivalentMeaningERK4GURLRKNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERK28AutocompleteSchemeClassifierPm(%"class.std::__1::basic_string"* noalias sret, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), %class.AutocompleteSchemeClassifier* dereferenceable(8), i64*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string.1", align 8
  %8 = alloca %"class.std::__1::basic_string.1", align 8
  %9 = tail call zeroext i1 @_ZN13url_formatter21CanStripTrailingSlashERK4GURL(%class.GURL* dereferenceable(120) %1) #11
  br i1 %9, label %193, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #11
  br label %606

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %29

24:                                               ; preds = %18
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  store i8 %26, i8* %28, align 1
  br label %46

29:                                               ; preds = %18
  %30 = icmp ugt i64 %22, 9223372036854775791
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %32) #13
  unreachable

33:                                               ; preds = %29
  %34 = add nuw nsw i64 %22, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %33
  %39 = shl i64 %35, 1
  %40 = tail call i8* @_Znwm(i64 %39) #12
  %41 = bitcast i8* %40 to i16*
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %42, align 8
  %43 = or i64 %35, -9223372036854775808
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %45, align 8
  br label %46

46:                                               ; preds = %38, %24
  %47 = phi i16* [ %25, %24 ], [ %41, %38 ]
  %48 = add nuw nsw i64 %22, 1
  %49 = add i64 %22, 1
  %50 = icmp ult i64 %49, 16
  br i1 %50, label %140, label %51

51:                                               ; preds = %46
  %52 = add i64 %22, 1
  %53 = getelementptr i16, i16* %47, i64 %52
  %54 = getelementptr i16, i16* %20, i64 %52
  %55 = icmp ult i16* %47, %54
  %56 = icmp ult i16* %20, %53
  %57 = and i1 %55, %56
  br i1 %57, label %140, label %58

58:                                               ; preds = %51
  %59 = and i64 %49, -16
  %60 = sub i64 %48, %59
  %61 = getelementptr i16, i16* %20, i64 %59
  %62 = getelementptr i16, i16* %47, i64 %59
  %63 = add i64 %59, -16
  %64 = lshr exact i64 %63, 4
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 3
  %67 = icmp ult i64 %63, 48
  br i1 %67, label %119, label %68

68:                                               ; preds = %58
  %69 = sub nsw i64 %65, %66
  br label %70

70:                                               ; preds = %70, %68
  %71 = phi i64 [ 0, %68 ], [ %116, %70 ]
  %72 = phi i64 [ %69, %68 ], [ %117, %70 ]
  %73 = getelementptr i16, i16* %20, i64 %71
  %74 = getelementptr i16, i16* %47, i64 %71
  %75 = bitcast i16* %73 to <8 x i16>*
  %76 = load <8 x i16>, <8 x i16>* %75, align 2, !alias.scope !134
  %77 = getelementptr i16, i16* %73, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !134
  %80 = bitcast i16* %74 to <8 x i16>*
  store <8 x i16> %76, <8 x i16>* %80, align 2, !alias.scope !137, !noalias !134
  %81 = getelementptr i16, i16* %74, i64 8
  %82 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %82, align 2, !alias.scope !137, !noalias !134
  %83 = or i64 %71, 16
  %84 = getelementptr i16, i16* %20, i64 %83
  %85 = getelementptr i16, i16* %47, i64 %83
  %86 = bitcast i16* %84 to <8 x i16>*
  %87 = load <8 x i16>, <8 x i16>* %86, align 2, !alias.scope !134
  %88 = getelementptr i16, i16* %84, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !134
  %91 = bitcast i16* %85 to <8 x i16>*
  store <8 x i16> %87, <8 x i16>* %91, align 2, !alias.scope !137, !noalias !134
  %92 = getelementptr i16, i16* %85, i64 8
  %93 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %93, align 2, !alias.scope !137, !noalias !134
  %94 = or i64 %71, 32
  %95 = getelementptr i16, i16* %20, i64 %94
  %96 = getelementptr i16, i16* %47, i64 %94
  %97 = bitcast i16* %95 to <8 x i16>*
  %98 = load <8 x i16>, <8 x i16>* %97, align 2, !alias.scope !134
  %99 = getelementptr i16, i16* %95, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !134
  %102 = bitcast i16* %96 to <8 x i16>*
  store <8 x i16> %98, <8 x i16>* %102, align 2, !alias.scope !137, !noalias !134
  %103 = getelementptr i16, i16* %96, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %104, align 2, !alias.scope !137, !noalias !134
  %105 = or i64 %71, 48
  %106 = getelementptr i16, i16* %20, i64 %105
  %107 = getelementptr i16, i16* %47, i64 %105
  %108 = bitcast i16* %106 to <8 x i16>*
  %109 = load <8 x i16>, <8 x i16>* %108, align 2, !alias.scope !134
  %110 = getelementptr i16, i16* %106, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  %112 = load <8 x i16>, <8 x i16>* %111, align 2, !alias.scope !134
  %113 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %109, <8 x i16>* %113, align 2, !alias.scope !137, !noalias !134
  %114 = getelementptr i16, i16* %107, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %112, <8 x i16>* %115, align 2, !alias.scope !137, !noalias !134
  %116 = add i64 %71, 64
  %117 = add i64 %72, -4
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %119, label %70, !llvm.loop !139

119:                                              ; preds = %70, %58
  %120 = phi i64 [ 0, %58 ], [ %116, %70 ]
  %121 = icmp eq i64 %66, 0
  br i1 %121, label %138, label %122

122:                                              ; preds = %119, %122
  %123 = phi i64 [ %135, %122 ], [ %120, %119 ]
  %124 = phi i64 [ %136, %122 ], [ %66, %119 ]
  %125 = getelementptr i16, i16* %20, i64 %123
  %126 = getelementptr i16, i16* %47, i64 %123
  %127 = bitcast i16* %125 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !134
  %129 = getelementptr i16, i16* %125, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  %131 = load <8 x i16>, <8 x i16>* %130, align 2, !alias.scope !134
  %132 = bitcast i16* %126 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %132, align 2, !alias.scope !137, !noalias !134
  %133 = getelementptr i16, i16* %126, i64 8
  %134 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %131, <8 x i16>* %134, align 2, !alias.scope !137, !noalias !134
  %135 = add i64 %123, 16
  %136 = add i64 %124, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %122, !llvm.loop !140

138:                                              ; preds = %122, %119
  %139 = icmp eq i64 %49, %59
  br i1 %139, label %606, label %140

140:                                              ; preds = %138, %51, %46
  %141 = phi i64 [ %48, %51 ], [ %48, %46 ], [ %60, %138 ]
  %142 = phi i16* [ %20, %51 ], [ %20, %46 ], [ %61, %138 ]
  %143 = phi i16* [ %47, %51 ], [ %47, %46 ], [ %62, %138 ]
  %144 = add i64 %141, -1
  %145 = and i64 %141, 7
  %146 = icmp eq i64 %145, 0
  br i1 %146, label %158, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %153, %147 ], [ %141, %140 ]
  %149 = phi i16* [ %155, %147 ], [ %142, %140 ]
  %150 = phi i16* [ %154, %147 ], [ %143, %140 ]
  %151 = phi i64 [ %156, %147 ], [ %145, %140 ]
  %152 = load i16, i16* %149, align 2
  store i16 %152, i16* %150, align 2
  %153 = add i64 %148, -1
  %154 = getelementptr inbounds i16, i16* %150, i64 1
  %155 = getelementptr inbounds i16, i16* %149, i64 1
  %156 = add i64 %151, -1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %158, label %147, !llvm.loop !141

158:                                              ; preds = %147, %140
  %159 = phi i64 [ %141, %140 ], [ %153, %147 ]
  %160 = phi i16* [ %142, %140 ], [ %155, %147 ]
  %161 = phi i16* [ %143, %140 ], [ %154, %147 ]
  %162 = icmp ult i64 %144, 7
  br i1 %162, label %606, label %163

163:                                              ; preds = %158, %163
  %164 = phi i64 [ %189, %163 ], [ %159, %158 ]
  %165 = phi i16* [ %191, %163 ], [ %160, %158 ]
  %166 = phi i16* [ %190, %163 ], [ %161, %158 ]
  %167 = load i16, i16* %165, align 2
  store i16 %167, i16* %166, align 2
  %168 = getelementptr inbounds i16, i16* %166, i64 1
  %169 = getelementptr inbounds i16, i16* %165, i64 1
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %166, i64 2
  %172 = getelementptr inbounds i16, i16* %165, i64 2
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %166, i64 3
  %175 = getelementptr inbounds i16, i16* %165, i64 3
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %166, i64 4
  %178 = getelementptr inbounds i16, i16* %165, i64 4
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %166, i64 5
  %181 = getelementptr inbounds i16, i16* %165, i64 5
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = getelementptr inbounds i16, i16* %166, i64 6
  %184 = getelementptr inbounds i16, i16* %165, i64 6
  %185 = load i16, i16* %184, align 2
  store i16 %185, i16* %183, align 2
  %186 = getelementptr inbounds i16, i16* %166, i64 7
  %187 = getelementptr inbounds i16, i16* %165, i64 7
  %188 = load i16, i16* %187, align 2
  store i16 %188, i16* %186, align 2
  %189 = add i64 %164, -8
  %190 = getelementptr inbounds i16, i16* %166, i64 8
  %191 = getelementptr inbounds i16, i16* %165, i64 8
  %192 = icmp eq i64 %189, 0
  br i1 %192, label %606, label %163, !llvm.loop !142

193:                                              ; preds = %5
  %194 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #11
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %197 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %2, i16 zeroext 47)
  %198 = bitcast %"class.std::__1::basic_string.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %198) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %198, i8 0, i64 24, i1 false) #11
  %199 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %7, %class.AutocompleteSchemeClassifier* dereferenceable(8) %3, %"struct.url::Parsed"* null, %"class.std::__1::basic_string"* null, %class.GURL* null)
  %200 = bitcast %"class.std::__1::basic_string.1"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %200) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 0, i64 24, i1 false) #11
  %201 = call i32 @_ZN17AutocompleteInput5ParseERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEERKNS1_IcNS2_IcEENS4_IcEEEERK28AutocompleteSchemeClassifierPN3url6ParsedEPS6_P4GURL(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, %"class.std::__1::basic_string.1"* nonnull dereferenceable(24) %8, %class.AutocompleteSchemeClassifier* dereferenceable(8) %3, %"struct.url::Parsed"* null, %"class.std::__1::basic_string"* null, %class.GURL* null)
  %202 = icmp eq i32 %199, %201
  %203 = bitcast %"class.std::__1::basic_string.1"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %193
  %208 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %193, %207
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %200) #11
  %211 = bitcast %"class.std::__1::basic_string.1"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %212 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %211, i64 0, i32 1, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = icmp slt i8 %213, 0
  br i1 %214, label %215, label %218

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  call void @_ZdlPv(i8* %217) #12
  br label %218

218:                                              ; preds = %210, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %198) #11
  br i1 %202, label %219, label %402

219:                                              ; preds = %218
  %220 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %221 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %220, i64 0, i32 1, i32 1
  %222 = load i8, i8* %221, align 1
  %223 = icmp slt i8 %222, 0
  br i1 %223, label %227, label %224

224:                                              ; preds = %219
  %225 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %226 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 24, i1 false) #11
  br label %597

227:                                              ; preds = %219
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i16*, i16** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = icmp ult i64 %231, 11
  br i1 %232, label %233, label %238

233:                                              ; preds = %227
  %234 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %235 = trunc i64 %231 to i8
  %236 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %237 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %236, i64 0, i32 1, i32 1
  store i8 %235, i8* %237, align 1
  br label %255

238:                                              ; preds = %227
  %239 = icmp ugt i64 %231, 9223372036854775791
  br i1 %239, label %240, label %242

240:                                              ; preds = %238
  %241 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %241) #13
  unreachable

242:                                              ; preds = %238
  %243 = add nuw nsw i64 %231, 8
  %244 = and i64 %243, -8
  %245 = icmp slt i64 %244, 0
  br i1 %245, label %246, label %247

246:                                              ; preds = %242
  call void @abort() #13
  unreachable

247:                                              ; preds = %242
  %248 = shl i64 %244, 1
  %249 = call i8* @_Znwm(i64 %248) #12
  %250 = bitcast i8* %249 to i16*
  %251 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %249, i8** %251, align 8
  %252 = or i64 %244, -9223372036854775808
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %231, i64* %254, align 8
  br label %255

255:                                              ; preds = %247, %233
  %256 = phi i16* [ %234, %233 ], [ %250, %247 ]
  %257 = add nuw nsw i64 %231, 1
  %258 = add i64 %231, 1
  %259 = icmp ult i64 %258, 16
  br i1 %259, label %349, label %260

260:                                              ; preds = %255
  %261 = add i64 %231, 1
  %262 = getelementptr i16, i16* %256, i64 %261
  %263 = getelementptr i16, i16* %229, i64 %261
  %264 = icmp ult i16* %256, %263
  %265 = icmp ult i16* %229, %262
  %266 = and i1 %264, %265
  br i1 %266, label %349, label %267

267:                                              ; preds = %260
  %268 = and i64 %258, -16
  %269 = sub i64 %257, %268
  %270 = getelementptr i16, i16* %229, i64 %268
  %271 = getelementptr i16, i16* %256, i64 %268
  %272 = add i64 %268, -16
  %273 = lshr exact i64 %272, 4
  %274 = add nuw nsw i64 %273, 1
  %275 = and i64 %274, 3
  %276 = icmp ult i64 %272, 48
  br i1 %276, label %328, label %277

277:                                              ; preds = %267
  %278 = sub nsw i64 %274, %275
  br label %279

279:                                              ; preds = %279, %277
  %280 = phi i64 [ 0, %277 ], [ %325, %279 ]
  %281 = phi i64 [ %278, %277 ], [ %326, %279 ]
  %282 = getelementptr i16, i16* %229, i64 %280
  %283 = getelementptr i16, i16* %256, i64 %280
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !143
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !143
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !146, !noalias !143
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !146, !noalias !143
  %292 = or i64 %280, 16
  %293 = getelementptr i16, i16* %229, i64 %292
  %294 = getelementptr i16, i16* %256, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !143
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !143
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !146, !noalias !143
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !146, !noalias !143
  %303 = or i64 %280, 32
  %304 = getelementptr i16, i16* %229, i64 %303
  %305 = getelementptr i16, i16* %256, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !143
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !143
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !146, !noalias !143
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !146, !noalias !143
  %314 = or i64 %280, 48
  %315 = getelementptr i16, i16* %229, i64 %314
  %316 = getelementptr i16, i16* %256, i64 %314
  %317 = bitcast i16* %315 to <8 x i16>*
  %318 = load <8 x i16>, <8 x i16>* %317, align 2, !alias.scope !143
  %319 = getelementptr i16, i16* %315, i64 8
  %320 = bitcast i16* %319 to <8 x i16>*
  %321 = load <8 x i16>, <8 x i16>* %320, align 2, !alias.scope !143
  %322 = bitcast i16* %316 to <8 x i16>*
  store <8 x i16> %318, <8 x i16>* %322, align 2, !alias.scope !146, !noalias !143
  %323 = getelementptr i16, i16* %316, i64 8
  %324 = bitcast i16* %323 to <8 x i16>*
  store <8 x i16> %321, <8 x i16>* %324, align 2, !alias.scope !146, !noalias !143
  %325 = add i64 %280, 64
  %326 = add i64 %281, -4
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %279, !llvm.loop !148

328:                                              ; preds = %279, %267
  %329 = phi i64 [ 0, %267 ], [ %325, %279 ]
  %330 = icmp eq i64 %275, 0
  br i1 %330, label %347, label %331

331:                                              ; preds = %328, %331
  %332 = phi i64 [ %344, %331 ], [ %329, %328 ]
  %333 = phi i64 [ %345, %331 ], [ %275, %328 ]
  %334 = getelementptr i16, i16* %229, i64 %332
  %335 = getelementptr i16, i16* %256, i64 %332
  %336 = bitcast i16* %334 to <8 x i16>*
  %337 = load <8 x i16>, <8 x i16>* %336, align 2, !alias.scope !143
  %338 = getelementptr i16, i16* %334, i64 8
  %339 = bitcast i16* %338 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !143
  %341 = bitcast i16* %335 to <8 x i16>*
  store <8 x i16> %337, <8 x i16>* %341, align 2, !alias.scope !146, !noalias !143
  %342 = getelementptr i16, i16* %335, i64 8
  %343 = bitcast i16* %342 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %343, align 2, !alias.scope !146, !noalias !143
  %344 = add i64 %332, 16
  %345 = add i64 %333, -1
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %347, label %331, !llvm.loop !149

347:                                              ; preds = %331, %328
  %348 = icmp eq i64 %258, %268
  br i1 %348, label %597, label %349

349:                                              ; preds = %347, %260, %255
  %350 = phi i64 [ %257, %260 ], [ %257, %255 ], [ %269, %347 ]
  %351 = phi i16* [ %229, %260 ], [ %229, %255 ], [ %270, %347 ]
  %352 = phi i16* [ %256, %260 ], [ %256, %255 ], [ %271, %347 ]
  %353 = add i64 %350, -1
  %354 = and i64 %350, 7
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %367, label %356

356:                                              ; preds = %349, %356
  %357 = phi i64 [ %362, %356 ], [ %350, %349 ]
  %358 = phi i16* [ %364, %356 ], [ %351, %349 ]
  %359 = phi i16* [ %363, %356 ], [ %352, %349 ]
  %360 = phi i64 [ %365, %356 ], [ %354, %349 ]
  %361 = load i16, i16* %358, align 2
  store i16 %361, i16* %359, align 2
  %362 = add i64 %357, -1
  %363 = getelementptr inbounds i16, i16* %359, i64 1
  %364 = getelementptr inbounds i16, i16* %358, i64 1
  %365 = add i64 %360, -1
  %366 = icmp eq i64 %365, 0
  br i1 %366, label %367, label %356, !llvm.loop !150

367:                                              ; preds = %356, %349
  %368 = phi i64 [ %350, %349 ], [ %362, %356 ]
  %369 = phi i16* [ %351, %349 ], [ %364, %356 ]
  %370 = phi i16* [ %352, %349 ], [ %363, %356 ]
  %371 = icmp ult i64 %353, 7
  br i1 %371, label %597, label %372

372:                                              ; preds = %367, %372
  %373 = phi i64 [ %398, %372 ], [ %368, %367 ]
  %374 = phi i16* [ %400, %372 ], [ %369, %367 ]
  %375 = phi i16* [ %399, %372 ], [ %370, %367 ]
  %376 = load i16, i16* %374, align 2
  store i16 %376, i16* %375, align 2
  %377 = getelementptr inbounds i16, i16* %375, i64 1
  %378 = getelementptr inbounds i16, i16* %374, i64 1
  %379 = load i16, i16* %378, align 2
  store i16 %379, i16* %377, align 2
  %380 = getelementptr inbounds i16, i16* %375, i64 2
  %381 = getelementptr inbounds i16, i16* %374, i64 2
  %382 = load i16, i16* %381, align 2
  store i16 %382, i16* %380, align 2
  %383 = getelementptr inbounds i16, i16* %375, i64 3
  %384 = getelementptr inbounds i16, i16* %374, i64 3
  %385 = load i16, i16* %384, align 2
  store i16 %385, i16* %383, align 2
  %386 = getelementptr inbounds i16, i16* %375, i64 4
  %387 = getelementptr inbounds i16, i16* %374, i64 4
  %388 = load i16, i16* %387, align 2
  store i16 %388, i16* %386, align 2
  %389 = getelementptr inbounds i16, i16* %375, i64 5
  %390 = getelementptr inbounds i16, i16* %374, i64 5
  %391 = load i16, i16* %390, align 2
  store i16 %391, i16* %389, align 2
  %392 = getelementptr inbounds i16, i16* %375, i64 6
  %393 = getelementptr inbounds i16, i16* %374, i64 6
  %394 = load i16, i16* %393, align 2
  store i16 %394, i16* %392, align 2
  %395 = getelementptr inbounds i16, i16* %375, i64 7
  %396 = getelementptr inbounds i16, i16* %374, i64 7
  %397 = load i16, i16* %396, align 2
  store i16 %397, i16* %395, align 2
  %398 = add i64 %373, -8
  %399 = getelementptr inbounds i16, i16* %375, i64 8
  %400 = getelementptr inbounds i16, i16* %374, i64 8
  %401 = icmp eq i64 %398, 0
  br i1 %401, label %597, label %372, !llvm.loop !151

402:                                              ; preds = %218
  %403 = icmp eq i64* %4, null
  br i1 %403, label %417, label %404

404:                                              ; preds = %402
  %405 = load i64, i64* %4, align 8
  %406 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %407 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %406, i64 0, i32 1, i32 1
  %408 = load i8, i8* %407, align 1
  %409 = icmp slt i8 %408, 0
  %410 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %411 = load i64, i64* %410, align 8
  %412 = zext i8 %408 to i64
  %413 = select i1 %409, i64 %411, i64 %412
  %414 = icmp eq i64 %405, %413
  br i1 %414, label %415, label %417

415:                                              ; preds = %404
  %416 = add i64 %405, 1
  store i64 %416, i64* %4, align 8
  br label %417

417:                                              ; preds = %402, %415, %404
  %418 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %419 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %418, i64 0, i32 1, i32 1
  %420 = load i8, i8* %419, align 1
  %421 = icmp slt i8 %420, 0
  br i1 %421, label %424, label %422

422:                                              ; preds = %417
  %423 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %423, i8* nonnull align 8 %194, i64 24, i1 false) #11
  br label %597

424:                                              ; preds = %417
  %425 = load i16*, i16** %195, align 8
  %426 = load i64, i64* %196, align 8
  %427 = icmp ult i64 %426, 11
  br i1 %427, label %428, label %433

428:                                              ; preds = %424
  %429 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %430 = trunc i64 %426 to i8
  %431 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %432 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %431, i64 0, i32 1, i32 1
  store i8 %430, i8* %432, align 1
  br label %450

433:                                              ; preds = %424
  %434 = icmp ugt i64 %426, 9223372036854775791
  br i1 %434, label %435, label %437

435:                                              ; preds = %433
  %436 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %436) #13
  unreachable

437:                                              ; preds = %433
  %438 = add nuw nsw i64 %426, 8
  %439 = and i64 %438, -8
  %440 = icmp slt i64 %439, 0
  br i1 %440, label %441, label %442

441:                                              ; preds = %437
  call void @abort() #13
  unreachable

442:                                              ; preds = %437
  %443 = shl i64 %439, 1
  %444 = call i8* @_Znwm(i64 %443) #12
  %445 = bitcast i8* %444 to i16*
  %446 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %444, i8** %446, align 8
  %447 = or i64 %439, -9223372036854775808
  %448 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %447, i64* %448, align 8
  %449 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %426, i64* %449, align 8
  br label %450

450:                                              ; preds = %442, %428
  %451 = phi i16* [ %429, %428 ], [ %445, %442 ]
  %452 = add nuw nsw i64 %426, 1
  %453 = add i64 %426, 1
  %454 = icmp ult i64 %453, 16
  br i1 %454, label %544, label %455

455:                                              ; preds = %450
  %456 = add i64 %426, 1
  %457 = getelementptr i16, i16* %451, i64 %456
  %458 = getelementptr i16, i16* %425, i64 %456
  %459 = icmp ult i16* %451, %458
  %460 = icmp ult i16* %425, %457
  %461 = and i1 %459, %460
  br i1 %461, label %544, label %462

462:                                              ; preds = %455
  %463 = and i64 %453, -16
  %464 = sub i64 %452, %463
  %465 = getelementptr i16, i16* %425, i64 %463
  %466 = getelementptr i16, i16* %451, i64 %463
  %467 = add i64 %463, -16
  %468 = lshr exact i64 %467, 4
  %469 = add nuw nsw i64 %468, 1
  %470 = and i64 %469, 3
  %471 = icmp ult i64 %467, 48
  br i1 %471, label %523, label %472

472:                                              ; preds = %462
  %473 = sub nsw i64 %469, %470
  br label %474

474:                                              ; preds = %474, %472
  %475 = phi i64 [ 0, %472 ], [ %520, %474 ]
  %476 = phi i64 [ %473, %472 ], [ %521, %474 ]
  %477 = getelementptr i16, i16* %425, i64 %475
  %478 = getelementptr i16, i16* %451, i64 %475
  %479 = bitcast i16* %477 to <8 x i16>*
  %480 = load <8 x i16>, <8 x i16>* %479, align 2, !alias.scope !152
  %481 = getelementptr i16, i16* %477, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !152
  %484 = bitcast i16* %478 to <8 x i16>*
  store <8 x i16> %480, <8 x i16>* %484, align 2, !alias.scope !155, !noalias !152
  %485 = getelementptr i16, i16* %478, i64 8
  %486 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %486, align 2, !alias.scope !155, !noalias !152
  %487 = or i64 %475, 16
  %488 = getelementptr i16, i16* %425, i64 %487
  %489 = getelementptr i16, i16* %451, i64 %487
  %490 = bitcast i16* %488 to <8 x i16>*
  %491 = load <8 x i16>, <8 x i16>* %490, align 2, !alias.scope !152
  %492 = getelementptr i16, i16* %488, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !152
  %495 = bitcast i16* %489 to <8 x i16>*
  store <8 x i16> %491, <8 x i16>* %495, align 2, !alias.scope !155, !noalias !152
  %496 = getelementptr i16, i16* %489, i64 8
  %497 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %497, align 2, !alias.scope !155, !noalias !152
  %498 = or i64 %475, 32
  %499 = getelementptr i16, i16* %425, i64 %498
  %500 = getelementptr i16, i16* %451, i64 %498
  %501 = bitcast i16* %499 to <8 x i16>*
  %502 = load <8 x i16>, <8 x i16>* %501, align 2, !alias.scope !152
  %503 = getelementptr i16, i16* %499, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  %505 = load <8 x i16>, <8 x i16>* %504, align 2, !alias.scope !152
  %506 = bitcast i16* %500 to <8 x i16>*
  store <8 x i16> %502, <8 x i16>* %506, align 2, !alias.scope !155, !noalias !152
  %507 = getelementptr i16, i16* %500, i64 8
  %508 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %505, <8 x i16>* %508, align 2, !alias.scope !155, !noalias !152
  %509 = or i64 %475, 48
  %510 = getelementptr i16, i16* %425, i64 %509
  %511 = getelementptr i16, i16* %451, i64 %509
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !152
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !152
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !155, !noalias !152
  %518 = getelementptr i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !155, !noalias !152
  %520 = add i64 %475, 64
  %521 = add i64 %476, -4
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %474, !llvm.loop !157

523:                                              ; preds = %474, %462
  %524 = phi i64 [ 0, %462 ], [ %520, %474 ]
  %525 = icmp eq i64 %470, 0
  br i1 %525, label %542, label %526

526:                                              ; preds = %523, %526
  %527 = phi i64 [ %539, %526 ], [ %524, %523 ]
  %528 = phi i64 [ %540, %526 ], [ %470, %523 ]
  %529 = getelementptr i16, i16* %425, i64 %527
  %530 = getelementptr i16, i16* %451, i64 %527
  %531 = bitcast i16* %529 to <8 x i16>*
  %532 = load <8 x i16>, <8 x i16>* %531, align 2, !alias.scope !152
  %533 = getelementptr i16, i16* %529, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  %535 = load <8 x i16>, <8 x i16>* %534, align 2, !alias.scope !152
  %536 = bitcast i16* %530 to <8 x i16>*
  store <8 x i16> %532, <8 x i16>* %536, align 2, !alias.scope !155, !noalias !152
  %537 = getelementptr i16, i16* %530, i64 8
  %538 = bitcast i16* %537 to <8 x i16>*
  store <8 x i16> %535, <8 x i16>* %538, align 2, !alias.scope !155, !noalias !152
  %539 = add i64 %527, 16
  %540 = add i64 %528, -1
  %541 = icmp eq i64 %540, 0
  br i1 %541, label %542, label %526, !llvm.loop !158

542:                                              ; preds = %526, %523
  %543 = icmp eq i64 %453, %463
  br i1 %543, label %597, label %544

544:                                              ; preds = %542, %455, %450
  %545 = phi i64 [ %452, %455 ], [ %452, %450 ], [ %464, %542 ]
  %546 = phi i16* [ %425, %455 ], [ %425, %450 ], [ %465, %542 ]
  %547 = phi i16* [ %451, %455 ], [ %451, %450 ], [ %466, %542 ]
  %548 = add i64 %545, -1
  %549 = and i64 %545, 7
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %562, label %551

551:                                              ; preds = %544, %551
  %552 = phi i64 [ %557, %551 ], [ %545, %544 ]
  %553 = phi i16* [ %559, %551 ], [ %546, %544 ]
  %554 = phi i16* [ %558, %551 ], [ %547, %544 ]
  %555 = phi i64 [ %560, %551 ], [ %549, %544 ]
  %556 = load i16, i16* %553, align 2
  store i16 %556, i16* %554, align 2
  %557 = add i64 %552, -1
  %558 = getelementptr inbounds i16, i16* %554, i64 1
  %559 = getelementptr inbounds i16, i16* %553, i64 1
  %560 = add i64 %555, -1
  %561 = icmp eq i64 %560, 0
  br i1 %561, label %562, label %551, !llvm.loop !159

562:                                              ; preds = %551, %544
  %563 = phi i64 [ %545, %544 ], [ %557, %551 ]
  %564 = phi i16* [ %546, %544 ], [ %559, %551 ]
  %565 = phi i16* [ %547, %544 ], [ %558, %551 ]
  %566 = icmp ult i64 %548, 7
  br i1 %566, label %597, label %567

567:                                              ; preds = %562, %567
  %568 = phi i64 [ %593, %567 ], [ %563, %562 ]
  %569 = phi i16* [ %595, %567 ], [ %564, %562 ]
  %570 = phi i16* [ %594, %567 ], [ %565, %562 ]
  %571 = load i16, i16* %569, align 2
  store i16 %571, i16* %570, align 2
  %572 = getelementptr inbounds i16, i16* %570, i64 1
  %573 = getelementptr inbounds i16, i16* %569, i64 1
  %574 = load i16, i16* %573, align 2
  store i16 %574, i16* %572, align 2
  %575 = getelementptr inbounds i16, i16* %570, i64 2
  %576 = getelementptr inbounds i16, i16* %569, i64 2
  %577 = load i16, i16* %576, align 2
  store i16 %577, i16* %575, align 2
  %578 = getelementptr inbounds i16, i16* %570, i64 3
  %579 = getelementptr inbounds i16, i16* %569, i64 3
  %580 = load i16, i16* %579, align 2
  store i16 %580, i16* %578, align 2
  %581 = getelementptr inbounds i16, i16* %570, i64 4
  %582 = getelementptr inbounds i16, i16* %569, i64 4
  %583 = load i16, i16* %582, align 2
  store i16 %583, i16* %581, align 2
  %584 = getelementptr inbounds i16, i16* %570, i64 5
  %585 = getelementptr inbounds i16, i16* %569, i64 5
  %586 = load i16, i16* %585, align 2
  store i16 %586, i16* %584, align 2
  %587 = getelementptr inbounds i16, i16* %570, i64 6
  %588 = getelementptr inbounds i16, i16* %569, i64 6
  %589 = load i16, i16* %588, align 2
  store i16 %589, i16* %587, align 2
  %590 = getelementptr inbounds i16, i16* %570, i64 7
  %591 = getelementptr inbounds i16, i16* %569, i64 7
  %592 = load i16, i16* %591, align 2
  store i16 %592, i16* %590, align 2
  %593 = add i64 %568, -8
  %594 = getelementptr inbounds i16, i16* %570, i64 8
  %595 = getelementptr inbounds i16, i16* %569, i64 8
  %596 = icmp eq i64 %593, 0
  br i1 %596, label %597, label %567, !llvm.loop !160

597:                                              ; preds = %562, %567, %367, %372, %542, %347, %422, %224
  %598 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %598, i64 0, i32 1, i32 1
  %600 = load i8, i8* %599, align 1
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %605

602:                                              ; preds = %597
  %603 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %604 = load i8*, i8** %603, align 8
  call void @_ZdlPv(i8* %604) #12
  br label %605

605:                                              ; preds = %597, %602
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #11
  br label %606

606:                                              ; preds = %158, %163, %138, %15, %605
  ret void
}

declare zeroext i1 @_ZN13url_formatter21CanStripTrailingSlashERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__1plIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS_12basic_stringIT_T0_T1_EERKS9_S6_(%"class.std::__1::basic_string"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #11
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = zext i8 %10 to i64
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %18 = select i1 %11, i64 %13, i64 %16
  %19 = select i1 %11, i16* %15, i16* %17
  %20 = add i64 %18, 1
  %21 = icmp ugt i64 %20, 9223372036854775791
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  %23 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %23) #13
  unreachable

24:                                               ; preds = %3
  %25 = icmp ult i64 %20, 11
  br i1 %25, label %37, label %26

26:                                               ; preds = %24
  %27 = add nuw nsw i64 %18, 9
  %28 = and i64 %27, -8
  %29 = icmp slt i64 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

31:                                               ; preds = %26
  %32 = shl i64 %28, 1
  %33 = tail call i8* @_Znwm(i64 %32) #12
  %34 = bitcast i8* %33 to i16*
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %33, i8** %35, align 8
  %36 = or i64 %28, -9223372036854775808
  store i64 %36, i64* %6, align 8
  store i64 %18, i64* %5, align 8
  br label %43

37:                                               ; preds = %24
  %38 = trunc i64 %18 to i8
  %39 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  store i8 %38, i8* %40, align 1
  %41 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %42 = icmp eq i64 %18, 0
  br i1 %42, label %187, label %43

43:                                               ; preds = %31, %37
  %44 = phi i16* [ %34, %31 ], [ %41, %37 ]
  %45 = icmp ult i64 %18, 16
  br i1 %45, label %134, label %46

46:                                               ; preds = %43
  %47 = getelementptr i16, i16* %44, i64 %18
  %48 = getelementptr i16, i16* %19, i64 %18
  %49 = icmp ult i16* %44, %48
  %50 = icmp ult i16* %19, %47
  %51 = and i1 %49, %50
  br i1 %51, label %134, label %52

52:                                               ; preds = %46
  %53 = and i64 %18, -16
  %54 = sub i64 %18, %53
  %55 = getelementptr i16, i16* %19, i64 %53
  %56 = getelementptr i16, i16* %44, i64 %53
  %57 = add i64 %53, -16
  %58 = lshr exact i64 %57, 4
  %59 = add nuw nsw i64 %58, 1
  %60 = and i64 %59, 3
  %61 = icmp ult i64 %57, 48
  br i1 %61, label %113, label %62

62:                                               ; preds = %52
  %63 = sub nsw i64 %59, %60
  br label %64

64:                                               ; preds = %64, %62
  %65 = phi i64 [ 0, %62 ], [ %110, %64 ]
  %66 = phi i64 [ %63, %62 ], [ %111, %64 ]
  %67 = getelementptr i16, i16* %19, i64 %65
  %68 = getelementptr i16, i16* %44, i64 %65
  %69 = bitcast i16* %67 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !161
  %71 = getelementptr i16, i16* %67, i64 8
  %72 = bitcast i16* %71 to <8 x i16>*
  %73 = load <8 x i16>, <8 x i16>* %72, align 2, !alias.scope !161
  %74 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %74, align 2, !alias.scope !164, !noalias !161
  %75 = getelementptr i16, i16* %68, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  store <8 x i16> %73, <8 x i16>* %76, align 2, !alias.scope !164, !noalias !161
  %77 = or i64 %65, 16
  %78 = getelementptr i16, i16* %19, i64 %77
  %79 = getelementptr i16, i16* %44, i64 %77
  %80 = bitcast i16* %78 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !161
  %82 = getelementptr i16, i16* %78, i64 8
  %83 = bitcast i16* %82 to <8 x i16>*
  %84 = load <8 x i16>, <8 x i16>* %83, align 2, !alias.scope !161
  %85 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %85, align 2, !alias.scope !164, !noalias !161
  %86 = getelementptr i16, i16* %79, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  store <8 x i16> %84, <8 x i16>* %87, align 2, !alias.scope !164, !noalias !161
  %88 = or i64 %65, 32
  %89 = getelementptr i16, i16* %19, i64 %88
  %90 = getelementptr i16, i16* %44, i64 %88
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !161
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !161
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !164, !noalias !161
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !164, !noalias !161
  %99 = or i64 %65, 48
  %100 = getelementptr i16, i16* %19, i64 %99
  %101 = getelementptr i16, i16* %44, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !161
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !161
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !164, !noalias !161
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !164, !noalias !161
  %110 = add i64 %65, 64
  %111 = add i64 %66, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %64, !llvm.loop !166

113:                                              ; preds = %64, %52
  %114 = phi i64 [ 0, %52 ], [ %110, %64 ]
  %115 = icmp eq i64 %60, 0
  br i1 %115, label %132, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %129, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %130, %116 ], [ %60, %113 ]
  %119 = getelementptr i16, i16* %19, i64 %117
  %120 = getelementptr i16, i16* %44, i64 %117
  %121 = bitcast i16* %119 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !161
  %123 = getelementptr i16, i16* %119, i64 8
  %124 = bitcast i16* %123 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !161
  %126 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %126, align 2, !alias.scope !164, !noalias !161
  %127 = getelementptr i16, i16* %120, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %128, align 2, !alias.scope !164, !noalias !161
  %129 = add i64 %117, 16
  %130 = add i64 %118, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %116, !llvm.loop !167

132:                                              ; preds = %116, %113
  %133 = icmp eq i64 %18, %53
  br i1 %133, label %187, label %134

134:                                              ; preds = %132, %46, %43
  %135 = phi i64 [ %18, %46 ], [ %18, %43 ], [ %54, %132 ]
  %136 = phi i16* [ %19, %46 ], [ %19, %43 ], [ %55, %132 ]
  %137 = phi i16* [ %44, %46 ], [ %44, %43 ], [ %56, %132 ]
  %138 = add i64 %135, -1
  %139 = and i64 %135, 7
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %152, label %141

141:                                              ; preds = %134, %141
  %142 = phi i64 [ %147, %141 ], [ %135, %134 ]
  %143 = phi i16* [ %149, %141 ], [ %136, %134 ]
  %144 = phi i16* [ %148, %141 ], [ %137, %134 ]
  %145 = phi i64 [ %150, %141 ], [ %139, %134 ]
  %146 = load i16, i16* %143, align 2
  store i16 %146, i16* %144, align 2
  %147 = add i64 %142, -1
  %148 = getelementptr inbounds i16, i16* %144, i64 1
  %149 = getelementptr inbounds i16, i16* %143, i64 1
  %150 = add i64 %145, -1
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %141, !llvm.loop !168

152:                                              ; preds = %141, %134
  %153 = phi i64 [ %135, %134 ], [ %147, %141 ]
  %154 = phi i16* [ %136, %134 ], [ %149, %141 ]
  %155 = phi i16* [ %137, %134 ], [ %148, %141 ]
  %156 = icmp ult i64 %138, 7
  br i1 %156, label %187, label %157

157:                                              ; preds = %152, %157
  %158 = phi i64 [ %183, %157 ], [ %153, %152 ]
  %159 = phi i16* [ %185, %157 ], [ %154, %152 ]
  %160 = phi i16* [ %184, %157 ], [ %155, %152 ]
  %161 = load i16, i16* %159, align 2
  store i16 %161, i16* %160, align 2
  %162 = getelementptr inbounds i16, i16* %160, i64 1
  %163 = getelementptr inbounds i16, i16* %159, i64 1
  %164 = load i16, i16* %163, align 2
  store i16 %164, i16* %162, align 2
  %165 = getelementptr inbounds i16, i16* %160, i64 2
  %166 = getelementptr inbounds i16, i16* %159, i64 2
  %167 = load i16, i16* %166, align 2
  store i16 %167, i16* %165, align 2
  %168 = getelementptr inbounds i16, i16* %160, i64 3
  %169 = getelementptr inbounds i16, i16* %159, i64 3
  %170 = load i16, i16* %169, align 2
  store i16 %170, i16* %168, align 2
  %171 = getelementptr inbounds i16, i16* %160, i64 4
  %172 = getelementptr inbounds i16, i16* %159, i64 4
  %173 = load i16, i16* %172, align 2
  store i16 %173, i16* %171, align 2
  %174 = getelementptr inbounds i16, i16* %160, i64 5
  %175 = getelementptr inbounds i16, i16* %159, i64 5
  %176 = load i16, i16* %175, align 2
  store i16 %176, i16* %174, align 2
  %177 = getelementptr inbounds i16, i16* %160, i64 6
  %178 = getelementptr inbounds i16, i16* %159, i64 6
  %179 = load i16, i16* %178, align 2
  store i16 %179, i16* %177, align 2
  %180 = getelementptr inbounds i16, i16* %160, i64 7
  %181 = getelementptr inbounds i16, i16* %159, i64 7
  %182 = load i16, i16* %181, align 2
  store i16 %182, i16* %180, align 2
  %183 = add i64 %158, -8
  %184 = getelementptr inbounds i16, i16* %160, i64 8
  %185 = getelementptr inbounds i16, i16* %159, i64 8
  %186 = icmp eq i64 %183, 0
  br i1 %186, label %187, label %157, !llvm.loop !169

187:                                              ; preds = %152, %157, %132, %37
  %188 = phi i16* [ %41, %37 ], [ %44, %132 ], [ %44, %157 ], [ %44, %152 ]
  %189 = getelementptr inbounds i16, i16* %188, i64 %18
  store i16 0, i16* %189, align 2
  %190 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %190, i64 0, i32 1, i32 1
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %187
  %195 = zext i8 %192 to i64
  br label %201

196:                                              ; preds = %187
  %197 = load i64, i64* %6, align 8
  %198 = and i64 %197, 9223372036854775807
  %199 = add nsw i64 %198, -1
  %200 = load i64, i64* %5, align 8
  br label %201

201:                                              ; preds = %196, %194
  %202 = phi i64 [ 10, %194 ], [ %199, %196 ]
  %203 = phi i64 [ %195, %194 ], [ %200, %196 ]
  %204 = icmp eq i64 %203, %202
  br i1 %204, label %205, label %208

205:                                              ; preds = %201
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %0, i64 %202, i64 1, i64 %202, i64 %202, i64 0, i64 0) #11
  %206 = load i8, i8* %191, align 1
  %207 = icmp slt i8 %206, 0
  br i1 %207, label %213, label %209

208:                                              ; preds = %201
  br i1 %193, label %213, label %209

209:                                              ; preds = %208, %205
  %210 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %211 = trunc i64 %203 to i8
  %212 = add i8 %211, 1
  store i8 %212, i8* %191, align 1
  br label %216

213:                                              ; preds = %208, %205
  %214 = load i16*, i16** %4, align 8
  %215 = add i64 %203, 1
  store i64 %215, i64* %5, align 8
  br label %216

216:                                              ; preds = %209, %213
  %217 = phi i16* [ %210, %209 ], [ %214, %213 ]
  %218 = getelementptr inbounds i16, i16* %217, i64 %203
  store i16 %2, i16* %218, align 2
  %219 = getelementptr inbounds i16, i16* %218, i64 1
  store i16 0, i16* %219, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17AutocompleteInput13HasHTTPSchemeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_19HasSchemeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPKc(%"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0))
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_19HasSchemeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPKc(%"class.std::__1::basic_string"* dereferenceable(24), i8*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string.1", align 8
  %4 = alloca %"struct.url::Component", align 4
  %5 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = bitcast %"class.std::__1::basic_string.1"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  %11 = load i8, i8* %9, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i16*, i16** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %16 = select i1 %12, i16* %14, i16* %15
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string.1"* nonnull sret %3, i16* %16, i64 %20) #11
  %21 = bitcast %"struct.url::Component"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 0, i32* %22, align 4
  store i32 -1, i32* %23, align 4
  %24 = bitcast %"class.std::__1::basic_string.1"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = load i8*, i8** %6, align 8
  %29 = load i64, i64* %7, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i8* %28, i8* %5
  %32 = select i1 %27, i64 %29, i64 %30
  %33 = trunc i64 %32 to i32
  %34 = call zeroext i1 @_ZN3url20FindAndCompareSchemeEPKciS1_PNS_9ComponentE(i8* %31, i32 %33, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_ZN12_GLOBAL__N_117kViewSourceSchemeE, i64 0, i64 0), %"struct.url::Component"* nonnull %4) #11
  br i1 %34, label %35, label %49

35:                                               ; preds = %2
  %36 = load i32, i32* %22, align 4
  %37 = load i32, i32* %23, align 4
  %38 = add i32 %36, 1
  %39 = add i32 %38, %37
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %41, label %47

41:                                               ; preds = %35
  %42 = load i8, i8* %25, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %41
  %45 = load i8*, i8** %6, align 8
  store i8 0, i8* %45, align 1
  store i64 0, i64* %7, align 8
  br label %49

46:                                               ; preds = %41
  store i8 0, i8* %5, align 8
  store i8 0, i8* %25, align 1
  br label %49

47:                                               ; preds = %35
  %48 = sext i32 %39 to i64
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string.1"* nonnull %3, i64 0, i64 %48) #11
  br label %49

49:                                               ; preds = %47, %46, %44, %2
  %50 = load i8, i8* %25, align 1
  %51 = icmp slt i8 %50, 0
  %52 = load i8*, i8** %6, align 8
  %53 = load i64, i64* %7, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i8* %52, i8* %5
  %56 = select i1 %51, i64 %53, i64 %54
  %57 = trunc i64 %56 to i32
  %58 = call zeroext i1 @_ZN3url20FindAndCompareSchemeEPKciS1_PNS_9ComponentE(i8* %55, i32 %57, i8* %1, %"struct.url::Component"* null) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %59 = load i8, i8* %25, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %49
  %62 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %49, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN17AutocompleteInput14HasHTTPSSchemeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_19HasSchemeERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEPKc(%"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0))
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput10UpdateTextERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEEmRKN3url6ParsedE(%class.AutocompleteInput*, %"class.std::__1::basic_string"* dereferenceable(24), i64, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  %6 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %9 = tail call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %8, %"struct.url::Parsed"* dereferenceable(80) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17AutocompleteInput5ClearEv(%class.AutocompleteInput*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = alloca %"struct.url::Parsed", align 8
  %4 = alloca %class.GURL, align 8
  %5 = bitcast %class.AutocompleteInput* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %5, i64 0, i32 1, i32 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i16*, i16** %10, align 8
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %12, align 8
  br label %15

13:                                               ; preds = %1
  %14 = bitcast %class.AutocompleteInput* %0 to i16*
  store i16 0, i16* %14, align 2
  store i8 0, i8* %6, align 1
  br label %15

15:                                               ; preds = %9, %13
  %16 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 1
  store i64 -1, i64* %16, align 8
  %17 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #11
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %2) #11
  %18 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  %19 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %18, %class.GURL* nonnull dereferenceable(120) %2) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #11
  %20 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  store i16 0, i16* %27, align 2
  %28 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %28, align 8
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  store i16 0, i16* %30, align 2
  store i8 0, i8* %22, align 1
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 5
  store i32 0, i32* %33, align 4
  %34 = bitcast %"struct.url::Parsed"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %34) #11
  call void @_ZN3url6ParsedC1Ev(%"struct.url::Parsed"* nonnull %3) #11
  %35 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 6
  %36 = call dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* %35, %"struct.url::Parsed"* nonnull dereferenceable(80) %3) #11
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %34) #11
  %37 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  store i16 0, i16* %44, align 2
  %45 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 0, i64* %45, align 8
  br label %48

46:                                               ; preds = %31
  %47 = bitcast %"class.std::__1::basic_string"* %37 to i16*
  store i16 0, i16* %47, align 2
  store i8 0, i8* %39, align 1
  br label %48

48:                                               ; preds = %42, %46
  %49 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %49) #11
  call void @_ZN4GURLC1Ev(%class.GURL* nonnull %4) #11
  %50 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %51 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* %50, %class.GURL* nonnull dereferenceable(120) %4) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %49) #11
  %52 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 10
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 11
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 12
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 14
  store i8 1, i8* %55, align 8
  %56 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 15
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 0
  %58 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %59 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 1
  %60 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %59, align 8
  %61 = icmp eq %"class.std::__1::basic_string"* %60, %58
  br i1 %61, label %74, label %62

62:                                               ; preds = %48, %72
  %63 = phi %"class.std::__1::basic_string"* [ %64, %72 ], [ %60, %48 ]
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 -1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %65, i64 0, i32 1, i32 1
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %62
  %70 = bitcast %"class.std::__1::basic_string"* %64 to i8**
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %69, %62
  %73 = icmp eq %"class.std::__1::basic_string"* %64, %58
  br i1 %73, label %74, label %62

74:                                               ; preds = %72, %48
  store %"class.std::__1::basic_string"* %58, %"class.std::__1::basic_string"** %59, align 8
  %75 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = bitcast %"class.std::__1::basic_string.1"* %79 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %80, i64 0, i32 1, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.std::__1::basic_string.1", %"class.std::__1::basic_string.1"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %84, %78
  store i8 0, i8* %75, align 8
  br label %88

88:                                               ; preds = %74, %87
  %89 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 20
  store i32 0, i32* %89, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK17AutocompleteInput19EstimateMemoryUsageEv(%class.AutocompleteInput*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 0
  %3 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %2) #11
  %4 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 2
  %5 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %4) #11
  %6 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 3
  %7 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %6) #11
  %8 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 7
  %9 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %8) #11
  %10 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 8
  %11 = tail call i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL* %10) #11
  %12 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 9
  %13 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.1"* dereferenceable(24) %12) #11
  %14 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16
  %15 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %19 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 16, i32 0, i32 1
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = icmp eq %"class.std::__1::basic_string"* %22, %20
  br i1 %23, label %31, label %24

24:                                               ; preds = %1, %24
  %25 = phi i64 [ %28, %24 ], [ 0, %1 ]
  %26 = phi %"class.std::__1::basic_string"* [ %29, %24 ], [ %20, %1 ]
  %27 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24) %26) #11
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %30 = icmp eq %"class.std::__1::basic_string"* %29, %22
  br i1 %30, label %31, label %24

31:                                               ; preds = %24, %1
  %32 = phi i64 [ 0, %1 ], [ %28, %24 ]
  %33 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.AutocompleteInput, %class.AutocompleteInput* %0, i64 0, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = tail call i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.1"* dereferenceable(24) %37) #11
  br label %39

39:                                               ; preds = %31, %36
  %40 = phi i64 [ %38, %36 ], [ 0, %31 ]
  %41 = add i64 %5, %3
  %42 = add i64 %41, %7
  %43 = add i64 %42, %9
  %44 = add i64 %43, %11
  %45 = add i64 %44, %13
  %46 = add i64 %45, %17
  %47 = sub i64 %46, %19
  %48 = add i64 %47, %32
  %49 = add i64 %48, %40
  ret i64 %49
}

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIDsNSt3__111char_traitsIDsEENS2_9allocatorIDsEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare i64 @_ZN4base11trace_event19EstimateMemoryUsageIcNSt3__111char_traitsIcEENS2_9allocatorIcEEEEmRKNS2_12basic_stringIT_T0_T1_EE(%"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string.1"* sret, i8*, %"class.std::__1::basic_string.1"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %68, i64 0, i32 1, i32 1
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::basic_string"* %67 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN13url_formatter15OffsetComponentEiPN3url9ComponentE(i32, %"struct.url::Component"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string.1"*, %"class.std::__1::basic_string.1"* dereferenceable(24), i64, i64, %"class.std::__1::allocator.8"* dereferenceable(1)) unnamed_addr #1

declare zeroext i1 @_ZN3url20FindAndCompareSchemeEPKciS1_PNS_9ComponentE(i8*, i32, i8*, %"struct.url::Component"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string.1"*, i64, i64) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.1"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !170
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !170
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !173, !noalias !170
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !173, !noalias !170
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !170
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !170
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !173, !noalias !170
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !173, !noalias !170
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !170
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !170
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !173, !noalias !170
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !173, !noalias !170
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !170
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !170
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !173, !noalias !170
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !173, !noalias !170
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !175

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !170
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !170
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !173, !noalias !170
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !173, !noalias !170
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !176

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !177

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !178

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !179

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !180

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !181

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !183
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !183
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !186, !noalias !183
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !186, !noalias !183
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !183
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !183
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !186, !noalias !183
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !186, !noalias !183
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !183
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !183
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !186, !noalias !183
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !186, !noalias !183
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !183
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !183
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !186, !noalias !183
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !186, !noalias !183
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !188

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !183
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !183
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !186, !noalias !183
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !186, !noalias !183
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !189

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !190

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !191

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEC2ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = zext i8 %8 to i64
  %13 = select i1 %9, i64 %11, i64 %12
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %16) #13
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %21 = select i1 %9, i16* %19, i16* %20
  %22 = getelementptr inbounds i16, i16* %21, i64 %2
  %23 = sub i64 %13, %2
  %24 = icmp ult i64 %23, %3
  %25 = select i1 %24, i64 %23, i64 %3
  %26 = icmp ugt i64 %25, 9223372036854775791
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %28) #13
  unreachable

29:                                               ; preds = %17
  %30 = icmp ult i64 %25, 11
  br i1 %30, label %44, label %31

31:                                               ; preds = %29
  %32 = add nuw nsw i64 %25, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #13
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #12
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %43, align 8
  br label %50

44:                                               ; preds = %29
  %45 = trunc i64 %25 to i8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %46, i64 0, i32 1, i32 1
  store i8 %45, i8* %47, align 1
  %48 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %49 = icmp eq i64 %25, 0
  br i1 %49, label %195, label %50

50:                                               ; preds = %44, %36
  %51 = phi i16* [ %39, %36 ], [ %48, %44 ]
  %52 = icmp ult i64 %25, 16
  br i1 %52, label %142, label %53

53:                                               ; preds = %50
  %54 = getelementptr i16, i16* %51, i64 %25
  %55 = add i64 %25, %2
  %56 = getelementptr i16, i16* %21, i64 %55
  %57 = icmp ult i16* %51, %56
  %58 = icmp ult i16* %22, %54
  %59 = and i1 %57, %58
  br i1 %59, label %142, label %60

60:                                               ; preds = %53
  %61 = and i64 %25, -16
  %62 = sub i64 %25, %61
  %63 = getelementptr i16, i16* %22, i64 %61
  %64 = getelementptr i16, i16* %51, i64 %61
  %65 = add i64 %61, -16
  %66 = lshr exact i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 48
  br i1 %69, label %121, label %70

70:                                               ; preds = %60
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr i16, i16* %22, i64 %73
  %76 = getelementptr i16, i16* %51, i64 %73
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !192
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !192
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !195, !noalias !192
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !195, !noalias !192
  %85 = or i64 %73, 16
  %86 = getelementptr i16, i16* %22, i64 %85
  %87 = getelementptr i16, i16* %51, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !192
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !192
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !195, !noalias !192
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !195, !noalias !192
  %96 = or i64 %73, 32
  %97 = getelementptr i16, i16* %22, i64 %96
  %98 = getelementptr i16, i16* %51, i64 %96
  %99 = bitcast i16* %97 to <8 x i16>*
  %100 = load <8 x i16>, <8 x i16>* %99, align 2, !alias.scope !192
  %101 = getelementptr i16, i16* %97, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !192
  %104 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %100, <8 x i16>* %104, align 2, !alias.scope !195, !noalias !192
  %105 = getelementptr i16, i16* %98, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %106, align 2, !alias.scope !195, !noalias !192
  %107 = or i64 %73, 48
  %108 = getelementptr i16, i16* %22, i64 %107
  %109 = getelementptr i16, i16* %51, i64 %107
  %110 = bitcast i16* %108 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !192
  %112 = getelementptr i16, i16* %108, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !192
  %115 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %115, align 2, !alias.scope !195, !noalias !192
  %116 = getelementptr i16, i16* %109, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %117, align 2, !alias.scope !195, !noalias !192
  %118 = add i64 %73, 64
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !197

121:                                              ; preds = %72, %60
  %122 = phi i64 [ 0, %60 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr i16, i16* %22, i64 %125
  %128 = getelementptr i16, i16* %51, i64 %125
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !192
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !192
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !195, !noalias !192
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !195, !noalias !192
  %137 = add i64 %125, 16
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !198

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %25, %61
  br i1 %141, label %195, label %142

142:                                              ; preds = %140, %53, %50
  %143 = phi i64 [ %25, %53 ], [ %25, %50 ], [ %62, %140 ]
  %144 = phi i16* [ %22, %53 ], [ %22, %50 ], [ %63, %140 ]
  %145 = phi i16* [ %51, %53 ], [ %51, %50 ], [ %64, %140 ]
  %146 = add i64 %143, -1
  %147 = and i64 %143, 7
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %160, label %149

149:                                              ; preds = %142, %149
  %150 = phi i64 [ %155, %149 ], [ %143, %142 ]
  %151 = phi i16* [ %157, %149 ], [ %144, %142 ]
  %152 = phi i16* [ %156, %149 ], [ %145, %142 ]
  %153 = phi i64 [ %158, %149 ], [ %147, %142 ]
  %154 = load i16, i16* %151, align 2
  store i16 %154, i16* %152, align 2
  %155 = add i64 %150, -1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = getelementptr inbounds i16, i16* %151, i64 1
  %158 = add i64 %153, -1
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %149, !llvm.loop !199

160:                                              ; preds = %149, %142
  %161 = phi i64 [ %143, %142 ], [ %155, %149 ]
  %162 = phi i16* [ %144, %142 ], [ %157, %149 ]
  %163 = phi i16* [ %145, %142 ], [ %156, %149 ]
  %164 = icmp ult i64 %146, 7
  br i1 %164, label %195, label %165

165:                                              ; preds = %160, %165
  %166 = phi i64 [ %191, %165 ], [ %161, %160 ]
  %167 = phi i16* [ %193, %165 ], [ %162, %160 ]
  %168 = phi i16* [ %192, %165 ], [ %163, %160 ]
  %169 = load i16, i16* %167, align 2
  store i16 %169, i16* %168, align 2
  %170 = getelementptr inbounds i16, i16* %168, i64 1
  %171 = getelementptr inbounds i16, i16* %167, i64 1
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %168, i64 2
  %174 = getelementptr inbounds i16, i16* %167, i64 2
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %168, i64 3
  %177 = getelementptr inbounds i16, i16* %167, i64 3
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %168, i64 4
  %180 = getelementptr inbounds i16, i16* %167, i64 4
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %168, i64 5
  %183 = getelementptr inbounds i16, i16* %167, i64 5
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = getelementptr inbounds i16, i16* %168, i64 6
  %186 = getelementptr inbounds i16, i16* %167, i64 6
  %187 = load i16, i16* %186, align 2
  store i16 %187, i16* %185, align 2
  %188 = getelementptr inbounds i16, i16* %168, i64 7
  %189 = getelementptr inbounds i16, i16* %167, i64 7
  %190 = load i16, i16* %189, align 2
  store i16 %190, i16* %188, align 2
  %191 = add i64 %166, -8
  %192 = getelementptr inbounds i16, i16* %168, i64 8
  %193 = getelementptr inbounds i16, i16* %167, i64 8
  %194 = icmp eq i64 %191, 0
  br i1 %194, label %195, label %165, !llvm.loop !200

195:                                              ; preds = %160, %165, %140, %44
  %196 = phi i16* [ %48, %44 ], [ %51, %140 ], [ %51, %165 ], [ %51, %160 ]
  %197 = getelementptr inbounds i16, i16* %196, i64 %25
  store i16 0, i16* %197, align 2
  ret void
}

declare zeroext i1 @_ZN3re23RE210FullMatchNERKNS_11StringPieceERKS0_PKPKNS0_3ArgEi(%"class.re2::StringPiece"* dereferenceable(16), %"class.re2::RE2"* dereferenceable(200), %"class.re2::RE2::Arg"**, i32) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.1"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string.1"*, i8*) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string.1"*, i64, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #12
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !201
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !201
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !204, !noalias !201
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !204, !noalias !201
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !201
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !201
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !204, !noalias !201
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !204, !noalias !201
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !201
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !201
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !204, !noalias !201
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !204, !noalias !201
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !201
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !201
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !204, !noalias !201
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !204, !noalias !201
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !206

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !201
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !201
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !204, !noalias !201
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !204, !noalias !201
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !207

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !208

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !209

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !210
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !210
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !213, !noalias !210
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !213, !noalias !210
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !210
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !210
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !213, !noalias !210
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !213, !noalias !210
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !210
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !210
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !213, !noalias !210
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !213, !noalias !210
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !210
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !210
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !213, !noalias !210
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !213, !noalias !210
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !215

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !210
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !210
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !213, !noalias !210
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !213, !noalias !210
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !216

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !217

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !218

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #12
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

declare i64 @_ZNK4GURL19EstimateMemoryUsageEv(%class.GURL*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!5 = distinct !{!5, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!6 = distinct !{!6, !7, !"_ZNK4GURL4hostEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4GURL4hostEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_PKS6_"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!13 = distinct !{!13, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!14 = distinct !{!14, !15, !"_ZNK4GURL4hostEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4GURL4hostEv"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!18 = distinct !{!18, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!19 = distinct !{!19, !20, !"_ZNK4GURL4hostEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4GURL4hostEv"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!23 = distinct !{!23, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!24 = distinct !{!24, !25, !"_ZNK4GURL4hostEv: argument 0"}
!25 = distinct !{!25, !"_ZNK4GURL4hostEv"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!28 = distinct !{!28, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!29 = distinct !{!29, !30, !"_ZNK4GURL4hostEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4GURL4hostEv"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!33 = distinct !{!33, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!34 = distinct !{!34, !35, !"_ZNK4GURL6schemeEv: argument 0"}
!35 = distinct !{!35, !"_ZNK4GURL6schemeEv"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!38 = distinct !{!38, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!39 = distinct !{!39, !40, !"_ZNK4GURL6schemeEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4GURL6schemeEv"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!43 = distinct !{!43, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!44 = distinct !{!44, !45, !"_ZNK4GURL4hostEv: argument 0"}
!45 = distinct !{!45, !"_ZNK4GURL4hostEv"}
!46 = !{!47, !49}
!47 = distinct !{!47, !48, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!48 = distinct !{!48, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!49 = distinct !{!49, !50, !"_ZNK4GURL4portEv: argument 0"}
!50 = distinct !{!50, !"_ZNK4GURL4portEv"}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !57}
!57 = !{!"llvm.loop.isvectorized", i32 1}
!58 = distinct !{!58, !59}
!59 = !{!"llvm.loop.unroll.disable"}
!60 = distinct !{!60, !59}
!61 = distinct !{!61, !57}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !57}
!68 = distinct !{!68, !59}
!69 = distinct !{!69, !59}
!70 = distinct !{!70, !57}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !57}
!77 = distinct !{!77, !59}
!78 = distinct !{!78, !59}
!79 = distinct !{!79, !57}
!80 = !{!81}
!81 = distinct !{!81, !82}
!82 = distinct !{!82, !"LVerDomain"}
!83 = !{!84}
!84 = distinct !{!84, !82}
!85 = distinct !{!85, !57}
!86 = distinct !{!86, !59}
!87 = distinct !{!87, !59}
!88 = distinct !{!88, !57}
!89 = !{!90}
!90 = distinct !{!90, !91}
!91 = distinct !{!91, !"LVerDomain"}
!92 = !{!93}
!93 = distinct !{!93, !91}
!94 = distinct !{!94, !57}
!95 = distinct !{!95, !59}
!96 = distinct !{!96, !59}
!97 = distinct !{!97, !57}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !57}
!104 = distinct !{!104, !59}
!105 = distinct !{!105, !59}
!106 = distinct !{!106, !57}
!107 = !{!108}
!108 = distinct !{!108, !109}
!109 = distinct !{!109, !"LVerDomain"}
!110 = !{!111}
!111 = distinct !{!111, !109}
!112 = distinct !{!112, !57}
!113 = distinct !{!113, !59}
!114 = distinct !{!114, !59}
!115 = distinct !{!115, !57}
!116 = !{!117}
!117 = distinct !{!117, !118}
!118 = distinct !{!118, !"LVerDomain"}
!119 = !{!120}
!120 = distinct !{!120, !118}
!121 = distinct !{!121, !57}
!122 = distinct !{!122, !59}
!123 = distinct !{!123, !59}
!124 = distinct !{!124, !57}
!125 = !{!126}
!126 = distinct !{!126, !127}
!127 = distinct !{!127, !"LVerDomain"}
!128 = !{!129}
!129 = distinct !{!129, !127}
!130 = distinct !{!130, !57}
!131 = distinct !{!131, !59}
!132 = distinct !{!132, !59}
!133 = distinct !{!133, !57}
!134 = !{!135}
!135 = distinct !{!135, !136}
!136 = distinct !{!136, !"LVerDomain"}
!137 = !{!138}
!138 = distinct !{!138, !136}
!139 = distinct !{!139, !57}
!140 = distinct !{!140, !59}
!141 = distinct !{!141, !59}
!142 = distinct !{!142, !57}
!143 = !{!144}
!144 = distinct !{!144, !145}
!145 = distinct !{!145, !"LVerDomain"}
!146 = !{!147}
!147 = distinct !{!147, !145}
!148 = distinct !{!148, !57}
!149 = distinct !{!149, !59}
!150 = distinct !{!150, !59}
!151 = distinct !{!151, !57}
!152 = !{!153}
!153 = distinct !{!153, !154}
!154 = distinct !{!154, !"LVerDomain"}
!155 = !{!156}
!156 = distinct !{!156, !154}
!157 = distinct !{!157, !57}
!158 = distinct !{!158, !59}
!159 = distinct !{!159, !59}
!160 = distinct !{!160, !57}
!161 = !{!162}
!162 = distinct !{!162, !163}
!163 = distinct !{!163, !"LVerDomain"}
!164 = !{!165}
!165 = distinct !{!165, !163}
!166 = distinct !{!166, !57}
!167 = distinct !{!167, !59}
!168 = distinct !{!168, !59}
!169 = distinct !{!169, !57}
!170 = !{!171}
!171 = distinct !{!171, !172}
!172 = distinct !{!172, !"LVerDomain"}
!173 = !{!174}
!174 = distinct !{!174, !172}
!175 = distinct !{!175, !57}
!176 = distinct !{!176, !59}
!177 = distinct !{!177, !59}
!178 = distinct !{!178, !57}
!179 = distinct !{!179, !57}
!180 = distinct !{!180, !59}
!181 = distinct !{!181, !182, !57}
!182 = !{!"llvm.loop.unroll.runtime.disable"}
!183 = !{!184}
!184 = distinct !{!184, !185}
!185 = distinct !{!185, !"LVerDomain"}
!186 = !{!187}
!187 = distinct !{!187, !185}
!188 = distinct !{!188, !57}
!189 = distinct !{!189, !59}
!190 = distinct !{!190, !59}
!191 = distinct !{!191, !57}
!192 = !{!193}
!193 = distinct !{!193, !194}
!194 = distinct !{!194, !"LVerDomain"}
!195 = !{!196}
!196 = distinct !{!196, !194}
!197 = distinct !{!197, !57}
!198 = distinct !{!198, !59}
!199 = distinct !{!199, !59}
!200 = distinct !{!200, !57}
!201 = !{!202}
!202 = distinct !{!202, !203}
!203 = distinct !{!203, !"LVerDomain"}
!204 = !{!205}
!205 = distinct !{!205, !203}
!206 = distinct !{!206, !57}
!207 = distinct !{!207, !59}
!208 = distinct !{!208, !59}
!209 = distinct !{!209, !57}
!210 = !{!211}
!211 = distinct !{!211, !212}
!212 = distinct !{!212, !"LVerDomain"}
!213 = !{!214}
!214 = distinct !{!214, !212}
!215 = distinct !{!215, !57}
!216 = distinct !{!216, !59}
!217 = distinct !{!217, !59}
!218 = distinct !{!218, !57}
